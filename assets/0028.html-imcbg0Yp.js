import{_ as p,r as c,o as u,c as k,a as n,b as e,d as t,w as s,f as h,e as _}from"./app-W22a8w8d.js";const m={},f={id:"_28-找出字符串中第一个匹配项的下标",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#_28-找出字符串中第一个匹配项的下标","aria-hidden":"true"},"#",-1),g={href:"https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"双指针",-1),v=n("code",null,"字符串",-1),x=n("code",null,"字符串匹配",-1),w={href:"https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"LeetCode",-1),E=_('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given two strings <code>needle</code> and <code>haystack</code>, return the index of the first occurrence of <code>needle</code> in <code>haystack</code>, or <code>-1</code> if <code>needle</code> is not part of <code>haystack</code>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: haystack = &quot;sadbutsad&quot;, needle = &quot;sad&quot;</p><p>Output: 0</p><p>Explanation: &quot;sad&quot; occurs at index 0 and 6.</p><p>The first occurrence is at index 0, so we return 0.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: haystack = &quot;leetcode&quot;, needle = &quot;leeto&quot;</p><p>Output: -1</p><p>Explanation: &quot;leeto&quot; did not occur in &quot;leetcode&quot;, so we return -1.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= haystack.length, needle.length &lt;= 10^4</code></li><li><code>haystack</code> and <code>needle</code> consist of only lowercase English characters.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你两个字符串 <code>haystack</code> 和 <code>needle</code> ，请你在 <code>haystack</code> 字符串中找出 <code>needle</code> 字符串的第一个匹配项的下标（下标从 <code>0</code> 开始）。如果 <code>needle</code> 不是 <code>haystack</code> 的一部分，则返回 <code>-1</code> 。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><h3 id="解法一-原生方法" tabindex="-1"><a class="header-anchor" href="#解法一-原生方法" aria-hidden="true">#</a> 解法一：原生方法</h3><p>直接调用 JS 中 <code>String.prototype.indexOf()</code> 方法.</p><h3 id="解法二-手写-indexof" tabindex="-1"><a class="header-anchor" href="#解法二-手写-indexof" aria-hidden="true">#</a> 解法二：手写 indexOf</h3><p>若不能使用原生方法，则手动实现一下 <code>String.prototype.indexOf()</code> 方法，注意几个优化的细节。</p><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2>',16),O=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[e(`/**
 * `),n("span",{class:"token keyword"},"@param"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("string"),n("span",{class:"token punctuation"},"}")]),e(),n("span",{class:"token parameter"},"haystack"),e(`
 * `),n("span",{class:"token keyword"},"@param"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("string"),n("span",{class:"token punctuation"},"}")]),e(),n("span",{class:"token parameter"},"needle"),e(`
 * `),n("span",{class:"token keyword"},"@return"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("number"),n("span",{class:"token punctuation"},"}")]),e(`
 */`)]),e(`
`),n("span",{class:"token keyword"},"var"),e(),n("span",{class:"token function-variable function"},"strStr"),e(),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"function"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[e("haystack"),n("span",{class:"token punctuation"},","),e(" needle")]),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
	`),n("span",{class:"token keyword"},"return"),e(" haystack"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indexOf"),n("span",{class:"token punctuation"},"("),e("needle"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[e(`/**
 * `),n("span",{class:"token keyword"},"@param"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("string"),n("span",{class:"token punctuation"},"}")]),e(),n("span",{class:"token parameter"},"haystack"),e(`
 * `),n("span",{class:"token keyword"},"@param"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("string"),n("span",{class:"token punctuation"},"}")]),e(),n("span",{class:"token parameter"},"needle"),e(`
 * `),n("span",{class:"token keyword"},"@return"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("number"),n("span",{class:"token punctuation"},"}")]),e(`
 */`)]),e(`
`),n("span",{class:"token keyword"},"var"),e(),n("span",{class:"token function-variable function"},"strStr"),e(),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"function"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[e("haystack"),n("span",{class:"token punctuation"},","),e(" needle")]),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
	`),n("span",{class:"token keyword"},"let"),e(" len "),n("span",{class:"token operator"},"="),e(" haystack"),n("span",{class:"token punctuation"},"."),e("length"),n("span",{class:"token punctuation"},","),e(`
		n `),n("span",{class:"token operator"},"="),e(" needle"),n("span",{class:"token punctuation"},"."),e("length"),n("span",{class:"token punctuation"},";"),e(`
	`),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("len "),n("span",{class:"token operator"},"<"),e(" n"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
		`),n("span",{class:"token keyword"},"return"),e(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
	`),n("span",{class:"token punctuation"},"}"),e(`

	`),n("span",{class:"token keyword"},"for"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),e(" i "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),e(" i "),n("span",{class:"token operator"},"<="),e(" len "),n("span",{class:"token operator"},"-"),e(" n"),n("span",{class:"token punctuation"},";"),e(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
		`),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("haystack"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"slice"),n("span",{class:"token punctuation"},"("),e("i"),n("span",{class:"token punctuation"},","),e(" i "),n("span",{class:"token operator"},"+"),e(" n"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token operator"},"==="),e(" needle"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
			`),n("span",{class:"token keyword"},"return"),e(" i"),n("span",{class:"token punctuation"},";"),e(`
		`),n("span",{class:"token punctuation"},"}"),e(`
	`),n("span",{class:"token punctuation"},"}"),e(`

	`),n("span",{class:"token keyword"},"return"),e(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("h2",{id:"相关题目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),e(" 相关题目")],-1),S=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"left"}},"难度")])],-1),L=n("td",{style:{"text-align":"center"}},"214",-1),N={style:{"text-align":"left"}},V={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},A=n("td",{style:{"text-align":"center"}},null,-1),I={style:{"text-align":"left"}},T=n("code",null,"字符串",-1),B=n("code",null,"字符串匹配",-1),R=n("code",null,"哈希函数",-1),G=n("code",null,"1+",-1),H={style:{"text-align":"left"}},J=n("td",{style:{"text-align":"center"}},"459",-1),z={style:{"text-align":"left"}},D={href:"https://leetcode.com/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},F={style:{"text-align":"center"}},K={style:{"text-align":"left"}},M=n("code",null,"字符串",-1),P=n("code",null,"字符串匹配",-1),Q={style:{"text-align":"left"}};function U(W,X){const o=c("ExternalLinkIcon"),l=c("font"),a=c("RouterLink"),d=c("CodeTabs");return u(),k("div",null,[n("h1",f,[b,e(),n("a",g,[e("28. 找出字符串中第一个匹配项的下标"),t(o)])]),n("p",null,[e("🟢 "),t(l,{color:"#15bd66"},{default:s(()=>[e("Easy")]),_:1}),e("  🔖  "),t(a,{to:"/tag/two-pointers.html"},{default:s(()=>[y]),_:1}),e(),t(a,{to:"/tag/string.html"},{default:s(()=>[v]),_:1}),e(),t(a,{to:"/tag/string-matching.html"},{default:s(()=>[x]),_:1}),e("  🔗 "),n("a",w,[q,t(o)])]),E,t(d,{id:"82",data:[{id:"原生方法"},{id:"手写 indexOf"}]},{title0:s(({value:i,isActive:r})=>[e("原生方法")]),title1:s(({value:i,isActive:r})=>[e("手写 indexOf")]),tab0:s(({value:i,isActive:r})=>[O]),tab1:s(({value:i,isActive:r})=>[C]),_:1}),j,h(" prettier-ignore "),n("table",null,[S,n("tbody",null,[n("tr",null,[L,n("td",N,[n("a",V,[e("最短回文串"),t(o)])]),A,n("td",I,[t(a,{to:"/tag/string.html"},{default:s(()=>[T]),_:1}),e(),t(a,{to:"/tag/string-matching.html"},{default:s(()=>[B]),_:1}),e(),t(a,{to:"/tag/hash-function.html"},{default:s(()=>[R]),_:1}),e(),G]),n("td",H,[t(l,{color:"#ff334b"},{default:s(()=>[e("Hard")]),_:1})])]),n("tr",null,[J,n("td",z,[n("a",D,[e("重复的子字符串"),t(o)])]),n("td",F,[t(a,{to:"/problem/0459.html"},{default:s(()=>[e("[✓]")]),_:1})]),n("td",K,[t(a,{to:"/tag/string.html"},{default:s(()=>[M]),_:1}),e(),t(a,{to:"/tag/string-matching.html"},{default:s(()=>[P]),_:1})]),n("td",Q,[t(l,{color:"#15bd66"},{default:s(()=>[e("Easy")]),_:1})])])])])])}const Z=p(m,[["render",U],["__file","0028.html.vue"]]);export{Z as default};
