import{_ as c,r as _,o as a,c as i,a as t,d as e,w as o,b as l,f as r}from"./app-JOMdB8bl.js";const h={},f=t("h1",{id:"栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#栈","aria-hidden":"true"},"#"),l(" 栈")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),b=t("span",{class:"blue"},"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),H=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),E=t("code",null,"字符串匹配",-1),q=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),j=t("code",null,"二叉搜索树",-1),O=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),L=t("code",null,"有序集合",-1),B=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),C=t("code",null,"强连通分量",-1),Q=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),Z=t("code",null,"并查集",-1),G=t("code",null,"字典树",-1),K=t("code",null,"线段树",-1),S=t("code",null,"树状数组",-1),T=t("code",null,"后缀数组",-1),U=t("p",null,[t("strong",null,"算法")],-1),X=t("code",null,"枚举",-1),Y=t("code",null,"递归",-1),A=t("code",null,"分治",-1),P=t("code",null,"回溯",-1),D=t("code",null,"贪心",-1),F=t("code",null,"动态规划",-1),J=t("code",null,"排序",-1),W=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),ct=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),Ht=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),Et=t("code",null,"数据库",-1),qt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),jt=t("code",null,"脑筋急转弯",-1),Ot=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Lt=t("code",null,"多线程",-1),Bt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ct=t("td",{style:{"text-align":"center"}},"20",-1),Qt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"center"}},Gt={style:{"text-align":"left"}},Kt=t("code",null,"栈",-1),St=t("code",null,"字符串",-1),Tt={style:{"text-align":"left"}},Ut=t("td",{style:{"text-align":"center"}},"32",-1),Xt={style:{"text-align":"left"}},Yt={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},At={style:{"text-align":"center"}},Pt={style:{"text-align":"left"}},Dt=t("code",null,"栈",-1),Ft=t("code",null,"字符串",-1),Jt=t("code",null,"动态规划",-1),Wt={style:{"text-align":"left"}},$t=t("td",{style:{"text-align":"center"}},"42",-1),te={style:{"text-align":"left"}},ee={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},le={style:{"text-align":"center"}},oe={style:{"text-align":"left"}},se=t("code",null,"栈",-1),ne=t("code",null,"数组",-1),de=t("code",null,"双指针",-1),_e=t("code",null,"2+",-1),ce={style:{"text-align":"left"}},ae=t("td",{style:{"text-align":"center"}},"71",-1),ie={style:{"text-align":"left"}},re={href:"https://leetcode.com/problems/simplify-path",target:"_blank",rel:"noopener noreferrer"},he={style:{"text-align":"center"}},fe={style:{"text-align":"left"}},ue=t("code",null,"栈",-1),ge=t("code",null,"字符串",-1),me={style:{"text-align":"left"}},ye=t("td",{style:{"text-align":"center"}},"84",-1),xe={style:{"text-align":"left"}},pe={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},be={style:{"text-align":"center"}},ke={style:{"text-align":"left"}},Me=t("code",null,"栈",-1),Ie=t("code",null,"数组",-1),ve=t("code",null,"单调栈",-1),He={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"85",-1),Ee={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},ze={style:{"text-align":"center"}},je={style:{"text-align":"left"}},Oe=t("code",null,"栈",-1),Ne=t("code",null,"数组",-1),Le=t("code",null,"动态规划",-1),Be=t("code",null,"2+",-1),Ve={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"94",-1),Qe={style:{"text-align":"left"}},Re={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ze={style:{"text-align":"center"}},Ge={style:{"text-align":"left"}},Ke=t("code",null,"栈",-1),Se=t("code",null,"树",-1),Te=t("code",null,"深度优先搜索",-1),Ue=t("code",null,"1+",-1),Xe={style:{"text-align":"left"}},Ye=t("td",{style:{"text-align":"center"}},"114",-1),Ae={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},De={style:{"text-align":"center"}},Fe={style:{"text-align":"left"}},Je=t("code",null,"栈",-1),We=t("code",null,"树",-1),$e=t("code",null,"深度优先搜索",-1),tl=t("code",null,"2+",-1),el={style:{"text-align":"left"}},ll=t("td",{style:{"text-align":"center"}},"143",-1),ol={style:{"text-align":"left"}},sl={href:"https://leetcode.com/problems/reorder-list",target:"_blank",rel:"noopener noreferrer"},nl={style:{"text-align":"center"}},dl={style:{"text-align":"left"}},_l=t("code",null,"栈",-1),cl=t("code",null,"递归",-1),al=t("code",null,"链表",-1),il=t("code",null,"1+",-1),rl={style:{"text-align":"left"}},hl=t("td",{style:{"text-align":"center"}},"144",-1),fl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},gl={style:{"text-align":"center"}},ml={style:{"text-align":"left"}},yl=t("code",null,"栈",-1),xl=t("code",null,"树",-1),pl=t("code",null,"深度优先搜索",-1),bl=t("code",null,"1+",-1),kl={style:{"text-align":"left"}},Ml=t("td",{style:{"text-align":"center"}},"145",-1),Il={style:{"text-align":"left"}},vl={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Hl={style:{"text-align":"center"}},wl={style:{"text-align":"left"}},El=t("code",null,"栈",-1),ql=t("code",null,"树",-1),zl=t("code",null,"深度优先搜索",-1),jl=t("code",null,"1+",-1),Ol={style:{"text-align":"left"}},Nl=t("td",{style:{"text-align":"center"}},"150",-1),Ll={style:{"text-align":"left"}},Bl={href:"https://leetcode.com/problems/evaluate-reverse-polish-notation",target:"_blank",rel:"noopener noreferrer"},Vl={style:{"text-align":"center"}},Cl={style:{"text-align":"left"}},Ql=t("code",null,"栈",-1),Rl=t("code",null,"数组",-1),Zl=t("code",null,"数学",-1),Gl={style:{"text-align":"left"}},Kl=t("td",{style:{"text-align":"center"}},"155",-1),Sl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/min-stack",target:"_blank",rel:"noopener noreferrer"},Ul={style:{"text-align":"center"}},Xl={style:{"text-align":"left"}},Yl=t("code",null,"栈",-1),Al=t("code",null,"设计",-1),Pl={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"173",-1),Fl={style:{"text-align":"left"}},Jl={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Wl={style:{"text-align":"center"}},$l={style:{"text-align":"left"}},to=t("code",null,"栈",-1),eo=t("code",null,"树",-1),lo=t("code",null,"设计",-1),oo=t("code",null,"3+",-1),so={style:{"text-align":"left"}},no=t("td",{style:{"text-align":"center"}},"224",-1),_o={style:{"text-align":"left"}},co={href:"https://leetcode.com/problems/basic-calculator",target:"_blank",rel:"noopener noreferrer"},ao={style:{"text-align":"center"}},io={style:{"text-align":"left"}},ro=t("code",null,"栈",-1),ho=t("code",null,"递归",-1),fo=t("code",null,"数学",-1),uo=t("code",null,"1+",-1),go={style:{"text-align":"left"}},mo=t("td",{style:{"text-align":"center"}},"225",-1),yo={style:{"text-align":"left"}},xo={href:"https://leetcode.com/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},po={style:{"text-align":"center"}},bo={style:{"text-align":"left"}},ko=t("code",null,"栈",-1),Mo=t("code",null,"设计",-1),Io=t("code",null,"队列",-1),vo={style:{"text-align":"left"}},Ho=t("td",{style:{"text-align":"center"}},"227",-1),wo={style:{"text-align":"left"}},Eo={href:"https://leetcode.com/problems/basic-calculator-ii",target:"_blank",rel:"noopener noreferrer"},qo={style:{"text-align":"center"}},zo={style:{"text-align":"left"}},jo=t("code",null,"栈",-1),Oo=t("code",null,"数学",-1),No=t("code",null,"字符串",-1),Lo={style:{"text-align":"left"}},Bo=t("td",{style:{"text-align":"center"}},"232",-1),Vo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},Qo={style:{"text-align":"center"}},Ro={style:{"text-align":"left"}},Zo=t("code",null,"栈",-1),Go=t("code",null,"设计",-1),Ko=t("code",null,"队列",-1),So={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"234",-1),Uo={style:{"text-align":"left"}},Xo={href:"https://leetcode.com/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},Yo={style:{"text-align":"center"}},Ao={style:{"text-align":"left"}},Po=t("code",null,"栈",-1),Do=t("code",null,"递归",-1),Fo=t("code",null,"链表",-1),Jo=t("code",null,"1+",-1),Wo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"255",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},null,-1),os={style:{"text-align":"left"}},ss=t("code",null,"栈",-1),ns=t("code",null,"树",-1),ds=t("code",null,"二叉搜索树",-1),_s=t("code",null,"4+",-1),cs={style:{"text-align":"left"}},as=t("td",{style:{"text-align":"center"}},"272",-1),is={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},hs=t("td",{style:{"text-align":"center"}},null,-1),fs={style:{"text-align":"left"}},us=t("code",null,"栈",-1),gs=t("code",null,"树",-1),ms=t("code",null,"深度优先搜索",-1),ys=t("code",null,"4+",-1),xs={style:{"text-align":"left"}},ps=t("td",{style:{"text-align":"center"}},"316",-1),bs={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},Ms={style:{"text-align":"center"}},Is={style:{"text-align":"left"}},vs=t("code",null,"栈",-1),Hs=t("code",null,"贪心",-1),ws=t("code",null,"字符串",-1),Es=t("code",null,"1+",-1),qs={style:{"text-align":"left"}},zs=t("td",{style:{"text-align":"center"}},"321",-1),js={style:{"text-align":"left"}},Os={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),Ls={style:{"text-align":"left"}},Bs=t("code",null,"栈",-1),Vs=t("code",null,"贪心",-1),Cs=t("code",null,"数组",-1),Qs=t("code",null,"2+",-1),Rs={style:{"text-align":"left"}},Zs=t("td",{style:{"text-align":"center"}},"331",-1),Gs={style:{"text-align":"left"}},Ks={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ss=t("td",{style:{"text-align":"center"}},null,-1),Ts={style:{"text-align":"left"}},Us=t("code",null,"栈",-1),Xs=t("code",null,"树",-1),Ys=t("code",null,"字符串",-1),As=t("code",null,"1+",-1),Ps={style:{"text-align":"left"}},Ds=t("td",{style:{"text-align":"center"}},"341",-1),Fs={style:{"text-align":"left"}},Js={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},Ws=t("td",{style:{"text-align":"center"}},null,-1),$s={style:{"text-align":"left"}},tn=t("code",null,"栈",-1),en=t("code",null,"树",-1),ln=t("code",null,"深度优先搜索",-1),on=t("code",null,"3+",-1),sn={style:{"text-align":"left"}},nn=t("td",{style:{"text-align":"center"}},"364",-1),dn={style:{"text-align":"left"}},_n={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},cn=t("td",{style:{"text-align":"center"}},null,-1),an={style:{"text-align":"left"}},rn=t("code",null,"栈",-1),hn=t("code",null,"深度优先搜索",-1),fn=t("code",null,"广度优先搜索",-1),un={style:{"text-align":"left"}},gn=t("td",{style:{"text-align":"center"}},"385",-1),mn={style:{"text-align":"left"}},yn={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},xn=t("td",{style:{"text-align":"center"}},null,-1),pn={style:{"text-align":"left"}},bn=t("code",null,"栈",-1),kn=t("code",null,"深度优先搜索",-1),Mn=t("code",null,"字符串",-1),In={style:{"text-align":"left"}},vn=t("td",{style:{"text-align":"center"}},"388",-1),Hn={style:{"text-align":"left"}},wn={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},En=t("td",{style:{"text-align":"center"}},null,-1),qn={style:{"text-align":"left"}},zn=t("code",null,"栈",-1),jn=t("code",null,"深度优先搜索",-1),On=t("code",null,"字符串",-1),Nn={style:{"text-align":"left"}},Ln=t("td",{style:{"text-align":"center"}},"394",-1),Bn={style:{"text-align":"left"}},Vn={href:"https://leetcode.com/problems/decode-string",target:"_blank",rel:"noopener noreferrer"},Cn={style:{"text-align":"center"}},Qn={style:{"text-align":"left"}},Rn=t("code",null,"栈",-1),Zn=t("code",null,"递归",-1),Gn=t("code",null,"字符串",-1),Kn={style:{"text-align":"left"}},Sn=t("td",{style:{"text-align":"center"}},"402",-1),Tn={style:{"text-align":"left"}},Un={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},Xn=t("td",{style:{"text-align":"center"}},null,-1),Yn={style:{"text-align":"left"}},An=t("code",null,"栈",-1),Pn=t("code",null,"贪心",-1),Dn=t("code",null,"字符串",-1),Fn=t("code",null,"1+",-1),Jn={style:{"text-align":"left"}},Wn=t("td",{style:{"text-align":"center"}},"426",-1),$n={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ed={style:{"text-align":"center"}},ld={style:{"text-align":"left"}},od=t("code",null,"栈",-1),sd=t("code",null,"树",-1),nd=t("code",null,"深度优先搜索",-1),dd=t("code",null,"4+",-1),_d={style:{"text-align":"left"}},cd=t("td",{style:{"text-align":"center"}},"439",-1),ad={style:{"text-align":"left"}},id={href:"https://leetcode.com/problems/ternary-expression-parser",target:"_blank",rel:"noopener noreferrer"},rd=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},fd=t("code",null,"栈",-1),ud=t("code",null,"递归",-1),gd=t("code",null,"字符串",-1),md={style:{"text-align":"left"}},yd=t("td",{style:{"text-align":"center"}},"445",-1),xd={style:{"text-align":"left"}},pd={href:"https://leetcode.com/problems/add-two-numbers-ii",target:"_blank",rel:"noopener noreferrer"},bd={style:{"text-align":"center"}},kd={style:{"text-align":"left"}},Md=t("code",null,"栈",-1),Id=t("code",null,"链表",-1),vd=t("code",null,"数学",-1),Hd={style:{"text-align":"left"}},wd=t("td",{style:{"text-align":"center"}},"456",-1),Ed={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},null,-1),jd={style:{"text-align":"left"}},Od=t("code",null,"栈",-1),Nd=t("code",null,"数组",-1),Ld=t("code",null,"二分查找",-1),Bd=t("code",null,"2+",-1),Vd={style:{"text-align":"left"}},Cd=t("td",{style:{"text-align":"center"}},"484",-1),Qd={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/find-permutation",target:"_blank",rel:"noopener noreferrer"},Zd=t("td",{style:{"text-align":"center"}},null,-1),Gd={style:{"text-align":"left"}},Kd=t("code",null,"栈",-1),Sd=t("code",null,"贪心",-1),Td=t("code",null,"数组",-1),Ud=t("code",null,"1+",-1),Xd={style:{"text-align":"left"}},Yd=t("td",{style:{"text-align":"center"}},"488",-1),Ad={style:{"text-align":"left"}},Pd={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},Dd=t("td",{style:{"text-align":"center"}},null,-1),Fd={style:{"text-align":"left"}},Jd=t("code",null,"栈",-1),Wd=t("code",null,"广度优先搜索",-1),$d=t("code",null,"记忆化搜索",-1),t_=t("code",null,"2+",-1),e_={style:{"text-align":"left"}},l_=t("td",{style:{"text-align":"center"}},"496",-1),o_={style:{"text-align":"left"}},s_={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},n_={style:{"text-align":"center"}},d_={style:{"text-align":"left"}},__=t("code",null,"栈",-1),c_=t("code",null,"数组",-1),a_=t("code",null,"哈希表",-1),i_=t("code",null,"1+",-1),r_={style:{"text-align":"left"}},h_=t("td",{style:{"text-align":"center"}},"503",-1),f_={style:{"text-align":"left"}},u_={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},g_={style:{"text-align":"center"}},m_={style:{"text-align":"left"}},y_=t("code",null,"栈",-1),x_=t("code",null,"数组",-1),p_=t("code",null,"单调栈",-1),b_={style:{"text-align":"left"}},k_=t("td",{style:{"text-align":"center"}},"536",-1),M_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},v_=t("td",{style:{"text-align":"center"}},null,-1),H_={style:{"text-align":"left"}},w_=t("code",null,"栈",-1),E_=t("code",null,"树",-1),q_=t("code",null,"深度优先搜索",-1),z_=t("code",null,"2+",-1),j_={style:{"text-align":"left"}},O_=t("td",{style:{"text-align":"center"}},"581",-1),N_={style:{"text-align":"left"}},L_={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},null,-1),V_={style:{"text-align":"left"}},C_=t("code",null,"栈",-1),Q_=t("code",null,"贪心",-1),R_=t("code",null,"数组",-1),Z_=t("code",null,"3+",-1),G_={style:{"text-align":"left"}},K_=t("td",{style:{"text-align":"center"}},"589",-1),S_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},U_={style:{"text-align":"center"}},X_={style:{"text-align":"left"}},Y_=t("code",null,"栈",-1),A_=t("code",null,"树",-1),P_=t("code",null,"深度优先搜索",-1),D_={style:{"text-align":"left"}},F_=t("td",{style:{"text-align":"center"}},"590",-1),J_={style:{"text-align":"left"}},W_={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},$_={style:{"text-align":"center"}},tc={style:{"text-align":"left"}},ec=t("code",null,"栈",-1),lc=t("code",null,"树",-1),oc=t("code",null,"深度优先搜索",-1),sc={style:{"text-align":"left"}},nc=t("td",{style:{"text-align":"center"}},"591",-1),dc={style:{"text-align":"left"}},_c={href:"https://leetcode.com/problems/tag-validator",target:"_blank",rel:"noopener noreferrer"},cc=t("td",{style:{"text-align":"center"}},null,-1),ac={style:{"text-align":"left"}},ic=t("code",null,"栈",-1),rc=t("code",null,"字符串",-1),hc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"636",-1),uc={style:{"text-align":"left"}},gc={href:"https://leetcode.com/problems/exclusive-time-of-functions",target:"_blank",rel:"noopener noreferrer"},mc=t("td",{style:{"text-align":"center"}},null,-1),yc={style:{"text-align":"left"}},xc=t("code",null,"栈",-1),pc=t("code",null,"数组",-1),bc={style:{"text-align":"left"}},kc=t("td",{style:{"text-align":"center"}},"654",-1),Mc={style:{"text-align":"left"}},Ic={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},vc={style:{"text-align":"center"}},Hc={style:{"text-align":"left"}},wc=t("code",null,"栈",-1),Ec=t("code",null,"树",-1),qc=t("code",null,"数组",-1),zc=t("code",null,"3+",-1),jc={style:{"text-align":"left"}},Oc=t("td",{style:{"text-align":"center"}},"678",-1),Nc={style:{"text-align":"left"}},Lc={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},Bc={style:{"text-align":"center"}},Vc={style:{"text-align":"left"}},Cc=t("code",null,"栈",-1),Qc=t("code",null,"贪心",-1),Rc=t("code",null,"字符串",-1),Zc=t("code",null,"1+",-1),Gc={style:{"text-align":"left"}},Kc=t("td",{style:{"text-align":"center"}},"682",-1),Sc={style:{"text-align":"left"}},Tc={href:"https://leetcode.com/problems/baseball-game",target:"_blank",rel:"noopener noreferrer"},Uc={style:{"text-align":"center"}},Xc={style:{"text-align":"left"}},Yc=t("code",null,"栈",-1),Ac=t("code",null,"数组",-1),Pc=t("code",null,"模拟",-1),Dc={style:{"text-align":"left"}},Fc=t("td",{style:{"text-align":"center"}},"716",-1),Jc={style:{"text-align":"left"}},Wc={href:"https://leetcode.com/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},$c=t("td",{style:{"text-align":"center"}},null,-1),ta={style:{"text-align":"left"}},ea=t("code",null,"栈",-1),la=t("code",null,"设计",-1),oa=t("code",null,"链表",-1),sa=t("code",null,"2+",-1),na={style:{"text-align":"left"}},da=t("td",{style:{"text-align":"center"}},"726",-1),_a={style:{"text-align":"left"}},ca={href:"https://leetcode.com/problems/number-of-atoms",target:"_blank",rel:"noopener noreferrer"},aa=t("td",{style:{"text-align":"center"}},null,-1),ia={style:{"text-align":"left"}},ra=t("code",null,"栈",-1),ha=t("code",null,"哈希表",-1),fa=t("code",null,"字符串",-1),ua=t("code",null,"1+",-1),ga={style:{"text-align":"left"}},ma=t("td",{style:{"text-align":"center"}},"735",-1),ya={style:{"text-align":"left"}},xa={href:"https://leetcode.com/problems/asteroid-collision",target:"_blank",rel:"noopener noreferrer"},pa=t("td",{style:{"text-align":"center"}},null,-1),ba={style:{"text-align":"left"}},ka=t("code",null,"栈",-1),Ma=t("code",null,"数组",-1),Ia=t("code",null,"模拟",-1),va={style:{"text-align":"left"}},Ha=t("td",{style:{"text-align":"center"}},"736",-1),wa={style:{"text-align":"left"}},Ea={href:"https://leetcode.com/problems/parse-lisp-expression",target:"_blank",rel:"noopener noreferrer"},qa=t("td",{style:{"text-align":"center"}},null,-1),za={style:{"text-align":"left"}},ja=t("code",null,"栈",-1),Oa=t("code",null,"递归",-1),Na=t("code",null,"哈希表",-1),La=t("code",null,"1+",-1),Ba={style:{"text-align":"left"}},Va=t("td",{style:{"text-align":"center"}},"739",-1),Ca={style:{"text-align":"left"}},Qa={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},Ra={style:{"text-align":"center"}},Za={style:{"text-align":"left"}},Ga=t("code",null,"栈",-1),Ka=t("code",null,"数组",-1),Sa=t("code",null,"单调栈",-1),Ta={style:{"text-align":"left"}},Ua=t("td",{style:{"text-align":"center"}},"768",-1),Xa={style:{"text-align":"left"}},Ya={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},Aa=t("td",{style:{"text-align":"center"}},null,-1),Pa={style:{"text-align":"left"}},Da=t("code",null,"栈",-1),Fa=t("code",null,"贪心",-1),Ja=t("code",null,"数组",-1),Wa=t("code",null,"2+",-1),$a={style:{"text-align":"left"}},ti=t("td",{style:{"text-align":"center"}},"769",-1),ei={style:{"text-align":"left"}},li={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},oi=t("td",{style:{"text-align":"center"}},null,-1),si={style:{"text-align":"left"}},ni=t("code",null,"栈",-1),di=t("code",null,"贪心",-1),_i=t("code",null,"数组",-1),ci=t("code",null,"2+",-1),ai={style:{"text-align":"left"}},ii=t("td",{style:{"text-align":"center"}},"770",-1),ri={style:{"text-align":"left"}},hi={href:"https://leetcode.com/problems/basic-calculator-iv",target:"_blank",rel:"noopener noreferrer"},fi=t("td",{style:{"text-align":"center"}},null,-1),ui={style:{"text-align":"left"}},gi=t("code",null,"栈",-1),mi=t("code",null,"递归",-1),yi=t("code",null,"哈希表",-1),xi=t("code",null,"2+",-1),pi={style:{"text-align":"left"}},bi=t("td",{style:{"text-align":"center"}},"772",-1),ki={style:{"text-align":"left"}},Mi={href:"https://leetcode.com/problems/basic-calculator-iii",target:"_blank",rel:"noopener noreferrer"},Ii={style:{"text-align":"center"}},vi={style:{"text-align":"left"}},Hi=t("code",null,"栈",-1),wi=t("code",null,"递归",-1),Ei=t("code",null,"数学",-1),qi=t("code",null,"1+",-1),zi={style:{"text-align":"left"}},ji=t("td",{style:{"text-align":"center"}},"844",-1),Oi={style:{"text-align":"left"}},Ni={href:"https://leetcode.com/problems/backspace-string-compare",target:"_blank",rel:"noopener noreferrer"},Li={style:{"text-align":"center"}},Bi={style:{"text-align":"left"}},Vi=t("code",null,"栈",-1),Ci=t("code",null,"双指针",-1),Qi=t("code",null,"字符串",-1),Ri=t("code",null,"1+",-1),Zi={style:{"text-align":"left"}},Gi=t("td",{style:{"text-align":"center"}},"853",-1),Ki={style:{"text-align":"left"}},Si={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},Ti=t("td",{style:{"text-align":"center"}},null,-1),Ui={style:{"text-align":"left"}},Xi=t("code",null,"栈",-1),Yi=t("code",null,"数组",-1),Ai=t("code",null,"排序",-1),Pi=t("code",null,"1+",-1),Di={style:{"text-align":"left"}},Fi=t("td",{style:{"text-align":"center"}},"856",-1),Ji={style:{"text-align":"left"}},Wi={href:"https://leetcode.com/problems/score-of-parentheses",target:"_blank",rel:"noopener noreferrer"},$i=t("td",{style:{"text-align":"center"}},null,-1),t1={style:{"text-align":"left"}},e1=t("code",null,"栈",-1),l1=t("code",null,"字符串",-1),o1={style:{"text-align":"left"}},s1=t("td",{style:{"text-align":"center"}},"880",-1),n1={style:{"text-align":"left"}},d1={href:"https://leetcode.com/problems/decoded-string-at-index",target:"_blank",rel:"noopener noreferrer"},_1={style:{"text-align":"center"}},c1={style:{"text-align":"left"}},a1=t("code",null,"栈",-1),i1=t("code",null,"字符串",-1),r1={style:{"text-align":"left"}},h1=t("td",{style:{"text-align":"center"}},"895",-1),f1={style:{"text-align":"left"}},u1={href:"https://leetcode.com/problems/maximum-frequency-stack",target:"_blank",rel:"noopener noreferrer"},g1=t("td",{style:{"text-align":"center"}},null,-1),m1={style:{"text-align":"left"}},y1=t("code",null,"栈",-1),x1=t("code",null,"设计",-1),p1=t("code",null,"哈希表",-1),b1=t("code",null,"1+",-1),k1={style:{"text-align":"left"}},M1=t("td",{style:{"text-align":"center"}},"897",-1),I1={style:{"text-align":"left"}},v1={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},H1=t("td",{style:{"text-align":"center"}},null,-1),w1={style:{"text-align":"left"}},E1=t("code",null,"栈",-1),q1=t("code",null,"树",-1),z1=t("code",null,"深度优先搜索",-1),j1=t("code",null,"2+",-1),O1={style:{"text-align":"left"}},N1=t("td",{style:{"text-align":"center"}},"901",-1),L1={style:{"text-align":"left"}},B1={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},V1=t("td",{style:{"text-align":"center"}},null,-1),C1={style:{"text-align":"left"}},Q1=t("code",null,"栈",-1),R1=t("code",null,"设计",-1),Z1=t("code",null,"数据流",-1),G1=t("code",null,"1+",-1),K1={style:{"text-align":"left"}},S1=t("td",{style:{"text-align":"center"}},"907",-1),T1={style:{"text-align":"left"}},U1={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},X1=t("td",{style:{"text-align":"center"}},null,-1),Y1={style:{"text-align":"left"}},A1=t("code",null,"栈",-1),P1=t("code",null,"数组",-1),D1=t("code",null,"动态规划",-1),F1=t("code",null,"1+",-1),J1={style:{"text-align":"left"}},W1=t("td",{style:{"text-align":"center"}},"921",-1),$1={style:{"text-align":"left"}},tr={href:"https://leetcode.com/problems/minimum-add-to-make-parentheses-valid",target:"_blank",rel:"noopener noreferrer"},er={style:{"text-align":"center"}},lr={style:{"text-align":"left"}},or=t("code",null,"栈",-1),sr=t("code",null,"贪心",-1),nr=t("code",null,"字符串",-1),dr={style:{"text-align":"left"}},_r=t("td",{style:{"text-align":"center"}},"936",-1),cr={style:{"text-align":"left"}},ar={href:"https://leetcode.com/problems/stamping-the-sequence",target:"_blank",rel:"noopener noreferrer"},ir=t("td",{style:{"text-align":"center"}},null,-1),rr={style:{"text-align":"left"}},hr=t("code",null,"栈",-1),fr=t("code",null,"贪心",-1),ur=t("code",null,"队列",-1),gr=t("code",null,"1+",-1),mr={style:{"text-align":"left"}},yr=t("td",{style:{"text-align":"center"}},"946",-1),xr={style:{"text-align":"left"}},pr={href:"https://leetcode.com/problems/validate-stack-sequences",target:"_blank",rel:"noopener noreferrer"},br={style:{"text-align":"center"}},kr={style:{"text-align":"left"}},Mr=t("code",null,"栈",-1),Ir=t("code",null,"数组",-1),vr=t("code",null,"模拟",-1),Hr={style:{"text-align":"left"}},wr=t("td",{style:{"text-align":"center"}},"962",-1),Er={style:{"text-align":"left"}},qr={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},zr={style:{"text-align":"center"}},jr={style:{"text-align":"left"}},Or=t("code",null,"栈",-1),Nr=t("code",null,"数组",-1),Lr=t("code",null,"单调栈",-1),Br={style:{"text-align":"left"}},Vr=t("td",{style:{"text-align":"center"}},"975",-1),Cr={style:{"text-align":"left"}},Qr={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},Rr=t("td",{style:{"text-align":"center"}},null,-1),Zr={style:{"text-align":"left"}},Gr=t("code",null,"栈",-1),Kr=t("code",null,"数组",-1),Sr=t("code",null,"动态规划",-1),Tr=t("code",null,"2+",-1),Ur={style:{"text-align":"left"}},Xr=t("td",{style:{"text-align":"center"}},"1003",-1),Yr={style:{"text-align":"left"}},Ar={href:"https://leetcode.com/problems/check-if-word-is-valid-after-substitutions",target:"_blank",rel:"noopener noreferrer"},Pr=t("td",{style:{"text-align":"center"}},null,-1),Dr={style:{"text-align":"left"}},Fr=t("code",null,"栈",-1),Jr=t("code",null,"字符串",-1),Wr={style:{"text-align":"left"}},$r=t("td",{style:{"text-align":"center"}},"1006",-1),th={style:{"text-align":"left"}},eh={href:"https://leetcode.com/problems/clumsy-factorial",target:"_blank",rel:"noopener noreferrer"},lh=t("td",{style:{"text-align":"center"}},null,-1),oh={style:{"text-align":"left"}},sh=t("code",null,"栈",-1),nh=t("code",null,"数学",-1),dh=t("code",null,"模拟",-1),_h={style:{"text-align":"left"}},ch=t("td",{style:{"text-align":"center"}},"1008",-1),ah={style:{"text-align":"left"}},ih={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},rh={style:{"text-align":"center"}},hh={style:{"text-align":"left"}},fh=t("code",null,"栈",-1),uh=t("code",null,"树",-1),gh=t("code",null,"二叉搜索树",-1),mh=t("code",null,"3+",-1),yh={style:{"text-align":"left"}},xh=t("td",{style:{"text-align":"center"}},"1019",-1),ph={style:{"text-align":"left"}},bh={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},kh=t("td",{style:{"text-align":"center"}},null,-1),Mh={style:{"text-align":"left"}},Ih=t("code",null,"栈",-1),vh=t("code",null,"数组",-1),Hh=t("code",null,"链表",-1),wh=t("code",null,"1+",-1),Eh={style:{"text-align":"left"}},qh=t("td",{style:{"text-align":"center"}},"1021",-1),zh={style:{"text-align":"left"}},jh={href:"https://leetcode.com/problems/remove-outermost-parentheses",target:"_blank",rel:"noopener noreferrer"},Oh={style:{"text-align":"center"}},Nh={style:{"text-align":"left"}},Lh=t("code",null,"栈",-1),Bh=t("code",null,"字符串",-1),Vh={style:{"text-align":"left"}},Ch=t("td",{style:{"text-align":"center"}},"1047",-1),Qh={style:{"text-align":"left"}},Rh={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",target:"_blank",rel:"noopener noreferrer"},Zh={style:{"text-align":"center"}},Gh={style:{"text-align":"left"}},Kh=t("code",null,"栈",-1),Sh=t("code",null,"字符串",-1),Th={style:{"text-align":"left"}},Uh=t("td",{style:{"text-align":"center"}},"1063",-1),Xh={style:{"text-align":"left"}},Yh={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Ah=t("td",{style:{"text-align":"center"}},null,-1),Ph={style:{"text-align":"left"}},Dh=t("code",null,"栈",-1),Fh=t("code",null,"数组",-1),Jh=t("code",null,"单调栈",-1),Wh={style:{"text-align":"left"}},$h=t("td",{style:{"text-align":"center"}},"1081",-1),tf={style:{"text-align":"left"}},ef={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},lf={style:{"text-align":"center"}},of={style:{"text-align":"left"}},sf=t("code",null,"栈",-1),nf=t("code",null,"贪心",-1),df=t("code",null,"字符串",-1),_f=t("code",null,"1+",-1),cf={style:{"text-align":"left"}},af=t("td",{style:{"text-align":"center"}},"1096",-1),rf={style:{"text-align":"left"}},hf={href:"https://leetcode.com/problems/brace-expansion-ii",target:"_blank",rel:"noopener noreferrer"},ff=t("td",{style:{"text-align":"center"}},null,-1),uf={style:{"text-align":"left"}},gf=t("code",null,"栈",-1),mf=t("code",null,"广度优先搜索",-1),yf=t("code",null,"字符串",-1),xf=t("code",null,"1+",-1),pf={style:{"text-align":"left"}},bf=t("td",{style:{"text-align":"center"}},"1106",-1),kf={style:{"text-align":"left"}},Mf={href:"https://leetcode.com/problems/parsing-a-boolean-expression",target:"_blank",rel:"noopener noreferrer"},If={style:{"text-align":"center"}},vf={style:{"text-align":"left"}},Hf=t("code",null,"栈",-1),wf=t("code",null,"递归",-1),Ef=t("code",null,"字符串",-1),qf={style:{"text-align":"left"}},zf=t("td",{style:{"text-align":"center"}},"1111",-1),jf={style:{"text-align":"left"}},Of={href:"https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings",target:"_blank",rel:"noopener noreferrer"},Nf=t("td",{style:{"text-align":"center"}},null,-1),Lf={style:{"text-align":"left"}},Bf=t("code",null,"栈",-1),Vf=t("code",null,"字符串",-1),Cf={style:{"text-align":"left"}},Qf=t("td",{style:{"text-align":"center"}},"1124",-1),Rf={style:{"text-align":"left"}},Zf={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},Gf=t("td",{style:{"text-align":"center"}},null,-1),Kf={style:{"text-align":"left"}},Sf=t("code",null,"栈",-1),Tf=t("code",null,"数组",-1),Uf=t("code",null,"哈希表",-1),Xf=t("code",null,"2+",-1),Yf={style:{"text-align":"left"}},Af=t("td",{style:{"text-align":"center"}},"1130",-1),Pf={style:{"text-align":"left"}},Df={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},Ff=t("td",{style:{"text-align":"center"}},null,-1),Jf={style:{"text-align":"left"}},Wf=t("code",null,"栈",-1),$f=t("code",null,"贪心",-1),tu=t("code",null,"数组",-1),eu=t("code",null,"2+",-1),lu={style:{"text-align":"left"}},ou=t("td",{style:{"text-align":"center"}},"1172",-1),su={style:{"text-align":"left"}},nu={href:"https://leetcode.com/problems/dinner-plate-stacks",target:"_blank",rel:"noopener noreferrer"},du=t("td",{style:{"text-align":"center"}},null,-1),_u={style:{"text-align":"left"}},cu=t("code",null,"栈",-1),au=t("code",null,"设计",-1),iu=t("code",null,"哈希表",-1),ru=t("code",null,"1+",-1),hu={style:{"text-align":"left"}},fu=t("td",{style:{"text-align":"center"}},"1190",-1),uu={style:{"text-align":"left"}},gu={href:"https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses",target:"_blank",rel:"noopener noreferrer"},mu={style:{"text-align":"center"}},yu={style:{"text-align":"left"}},xu=t("code",null,"栈",-1),pu=t("code",null,"字符串",-1),bu={style:{"text-align":"left"}},ku=t("td",{style:{"text-align":"center"}},"1209",-1),Mu={style:{"text-align":"left"}},Iu={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",target:"_blank",rel:"noopener noreferrer"},vu=t("td",{style:{"text-align":"center"}},null,-1),Hu={style:{"text-align":"left"}},wu=t("code",null,"栈",-1),Eu=t("code",null,"字符串",-1),qu={style:{"text-align":"left"}},zu=t("td",{style:{"text-align":"center"}},"1214",-1),ju={style:{"text-align":"left"}},Ou={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},Nu=t("td",{style:{"text-align":"center"}},null,-1),Lu={style:{"text-align":"left"}},Bu=t("code",null,"栈",-1),Vu=t("code",null,"树",-1),Cu=t("code",null,"深度优先搜索",-1),Qu=t("code",null,"4+",-1),Ru={style:{"text-align":"left"}},Zu=t("td",{style:{"text-align":"center"}},"1249",-1),Gu={style:{"text-align":"left"}},Ku={href:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Su=t("td",{style:{"text-align":"center"}},null,-1),Tu={style:{"text-align":"left"}},Uu=t("code",null,"栈",-1),Xu=t("code",null,"字符串",-1),Yu={style:{"text-align":"left"}},Au=t("td",{style:{"text-align":"center"}},"1265",-1),Pu={style:{"text-align":"left"}},Du={href:"https://leetcode.com/problems/print-immutable-linked-list-in-reverse",target:"_blank",rel:"noopener noreferrer"},Fu=t("td",{style:{"text-align":"center"}},null,-1),Ju={style:{"text-align":"left"}},Wu=t("code",null,"栈",-1),$u=t("code",null,"递归",-1),tg=t("code",null,"链表",-1),eg=t("code",null,"1+",-1),lg={style:{"text-align":"left"}},og=t("td",{style:{"text-align":"center"}},"1381",-1),sg={style:{"text-align":"left"}},ng={href:"https://leetcode.com/problems/design-a-stack-with-increment-operation",target:"_blank",rel:"noopener noreferrer"},dg={style:{"text-align":"center"}},_g={style:{"text-align":"left"}},cg=t("code",null,"栈",-1),ag=t("code",null,"设计",-1),ig=t("code",null,"数组",-1),rg={style:{"text-align":"left"}},hg=t("td",{style:{"text-align":"center"}},"1441",-1),fg={style:{"text-align":"left"}},ug={href:"https://leetcode.com/problems/build-an-array-with-stack-operations",target:"_blank",rel:"noopener noreferrer"},gg={style:{"text-align":"center"}},mg={style:{"text-align":"left"}},yg=t("code",null,"栈",-1),xg=t("code",null,"数组",-1),pg=t("code",null,"模拟",-1),bg={style:{"text-align":"left"}},kg=t("td",{style:{"text-align":"center"}},"1472",-1),Mg={style:{"text-align":"left"}},Ig={href:"https://leetcode.com/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},vg={style:{"text-align":"center"}},Hg={style:{"text-align":"left"}},wg=t("code",null,"栈",-1),Eg=t("code",null,"设计",-1),qg=t("code",null,"数组",-1),zg=t("code",null,"3+",-1),jg={style:{"text-align":"left"}},Og=t("td",{style:{"text-align":"center"}},"1475",-1),Ng={style:{"text-align":"left"}},Lg={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},Bg={style:{"text-align":"center"}},Vg={style:{"text-align":"left"}},Cg=t("code",null,"栈",-1),Qg=t("code",null,"数组",-1),Rg=t("code",null,"单调栈",-1),Zg={style:{"text-align":"left"}},Gg=t("td",{style:{"text-align":"center"}},"1504",-1),Kg={style:{"text-align":"left"}},Sg={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Tg=t("td",{style:{"text-align":"center"}},null,-1),Ug={style:{"text-align":"left"}},Xg=t("code",null,"栈",-1),Yg=t("code",null,"数组",-1),Ag=t("code",null,"动态规划",-1),Pg=t("code",null,"2+",-1),Dg={style:{"text-align":"left"}},Fg=t("td",{style:{"text-align":"center"}},"1526",-1),Jg={style:{"text-align":"left"}},Wg={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},$g=t("td",{style:{"text-align":"center"}},null,-1),tm={style:{"text-align":"left"}},em=t("code",null,"栈",-1),lm=t("code",null,"贪心",-1),om=t("code",null,"数组",-1),sm=t("code",null,"2+",-1),nm={style:{"text-align":"left"}},dm=t("td",{style:{"text-align":"center"}},"1541",-1),_m={style:{"text-align":"left"}},cm={href:"https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string",target:"_blank",rel:"noopener noreferrer"},am=t("td",{style:{"text-align":"center"}},null,-1),im={style:{"text-align":"left"}},rm=t("code",null,"栈",-1),hm=t("code",null,"贪心",-1),fm=t("code",null,"字符串",-1),um={style:{"text-align":"left"}},gm=t("td",{style:{"text-align":"center"}},"1544",-1),mm={style:{"text-align":"left"}},ym={href:"https://leetcode.com/problems/make-the-string-great",target:"_blank",rel:"noopener noreferrer"},xm=t("td",{style:{"text-align":"center"}},null,-1),pm={style:{"text-align":"left"}},bm=t("code",null,"栈",-1),km=t("code",null,"字符串",-1),Mm={style:{"text-align":"left"}},Im=t("td",{style:{"text-align":"center"}},"1574",-1),vm={style:{"text-align":"left"}},Hm={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},wm=t("td",{style:{"text-align":"center"}},null,-1),Em={style:{"text-align":"left"}},qm=t("code",null,"栈",-1),zm=t("code",null,"数组",-1),jm=t("code",null,"双指针",-1),Om=t("code",null,"2+",-1),Nm={style:{"text-align":"left"}},Lm=t("td",{style:{"text-align":"center"}},"1586",-1),Bm={style:{"text-align":"left"}},Vm={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},Cm=t("td",{style:{"text-align":"center"}},null,-1),Qm={style:{"text-align":"left"}},Rm=t("code",null,"栈",-1),Zm=t("code",null,"树",-1),Gm=t("code",null,"设计",-1),Km=t("code",null,"3+",-1),Sm={style:{"text-align":"left"}},Tm=t("td",{style:{"text-align":"center"}},"1597",-1),Um={style:{"text-align":"left"}},Xm={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},Ym=t("td",{style:{"text-align":"center"}},null,-1),Am={style:{"text-align":"left"}},Pm=t("code",null,"栈",-1),Dm=t("code",null,"树",-1),Fm=t("code",null,"字符串",-1),Jm=t("code",null,"1+",-1),Wm={style:{"text-align":"left"}},$m=t("td",{style:{"text-align":"center"}},"1598",-1),ty={style:{"text-align":"left"}},ey={href:"https://leetcode.com/problems/crawler-log-folder",target:"_blank",rel:"noopener noreferrer"},ly=t("td",{style:{"text-align":"center"}},null,-1),oy={style:{"text-align":"left"}},sy=t("code",null,"栈",-1),ny=t("code",null,"数组",-1),dy=t("code",null,"字符串",-1),_y={style:{"text-align":"left"}},cy=t("td",{style:{"text-align":"center"}},"1614",-1),ay={style:{"text-align":"left"}},iy={href:"https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses",target:"_blank",rel:"noopener noreferrer"},ry=t("td",{style:{"text-align":"center"}},null,-1),hy={style:{"text-align":"left"}},fy=t("code",null,"栈",-1),uy=t("code",null,"字符串",-1),gy={style:{"text-align":"left"}},my=t("td",{style:{"text-align":"center"}},"1628",-1),yy={style:{"text-align":"left"}},xy={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},py=t("td",{style:{"text-align":"center"}},null,-1),by={style:{"text-align":"left"}},ky=t("code",null,"栈",-1),My=t("code",null,"树",-1),Iy=t("code",null,"设计",-1),vy=t("code",null,"3+",-1),Hy={style:{"text-align":"left"}},wy=t("td",{style:{"text-align":"center"}},"1653",-1),Ey={style:{"text-align":"left"}},qy={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},zy=t("td",{style:{"text-align":"center"}},null,-1),jy={style:{"text-align":"left"}},Oy=t("code",null,"栈",-1),Ny=t("code",null,"字符串",-1),Ly=t("code",null,"动态规划",-1),By={style:{"text-align":"left"}},Vy=t("td",{style:{"text-align":"center"}},"1673",-1),Cy={style:{"text-align":"left"}},Qy={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},Ry=t("td",{style:{"text-align":"center"}},null,-1),Zy={style:{"text-align":"left"}},Gy=t("code",null,"栈",-1),Ky=t("code",null,"贪心",-1),Sy=t("code",null,"数组",-1),Ty=t("code",null,"1+",-1),Uy={style:{"text-align":"left"}},Xy=t("td",{style:{"text-align":"center"}},"1700",-1),Yy={style:{"text-align":"left"}},Ay={href:"https://leetcode.com/problems/number-of-students-unable-to-eat-lunch",target:"_blank",rel:"noopener noreferrer"},Py=t("td",{style:{"text-align":"center"}},null,-1),Dy={style:{"text-align":"left"}},Fy=t("code",null,"栈",-1),Jy=t("code",null,"队列",-1),Wy=t("code",null,"数组",-1),$y=t("code",null,"1+",-1),tx={style:{"text-align":"left"}},ex=t("td",{style:{"text-align":"center"}},"1717",-1),lx={style:{"text-align":"left"}},ox={href:"https://leetcode.com/problems/maximum-score-from-removing-substrings",target:"_blank",rel:"noopener noreferrer"},sx=t("td",{style:{"text-align":"center"}},null,-1),nx={style:{"text-align":"left"}},dx=t("code",null,"栈",-1),_x=t("code",null,"贪心",-1),cx=t("code",null,"字符串",-1),ax={style:{"text-align":"left"}},ix=t("td",{style:{"text-align":"center"}},"1756",-1),rx={style:{"text-align":"left"}},hx={href:"https://leetcode.com/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},fx=t("td",{style:{"text-align":"center"}},null,-1),ux={style:{"text-align":"left"}},gx=t("code",null,"栈",-1),mx=t("code",null,"设计",-1),yx=t("code",null,"树状数组",-1),xx=t("code",null,"3+",-1),px={style:{"text-align":"left"}},bx=t("td",{style:{"text-align":"center"}},"1762",-1),kx={style:{"text-align":"left"}},Mx={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},Ix=t("td",{style:{"text-align":"center"}},null,-1),vx={style:{"text-align":"left"}},Hx=t("code",null,"栈",-1),wx=t("code",null,"数组",-1),Ex=t("code",null,"单调栈",-1),qx={style:{"text-align":"left"}},zx=t("td",{style:{"text-align":"center"}},"1776",-1),jx={style:{"text-align":"left"}},Ox={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Nx=t("td",{style:{"text-align":"center"}},null,-1),Lx={style:{"text-align":"left"}},Bx=t("code",null,"栈",-1),Vx=t("code",null,"数组",-1),Cx=t("code",null,"数学",-1),Qx=t("code",null,"2+",-1),Rx={style:{"text-align":"left"}},Zx=t("td",{style:{"text-align":"center"}},"1793",-1),Gx={style:{"text-align":"left"}},Kx={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},Sx=t("td",{style:{"text-align":"center"}},null,-1),Tx={style:{"text-align":"left"}},Ux=t("code",null,"栈",-1),Xx=t("code",null,"数组",-1),Yx=t("code",null,"双指针",-1),Ax=t("code",null,"2+",-1),Px={style:{"text-align":"left"}},Dx=t("td",{style:{"text-align":"center"}},"1856",-1),Fx={style:{"text-align":"left"}},Jx={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},Wx=t("td",{style:{"text-align":"center"}},null,-1),$x={style:{"text-align":"left"}},t0=t("code",null,"栈",-1),e0=t("code",null,"数组",-1),l0=t("code",null,"前缀和",-1),o0=t("code",null,"1+",-1),s0={style:{"text-align":"left"}},n0=t("td",{style:{"text-align":"center"}},"1896",-1),d0={style:{"text-align":"left"}},_0={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},c0=t("td",{style:{"text-align":"center"}},null,-1),a0={style:{"text-align":"left"}},i0=t("code",null,"栈",-1),r0=t("code",null,"数学",-1),h0=t("code",null,"字符串",-1),f0=t("code",null,"1+",-1),u0={style:{"text-align":"left"}},g0=t("td",{style:{"text-align":"center"}},"1910",-1),m0={style:{"text-align":"left"}},y0={href:"https://leetcode.com/problems/remove-all-occurrences-of-a-substring",target:"_blank",rel:"noopener noreferrer"},x0=t("td",{style:{"text-align":"center"}},null,-1),p0={style:{"text-align":"left"}},b0=t("code",null,"栈",-1),k0=t("code",null,"字符串",-1),M0=t("code",null,"模拟",-1),I0={style:{"text-align":"left"}},v0=t("td",{style:{"text-align":"center"}},"1944",-1),H0={style:{"text-align":"left"}},w0={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},E0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},z0=t("code",null,"栈",-1),j0=t("code",null,"数组",-1),O0=t("code",null,"单调栈",-1),N0={style:{"text-align":"left"}},L0=t("td",{style:{"text-align":"center"}},"1950",-1),B0={style:{"text-align":"left"}},V0={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},C0=t("td",{style:{"text-align":"center"}},null,-1),Q0={style:{"text-align":"left"}},R0=t("code",null,"栈",-1),Z0=t("code",null,"数组",-1),G0=t("code",null,"单调栈",-1),K0={style:{"text-align":"left"}},S0=t("td",{style:{"text-align":"center"}},"1963",-1),T0={style:{"text-align":"left"}},U0={href:"https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced",target:"_blank",rel:"noopener noreferrer"},X0={style:{"text-align":"center"}},Y0={style:{"text-align":"left"}},A0=t("code",null,"栈",-1),P0=t("code",null,"贪心",-1),D0=t("code",null,"双指针",-1),F0=t("code",null,"1+",-1),J0={style:{"text-align":"left"}},W0=t("td",{style:{"text-align":"center"}},"1996",-1),$0={style:{"text-align":"left"}},tp={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},ep=t("td",{style:{"text-align":"center"}},null,-1),lp={style:{"text-align":"left"}},op=t("code",null,"栈",-1),sp=t("code",null,"贪心",-1),np=t("code",null,"数组",-1),dp=t("code",null,"2+",-1),_p={style:{"text-align":"left"}},cp=t("td",{style:{"text-align":"center"}},"2000",-1),ap={style:{"text-align":"left"}},ip={href:"https://leetcode.com/problems/reverse-prefix-of-word",target:"_blank",rel:"noopener noreferrer"},rp=t("td",{style:{"text-align":"center"}},null,-1),hp={style:{"text-align":"left"}},fp=t("code",null,"栈",-1),up=t("code",null,"双指针",-1),gp=t("code",null,"字符串",-1),mp={style:{"text-align":"left"}},yp=t("td",{style:{"text-align":"center"}},"2019",-1),xp={style:{"text-align":"left"}},pp={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},bp=t("td",{style:{"text-align":"center"}},null,-1),kp={style:{"text-align":"left"}},Mp=t("code",null,"栈",-1),Ip=t("code",null,"记忆化搜索",-1),vp=t("code",null,"数组",-1),Hp=t("code",null,"3+",-1),wp={style:{"text-align":"left"}},Ep=t("td",{style:{"text-align":"center"}},"2030",-1),qp={style:{"text-align":"left"}},zp={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},jp=t("td",{style:{"text-align":"center"}},null,-1),Op={style:{"text-align":"left"}},Np=t("code",null,"栈",-1),Lp=t("code",null,"贪心",-1),Bp=t("code",null,"字符串",-1),Vp=t("code",null,"1+",-1),Cp={style:{"text-align":"left"}},Qp=t("td",{style:{"text-align":"center"}},"2104",-1),Rp={style:{"text-align":"left"}},Zp={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},Gp=t("td",{style:{"text-align":"center"}},null,-1),Kp={style:{"text-align":"left"}},Sp=t("code",null,"栈",-1),Tp=t("code",null,"数组",-1),Up=t("code",null,"单调栈",-1),Xp={style:{"text-align":"left"}},Yp=t("td",{style:{"text-align":"center"}},"2116",-1),Ap={style:{"text-align":"left"}},Pp={href:"https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid",target:"_blank",rel:"noopener noreferrer"},Dp=t("td",{style:{"text-align":"center"}},null,-1),Fp={style:{"text-align":"left"}},Jp=t("code",null,"栈",-1),Wp=t("code",null,"贪心",-1),$p=t("code",null,"字符串",-1),t3={style:{"text-align":"left"}},e3=t("td",{style:{"text-align":"center"}},"2130",-1),l3={style:{"text-align":"left"}},o3={href:"https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list",target:"_blank",rel:"noopener noreferrer"},s3=t("td",{style:{"text-align":"center"}},null,-1),n3={style:{"text-align":"left"}},d3=t("code",null,"栈",-1),_3=t("code",null,"链表",-1),c3=t("code",null,"双指针",-1),a3={style:{"text-align":"left"}},i3=t("td",{style:{"text-align":"center"}},"2197",-1),r3={style:{"text-align":"left"}},h3={href:"https://leetcode.com/problems/replace-non-coprime-numbers-in-array",target:"_blank",rel:"noopener noreferrer"},f3=t("td",{style:{"text-align":"center"}},null,-1),u3={style:{"text-align":"left"}},g3=t("code",null,"栈",-1),m3=t("code",null,"数组",-1),y3=t("code",null,"数学",-1),x3=t("code",null,"1+",-1),p3={style:{"text-align":"left"}},b3=t("td",{style:{"text-align":"center"}},"2211",-1),k3={style:{"text-align":"left"}},M3={href:"https://leetcode.com/problems/count-collisions-on-a-road",target:"_blank",rel:"noopener noreferrer"},I3=t("td",{style:{"text-align":"center"}},null,-1),v3={style:{"text-align":"left"}},H3=t("code",null,"栈",-1),w3=t("code",null,"字符串",-1),E3=t("code",null,"模拟",-1),q3={style:{"text-align":"left"}},z3=t("td",{style:{"text-align":"center"}},"2216",-1),j3={style:{"text-align":"left"}},O3={href:"https://leetcode.com/problems/minimum-deletions-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},N3=t("td",{style:{"text-align":"center"}},null,-1),L3={style:{"text-align":"left"}},B3=t("code",null,"栈",-1),V3=t("code",null,"贪心",-1),C3=t("code",null,"数组",-1),Q3={style:{"text-align":"left"}},R3=t("td",{style:{"text-align":"center"}},"2254",-1),Z3={style:{"text-align":"left"}},G3={href:"https://leetcode.com/problems/design-video-sharing-platform",target:"_blank",rel:"noopener noreferrer"},K3=t("td",{style:{"text-align":"center"}},null,-1),S3={style:{"text-align":"left"}},T3=t("code",null,"栈",-1),U3=t("code",null,"设计",-1),X3=t("code",null,"哈希表",-1),Y3=t("code",null,"1+",-1),A3={style:{"text-align":"left"}},P3=t("td",{style:{"text-align":"center"}},"2281",-1),D3={style:{"text-align":"left"}},F3={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},J3=t("td",{style:{"text-align":"center"}},null,-1),W3={style:{"text-align":"left"}},$3=t("code",null,"栈",-1),tb=t("code",null,"数组",-1),eb=t("code",null,"前缀和",-1),lb=t("code",null,"1+",-1),ob={style:{"text-align":"left"}},sb=t("td",{style:{"text-align":"center"}},"2282",-1),nb={style:{"text-align":"left"}},db={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},_b=t("td",{style:{"text-align":"center"}},null,-1),cb={style:{"text-align":"left"}},ab=t("code",null,"栈",-1),ib=t("code",null,"数组",-1),rb=t("code",null,"矩阵",-1),hb=t("code",null,"1+",-1),fb={style:{"text-align":"left"}},ub=t("td",{style:{"text-align":"center"}},"2289",-1),gb={style:{"text-align":"left"}},mb={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},yb=t("td",{style:{"text-align":"center"}},null,-1),xb={style:{"text-align":"left"}},pb=t("code",null,"栈",-1),bb=t("code",null,"数组",-1),kb=t("code",null,"链表",-1),Mb=t("code",null,"1+",-1),Ib={style:{"text-align":"left"}},vb=t("td",{style:{"text-align":"center"}},"2296",-1),Hb={style:{"text-align":"left"}},wb={href:"https://leetcode.com/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},Eb=t("td",{style:{"text-align":"center"}},null,-1),qb={style:{"text-align":"left"}},zb=t("code",null,"栈",-1),jb=t("code",null,"设计",-1),Ob=t("code",null,"链表",-1),Nb=t("code",null,"3+",-1),Lb={style:{"text-align":"left"}},Bb=t("td",{style:{"text-align":"center"}},"2297",-1),Vb={style:{"text-align":"left"}},Cb={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Qb=t("td",{style:{"text-align":"center"}},null,-1),Rb={style:{"text-align":"left"}},Zb=t("code",null,"栈",-1),Gb=t("code",null,"图",-1),Kb=t("code",null,"数组",-1),Sb=t("code",null,"3+",-1),Tb={style:{"text-align":"left"}},Ub=t("td",{style:{"text-align":"center"}},"2334",-1),Xb={style:{"text-align":"left"}},Yb={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},Ab=t("td",{style:{"text-align":"center"}},null,-1),Pb={style:{"text-align":"left"}},Db=t("code",null,"栈",-1),Fb=t("code",null,"并查集",-1),Jb=t("code",null,"数组",-1),Wb=t("code",null,"1+",-1),$b={style:{"text-align":"left"}},t2=t("td",{style:{"text-align":"center"}},"2345",-1),e2={style:{"text-align":"left"}},l2={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},o2=t("td",{style:{"text-align":"center"}},null,-1),s2={style:{"text-align":"left"}},n2=t("code",null,"栈",-1),d2=t("code",null,"数组",-1),_2=t("code",null,"排序",-1),c2=t("code",null,"1+",-1),a2={style:{"text-align":"left"}},i2=t("td",{style:{"text-align":"center"}},"2355",-1),r2={style:{"text-align":"left"}},h2={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},f2=t("td",{style:{"text-align":"center"}},null,-1),u2={style:{"text-align":"left"}},g2=t("code",null,"栈",-1),m2=t("code",null,"数组",-1),y2=t("code",null,"动态规划",-1),x2=t("code",null,"1+",-1),p2={style:{"text-align":"left"}},b2=t("td",{style:{"text-align":"center"}},"2375",-1),k2={style:{"text-align":"left"}},M2={href:"https://leetcode.com/problems/construct-smallest-number-from-di-string",target:"_blank",rel:"noopener noreferrer"},I2=t("td",{style:{"text-align":"center"}},null,-1),v2={style:{"text-align":"left"}},H2=t("code",null,"栈",-1),w2=t("code",null,"贪心",-1),E2=t("code",null,"字符串",-1),q2=t("code",null,"1+",-1),z2={style:{"text-align":"left"}},j2=t("td",{style:{"text-align":"center"}},"2390",-1),O2={style:{"text-align":"left"}},N2={href:"https://leetcode.com/problems/removing-stars-from-a-string",target:"_blank",rel:"noopener noreferrer"},L2=t("td",{style:{"text-align":"center"}},null,-1),B2={style:{"text-align":"left"}},V2=t("code",null,"栈",-1),C2=t("code",null,"字符串",-1),Q2=t("code",null,"模拟",-1),R2={style:{"text-align":"left"}},Z2=t("td",{style:{"text-align":"center"}},"2434",-1),G2={style:{"text-align":"left"}},K2={href:"https://leetcode.com/problems/using-a-robot-to-print-the-lexicographically-smallest-string",target:"_blank",rel:"noopener noreferrer"},S2=t("td",{style:{"text-align":"center"}},null,-1),T2={style:{"text-align":"left"}},U2=t("code",null,"栈",-1),X2=t("code",null,"贪心",-1),Y2=t("code",null,"哈希表",-1),A2=t("code",null,"1+",-1),P2={style:{"text-align":"left"}},D2=t("td",{style:{"text-align":"center"}},"2454",-1),F2={style:{"text-align":"left"}},J2={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},W2=t("td",{style:{"text-align":"center"}},null,-1),$2={style:{"text-align":"left"}},t4=t("code",null,"栈",-1),e4=t("code",null,"数组",-1),l4=t("code",null,"二分查找",-1),o4=t("code",null,"3+",-1),s4={style:{"text-align":"left"}},n4=t("td",{style:{"text-align":"center"}},"2487",-1),d4={style:{"text-align":"left"}},_4={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},c4=t("td",{style:{"text-align":"center"}},null,-1),a4={style:{"text-align":"left"}},i4=t("code",null,"栈",-1),r4=t("code",null,"递归",-1),h4=t("code",null,"链表",-1),f4=t("code",null,"1+",-1),u4={style:{"text-align":"left"}},g4=t("td",{style:{"text-align":"center"}},"2589",-1),m4={style:{"text-align":"left"}},y4={href:"https://leetcode.com/problems/minimum-time-to-complete-all-tasks",target:"_blank",rel:"noopener noreferrer"},x4=t("td",{style:{"text-align":"center"}},null,-1),p4={style:{"text-align":"left"}},b4=t("code",null,"栈",-1),k4=t("code",null,"贪心",-1),M4=t("code",null,"数组",-1),I4=t("code",null,"2+",-1),v4={style:{"text-align":"left"}},H4=t("td",{style:{"text-align":"center"}},"2617",-1),w4={style:{"text-align":"left"}},E4={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},q4=t("td",{style:{"text-align":"center"}},null,-1),z4={style:{"text-align":"left"}},j4=t("code",null,"栈",-1),O4=t("code",null,"广度优先搜索",-1),N4=t("code",null,"并查集",-1),L4=t("code",null,"5+",-1),B4={style:{"text-align":"left"}},V4=t("td",{style:{"text-align":"center"}},"2645",-1),C4={style:{"text-align":"left"}},Q4={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},R4=t("td",{style:{"text-align":"center"}},null,-1),Z4={style:{"text-align":"left"}},G4=t("code",null,"栈",-1),K4=t("code",null,"贪心",-1),S4=t("code",null,"字符串",-1),T4=t("code",null,"1+",-1),U4={style:{"text-align":"left"}},X4=t("td",{style:{"text-align":"center"}},"2696",-1),Y4={style:{"text-align":"left"}},A4={href:"https://leetcode.com/problems/minimum-string-length-after-removing-substrings",target:"_blank",rel:"noopener noreferrer"},P4={style:{"text-align":"center"}},D4={style:{"text-align":"left"}},F4=t("code",null,"栈",-1),J4=t("code",null,"字符串",-1),W4=t("code",null,"模拟",-1),$4={style:{"text-align":"left"}},t6=t("td",{style:{"text-align":"center"}},"2736",-1),e6={style:{"text-align":"left"}},l6={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},o6=t("td",{style:{"text-align":"center"}},null,-1),s6={style:{"text-align":"left"}},n6=t("code",null,"栈",-1),d6=t("code",null,"树状数组",-1),_6=t("code",null,"线段树",-1),c6=t("code",null,"4+",-1),a6={style:{"text-align":"left"}},i6=t("td",{style:{"text-align":"center"}},"2751",-1),r6={style:{"text-align":"left"}},h6={href:"https://leetcode.com/problems/robot-collisions",target:"_blank",rel:"noopener noreferrer"},f6=t("td",{style:{"text-align":"center"}},null,-1),u6={style:{"text-align":"left"}},g6=t("code",null,"栈",-1),m6=t("code",null,"数组",-1),y6=t("code",null,"排序",-1),x6=t("code",null,"1+",-1),p6={style:{"text-align":"left"}},b6=t("td",{style:{"text-align":"center"}},"2764",-1),k6={style:{"text-align":"left"}},M6={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},I6=t("td",{style:{"text-align":"center"}},null,-1),v6={style:{"text-align":"left"}},H6=t("code",null,"栈",-1),w6=t("code",null,"树",-1),E6=t("code",null,"深度优先搜索",-1),q6=t("code",null,"1+",-1),z6={style:{"text-align":"left"}},j6=t("td",{style:{"text-align":"center"}},"2813",-1),O6={style:{"text-align":"left"}},N6={href:"https://leetcode.com/problems/maximum-elegance-of-a-k-length-subsequence",target:"_blank",rel:"noopener noreferrer"},L6=t("td",{style:{"text-align":"center"}},null,-1),B6={style:{"text-align":"left"}},V6=t("code",null,"栈",-1),C6=t("code",null,"贪心",-1),Q6=t("code",null,"数组",-1),R6=t("code",null,"3+",-1),Z6={style:{"text-align":"left"}},G6=t("td",{style:{"text-align":"center"}},"2816",-1),K6={style:{"text-align":"left"}},S6={href:"https://leetcode.com/problems/double-a-number-represented-as-a-linked-list",target:"_blank",rel:"noopener noreferrer"},T6=t("td",{style:{"text-align":"center"}},null,-1),U6={style:{"text-align":"left"}},X6=t("code",null,"栈",-1),Y6=t("code",null,"链表",-1),A6=t("code",null,"数学",-1),P6={style:{"text-align":"left"}},D6=t("td",{style:{"text-align":"center"}},"2818",-1),F6={style:{"text-align":"left"}},J6={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},W6=t("td",{style:{"text-align":"center"}},null,-1),$6={style:{"text-align":"left"}},t8=t("code",null,"栈",-1),e8=t("code",null,"贪心",-1),l8=t("code",null,"数组",-1),o8=t("code",null,"3+",-1),s8={style:{"text-align":"left"}},n8=t("td",{style:{"text-align":"center"}},"2832",-1),d8={style:{"text-align":"left"}},_8={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},c8=t("td",{style:{"text-align":"center"}},null,-1),a8={style:{"text-align":"left"}},i8=t("code",null,"栈",-1),r8=t("code",null,"数组",-1),h8=t("code",null,"单调栈",-1),f8={style:{"text-align":"left"}},u8=t("td",{style:{"text-align":"center"}},"2863",-1),g8={style:{"text-align":"left"}},m8={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},y8=t("td",{style:{"text-align":"center"}},null,-1),x8={style:{"text-align":"left"}},p8=t("code",null,"栈",-1),b8=t("code",null,"数组",-1),k8=t("code",null,"排序",-1),M8=t("code",null,"1+",-1),I8={style:{"text-align":"left"}},v8=t("td",{style:{"text-align":"center"}},"2865",-1),H8={style:{"text-align":"left"}},w8={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},E8=t("td",{style:{"text-align":"center"}},null,-1),q8={style:{"text-align":"left"}},z8=t("code",null,"栈",-1),j8=t("code",null,"数组",-1),O8=t("code",null,"单调栈",-1),N8={style:{"text-align":"left"}},L8=t("td",{style:{"text-align":"center"}},"2866",-1),B8={style:{"text-align":"left"}},V8={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},C8=t("td",{style:{"text-align":"center"}},null,-1),Q8={style:{"text-align":"left"}},R8=t("code",null,"栈",-1),Z8=t("code",null,"数组",-1),G8=t("code",null,"单调栈",-1),K8={style:{"text-align":"left"}},S8=t("td",{style:{"text-align":"center"}},"2940",-1),T8={style:{"text-align":"left"}},U8={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},X8=t("td",{style:{"text-align":"center"}},null,-1),Y8={style:{"text-align":"left"}},A8=t("code",null,"栈",-1),P8=t("code",null,"树状数组",-1),D8=t("code",null,"线段树",-1),F8=t("code",null,"4+",-1),J8={style:{"text-align":"left"}},W8=t("td",{style:{"text-align":"center"}},"2945",-1),$8={style:{"text-align":"left"}},t5={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},e5=t("td",{style:{"text-align":"center"}},null,-1),l5={style:{"text-align":"left"}},o5=t("code",null,"栈",-1),s5=t("code",null,"队列",-1),n5=t("code",null,"数组",-1),d5=t("code",null,"4+",-1),_5={style:{"text-align":"left"}},c5=t("td",{style:{"text-align":"center"}},"3113",-1),a5={style:{"text-align":"left"}},i5={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},r5=t("td",{style:{"text-align":"center"}},null,-1),h5={style:{"text-align":"left"}},f5=t("code",null,"栈",-1),u5=t("code",null,"数组",-1),g5=t("code",null,"二分查找",-1),m5=t("code",null,"1+",-1),y5={style:{"text-align":"left"}},x5=t("td",{style:{"text-align":"center"}},"3170",-1),p5={style:{"text-align":"left"}},b5={href:"https://leetcode.com/problems/lexicographically-minimum-string-after-removing-stars",target:"_blank",rel:"noopener noreferrer"},k5=t("td",{style:{"text-align":"center"}},null,-1),M5={style:{"text-align":"left"}},I5=t("code",null,"栈",-1),v5=t("code",null,"贪心",-1),H5=t("code",null,"哈希表",-1),w5=t("code",null,"2+",-1),E5={style:{"text-align":"left"}},q5=t("td",{style:{"text-align":"center"}},"3174",-1),z5={style:{"text-align":"left"}},j5={href:"https://leetcode.com/problems/clear-digits",target:"_blank",rel:"noopener noreferrer"},O5=t("td",{style:{"text-align":"center"}},null,-1),N5={style:{"text-align":"left"}},L5=t("code",null,"栈",-1),B5=t("code",null,"字符串",-1),V5=t("code",null,"模拟",-1),C5={style:{"text-align":"left"}},Q5=t("td",{style:{"text-align":"center"}},"3205",-1),R5={style:{"text-align":"left"}},Z5={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},G5=t("td",{style:{"text-align":"center"}},null,-1),K5={style:{"text-align":"left"}},S5=t("code",null,"栈",-1),T5=t("code",null,"贪心",-1),U5=t("code",null,"数组",-1),X5=t("code",null,"2+",-1),Y5={style:{"text-align":"left"}},A5=t("td",{style:{"text-align":"center"}},"3221",-1),P5={style:{"text-align":"left"}},D5={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},F5=t("td",{style:{"text-align":"center"}},null,-1),J5={style:{"text-align":"left"}},W5=t("code",null,"栈",-1),$5=t("code",null,"贪心",-1),t7=t("code",null,"数组",-1),e7=t("code",null,"1+",-1),l7={style:{"text-align":"left"}},o7=t("td",{style:{"text-align":"center"}},"3229",-1),s7={style:{"text-align":"left"}},n7={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},d7=t("td",{style:{"text-align":"center"}},null,-1),_7={style:{"text-align":"left"}},c7=t("code",null,"栈",-1),a7=t("code",null,"贪心",-1),i7=t("code",null,"数组",-1),r7=t("code",null,"2+",-1),h7={style:{"text-align":"left"}},f7=t("td",{style:{"text-align":"center"}},"剑指 Offer 30",-1),u7={style:{"text-align":"left"}},g7={href:"https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof",target:"_blank",rel:"noopener noreferrer"},m7={style:{"text-align":"center"}},y7={style:{"text-align":"left"}},x7=t("code",null,"栈",-1),p7=t("code",null,"设计",-1),b7={style:{"text-align":"left"}},k7=t("td",{style:{"text-align":"center"}},"剑指 Offer 31",-1),M7={style:{"text-align":"left"}},I7={href:"https://leetcode.cn/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},v7={style:{"text-align":"center"}},H7={style:{"text-align":"left"}},w7=t("code",null,"栈",-1),E7=t("code",null,"数组",-1),q7=t("code",null,"模拟",-1),z7={style:{"text-align":"left"}},j7=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),O7={style:{"text-align":"left"}},N7={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},L7={style:{"text-align":"center"}},B7={style:{"text-align":"left"}},V7=t("code",null,"栈",-1),C7=t("code",null,"树",-1),Q7=t("code",null,"二叉搜索树",-1),R7=t("code",null,"4+",-1),Z7={style:{"text-align":"left"}},G7=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),K7={style:{"text-align":"left"}},S7={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},T7={style:{"text-align":"center"}},U7={style:{"text-align":"left"}},X7=t("code",null,"栈",-1),Y7=t("code",null,"树",-1),A7=t("code",null,"深度优先搜索",-1),P7=t("code",null,"4+",-1),D7={style:{"text-align":"left"}},F7=t("td",{style:{"text-align":"center"}},"剑指 Offer 6",-1),J7={style:{"text-align":"left"}},W7={href:"https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},$7={style:{"text-align":"center"}},t9={style:{"text-align":"left"}},e9=t("code",null,"栈",-1),l9=t("code",null,"递归",-1),o9=t("code",null,"链表",-1),s9=t("code",null,"1+",-1),n9={style:{"text-align":"left"}},d9=t("td",{style:{"text-align":"center"}},"剑指 Offer 9",-1),_9={style:{"text-align":"left"}},c9={href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof",target:"_blank",rel:"noopener noreferrer"},a9={style:{"text-align":"center"}},i9={style:{"text-align":"left"}},r9=t("code",null,"栈",-1),h9=t("code",null,"设计",-1),f9=t("code",null,"队列",-1),u9={style:{"text-align":"left"}},g9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 25",-1),m9={style:{"text-align":"left"}},y9={href:"https://leetcode.cn/problems/lMSNwu",target:"_blank",rel:"noopener noreferrer"},x9={style:{"text-align":"center"}},p9={style:{"text-align":"left"}},b9=t("code",null,"栈",-1),k9=t("code",null,"链表",-1),M9=t("code",null,"数学",-1),I9={style:{"text-align":"left"}},v9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 26",-1),H9={style:{"text-align":"left"}},w9={href:"https://leetcode.cn/problems/LGjMqU",target:"_blank",rel:"noopener noreferrer"},E9={style:{"text-align":"center"}},q9={style:{"text-align":"left"}},z9=t("code",null,"栈",-1),j9=t("code",null,"递归",-1),O9=t("code",null,"链表",-1),N9=t("code",null,"1+",-1),L9={style:{"text-align":"left"}},B9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 27",-1),V9={style:{"text-align":"left"}},C9={href:"https://leetcode.cn/problems/aMhZSa",target:"_blank",rel:"noopener noreferrer"},Q9={style:{"text-align":"center"}},R9={style:{"text-align":"left"}},Z9=t("code",null,"栈",-1),G9=t("code",null,"递归",-1),K9=t("code",null,"链表",-1),S9=t("code",null,"1+",-1),T9={style:{"text-align":"left"}},U9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 36",-1),X9={style:{"text-align":"left"}},Y9={href:"https://leetcode.cn/problems/8Zf90G",target:"_blank",rel:"noopener noreferrer"},A9={style:{"text-align":"center"}},P9={style:{"text-align":"left"}},D9=t("code",null,"栈",-1),F9=t("code",null,"数组",-1),J9=t("code",null,"数学",-1),W9={style:{"text-align":"left"}},$9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 37",-1),tk={style:{"text-align":"left"}},ek={href:"https://leetcode.cn/problems/XagZNi",target:"_blank",rel:"noopener noreferrer"},lk=t("td",{style:{"text-align":"center"}},null,-1),ok={style:{"text-align":"left"}},sk=t("code",null,"栈",-1),nk=t("code",null,"数组",-1),dk=t("code",null,"模拟",-1),_k={style:{"text-align":"left"}},ck=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),ak={style:{"text-align":"left"}},ik={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},rk={style:{"text-align":"center"}},hk={style:{"text-align":"left"}},fk=t("code",null,"栈",-1),uk=t("code",null,"数组",-1),gk=t("code",null,"单调栈",-1),mk={style:{"text-align":"left"}},yk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),xk={style:{"text-align":"left"}},pk={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},bk={style:{"text-align":"center"}},kk={style:{"text-align":"left"}},Mk=t("code",null,"栈",-1),Ik=t("code",null,"数组",-1),vk=t("code",null,"单调栈",-1),Hk={style:{"text-align":"left"}},wk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),Ek={style:{"text-align":"left"}},qk={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},zk={style:{"text-align":"center"}},jk={style:{"text-align":"left"}},Ok=t("code",null,"栈",-1),Nk=t("code",null,"数组",-1),Lk=t("code",null,"动态规划",-1),Bk=t("code",null,"2+",-1),Vk={style:{"text-align":"left"}},Ck=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),Qk={style:{"text-align":"left"}},Rk={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},Zk=t("td",{style:{"text-align":"center"}},null,-1),Gk={style:{"text-align":"left"}},Kk=t("code",null,"栈",-1),Sk=t("code",null,"树",-1),Tk=t("code",null,"深度优先搜索",-1),Uk=t("code",null,"2+",-1),Xk={style:{"text-align":"left"}},Yk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),Ak={style:{"text-align":"left"}},Pk={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},Dk={style:{"text-align":"center"}},Fk={style:{"text-align":"left"}},Jk=t("code",null,"栈",-1),Wk=t("code",null,"树",-1),$k=t("code",null,"设计",-1),tM=t("code",null,"3+",-1),eM={style:{"text-align":"left"}},lM=t("td",{style:{"text-align":"center"}},"面试题 02.06",-1),oM={style:{"text-align":"left"}},sM={href:"https://leetcode.cn/problems/palindrome-linked-list-lcci",target:"_blank",rel:"noopener noreferrer"},nM=t("td",{style:{"text-align":"center"}},null,-1),dM={style:{"text-align":"left"}},_M=t("code",null,"栈",-1),cM=t("code",null,"递归",-1),aM=t("code",null,"链表",-1),iM=t("code",null,"1+",-1),rM={style:{"text-align":"left"}},hM=t("td",{style:{"text-align":"center"}},"面试题 03.01",-1),fM={style:{"text-align":"left"}},uM={href:"https://leetcode.cn/problems/three-in-one-lcci",target:"_blank",rel:"noopener noreferrer"},gM=t("td",{style:{"text-align":"center"}},null,-1),mM={style:{"text-align":"left"}},yM=t("code",null,"栈",-1),xM=t("code",null,"设计",-1),pM=t("code",null,"数组",-1),bM={style:{"text-align":"left"}},kM=t("td",{style:{"text-align":"center"}},"面试题 03.02",-1),MM={style:{"text-align":"left"}},IM={href:"https://leetcode.cn/problems/min-stack-lcci",target:"_blank",rel:"noopener noreferrer"},vM=t("td",{style:{"text-align":"center"}},null,-1),HM={style:{"text-align":"left"}},wM=t("code",null,"栈",-1),EM=t("code",null,"设计",-1),qM={style:{"text-align":"left"}},zM=t("td",{style:{"text-align":"center"}},"面试题 03.03",-1),jM={style:{"text-align":"left"}},OM={href:"https://leetcode.cn/problems/stack-of-plates-lcci",target:"_blank",rel:"noopener noreferrer"},NM=t("td",{style:{"text-align":"center"}},null,-1),LM={style:{"text-align":"left"}},BM=t("code",null,"栈",-1),VM=t("code",null,"设计",-1),CM=t("code",null,"链表",-1),QM={style:{"text-align":"left"}},RM=t("td",{style:{"text-align":"center"}},"面试题 03.04",-1),ZM={style:{"text-align":"left"}},GM={href:"https://leetcode.cn/problems/implement-queue-using-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},KM=t("td",{style:{"text-align":"center"}},null,-1),SM={style:{"text-align":"left"}},TM=t("code",null,"栈",-1),UM=t("code",null,"设计",-1),XM=t("code",null,"队列",-1),YM={style:{"text-align":"left"}},AM=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),PM={style:{"text-align":"left"}},DM={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},FM=t("td",{style:{"text-align":"center"}},null,-1),JM={style:{"text-align":"left"}},WM=t("code",null,"栈",-1),$M=t("code",null,"设计",-1),tI=t("code",null,"单调栈",-1),eI={style:{"text-align":"left"}},lI=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),oI={style:{"text-align":"left"}},sI={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},nI=t("td",{style:{"text-align":"center"}},null,-1),dI={style:{"text-align":"left"}},_I=t("code",null,"栈",-1),cI=t("code",null,"贪心",-1),aI=t("code",null,"数组",-1),iI=t("code",null,"3+",-1),rI={style:{"text-align":"left"}},hI=t("td",{style:{"text-align":"center"}},"面试题 16.26",-1),fI={style:{"text-align":"left"}},uI={href:"https://leetcode.cn/problems/calculator-lcci",target:"_blank",rel:"noopener noreferrer"},gI=t("td",{style:{"text-align":"center"}},null,-1),mI={style:{"text-align":"left"}},yI=t("code",null,"栈",-1),xI=t("code",null,"数学",-1),pI=t("code",null,"字符串",-1),bI={style:{"text-align":"left"}},kI=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),MI={style:{"text-align":"left"}},II={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},vI=t("td",{style:{"text-align":"center"}},null,-1),HI={style:{"text-align":"left"}},wI=t("code",null,"栈",-1),EI=t("code",null,"树",-1),qI=t("code",null,"深度优先搜索",-1),zI=t("code",null,"3+",-1),jI={style:{"text-align":"left"}},OI=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),NI={style:{"text-align":"left"}},LI={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},BI=t("td",{style:{"text-align":"center"}},null,-1),VI={style:{"text-align":"left"}},CI=t("code",null,"栈",-1),QI=t("code",null,"数组",-1),RI=t("code",null,"双指针",-1),ZI=t("code",null,"2+",-1),GI={style:{"text-align":"left"}};function KI(SI,TI){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return a(),i("div",null,[f,t("details",null,[u,g,t("p",null,[e(s,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),b,l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[H]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/tag/string-matching.html"},{default:o(()=>[E]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[q]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[O]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/tag/ordered-set.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[C]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[Q]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[G]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/tag/suffix-array.html"},{default:o(()=>[T]),_:1})]),U,t("p",null,[e(s,{to:"/tag/enumeration.html"},{default:o(()=>[X]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[Y]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/tag/bucket-sort.html"},{default:o(()=>[W]),_:1}),l(),e(s,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/tag/counting.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/tag/sliding-window.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/tag/rolling-hash.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(s,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(s,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/tag/game-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/tag/database.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/tag/brainteaser.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/tag/interactive.html"},{default:o(()=>[Ot]),_:1}),l(),e(s,{to:"/tag/iterator.html"},{default:o(()=>[Nt]),_:1}),l(),e(s,{to:"/tag/concurrency.html"},{default:o(()=>[Lt]),_:1})])]),Bt,r(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Ct,t("td",Qt,[t("a",Rt,[l("有效的括号"),e(n)])]),t("td",Zt,[e(s,{to:"/problem/0020.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gt,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Kt]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[St]),_:1})]),t("td",Tt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ut,t("td",Xt,[t("a",Yt,[l("最长有效括号"),e(n)])]),t("td",At,[e(s,{to:"/problem/0032.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pt,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Dt]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Ft]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Jt]),_:1})]),t("td",Wt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$t,t("td",te,[t("a",ee,[l("接雨水"),e(n)])]),t("td",le,[e(s,{to:"/problem/0042.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",oe,[e(s,{to:"/tag/stack.html"},{default:o(()=>[se]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ne]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[de]),_:1}),l(),_e]),t("td",ce,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ae,t("td",ie,[t("a",re,[l("简化路径"),e(n)])]),t("td",he,[e(s,{to:"/problem/0071.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fe,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ue]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[ge]),_:1})]),t("td",me,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ye,t("td",xe,[t("a",pe,[l("柱状图中最大的矩形"),e(n)])]),t("td",be,[e(s,{to:"/problem/0084.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ke,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Me]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ie]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[ve]),_:1})]),t("td",He,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[we,t("td",Ee,[t("a",qe,[l("最大矩形"),e(n)])]),t("td",ze,[e(s,{to:"/problem/0085.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",je,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Oe]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ne]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Le]),_:1}),l(),Be]),t("td",Ve,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ce,t("td",Qe,[t("a",Re,[l("二叉树的中序遍历"),e(n)])]),t("td",Ze,[e(s,{to:"/problem/0094.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ge,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ke]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Se]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Te]),_:1}),l(),Ue]),t("td",Xe,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ye,t("td",Ae,[t("a",Pe,[l("二叉树展开为链表"),e(n)])]),t("td",De,[e(s,{to:"/problem/0114.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fe,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Je]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[We]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$e]),_:1}),l(),tl]),t("td",el,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ll,t("td",ol,[t("a",sl,[l("重排链表"),e(n)])]),t("td",nl,[e(s,{to:"/problem/0143.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",dl,[e(s,{to:"/tag/stack.html"},{default:o(()=>[_l]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[cl]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[al]),_:1}),l(),il]),t("td",rl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hl,t("td",fl,[t("a",ul,[l("二叉树的前序遍历"),e(n)])]),t("td",gl,[e(s,{to:"/problem/0144.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ml,[e(s,{to:"/tag/stack.html"},{default:o(()=>[yl]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[xl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pl]),_:1}),l(),bl]),t("td",kl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ml,t("td",Il,[t("a",vl,[l("二叉树的后序遍历"),e(n)])]),t("td",Hl,[e(s,{to:"/problem/0145.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wl,[e(s,{to:"/tag/stack.html"},{default:o(()=>[El]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[ql]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zl]),_:1}),l(),jl]),t("td",Ol,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Nl,t("td",Ll,[t("a",Bl,[l("逆波兰表达式求值"),e(n)])]),t("td",Vl,[e(s,{to:"/problem/0150.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cl,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ql]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Rl]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Zl]),_:1})]),t("td",Gl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kl,t("td",Sl,[t("a",Tl,[l("最小栈"),e(n)])]),t("td",Ul,[e(s,{to:"/problem/0155.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xl,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Yl]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Al]),_:1})]),t("td",Pl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dl,t("td",Fl,[t("a",Jl,[l("二叉搜索树迭代器"),e(n)])]),t("td",Wl,[e(s,{to:"/problem/0173.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$l,[e(s,{to:"/tag/stack.html"},{default:o(()=>[to]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[eo]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[lo]),_:1}),l(),oo]),t("td",so,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[no,t("td",_o,[t("a",co,[l("基本计算器"),e(n)])]),t("td",ao,[e(s,{to:"/problem/0224.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",io,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ro]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[ho]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[fo]),_:1}),l(),uo]),t("td",go,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mo,t("td",yo,[t("a",xo,[l("用队列实现栈"),e(n)])]),t("td",po,[e(s,{to:"/problem/0225.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bo,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ko]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Mo]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[Io]),_:1})]),t("td",vo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ho,t("td",wo,[t("a",Eo,[l("基本计算器 II"),e(n)])]),t("td",qo,[e(s,{to:"/problem/0227.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",zo,[e(s,{to:"/tag/stack.html"},{default:o(()=>[jo]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Oo]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[No]),_:1})]),t("td",Lo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bo,t("td",Vo,[t("a",Co,[l("用栈实现队列"),e(n)])]),t("td",Qo,[e(s,{to:"/problem/0232.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ro,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Zo]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Go]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[Ko]),_:1})]),t("td",So,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[To,t("td",Uo,[t("a",Xo,[l("回文链表"),e(n)])]),t("td",Yo,[e(s,{to:"/problem/0234.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ao,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Po]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[Do]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[Fo]),_:1}),l(),Jo]),t("td",Wo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$o,t("td",ts,[t("a",es,[l("验证二叉搜索树的前序遍历序列"),e(n)])]),ls,t("td",os,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ss]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[ns]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ds]),_:1}),l(),_s]),t("td",cs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[as,t("td",is,[t("a",rs,[l("最接近的二叉搜索树值 II"),e(n)])]),hs,t("td",fs,[e(s,{to:"/tag/stack.html"},{default:o(()=>[us]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[gs]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ms]),_:1}),l(),ys]),t("td",xs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ps,t("td",bs,[t("a",ks,[l("去除重复字母"),e(n)])]),t("td",Ms,[e(s,{to:"/problem/0316.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Is,[e(s,{to:"/tag/stack.html"},{default:o(()=>[vs]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Hs]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[ws]),_:1}),l(),Es]),t("td",qs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zs,t("td",js,[t("a",Os,[l("拼接最大数"),e(n)])]),Ns,t("td",Ls,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Bs]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Vs]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Cs]),_:1}),l(),Qs]),t("td",Rs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zs,t("td",Gs,[t("a",Ks,[l("验证二叉树的前序序列化"),e(n)])]),Ss,t("td",Ts,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Us]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Xs]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Ys]),_:1}),l(),As]),t("td",Ps,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ds,t("td",Fs,[t("a",Js,[l("扁平化嵌套列表迭代器"),e(n)])]),Ws,t("td",$s,[e(s,{to:"/tag/stack.html"},{default:o(()=>[tn]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[en]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ln]),_:1}),l(),on]),t("td",sn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nn,t("td",dn,[t("a",_n,[l("嵌套列表加权和 II"),e(n)])]),cn,t("td",an,[e(s,{to:"/tag/stack.html"},{default:o(()=>[rn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hn]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fn]),_:1})]),t("td",un,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gn,t("td",mn,[t("a",yn,[l("迷你语法分析器"),e(n)])]),xn,t("td",pn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[bn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kn]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Mn]),_:1})]),t("td",In,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vn,t("td",Hn,[t("a",wn,[l("文件的最长绝对路径"),e(n)])]),En,t("td",qn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[zn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jn]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[On]),_:1})]),t("td",Nn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ln,t("td",Bn,[t("a",Vn,[l("字符串解码"),e(n)])]),t("td",Cn,[e(s,{to:"/problem/0394.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Rn]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[Zn]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Gn]),_:1})]),t("td",Kn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sn,t("td",Tn,[t("a",Un,[l("移掉 K 位数字"),e(n)])]),Xn,t("td",Yn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[An]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Pn]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Dn]),_:1}),l(),Fn]),t("td",Jn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wn,t("td",$n,[t("a",td,[l("将二叉搜索树转化为排序的双向链表"),e(n)])]),t("td",ed,[e(s,{to:"/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ld,[e(s,{to:"/tag/stack.html"},{default:o(()=>[od]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[sd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nd]),_:1}),l(),dd]),t("td",_d,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cd,t("td",ad,[t("a",id,[l("三元表达式解析器"),e(n)])]),rd,t("td",hd,[e(s,{to:"/tag/stack.html"},{default:o(()=>[fd]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[ud]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[gd]),_:1})]),t("td",md,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yd,t("td",xd,[t("a",pd,[l("两数相加 II"),e(n)])]),t("td",bd,[e(s,{to:"/problem/0445.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",kd,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Md]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[Id]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[vd]),_:1})]),t("td",Hd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wd,t("td",Ed,[t("a",qd,[l("132 模式"),e(n)])]),zd,t("td",jd,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Od]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Nd]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[Ld]),_:1}),l(),Bd]),t("td",Vd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cd,t("td",Qd,[t("a",Rd,[l("寻找排列"),e(n)])]),Zd,t("td",Gd,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Kd]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Sd]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Td]),_:1}),l(),Ud]),t("td",Xd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yd,t("td",Ad,[t("a",Pd,[l("祖玛游戏"),e(n)])]),Dd,t("td",Fd,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Jd]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Wd]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[$d]),_:1}),l(),t_]),t("td",e_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l_,t("td",o_,[t("a",s_,[l("下一个更大元素 I"),e(n)])]),t("td",n_,[e(s,{to:"/problem/0496.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",d_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[__]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[c_]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[a_]),_:1}),l(),i_]),t("td",r_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[h_,t("td",f_,[t("a",u_,[l("下一个更大元素 II"),e(n)])]),t("td",g_,[e(s,{to:"/problem/0503.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",m_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[y_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[x_]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[p_]),_:1})]),t("td",b_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k_,t("td",M_,[t("a",I_,[l("从字符串生成二叉树"),e(n)])]),v_,t("td",H_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[w_]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[E_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q_]),_:1}),l(),z_]),t("td",j_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O_,t("td",N_,[t("a",L_,[l("最短无序连续子数组"),e(n)])]),B_,t("td",V_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[C_]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Q_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[R_]),_:1}),l(),Z_]),t("td",G_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K_,t("td",S_,[t("a",T_,[l("N 叉树的前序遍历"),e(n)])]),t("td",U_,[e(s,{to:"/problem/0589.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",X_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Y_]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[A_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[P_]),_:1})]),t("td",D_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[F_,t("td",J_,[t("a",W_,[l("N 叉树的后序遍历"),e(n)])]),t("td",$_,[e(s,{to:"/problem/0590.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",tc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ec]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[lc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[oc]),_:1})]),t("td",sc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[nc,t("td",dc,[t("a",_c,[l("标签验证器"),e(n)])]),cc,t("td",ac,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ic]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[rc]),_:1})]),t("td",hc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fc,t("td",uc,[t("a",gc,[l("函数的独占时间"),e(n)])]),mc,t("td",yc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[xc]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[pc]),_:1})]),t("td",bc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kc,t("td",Mc,[t("a",Ic,[l("最大二叉树"),e(n)])]),t("td",vc,[e(s,{to:"/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[wc]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Ec]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[qc]),_:1}),l(),zc]),t("td",jc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oc,t("td",Nc,[t("a",Lc,[l("有效的括号字符串"),e(n)])]),t("td",Bc,[e(s,{to:"/problem/0678.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Vc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Cc]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Qc]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Rc]),_:1}),l(),Zc]),t("td",Gc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kc,t("td",Sc,[t("a",Tc,[l("棒球比赛"),e(n)])]),t("td",Uc,[e(s,{to:"/problem/0682.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Yc]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ac]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[Pc]),_:1})]),t("td",Dc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fc,t("td",Jc,[t("a",Wc,[l("最大栈"),e(n)])]),$c,t("td",ta,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ea]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[la]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[oa]),_:1}),l(),sa]),t("td",na,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[da,t("td",_a,[t("a",ca,[l("原子的数量"),e(n)])]),aa,t("td",ia,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ra]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[ha]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[fa]),_:1}),l(),ua]),t("td",ga,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ma,t("td",ya,[t("a",xa,[l("小行星碰撞"),e(n)])]),pa,t("td",ba,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ka]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ma]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[Ia]),_:1})]),t("td",va,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ha,t("td",wa,[t("a",Ea,[l("Lisp 语法解析"),e(n)])]),qa,t("td",za,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ja]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[Oa]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Na]),_:1}),l(),La]),t("td",Ba,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Va,t("td",Ca,[t("a",Qa,[l("每日温度"),e(n)])]),t("td",Ra,[e(s,{to:"/problem/0739.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Za,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ga]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ka]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Sa]),_:1})]),t("td",Ta,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ua,t("td",Xa,[t("a",Ya,[l("最多能完成排序的块 II"),e(n)])]),Aa,t("td",Pa,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Da]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Fa]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ja]),_:1}),l(),Wa]),t("td",$a,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ti,t("td",ei,[t("a",li,[l("最多能完成排序的块"),e(n)])]),oi,t("td",si,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ni]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[di]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[_i]),_:1}),l(),ci]),t("td",ai,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ii,t("td",ri,[t("a",hi,[l("基本计算器 IV"),e(n)])]),fi,t("td",ui,[e(s,{to:"/tag/stack.html"},{default:o(()=>[gi]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[mi]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[yi]),_:1}),l(),xi]),t("td",pi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bi,t("td",ki,[t("a",Mi,[l("基本计算器 III"),e(n)])]),t("td",Ii,[e(s,{to:"/problem/0772.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vi,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Hi]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[wi]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Ei]),_:1}),l(),qi]),t("td",zi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ji,t("td",Oi,[t("a",Ni,[l("比较含退格的字符串"),e(n)])]),t("td",Li,[e(s,{to:"/problem/0844.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bi,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Vi]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[Ci]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Qi]),_:1}),l(),Ri]),t("td",Zi,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Gi,t("td",Ki,[t("a",Si,[l("车队"),e(n)])]),Ti,t("td",Ui,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Xi]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Yi]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[Ai]),_:1}),l(),Pi]),t("td",Di,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fi,t("td",Ji,[t("a",Wi,[l("括号的分数"),e(n)])]),$i,t("td",t1,[e(s,{to:"/tag/stack.html"},{default:o(()=>[e1]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[l1]),_:1})]),t("td",o1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s1,t("td",n1,[t("a",d1,[l("索引处的解码字符串"),e(n)])]),t("td",_1,[e(s,{to:"/problem/0880.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",c1,[e(s,{to:"/tag/stack.html"},{default:o(()=>[a1]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[i1]),_:1})]),t("td",r1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h1,t("td",f1,[t("a",u1,[l("最大频率栈"),e(n)])]),g1,t("td",m1,[e(s,{to:"/tag/stack.html"},{default:o(()=>[y1]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[x1]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[p1]),_:1}),l(),b1]),t("td",k1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[M1,t("td",I1,[t("a",v1,[l("递增顺序搜索树"),e(n)])]),H1,t("td",w1,[e(s,{to:"/tag/stack.html"},{default:o(()=>[E1]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[q1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[z1]),_:1}),l(),j1]),t("td",O1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[N1,t("td",L1,[t("a",B1,[l("股票价格跨度"),e(n)])]),V1,t("td",C1,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Q1]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[R1]),_:1}),l(),e(s,{to:"/tag/data-stream.html"},{default:o(()=>[Z1]),_:1}),l(),G1]),t("td",K1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S1,t("td",T1,[t("a",U1,[l("子数组的最小值之和"),e(n)])]),X1,t("td",Y1,[e(s,{to:"/tag/stack.html"},{default:o(()=>[A1]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[P1]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[D1]),_:1}),l(),F1]),t("td",J1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W1,t("td",$1,[t("a",tr,[l("使括号有效的最少添加"),e(n)])]),t("td",er,[e(s,{to:"/problem/0921.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[or]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[sr]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[nr]),_:1})]),t("td",dr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_r,t("td",cr,[t("a",ar,[l("戳印序列"),e(n)])]),ir,t("td",rr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[hr]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[fr]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[ur]),_:1}),l(),gr]),t("td",mr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yr,t("td",xr,[t("a",pr,[l("验证栈序列"),e(n)])]),t("td",br,[e(s,{to:"/problem/0946.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",kr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Mr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ir]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[vr]),_:1})]),t("td",Hr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wr,t("td",Er,[t("a",qr,[l("最大宽度坡"),e(n)])]),t("td",zr,[e(s,{to:"/problem/0962.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Or]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Nr]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Lr]),_:1})]),t("td",Br,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vr,t("td",Cr,[t("a",Qr,[l("奇偶跳"),e(n)])]),Rr,t("td",Zr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Gr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Kr]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Sr]),_:1}),l(),Tr]),t("td",Ur,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xr,t("td",Yr,[t("a",Ar,[l("检查替换后的词是否有效"),e(n)])]),Pr,t("td",Dr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Fr]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Jr]),_:1})]),t("td",Wr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$r,t("td",th,[t("a",eh,[l("笨阶乘"),e(n)])]),lh,t("td",oh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[sh]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[nh]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[dh]),_:1})]),t("td",_h,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ch,t("td",ah,[t("a",ih,[l("前序遍历构造二叉搜索树"),e(n)])]),t("td",rh,[e(s,{to:"/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[fh]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[uh]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[gh]),_:1}),l(),mh]),t("td",yh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xh,t("td",ph,[t("a",bh,[l("链表中的下一个更大节点"),e(n)])]),kh,t("td",Mh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ih]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[vh]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[Hh]),_:1}),l(),wh]),t("td",Eh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qh,t("td",zh,[t("a",jh,[l("删除最外层的括号"),e(n)])]),t("td",Oh,[e(s,{to:"/problem/1021.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Nh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Lh]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Bh]),_:1})]),t("td",Vh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ch,t("td",Qh,[t("a",Rh,[l("删除字符串中的所有相邻重复项"),e(n)])]),t("td",Zh,[e(s,{to:"/problem/1047.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Kh]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Sh]),_:1})]),t("td",Th,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Uh,t("td",Xh,[t("a",Yh,[l("有效子数组的数目"),e(n)])]),Ah,t("td",Ph,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Dh]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Fh]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Jh]),_:1})]),t("td",Wh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$h,t("td",tf,[t("a",ef,[l("不同字符的最小子序列"),e(n)])]),t("td",lf,[e(s,{to:"/problem/1081.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",of,[e(s,{to:"/tag/stack.html"},{default:o(()=>[sf]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[nf]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[df]),_:1}),l(),_f]),t("td",cf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[af,t("td",rf,[t("a",hf,[l("花括号展开 II"),e(n)])]),ff,t("td",uf,[e(s,{to:"/tag/stack.html"},{default:o(()=>[gf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mf]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[yf]),_:1}),l(),xf]),t("td",pf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bf,t("td",kf,[t("a",Mf,[l("解析布尔表达式"),e(n)])]),t("td",If,[e(s,{to:"/problem/1106.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vf,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Hf]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[wf]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Ef]),_:1})]),t("td",qf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zf,t("td",jf,[t("a",Of,[l("有效括号的嵌套深度"),e(n)])]),Nf,t("td",Lf,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Bf]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Vf]),_:1})]),t("td",Cf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qf,t("td",Rf,[t("a",Zf,[l("表现良好的最长时间段"),e(n)])]),Gf,t("td",Kf,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Sf]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Tf]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Uf]),_:1}),l(),Xf]),t("td",Yf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Af,t("td",Pf,[t("a",Df,[l("叶值的最小代价生成树"),e(n)])]),Ff,t("td",Jf,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Wf]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[$f]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[tu]),_:1}),l(),eu]),t("td",lu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ou,t("td",su,[t("a",nu,[l("餐盘栈"),e(n)])]),du,t("td",_u,[e(s,{to:"/tag/stack.html"},{default:o(()=>[cu]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[au]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[iu]),_:1}),l(),ru]),t("td",hu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fu,t("td",uu,[t("a",gu,[l("反转每对括号间的子串"),e(n)])]),t("td",mu,[e(s,{to:"/problem/1190.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yu,[e(s,{to:"/tag/stack.html"},{default:o(()=>[xu]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[pu]),_:1})]),t("td",bu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ku,t("td",Mu,[t("a",Iu,[l("删除字符串中的所有相邻重复项 II"),e(n)])]),vu,t("td",Hu,[e(s,{to:"/tag/stack.html"},{default:o(()=>[wu]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Eu]),_:1})]),t("td",qu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zu,t("td",ju,[t("a",Ou,[l("查找两棵二叉搜索树之和"),e(n)])]),Nu,t("td",Lu,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Bu]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Vu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cu]),_:1}),l(),Qu]),t("td",Ru,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zu,t("td",Gu,[t("a",Ku,[l("移除无效的括号"),e(n)])]),Su,t("td",Tu,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Uu]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Xu]),_:1})]),t("td",Yu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Au,t("td",Pu,[t("a",Du,[l("逆序打印不可变链表"),e(n)])]),Fu,t("td",Ju,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Wu]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[$u]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[tg]),_:1}),l(),eg]),t("td",lg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[og,t("td",sg,[t("a",ng,[l("设计一个支持增量操作的栈"),e(n)])]),t("td",dg,[e(s,{to:"/problem/1381.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_g,[e(s,{to:"/tag/stack.html"},{default:o(()=>[cg]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[ag]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ig]),_:1})]),t("td",rg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hg,t("td",fg,[t("a",ug,[l("用栈操作构建数组"),e(n)])]),t("td",gg,[e(s,{to:"/problem/1441.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mg,[e(s,{to:"/tag/stack.html"},{default:o(()=>[yg]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[xg]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[pg]),_:1})]),t("td",bg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kg,t("td",Mg,[t("a",Ig,[l("设计浏览器历史记录"),e(n)])]),t("td",vg,[e(s,{to:"/problem/1472.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hg,[e(s,{to:"/tag/stack.html"},{default:o(()=>[wg]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Eg]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[qg]),_:1}),l(),zg]),t("td",jg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Og,t("td",Ng,[t("a",Lg,[l("商品折扣后的最终价格"),e(n)])]),t("td",Bg,[e(s,{to:"/problem/1475.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Vg,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Cg]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Qg]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Rg]),_:1})]),t("td",Zg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Gg,t("td",Kg,[t("a",Sg,[l("统计全 1 子矩形"),e(n)])]),Tg,t("td",Ug,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Xg]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Yg]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ag]),_:1}),l(),Pg]),t("td",Dg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fg,t("td",Jg,[t("a",Wg,[l("形成目标数组的子数组最少增加次数"),e(n)])]),$g,t("td",tm,[e(s,{to:"/tag/stack.html"},{default:o(()=>[em]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[lm]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[om]),_:1}),l(),sm]),t("td",nm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dm,t("td",_m,[t("a",cm,[l("平衡括号字符串的最少插入次数"),e(n)])]),am,t("td",im,[e(s,{to:"/tag/stack.html"},{default:o(()=>[rm]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[hm]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[fm]),_:1})]),t("td",um,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gm,t("td",mm,[t("a",ym,[l("整理字符串"),e(n)])]),xm,t("td",pm,[e(s,{to:"/tag/stack.html"},{default:o(()=>[bm]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[km]),_:1})]),t("td",Mm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Im,t("td",vm,[t("a",Hm,[l("删除最短的子数组使剩余数组有序"),e(n)])]),wm,t("td",Em,[e(s,{to:"/tag/stack.html"},{default:o(()=>[qm]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[zm]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[jm]),_:1}),l(),Om]),t("td",Nm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lm,t("td",Bm,[t("a",Vm,[l("二叉搜索树迭代器 II"),e(n)])]),Cm,t("td",Qm,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Rm]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Zm]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Gm]),_:1}),l(),Km]),t("td",Sm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tm,t("td",Um,[t("a",Xm,[l("根据中缀表达式构造二叉表达式树"),e(n)])]),Ym,t("td",Am,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Pm]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Dm]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Fm]),_:1}),l(),Jm]),t("td",Wm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$m,t("td",ty,[t("a",ey,[l("文件夹操作日志搜集器"),e(n)])]),ly,t("td",oy,[e(s,{to:"/tag/stack.html"},{default:o(()=>[sy]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ny]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[dy]),_:1})]),t("td",_y,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cy,t("td",ay,[t("a",iy,[l("括号的最大嵌套深度"),e(n)])]),ry,t("td",hy,[e(s,{to:"/tag/stack.html"},{default:o(()=>[fy]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[uy]),_:1})]),t("td",gy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[my,t("td",yy,[t("a",xy,[l("设计带解析函数的表达式树"),e(n)])]),py,t("td",by,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ky]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[My]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Iy]),_:1}),l(),vy]),t("td",Hy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wy,t("td",Ey,[t("a",qy,[l("使字符串平衡的最少删除次数"),e(n)])]),zy,t("td",jy,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Oy]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Ny]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ly]),_:1})]),t("td",By,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vy,t("td",Cy,[t("a",Qy,[l("找出最具竞争力的子序列"),e(n)])]),Ry,t("td",Zy,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Gy]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Ky]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Sy]),_:1}),l(),Ty]),t("td",Uy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xy,t("td",Yy,[t("a",Ay,[l("无法吃午餐的学生数量"),e(n)])]),Py,t("td",Dy,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Fy]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[Jy]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Wy]),_:1}),l(),$y]),t("td",tx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ex,t("td",lx,[t("a",ox,[l("删除子字符串的最大得分"),e(n)])]),sx,t("td",nx,[e(s,{to:"/tag/stack.html"},{default:o(()=>[dx]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[_x]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[cx]),_:1})]),t("td",ax,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ix,t("td",rx,[t("a",hx,[l("设计最近使用（MRU）队列"),e(n)])]),fx,t("td",ux,[e(s,{to:"/tag/stack.html"},{default:o(()=>[gx]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[mx]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[yx]),_:1}),l(),xx]),t("td",px,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bx,t("td",kx,[t("a",Mx,[l("能看到海景的建筑物"),e(n)])]),Ix,t("td",vx,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Hx]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[wx]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Ex]),_:1})]),t("td",qx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zx,t("td",jx,[t("a",Ox,[l("车队 II"),e(n)])]),Nx,t("td",Lx,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Bx]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Vx]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Cx]),_:1}),l(),Qx]),t("td",Rx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zx,t("td",Gx,[t("a",Kx,[l("好子数组的最大分数"),e(n)])]),Sx,t("td",Tx,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ux]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Xx]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[Yx]),_:1}),l(),Ax]),t("td",Px,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dx,t("td",Fx,[t("a",Jx,[l("子数组最小乘积的最大值"),e(n)])]),Wx,t("td",$x,[e(s,{to:"/tag/stack.html"},{default:o(()=>[t0]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[e0]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[l0]),_:1}),l(),o0]),t("td",s0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n0,t("td",d0,[t("a",_0,[l("反转表达式值的最少操作次数"),e(n)])]),c0,t("td",a0,[e(s,{to:"/tag/stack.html"},{default:o(()=>[i0]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[r0]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[h0]),_:1}),l(),f0]),t("td",u0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[g0,t("td",m0,[t("a",y0,[l("删除一个字符串中所有出现的给定子字符串"),e(n)])]),x0,t("td",p0,[e(s,{to:"/tag/stack.html"},{default:o(()=>[b0]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[k0]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[M0]),_:1})]),t("td",I0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v0,t("td",H0,[t("a",w0,[l("队列中可以看到的人数"),e(n)])]),E0,t("td",q0,[e(s,{to:"/tag/stack.html"},{default:o(()=>[z0]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[j0]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[O0]),_:1})]),t("td",N0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L0,t("td",B0,[t("a",V0,[l("所有子数组最小值中的最大值"),e(n)])]),C0,t("td",Q0,[e(s,{to:"/tag/stack.html"},{default:o(()=>[R0]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Z0]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[G0]),_:1})]),t("td",K0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S0,t("td",T0,[t("a",U0,[l("使字符串平衡的最小交换次数"),e(n)])]),t("td",X0,[e(s,{to:"/problem/1963.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Y0,[e(s,{to:"/tag/stack.html"},{default:o(()=>[A0]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[P0]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[D0]),_:1}),l(),F0]),t("td",J0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W0,t("td",$0,[t("a",tp,[l("游戏中弱角色的数量"),e(n)])]),ep,t("td",lp,[e(s,{to:"/tag/stack.html"},{default:o(()=>[op]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[sp]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[np]),_:1}),l(),dp]),t("td",_p,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cp,t("td",ap,[t("a",ip,[l("反转单词前缀"),e(n)])]),rp,t("td",hp,[e(s,{to:"/tag/stack.html"},{default:o(()=>[fp]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[up]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[gp]),_:1})]),t("td",mp,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yp,t("td",xp,[t("a",pp,[l("解出数学表达式的学生分数"),e(n)])]),bp,t("td",kp,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Mp]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[Ip]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[vp]),_:1}),l(),Hp]),t("td",wp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ep,t("td",qp,[t("a",zp,[l("含特定字母的最小子序列"),e(n)])]),jp,t("td",Op,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Np]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Lp]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Bp]),_:1}),l(),Vp]),t("td",Cp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qp,t("td",Rp,[t("a",Zp,[l("子数组范围和"),e(n)])]),Gp,t("td",Kp,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Sp]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Tp]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Up]),_:1})]),t("td",Xp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yp,t("td",Ap,[t("a",Pp,[l("判断一个括号字符串是否有效"),e(n)])]),Dp,t("td",Fp,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Jp]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Wp]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[$p]),_:1})]),t("td",t3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e3,t("td",l3,[t("a",o3,[l("链表最大孪生和"),e(n)])]),s3,t("td",n3,[e(s,{to:"/tag/stack.html"},{default:o(()=>[d3]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[_3]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[c3]),_:1})]),t("td",a3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i3,t("td",r3,[t("a",h3,[l("替换数组中的非互质数"),e(n)])]),f3,t("td",u3,[e(s,{to:"/tag/stack.html"},{default:o(()=>[g3]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[m3]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[y3]),_:1}),l(),x3]),t("td",p3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b3,t("td",k3,[t("a",M3,[l("统计道路上的碰撞次数"),e(n)])]),I3,t("td",v3,[e(s,{to:"/tag/stack.html"},{default:o(()=>[H3]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[w3]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[E3]),_:1})]),t("td",q3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z3,t("td",j3,[t("a",O3,[l("美化数组的最少删除数"),e(n)])]),N3,t("td",L3,[e(s,{to:"/tag/stack.html"},{default:o(()=>[B3]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[V3]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[C3]),_:1})]),t("td",Q3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R3,t("td",Z3,[t("a",G3,[l("设计视频共享平台"),e(n)])]),K3,t("td",S3,[e(s,{to:"/tag/stack.html"},{default:o(()=>[T3]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[U3]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[X3]),_:1}),l(),Y3]),t("td",A3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[P3,t("td",D3,[t("a",F3,[l("巫师的总力量和"),e(n)])]),J3,t("td",W3,[e(s,{to:"/tag/stack.html"},{default:o(()=>[$3]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[tb]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[eb]),_:1}),l(),lb]),t("td",ob,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sb,t("td",nb,[t("a",db,[l("在一个网格中可以看到的人数"),e(n)])]),_b,t("td",cb,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ab]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ib]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[rb]),_:1}),l(),hb]),t("td",fb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ub,t("td",gb,[t("a",mb,[l("使数组按非递减顺序排列"),e(n)])]),yb,t("td",xb,[e(s,{to:"/tag/stack.html"},{default:o(()=>[pb]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[bb]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[kb]),_:1}),l(),Mb]),t("td",Ib,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vb,t("td",Hb,[t("a",wb,[l("设计一个文本编辑器"),e(n)])]),Eb,t("td",qb,[e(s,{to:"/tag/stack.html"},{default:o(()=>[zb]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[jb]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[Ob]),_:1}),l(),Nb]),t("td",Lb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bb,t("td",Vb,[t("a",Cb,[l("跳跃游戏 VIII"),e(n)])]),Qb,t("td",Rb,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Zb]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Gb]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Kb]),_:1}),l(),Sb]),t("td",Tb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ub,t("td",Xb,[t("a",Yb,[l("元素值大于变化阈值的子数组"),e(n)])]),Ab,t("td",Pb,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Db]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Fb]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Jb]),_:1}),l(),Wb]),t("td",$b,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t2,t("td",e2,[t("a",l2,[l("寻找可见山的数量"),e(n)])]),o2,t("td",s2,[e(s,{to:"/tag/stack.html"},{default:o(()=>[n2]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[d2]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[_2]),_:1}),l(),c2]),t("td",a2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i2,t("td",r2,[t("a",h2,[l("你能拿走的最大图书数量"),e(n)])]),f2,t("td",u2,[e(s,{to:"/tag/stack.html"},{default:o(()=>[g2]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[m2]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[y2]),_:1}),l(),x2]),t("td",p2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b2,t("td",k2,[t("a",M2,[l("根据模式串构造最小数字"),e(n)])]),I2,t("td",v2,[e(s,{to:"/tag/stack.html"},{default:o(()=>[H2]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[w2]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[E2]),_:1}),l(),q2]),t("td",z2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j2,t("td",O2,[t("a",N2,[l("从字符串中移除星号"),e(n)])]),L2,t("td",B2,[e(s,{to:"/tag/stack.html"},{default:o(()=>[V2]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[C2]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[Q2]),_:1})]),t("td",R2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z2,t("td",G2,[t("a",K2,[l("使用机器人打印字典序最小的字符串"),e(n)])]),S2,t("td",T2,[e(s,{to:"/tag/stack.html"},{default:o(()=>[U2]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[X2]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Y2]),_:1}),l(),A2]),t("td",P2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D2,t("td",F2,[t("a",J2,[l("下一个更大元素 IV"),e(n)])]),W2,t("td",$2,[e(s,{to:"/tag/stack.html"},{default:o(()=>[t4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[e4]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[l4]),_:1}),l(),o4]),t("td",s4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n4,t("td",d4,[t("a",_4,[l("从链表中移除节点"),e(n)])]),c4,t("td",a4,[e(s,{to:"/tag/stack.html"},{default:o(()=>[i4]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[r4]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[h4]),_:1}),l(),f4]),t("td",u4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g4,t("td",m4,[t("a",y4,[l("完成所有任务的最少时间"),e(n)])]),x4,t("td",p4,[e(s,{to:"/tag/stack.html"},{default:o(()=>[b4]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[k4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[M4]),_:1}),l(),I4]),t("td",v4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H4,t("td",w4,[t("a",E4,[l("网格图中最少访问的格子数"),e(n)])]),q4,t("td",z4,[e(s,{to:"/tag/stack.html"},{default:o(()=>[j4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[O4]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[N4]),_:1}),l(),L4]),t("td",B4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V4,t("td",C4,[t("a",Q4,[l("构造有效字符串的最少插入数"),e(n)])]),R4,t("td",Z4,[e(s,{to:"/tag/stack.html"},{default:o(()=>[G4]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[K4]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[S4]),_:1}),l(),T4]),t("td",U4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X4,t("td",Y4,[t("a",A4,[l("删除子串后的字符串最小长度"),e(n)])]),t("td",P4,[e(s,{to:"/problem/2696.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",D4,[e(s,{to:"/tag/stack.html"},{default:o(()=>[F4]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[J4]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[W4]),_:1})]),t("td",$4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[t6,t("td",e6,[t("a",l6,[l("最大和查询"),e(n)])]),o6,t("td",s6,[e(s,{to:"/tag/stack.html"},{default:o(()=>[n6]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[d6]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[_6]),_:1}),l(),c6]),t("td",a6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i6,t("td",r6,[t("a",h6,[l("机器人碰撞"),e(n)])]),f6,t("td",u6,[e(s,{to:"/tag/stack.html"},{default:o(()=>[g6]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[m6]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[y6]),_:1}),l(),x6]),t("td",p6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b6,t("td",k6,[t("a",M6,[l("数组是否表示某二叉树的前序遍历"),e(n)])]),I6,t("td",v6,[e(s,{to:"/tag/stack.html"},{default:o(()=>[H6]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[w6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[E6]),_:1}),l(),q6]),t("td",z6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j6,t("td",O6,[t("a",N6,[l("子序列最大优雅度"),e(n)])]),L6,t("td",B6,[e(s,{to:"/tag/stack.html"},{default:o(()=>[V6]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[C6]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Q6]),_:1}),l(),R6]),t("td",Z6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[G6,t("td",K6,[t("a",S6,[l("翻倍以链表形式表示的数字"),e(n)])]),T6,t("td",U6,[e(s,{to:"/tag/stack.html"},{default:o(()=>[X6]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[Y6]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[A6]),_:1})]),t("td",P6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D6,t("td",F6,[t("a",J6,[l("操作使得分最大"),e(n)])]),W6,t("td",$6,[e(s,{to:"/tag/stack.html"},{default:o(()=>[t8]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[e8]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[l8]),_:1}),l(),o8]),t("td",s8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n8,t("td",d8,[t("a",_8,[l("每个元素为最大值的最大范围"),e(n)])]),c8,t("td",a8,[e(s,{to:"/tag/stack.html"},{default:o(()=>[i8]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[r8]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[h8]),_:1})]),t("td",f8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u8,t("td",g8,[t("a",m8,[l("最长半递减子数组的长度"),e(n)])]),y8,t("td",x8,[e(s,{to:"/tag/stack.html"},{default:o(()=>[p8]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[b8]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[k8]),_:1}),l(),M8]),t("td",I8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v8,t("td",H8,[t("a",w8,[l("美丽塔 I"),e(n)])]),E8,t("td",q8,[e(s,{to:"/tag/stack.html"},{default:o(()=>[z8]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[j8]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[O8]),_:1})]),t("td",N8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L8,t("td",B8,[t("a",V8,[l("美丽塔 II"),e(n)])]),C8,t("td",Q8,[e(s,{to:"/tag/stack.html"},{default:o(()=>[R8]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Z8]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[G8]),_:1})]),t("td",K8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S8,t("td",T8,[t("a",U8,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(n)])]),X8,t("td",Y8,[e(s,{to:"/tag/stack.html"},{default:o(()=>[A8]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[P8]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[D8]),_:1}),l(),F8]),t("td",J8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W8,t("td",$8,[t("a",t5,[l("找到最大非递减数组的长度"),e(n)])]),e5,t("td",l5,[e(s,{to:"/tag/stack.html"},{default:o(()=>[o5]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[s5]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[n5]),_:1}),l(),d5]),t("td",_5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[c5,t("td",a5,[t("a",i5,[l("边界元素是最大值的子数组数目"),e(n)])]),r5,t("td",h5,[e(s,{to:"/tag/stack.html"},{default:o(()=>[f5]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[u5]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[g5]),_:1}),l(),m5]),t("td",y5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x5,t("td",p5,[t("a",b5,[l("删除星号以后字典序最小的字符串"),e(n)])]),k5,t("td",M5,[e(s,{to:"/tag/stack.html"},{default:o(()=>[I5]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[v5]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[H5]),_:1}),l(),w5]),t("td",E5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q5,t("td",z5,[t("a",j5,[l("清除数字"),e(n)])]),O5,t("td",N5,[e(s,{to:"/tag/stack.html"},{default:o(()=>[L5]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[B5]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[V5]),_:1})]),t("td",C5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Q5,t("td",R5,[t("a",Z5,[l("最大数组跳跃得分 I"),e(n)])]),G5,t("td",K5,[e(s,{to:"/tag/stack.html"},{default:o(()=>[S5]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[T5]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[U5]),_:1}),l(),X5]),t("td",Y5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A5,t("td",P5,[t("a",D5,[l("最大数组跳跃得分 II"),e(n)])]),F5,t("td",J5,[e(s,{to:"/tag/stack.html"},{default:o(()=>[W5]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[$5]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[t7]),_:1}),l(),e7]),t("td",l7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o7,t("td",s7,[t("a",n7,[l("使数组等于目标数组所需的最少操作次数"),e(n)])]),d7,t("td",_7,[e(s,{to:"/tag/stack.html"},{default:o(()=>[c7]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[a7]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[i7]),_:1}),l(),r7]),t("td",h7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f7,t("td",u7,[t("a",g7,[l("包含min函数的栈"),e(n)])]),t("td",m7,[e(s,{to:"/offer/jz_offer_30_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",y7,[e(s,{to:"/tag/stack.html"},{default:o(()=>[x7]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[p7]),_:1})]),t("td",b7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[k7,t("td",M7,[t("a",I7,[l("栈的压入、弹出序列"),e(n)])]),t("td",v7,[e(s,{to:"/offer/jz_offer_31_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",H7,[e(s,{to:"/tag/stack.html"},{default:o(()=>[w7]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[E7]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[q7]),_:1})]),t("td",z7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j7,t("td",O7,[t("a",N7,[l("二叉搜索树的后序遍历序列"),e(n)])]),t("td",L7,[e(s,{to:"/offer/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",B7,[e(s,{to:"/tag/stack.html"},{default:o(()=>[V7]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[C7]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Q7]),_:1}),l(),R7]),t("td",Z7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G7,t("td",K7,[t("a",S7,[l("二叉搜索树与双向链表"),e(n)])]),t("td",T7,[e(s,{to:"/offer/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",U7,[e(s,{to:"/tag/stack.html"},{default:o(()=>[X7]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Y7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[A7]),_:1}),l(),P7]),t("td",D7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F7,t("td",J7,[t("a",W7,[l("从尾到头打印链表"),e(n)])]),t("td",$7,[e(s,{to:"/offer/jz_offer_06_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",t9,[e(s,{to:"/tag/stack.html"},{default:o(()=>[e9]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[l9]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[o9]),_:1}),l(),s9]),t("td",n9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[d9,t("td",_9,[t("a",c9,[l("用两个栈实现队列"),e(n)])]),t("td",a9,[e(s,{to:"/offer/jz_offer_09_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",i9,[e(s,{to:"/tag/stack.html"},{default:o(()=>[r9]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[h9]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[f9]),_:1})]),t("td",u9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[g9,t("td",m9,[t("a",y9,[l("链表中的两数相加"),e(n)])]),t("td",x9,[e(s,{to:"/offer2/jz_offer_II_025.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",p9,[e(s,{to:"/tag/stack.html"},{default:o(()=>[b9]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[k9]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[M9]),_:1})]),t("td",I9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v9,t("td",H9,[t("a",w9,[l("重排链表"),e(n)])]),t("td",E9,[e(s,{to:"/offer2/jz_offer_II_026.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",q9,[e(s,{to:"/tag/stack.html"},{default:o(()=>[z9]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[j9]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[O9]),_:1}),l(),N9]),t("td",L9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B9,t("td",V9,[t("a",C9,[l("回文链表"),e(n)])]),t("td",Q9,[e(s,{to:"/offer2/jz_offer_II_027.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",R9,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Z9]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[G9]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[K9]),_:1}),l(),S9]),t("td",T9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[U9,t("td",X9,[t("a",Y9,[l("后缀表达式"),e(n)])]),t("td",A9,[e(s,{to:"/offer2/jz_offer_II_036.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",P9,[e(s,{to:"/tag/stack.html"},{default:o(()=>[D9]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[F9]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[J9]),_:1})]),t("td",W9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$9,t("td",tk,[t("a",ek,[l("小行星碰撞"),e(n)])]),lk,t("td",ok,[e(s,{to:"/tag/stack.html"},{default:o(()=>[sk]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[nk]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[dk]),_:1})]),t("td",_k,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ck,t("td",ak,[t("a",ik,[l("每日温度"),e(n)])]),t("td",rk,[e(s,{to:"/offer2/jz_offer_II_038.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hk,[e(s,{to:"/tag/stack.html"},{default:o(()=>[fk]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[uk]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[gk]),_:1})]),t("td",mk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yk,t("td",xk,[t("a",pk,[l("直方图最大矩形面积"),e(n)])]),t("td",bk,[e(s,{to:"/offer2/jz_offer_II_039.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",kk,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Mk]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ik]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[vk]),_:1})]),t("td",Hk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wk,t("td",Ek,[t("a",qk,[l("矩阵中最大的矩形"),e(n)])]),t("td",zk,[e(s,{to:"/offer2/jz_offer_II_040.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jk,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ok]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Nk]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Lk]),_:1}),l(),Bk]),t("td",Vk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ck,t("td",Qk,[t("a",Rk,[l("展平二叉搜索树"),e(n)])]),Zk,t("td",Gk,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Kk]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Sk]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Tk]),_:1}),l(),Uk]),t("td",Xk,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Yk,t("td",Ak,[t("a",Pk,[l("二叉搜索树迭代器"),e(n)])]),t("td",Dk,[e(s,{to:"/offer2/jz_offer_II_055.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fk,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Jk]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Wk]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[$k]),_:1}),l(),tM]),t("td",eM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lM,t("td",oM,[t("a",sM,[l("回文链表"),e(n)])]),nM,t("td",dM,[e(s,{to:"/tag/stack.html"},{default:o(()=>[_M]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[cM]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[aM]),_:1}),l(),iM]),t("td",rM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[hM,t("td",fM,[t("a",uM,[l("三合一"),e(n)])]),gM,t("td",mM,[e(s,{to:"/tag/stack.html"},{default:o(()=>[yM]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[xM]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[pM]),_:1})]),t("td",bM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[kM,t("td",MM,[t("a",IM,[l("栈的最小值"),e(n)])]),vM,t("td",HM,[e(s,{to:"/tag/stack.html"},{default:o(()=>[wM]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[EM]),_:1})]),t("td",qM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zM,t("td",jM,[t("a",OM,[l("堆盘子"),e(n)])]),NM,t("td",LM,[e(s,{to:"/tag/stack.html"},{default:o(()=>[BM]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[VM]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[CM]),_:1})]),t("td",QM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RM,t("td",ZM,[t("a",GM,[l("化栈为队"),e(n)])]),KM,t("td",SM,[e(s,{to:"/tag/stack.html"},{default:o(()=>[TM]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[UM]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[XM]),_:1})]),t("td",YM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[AM,t("td",PM,[t("a",DM,[l("栈排序"),e(n)])]),FM,t("td",JM,[e(s,{to:"/tag/stack.html"},{default:o(()=>[WM]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[$M]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[tI]),_:1})]),t("td",eI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lI,t("td",oI,[t("a",sI,[l("部分排序"),e(n)])]),nI,t("td",dI,[e(s,{to:"/tag/stack.html"},{default:o(()=>[_I]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[cI]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[aI]),_:1}),l(),iI]),t("td",rI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hI,t("td",fI,[t("a",uI,[l("计算器"),e(n)])]),gI,t("td",mI,[e(s,{to:"/tag/stack.html"},{default:o(()=>[yI]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[xI]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[pI]),_:1})]),t("td",bI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kI,t("td",MI,[t("a",II,[l("BiNode"),e(n)])]),vI,t("td",HI,[e(s,{to:"/tag/stack.html"},{default:o(()=>[wI]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[EI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qI]),_:1}),l(),zI]),t("td",jI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[OI,t("td",NI,[t("a",LI,[l("直方图的水量"),e(n)])]),BI,t("td",VI,[e(s,{to:"/tag/stack.html"},{default:o(()=>[CI]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[QI]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[RI]),_:1}),l(),ZI]),t("td",GI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const XI=c(h,[["render",KI],["__file","stack.html.vue"]]);export{XI as default};
