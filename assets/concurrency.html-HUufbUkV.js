import{_ as c,r as _,o as a,c as i,a as t,d as e,w as o,b as l,f as h}from"./app-Y-c80SUp.js";const r={},u=t("h1",{id:"多线程",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#多线程","aria-hidden":"true"},"#"),l(" 多线程")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),x=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),z=t("code",null,"堆（优先队列）",-1),M=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),E=t("code",null,"字符串匹配",-1),B=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),N=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),I=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),F=t("code",null,"强连通分量",-1),H=t("code",null,"欧拉回路",-1),O=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),K=t("p",null,[t("strong",null,"算法")],-1),P=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),U=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),X=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),lt=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),ct=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ut=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),xt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),zt=t("code",null,"概率与统计",-1),Mt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Et=t("code",null,"数据库",-1),Bt=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Nt=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),It=t("span",{class:"blue"},"多线程",-1),Rt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ft=t("td",{style:{"text-align":"center"}},"1114",-1),Ht={style:{"text-align":"left"}},Ot={href:"https://leetcode.com/problems/print-in-order",target:"_blank",rel:"noopener noreferrer"},Tt=t("td",{style:{"text-align":"center"}},null,-1),At={style:{"text-align":"left"}},Dt=t("code",null,"多线程",-1),Gt={style:{"text-align":"left"}},Jt=t("td",{style:{"text-align":"center"}},"1115",-1),Kt={style:{"text-align":"left"}},Pt={href:"https://leetcode.com/problems/print-foobar-alternately",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},null,-1),St={style:{"text-align":"left"}},Ut=t("code",null,"多线程",-1),Wt={style:{"text-align":"left"}},Xt=t("td",{style:{"text-align":"center"}},"1116",-1),Yt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/print-zero-even-odd",target:"_blank",rel:"noopener noreferrer"},$t=t("td",{style:{"text-align":"center"}},null,-1),te={style:{"text-align":"left"}},ee=t("code",null,"多线程",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"1117",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/building-h2o",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),_e={style:{"text-align":"left"}},ce=t("code",null,"多线程",-1),ae={style:{"text-align":"left"}},ie=t("td",{style:{"text-align":"center"}},"1188",-1),he={style:{"text-align":"left"}},re={href:"https://leetcode.com/problems/design-bounded-blocking-queue",target:"_blank",rel:"noopener noreferrer"},ue=t("td",{style:{"text-align":"center"}},null,-1),fe={style:{"text-align":"left"}},ge=t("code",null,"多线程",-1),me={style:{"text-align":"left"}},ye=t("td",{style:{"text-align":"center"}},"1195",-1),pe={style:{"text-align":"left"}},xe={href:"https://leetcode.com/problems/fizz-buzz-multithreaded",target:"_blank",rel:"noopener noreferrer"},be=t("td",{style:{"text-align":"center"}},null,-1),ke={style:{"text-align":"left"}},we=t("code",null,"多线程",-1),ve={style:{"text-align":"left"}},ze=t("td",{style:{"text-align":"center"}},"1226",-1),Me={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/the-dining-philosophers",target:"_blank",rel:"noopener noreferrer"},Ee=t("td",{style:{"text-align":"center"}},null,-1),Be={style:{"text-align":"left"}},Le=t("code",null,"多线程",-1),Ne={style:{"text-align":"left"}},Ve=t("td",{style:{"text-align":"center"}},"1242",-1),Ce={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},Re=t("td",{style:{"text-align":"center"}},null,-1),je={style:{"text-align":"left"}},Fe=t("code",null,"深度优先搜索",-1),He=t("code",null,"广度优先搜索",-1),Oe=t("code",null,"多线程",-1),Te={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"1279",-1),De={style:{"text-align":"left"}},Ge={href:"https://leetcode.com/problems/traffic-light-controlled-intersection",target:"_blank",rel:"noopener noreferrer"},Je=t("td",{style:{"text-align":"center"}},null,-1),Ke={style:{"text-align":"left"}},Pe=t("code",null,"多线程",-1),Qe={style:{"text-align":"left"}};function Se(Ue,We){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),i("div",null,[u,t("details",null,[f,g,t("p",null,[e(n,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/tag/stack.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/tag/shortest-path.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/tag/biconnected-component.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/tag/trie.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[J]),_:1})]),K,t("p",null,[e(n,{to:"/tag/enumeration.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/tag/recursion.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/tag/bucket-sort.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/tag/counting.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/tag/bitmask.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/tag/rolling-hash.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(n,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(n,{to:"/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/tag/geometry.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/tag/game-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/tag/rejection-sampling.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/tag/database.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/tag/interactive.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/tag/iterator.html"},{default:o(()=>[Ct]),_:1}),l(),It])]),Rt,h(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Ft,t("td",Ht,[t("a",Ot,[l("按序打印"),e(s)])]),Tt,t("td",At,[e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Dt]),_:1})]),t("td",Gt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Jt,t("td",Kt,[t("a",Pt,[l("交替打印 FooBar"),e(s)])]),Qt,t("td",St,[e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Ut]),_:1})]),t("td",Wt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xt,t("td",Yt,[t("a",Zt,[l("打印零与奇偶数"),e(s)])]),$t,t("td",te,[e(n,{to:"/tag/concurrency.html"},{default:o(()=>[ee]),_:1})]),t("td",oe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[le,t("td",ne,[t("a",se,[l("H2O 生成"),e(s)])]),de,t("td",_e,[e(n,{to:"/tag/concurrency.html"},{default:o(()=>[ce]),_:1})]),t("td",ae,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ie,t("td",he,[t("a",re,[l("设计有限阻塞队列"),e(s)])]),ue,t("td",fe,[e(n,{to:"/tag/concurrency.html"},{default:o(()=>[ge]),_:1})]),t("td",me,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ye,t("td",pe,[t("a",xe,[l("交替打印字符串"),e(s)])]),be,t("td",ke,[e(n,{to:"/tag/concurrency.html"},{default:o(()=>[we]),_:1})]),t("td",ve,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ze,t("td",Me,[t("a",qe,[l("哲学家进餐"),e(s)])]),Ee,t("td",Be,[e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Le]),_:1})]),t("td",Ne,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ve,t("td",Ce,[t("a",Ie,[l("多线程网页爬虫"),e(s)])]),Re,t("td",je,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Fe]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[He]),_:1}),l(),e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Oe]),_:1})]),t("td",Te,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ae,t("td",De,[t("a",Ge,[l("红绿灯路口"),e(s)])]),Je,t("td",Ke,[e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Pe]),_:1})]),t("td",Qe,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const Ye=c(r,[["render",Se],["__file","concurrency.html.vue"]]);export{Ye as default};
