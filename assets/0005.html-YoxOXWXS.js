import{_ as u,r as c,o as d,c as k,a as n,b as t,d as s,w as a,f as m,e as _}from"./app-zLZrqgWi.js";const h={},b={id:"_5-最长回文子串",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#_5-最长回文子串","aria-hidden":"true"},"#",-1),f={href:"https://2xiao.github.io/leetcode-js/problem/0005.html",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"双指针",-1),y=n("code",null,"字符串",-1),x=n("code",null,"动态规划",-1),w={href:"https://leetcode.cn/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"力扣",-1),q={href:"https://leetcode.com/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"LeetCode",-1),C=_('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given a string <code>s</code>, return <em>the longest</em> <em>palindromic</em> <em>substring</em> in <code>s</code>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: s = &quot;babad&quot;</p><p>Output: &quot;bab&quot;</p><p>Explanation: &quot;aba&quot; is also a valid answer.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: s = &quot;cbbd&quot;</p><p>Output: &quot;bb&quot;</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= s.length &lt;= 1000</code></li><li><code>s</code> consist of only digits and English letters.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个字符串 <code>s</code>，找到 <code>s</code> 中最长的回文子串。</p><p>如果字符串的反序与原始字符串相同，则该字符串称为回文字符串。</p><p><code>s</code> 仅由数字和英文字母组成。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><h3 id="思路一-中心扩展法" tabindex="-1"><a class="header-anchor" href="#思路一-中心扩展法" aria-hidden="true">#</a> 思路一：中心扩展法</h3><p>找回文串的难点在于，回文串的的长度可能是奇数也可能是偶数，解决问题的核心是以每个字符或两个相邻字符为中心，用左右指针向两边扩展，判断是否是回文串。遍历所有可能的中心，记录最长的回文串。</p><ul><li><strong>奇数长度的回文串：</strong> 以每个字符为中心，向两边扩展判断回文串。</li><li><strong>偶数长度的回文串：</strong> 以每两个相邻字符的中心向两边扩展判断回文串。</li></ul><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n^2)</code>，其中 <code>n</code> 是字符串的长度。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>。</li></ul><hr><h3 id="思路二-动态规划" tabindex="-1"><a class="header-anchor" href="#思路二-动态规划" aria-hidden="true">#</a> 思路二：动态规划</h3><p>动态规划法的思想是，利用已知的回文串信息推导出更长的回文串。</p><ul><li><p>定义动态规划数组 <code>dp</code>，其中 <code>dp[i][j]</code> 表示字符串 <code>s</code> 从索引 <code>i</code> 到索引 <code>j</code> 是否为回文串。</p></li><li><p>状态转移方程为：</p><ul><li><code>s[i] == s[j] &amp;&amp; dp[i+1][j-1] == true</code> 时，<code>dp[i][j] = true</code></li><li>否则，<code>dp[i][j] = false</code></li></ul></li><li><p>边界条件：</p><ul><li><code>dp[i][i] = true</code></li><li><code>s[i] == s[i+1]</code> 时，<code>dp[i][i+1] = true</code></li></ul></li></ul><h4 id="复杂度分析-1" tabindex="-1"><a class="header-anchor" href="#复杂度分析-1" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n^2)</code>，其中 <code>n</code> 是字符串的长度。</li><li><strong>空间复杂度</strong>：<code>O(n^2)</code>。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2>',25),A=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[t(`/**
 * `),n("span",{class:"token keyword"},"@param"),t(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),t("string"),n("span",{class:"token punctuation"},"}")]),t(),n("span",{class:"token parameter"},"s"),t(`
 * `),n("span",{class:"token keyword"},"@return"),t(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),t("string"),n("span",{class:"token punctuation"},"}")]),t(`
 */`)]),t(`
`),n("span",{class:"token keyword"},"var"),t(),n("span",{class:"token function-variable function"},"longestPalindrome"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"s"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
	`),n("span",{class:"token keyword"},"const"),t(),n("span",{class:"token function-variable function"},"palindrome"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[t("i"),n("span",{class:"token punctuation"},","),t(" j")]),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"{"),t(`
		`),n("span",{class:"token keyword"},"while"),t(),n("span",{class:"token punctuation"},"("),t("i "),n("span",{class:"token operator"},">="),t(),n("span",{class:"token number"},"0"),t(),n("span",{class:"token operator"},"&&"),t(" j "),n("span",{class:"token operator"},"<"),t(" s"),n("span",{class:"token punctuation"},"."),t("length "),n("span",{class:"token operator"},"&&"),t(" s"),n("span",{class:"token punctuation"},"["),t("i"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"=="),t(" s"),n("span",{class:"token punctuation"},"["),t("j"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
			i`),n("span",{class:"token operator"},"--"),n("span",{class:"token punctuation"},";"),t(`
			j`),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),t(`
		`),n("span",{class:"token punctuation"},"}"),t(`
		`),n("span",{class:"token keyword"},"return"),t(" s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"substring"),n("span",{class:"token punctuation"},"("),t("i "),n("span",{class:"token operator"},"+"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),t(" j"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"let"),t(" res "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"for"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),t(" i "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),t(" i "),n("span",{class:"token operator"},"<"),t(" s"),n("span",{class:"token punctuation"},"."),t("length"),n("span",{class:"token punctuation"},";"),t(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
		`),n("span",{class:"token keyword"},"let"),t(" s1 "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"palindrome"),n("span",{class:"token punctuation"},"("),t("i"),n("span",{class:"token punctuation"},","),t(" i"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
		`),n("span",{class:"token keyword"},"let"),t(" s2 "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token function"},"palindrome"),n("span",{class:"token punctuation"},"("),t("i"),n("span",{class:"token punctuation"},","),t(" i "),n("span",{class:"token operator"},"+"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
		res `),n("span",{class:"token operator"},"="),t(" res"),n("span",{class:"token punctuation"},"."),t("length "),n("span",{class:"token operator"},">"),t(" s1"),n("span",{class:"token punctuation"},"."),t("length "),n("span",{class:"token operator"},"?"),t(" res "),n("span",{class:"token operator"},":"),t(" s1"),n("span",{class:"token punctuation"},";"),t(`
		res `),n("span",{class:"token operator"},"="),t(" res"),n("span",{class:"token punctuation"},"."),t("length "),n("span",{class:"token operator"},">"),t(" s2"),n("span",{class:"token punctuation"},"."),t("length "),n("span",{class:"token operator"},"?"),t(" res "),n("span",{class:"token operator"},":"),t(" s2"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token punctuation"},"}"),t(`
	`),n("span",{class:"token keyword"},"return"),t(" res"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),O=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[t(`/**
 * `),n("span",{class:"token keyword"},"@param"),t(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),t("string"),n("span",{class:"token punctuation"},"}")]),t(),n("span",{class:"token parameter"},"s"),t(`
 * `),n("span",{class:"token keyword"},"@return"),t(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),t("string"),n("span",{class:"token punctuation"},"}")]),t(`
 */`)]),t(`
`),n("span",{class:"token keyword"},"var"),t(),n("span",{class:"token function-variable function"},"longestPalindrome"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"s"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
	`),n("span",{class:"token keyword"},"const"),t(" n "),n("span",{class:"token operator"},"="),t(" s"),n("span",{class:"token punctuation"},"."),t("length"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"let"),t(" dp "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"new"),t(),n("span",{class:"token class-name"},"Array"),n("span",{class:"token punctuation"},"("),t("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"fill"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"i"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token keyword"},"new"),t(),n("span",{class:"token class-name"},"Array"),n("span",{class:"token punctuation"},"("),t("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"fill"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"let"),t(" start "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"let"),t(" end "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),t(`

	`),n("span",{class:"token comment"},"// 初始化动态规划数组"),t(`
	`),n("span",{class:"token keyword"},"for"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),t(" i "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),t(" i "),n("span",{class:"token operator"},"<"),t(" n"),n("span",{class:"token punctuation"},";"),t(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
		dp`),n("span",{class:"token punctuation"},"["),t("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),t("i"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),t(`
		`),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),t("i "),n("span",{class:"token operator"},"<"),t(" n "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"1"),t(),n("span",{class:"token operator"},"&&"),t(" s"),n("span",{class:"token punctuation"},"["),t("i"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"=="),t(" s"),n("span",{class:"token punctuation"},"["),t("i "),n("span",{class:"token operator"},"+"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
			dp`),n("span",{class:"token punctuation"},"["),t("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),t("i "),n("span",{class:"token operator"},"+"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),t(`
			start `),n("span",{class:"token operator"},"="),t(" i"),n("span",{class:"token punctuation"},";"),t(`
			end `),n("span",{class:"token operator"},"="),t(" i "),n("span",{class:"token operator"},"+"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),t(`
		`),n("span",{class:"token punctuation"},"}"),t(`
	`),n("span",{class:"token punctuation"},"}"),t(`

	`),n("span",{class:"token comment"},"// 对于长度为 2 的子串，我们在初始化动态规划数组时已经考虑到了，即 dp[i][i+1]。"),t(`
	`),n("span",{class:"token comment"},"// 因此，从长度为 3 的子串开始遍历，直到长度为 n 的子串，逐步填充动态规划数组。"),t(`
	`),n("span",{class:"token keyword"},"for"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),t(" len "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},";"),t(" len "),n("span",{class:"token operator"},"<="),t(" n"),n("span",{class:"token punctuation"},";"),t(" len"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
		`),n("span",{class:"token keyword"},"for"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),t(" i "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),t(" i "),n("span",{class:"token operator"},"+"),t(" len "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"1"),t(),n("span",{class:"token operator"},"<"),t(" n"),n("span",{class:"token punctuation"},";"),t(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
			`),n("span",{class:"token keyword"},"const"),t(" j "),n("span",{class:"token operator"},"="),t(" i "),n("span",{class:"token operator"},"+"),t(" len "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),t(`
			`),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),t("s"),n("span",{class:"token punctuation"},"["),t("i"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"=="),t(" s"),n("span",{class:"token punctuation"},"["),t("j"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"&&"),t(" dp"),n("span",{class:"token punctuation"},"["),t("i "),n("span",{class:"token operator"},"+"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),t("j "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
				dp`),n("span",{class:"token punctuation"},"["),t("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),t("j"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),t(`
				start `),n("span",{class:"token operator"},"="),t(" i"),n("span",{class:"token punctuation"},";"),t(`
				end `),n("span",{class:"token operator"},"="),t(" i "),n("span",{class:"token operator"},"+"),t(" len "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),t(`
			`),n("span",{class:"token punctuation"},"}"),t(`
		`),n("span",{class:"token punctuation"},"}"),t(`
	`),n("span",{class:"token punctuation"},"}"),t(`
	`),n("span",{class:"token keyword"},"return"),t(" s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"substring"),n("span",{class:"token punctuation"},"("),t("start"),n("span",{class:"token punctuation"},","),t(" end "),n("span",{class:"token operator"},"+"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("h2",{id:"相关题目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),t(" 相关题目")],-1),N=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"left"}},"难度")])],-1),V=n("td",{style:{"text-align":"center"}},"214",-1),I={style:{"text-align":"left"}},B={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},H=n("td",{style:{"text-align":"center"}},null,-1),M={style:{"text-align":"left"}},T=n("code",null,"字符串",-1),P=n("code",null,"字符串匹配",-1),R=n("code",null,"哈希函数",-1),G=n("code",null,"1+",-1),S={style:{"text-align":"left"}},z=n("td",{style:{"text-align":"center"}},"266",-1),D={style:{"text-align":"left"}},F={href:"https://leetcode.com/problems/palindrome-permutation",target:"_blank",rel:"noopener noreferrer"},J=n("td",{style:{"text-align":"center"}},null,-1),K={style:{"text-align":"left"}},Q=n("code",null,"位运算",-1),U=n("code",null,"哈希表",-1),W=n("code",null,"字符串",-1),X={style:{"text-align":"left"}},Y=n("td",{style:{"text-align":"center"}},"336",-1),Z={style:{"text-align":"left"}},$={href:"https://leetcode.com/problems/palindrome-pairs",target:"_blank",rel:"noopener noreferrer"},nn=n("td",{style:{"text-align":"center"}},null,-1),tn={style:{"text-align":"left"}},sn=n("code",null,"字典树",-1),an=n("code",null,"数组",-1),en=n("code",null,"哈希表",-1),on=n("code",null,"1+",-1),ln={style:{"text-align":"left"}},cn=n("td",{style:{"text-align":"center"}},"516",-1),pn={style:{"text-align":"left"}},rn={href:"https://leetcode.com/problems/longest-palindromic-subsequence",target:"_blank",rel:"noopener noreferrer"},un={style:{"text-align":"center"}},dn={style:{"text-align":"left"}},kn=n("code",null,"字符串",-1),mn=n("code",null,"动态规划",-1),_n={style:{"text-align":"left"}},hn=n("td",{style:{"text-align":"center"}},"647",-1),bn={style:{"text-align":"left"}},gn={href:"https://leetcode.com/problems/palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},fn=n("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},yn=n("code",null,"双指针",-1),xn=n("code",null,"字符串",-1),wn=n("code",null,"动态规划",-1),jn={style:{"text-align":"left"}},qn=n("td",{style:{"text-align":"center"}},"2472",-1),En={style:{"text-align":"left"}},Cn={href:"https://leetcode.com/problems/maximum-number-of-non-overlapping-palindrome-substrings",target:"_blank",rel:"noopener noreferrer"},An=n("td",{style:{"text-align":"center"}},null,-1),On={style:{"text-align":"left"}},Ln=n("code",null,"贪心",-1),Nn=n("code",null,"双指针",-1),Vn=n("code",null,"字符串",-1),In=n("code",null,"1+",-1),Bn={style:{"text-align":"left"}};function Hn(Mn,Tn){const o=c("ExternalLinkIcon"),l=c("font"),e=c("RouterLink"),r=c("CodeTabs");return d(),k("div",null,[n("h1",b,[g,t(),n("a",f,[t("5. 最长回文子串"),s(o)])]),n("p",null,[t("🟠 "),s(l,{color:"#ffb800"},{default:a(()=>[t("Medium")]),_:1}),t("  🔖  "),s(e,{to:"/tag/two-pointers.html"},{default:a(()=>[v]),_:1}),t(),s(e,{to:"/tag/string.html"},{default:a(()=>[y]),_:1}),t(),s(e,{to:"/tag/dynamic-programming.html"},{default:a(()=>[x]),_:1}),t("  🔗 "),n("a",w,[j,s(o)]),t(),n("a",q,[E,s(o)])]),C,s(r,{id:"166",data:[{id:"中心扩展法"},{id:"动态规划"}]},{title0:a(({value:p,isActive:i})=>[t("中心扩展法")]),title1:a(({value:p,isActive:i})=>[t("动态规划")]),tab0:a(({value:p,isActive:i})=>[A]),tab1:a(({value:p,isActive:i})=>[O]),_:1}),L,m(" prettier-ignore "),n("table",null,[N,n("tbody",null,[n("tr",null,[V,n("td",I,[n("a",B,[t("最短回文串"),s(o)])]),H,n("td",M,[s(e,{to:"/tag/string.html"},{default:a(()=>[T]),_:1}),t(),s(e,{to:"/tag/string-matching.html"},{default:a(()=>[P]),_:1}),t(),s(e,{to:"/tag/hash-function.html"},{default:a(()=>[R]),_:1}),t(),G]),n("td",S,[s(l,{color:"#ff334b"},{default:a(()=>[t("Hard")]),_:1})])]),n("tr",null,[z,n("td",D,[n("a",F,[t("回文排列 🔒"),s(o)])]),J,n("td",K,[s(e,{to:"/tag/bit-manipulation.html"},{default:a(()=>[Q]),_:1}),t(),s(e,{to:"/tag/hash-table.html"},{default:a(()=>[U]),_:1}),t(),s(e,{to:"/tag/string.html"},{default:a(()=>[W]),_:1})]),n("td",X,[s(l,{color:"#15bd66"},{default:a(()=>[t("Easy")]),_:1})])]),n("tr",null,[Y,n("td",Z,[n("a",$,[t("回文对"),s(o)])]),nn,n("td",tn,[s(e,{to:"/tag/trie.html"},{default:a(()=>[sn]),_:1}),t(),s(e,{to:"/tag/array.html"},{default:a(()=>[an]),_:1}),t(),s(e,{to:"/tag/hash-table.html"},{default:a(()=>[en]),_:1}),t(),on]),n("td",ln,[s(l,{color:"#ff334b"},{default:a(()=>[t("Hard")]),_:1})])]),n("tr",null,[cn,n("td",pn,[n("a",rn,[t("最长回文子序列"),s(o)])]),n("td",un,[s(e,{to:"/problem/0516.html"},{default:a(()=>[t("[✓]")]),_:1})]),n("td",dn,[s(e,{to:"/tag/string.html"},{default:a(()=>[kn]),_:1}),t(),s(e,{to:"/tag/dynamic-programming.html"},{default:a(()=>[mn]),_:1})]),n("td",_n,[s(l,{color:"#ffb800"},{default:a(()=>[t("Medium")]),_:1})])]),n("tr",null,[hn,n("td",bn,[n("a",gn,[t("回文子串"),s(o)])]),fn,n("td",vn,[s(e,{to:"/tag/two-pointers.html"},{default:a(()=>[yn]),_:1}),t(),s(e,{to:"/tag/string.html"},{default:a(()=>[xn]),_:1}),t(),s(e,{to:"/tag/dynamic-programming.html"},{default:a(()=>[wn]),_:1})]),n("td",jn,[s(l,{color:"#ffb800"},{default:a(()=>[t("Medium")]),_:1})])]),n("tr",null,[qn,n("td",En,[n("a",Cn,[t("不重叠回文子字符串的最大数目"),s(o)])]),An,n("td",On,[s(e,{to:"/tag/greedy.html"},{default:a(()=>[Ln]),_:1}),t(),s(e,{to:"/tag/two-pointers.html"},{default:a(()=>[Nn]),_:1}),t(),s(e,{to:"/tag/string.html"},{default:a(()=>[Vn]),_:1}),t(),In]),n("td",Bn,[s(l,{color:"#ff334b"},{default:a(()=>[t("Hard")]),_:1})])])])])])}const Rn=u(h,[["render",Hn],["__file","0005.html.vue"]]);export{Rn as default};
