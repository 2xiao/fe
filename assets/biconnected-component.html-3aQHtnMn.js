import{_ as a,r as d,o as c,c as h,a as t,b as e,w as o,d as l,f as i}from"./app-kg29FJls.js";const u={},r=t("h1",{id:"双连通分量",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#双连通分量","aria-hidden":"true"},"#"),l(" 双连通分量")],-1),m=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),p=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),q=t("code",null,"堆（优先队列）",-1),C=t("code",null,"哈希表",-1),L=t("code",null,"字符串",-1),N=t("code",null,"字符串匹配",-1),V=t("code",null,"树",-1),B=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),z=t("code",null,"最小生成树",-1),H=t("code",null,"图",-1),I=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),P=t("code",null,"欧拉回路",-1),T=t("span",{class:"blue"},"双连通分量",-1),A=t("code",null,"并查集",-1),D=t("code",null,"字典树",-1),F=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),M=t("p",null,[t("strong",null,"算法")],-1),O=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),U=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),X=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),lt=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),it=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),rt=t("code",null,"哈希函数",-1),mt=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),pt=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),qt=t("code",null,"概率与统计",-1),Ct=t("code",null,"水塘抽样",-1),Lt=t("code",null,"拒绝采样",-1),Nt=t("code",null,"数据库",-1),Vt=t("code",null,"设计",-1),Bt=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),zt=t("code",null,"交互",-1),Ht=t("code",null,"迭代器",-1),It=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"1192",-1),Pt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},At=t("td",{style:{"text-align":"center"}},null,-1),Dt={style:{"text-align":"left"}},Ft=t("code",null,"深度优先搜索",-1),Gt=t("code",null,"图",-1),Jt=t("code",null,"双连通分量",-1),Mt={style:{"text-align":"left"}},Ot=t("td",{style:{"text-align":"center"}},"LCP 54",-1),Qt={style:{"text-align":"left"}},St={href:"https://leetcode.cn/problems/s5kipK",target:"_blank",rel:"noopener noreferrer"},Ut=t("td",{style:{"text-align":"center"}},null,-1),Wt={style:{"text-align":"left"}},Xt=t("code",null,"图",-1),Yt=t("code",null,"数组",-1),Zt=t("code",null,"双连通分量",-1),$t={style:{"text-align":"left"}};function te(ee,oe){const n=d("RouterLink"),s=d("ExternalLinkIcon"),_=d("font");return c(),h("div",null,[r,t("details",null,[m,g,t("p",null,[e(n,{to:"/tag/array.html"},{default:o(()=>[f]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/tag/linked-list.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/tag/stack.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/tag/shortest-path.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[P]),_:1}),l(),T,l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/tag/trie.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[J]),_:1})]),M,t("p",null,[e(n,{to:"/tag/enumeration.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/tag/recursion.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/tag/bucket-sort.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/tag/counting.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/tag/rolling-hash.html"},{default:o(()=>[mt]),_:1}),l(),e(n,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),ft,t("p",null,[e(n,{to:"/tag/math.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/tag/number-theory.html"},{default:o(()=>[yt]),_:1}),l(),e(n,{to:"/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/tag/game-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/tag/rejection-sampling.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/tag/database.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/tag/interactive.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/tag/iterator.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/tag/concurrency.html"},{default:o(()=>[It]),_:1})])]),Rt,i(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Kt,t("td",Pt,[t("a",Tt,[l("查找集群内的关键连接"),e(s)])]),At,t("td",Dt,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ft]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/tag/biconnected-component.html"},{default:o(()=>[Jt]),_:1})]),t("td",Mt,[e(_,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ot,t("td",Qt,[t("a",St,[l("夺回据点"),e(s)])]),Ut,t("td",Wt,[e(n,{to:"/tag/graph.html"},{default:o(()=>[Xt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/tag/biconnected-component.html"},{default:o(()=>[Zt]),_:1})]),t("td",$t,[e(_,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const ne=a(u,[["render",te],["__file","biconnected-component.html.vue"]]);export{ne as default};
