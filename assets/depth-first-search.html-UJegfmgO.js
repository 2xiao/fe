import{_ as c,r as _,o as r,c as a,a as t,d as e,w as o,b as l,f as i}from"./app-HYmO-yoP.js";const h={},f=t("h1",{id:"深度优先搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#深度优先搜索","aria-hidden":"true"},"#"),l(" 深度优先搜索")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),H=t("code",null,"字符串",-1),E=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),j=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),q=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),N=t("code",null,"拓扑排序",-1),P=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),V=t("code",null,"欧拉回路",-1),B=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),U=t("code",null,"字典树",-1),A=t("code",null,"线段树",-1),W=t("code",null,"树状数组",-1),D=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),R=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),Z=t("code",null,"贪心",-1),F=t("code",null,"动态规划",-1),G=t("code",null,"排序",-1),X=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),nt=t("span",{class:"blue"},"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),ct=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),it=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),Ht=t("code",null,"拒绝采样",-1),Et=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),jt=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),qt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Nt=t("hr",null,null,-1),Pt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"94",-1),Vt={style:{"text-align":"left"}},Bt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"center"}},Ut={style:{"text-align":"left"}},At=t("code",null,"栈",-1),Wt=t("code",null,"树",-1),Dt=t("code",null,"深度优先搜索",-1),Yt=t("code",null,"1+",-1),Jt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"98",-1),Rt={style:{"text-align":"left"}},St={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"center"}},Ft={style:{"text-align":"left"}},Gt=t("code",null,"树",-1),Xt=t("code",null,"深度优先搜索",-1),$t=t("code",null,"二叉搜索树",-1),te=t("code",null,"1+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"99",-1),oe={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ne={style:{"text-align":"center"}},de={style:{"text-align":"left"}},_e=t("code",null,"树",-1),ce=t("code",null,"深度优先搜索",-1),re=t("code",null,"二叉搜索树",-1),ae=t("code",null,"1+",-1),ie={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"100",-1),fe={style:{"text-align":"left"}},ue={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},ge={style:{"text-align":"center"}},me={style:{"text-align":"left"}},ye=t("code",null,"树",-1),xe=t("code",null,"深度优先搜索",-1),pe=t("code",null,"广度优先搜索",-1),be=t("code",null,"1+",-1),ke={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"101",-1),Ie={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},we={style:{"text-align":"center"}},He={style:{"text-align":"left"}},Ee=t("code",null,"树",-1),ze=t("code",null,"深度优先搜索",-1),Oe=t("code",null,"广度优先搜索",-1),je=t("code",null,"1+",-1),Le={style:{"text-align":"left"}},qe=t("td",{style:{"text-align":"center"}},"104",-1),Ce={style:{"text-align":"left"}},Ne={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Pe={style:{"text-align":"center"}},Ke={style:{"text-align":"left"}},Ve=t("code",null,"树",-1),Be=t("code",null,"深度优先搜索",-1),Te=t("code",null,"广度优先搜索",-1),Ue=t("code",null,"1+",-1),Ae={style:{"text-align":"left"}},We=t("td",{style:{"text-align":"center"}},"110",-1),De={style:{"text-align":"left"}},Ye={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Je={style:{"text-align":"center"}},Qe={style:{"text-align":"left"}},Re=t("code",null,"树",-1),Se=t("code",null,"深度优先搜索",-1),Ze=t("code",null,"二叉树",-1),Fe={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"111",-1),Xe={style:{"text-align":"left"}},$e={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},tl={style:{"text-align":"center"}},el={style:{"text-align":"left"}},ll=t("code",null,"树",-1),ol=t("code",null,"深度优先搜索",-1),sl=t("code",null,"广度优先搜索",-1),nl=t("code",null,"1+",-1),dl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"112",-1),cl={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"center"}},il={style:{"text-align":"left"}},hl=t("code",null,"树",-1),fl=t("code",null,"深度优先搜索",-1),ul=t("code",null,"广度优先搜索",-1),gl=t("code",null,"1+",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"113",-1),xl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},bl={style:{"text-align":"center"}},kl={style:{"text-align":"left"}},Ml=t("code",null,"树",-1),Il=t("code",null,"深度优先搜索",-1),vl=t("code",null,"回溯",-1),wl=t("code",null,"1+",-1),Hl={style:{"text-align":"left"}},El=t("td",{style:{"text-align":"center"}},"114",-1),zl={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},jl={style:{"text-align":"center"}},Ll={style:{"text-align":"left"}},ql=t("code",null,"栈",-1),Cl=t("code",null,"树",-1),Nl=t("code",null,"深度优先搜索",-1),Pl=t("code",null,"2+",-1),Kl={style:{"text-align":"left"}},Vl=t("td",{style:{"text-align":"center"}},"116",-1),Bl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},Ul={style:{"text-align":"center"}},Al={style:{"text-align":"left"}},Wl=t("code",null,"树",-1),Dl=t("code",null,"深度优先搜索",-1),Yl=t("code",null,"广度优先搜索",-1),Jl=t("code",null,"2+",-1),Ql={style:{"text-align":"left"}},Rl=t("td",{style:{"text-align":"center"}},"117",-1),Sl={style:{"text-align":"left"}},Zl={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},Fl={style:{"text-align":"center"}},Gl={style:{"text-align":"left"}},Xl=t("code",null,"树",-1),$l=t("code",null,"深度优先搜索",-1),to=t("code",null,"广度优先搜索",-1),eo=t("code",null,"2+",-1),lo={style:{"text-align":"left"}},oo=t("td",{style:{"text-align":"center"}},"124",-1),so={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},_o={style:{"text-align":"center"}},co={style:{"text-align":"left"}},ro=t("code",null,"树",-1),ao=t("code",null,"深度优先搜索",-1),io=t("code",null,"动态规划",-1),ho=t("code",null,"1+",-1),fo={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"129",-1),go={style:{"text-align":"left"}},mo={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},yo={style:{"text-align":"center"}},xo={style:{"text-align":"left"}},po=t("code",null,"树",-1),bo=t("code",null,"深度优先搜索",-1),ko=t("code",null,"二叉树",-1),Mo={style:{"text-align":"left"}},Io=t("td",{style:{"text-align":"center"}},"130",-1),vo={style:{"text-align":"left"}},wo={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},Ho={style:{"text-align":"center"}},Eo={style:{"text-align":"left"}},zo=t("code",null,"深度优先搜索",-1),Oo=t("code",null,"广度优先搜索",-1),jo=t("code",null,"并查集",-1),Lo=t("code",null,"2+",-1),qo={style:{"text-align":"left"}},Co=t("td",{style:{"text-align":"center"}},"133",-1),No={style:{"text-align":"left"}},Po={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},Ko={style:{"text-align":"center"}},Vo={style:{"text-align":"left"}},Bo=t("code",null,"深度优先搜索",-1),To=t("code",null,"广度优先搜索",-1),Uo=t("code",null,"图",-1),Ao=t("code",null,"1+",-1),Wo={style:{"text-align":"left"}},Do=t("td",{style:{"text-align":"center"}},"144",-1),Yo={style:{"text-align":"left"}},Jo={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Qo={style:{"text-align":"center"}},Ro={style:{"text-align":"left"}},So=t("code",null,"栈",-1),Zo=t("code",null,"树",-1),Fo=t("code",null,"深度优先搜索",-1),Go=t("code",null,"1+",-1),Xo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"145",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ls={style:{"text-align":"center"}},os={style:{"text-align":"left"}},ss=t("code",null,"栈",-1),ns=t("code",null,"树",-1),ds=t("code",null,"深度优先搜索",-1),_s=t("code",null,"1+",-1),cs={style:{"text-align":"left"}},rs=t("td",{style:{"text-align":"center"}},"156",-1),as={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},hs={style:{"text-align":"center"}},fs={style:{"text-align":"left"}},us=t("code",null,"树",-1),gs=t("code",null,"深度优先搜索",-1),ms=t("code",null,"二叉树",-1),ys={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"199",-1),ps={style:{"text-align":"left"}},bs={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},ks={style:{"text-align":"center"}},Ms={style:{"text-align":"left"}},Is=t("code",null,"树",-1),vs=t("code",null,"深度优先搜索",-1),ws=t("code",null,"广度优先搜索",-1),Hs=t("code",null,"1+",-1),Es={style:{"text-align":"left"}},zs=t("td",{style:{"text-align":"center"}},"200",-1),Os={style:{"text-align":"left"}},js={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},Ls={style:{"text-align":"center"}},qs={style:{"text-align":"left"}},Cs=t("code",null,"深度优先搜索",-1),Ns=t("code",null,"广度优先搜索",-1),Ps=t("code",null,"并查集",-1),Ks=t("code",null,"2+",-1),Vs={style:{"text-align":"left"}},Bs=t("td",{style:{"text-align":"center"}},"207",-1),Ts={style:{"text-align":"left"}},Us={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},As={style:{"text-align":"center"}},Ws={style:{"text-align":"left"}},Ds=t("code",null,"深度优先搜索",-1),Ys=t("code",null,"广度优先搜索",-1),Js=t("code",null,"图",-1),Qs=t("code",null,"1+",-1),Rs={style:{"text-align":"left"}},Ss=t("td",{style:{"text-align":"center"}},"210",-1),Zs={style:{"text-align":"left"}},Fs={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Gs={style:{"text-align":"center"}},Xs={style:{"text-align":"left"}},$s=t("code",null,"深度优先搜索",-1),tn=t("code",null,"广度优先搜索",-1),en=t("code",null,"图",-1),ln=t("code",null,"1+",-1),on={style:{"text-align":"left"}},sn=t("td",{style:{"text-align":"center"}},"211",-1),nn={style:{"text-align":"left"}},dn={href:"https://leetcode.com/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},_n={style:{"text-align":"center"}},cn={style:{"text-align":"left"}},rn=t("code",null,"深度优先搜索",-1),an=t("code",null,"设计",-1),hn=t("code",null,"字典树",-1),fn=t("code",null,"1+",-1),un={style:{"text-align":"left"}},gn=t("td",{style:{"text-align":"center"}},"226",-1),mn={style:{"text-align":"left"}},yn={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},xn={style:{"text-align":"center"}},pn={style:{"text-align":"left"}},bn=t("code",null,"树",-1),kn=t("code",null,"深度优先搜索",-1),Mn=t("code",null,"广度优先搜索",-1),In=t("code",null,"1+",-1),vn={style:{"text-align":"left"}},wn=t("td",{style:{"text-align":"center"}},"230",-1),Hn={style:{"text-align":"left"}},En={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},zn={style:{"text-align":"center"}},On={style:{"text-align":"left"}},jn=t("code",null,"树",-1),Ln=t("code",null,"深度优先搜索",-1),qn=t("code",null,"二叉搜索树",-1),Cn=t("code",null,"1+",-1),Nn={style:{"text-align":"left"}},Pn=t("td",{style:{"text-align":"center"}},"235",-1),Kn={style:{"text-align":"left"}},Vn={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Bn={style:{"text-align":"center"}},Tn={style:{"text-align":"left"}},Un=t("code",null,"树",-1),An=t("code",null,"深度优先搜索",-1),Wn=t("code",null,"二叉搜索树",-1),Dn=t("code",null,"1+",-1),Yn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"236",-1),Qn={style:{"text-align":"left"}},Rn={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Sn={style:{"text-align":"center"}},Zn={style:{"text-align":"left"}},Fn=t("code",null,"树",-1),Gn=t("code",null,"深度优先搜索",-1),Xn=t("code",null,"二叉树",-1),$n={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"250",-1),ed={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},od=t("td",{style:{"text-align":"center"}},null,-1),sd={style:{"text-align":"left"}},nd=t("code",null,"树",-1),dd=t("code",null,"深度优先搜索",-1),_d=t("code",null,"二叉树",-1),cd={style:{"text-align":"left"}},rd=t("td",{style:{"text-align":"center"}},"257",-1),ad={style:{"text-align":"left"}},id={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},hd={style:{"text-align":"center"}},fd={style:{"text-align":"left"}},ud=t("code",null,"树",-1),gd=t("code",null,"深度优先搜索",-1),md=t("code",null,"字符串",-1),yd=t("code",null,"2+",-1),xd={style:{"text-align":"left"}},pd=t("td",{style:{"text-align":"center"}},"261",-1),bd={style:{"text-align":"left"}},kd={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},Md=t("td",{style:{"text-align":"center"}},null,-1),Id={style:{"text-align":"left"}},vd=t("code",null,"深度优先搜索",-1),wd=t("code",null,"广度优先搜索",-1),Hd=t("code",null,"并查集",-1),Ed=t("code",null,"1+",-1),zd={style:{"text-align":"left"}},Od=t("td",{style:{"text-align":"center"}},"269",-1),jd={style:{"text-align":"left"}},Ld={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},qd=t("td",{style:{"text-align":"center"}},null,-1),Cd={style:{"text-align":"left"}},Nd=t("code",null,"深度优先搜索",-1),Pd=t("code",null,"广度优先搜索",-1),Kd=t("code",null,"图",-1),Vd=t("code",null,"3+",-1),Bd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"270",-1),Ud={style:{"text-align":"left"}},Ad={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},Wd=t("td",{style:{"text-align":"center"}},null,-1),Dd={style:{"text-align":"left"}},Yd=t("code",null,"树",-1),Jd=t("code",null,"深度优先搜索",-1),Qd=t("code",null,"二叉搜索树",-1),Rd=t("code",null,"2+",-1),Sd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"272",-1),Fd={style:{"text-align":"left"}},Gd={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},Xd=t("td",{style:{"text-align":"center"}},null,-1),$d={style:{"text-align":"left"}},t_=t("code",null,"栈",-1),e_=t("code",null,"树",-1),l_=t("code",null,"深度优先搜索",-1),o_=t("code",null,"4+",-1),s_={style:{"text-align":"left"}},n_=t("td",{style:{"text-align":"center"}},"285",-1),d_={style:{"text-align":"left"}},__={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},c_=t("td",{style:{"text-align":"center"}},null,-1),r_={style:{"text-align":"left"}},a_=t("code",null,"树",-1),i_=t("code",null,"深度优先搜索",-1),h_=t("code",null,"二叉搜索树",-1),f_=t("code",null,"1+",-1),u_={style:{"text-align":"left"}},g_=t("td",{style:{"text-align":"center"}},"297",-1),m_={style:{"text-align":"left"}},y_={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},x_={style:{"text-align":"center"}},p_={style:{"text-align":"left"}},b_=t("code",null,"树",-1),k_=t("code",null,"深度优先搜索",-1),M_=t("code",null,"广度优先搜索",-1),I_=t("code",null,"3+",-1),v_={style:{"text-align":"left"}},w_=t("td",{style:{"text-align":"center"}},"298",-1),H_={style:{"text-align":"left"}},E_={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},z_=t("td",{style:{"text-align":"center"}},null,-1),O_={style:{"text-align":"left"}},j_=t("code",null,"树",-1),L_=t("code",null,"深度优先搜索",-1),q_=t("code",null,"二叉树",-1),C_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"302",-1),P_={style:{"text-align":"left"}},K_={href:"https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},V_=t("td",{style:{"text-align":"center"}},null,-1),B_={style:{"text-align":"left"}},T_=t("code",null,"深度优先搜索",-1),U_=t("code",null,"广度优先搜索",-1),A_=t("code",null,"数组",-1),W_=t("code",null,"2+",-1),D_={style:{"text-align":"left"}},Y_=t("td",{style:{"text-align":"center"}},"310",-1),J_={style:{"text-align":"left"}},Q_={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},R_=t("td",{style:{"text-align":"center"}},null,-1),S_={style:{"text-align":"left"}},Z_=t("code",null,"深度优先搜索",-1),F_=t("code",null,"广度优先搜索",-1),G_=t("code",null,"图",-1),X_=t("code",null,"1+",-1),$_={style:{"text-align":"left"}},tc=t("td",{style:{"text-align":"center"}},"314",-1),ec={style:{"text-align":"left"}},lc={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},oc=t("td",{style:{"text-align":"center"}},null,-1),sc={style:{"text-align":"left"}},nc=t("code",null,"树",-1),dc=t("code",null,"深度优先搜索",-1),_c=t("code",null,"广度优先搜索",-1),cc=t("code",null,"3+",-1),rc={style:{"text-align":"left"}},ac=t("td",{style:{"text-align":"center"}},"323",-1),ic={style:{"text-align":"left"}},hc={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},fc=t("td",{style:{"text-align":"center"}},null,-1),uc={style:{"text-align":"left"}},gc=t("code",null,"深度优先搜索",-1),mc=t("code",null,"广度优先搜索",-1),yc=t("code",null,"并查集",-1),xc=t("code",null,"1+",-1),pc={style:{"text-align":"left"}},bc=t("td",{style:{"text-align":"center"}},"329",-1),kc={style:{"text-align":"left"}},Mc={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Ic=t("td",{style:{"text-align":"center"}},null,-1),vc={style:{"text-align":"left"}},wc=t("code",null,"深度优先搜索",-1),Hc=t("code",null,"广度优先搜索",-1),Ec=t("code",null,"图",-1),zc=t("code",null,"5+",-1),Oc={style:{"text-align":"left"}},jc=t("td",{style:{"text-align":"center"}},"332",-1),Lc={style:{"text-align":"left"}},qc={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},Cc=t("td",{style:{"text-align":"center"}},null,-1),Nc={style:{"text-align":"left"}},Pc=t("code",null,"深度优先搜索",-1),Kc=t("code",null,"图",-1),Vc=t("code",null,"欧拉回路",-1),Bc={style:{"text-align":"left"}},Tc=t("td",{style:{"text-align":"center"}},"333",-1),Uc={style:{"text-align":"left"}},Ac={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Wc=t("td",{style:{"text-align":"center"}},null,-1),Dc={style:{"text-align":"left"}},Yc=t("code",null,"树",-1),Jc=t("code",null,"深度优先搜索",-1),Qc=t("code",null,"二叉搜索树",-1),Rc=t("code",null,"2+",-1),Sc={style:{"text-align":"left"}},Zc=t("td",{style:{"text-align":"center"}},"337",-1),Fc={style:{"text-align":"left"}},Gc={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Xc=t("td",{style:{"text-align":"center"}},null,-1),$c={style:{"text-align":"left"}},tr=t("code",null,"树",-1),er=t("code",null,"深度优先搜索",-1),lr=t("code",null,"动态规划",-1),or=t("code",null,"1+",-1),sr={style:{"text-align":"left"}},nr=t("td",{style:{"text-align":"center"}},"339",-1),dr={style:{"text-align":"left"}},_r={href:"https://leetcode.com/problems/nested-list-weight-sum",target:"_blank",rel:"noopener noreferrer"},cr=t("td",{style:{"text-align":"center"}},null,-1),rr={style:{"text-align":"left"}},ar=t("code",null,"深度优先搜索",-1),ir=t("code",null,"广度优先搜索",-1),hr={style:{"text-align":"left"}},fr=t("td",{style:{"text-align":"center"}},"341",-1),ur={style:{"text-align":"left"}},gr={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},mr=t("td",{style:{"text-align":"center"}},null,-1),yr={style:{"text-align":"left"}},xr=t("code",null,"栈",-1),pr=t("code",null,"树",-1),br=t("code",null,"深度优先搜索",-1),kr=t("code",null,"3+",-1),Mr={style:{"text-align":"left"}},Ir=t("td",{style:{"text-align":"center"}},"364",-1),vr={style:{"text-align":"left"}},wr={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},Hr=t("td",{style:{"text-align":"center"}},null,-1),Er={style:{"text-align":"left"}},zr=t("code",null,"栈",-1),Or=t("code",null,"深度优先搜索",-1),jr=t("code",null,"广度优先搜索",-1),Lr={style:{"text-align":"left"}},qr=t("td",{style:{"text-align":"center"}},"365",-1),Cr={style:{"text-align":"left"}},Nr={href:"https://leetcode.com/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},Pr=t("td",{style:{"text-align":"center"}},null,-1),Kr={style:{"text-align":"left"}},Vr=t("code",null,"深度优先搜索",-1),Br=t("code",null,"广度优先搜索",-1),Tr=t("code",null,"数学",-1),Ur={style:{"text-align":"left"}},Ar=t("td",{style:{"text-align":"center"}},"366",-1),Wr={style:{"text-align":"left"}},Dr={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yr={style:{"text-align":"center"}},Jr={style:{"text-align":"left"}},Qr=t("code",null,"树",-1),Rr=t("code",null,"深度优先搜索",-1),Sr=t("code",null,"二叉树",-1),Zr={style:{"text-align":"left"}},Fr=t("td",{style:{"text-align":"center"}},"385",-1),Gr={style:{"text-align":"left"}},Xr={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},$r=t("td",{style:{"text-align":"center"}},null,-1),ta={style:{"text-align":"left"}},ea=t("code",null,"栈",-1),la=t("code",null,"深度优先搜索",-1),oa=t("code",null,"字符串",-1),sa={style:{"text-align":"left"}},na=t("td",{style:{"text-align":"center"}},"386",-1),da={style:{"text-align":"left"}},_a={href:"https://leetcode.com/problems/lexicographical-numbers",target:"_blank",rel:"noopener noreferrer"},ca=t("td",{style:{"text-align":"center"}},null,-1),ra={style:{"text-align":"left"}},aa=t("code",null,"深度优先搜索",-1),ia=t("code",null,"字典树",-1),ha={style:{"text-align":"left"}},fa=t("td",{style:{"text-align":"center"}},"388",-1),ua={style:{"text-align":"left"}},ga={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},ma=t("td",{style:{"text-align":"center"}},null,-1),ya={style:{"text-align":"left"}},xa=t("code",null,"栈",-1),pa=t("code",null,"深度优先搜索",-1),ba=t("code",null,"字符串",-1),ka={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"399",-1),Ia={style:{"text-align":"left"}},va={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},wa={style:{"text-align":"center"}},Ha={style:{"text-align":"left"}},Ea=t("code",null,"深度优先搜索",-1),za=t("code",null,"广度优先搜索",-1),Oa=t("code",null,"并查集",-1),ja=t("code",null,"4+",-1),La={style:{"text-align":"left"}},qa=t("td",{style:{"text-align":"center"}},"404",-1),Ca={style:{"text-align":"left"}},Na={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},Va=t("code",null,"树",-1),Ba=t("code",null,"深度优先搜索",-1),Ta=t("code",null,"广度优先搜索",-1),Ua=t("code",null,"1+",-1),Aa={style:{"text-align":"left"}},Wa=t("td",{style:{"text-align":"center"}},"417",-1),Da={style:{"text-align":"left"}},Ya={href:"https://leetcode.com/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},Ja=t("td",{style:{"text-align":"center"}},null,-1),Qa={style:{"text-align":"left"}},Ra=t("code",null,"深度优先搜索",-1),Sa=t("code",null,"广度优先搜索",-1),Za=t("code",null,"数组",-1),Fa=t("code",null,"1+",-1),Ga={style:{"text-align":"left"}},Xa=t("td",{style:{"text-align":"center"}},"419",-1),$a={style:{"text-align":"left"}},ti={href:"https://leetcode.com/problems/battleships-in-a-board",target:"_blank",rel:"noopener noreferrer"},ei=t("td",{style:{"text-align":"center"}},null,-1),li={style:{"text-align":"left"}},oi=t("code",null,"深度优先搜索",-1),si=t("code",null,"数组",-1),ni=t("code",null,"矩阵",-1),di={style:{"text-align":"left"}},_i=t("td",{style:{"text-align":"center"}},"426",-1),ci={style:{"text-align":"left"}},ri={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ai={style:{"text-align":"center"}},ii={style:{"text-align":"left"}},hi=t("code",null,"栈",-1),fi=t("code",null,"树",-1),ui=t("code",null,"深度优先搜索",-1),gi=t("code",null,"4+",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"428",-1),xi={style:{"text-align":"left"}},pi={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},bi=t("td",{style:{"text-align":"center"}},null,-1),ki={style:{"text-align":"left"}},Mi=t("code",null,"树",-1),Ii=t("code",null,"深度优先搜索",-1),vi=t("code",null,"广度优先搜索",-1),wi=t("code",null,"1+",-1),Hi={style:{"text-align":"left"}},Ei=t("td",{style:{"text-align":"center"}},"430",-1),zi={style:{"text-align":"left"}},Oi={href:"https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ji={style:{"text-align":"center"}},Li={style:{"text-align":"left"}},qi=t("code",null,"深度优先搜索",-1),Ci=t("code",null,"链表",-1),Ni=t("code",null,"双向链表",-1),Pi={style:{"text-align":"left"}},Ki=t("td",{style:{"text-align":"center"}},"431",-1),Vi={style:{"text-align":"left"}},Bi={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ti=t("td",{style:{"text-align":"center"}},null,-1),Ui={style:{"text-align":"left"}},Ai=t("code",null,"树",-1),Wi=t("code",null,"深度优先搜索",-1),Di=t("code",null,"广度优先搜索",-1),Yi=t("code",null,"2+",-1),Ji={style:{"text-align":"left"}},Qi=t("td",{style:{"text-align":"center"}},"437",-1),Ri={style:{"text-align":"left"}},Si={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Zi={style:{"text-align":"center"}},Fi={style:{"text-align":"left"}},Gi=t("code",null,"树",-1),Xi=t("code",null,"深度优先搜索",-1),$i=t("code",null,"二叉树",-1),th={style:{"text-align":"left"}},eh=t("td",{style:{"text-align":"center"}},"449",-1),lh={style:{"text-align":"left"}},oh={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},sh=t("td",{style:{"text-align":"center"}},null,-1),nh={style:{"text-align":"left"}},dh=t("code",null,"树",-1),_h=t("code",null,"深度优先搜索",-1),ch=t("code",null,"广度优先搜索",-1),rh=t("code",null,"4+",-1),ah={style:{"text-align":"left"}},ih=t("td",{style:{"text-align":"center"}},"463",-1),hh={style:{"text-align":"left"}},fh={href:"https://leetcode.com/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},uh=t("td",{style:{"text-align":"center"}},null,-1),gh={style:{"text-align":"left"}},mh=t("code",null,"深度优先搜索",-1),yh=t("code",null,"广度优先搜索",-1),xh=t("code",null,"数组",-1),ph=t("code",null,"1+",-1),bh={style:{"text-align":"left"}},kh=t("td",{style:{"text-align":"center"}},"472",-1),Mh={style:{"text-align":"left"}},Ih={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},vh=t("td",{style:{"text-align":"center"}},null,-1),wh={style:{"text-align":"left"}},Hh=t("code",null,"深度优先搜索",-1),Eh=t("code",null,"字典树",-1),zh=t("code",null,"数组",-1),Oh=t("code",null,"2+",-1),jh={style:{"text-align":"left"}},Lh=t("td",{style:{"text-align":"center"}},"490",-1),qh={style:{"text-align":"left"}},Ch={href:"https://leetcode.com/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},Nh=t("td",{style:{"text-align":"center"}},null,-1),Ph={style:{"text-align":"left"}},Kh=t("code",null,"深度优先搜索",-1),Vh=t("code",null,"广度优先搜索",-1),Bh=t("code",null,"数组",-1),Th=t("code",null,"1+",-1),Uh={style:{"text-align":"left"}},Ah=t("td",{style:{"text-align":"center"}},"499",-1),Wh={style:{"text-align":"left"}},Dh={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},Yh=t("td",{style:{"text-align":"center"}},null,-1),Jh={style:{"text-align":"left"}},Qh=t("code",null,"深度优先搜索",-1),Rh=t("code",null,"广度优先搜索",-1),Sh=t("code",null,"图",-1),Zh=t("code",null,"5+",-1),Fh={style:{"text-align":"left"}},Gh=t("td",{style:{"text-align":"center"}},"501",-1),Xh={style:{"text-align":"left"}},$h={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},t1=t("td",{style:{"text-align":"center"}},null,-1),e1={style:{"text-align":"left"}},l1=t("code",null,"树",-1),o1=t("code",null,"深度优先搜索",-1),s1=t("code",null,"二叉搜索树",-1),n1=t("code",null,"1+",-1),d1={style:{"text-align":"left"}},_1=t("td",{style:{"text-align":"center"}},"505",-1),c1={style:{"text-align":"left"}},r1={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},a1=t("td",{style:{"text-align":"center"}},null,-1),i1={style:{"text-align":"left"}},h1=t("code",null,"深度优先搜索",-1),f1=t("code",null,"广度优先搜索",-1),u1=t("code",null,"图",-1),g1=t("code",null,"4+",-1),m1={style:{"text-align":"left"}},y1=t("td",{style:{"text-align":"center"}},"508",-1),x1={style:{"text-align":"left"}},p1={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},b1=t("td",{style:{"text-align":"center"}},null,-1),k1={style:{"text-align":"left"}},M1=t("code",null,"树",-1),I1=t("code",null,"深度优先搜索",-1),v1=t("code",null,"哈希表",-1),w1=t("code",null,"1+",-1),H1={style:{"text-align":"left"}},E1=t("td",{style:{"text-align":"center"}},"513",-1),z1={style:{"text-align":"left"}},O1={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},j1=t("td",{style:{"text-align":"center"}},null,-1),L1={style:{"text-align":"left"}},q1=t("code",null,"树",-1),C1=t("code",null,"深度优先搜索",-1),N1=t("code",null,"广度优先搜索",-1),P1=t("code",null,"1+",-1),K1={style:{"text-align":"left"}},V1=t("td",{style:{"text-align":"center"}},"514",-1),B1={style:{"text-align":"left"}},T1={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},U1={style:{"text-align":"center"}},A1={style:{"text-align":"left"}},W1=t("code",null,"深度优先搜索",-1),D1=t("code",null,"广度优先搜索",-1),Y1=t("code",null,"字符串",-1),J1=t("code",null,"1+",-1),Q1={style:{"text-align":"left"}},R1=t("td",{style:{"text-align":"center"}},"515",-1),S1={style:{"text-align":"left"}},Z1={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},F1=t("td",{style:{"text-align":"center"}},null,-1),G1={style:{"text-align":"left"}},X1=t("code",null,"树",-1),$1=t("code",null,"深度优先搜索",-1),tf=t("code",null,"广度优先搜索",-1),ef=t("code",null,"1+",-1),lf={style:{"text-align":"left"}},of=t("td",{style:{"text-align":"center"}},"529",-1),sf={style:{"text-align":"left"}},nf={href:"https://leetcode.com/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},df=t("td",{style:{"text-align":"center"}},null,-1),_f={style:{"text-align":"left"}},cf=t("code",null,"深度优先搜索",-1),rf=t("code",null,"广度优先搜索",-1),af=t("code",null,"数组",-1),hf=t("code",null,"1+",-1),ff={style:{"text-align":"left"}},uf=t("td",{style:{"text-align":"center"}},"530",-1),gf={style:{"text-align":"left"}},mf={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},yf={style:{"text-align":"center"}},xf={style:{"text-align":"left"}},pf=t("code",null,"树",-1),bf=t("code",null,"深度优先搜索",-1),kf=t("code",null,"广度优先搜索",-1),Mf=t("code",null,"2+",-1),If={style:{"text-align":"left"}},vf=t("td",{style:{"text-align":"center"}},"536",-1),wf={style:{"text-align":"left"}},Hf={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Ef=t("td",{style:{"text-align":"center"}},null,-1),zf={style:{"text-align":"left"}},Of=t("code",null,"栈",-1),jf=t("code",null,"树",-1),Lf=t("code",null,"深度优先搜索",-1),qf=t("code",null,"2+",-1),Cf={style:{"text-align":"left"}},Nf=t("td",{style:{"text-align":"center"}},"538",-1),Pf={style:{"text-align":"left"}},Kf={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Vf=t("td",{style:{"text-align":"center"}},null,-1),Bf={style:{"text-align":"left"}},Tf=t("code",null,"树",-1),Uf=t("code",null,"深度优先搜索",-1),Af=t("code",null,"二叉搜索树",-1),Wf=t("code",null,"1+",-1),Df={style:{"text-align":"left"}},Yf=t("td",{style:{"text-align":"center"}},"543",-1),Jf={style:{"text-align":"left"}},Qf={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rf={style:{"text-align":"center"}},Sf={style:{"text-align":"left"}},Zf=t("code",null,"树",-1),Ff=t("code",null,"深度优先搜索",-1),Gf=t("code",null,"二叉树",-1),Xf={style:{"text-align":"left"}},$f=t("td",{style:{"text-align":"center"}},"545",-1),tu={style:{"text-align":"left"}},eu={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},lu=t("td",{style:{"text-align":"center"}},null,-1),ou={style:{"text-align":"left"}},su=t("code",null,"树",-1),nu=t("code",null,"深度优先搜索",-1),du=t("code",null,"二叉树",-1),_u={style:{"text-align":"left"}},cu=t("td",{style:{"text-align":"center"}},"547",-1),ru={style:{"text-align":"left"}},au={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},iu=t("td",{style:{"text-align":"center"}},null,-1),hu={style:{"text-align":"left"}},fu=t("code",null,"深度优先搜索",-1),uu=t("code",null,"广度优先搜索",-1),gu=t("code",null,"并查集",-1),mu=t("code",null,"1+",-1),yu={style:{"text-align":"left"}},xu=t("td",{style:{"text-align":"center"}},"549",-1),pu={style:{"text-align":"left"}},bu={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},ku=t("td",{style:{"text-align":"center"}},null,-1),Mu={style:{"text-align":"left"}},Iu=t("code",null,"树",-1),vu=t("code",null,"深度优先搜索",-1),wu=t("code",null,"二叉树",-1),Hu={style:{"text-align":"left"}},Eu=t("td",{style:{"text-align":"center"}},"559",-1),zu={style:{"text-align":"left"}},Ou={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},ju={style:{"text-align":"center"}},Lu={style:{"text-align":"left"}},qu=t("code",null,"树",-1),Cu=t("code",null,"深度优先搜索",-1),Nu=t("code",null,"广度优先搜索",-1),Pu={style:{"text-align":"left"}},Ku=t("td",{style:{"text-align":"center"}},"563",-1),Vu={style:{"text-align":"left"}},Bu={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Tu=t("td",{style:{"text-align":"center"}},null,-1),Uu={style:{"text-align":"left"}},Au=t("code",null,"树",-1),Wu=t("code",null,"深度优先搜索",-1),Du=t("code",null,"二叉树",-1),Yu={style:{"text-align":"left"}},Ju=t("td",{style:{"text-align":"center"}},"565",-1),Qu={style:{"text-align":"left"}},Ru={href:"https://leetcode.com/problems/array-nesting",target:"_blank",rel:"noopener noreferrer"},Su=t("td",{style:{"text-align":"center"}},null,-1),Zu={style:{"text-align":"left"}},Fu=t("code",null,"深度优先搜索",-1),Gu=t("code",null,"数组",-1),Xu={style:{"text-align":"left"}},$u=t("td",{style:{"text-align":"center"}},"572",-1),tg={style:{"text-align":"left"}},eg={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},lg={style:{"text-align":"center"}},og={style:{"text-align":"left"}},sg=t("code",null,"树",-1),ng=t("code",null,"深度优先搜索",-1),dg=t("code",null,"二叉树",-1),_g=t("code",null,"2+",-1),cg={style:{"text-align":"left"}},rg=t("td",{style:{"text-align":"center"}},"582",-1),ag={style:{"text-align":"left"}},ig={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},hg=t("td",{style:{"text-align":"center"}},null,-1),fg={style:{"text-align":"left"}},ug=t("code",null,"树",-1),gg=t("code",null,"深度优先搜索",-1),mg=t("code",null,"广度优先搜索",-1),yg=t("code",null,"2+",-1),xg={style:{"text-align":"left"}},pg=t("td",{style:{"text-align":"center"}},"589",-1),bg={style:{"text-align":"left"}},kg={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Mg={style:{"text-align":"center"}},Ig={style:{"text-align":"left"}},vg=t("code",null,"栈",-1),wg=t("code",null,"树",-1),Hg=t("code",null,"深度优先搜索",-1),Eg={style:{"text-align":"left"}},zg=t("td",{style:{"text-align":"center"}},"590",-1),Og={style:{"text-align":"left"}},jg={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Lg={style:{"text-align":"center"}},qg={style:{"text-align":"left"}},Cg=t("code",null,"栈",-1),Ng=t("code",null,"树",-1),Pg=t("code",null,"深度优先搜索",-1),Kg={style:{"text-align":"left"}},Vg=t("td",{style:{"text-align":"center"}},"606",-1),Bg={style:{"text-align":"left"}},Tg={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ug=t("td",{style:{"text-align":"center"}},null,-1),Ag={style:{"text-align":"left"}},Wg=t("code",null,"树",-1),Dg=t("code",null,"深度优先搜索",-1),Yg=t("code",null,"字符串",-1),Jg=t("code",null,"1+",-1),Qg={style:{"text-align":"left"}},Rg=t("td",{style:{"text-align":"center"}},"617",-1),Sg={style:{"text-align":"left"}},Zg={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},Fg={style:{"text-align":"center"}},Gg={style:{"text-align":"left"}},Xg=t("code",null,"树",-1),$g=t("code",null,"深度优先搜索",-1),tm=t("code",null,"广度优先搜索",-1),em=t("code",null,"1+",-1),lm={style:{"text-align":"left"}},om=t("td",{style:{"text-align":"center"}},"623",-1),sm={style:{"text-align":"left"}},nm={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},dm=t("td",{style:{"text-align":"center"}},null,-1),_m={style:{"text-align":"left"}},cm=t("code",null,"树",-1),rm=t("code",null,"深度优先搜索",-1),am=t("code",null,"广度优先搜索",-1),im=t("code",null,"1+",-1),hm={style:{"text-align":"left"}},fm=t("td",{style:{"text-align":"center"}},"637",-1),um={style:{"text-align":"left"}},gm={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},mm={style:{"text-align":"center"}},ym={style:{"text-align":"left"}},xm=t("code",null,"树",-1),pm=t("code",null,"深度优先搜索",-1),bm=t("code",null,"广度优先搜索",-1),km=t("code",null,"1+",-1),Mm={style:{"text-align":"left"}},Im=t("td",{style:{"text-align":"center"}},"642",-1),vm={style:{"text-align":"left"}},wm={href:"https://leetcode.com/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},Hm=t("td",{style:{"text-align":"center"}},null,-1),Em={style:{"text-align":"left"}},zm=t("code",null,"深度优先搜索",-1),Om=t("code",null,"设计",-1),jm=t("code",null,"字典树",-1),Lm=t("code",null,"4+",-1),qm={style:{"text-align":"left"}},Cm=t("td",{style:{"text-align":"center"}},"652",-1),Nm={style:{"text-align":"left"}},Pm={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},Km=t("td",{style:{"text-align":"center"}},null,-1),Vm={style:{"text-align":"left"}},Bm=t("code",null,"树",-1),Tm=t("code",null,"深度优先搜索",-1),Um=t("code",null,"哈希表",-1),Am=t("code",null,"1+",-1),Wm={style:{"text-align":"left"}},Dm=t("td",{style:{"text-align":"center"}},"653",-1),Ym={style:{"text-align":"left"}},Jm={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Qm=t("td",{style:{"text-align":"center"}},null,-1),Rm={style:{"text-align":"left"}},Sm=t("code",null,"树",-1),Zm=t("code",null,"深度优先搜索",-1),Fm=t("code",null,"广度优先搜索",-1),Gm=t("code",null,"4+",-1),Xm={style:{"text-align":"left"}},$m=t("td",{style:{"text-align":"center"}},"655",-1),t2={style:{"text-align":"left"}},e2={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},l2=t("td",{style:{"text-align":"center"}},null,-1),o2={style:{"text-align":"left"}},s2=t("code",null,"树",-1),n2=t("code",null,"深度优先搜索",-1),d2=t("code",null,"广度优先搜索",-1),_2=t("code",null,"1+",-1),c2={style:{"text-align":"left"}},r2=t("td",{style:{"text-align":"center"}},"662",-1),a2={style:{"text-align":"left"}},i2={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},h2={style:{"text-align":"center"}},f2={style:{"text-align":"left"}},u2=t("code",null,"树",-1),g2=t("code",null,"深度优先搜索",-1),m2=t("code",null,"广度优先搜索",-1),y2=t("code",null,"1+",-1),x2={style:{"text-align":"left"}},p2=t("td",{style:{"text-align":"center"}},"663",-1),b2={style:{"text-align":"left"}},k2={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},M2=t("td",{style:{"text-align":"center"}},null,-1),I2={style:{"text-align":"left"}},v2=t("code",null,"树",-1),w2=t("code",null,"深度优先搜索",-1),H2=t("code",null,"二叉树",-1),E2={style:{"text-align":"left"}},z2=t("td",{style:{"text-align":"center"}},"666",-1),O2={style:{"text-align":"left"}},j2={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},L2=t("td",{style:{"text-align":"center"}},null,-1),q2={style:{"text-align":"left"}},C2=t("code",null,"树",-1),N2=t("code",null,"深度优先搜索",-1),P2=t("code",null,"数组",-1),K2=t("code",null,"2+",-1),V2={style:{"text-align":"left"}},B2=t("td",{style:{"text-align":"center"}},"669",-1),T2={style:{"text-align":"left"}},U2={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},A2=t("td",{style:{"text-align":"center"}},null,-1),W2={style:{"text-align":"left"}},D2=t("code",null,"树",-1),Y2=t("code",null,"深度优先搜索",-1),J2=t("code",null,"二叉搜索树",-1),Q2=t("code",null,"1+",-1),R2={style:{"text-align":"left"}},S2=t("td",{style:{"text-align":"center"}},"671",-1),Z2={style:{"text-align":"left"}},F2={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},G2=t("td",{style:{"text-align":"center"}},null,-1),X2={style:{"text-align":"left"}},$2=t("code",null,"树",-1),ty=t("code",null,"深度优先搜索",-1),ey=t("code",null,"二叉树",-1),ly={style:{"text-align":"left"}},oy=t("td",{style:{"text-align":"center"}},"672",-1),sy={style:{"text-align":"left"}},ny={href:"https://leetcode.com/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},dy=t("td",{style:{"text-align":"center"}},null,-1),_y={style:{"text-align":"left"}},cy=t("code",null,"位运算",-1),ry=t("code",null,"深度优先搜索",-1),ay=t("code",null,"广度优先搜索",-1),iy=t("code",null,"1+",-1),hy={style:{"text-align":"left"}},fy=t("td",{style:{"text-align":"center"}},"676",-1),uy={style:{"text-align":"left"}},gy={href:"https://leetcode.com/problems/implement-magic-dictionary",target:"_blank",rel:"noopener noreferrer"},my=t("td",{style:{"text-align":"center"}},null,-1),yy={style:{"text-align":"left"}},xy=t("code",null,"深度优先搜索",-1),py=t("code",null,"设计",-1),by=t("code",null,"字典树",-1),ky=t("code",null,"2+",-1),My={style:{"text-align":"left"}},Iy=t("td",{style:{"text-align":"center"}},"684",-1),vy={style:{"text-align":"left"}},wy={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},Hy=t("td",{style:{"text-align":"center"}},null,-1),Ey={style:{"text-align":"left"}},zy=t("code",null,"深度优先搜索",-1),Oy=t("code",null,"广度优先搜索",-1),jy=t("code",null,"并查集",-1),Ly=t("code",null,"1+",-1),qy={style:{"text-align":"left"}},Cy=t("td",{style:{"text-align":"center"}},"685",-1),Ny={style:{"text-align":"left"}},Py={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Ky=t("td",{style:{"text-align":"center"}},null,-1),Vy={style:{"text-align":"left"}},By=t("code",null,"深度优先搜索",-1),Ty=t("code",null,"广度优先搜索",-1),Uy=t("code",null,"并查集",-1),Ay=t("code",null,"1+",-1),Wy={style:{"text-align":"left"}},Dy=t("td",{style:{"text-align":"center"}},"687",-1),Yy={style:{"text-align":"left"}},Jy={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Qy=t("td",{style:{"text-align":"center"}},null,-1),Ry={style:{"text-align":"left"}},Sy=t("code",null,"树",-1),Zy=t("code",null,"深度优先搜索",-1),Fy=t("code",null,"二叉树",-1),Gy={style:{"text-align":"left"}},Xy=t("td",{style:{"text-align":"center"}},"690",-1),$y={style:{"text-align":"left"}},t3={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},e3=t("td",{style:{"text-align":"center"}},null,-1),l3={style:{"text-align":"left"}},o3=t("code",null,"树",-1),s3=t("code",null,"深度优先搜索",-1),n3=t("code",null,"广度优先搜索",-1),d3=t("code",null,"2+",-1),_3={style:{"text-align":"left"}},c3=t("td",{style:{"text-align":"center"}},"694",-1),r3={style:{"text-align":"left"}},a3={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},i3=t("td",{style:{"text-align":"center"}},null,-1),h3={style:{"text-align":"left"}},f3=t("code",null,"深度优先搜索",-1),u3=t("code",null,"广度优先搜索",-1),g3=t("code",null,"并查集",-1),m3=t("code",null,"2+",-1),y3={style:{"text-align":"left"}},x3=t("td",{style:{"text-align":"center"}},"695",-1),p3={style:{"text-align":"left"}},b3={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},k3={style:{"text-align":"center"}},M3={style:{"text-align":"left"}},I3=t("code",null,"深度优先搜索",-1),v3=t("code",null,"广度优先搜索",-1),w3=t("code",null,"并查集",-1),H3=t("code",null,"2+",-1),E3={style:{"text-align":"left"}},z3=t("td",{style:{"text-align":"center"}},"711",-1),O3={style:{"text-align":"left"}},j3={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},L3=t("td",{style:{"text-align":"center"}},null,-1),q3={style:{"text-align":"left"}},C3=t("code",null,"深度优先搜索",-1),N3=t("code",null,"广度优先搜索",-1),P3=t("code",null,"并查集",-1),K3=t("code",null,"2+",-1),V3={style:{"text-align":"left"}},B3=t("td",{style:{"text-align":"center"}},"721",-1),T3={style:{"text-align":"left"}},U3={href:"https://leetcode.com/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},A3=t("td",{style:{"text-align":"center"}},null,-1),W3={style:{"text-align":"left"}},D3=t("code",null,"深度优先搜索",-1),Y3=t("code",null,"广度优先搜索",-1),J3=t("code",null,"并查集",-1),Q3=t("code",null,"4+",-1),R3={style:{"text-align":"left"}},S3=t("td",{style:{"text-align":"center"}},"733",-1),Z3={style:{"text-align":"left"}},F3={href:"https://leetcode.com/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},G3=t("td",{style:{"text-align":"center"}},null,-1),X3={style:{"text-align":"left"}},$3=t("code",null,"深度优先搜索",-1),tx=t("code",null,"广度优先搜索",-1),ex=t("code",null,"数组",-1),lx=t("code",null,"1+",-1),ox={style:{"text-align":"left"}},sx=t("td",{style:{"text-align":"center"}},"737",-1),nx={style:{"text-align":"left"}},dx={href:"https://leetcode.com/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},_x=t("td",{style:{"text-align":"center"}},null,-1),cx={style:{"text-align":"left"}},rx=t("code",null,"深度优先搜索",-1),ax=t("code",null,"广度优先搜索",-1),ix=t("code",null,"并查集",-1),hx=t("code",null,"3+",-1),fx={style:{"text-align":"left"}},ux=t("td",{style:{"text-align":"center"}},"742",-1),gx={style:{"text-align":"left"}},mx={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},yx=t("td",{style:{"text-align":"center"}},null,-1),xx={style:{"text-align":"left"}},px=t("code",null,"树",-1),bx=t("code",null,"深度优先搜索",-1),kx=t("code",null,"广度优先搜索",-1),Mx=t("code",null,"1+",-1),Ix={style:{"text-align":"left"}},vx=t("td",{style:{"text-align":"center"}},"743",-1),wx={style:{"text-align":"left"}},Hx={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},Ex=t("td",{style:{"text-align":"center"}},null,-1),zx={style:{"text-align":"left"}},Ox=t("code",null,"深度优先搜索",-1),jx=t("code",null,"广度优先搜索",-1),Lx=t("code",null,"图",-1),qx=t("code",null,"2+",-1),Cx={style:{"text-align":"left"}},Nx=t("td",{style:{"text-align":"center"}},"749",-1),Px={style:{"text-align":"left"}},Kx={href:"https://leetcode.com/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},Vx=t("td",{style:{"text-align":"center"}},null,-1),Bx={style:{"text-align":"left"}},Tx=t("code",null,"深度优先搜索",-1),Ux=t("code",null,"广度优先搜索",-1),Ax=t("code",null,"数组",-1),Wx=t("code",null,"2+",-1),Dx={style:{"text-align":"left"}},Yx=t("td",{style:{"text-align":"center"}},"753",-1),Jx={style:{"text-align":"left"}},Qx={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},Rx=t("td",{style:{"text-align":"center"}},null,-1),Sx={style:{"text-align":"left"}},Zx=t("code",null,"深度优先搜索",-1),Fx=t("code",null,"图",-1),Gx=t("code",null,"欧拉回路",-1),Xx={style:{"text-align":"left"}},$x=t("td",{style:{"text-align":"center"}},"756",-1),tp={style:{"text-align":"left"}},ep={href:"https://leetcode.com/problems/pyramid-transition-matrix",target:"_blank",rel:"noopener noreferrer"},lp=t("td",{style:{"text-align":"center"}},null,-1),op={style:{"text-align":"left"}},sp=t("code",null,"位运算",-1),np=t("code",null,"深度优先搜索",-1),dp=t("code",null,"广度优先搜索",-1),_p={style:{"text-align":"left"}},cp=t("td",{style:{"text-align":"center"}},"765",-1),rp={style:{"text-align":"left"}},ap={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},ip=t("td",{style:{"text-align":"center"}},null,-1),hp={style:{"text-align":"left"}},fp=t("code",null,"贪心",-1),up=t("code",null,"深度优先搜索",-1),gp=t("code",null,"广度优先搜索",-1),mp=t("code",null,"2+",-1),yp={style:{"text-align":"left"}},xp=t("td",{style:{"text-align":"center"}},"778",-1),pp={style:{"text-align":"left"}},bp={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},kp=t("td",{style:{"text-align":"center"}},null,-1),Mp={style:{"text-align":"left"}},Ip=t("code",null,"深度优先搜索",-1),vp=t("code",null,"广度优先搜索",-1),wp=t("code",null,"并查集",-1),Hp=t("code",null,"4+",-1),Ep={style:{"text-align":"left"}},zp=t("td",{style:{"text-align":"center"}},"783",-1),Op={style:{"text-align":"left"}},jp={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},Lp={style:{"text-align":"center"}},qp={style:{"text-align":"left"}},Cp=t("code",null,"树",-1),Np=t("code",null,"深度优先搜索",-1),Pp=t("code",null,"广度优先搜索",-1),Kp=t("code",null,"2+",-1),Vp={style:{"text-align":"left"}},Bp=t("td",{style:{"text-align":"center"}},"785",-1),Tp={style:{"text-align":"left"}},Up={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},Ap=t("td",{style:{"text-align":"center"}},null,-1),Wp={style:{"text-align":"left"}},Dp=t("code",null,"深度优先搜索",-1),Yp=t("code",null,"广度优先搜索",-1),Jp=t("code",null,"并查集",-1),Qp=t("code",null,"1+",-1),Rp={style:{"text-align":"left"}},Sp=t("td",{style:{"text-align":"center"}},"787",-1),Zp={style:{"text-align":"left"}},Fp={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Gp=t("td",{style:{"text-align":"center"}},null,-1),Xp={style:{"text-align":"left"}},$p=t("code",null,"深度优先搜索",-1),t0=t("code",null,"广度优先搜索",-1),e0=t("code",null,"图",-1),l0=t("code",null,"3+",-1),o0={style:{"text-align":"left"}},s0=t("td",{style:{"text-align":"center"}},"797",-1),n0={style:{"text-align":"left"}},d0={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},_0=t("td",{style:{"text-align":"center"}},null,-1),c0={style:{"text-align":"left"}},r0=t("code",null,"深度优先搜索",-1),a0=t("code",null,"广度优先搜索",-1),i0=t("code",null,"图",-1),h0=t("code",null,"1+",-1),f0={style:{"text-align":"left"}},u0=t("td",{style:{"text-align":"center"}},"802",-1),g0={style:{"text-align":"left"}},m0={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},y0=t("td",{style:{"text-align":"center"}},null,-1),x0={style:{"text-align":"left"}},p0=t("code",null,"深度优先搜索",-1),b0=t("code",null,"广度优先搜索",-1),k0=t("code",null,"图",-1),M0=t("code",null,"1+",-1),I0={style:{"text-align":"left"}},v0=t("td",{style:{"text-align":"center"}},"814",-1),w0={style:{"text-align":"left"}},H0={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},E0=t("td",{style:{"text-align":"center"}},null,-1),z0={style:{"text-align":"left"}},O0=t("code",null,"树",-1),j0=t("code",null,"深度优先搜索",-1),L0=t("code",null,"二叉树",-1),q0={style:{"text-align":"left"}},C0=t("td",{style:{"text-align":"center"}},"827",-1),N0={style:{"text-align":"left"}},P0={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},K0=t("td",{style:{"text-align":"center"}},null,-1),V0={style:{"text-align":"left"}},B0=t("code",null,"深度优先搜索",-1),T0=t("code",null,"广度优先搜索",-1),U0=t("code",null,"并查集",-1),A0=t("code",null,"2+",-1),W0={style:{"text-align":"left"}},D0=t("td",{style:{"text-align":"center"}},"834",-1),Y0={style:{"text-align":"left"}},J0={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},Q0=t("td",{style:{"text-align":"center"}},null,-1),R0={style:{"text-align":"left"}},S0=t("code",null,"树",-1),Z0=t("code",null,"深度优先搜索",-1),F0=t("code",null,"图",-1),G0=t("code",null,"1+",-1),X0={style:{"text-align":"left"}},$0=t("td",{style:{"text-align":"center"}},"839",-1),tb={style:{"text-align":"left"}},eb={href:"https://leetcode.com/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},lb=t("td",{style:{"text-align":"center"}},null,-1),ob={style:{"text-align":"left"}},sb=t("code",null,"深度优先搜索",-1),nb=t("code",null,"广度优先搜索",-1),db=t("code",null,"并查集",-1),_b=t("code",null,"3+",-1),cb={style:{"text-align":"left"}},rb=t("td",{style:{"text-align":"center"}},"841",-1),ab={style:{"text-align":"left"}},ib={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},hb=t("td",{style:{"text-align":"center"}},null,-1),fb={style:{"text-align":"left"}},ub=t("code",null,"深度优先搜索",-1),gb=t("code",null,"广度优先搜索",-1),mb=t("code",null,"图",-1),yb={style:{"text-align":"left"}},xb=t("td",{style:{"text-align":"center"}},"851",-1),pb={style:{"text-align":"left"}},bb={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},kb=t("td",{style:{"text-align":"center"}},null,-1),Mb={style:{"text-align":"left"}},Ib=t("code",null,"深度优先搜索",-1),vb=t("code",null,"图",-1),wb=t("code",null,"拓扑排序",-1),Hb=t("code",null,"1+",-1),Eb={style:{"text-align":"left"}},zb=t("td",{style:{"text-align":"center"}},"863",-1),Ob={style:{"text-align":"left"}},jb={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Lb=t("td",{style:{"text-align":"center"}},null,-1),qb={style:{"text-align":"left"}},Cb=t("code",null,"树",-1),Nb=t("code",null,"深度优先搜索",-1),Pb=t("code",null,"广度优先搜索",-1),Kb=t("code",null,"2+",-1),Vb={style:{"text-align":"left"}},Bb=t("td",{style:{"text-align":"center"}},"865",-1),Tb={style:{"text-align":"left"}},Ub={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},Ab=t("td",{style:{"text-align":"center"}},null,-1),Wb={style:{"text-align":"left"}},Db=t("code",null,"树",-1),Yb=t("code",null,"深度优先搜索",-1),Jb=t("code",null,"广度优先搜索",-1),Qb=t("code",null,"2+",-1),Rb={style:{"text-align":"left"}},Sb=t("td",{style:{"text-align":"center"}},"872",-1),Zb={style:{"text-align":"left"}},Fb={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},Gb=t("td",{style:{"text-align":"center"}},null,-1),Xb={style:{"text-align":"left"}},$b=t("code",null,"树",-1),t4=t("code",null,"深度优先搜索",-1),e4=t("code",null,"二叉树",-1),l4={style:{"text-align":"left"}},o4=t("td",{style:{"text-align":"center"}},"886",-1),s4={style:{"text-align":"left"}},n4={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},d4=t("td",{style:{"text-align":"center"}},null,-1),_4={style:{"text-align":"left"}},c4=t("code",null,"深度优先搜索",-1),r4=t("code",null,"广度优先搜索",-1),a4=t("code",null,"并查集",-1),i4=t("code",null,"1+",-1),h4={style:{"text-align":"left"}},f4=t("td",{style:{"text-align":"center"}},"897",-1),u4={style:{"text-align":"left"}},g4={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},m4=t("td",{style:{"text-align":"center"}},null,-1),y4={style:{"text-align":"left"}},x4=t("code",null,"栈",-1),p4=t("code",null,"树",-1),b4=t("code",null,"深度优先搜索",-1),k4=t("code",null,"2+",-1),M4={style:{"text-align":"left"}},I4=t("td",{style:{"text-align":"center"}},"924",-1),v4={style:{"text-align":"left"}},w4={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},H4=t("td",{style:{"text-align":"center"}},null,-1),E4={style:{"text-align":"left"}},z4=t("code",null,"深度优先搜索",-1),O4=t("code",null,"广度优先搜索",-1),j4=t("code",null,"并查集",-1),L4=t("code",null,"3+",-1),q4={style:{"text-align":"left"}},C4=t("td",{style:{"text-align":"center"}},"928",-1),N4={style:{"text-align":"left"}},P4={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},K4=t("td",{style:{"text-align":"center"}},null,-1),V4={style:{"text-align":"left"}},B4=t("code",null,"深度优先搜索",-1),T4=t("code",null,"广度优先搜索",-1),U4=t("code",null,"并查集",-1),A4=t("code",null,"3+",-1),W4={style:{"text-align":"left"}},D4=t("td",{style:{"text-align":"center"}},"934",-1),Y4={style:{"text-align":"left"}},J4={href:"https://leetcode.com/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},Q4=t("td",{style:{"text-align":"center"}},null,-1),R4={style:{"text-align":"left"}},S4=t("code",null,"深度优先搜索",-1),Z4=t("code",null,"广度优先搜索",-1),F4=t("code",null,"数组",-1),G4=t("code",null,"1+",-1),X4={style:{"text-align":"left"}},$4=t("td",{style:{"text-align":"center"}},"938",-1),t8={style:{"text-align":"left"}},e8={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},l8=t("td",{style:{"text-align":"center"}},null,-1),o8={style:{"text-align":"left"}},s8=t("code",null,"树",-1),n8=t("code",null,"深度优先搜索",-1),d8=t("code",null,"二叉搜索树",-1),_8=t("code",null,"1+",-1),c8={style:{"text-align":"left"}},r8=t("td",{style:{"text-align":"center"}},"947",-1),a8={style:{"text-align":"left"}},i8={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},h8=t("td",{style:{"text-align":"center"}},null,-1),f8={style:{"text-align":"left"}},u8=t("code",null,"深度优先搜索",-1),g8=t("code",null,"并查集",-1),m8=t("code",null,"图",-1),y8=t("code",null,"1+",-1),x8={style:{"text-align":"left"}},p8=t("td",{style:{"text-align":"center"}},"951",-1),b8={style:{"text-align":"left"}},k8={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},M8=t("td",{style:{"text-align":"center"}},null,-1),I8={style:{"text-align":"left"}},v8=t("code",null,"树",-1),w8=t("code",null,"深度优先搜索",-1),H8=t("code",null,"二叉树",-1),E8={style:{"text-align":"left"}},z8=t("td",{style:{"text-align":"center"}},"959",-1),O8={style:{"text-align":"left"}},j8={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},L8=t("td",{style:{"text-align":"center"}},null,-1),q8={style:{"text-align":"left"}},C8=t("code",null,"深度优先搜索",-1),N8=t("code",null,"广度优先搜索",-1),P8=t("code",null,"并查集",-1),K8=t("code",null,"3+",-1),V8={style:{"text-align":"left"}},B8=t("td",{style:{"text-align":"center"}},"965",-1),T8={style:{"text-align":"left"}},U8={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},A8=t("td",{style:{"text-align":"center"}},null,-1),W8={style:{"text-align":"left"}},D8=t("code",null,"树",-1),Y8=t("code",null,"深度优先搜索",-1),J8=t("code",null,"广度优先搜索",-1),Q8=t("code",null,"1+",-1),R8={style:{"text-align":"left"}},S8=t("td",{style:{"text-align":"center"}},"968",-1),Z8={style:{"text-align":"left"}},F8={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},G8=t("td",{style:{"text-align":"center"}},null,-1),X8={style:{"text-align":"left"}},$8=t("code",null,"树",-1),t6=t("code",null,"深度优先搜索",-1),e6=t("code",null,"动态规划",-1),l6=t("code",null,"1+",-1),o6={style:{"text-align":"left"}},s6=t("td",{style:{"text-align":"center"}},"971",-1),n6={style:{"text-align":"left"}},d6={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},_6=t("td",{style:{"text-align":"center"}},null,-1),c6={style:{"text-align":"left"}},r6=t("code",null,"树",-1),a6=t("code",null,"深度优先搜索",-1),i6=t("code",null,"二叉树",-1),h6={style:{"text-align":"left"}},f6=t("td",{style:{"text-align":"center"}},"979",-1),u6={style:{"text-align":"left"}},g6={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},m6=t("td",{style:{"text-align":"center"}},null,-1),y6={style:{"text-align":"left"}},x6=t("code",null,"树",-1),p6=t("code",null,"深度优先搜索",-1),b6=t("code",null,"二叉树",-1),k6={style:{"text-align":"left"}},M6=t("td",{style:{"text-align":"center"}},"987",-1),I6={style:{"text-align":"left"}},v6={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},w6=t("td",{style:{"text-align":"center"}},null,-1),H6={style:{"text-align":"left"}},E6=t("code",null,"树",-1),z6=t("code",null,"深度优先搜索",-1),O6=t("code",null,"广度优先搜索",-1),j6=t("code",null,"3+",-1),L6={style:{"text-align":"left"}},q6=t("td",{style:{"text-align":"center"}},"988",-1),C6={style:{"text-align":"left"}},N6={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},P6=t("td",{style:{"text-align":"center"}},null,-1),K6={style:{"text-align":"left"}},V6=t("code",null,"树",-1),B6=t("code",null,"深度优先搜索",-1),T6=t("code",null,"字符串",-1),U6=t("code",null,"2+",-1),A6={style:{"text-align":"left"}},W6=t("td",{style:{"text-align":"center"}},"993",-1),D6={style:{"text-align":"left"}},Y6={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},J6=t("td",{style:{"text-align":"center"}},null,-1),Q6={style:{"text-align":"left"}},R6=t("code",null,"树",-1),S6=t("code",null,"深度优先搜索",-1),Z6=t("code",null,"广度优先搜索",-1),F6=t("code",null,"1+",-1),G6={style:{"text-align":"left"}},X6=t("td",{style:{"text-align":"center"}},"1020",-1),$6={style:{"text-align":"left"}},t5={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},e5=t("td",{style:{"text-align":"center"}},null,-1),l5={style:{"text-align":"left"}},o5=t("code",null,"深度优先搜索",-1),s5=t("code",null,"广度优先搜索",-1),n5=t("code",null,"并查集",-1),d5=t("code",null,"2+",-1),_5={style:{"text-align":"left"}},c5=t("td",{style:{"text-align":"center"}},"1022",-1),r5={style:{"text-align":"left"}},a5={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},i5=t("td",{style:{"text-align":"center"}},null,-1),h5={style:{"text-align":"left"}},f5=t("code",null,"树",-1),u5=t("code",null,"深度优先搜索",-1),g5=t("code",null,"二叉树",-1),m5={style:{"text-align":"left"}},y5=t("td",{style:{"text-align":"center"}},"1026",-1),x5={style:{"text-align":"left"}},p5={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},b5=t("td",{style:{"text-align":"center"}},null,-1),k5={style:{"text-align":"left"}},M5=t("code",null,"树",-1),I5=t("code",null,"深度优先搜索",-1),v5=t("code",null,"二叉树",-1),w5={style:{"text-align":"left"}},H5=t("td",{style:{"text-align":"center"}},"1028",-1),E5={style:{"text-align":"left"}},z5={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},O5=t("td",{style:{"text-align":"center"}},null,-1),j5={style:{"text-align":"left"}},L5=t("code",null,"树",-1),q5=t("code",null,"深度优先搜索",-1),C5=t("code",null,"字符串",-1),N5=t("code",null,"1+",-1),P5={style:{"text-align":"left"}},K5=t("td",{style:{"text-align":"center"}},"1034",-1),V5={style:{"text-align":"left"}},B5={href:"https://leetcode.com/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},T5=t("td",{style:{"text-align":"center"}},null,-1),U5={style:{"text-align":"left"}},A5=t("code",null,"深度优先搜索",-1),W5=t("code",null,"广度优先搜索",-1),D5=t("code",null,"数组",-1),Y5=t("code",null,"1+",-1),J5={style:{"text-align":"left"}},Q5=t("td",{style:{"text-align":"center"}},"1036",-1),R5={style:{"text-align":"left"}},S5={href:"https://leetcode.com/problems/escape-a-large-maze",target:"_blank",rel:"noopener noreferrer"},Z5=t("td",{style:{"text-align":"center"}},null,-1),F5={style:{"text-align":"left"}},G5=t("code",null,"深度优先搜索",-1),X5=t("code",null,"广度优先搜索",-1),$5=t("code",null,"数组",-1),t7=t("code",null,"1+",-1),e7={style:{"text-align":"left"}},l7=t("td",{style:{"text-align":"center"}},"1038",-1),o7={style:{"text-align":"left"}},s7={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},n7=t("td",{style:{"text-align":"center"}},null,-1),d7={style:{"text-align":"left"}},_7=t("code",null,"树",-1),c7=t("code",null,"深度优先搜索",-1),r7=t("code",null,"二叉搜索树",-1),a7=t("code",null,"1+",-1),i7={style:{"text-align":"left"}},h7=t("td",{style:{"text-align":"center"}},"1042",-1),f7={style:{"text-align":"left"}},u7={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},g7=t("td",{style:{"text-align":"center"}},null,-1),m7={style:{"text-align":"left"}},y7=t("code",null,"深度优先搜索",-1),x7=t("code",null,"广度优先搜索",-1),p7=t("code",null,"图",-1),b7={style:{"text-align":"left"}},k7=t("td",{style:{"text-align":"center"}},"1080",-1),M7={style:{"text-align":"left"}},I7={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},v7=t("td",{style:{"text-align":"center"}},null,-1),w7={style:{"text-align":"left"}},H7=t("code",null,"树",-1),E7=t("code",null,"深度优先搜索",-1),z7=t("code",null,"二叉树",-1),O7={style:{"text-align":"left"}},j7=t("td",{style:{"text-align":"center"}},"1102",-1),L7={style:{"text-align":"left"}},q7={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},C7=t("td",{style:{"text-align":"center"}},null,-1),N7={style:{"text-align":"left"}},P7=t("code",null,"深度优先搜索",-1),K7=t("code",null,"广度优先搜索",-1),V7=t("code",null,"并查集",-1),B7=t("code",null,"4+",-1),T7={style:{"text-align":"left"}},U7=t("td",{style:{"text-align":"center"}},"1110",-1),A7={style:{"text-align":"left"}},W7={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},D7=t("td",{style:{"text-align":"center"}},null,-1),Y7={style:{"text-align":"left"}},J7=t("code",null,"树",-1),Q7=t("code",null,"深度优先搜索",-1),R7=t("code",null,"数组",-1),S7=t("code",null,"2+",-1),Z7={style:{"text-align":"left"}},F7=t("td",{style:{"text-align":"center"}},"1120",-1),G7={style:{"text-align":"left"}},X7={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},$7=t("td",{style:{"text-align":"center"}},null,-1),t9={style:{"text-align":"left"}},e9=t("code",null,"树",-1),l9=t("code",null,"深度优先搜索",-1),o9=t("code",null,"二叉树",-1),s9={style:{"text-align":"left"}},n9=t("td",{style:{"text-align":"center"}},"1123",-1),d9={style:{"text-align":"left"}},_9={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},c9=t("td",{style:{"text-align":"center"}},null,-1),r9={style:{"text-align":"left"}},a9=t("code",null,"树",-1),i9=t("code",null,"深度优先搜索",-1),h9=t("code",null,"广度优先搜索",-1),f9=t("code",null,"2+",-1),u9={style:{"text-align":"left"}},g9=t("td",{style:{"text-align":"center"}},"1145",-1),m9={style:{"text-align":"left"}},y9={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},x9=t("td",{style:{"text-align":"center"}},null,-1),p9={style:{"text-align":"left"}},b9=t("code",null,"树",-1),k9=t("code",null,"深度优先搜索",-1),M9=t("code",null,"二叉树",-1),I9={style:{"text-align":"left"}},v9=t("td",{style:{"text-align":"center"}},"1161",-1),w9={style:{"text-align":"left"}},H9={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},E9=t("td",{style:{"text-align":"center"}},null,-1),z9={style:{"text-align":"left"}},O9=t("code",null,"树",-1),j9=t("code",null,"深度优先搜索",-1),L9=t("code",null,"广度优先搜索",-1),q9=t("code",null,"1+",-1),C9={style:{"text-align":"left"}},N9=t("td",{style:{"text-align":"center"}},"1192",-1),P9={style:{"text-align":"left"}},K9={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},V9=t("td",{style:{"text-align":"center"}},null,-1),B9={style:{"text-align":"left"}},T9=t("code",null,"深度优先搜索",-1),U9=t("code",null,"图",-1),A9=t("code",null,"双连通分量",-1),W9={style:{"text-align":"left"}},D9=t("td",{style:{"text-align":"center"}},"1202",-1),Y9={style:{"text-align":"left"}},J9={href:"https://leetcode.com/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},Q9=t("td",{style:{"text-align":"center"}},null,-1),R9={style:{"text-align":"left"}},S9=t("code",null,"深度优先搜索",-1),Z9=t("code",null,"广度优先搜索",-1),F9=t("code",null,"并查集",-1),G9=t("code",null,"4+",-1),X9={style:{"text-align":"left"}},$9=t("td",{style:{"text-align":"center"}},"1203",-1),tk={style:{"text-align":"left"}},ek={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},lk=t("td",{style:{"text-align":"center"}},null,-1),ok={style:{"text-align":"left"}},sk=t("code",null,"深度优先搜索",-1),nk=t("code",null,"广度优先搜索",-1),dk=t("code",null,"图",-1),_k=t("code",null,"1+",-1),ck={style:{"text-align":"left"}},rk=t("td",{style:{"text-align":"center"}},"1214",-1),ak={style:{"text-align":"left"}},ik={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},hk=t("td",{style:{"text-align":"center"}},null,-1),fk={style:{"text-align":"left"}},uk=t("code",null,"栈",-1),gk=t("code",null,"树",-1),mk=t("code",null,"深度优先搜索",-1),yk=t("code",null,"4+",-1),xk={style:{"text-align":"left"}},pk=t("td",{style:{"text-align":"center"}},"1233",-1),bk={style:{"text-align":"left"}},kk={href:"https://leetcode.com/problems/remove-sub-folders-from-the-filesystem",target:"_blank",rel:"noopener noreferrer"},Mk=t("td",{style:{"text-align":"center"}},null,-1),Ik={style:{"text-align":"left"}},vk=t("code",null,"深度优先搜索",-1),wk=t("code",null,"字典树",-1),Hk=t("code",null,"数组",-1),Ek=t("code",null,"1+",-1),zk={style:{"text-align":"left"}},Ok=t("td",{style:{"text-align":"center"}},"1236",-1),jk={style:{"text-align":"left"}},Lk={href:"https://leetcode.com/problems/web-crawler",target:"_blank",rel:"noopener noreferrer"},qk=t("td",{style:{"text-align":"center"}},null,-1),Ck={style:{"text-align":"left"}},Nk=t("code",null,"深度优先搜索",-1),Pk=t("code",null,"广度优先搜索",-1),Kk=t("code",null,"字符串",-1),Vk=t("code",null,"1+",-1),Bk={style:{"text-align":"left"}},Tk=t("td",{style:{"text-align":"center"}},"1242",-1),Uk={style:{"text-align":"left"}},Ak={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},Wk=t("td",{style:{"text-align":"center"}},null,-1),Dk={style:{"text-align":"left"}},Yk=t("code",null,"深度优先搜索",-1),Jk=t("code",null,"广度优先搜索",-1),Qk=t("code",null,"多线程",-1),Rk={style:{"text-align":"left"}},Sk=t("td",{style:{"text-align":"center"}},"1245",-1),Zk={style:{"text-align":"left"}},Fk={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Gk=t("td",{style:{"text-align":"center"}},null,-1),Xk={style:{"text-align":"left"}},$k=t("code",null,"树",-1),tM=t("code",null,"深度优先搜索",-1),eM=t("code",null,"广度优先搜索",-1),lM=t("code",null,"2+",-1),oM={style:{"text-align":"left"}},sM=t("td",{style:{"text-align":"center"}},"1254",-1),nM={style:{"text-align":"left"}},dM={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},_M=t("td",{style:{"text-align":"center"}},null,-1),cM={style:{"text-align":"left"}},rM=t("code",null,"深度优先搜索",-1),aM=t("code",null,"广度优先搜索",-1),iM=t("code",null,"并查集",-1),hM=t("code",null,"2+",-1),fM={style:{"text-align":"left"}},uM=t("td",{style:{"text-align":"center"}},"1257",-1),gM={style:{"text-align":"left"}},mM={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},yM=t("td",{style:{"text-align":"center"}},null,-1),xM={style:{"text-align":"left"}},pM=t("code",null,"树",-1),bM=t("code",null,"深度优先搜索",-1),kM=t("code",null,"广度优先搜索",-1),MM=t("code",null,"3+",-1),IM={style:{"text-align":"left"}},vM=t("td",{style:{"text-align":"center"}},"1261",-1),wM={style:{"text-align":"left"}},HM={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},EM=t("td",{style:{"text-align":"center"}},null,-1),zM={style:{"text-align":"left"}},OM=t("code",null,"树",-1),jM=t("code",null,"深度优先搜索",-1),LM=t("code",null,"广度优先搜索",-1),qM=t("code",null,"3+",-1),CM={style:{"text-align":"left"}},NM=t("td",{style:{"text-align":"center"}},"1267",-1),PM={style:{"text-align":"left"}},KM={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},VM=t("td",{style:{"text-align":"center"}},null,-1),BM={style:{"text-align":"left"}},TM=t("code",null,"深度优先搜索",-1),UM=t("code",null,"广度优先搜索",-1),AM=t("code",null,"并查集",-1),WM=t("code",null,"3+",-1),DM={style:{"text-align":"left"}},YM=t("td",{style:{"text-align":"center"}},"1273",-1),JM={style:{"text-align":"left"}},QM={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},RM=t("td",{style:{"text-align":"center"}},null,-1),SM={style:{"text-align":"left"}},ZM=t("code",null,"树",-1),FM=t("code",null,"深度优先搜索",-1),GM=t("code",null,"广度优先搜索",-1),XM=t("code",null,"1+",-1),$M={style:{"text-align":"left"}},tI=t("td",{style:{"text-align":"center"}},"1302",-1),eI={style:{"text-align":"left"}},lI={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},oI=t("td",{style:{"text-align":"center"}},null,-1),sI={style:{"text-align":"left"}},nI=t("code",null,"树",-1),dI=t("code",null,"深度优先搜索",-1),_I=t("code",null,"广度优先搜索",-1),cI=t("code",null,"1+",-1),rI={style:{"text-align":"left"}},aI=t("td",{style:{"text-align":"center"}},"1305",-1),iI={style:{"text-align":"left"}},hI={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},fI=t("td",{style:{"text-align":"center"}},null,-1),uI={style:{"text-align":"left"}},gI=t("code",null,"树",-1),mI=t("code",null,"深度优先搜索",-1),yI=t("code",null,"二叉搜索树",-1),xI=t("code",null,"2+",-1),pI={style:{"text-align":"left"}},bI=t("td",{style:{"text-align":"center"}},"1306",-1),kI={style:{"text-align":"left"}},MI={href:"https://leetcode.com/problems/jump-game-iii",target:"_blank",rel:"noopener noreferrer"},II=t("td",{style:{"text-align":"center"}},null,-1),vI={style:{"text-align":"left"}},wI=t("code",null,"深度优先搜索",-1),HI=t("code",null,"广度优先搜索",-1),EI=t("code",null,"数组",-1),zI={style:{"text-align":"left"}},OI=t("td",{style:{"text-align":"center"}},"1315",-1),jI={style:{"text-align":"left"}},LI={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},qI=t("td",{style:{"text-align":"center"}},null,-1),CI={style:{"text-align":"left"}},NI=t("code",null,"树",-1),PI=t("code",null,"深度优先搜索",-1),KI=t("code",null,"广度优先搜索",-1),VI=t("code",null,"1+",-1),BI={style:{"text-align":"left"}},TI=t("td",{style:{"text-align":"center"}},"1319",-1),UI={style:{"text-align":"left"}},AI={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},WI=t("td",{style:{"text-align":"center"}},null,-1),DI={style:{"text-align":"left"}},YI=t("code",null,"深度优先搜索",-1),JI=t("code",null,"广度优先搜索",-1),QI=t("code",null,"并查集",-1),RI=t("code",null,"1+",-1),SI={style:{"text-align":"left"}},ZI=t("td",{style:{"text-align":"center"}},"1325",-1),FI={style:{"text-align":"left"}},GI={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},XI=t("td",{style:{"text-align":"center"}},null,-1),$I={style:{"text-align":"left"}},tv=t("code",null,"树",-1),ev=t("code",null,"深度优先搜索",-1),lv=t("code",null,"二叉树",-1),ov={style:{"text-align":"left"}},sv=t("td",{style:{"text-align":"center"}},"1339",-1),nv={style:{"text-align":"left"}},dv={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},_v=t("td",{style:{"text-align":"center"}},null,-1),cv={style:{"text-align":"left"}},rv=t("code",null,"树",-1),av=t("code",null,"深度优先搜索",-1),iv=t("code",null,"二叉树",-1),hv={style:{"text-align":"left"}},fv=t("td",{style:{"text-align":"center"}},"1361",-1),uv={style:{"text-align":"left"}},gv={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},mv=t("td",{style:{"text-align":"center"}},null,-1),yv={style:{"text-align":"left"}},xv=t("code",null,"树",-1),pv=t("code",null,"深度优先搜索",-1),bv=t("code",null,"广度优先搜索",-1),kv=t("code",null,"3+",-1),Mv={style:{"text-align":"left"}},Iv=t("td",{style:{"text-align":"center"}},"1367",-1),vv={style:{"text-align":"left"}},wv={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Hv=t("td",{style:{"text-align":"center"}},null,-1),Ev={style:{"text-align":"left"}},zv=t("code",null,"树",-1),Ov=t("code",null,"深度优先搜索",-1),jv=t("code",null,"链表",-1),Lv=t("code",null,"1+",-1),qv={style:{"text-align":"left"}},Cv=t("td",{style:{"text-align":"center"}},"1372",-1),Nv={style:{"text-align":"left"}},Pv={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Kv=t("td",{style:{"text-align":"center"}},null,-1),Vv={style:{"text-align":"left"}},Bv=t("code",null,"树",-1),Tv=t("code",null,"深度优先搜索",-1),Uv=t("code",null,"动态规划",-1),Av=t("code",null,"1+",-1),Wv={style:{"text-align":"left"}},Dv=t("td",{style:{"text-align":"center"}},"1373",-1),Yv={style:{"text-align":"left"}},Jv={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qv=t("td",{style:{"text-align":"center"}},null,-1),Rv={style:{"text-align":"left"}},Sv=t("code",null,"树",-1),Zv=t("code",null,"深度优先搜索",-1),Fv=t("code",null,"二叉搜索树",-1),Gv=t("code",null,"2+",-1),Xv={style:{"text-align":"left"}},$v=t("td",{style:{"text-align":"center"}},"1376",-1),tw={style:{"text-align":"left"}},ew={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},lw=t("td",{style:{"text-align":"center"}},null,-1),ow={style:{"text-align":"left"}},sw=t("code",null,"树",-1),nw=t("code",null,"深度优先搜索",-1),dw=t("code",null,"广度优先搜索",-1),_w={style:{"text-align":"left"}},cw=t("td",{style:{"text-align":"center"}},"1377",-1),rw={style:{"text-align":"left"}},aw={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},iw=t("td",{style:{"text-align":"center"}},null,-1),hw={style:{"text-align":"left"}},fw=t("code",null,"树",-1),uw=t("code",null,"深度优先搜索",-1),gw=t("code",null,"广度优先搜索",-1),mw=t("code",null,"1+",-1),yw={style:{"text-align":"left"}},xw=t("td",{style:{"text-align":"center"}},"1379",-1),pw={style:{"text-align":"left"}},bw={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},kw=t("td",{style:{"text-align":"center"}},null,-1),Mw={style:{"text-align":"left"}},Iw=t("code",null,"树",-1),vw=t("code",null,"深度优先搜索",-1),ww=t("code",null,"广度优先搜索",-1),Hw=t("code",null,"1+",-1),Ew={style:{"text-align":"left"}},zw=t("td",{style:{"text-align":"center"}},"1382",-1),Ow={style:{"text-align":"left"}},jw={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Lw=t("td",{style:{"text-align":"center"}},null,-1),qw={style:{"text-align":"left"}},Cw=t("code",null,"贪心",-1),Nw=t("code",null,"树",-1),Pw=t("code",null,"深度优先搜索",-1),Kw=t("code",null,"3+",-1),Vw={style:{"text-align":"left"}},Bw=t("td",{style:{"text-align":"center"}},"1391",-1),Tw={style:{"text-align":"left"}},Uw={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Aw=t("td",{style:{"text-align":"center"}},null,-1),Ww={style:{"text-align":"left"}},Dw=t("code",null,"深度优先搜索",-1),Yw=t("code",null,"广度优先搜索",-1),Jw=t("code",null,"并查集",-1),Qw=t("code",null,"2+",-1),Rw={style:{"text-align":"left"}},Sw=t("td",{style:{"text-align":"center"}},"1430",-1),Zw={style:{"text-align":"left"}},Fw={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gw=t("td",{style:{"text-align":"center"}},null,-1),Xw={style:{"text-align":"left"}},$w=t("code",null,"树",-1),tH=t("code",null,"深度优先搜索",-1),eH=t("code",null,"广度优先搜索",-1),lH=t("code",null,"1+",-1),oH={style:{"text-align":"left"}},sH=t("td",{style:{"text-align":"center"}},"1443",-1),nH={style:{"text-align":"left"}},dH={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},_H=t("td",{style:{"text-align":"center"}},null,-1),cH={style:{"text-align":"left"}},rH=t("code",null,"树",-1),aH=t("code",null,"深度优先搜索",-1),iH=t("code",null,"广度优先搜索",-1),hH=t("code",null,"1+",-1),fH={style:{"text-align":"left"}},uH=t("td",{style:{"text-align":"center"}},"1448",-1),gH={style:{"text-align":"left"}},mH={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},yH=t("td",{style:{"text-align":"center"}},null,-1),xH={style:{"text-align":"left"}},pH=t("code",null,"树",-1),bH=t("code",null,"深度优先搜索",-1),kH=t("code",null,"广度优先搜索",-1),MH=t("code",null,"1+",-1),IH={style:{"text-align":"left"}},vH=t("td",{style:{"text-align":"center"}},"1457",-1),wH={style:{"text-align":"left"}},HH={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},EH=t("td",{style:{"text-align":"center"}},null,-1),zH={style:{"text-align":"left"}},OH=t("code",null,"位运算",-1),jH=t("code",null,"树",-1),LH=t("code",null,"深度优先搜索",-1),qH=t("code",null,"2+",-1),CH={style:{"text-align":"left"}},NH=t("td",{style:{"text-align":"center"}},"1462",-1),PH={style:{"text-align":"left"}},KH={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},VH=t("td",{style:{"text-align":"center"}},null,-1),BH={style:{"text-align":"left"}},TH=t("code",null,"深度优先搜索",-1),UH=t("code",null,"广度优先搜索",-1),AH=t("code",null,"图",-1),WH=t("code",null,"1+",-1),DH={style:{"text-align":"left"}},YH=t("td",{style:{"text-align":"center"}},"1466",-1),JH={style:{"text-align":"left"}},QH={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},RH=t("td",{style:{"text-align":"center"}},null,-1),SH={style:{"text-align":"left"}},ZH=t("code",null,"深度优先搜索",-1),FH=t("code",null,"广度优先搜索",-1),GH=t("code",null,"图",-1),XH={style:{"text-align":"left"}},$H=t("td",{style:{"text-align":"center"}},"1469",-1),tE={style:{"text-align":"left"}},eE={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},lE=t("td",{style:{"text-align":"center"}},null,-1),oE={style:{"text-align":"left"}},sE=t("code",null,"树",-1),nE=t("code",null,"深度优先搜索",-1),dE=t("code",null,"广度优先搜索",-1),_E=t("code",null,"1+",-1),cE={style:{"text-align":"left"}},rE=t("td",{style:{"text-align":"center"}},"1483",-1),aE={style:{"text-align":"left"}},iE={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},hE=t("td",{style:{"text-align":"center"}},null,-1),fE={style:{"text-align":"left"}},uE=t("code",null,"树",-1),gE=t("code",null,"深度优先搜索",-1),mE=t("code",null,"广度优先搜索",-1),yE=t("code",null,"3+",-1),xE={style:{"text-align":"left"}},pE=t("td",{style:{"text-align":"center"}},"1485",-1),bE={style:{"text-align":"left"}},kE={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},ME=t("td",{style:{"text-align":"center"}},null,-1),IE={style:{"text-align":"left"}},vE=t("code",null,"树",-1),wE=t("code",null,"深度优先搜索",-1),HE=t("code",null,"广度优先搜索",-1),EE=t("code",null,"2+",-1),zE={style:{"text-align":"left"}},OE=t("td",{style:{"text-align":"center"}},"1490",-1),jE={style:{"text-align":"left"}},LE={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},qE=t("td",{style:{"text-align":"center"}},null,-1),CE={style:{"text-align":"left"}},NE=t("code",null,"树",-1),PE=t("code",null,"深度优先搜索",-1),KE=t("code",null,"广度优先搜索",-1),VE=t("code",null,"1+",-1),BE={style:{"text-align":"left"}},TE=t("td",{style:{"text-align":"center"}},"1506",-1),UE={style:{"text-align":"left"}},AE={href:"https://leetcode.com/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},WE=t("td",{style:{"text-align":"center"}},null,-1),DE={style:{"text-align":"left"}},YE=t("code",null,"位运算",-1),JE=t("code",null,"树",-1),QE=t("code",null,"深度优先搜索",-1),RE=t("code",null,"1+",-1),SE={style:{"text-align":"left"}},ZE=t("td",{style:{"text-align":"center"}},"1516",-1),FE={style:{"text-align":"left"}},GE={href:"https://leetcode.com/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},XE=t("td",{style:{"text-align":"center"}},null,-1),$E={style:{"text-align":"left"}},tz=t("code",null,"树",-1),ez=t("code",null,"深度优先搜索",-1),lz={style:{"text-align":"left"}},oz=t("td",{style:{"text-align":"center"}},"1519",-1),sz={style:{"text-align":"left"}},nz={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},dz=t("td",{style:{"text-align":"center"}},null,-1),_z={style:{"text-align":"left"}},cz=t("code",null,"树",-1),rz=t("code",null,"深度优先搜索",-1),az=t("code",null,"广度优先搜索",-1),iz=t("code",null,"2+",-1),hz={style:{"text-align":"left"}},fz=t("td",{style:{"text-align":"center"}},"1522",-1),uz={style:{"text-align":"left"}},gz={href:"https://leetcode.com/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},mz={style:{"text-align":"center"}},yz={style:{"text-align":"left"}},xz=t("code",null,"树",-1),pz=t("code",null,"深度优先搜索",-1),bz={style:{"text-align":"left"}},kz=t("td",{style:{"text-align":"center"}},"1530",-1),Mz={style:{"text-align":"left"}},Iz={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},vz=t("td",{style:{"text-align":"center"}},null,-1),wz={style:{"text-align":"left"}},Hz=t("code",null,"树",-1),Ez=t("code",null,"深度优先搜索",-1),zz=t("code",null,"二叉树",-1),Oz={style:{"text-align":"left"}},jz=t("td",{style:{"text-align":"center"}},"1559",-1),Lz={style:{"text-align":"left"}},qz={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},Cz=t("td",{style:{"text-align":"center"}},null,-1),Nz={style:{"text-align":"left"}},Pz=t("code",null,"深度优先搜索",-1),Kz=t("code",null,"广度优先搜索",-1),Vz=t("code",null,"并查集",-1),Bz=t("code",null,"2+",-1),Tz={style:{"text-align":"left"}},Uz=t("td",{style:{"text-align":"center"}},"1568",-1),Az={style:{"text-align":"left"}},Wz={href:"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},Dz=t("td",{style:{"text-align":"center"}},null,-1),Yz={style:{"text-align":"left"}},Jz=t("code",null,"深度优先搜索",-1),Qz=t("code",null,"广度优先搜索",-1),Rz=t("code",null,"数组",-1),Sz=t("code",null,"2+",-1),Zz={style:{"text-align":"left"}},Fz=t("td",{style:{"text-align":"center"}},"1600",-1),Gz={style:{"text-align":"left"}},Xz={href:"https://leetcode.com/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},$z=t("td",{style:{"text-align":"center"}},null,-1),tO={style:{"text-align":"left"}},eO=t("code",null,"树",-1),lO=t("code",null,"深度优先搜索",-1),oO=t("code",null,"设计",-1),sO=t("code",null,"1+",-1),nO={style:{"text-align":"left"}},dO=t("td",{style:{"text-align":"center"}},"1612",-1),_O={style:{"text-align":"left"}},cO={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},rO=t("td",{style:{"text-align":"center"}},null,-1),aO={style:{"text-align":"left"}},iO=t("code",null,"树",-1),hO=t("code",null,"深度优先搜索",-1),fO=t("code",null,"哈希表",-1),uO=t("code",null,"2+",-1),gO={style:{"text-align":"left"}},mO=t("td",{style:{"text-align":"center"}},"1625",-1),yO={style:{"text-align":"left"}},xO={href:"https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations",target:"_blank",rel:"noopener noreferrer"},pO=t("td",{style:{"text-align":"center"}},null,-1),bO={style:{"text-align":"left"}},kO=t("code",null,"深度优先搜索",-1),MO=t("code",null,"广度优先搜索",-1),IO=t("code",null,"字符串",-1),vO=t("code",null,"1+",-1),wO={style:{"text-align":"left"}},HO=t("td",{style:{"text-align":"center"}},"1631",-1),EO={style:{"text-align":"left"}},zO={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},OO=t("td",{style:{"text-align":"center"}},null,-1),jO={style:{"text-align":"left"}},LO=t("code",null,"深度优先搜索",-1),qO=t("code",null,"广度优先搜索",-1),CO=t("code",null,"并查集",-1),NO=t("code",null,"4+",-1),PO={style:{"text-align":"left"}},KO=t("td",{style:{"text-align":"center"}},"1644",-1),VO={style:{"text-align":"left"}},BO={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},TO=t("td",{style:{"text-align":"center"}},null,-1),UO={style:{"text-align":"left"}},AO=t("code",null,"树",-1),WO=t("code",null,"深度优先搜索",-1),DO=t("code",null,"二叉树",-1),YO={style:{"text-align":"left"}},JO=t("td",{style:{"text-align":"center"}},"1660",-1),QO={style:{"text-align":"left"}},RO={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},SO=t("td",{style:{"text-align":"center"}},null,-1),ZO={style:{"text-align":"left"}},FO=t("code",null,"树",-1),GO=t("code",null,"深度优先搜索",-1),XO=t("code",null,"广度优先搜索",-1),$O=t("code",null,"2+",-1),tj={style:{"text-align":"left"}},ej=t("td",{style:{"text-align":"center"}},"1666",-1),lj={style:{"text-align":"left"}},oj={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},sj=t("td",{style:{"text-align":"center"}},null,-1),nj={style:{"text-align":"left"}},dj=t("code",null,"树",-1),_j=t("code",null,"深度优先搜索",-1),cj=t("code",null,"二叉树",-1),rj={style:{"text-align":"left"}},aj=t("td",{style:{"text-align":"center"}},"1676",-1),ij={style:{"text-align":"left"}},hj={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},fj=t("td",{style:{"text-align":"center"}},null,-1),uj={style:{"text-align":"left"}},gj=t("code",null,"树",-1),mj=t("code",null,"深度优先搜索",-1),yj=t("code",null,"哈希表",-1),xj=t("code",null,"1+",-1),pj={style:{"text-align":"left"}},bj=t("td",{style:{"text-align":"center"}},"1722",-1),kj={style:{"text-align":"left"}},Mj={href:"https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations",target:"_blank",rel:"noopener noreferrer"},Ij=t("td",{style:{"text-align":"center"}},null,-1),vj={style:{"text-align":"left"}},wj=t("code",null,"深度优先搜索",-1),Hj=t("code",null,"并查集",-1),Ej=t("code",null,"数组",-1),zj={style:{"text-align":"left"}},Oj=t("td",{style:{"text-align":"center"}},"1740",-1),jj={style:{"text-align":"left"}},Lj={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},qj=t("td",{style:{"text-align":"center"}},null,-1),Cj={style:{"text-align":"left"}},Nj=t("code",null,"树",-1),Pj=t("code",null,"深度优先搜索",-1),Kj=t("code",null,"广度优先搜索",-1),Vj=t("code",null,"2+",-1),Bj={style:{"text-align":"left"}},Tj=t("td",{style:{"text-align":"center"}},"1743",-1),Uj={style:{"text-align":"left"}},Aj={href:"https://leetcode.com/problems/restore-the-array-from-adjacent-pairs",target:"_blank",rel:"noopener noreferrer"},Wj=t("td",{style:{"text-align":"center"}},null,-1),Dj={style:{"text-align":"left"}},Yj=t("code",null,"深度优先搜索",-1),Jj=t("code",null,"数组",-1),Qj=t("code",null,"哈希表",-1),Rj={style:{"text-align":"left"}},Sj=t("td",{style:{"text-align":"center"}},"1766",-1),Zj={style:{"text-align":"left"}},Fj={href:"https://leetcode.com/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},Gj=t("td",{style:{"text-align":"center"}},null,-1),Xj={style:{"text-align":"left"}},$j=t("code",null,"树",-1),tL=t("code",null,"深度优先搜索",-1),eL=t("code",null,"数组",-1),lL=t("code",null,"2+",-1),oL={style:{"text-align":"left"}},sL=t("td",{style:{"text-align":"center"}},"1778",-1),nL={style:{"text-align":"left"}},dL={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},_L=t("td",{style:{"text-align":"center"}},null,-1),cL={style:{"text-align":"left"}},rL=t("code",null,"深度优先搜索",-1),aL=t("code",null,"广度优先搜索",-1),iL=t("code",null,"图",-1),hL=t("code",null,"1+",-1),fL={style:{"text-align":"left"}},uL=t("td",{style:{"text-align":"center"}},"1810",-1),gL={style:{"text-align":"left"}},mL={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},yL=t("td",{style:{"text-align":"center"}},null,-1),xL={style:{"text-align":"left"}},pL=t("code",null,"深度优先搜索",-1),bL=t("code",null,"广度优先搜索",-1),kL=t("code",null,"图",-1),ML=t("code",null,"2+",-1),IL={style:{"text-align":"left"}},vL=t("td",{style:{"text-align":"center"}},"1820",-1),wL={style:{"text-align":"left"}},HL={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},EL=t("td",{style:{"text-align":"center"}},null,-1),zL={style:{"text-align":"left"}},OL=t("code",null,"深度优先搜索",-1),jL=t("code",null,"图",-1),LL=t("code",null,"数组",-1),qL=t("code",null,"1+",-1),CL={style:{"text-align":"left"}},NL=t("td",{style:{"text-align":"center"}},"1858",-1),PL={style:{"text-align":"left"}},KL={href:"https://leetcode.com/problems/longest-word-with-all-prefixes",target:"_blank",rel:"noopener noreferrer"},VL=t("td",{style:{"text-align":"center"}},null,-1),BL={style:{"text-align":"left"}},TL=t("code",null,"深度优先搜索",-1),UL=t("code",null,"字典树",-1),AL={style:{"text-align":"left"}},WL=t("td",{style:{"text-align":"center"}},"1905",-1),DL={style:{"text-align":"left"}},YL={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},JL=t("td",{style:{"text-align":"center"}},null,-1),QL={style:{"text-align":"left"}},RL=t("code",null,"深度优先搜索",-1),SL=t("code",null,"广度优先搜索",-1),ZL=t("code",null,"并查集",-1),FL=t("code",null,"2+",-1),GL={style:{"text-align":"left"}},XL=t("td",{style:{"text-align":"center"}},"1932",-1),$L={style:{"text-align":"left"}},tq={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},eq=t("td",{style:{"text-align":"center"}},null,-1),lq={style:{"text-align":"left"}},oq=t("code",null,"树",-1),sq=t("code",null,"深度优先搜索",-1),nq=t("code",null,"哈希表",-1),dq=t("code",null,"2+",-1),_q={style:{"text-align":"left"}},cq=t("td",{style:{"text-align":"center"}},"1938",-1),rq={style:{"text-align":"left"}},aq={href:"https://leetcode.com/problems/maximum-genetic-difference-query",target:"_blank",rel:"noopener noreferrer"},iq=t("td",{style:{"text-align":"center"}},null,-1),hq={style:{"text-align":"left"}},fq=t("code",null,"位运算",-1),uq=t("code",null,"深度优先搜索",-1),gq=t("code",null,"字典树",-1),mq=t("code",null,"2+",-1),yq={style:{"text-align":"left"}},xq=t("td",{style:{"text-align":"center"}},"1970",-1),pq={style:{"text-align":"left"}},bq={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},kq=t("td",{style:{"text-align":"center"}},null,-1),Mq={style:{"text-align":"left"}},Iq=t("code",null,"深度优先搜索",-1),vq=t("code",null,"广度优先搜索",-1),wq=t("code",null,"并查集",-1),Hq=t("code",null,"3+",-1),Eq={style:{"text-align":"left"}},zq=t("td",{style:{"text-align":"center"}},"1971",-1),Oq={style:{"text-align":"left"}},jq={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},Lq=t("td",{style:{"text-align":"center"}},null,-1),qq={style:{"text-align":"left"}},Cq=t("code",null,"深度优先搜索",-1),Nq=t("code",null,"广度优先搜索",-1),Pq=t("code",null,"并查集",-1),Kq=t("code",null,"1+",-1),Vq={style:{"text-align":"left"}},Bq=t("td",{style:{"text-align":"center"}},"1973",-1),Tq={style:{"text-align":"left"}},Uq={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},Aq=t("td",{style:{"text-align":"center"}},null,-1),Wq={style:{"text-align":"left"}},Dq=t("code",null,"树",-1),Yq=t("code",null,"深度优先搜索",-1),Jq=t("code",null,"二叉树",-1),Qq={style:{"text-align":"left"}},Rq=t("td",{style:{"text-align":"center"}},"1992",-1),Sq={style:{"text-align":"left"}},Zq={href:"https://leetcode.com/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},Fq=t("td",{style:{"text-align":"center"}},null,-1),Gq={style:{"text-align":"left"}},Xq=t("code",null,"深度优先搜索",-1),$q=t("code",null,"广度优先搜索",-1),tC=t("code",null,"数组",-1),eC=t("code",null,"1+",-1),lC={style:{"text-align":"left"}},oC=t("td",{style:{"text-align":"center"}},"1993",-1),sC={style:{"text-align":"left"}},nC={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},dC=t("td",{style:{"text-align":"center"}},null,-1),_C={style:{"text-align":"left"}},cC=t("code",null,"树",-1),rC=t("code",null,"深度优先搜索",-1),aC=t("code",null,"广度优先搜索",-1),iC=t("code",null,"3+",-1),hC={style:{"text-align":"left"}},fC=t("td",{style:{"text-align":"center"}},"2003",-1),uC={style:{"text-align":"left"}},gC={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},mC=t("td",{style:{"text-align":"center"}},null,-1),yC={style:{"text-align":"left"}},xC=t("code",null,"树",-1),pC=t("code",null,"深度优先搜索",-1),bC=t("code",null,"并查集",-1),kC=t("code",null,"1+",-1),MC={style:{"text-align":"left"}},IC=t("td",{style:{"text-align":"center"}},"2049",-1),vC={style:{"text-align":"left"}},wC={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},HC=t("td",{style:{"text-align":"center"}},null,-1),EC={style:{"text-align":"left"}},zC=t("code",null,"树",-1),OC=t("code",null,"深度优先搜索",-1),jC=t("code",null,"数组",-1),LC=t("code",null,"1+",-1),qC={style:{"text-align":"left"}},CC=t("td",{style:{"text-align":"center"}},"2092",-1),NC={style:{"text-align":"left"}},PC={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},KC=t("td",{style:{"text-align":"center"}},null,-1),VC={style:{"text-align":"left"}},BC=t("code",null,"深度优先搜索",-1),TC=t("code",null,"广度优先搜索",-1),UC=t("code",null,"并查集",-1),AC=t("code",null,"2+",-1),WC={style:{"text-align":"left"}},DC=t("td",{style:{"text-align":"center"}},"2096",-1),YC={style:{"text-align":"left"}},JC={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},QC=t("td",{style:{"text-align":"center"}},null,-1),RC={style:{"text-align":"left"}},SC=t("code",null,"树",-1),ZC=t("code",null,"深度优先搜索",-1),FC=t("code",null,"字符串",-1),GC=t("code",null,"1+",-1),XC={style:{"text-align":"left"}},$C=t("td",{style:{"text-align":"center"}},"2097",-1),tN={style:{"text-align":"left"}},eN={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},lN=t("td",{style:{"text-align":"center"}},null,-1),oN={style:{"text-align":"left"}},sN=t("code",null,"深度优先搜索",-1),nN=t("code",null,"图",-1),dN=t("code",null,"欧拉回路",-1),_N={style:{"text-align":"left"}},cN=t("td",{style:{"text-align":"center"}},"2101",-1),rN={style:{"text-align":"left"}},aN={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},iN=t("td",{style:{"text-align":"center"}},null,-1),hN={style:{"text-align":"left"}},fN=t("code",null,"深度优先搜索",-1),uN=t("code",null,"广度优先搜索",-1),gN=t("code",null,"图",-1),mN=t("code",null,"3+",-1),yN={style:{"text-align":"left"}},xN=t("td",{style:{"text-align":"center"}},"2127",-1),pN={style:{"text-align":"left"}},bN={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},kN=t("td",{style:{"text-align":"center"}},null,-1),MN={style:{"text-align":"left"}},IN=t("code",null,"深度优先搜索",-1),vN=t("code",null,"图",-1),wN=t("code",null,"拓扑排序",-1),HN={style:{"text-align":"left"}},EN=t("td",{style:{"text-align":"center"}},"2192",-1),zN={style:{"text-align":"left"}},ON={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},jN=t("td",{style:{"text-align":"center"}},null,-1),LN={style:{"text-align":"left"}},qN=t("code",null,"深度优先搜索",-1),CN=t("code",null,"广度优先搜索",-1),NN=t("code",null,"图",-1),PN=t("code",null,"1+",-1),KN={style:{"text-align":"left"}},VN=t("td",{style:{"text-align":"center"}},"2204",-1),BN={style:{"text-align":"left"}},TN={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},UN=t("td",{style:{"text-align":"center"}},null,-1),AN={style:{"text-align":"left"}},WN=t("code",null,"深度优先搜索",-1),DN=t("code",null,"广度优先搜索",-1),YN=t("code",null,"并查集",-1),JN=t("code",null,"1+",-1),QN={style:{"text-align":"left"}},RN=t("td",{style:{"text-align":"center"}},"2246",-1),SN={style:{"text-align":"left"}},ZN={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},FN=t("td",{style:{"text-align":"center"}},null,-1),GN={style:{"text-align":"left"}},XN=t("code",null,"树",-1),$N=t("code",null,"深度优先搜索",-1),tP=t("code",null,"图",-1),eP=t("code",null,"3+",-1),lP={style:{"text-align":"left"}},oP=t("td",{style:{"text-align":"center"}},"2265",-1),sP={style:{"text-align":"left"}},nP={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},dP=t("td",{style:{"text-align":"center"}},null,-1),_P={style:{"text-align":"left"}},cP=t("code",null,"树",-1),rP=t("code",null,"深度优先搜索",-1),aP=t("code",null,"二叉树",-1),iP={style:{"text-align":"left"}},hP=t("td",{style:{"text-align":"center"}},"2277",-1),fP={style:{"text-align":"left"}},uP={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},gP=t("td",{style:{"text-align":"center"}},null,-1),mP={style:{"text-align":"left"}},yP=t("code",null,"树",-1),xP=t("code",null,"深度优先搜索",-1),pP=t("code",null,"广度优先搜索",-1),bP=t("code",null,"1+",-1),kP={style:{"text-align":"left"}},MP=t("td",{style:{"text-align":"center"}},"2307",-1),IP={style:{"text-align":"left"}},vP={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},wP=t("td",{style:{"text-align":"center"}},null,-1),HP={style:{"text-align":"left"}},EP=t("code",null,"深度优先搜索",-1),zP=t("code",null,"并查集",-1),OP=t("code",null,"图",-1),jP=t("code",null,"1+",-1),LP={style:{"text-align":"left"}},qP=t("td",{style:{"text-align":"center"}},"2313",-1),CP={style:{"text-align":"left"}},NP={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},PP=t("td",{style:{"text-align":"center"}},null,-1),KP={style:{"text-align":"left"}},VP=t("code",null,"树",-1),BP=t("code",null,"深度优先搜索",-1),TP=t("code",null,"动态规划",-1),UP=t("code",null,"1+",-1),AP={style:{"text-align":"left"}},WP=t("td",{style:{"text-align":"center"}},"2316",-1),DP={style:{"text-align":"left"}},YP={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},JP=t("td",{style:{"text-align":"center"}},null,-1),QP={style:{"text-align":"left"}},RP=t("code",null,"深度优先搜索",-1),SP=t("code",null,"广度优先搜索",-1),ZP=t("code",null,"并查集",-1),FP=t("code",null,"1+",-1),GP={style:{"text-align":"left"}},XP=t("td",{style:{"text-align":"center"}},"2322",-1),$P={style:{"text-align":"left"}},tK={href:"https://leetcode.com/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},eK=t("td",{style:{"text-align":"center"}},null,-1),lK={style:{"text-align":"left"}},oK=t("code",null,"位运算",-1),sK=t("code",null,"树",-1),nK=t("code",null,"深度优先搜索",-1),dK=t("code",null,"1+",-1),_K={style:{"text-align":"left"}},cK=t("td",{style:{"text-align":"center"}},"2328",-1),rK={style:{"text-align":"left"}},aK={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},iK=t("td",{style:{"text-align":"center"}},null,-1),hK={style:{"text-align":"left"}},fK=t("code",null,"深度优先搜索",-1),uK=t("code",null,"广度优先搜索",-1),gK=t("code",null,"图",-1),mK=t("code",null,"5+",-1),yK={style:{"text-align":"left"}},xK=t("td",{style:{"text-align":"center"}},"2331",-1),pK={style:{"text-align":"left"}},bK={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},kK=t("td",{style:{"text-align":"center"}},null,-1),MK={style:{"text-align":"left"}},IK=t("code",null,"树",-1),vK=t("code",null,"深度优先搜索",-1),wK=t("code",null,"二叉树",-1),HK={style:{"text-align":"left"}},EK=t("td",{style:{"text-align":"center"}},"2359",-1),zK={style:{"text-align":"left"}},OK={href:"https://leetcode.com/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},jK=t("td",{style:{"text-align":"center"}},null,-1),LK={style:{"text-align":"left"}},qK=t("code",null,"深度优先搜索",-1),CK=t("code",null,"图",-1),NK={style:{"text-align":"left"}},PK=t("td",{style:{"text-align":"center"}},"2360",-1),KK={style:{"text-align":"left"}},VK={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},BK=t("td",{style:{"text-align":"center"}},null,-1),TK={style:{"text-align":"left"}},UK=t("code",null,"深度优先搜索",-1),AK=t("code",null,"图",-1),WK=t("code",null,"拓扑排序",-1),DK={style:{"text-align":"left"}},YK=t("td",{style:{"text-align":"center"}},"2368",-1),JK={style:{"text-align":"left"}},QK={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},RK=t("td",{style:{"text-align":"center"}},null,-1),SK={style:{"text-align":"left"}},ZK=t("code",null,"树",-1),FK=t("code",null,"深度优先搜索",-1),GK=t("code",null,"广度优先搜索",-1),XK=t("code",null,"4+",-1),$K={style:{"text-align":"left"}},tV=t("td",{style:{"text-align":"center"}},"2378",-1),eV={style:{"text-align":"left"}},lV={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},oV=t("td",{style:{"text-align":"center"}},null,-1),sV={style:{"text-align":"left"}},nV=t("code",null,"树",-1),dV=t("code",null,"深度优先搜索",-1),_V=t("code",null,"动态规划",-1),cV={style:{"text-align":"left"}},rV=t("td",{style:{"text-align":"center"}},"2385",-1),aV={style:{"text-align":"left"}},iV={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},hV=t("td",{style:{"text-align":"center"}},null,-1),fV={style:{"text-align":"left"}},uV=t("code",null,"树",-1),gV=t("code",null,"深度优先搜索",-1),mV=t("code",null,"广度优先搜索",-1),yV=t("code",null,"2+",-1),xV={style:{"text-align":"left"}},pV=t("td",{style:{"text-align":"center"}},"2415",-1),bV={style:{"text-align":"left"}},kV={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},MV=t("td",{style:{"text-align":"center"}},null,-1),IV={style:{"text-align":"left"}},vV=t("code",null,"树",-1),wV=t("code",null,"深度优先搜索",-1),HV=t("code",null,"广度优先搜索",-1),EV=t("code",null,"1+",-1),zV={style:{"text-align":"left"}},OV=t("td",{style:{"text-align":"center"}},"2440",-1),jV={style:{"text-align":"left"}},LV={href:"https://leetcode.com/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},qV=t("td",{style:{"text-align":"center"}},null,-1),CV={style:{"text-align":"left"}},NV=t("code",null,"树",-1),PV=t("code",null,"深度优先搜索",-1),KV=t("code",null,"数组",-1),VV=t("code",null,"2+",-1),BV={style:{"text-align":"left"}},TV=t("td",{style:{"text-align":"center"}},"2445",-1),UV={style:{"text-align":"left"}},AV={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},WV=t("td",{style:{"text-align":"center"}},null,-1),DV={style:{"text-align":"left"}},YV=t("code",null,"树",-1),JV=t("code",null,"深度优先搜索",-1),QV=t("code",null,"广度优先搜索",-1),RV=t("code",null,"1+",-1),SV={style:{"text-align":"left"}},ZV=t("td",{style:{"text-align":"center"}},"2458",-1),FV={style:{"text-align":"left"}},GV={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},XV=t("td",{style:{"text-align":"center"}},null,-1),$V={style:{"text-align":"left"}},tB=t("code",null,"树",-1),eB=t("code",null,"深度优先搜索",-1),lB=t("code",null,"广度优先搜索",-1),oB=t("code",null,"2+",-1),sB={style:{"text-align":"left"}},nB=t("td",{style:{"text-align":"center"}},"2467",-1),dB={style:{"text-align":"left"}},_B={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},cB=t("td",{style:{"text-align":"center"}},null,-1),rB={style:{"text-align":"left"}},aB=t("code",null,"树",-1),iB=t("code",null,"深度优先搜索",-1),hB=t("code",null,"广度优先搜索",-1),fB=t("code",null,"2+",-1),uB={style:{"text-align":"left"}},gB=t("td",{style:{"text-align":"center"}},"2476",-1),mB={style:{"text-align":"left"}},yB={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},xB=t("td",{style:{"text-align":"center"}},null,-1),pB={style:{"text-align":"left"}},bB=t("code",null,"树",-1),kB=t("code",null,"深度优先搜索",-1),MB=t("code",null,"二叉搜索树",-1),IB=t("code",null,"3+",-1),vB={style:{"text-align":"left"}},wB=t("td",{style:{"text-align":"center"}},"2477",-1),HB={style:{"text-align":"left"}},EB={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},zB=t("td",{style:{"text-align":"center"}},null,-1),OB={style:{"text-align":"left"}},jB=t("code",null,"树",-1),LB=t("code",null,"深度优先搜索",-1),qB=t("code",null,"广度优先搜索",-1),CB=t("code",null,"1+",-1),NB={style:{"text-align":"left"}},PB=t("td",{style:{"text-align":"center"}},"2479",-1),KB={style:{"text-align":"left"}},VB={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},BB=t("td",{style:{"text-align":"center"}},null,-1),TB={style:{"text-align":"left"}},UB=t("code",null,"树",-1),AB=t("code",null,"深度优先搜索",-1),WB=t("code",null,"图",-1),DB=t("code",null,"1+",-1),YB={style:{"text-align":"left"}},JB=t("td",{style:{"text-align":"center"}},"2492",-1),QB={style:{"text-align":"left"}},RB={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},SB=t("td",{style:{"text-align":"center"}},null,-1),ZB={style:{"text-align":"left"}},FB=t("code",null,"深度优先搜索",-1),GB=t("code",null,"广度优先搜索",-1),XB=t("code",null,"并查集",-1),$B=t("code",null,"1+",-1),tT={style:{"text-align":"left"}},eT=t("td",{style:{"text-align":"center"}},"2538",-1),lT={style:{"text-align":"left"}},oT={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},sT=t("td",{style:{"text-align":"center"}},null,-1),nT={style:{"text-align":"left"}},dT=t("code",null,"树",-1),_T=t("code",null,"深度优先搜索",-1),cT=t("code",null,"数组",-1),rT=t("code",null,"1+",-1),aT={style:{"text-align":"left"}},iT=t("td",{style:{"text-align":"center"}},"2556",-1),hT={style:{"text-align":"left"}},fT={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},uT=t("td",{style:{"text-align":"center"}},null,-1),gT={style:{"text-align":"left"}},mT=t("code",null,"深度优先搜索",-1),yT=t("code",null,"广度优先搜索",-1),xT=t("code",null,"数组",-1),pT=t("code",null,"2+",-1),bT={style:{"text-align":"left"}},kT=t("td",{style:{"text-align":"center"}},"2581",-1),MT={style:{"text-align":"left"}},IT={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},vT=t("td",{style:{"text-align":"center"}},null,-1),wT={style:{"text-align":"left"}},HT=t("code",null,"树",-1),ET=t("code",null,"深度优先搜索",-1),zT=t("code",null,"数组",-1),OT=t("code",null,"2+",-1),jT={style:{"text-align":"left"}},LT=t("td",{style:{"text-align":"center"}},"2596",-1),qT={style:{"text-align":"left"}},CT={href:"https://leetcode.com/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},NT=t("td",{style:{"text-align":"center"}},null,-1),PT={style:{"text-align":"left"}},KT=t("code",null,"深度优先搜索",-1),VT=t("code",null,"广度优先搜索",-1),BT=t("code",null,"数组",-1),TT=t("code",null,"2+",-1),UT={style:{"text-align":"left"}},AT=t("td",{style:{"text-align":"center"}},"2641",-1),WT={style:{"text-align":"left"}},DT={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},YT=t("td",{style:{"text-align":"center"}},null,-1),JT={style:{"text-align":"left"}},QT=t("code",null,"树",-1),RT=t("code",null,"深度优先搜索",-1),ST=t("code",null,"广度优先搜索",-1),ZT=t("code",null,"2+",-1),FT={style:{"text-align":"left"}},GT=t("td",{style:{"text-align":"center"}},"2646",-1),XT={style:{"text-align":"left"}},$T={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},tU=t("td",{style:{"text-align":"center"}},null,-1),eU={style:{"text-align":"left"}},lU=t("code",null,"树",-1),oU=t("code",null,"深度优先搜索",-1),sU=t("code",null,"图",-1),nU=t("code",null,"2+",-1),dU={style:{"text-align":"left"}},_U=t("td",{style:{"text-align":"center"}},"2658",-1),cU={style:{"text-align":"left"}},rU={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},aU=t("td",{style:{"text-align":"center"}},null,-1),iU={style:{"text-align":"left"}},hU=t("code",null,"深度优先搜索",-1),fU=t("code",null,"广度优先搜索",-1),uU=t("code",null,"并查集",-1),gU=t("code",null,"2+",-1),mU={style:{"text-align":"left"}},yU=t("td",{style:{"text-align":"center"}},"2685",-1),xU={style:{"text-align":"left"}},pU={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},bU=t("td",{style:{"text-align":"center"}},null,-1),kU={style:{"text-align":"left"}},MU=t("code",null,"深度优先搜索",-1),IU=t("code",null,"广度优先搜索",-1),vU=t("code",null,"图",-1),wU={style:{"text-align":"left"}},HU=t("td",{style:{"text-align":"center"}},"2689",-1),EU={style:{"text-align":"left"}},zU={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},OU=t("td",{style:{"text-align":"center"}},null,-1),jU={style:{"text-align":"left"}},LU=t("code",null,"树",-1),qU=t("code",null,"深度优先搜索",-1),CU=t("code",null,"二叉树",-1),NU={style:{"text-align":"left"}},PU=t("td",{style:{"text-align":"center"}},"2764",-1),KU={style:{"text-align":"left"}},VU={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},BU=t("td",{style:{"text-align":"center"}},null,-1),TU={style:{"text-align":"left"}},UU=t("code",null,"栈",-1),AU=t("code",null,"树",-1),WU=t("code",null,"深度优先搜索",-1),DU=t("code",null,"1+",-1),YU={style:{"text-align":"left"}},JU=t("td",{style:{"text-align":"center"}},"2773",-1),QU={style:{"text-align":"left"}},RU={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},SU=t("td",{style:{"text-align":"center"}},null,-1),ZU={style:{"text-align":"left"}},FU=t("code",null,"树",-1),GU=t("code",null,"深度优先搜索",-1),XU=t("code",null,"广度优先搜索",-1),$U=t("code",null,"1+",-1),tA={style:{"text-align":"left"}},eA=t("td",{style:{"text-align":"center"}},"2791",-1),lA={style:{"text-align":"left"}},oA={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},sA=t("td",{style:{"text-align":"center"}},null,-1),nA={style:{"text-align":"left"}},dA=t("code",null,"位运算",-1),_A=t("code",null,"树",-1),cA=t("code",null,"深度优先搜索",-1),rA=t("code",null,"2+",-1),aA={style:{"text-align":"left"}},iA=t("td",{style:{"text-align":"center"}},"2792",-1),hA={style:{"text-align":"left"}},fA={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},uA=t("td",{style:{"text-align":"center"}},null,-1),gA={style:{"text-align":"left"}},mA=t("code",null,"树",-1),yA=t("code",null,"深度优先搜索",-1),xA=t("code",null,"分治",-1),pA=t("code",null,"1+",-1),bA={style:{"text-align":"left"}},kA=t("td",{style:{"text-align":"center"}},"2852",-1),MA={style:{"text-align":"left"}},IA={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},vA=t("td",{style:{"text-align":"center"}},null,-1),wA={style:{"text-align":"left"}},HA=t("code",null,"深度优先搜索",-1),EA=t("code",null,"广度优先搜索",-1),zA=t("code",null,"并查集",-1),OA=t("code",null,"3+",-1),jA={style:{"text-align":"left"}},LA=t("td",{style:{"text-align":"center"}},"2858",-1),qA={style:{"text-align":"left"}},CA={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},NA=t("td",{style:{"text-align":"center"}},null,-1),PA={style:{"text-align":"left"}},KA=t("code",null,"深度优先搜索",-1),VA=t("code",null,"广度优先搜索",-1),BA=t("code",null,"图",-1),TA=t("code",null,"1+",-1),UA={style:{"text-align":"left"}},AA=t("td",{style:{"text-align":"center"}},"2867",-1),WA={style:{"text-align":"left"}},DA={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},YA=t("td",{style:{"text-align":"center"}},null,-1),JA={style:{"text-align":"left"}},QA=t("code",null,"树",-1),RA=t("code",null,"深度优先搜索",-1),SA=t("code",null,"数学",-1),ZA=t("code",null,"2+",-1),FA={style:{"text-align":"left"}},GA=t("td",{style:{"text-align":"center"}},"2872",-1),XA={style:{"text-align":"left"}},$A={href:"https://leetcode.com/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},tW=t("td",{style:{"text-align":"center"}},null,-1),eW={style:{"text-align":"left"}},lW=t("code",null,"树",-1),oW=t("code",null,"深度优先搜索",-1),sW={style:{"text-align":"left"}},nW=t("td",{style:{"text-align":"center"}},"2920",-1),dW={style:{"text-align":"left"}},_W={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},cW=t("td",{style:{"text-align":"center"}},null,-1),rW={style:{"text-align":"left"}},aW=t("code",null,"位运算",-1),iW=t("code",null,"树",-1),hW=t("code",null,"深度优先搜索",-1),fW=t("code",null,"2+",-1),uW={style:{"text-align":"left"}},gW=t("td",{style:{"text-align":"center"}},"2925",-1),mW={style:{"text-align":"left"}},yW={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},xW=t("td",{style:{"text-align":"center"}},null,-1),pW={style:{"text-align":"left"}},bW=t("code",null,"树",-1),kW=t("code",null,"深度优先搜索",-1),MW=t("code",null,"动态规划",-1),IW={style:{"text-align":"left"}},vW=t("td",{style:{"text-align":"center"}},"2973",-1),wW={style:{"text-align":"left"}},HW={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},EW=t("td",{style:{"text-align":"center"}},null,-1),zW={style:{"text-align":"left"}},OW=t("code",null,"树",-1),jW=t("code",null,"深度优先搜索",-1),LW=t("code",null,"动态规划",-1),qW=t("code",null,"2+",-1),CW={style:{"text-align":"left"}},NW=t("td",{style:{"text-align":"center"}},"3004",-1),PW={style:{"text-align":"left"}},KW={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},VW=t("td",{style:{"text-align":"center"}},null,-1),BW={style:{"text-align":"left"}},TW=t("code",null,"树",-1),UW=t("code",null,"深度优先搜索",-1),AW=t("code",null,"数组",-1),WW=t("code",null,"1+",-1),DW={style:{"text-align":"left"}},YW=t("td",{style:{"text-align":"center"}},"3067",-1),JW={style:{"text-align":"left"}},QW={href:"https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},RW=t("td",{style:{"text-align":"center"}},null,-1),SW={style:{"text-align":"left"}},ZW=t("code",null,"树",-1),FW=t("code",null,"深度优先搜索",-1),GW=t("code",null,"数组",-1),XW={style:{"text-align":"left"}},$W=t("td",{style:{"text-align":"center"}},"3123",-1),tD={style:{"text-align":"left"}},eD={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},lD=t("td",{style:{"text-align":"center"}},null,-1),oD={style:{"text-align":"left"}},sD=t("code",null,"深度优先搜索",-1),nD=t("code",null,"广度优先搜索",-1),dD=t("code",null,"图",-1),_D=t("code",null,"2+",-1),cD={style:{"text-align":"left"}},rD=t("td",{style:{"text-align":"center"}},"3157",-1),aD={style:{"text-align":"left"}},iD={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},hD=t("td",{style:{"text-align":"center"}},null,-1),fD={style:{"text-align":"left"}},uD=t("code",null,"树",-1),gD=t("code",null,"深度优先搜索",-1),mD=t("code",null,"广度优先搜索",-1),yD=t("code",null,"1+",-1),xD={style:{"text-align":"left"}},pD=t("td",{style:{"text-align":"center"}},"3203",-1),bD={style:{"text-align":"left"}},kD={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},MD=t("td",{style:{"text-align":"center"}},null,-1),ID={style:{"text-align":"left"}},vD=t("code",null,"树",-1),wD=t("code",null,"深度优先搜索",-1),HD=t("code",null,"广度优先搜索",-1),ED=t("code",null,"1+",-1),zD={style:{"text-align":"left"}},OD=t("td",{style:{"text-align":"center"}},"3235",-1),jD={style:{"text-align":"left"}},LD={href:"https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},qD=t("td",{style:{"text-align":"center"}},null,-1),CD={style:{"text-align":"left"}},ND=t("code",null,"深度优先搜索",-1),PD=t("code",null,"广度优先搜索",-1),KD=t("code",null,"并查集",-1),VD=t("code",null,"3+",-1),BD={style:{"text-align":"left"}},TD=t("td",{style:{"text-align":"center"}},"3241",-1),UD={style:{"text-align":"left"}},AD={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},WD=t("td",{style:{"text-align":"center"}},null,-1),DD={style:{"text-align":"left"}},YD=t("code",null,"树",-1),JD=t("code",null,"深度优先搜索",-1),QD=t("code",null,"图",-1),RD=t("code",null,"1+",-1),SD={style:{"text-align":"left"}},ZD=t("td",{style:{"text-align":"center"}},"3249",-1),FD={style:{"text-align":"left"}},GD={href:"https://leetcode.com/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},XD=t("td",{style:{"text-align":"center"}},null,-1),$D={style:{"text-align":"left"}},tY=t("code",null,"树",-1),eY=t("code",null,"深度优先搜索",-1),lY={style:{"text-align":"left"}},oY=t("td",{style:{"text-align":"center"}},"3310",-1),sY={style:{"text-align":"left"}},nY={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},dY=t("td",{style:{"text-align":"center"}},null,-1),_Y={style:{"text-align":"left"}},cY=t("code",null,"深度优先搜索",-1),rY=t("code",null,"广度优先搜索",-1),aY=t("code",null,"图",-1),iY={style:{"text-align":"left"}},hY=t("td",{style:{"text-align":"center"}},"3313",-1),fY={style:{"text-align":"left"}},uY={href:"https://leetcode.com/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},gY=t("td",{style:{"text-align":"center"}},null,-1),mY={style:{"text-align":"left"}},yY=t("code",null,"树",-1),xY=t("code",null,"深度优先搜索",-1),pY={style:{"text-align":"left"}},bY=t("td",{style:{"text-align":"center"}},"3319",-1),kY={style:{"text-align":"left"}},MY={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},IY={style:{"text-align":"center"}},vY={style:{"text-align":"left"}},wY=t("code",null,"树",-1),HY=t("code",null,"深度优先搜索",-1),EY=t("code",null,"二叉树",-1),zY=t("code",null,"1+",-1),OY={style:{"text-align":"left"}},jY=t("td",{style:{"text-align":"center"}},"LCP 07",-1),LY={style:{"text-align":"left"}},qY={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},CY=t("td",{style:{"text-align":"center"}},null,-1),NY={style:{"text-align":"left"}},PY=t("code",null,"深度优先搜索",-1),KY=t("code",null,"广度优先搜索",-1),VY=t("code",null,"图",-1),BY=t("code",null,"1+",-1),TY={style:{"text-align":"left"}},UY=t("td",{style:{"text-align":"center"}},"LCP 10",-1),AY={style:{"text-align":"left"}},WY={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},DY=t("td",{style:{"text-align":"center"}},null,-1),YY={style:{"text-align":"left"}},JY=t("code",null,"树",-1),QY=t("code",null,"深度优先搜索",-1),RY=t("code",null,"动态规划",-1),SY=t("code",null,"1+",-1),ZY={style:{"text-align":"left"}},FY=t("td",{style:{"text-align":"center"}},"LCP 21",-1),GY={style:{"text-align":"left"}},XY={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},$Y=t("td",{style:{"text-align":"center"}},null,-1),tJ={style:{"text-align":"left"}},eJ=t("code",null,"深度优先搜索",-1),lJ=t("code",null,"广度优先搜索",-1),oJ=t("code",null,"图",-1),sJ=t("code",null,"1+",-1),nJ={style:{"text-align":"left"}},dJ=t("td",{style:{"text-align":"center"}},"LCP 31",-1),_J={style:{"text-align":"left"}},cJ={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},rJ=t("td",{style:{"text-align":"center"}},null,-1),aJ={style:{"text-align":"left"}},iJ=t("code",null,"深度优先搜索",-1),hJ=t("code",null,"广度优先搜索",-1),fJ=t("code",null,"数组",-1),uJ=t("code",null,"2+",-1),gJ={style:{"text-align":"left"}},mJ=t("td",{style:{"text-align":"center"}},"LCP 44",-1),yJ={style:{"text-align":"left"}},xJ={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},pJ=t("td",{style:{"text-align":"center"}},null,-1),bJ={style:{"text-align":"left"}},kJ=t("code",null,"树",-1),MJ=t("code",null,"深度优先搜索",-1),IJ=t("code",null,"广度优先搜索",-1),vJ=t("code",null,"2+",-1),wJ={style:{"text-align":"left"}},HJ=t("td",{style:{"text-align":"center"}},"LCP 45",-1),EJ={style:{"text-align":"left"}},zJ={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},OJ=t("td",{style:{"text-align":"center"}},null,-1),jJ={style:{"text-align":"left"}},LJ=t("code",null,"深度优先搜索",-1),qJ=t("code",null,"广度优先搜索",-1),CJ=t("code",null,"记忆化搜索",-1),NJ=t("code",null,"3+",-1),PJ={style:{"text-align":"left"}},KJ=t("td",{style:{"text-align":"center"}},"LCP 63",-1),VJ={style:{"text-align":"left"}},BJ={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},TJ=t("td",{style:{"text-align":"center"}},null,-1),UJ={style:{"text-align":"left"}},AJ=t("code",null,"深度优先搜索",-1),WJ=t("code",null,"广度优先搜索",-1),DJ=t("code",null,"图",-1),YJ=t("code",null,"5+",-1),JJ={style:{"text-align":"left"}},QJ=t("td",{style:{"text-align":"center"}},"LCP 64",-1),RJ={style:{"text-align":"left"}},SJ={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},ZJ=t("td",{style:{"text-align":"center"}},null,-1),FJ={style:{"text-align":"left"}},GJ=t("code",null,"树",-1),XJ=t("code",null,"深度优先搜索",-1),$J=t("code",null,"动态规划",-1),tQ=t("code",null,"1+",-1),eQ={style:{"text-align":"left"}},lQ=t("td",{style:{"text-align":"center"}},"LCP 67",-1),oQ={style:{"text-align":"left"}},sQ={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},nQ=t("td",{style:{"text-align":"center"}},null,-1),dQ={style:{"text-align":"left"}},_Q=t("code",null,"树",-1),cQ=t("code",null,"深度优先搜索",-1),rQ=t("code",null,"广度优先搜索",-1),aQ=t("code",null,"1+",-1),iQ={style:{"text-align":"left"}},hQ=t("td",{style:{"text-align":"center"}},"LCS 03",-1),fQ={style:{"text-align":"left"}},uQ={href:"https://leetcode.cn/problems/YesdPw",target:"_blank",rel:"noopener noreferrer"},gQ=t("td",{style:{"text-align":"center"}},null,-1),mQ={style:{"text-align":"left"}},yQ=t("code",null,"深度优先搜索",-1),xQ=t("code",null,"广度优先搜索",-1),pQ=t("code",null,"并查集",-1),bQ=t("code",null,"2+",-1),kQ={style:{"text-align":"left"}},MQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),IQ={style:{"text-align":"left"}},vQ={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},wQ={style:{"text-align":"center"}},HQ={style:{"text-align":"left"}},EQ=t("code",null,"深度优先搜索",-1),zQ=t("code",null,"广度优先搜索",-1),OQ=t("code",null,"动态规划",-1),jQ={style:{"text-align":"left"}},LQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),qQ={style:{"text-align":"left"}},CQ={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},NQ={style:{"text-align":"center"}},PQ={style:{"text-align":"left"}},KQ=t("code",null,"树",-1),VQ=t("code",null,"深度优先搜索",-1),BQ=t("code",null,"二叉树",-1),TQ={style:{"text-align":"left"}},UQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),AQ={style:{"text-align":"left"}},WQ={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},DQ={style:{"text-align":"center"}},YQ={style:{"text-align":"left"}},JQ=t("code",null,"树",-1),QQ=t("code",null,"深度优先搜索",-1),RQ=t("code",null,"广度优先搜索",-1),SQ=t("code",null,"1+",-1),ZQ={style:{"text-align":"left"}},FQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),GQ={style:{"text-align":"left"}},XQ={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},$Q={style:{"text-align":"center"}},tR={style:{"text-align":"left"}},eR=t("code",null,"树",-1),lR=t("code",null,"深度优先搜索",-1),oR=t("code",null,"广度优先搜索",-1),sR=t("code",null,"1+",-1),nR={style:{"text-align":"left"}},dR=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),_R={style:{"text-align":"left"}},cR={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},rR={style:{"text-align":"center"}},aR={style:{"text-align":"left"}},iR=t("code",null,"树",-1),hR=t("code",null,"深度优先搜索",-1),fR=t("code",null,"回溯",-1),uR=t("code",null,"1+",-1),gR={style:{"text-align":"left"}},mR=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),yR={style:{"text-align":"left"}},xR={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},pR={style:{"text-align":"center"}},bR={style:{"text-align":"left"}},kR=t("code",null,"栈",-1),MR=t("code",null,"树",-1),IR=t("code",null,"深度优先搜索",-1),vR=t("code",null,"4+",-1),wR={style:{"text-align":"left"}},HR=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),ER={style:{"text-align":"left"}},zR={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},OR={style:{"text-align":"center"}},jR={style:{"text-align":"left"}},LR=t("code",null,"树",-1),qR=t("code",null,"深度优先搜索",-1),CR=t("code",null,"广度优先搜索",-1),NR=t("code",null,"3+",-1),PR={style:{"text-align":"left"}},KR=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),VR={style:{"text-align":"left"}},BR={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},TR={style:{"text-align":"center"}},UR={style:{"text-align":"left"}},AR=t("code",null,"树",-1),WR=t("code",null,"深度优先搜索",-1),DR=t("code",null,"二叉搜索树",-1),YR=t("code",null,"1+",-1),JR={style:{"text-align":"left"}},QR=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),RR={style:{"text-align":"left"}},SR={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},ZR={style:{"text-align":"center"}},FR={style:{"text-align":"left"}},GR=t("code",null,"树",-1),XR=t("code",null,"深度优先搜索",-1),$R=t("code",null,"广度优先搜索",-1),tS=t("code",null,"1+",-1),eS={style:{"text-align":"left"}},lS=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),oS={style:{"text-align":"left"}},sS={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},nS=t("td",{style:{"text-align":"center"}},null,-1),dS={style:{"text-align":"left"}},_S=t("code",null,"树",-1),cS=t("code",null,"深度优先搜索",-1),rS=t("code",null,"二叉树",-1),aS={style:{"text-align":"left"}},iS=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),hS={style:{"text-align":"left"}},fS={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},uS=t("td",{style:{"text-align":"center"}},null,-1),gS={style:{"text-align":"left"}},mS=t("code",null,"树",-1),yS=t("code",null,"深度优先搜索",-1),xS=t("code",null,"二叉搜索树",-1),pS=t("code",null,"1+",-1),bS={style:{"text-align":"left"}},kS=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),MS={style:{"text-align":"left"}},IS={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},vS=t("td",{style:{"text-align":"center"}},null,-1),wS={style:{"text-align":"left"}},HS=t("code",null,"树",-1),ES=t("code",null,"深度优先搜索",-1),zS=t("code",null,"二叉树",-1),OS={style:{"text-align":"left"}},jS=t("td",{style:{"text-align":"center"}},"剑指 Offer II 105",-1),LS={style:{"text-align":"left"}},qS={href:"https://leetcode.cn/problems/ZL6zAn",target:"_blank",rel:"noopener noreferrer"},CS=t("td",{style:{"text-align":"center"}},null,-1),NS={style:{"text-align":"left"}},PS=t("code",null,"深度优先搜索",-1),KS=t("code",null,"广度优先搜索",-1),VS=t("code",null,"并查集",-1),BS=t("code",null,"2+",-1),TS={style:{"text-align":"left"}},US=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),AS={style:{"text-align":"left"}},WS={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},DS=t("td",{style:{"text-align":"center"}},null,-1),YS={style:{"text-align":"left"}},JS=t("code",null,"深度优先搜索",-1),QS=t("code",null,"广度优先搜索",-1),RS=t("code",null,"并查集",-1),SS=t("code",null,"1+",-1),ZS={style:{"text-align":"left"}},FS=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),GS={style:{"text-align":"left"}},XS={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},$S=t("td",{style:{"text-align":"center"}},null,-1),tZ={style:{"text-align":"left"}},eZ=t("code",null,"深度优先搜索",-1),lZ=t("code",null,"广度优先搜索",-1),oZ=t("code",null,"图",-1),sZ=t("code",null,"1+",-1),nZ={style:{"text-align":"left"}},dZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),_Z={style:{"text-align":"left"}},cZ={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},rZ=t("td",{style:{"text-align":"center"}},null,-1),aZ={style:{"text-align":"left"}},iZ=t("code",null,"深度优先搜索",-1),hZ=t("code",null,"广度优先搜索",-1),fZ=t("code",null,"并查集",-1),uZ=t("code",null,"3+",-1),gZ={style:{"text-align":"left"}},mZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),yZ={style:{"text-align":"left"}},xZ={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},pZ=t("td",{style:{"text-align":"center"}},null,-1),bZ={style:{"text-align":"left"}},kZ=t("code",null,"深度优先搜索",-1),MZ=t("code",null,"广度优先搜索",-1),IZ=t("code",null,"图",-1),vZ=t("code",null,"5+",-1),wZ={style:{"text-align":"left"}},HZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),EZ={style:{"text-align":"left"}},zZ={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},OZ=t("td",{style:{"text-align":"center"}},null,-1),jZ={style:{"text-align":"left"}},LZ=t("code",null,"深度优先搜索",-1),qZ=t("code",null,"广度优先搜索",-1),CZ=t("code",null,"图",-1),NZ=t("code",null,"1+",-1),PZ={style:{"text-align":"left"}},KZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),VZ={style:{"text-align":"left"}},BZ={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},TZ=t("td",{style:{"text-align":"center"}},null,-1),UZ={style:{"text-align":"left"}},AZ=t("code",null,"深度优先搜索",-1),WZ=t("code",null,"广度优先搜索",-1),DZ=t("code",null,"图",-1),YZ=t("code",null,"3+",-1),JZ={style:{"text-align":"left"}},QZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),RZ={style:{"text-align":"left"}},SZ={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},ZZ=t("td",{style:{"text-align":"center"}},null,-1),FZ={style:{"text-align":"left"}},GZ=t("code",null,"深度优先搜索",-1),XZ=t("code",null,"广度优先搜索",-1),$Z=t("code",null,"并查集",-1),tF=t("code",null,"1+",-1),eF={style:{"text-align":"left"}},lF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 117",-1),oF={style:{"text-align":"left"}},sF={href:"https://leetcode.cn/problems/H6lPxb",target:"_blank",rel:"noopener noreferrer"},nF=t("td",{style:{"text-align":"center"}},null,-1),dF={style:{"text-align":"left"}},_F=t("code",null,"深度优先搜索",-1),cF=t("code",null,"广度优先搜索",-1),rF=t("code",null,"并查集",-1),aF=t("code",null,"3+",-1),iF={style:{"text-align":"left"}},hF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),fF={style:{"text-align":"left"}},uF={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},gF=t("td",{style:{"text-align":"center"}},null,-1),mF={style:{"text-align":"left"}},yF=t("code",null,"深度优先搜索",-1),xF=t("code",null,"广度优先搜索",-1),pF=t("code",null,"并查集",-1),bF=t("code",null,"1+",-1),kF={style:{"text-align":"left"}},MF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 28",-1),IF={style:{"text-align":"left"}},vF={href:"https://leetcode.cn/problems/Qv1Da2",target:"_blank",rel:"noopener noreferrer"},wF=t("td",{style:{"text-align":"center"}},null,-1),HF={style:{"text-align":"left"}},EF=t("code",null,"深度优先搜索",-1),zF=t("code",null,"链表",-1),OF=t("code",null,"双向链表",-1),jF={style:{"text-align":"left"}},LF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),qF={style:{"text-align":"left"}},CF={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},NF=t("td",{style:{"text-align":"center"}},null,-1),PF={style:{"text-align":"left"}},KF=t("code",null,"树",-1),VF=t("code",null,"深度优先搜索",-1),BF=t("code",null,"广度优先搜索",-1),TF=t("code",null,"1+",-1),UF={style:{"text-align":"left"}},AF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),WF={style:{"text-align":"left"}},DF={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},YF=t("td",{style:{"text-align":"center"}},null,-1),JF={style:{"text-align":"left"}},QF=t("code",null,"树",-1),RF=t("code",null,"深度优先搜索",-1),SF=t("code",null,"广度优先搜索",-1),ZF=t("code",null,"1+",-1),FF={style:{"text-align":"left"}},GF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),XF={style:{"text-align":"left"}},$F={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},tG=t("td",{style:{"text-align":"center"}},null,-1),eG={style:{"text-align":"left"}},lG=t("code",null,"树",-1),oG=t("code",null,"深度优先搜索",-1),sG=t("code",null,"广度优先搜索",-1),nG=t("code",null,"1+",-1),dG={style:{"text-align":"left"}},_G=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),cG={style:{"text-align":"left"}},rG={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},aG=t("td",{style:{"text-align":"center"}},null,-1),iG={style:{"text-align":"left"}},hG=t("code",null,"树",-1),fG=t("code",null,"深度优先搜索",-1),uG=t("code",null,"二叉树",-1),gG={style:{"text-align":"left"}},mG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),yG={style:{"text-align":"left"}},xG={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},pG=t("td",{style:{"text-align":"center"}},null,-1),bG={style:{"text-align":"left"}},kG=t("code",null,"树",-1),MG=t("code",null,"深度优先搜索",-1),IG=t("code",null,"广度优先搜索",-1),vG=t("code",null,"3+",-1),wG={style:{"text-align":"left"}},HG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),EG={style:{"text-align":"left"}},zG={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},OG=t("td",{style:{"text-align":"center"}},null,-1),jG={style:{"text-align":"left"}},LG=t("code",null,"树",-1),qG=t("code",null,"深度优先搜索",-1),CG=t("code",null,"二叉树",-1),NG={style:{"text-align":"left"}},PG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),KG={style:{"text-align":"left"}},VG={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},BG=t("td",{style:{"text-align":"center"}},null,-1),TG={style:{"text-align":"left"}},UG=t("code",null,"树",-1),AG=t("code",null,"深度优先搜索",-1),WG=t("code",null,"二叉树",-1),DG={style:{"text-align":"left"}},YG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),JG={style:{"text-align":"left"}},QG={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},RG=t("td",{style:{"text-align":"center"}},null,-1),SG={style:{"text-align":"left"}},ZG=t("code",null,"树",-1),FG=t("code",null,"深度优先搜索",-1),GG=t("code",null,"动态规划",-1),XG=t("code",null,"1+",-1),$G={style:{"text-align":"left"}},tX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),eX={style:{"text-align":"left"}},lX={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},oX=t("td",{style:{"text-align":"center"}},null,-1),sX={style:{"text-align":"left"}},nX=t("code",null,"栈",-1),dX=t("code",null,"树",-1),_X=t("code",null,"深度优先搜索",-1),cX=t("code",null,"2+",-1),rX={style:{"text-align":"left"}},aX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),iX={style:{"text-align":"left"}},hX={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},fX=t("td",{style:{"text-align":"center"}},null,-1),uX={style:{"text-align":"left"}},gX=t("code",null,"树",-1),mX=t("code",null,"深度优先搜索",-1),yX=t("code",null,"二叉搜索树",-1),xX=t("code",null,"1+",-1),pX={style:{"text-align":"left"}},bX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),kX={style:{"text-align":"left"}},MX={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},IX=t("td",{style:{"text-align":"center"}},null,-1),vX={style:{"text-align":"left"}},wX=t("code",null,"树",-1),HX=t("code",null,"深度优先搜索",-1),EX=t("code",null,"二叉搜索树",-1),zX=t("code",null,"1+",-1),OX={style:{"text-align":"left"}},jX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 64",-1),LX={style:{"text-align":"left"}},qX={href:"https://leetcode.cn/problems/US1pGT",target:"_blank",rel:"noopener noreferrer"},CX=t("td",{style:{"text-align":"center"}},null,-1),NX={style:{"text-align":"left"}},PX=t("code",null,"深度优先搜索",-1),KX=t("code",null,"设计",-1),VX=t("code",null,"字典树",-1),BX=t("code",null,"2+",-1),TX={style:{"text-align":"left"}},UX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),AX={style:{"text-align":"left"}},WX={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},DX=t("td",{style:{"text-align":"center"}},null,-1),YX={style:{"text-align":"left"}},JX=t("code",null,"深度优先搜索",-1),QX=t("code",null,"广度优先搜索",-1),RX=t("code",null,"图",-1),SX=t("code",null,"1+",-1),ZX={style:{"text-align":"left"}},FX=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),GX={style:{"text-align":"left"}},XX={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},$X=t("td",{style:{"text-align":"center"}},null,-1),t$={style:{"text-align":"left"}},e$=t("code",null,"深度优先搜索",-1),l$=t("code",null,"广度优先搜索",-1),o$=t("code",null,"图",-1),s$={style:{"text-align":"left"}},n$=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),d$={style:{"text-align":"left"}},_$={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},c$=t("td",{style:{"text-align":"center"}},null,-1),r$={style:{"text-align":"left"}},a$=t("code",null,"树",-1),i$=t("code",null,"深度优先搜索",-1),h$=t("code",null,"二叉树",-1),f$={style:{"text-align":"left"}},u$=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),g$={style:{"text-align":"left"}},m$={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},y$=t("td",{style:{"text-align":"center"}},null,-1),x$={style:{"text-align":"left"}},p$=t("code",null,"树",-1),b$=t("code",null,"深度优先搜索",-1),k$=t("code",null,"二叉搜索树",-1),M$=t("code",null,"1+",-1),I$={style:{"text-align":"left"}},v$=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),w$={style:{"text-align":"left"}},H$={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},E$=t("td",{style:{"text-align":"center"}},null,-1),z$={style:{"text-align":"left"}},O$=t("code",null,"树",-1),j$=t("code",null,"深度优先搜索",-1),L$=t("code",null,"二叉搜索树",-1),q$=t("code",null,"1+",-1),C$={style:{"text-align":"left"}},N$=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),P$={style:{"text-align":"left"}},K$={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},V$=t("td",{style:{"text-align":"center"}},null,-1),B$={style:{"text-align":"left"}},T$=t("code",null,"树",-1),U$=t("code",null,"深度优先搜索",-1),A$=t("code",null,"二叉树",-1),W$={style:{"text-align":"left"}},D$=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Y$={style:{"text-align":"left"}},J$={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Q$=t("td",{style:{"text-align":"center"}},null,-1),R$={style:{"text-align":"left"}},S$=t("code",null,"树",-1),Z$=t("code",null,"深度优先搜索",-1),F$=t("code",null,"二叉树",-1),G$=t("code",null,"2+",-1),X$={style:{"text-align":"left"}},$$=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),ttt={style:{"text-align":"left"}},ett={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},ltt=t("td",{style:{"text-align":"center"}},null,-1),ott={style:{"text-align":"left"}},stt=t("code",null,"树",-1),ntt=t("code",null,"深度优先搜索",-1),dtt=t("code",null,"二叉树",-1),_tt={style:{"text-align":"left"}},ctt=t("td",{style:{"text-align":"center"}},"面试题 08.10",-1),rtt={style:{"text-align":"left"}},att={href:"https://leetcode.cn/problems/color-fill-lcci",target:"_blank",rel:"noopener noreferrer"},itt=t("td",{style:{"text-align":"center"}},null,-1),htt={style:{"text-align":"left"}},ftt=t("code",null,"深度优先搜索",-1),utt=t("code",null,"广度优先搜索",-1),gtt=t("code",null,"数组",-1),mtt=t("code",null,"1+",-1),ytt={style:{"text-align":"left"}},xtt=t("td",{style:{"text-align":"center"}},"面试题 16.19",-1),ptt={style:{"text-align":"left"}},btt={href:"https://leetcode.cn/problems/pond-sizes-lcci",target:"_blank",rel:"noopener noreferrer"},ktt=t("td",{style:{"text-align":"center"}},null,-1),Mtt={style:{"text-align":"left"}},Itt=t("code",null,"深度优先搜索",-1),vtt=t("code",null,"广度优先搜索",-1),wtt=t("code",null,"并查集",-1),Htt=t("code",null,"2+",-1),Ett={style:{"text-align":"left"}},ztt=t("td",{style:{"text-align":"center"}},"面试题 17.07",-1),Ott={style:{"text-align":"left"}},jtt={href:"https://leetcode.cn/problems/baby-names-lcci",target:"_blank",rel:"noopener noreferrer"},Ltt=t("td",{style:{"text-align":"center"}},null,-1),qtt={style:{"text-align":"left"}},Ctt=t("code",null,"深度优先搜索",-1),Ntt=t("code",null,"广度优先搜索",-1),Ptt=t("code",null,"并查集",-1),Ktt=t("code",null,"4+",-1),Vtt={style:{"text-align":"left"}},Btt=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),Ttt={style:{"text-align":"left"}},Utt={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},Att=t("td",{style:{"text-align":"center"}},null,-1),Wtt={style:{"text-align":"left"}},Dtt=t("code",null,"栈",-1),Ytt=t("code",null,"树",-1),Jtt=t("code",null,"深度优先搜索",-1),Qtt=t("code",null,"3+",-1),Rtt={style:{"text-align":"left"}};function Stt(Ztt,Ftt){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return r(),a("div",null,[f,t("details",null,[u,g,t("p",null,[e(s,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(s,{to:"/tag/stack.html"},{default:o(()=>[b]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[H]),_:1}),l(),e(s,{to:"/tag/string-matching.html"},{default:o(()=>[E]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[O]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[q]),_:1}),l(),e(s,{to:"/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[T]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[U]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[W]),_:1}),l(),e(s,{to:"/tag/suffix-array.html"},{default:o(()=>[D]),_:1})]),Y,t("p",null,[e(s,{to:"/tag/enumeration.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[Q]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[G]),_:1}),l(),e(s,{to:"/tag/bucket-sort.html"},{default:o(()=>[X]),_:1}),l(),e(s,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),nt,l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/tag/counting.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/tag/sliding-window.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/tag/rolling-hash.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(s,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(s,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/tag/game-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/tag/rejection-sampling.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/tag/database.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/tag/data-stream.html"},{default:o(()=>[Ot]),_:1}),l(),e(s,{to:"/tag/brainteaser.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/tag/interactive.html"},{default:o(()=>[Lt]),_:1}),l(),e(s,{to:"/tag/iterator.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),Nt,i(" prettier-ignore "),t("table",null,[Pt,t("tbody",null,[t("tr",null,[Kt,t("td",Vt,[t("a",Bt,[l("二叉树的中序遍历"),e(n)])]),t("td",Tt,[e(s,{to:"/problem/0094.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ut,[e(s,{to:"/tag/stack.html"},{default:o(()=>[At]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Wt]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Dt]),_:1}),l(),Yt]),t("td",Jt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qt,t("td",Rt,[t("a",St,[l("验证二叉搜索树"),e(n)])]),t("td",Zt,[e(s,{to:"/problem/0098.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ft,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Gt]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Xt]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",se,[l("恢复二叉搜索树"),e(n)])]),t("td",ne,[e(s,{to:"/problem/0099.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",de,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_e]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ce]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[re]),_:1}),l(),ae]),t("td",ie,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[he,t("td",fe,[t("a",ue,[l("相同的树"),e(n)])]),t("td",ge,[e(s,{to:"/problem/0100.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",me,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ye]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xe]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[pe]),_:1}),l(),be]),t("td",ke,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Me,t("td",Ie,[t("a",ve,[l("对称二叉树"),e(n)])]),t("td",we,[e(s,{to:"/problem/0101.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",He,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ee]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ze]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Oe]),_:1}),l(),je]),t("td",Le,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qe,t("td",Ce,[t("a",Ne,[l("二叉树的最大深度"),e(n)])]),t("td",Pe,[e(s,{to:"/problem/0104.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ke,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ve]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Be]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Te]),_:1}),l(),Ue]),t("td",Ae,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[We,t("td",De,[t("a",Ye,[l("平衡二叉树"),e(n)])]),t("td",Je,[e(s,{to:"/problem/0110.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qe,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Re]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Se]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Ze]),_:1})]),t("td",Fe,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ge,t("td",Xe,[t("a",$e,[l("二叉树的最小深度"),e(n)])]),t("td",tl,[e(s,{to:"/problem/0111.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",el,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ll]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ol]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[sl]),_:1}),l(),nl]),t("td",dl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[_l,t("td",cl,[t("a",rl,[l("路径总和"),e(n)])]),t("td",al,[e(s,{to:"/problem/0112.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",il,[e(s,{to:"/tag/tree.html"},{default:o(()=>[hl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ul]),_:1}),l(),gl]),t("td",ml,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yl,t("td",xl,[t("a",pl,[l("路径总和 II"),e(n)])]),t("td",bl,[e(s,{to:"/problem/0113.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",kl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ml]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Il]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[vl]),_:1}),l(),wl]),t("td",Hl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[El,t("td",zl,[t("a",Ol,[l("二叉树展开为链表"),e(n)])]),t("td",jl,[e(s,{to:"/problem/0114.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ll,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ql]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Cl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Nl]),_:1}),l(),Pl]),t("td",Kl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vl,t("td",Bl,[t("a",Tl,[l("填充每个节点的下一个右侧节点指针"),e(n)])]),t("td",Ul,[e(s,{to:"/problem/0116.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Al,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Wl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Dl]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Yl]),_:1}),l(),Jl]),t("td",Ql,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rl,t("td",Sl,[t("a",Zl,[l("填充每个节点的下一个右侧节点指针 II"),e(n)])]),t("td",Fl,[e(s,{to:"/problem/0117.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$l]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[to]),_:1}),l(),eo]),t("td",lo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oo,t("td",so,[t("a",no,[l("二叉树中的最大路径和"),e(n)])]),t("td",_o,[e(s,{to:"/problem/0124.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",co,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ro]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ao]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[io]),_:1}),l(),ho]),t("td",fo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uo,t("td",go,[t("a",mo,[l("求根节点到叶节点数字之和"),e(n)])]),t("td",yo,[e(s,{to:"/problem/0129.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xo,[e(s,{to:"/tag/tree.html"},{default:o(()=>[po]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bo]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ko]),_:1})]),t("td",Mo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Io,t("td",vo,[t("a",wo,[l("被围绕的区域"),e(n)])]),t("td",Ho,[e(s,{to:"/problem/0130.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Eo,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Oo]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[jo]),_:1}),l(),Lo]),t("td",qo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Co,t("td",No,[t("a",Po,[l("克隆图"),e(n)])]),t("td",Ko,[e(s,{to:"/problem/0133.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Vo,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Bo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[To]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Uo]),_:1}),l(),Ao]),t("td",Wo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Do,t("td",Yo,[t("a",Jo,[l("二叉树的前序遍历"),e(n)])]),t("td",Qo,[e(s,{to:"/problem/0144.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ro,[e(s,{to:"/tag/stack.html"},{default:o(()=>[So]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Zo]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Fo]),_:1}),l(),Go]),t("td",Xo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$o,t("td",ts,[t("a",es,[l("二叉树的后序遍历"),e(n)])]),t("td",ls,[e(s,{to:"/problem/0145.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",os,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ss]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[ns]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ds]),_:1}),l(),_s]),t("td",cs,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rs,t("td",as,[t("a",is,[l("上下翻转二叉树"),e(n)])]),t("td",hs,[e(s,{to:"/problem/0156.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fs,[e(s,{to:"/tag/tree.html"},{default:o(()=>[us]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gs]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ms]),_:1})]),t("td",ys,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xs,t("td",ps,[t("a",bs,[l("二叉树的右视图"),e(n)])]),t("td",ks,[e(s,{to:"/problem/0199.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ms,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Is]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vs]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ws]),_:1}),l(),Hs]),t("td",Es,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zs,t("td",Os,[t("a",js,[l("岛屿数量"),e(n)])]),t("td",Ls,[e(s,{to:"/problem/0200.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qs,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cs]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ns]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Ps]),_:1}),l(),Ks]),t("td",Vs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bs,t("td",Ts,[t("a",Us,[l("课程表"),e(n)])]),t("td",As,[e(s,{to:"/problem/0207.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ws,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ds]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ys]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Js]),_:1}),l(),Qs]),t("td",Rs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ss,t("td",Zs,[t("a",Fs,[l("课程表 II"),e(n)])]),t("td",Gs,[e(s,{to:"/problem/0210.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xs,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$s]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[tn]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[en]),_:1}),l(),ln]),t("td",on,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sn,t("td",nn,[t("a",dn,[l("添加与搜索单词 - 数据结构设计"),e(n)])]),t("td",_n,[e(s,{to:"/problem/0211.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cn,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rn]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[an]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[hn]),_:1}),l(),fn]),t("td",un,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gn,t("td",mn,[t("a",yn,[l("翻转二叉树"),e(n)])]),t("td",xn,[e(s,{to:"/problem/0226.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",pn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[bn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kn]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Mn]),_:1}),l(),In]),t("td",vn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wn,t("td",Hn,[t("a",En,[l("二叉搜索树中第 K 小的元素"),e(n)])]),t("td",zn,[e(s,{to:"/problem/0230.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",On,[e(s,{to:"/tag/tree.html"},{default:o(()=>[jn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ln]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[qn]),_:1}),l(),Cn]),t("td",Nn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pn,t("td",Kn,[t("a",Vn,[l("二叉搜索树的最近公共祖先"),e(n)])]),t("td",Bn,[e(s,{to:"/problem/0235.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Tn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Un]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[An]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Wn]),_:1}),l(),Dn]),t("td",Yn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jn,t("td",Qn,[t("a",Rn,[l("二叉树的最近公共祖先"),e(n)])]),t("td",Sn,[e(s,{to:"/problem/0236.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Zn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Fn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gn]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Xn]),_:1})]),t("td",$n,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",ld,[l("统计同值子树"),e(n)])]),od,t("td",sd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dd]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[_d]),_:1})]),t("td",cd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rd,t("td",ad,[t("a",id,[l("二叉树的所有路径"),e(n)])]),t("td",hd,[e(s,{to:"/problem/0257.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ud]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gd]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[md]),_:1}),l(),yd]),t("td",xd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pd,t("td",bd,[t("a",kd,[l("以图判树"),e(n)])]),Md,t("td",Id,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vd]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[wd]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Hd]),_:1}),l(),Ed]),t("td",zd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Od,t("td",jd,[t("a",Ld,[l("火星词典"),e(n)])]),qd,t("td",Cd,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Nd]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Pd]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Kd]),_:1}),l(),Vd]),t("td",Bd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Td,t("td",Ud,[t("a",Ad,[l("最接近的二叉搜索树值"),e(n)])]),Wd,t("td",Dd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Yd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jd]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Qd]),_:1}),l(),Rd]),t("td",Sd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zd,t("td",Fd,[t("a",Gd,[l("最接近的二叉搜索树值 II"),e(n)])]),Xd,t("td",$d,[e(s,{to:"/tag/stack.html"},{default:o(()=>[t_]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[e_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[l_]),_:1}),l(),o_]),t("td",s_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n_,t("td",d_,[t("a",__,[l("二叉搜索树中的中序后继"),e(n)])]),c_,t("td",r_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[a_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[i_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[h_]),_:1}),l(),f_]),t("td",u_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g_,t("td",m_,[t("a",y_,[l("二叉树的序列化与反序列化"),e(n)])]),t("td",x_,[e(s,{to:"/problem/0297.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",p_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[b_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[k_]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[M_]),_:1}),l(),I_]),t("td",v_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[w_,t("td",H_,[t("a",E_,[l("二叉树最长连续序列"),e(n)])]),z_,t("td",O_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[j_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[L_]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[q_]),_:1})]),t("td",C_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N_,t("td",P_,[t("a",K_,[l("包含全部黑色像素的最小矩形"),e(n)])]),V_,t("td",B_,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[T_]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[U_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[A_]),_:1}),l(),W_]),t("td",D_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y_,t("td",J_,[t("a",Q_,[l("最小高度树"),e(n)])]),R_,t("td",S_,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Z_]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[F_]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[G_]),_:1}),l(),X_]),t("td",$_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tc,t("td",ec,[t("a",lc,[l("二叉树的垂直遍历"),e(n)])]),oc,t("td",sc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_c]),_:1}),l(),cc]),t("td",rc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ac,t("td",ic,[t("a",hc,[l("无向图中连通分量的数目"),e(n)])]),fc,t("td",uc,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mc]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[yc]),_:1}),l(),xc]),t("td",pc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bc,t("td",kc,[t("a",Mc,[l("矩阵中的最长递增路径"),e(n)])]),Ic,t("td",vc,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Hc]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Ec]),_:1}),l(),zc]),t("td",Oc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jc,t("td",Lc,[t("a",qc,[l("重新安排行程"),e(n)])]),Cc,t("td",Nc,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pc]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Kc]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[Vc]),_:1})]),t("td",Bc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tc,t("td",Uc,[t("a",Ac,[l("最大二叉搜索子树"),e(n)])]),Wc,t("td",Dc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Yc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jc]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Qc]),_:1}),l(),Rc]),t("td",Sc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zc,t("td",Fc,[t("a",Gc,[l("打家劫舍 III"),e(n)])]),Xc,t("td",$c,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[er]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[lr]),_:1}),l(),or]),t("td",sr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nr,t("td",dr,[t("a",_r,[l("嵌套列表加权和"),e(n)])]),cr,t("td",rr,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ar]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ir]),_:1})]),t("td",hr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fr,t("td",ur,[t("a",gr,[l("扁平化嵌套列表迭代器"),e(n)])]),mr,t("td",yr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[xr]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[pr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[br]),_:1}),l(),kr]),t("td",Mr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ir,t("td",vr,[t("a",wr,[l("嵌套列表加权和 II"),e(n)])]),Hr,t("td",Er,[e(s,{to:"/tag/stack.html"},{default:o(()=>[zr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Or]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[jr]),_:1})]),t("td",Lr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qr,t("td",Cr,[t("a",Nr,[l("水壶问题"),e(n)])]),Pr,t("td",Kr,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vr]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Br]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Tr]),_:1})]),t("td",Ur,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ar,t("td",Wr,[t("a",Dr,[l("寻找二叉树的叶子节点"),e(n)])]),t("td",Yr,[e(s,{to:"/problem/0366.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Qr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Rr]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Sr]),_:1})]),t("td",Zr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fr,t("td",Gr,[t("a",Xr,[l("迷你语法分析器"),e(n)])]),$r,t("td",ta,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ea]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[la]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[oa]),_:1})]),t("td",sa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[na,t("td",da,[t("a",_a,[l("字典序排数"),e(n)])]),ca,t("td",ra,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[aa]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[ia]),_:1})]),t("td",ha,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fa,t("td",ua,[t("a",ga,[l("文件的最长绝对路径"),e(n)])]),ma,t("td",ya,[e(s,{to:"/tag/stack.html"},{default:o(()=>[xa]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pa]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[ba]),_:1})]),t("td",ka,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ma,t("td",Ia,[t("a",va,[l("除法求值"),e(n)])]),t("td",wa,[e(s,{to:"/problem/0399.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ha,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ea]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[za]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Oa]),_:1}),l(),ja]),t("td",La,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qa,t("td",Ca,[t("a",Na,[l("左叶子之和"),e(n)])]),Pa,t("td",Ka,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Va]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ba]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ta]),_:1}),l(),Ua]),t("td",Aa,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Wa,t("td",Da,[t("a",Ya,[l("太平洋大西洋水流问题"),e(n)])]),Ja,t("td",Qa,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ra]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Sa]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Za]),_:1}),l(),Fa]),t("td",Ga,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xa,t("td",$a,[t("a",ti,[l("棋盘上的战舰"),e(n)])]),ei,t("td",li,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[oi]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[si]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[ni]),_:1})]),t("td",di,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_i,t("td",ci,[t("a",ri,[l("将二叉搜索树转化为排序的双向链表"),e(n)])]),t("td",ai,[e(s,{to:"/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ii,[e(s,{to:"/tag/stack.html"},{default:o(()=>[hi]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[fi]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ui]),_:1}),l(),gi]),t("td",mi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yi,t("td",xi,[t("a",pi,[l("序列化和反序列化 N 叉树"),e(n)])]),bi,t("td",ki,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Mi]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ii]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[vi]),_:1}),l(),wi]),t("td",Hi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ei,t("td",zi,[t("a",Oi,[l("扁平化多级双向链表"),e(n)])]),t("td",ji,[e(s,{to:"/problem/0430.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Li,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qi]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[Ci]),_:1}),l(),e(s,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[Ni]),_:1})]),t("td",Pi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ki,t("td",Vi,[t("a",Bi,[l("将 N 叉树编码为二叉树"),e(n)])]),Ti,t("td",Ui,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ai]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Wi]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Di]),_:1}),l(),Yi]),t("td",Ji,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qi,t("td",Ri,[t("a",Si,[l("路径总和 III"),e(n)])]),t("td",Zi,[e(s,{to:"/problem/0437.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fi,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Gi]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Xi]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[$i]),_:1})]),t("td",th,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eh,t("td",lh,[t("a",oh,[l("序列化和反序列化二叉搜索树"),e(n)])]),sh,t("td",nh,[e(s,{to:"/tag/tree.html"},{default:o(()=>[dh]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_h]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ch]),_:1}),l(),rh]),t("td",ah,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ih,t("td",hh,[t("a",fh,[l("岛屿的周长"),e(n)])]),uh,t("td",gh,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mh]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[yh]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[xh]),_:1}),l(),ph]),t("td",bh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[kh,t("td",Mh,[t("a",Ih,[l("连接词"),e(n)])]),vh,t("td",wh,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Hh]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[Eh]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[zh]),_:1}),l(),Oh]),t("td",jh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lh,t("td",qh,[t("a",Ch,[l("迷宫"),e(n)])]),Nh,t("td",Ph,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Kh]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Vh]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Bh]),_:1}),l(),Th]),t("td",Uh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ah,t("td",Wh,[t("a",Dh,[l("迷宫 III"),e(n)])]),Yh,t("td",Jh,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qh]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Rh]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Sh]),_:1}),l(),Zh]),t("td",Fh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gh,t("td",Xh,[t("a",$h,[l("二叉搜索树中的众数"),e(n)])]),t1,t("td",e1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[l1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[o1]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[s1]),_:1}),l(),n1]),t("td",d1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[_1,t("td",c1,[t("a",r1,[l("迷宫 II"),e(n)])]),a1,t("td",i1,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[h1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[f1]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[u1]),_:1}),l(),g1]),t("td",m1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y1,t("td",x1,[t("a",p1,[l("出现次数最多的子树元素和"),e(n)])]),b1,t("td",k1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[M1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[I1]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[v1]),_:1}),l(),w1]),t("td",H1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E1,t("td",z1,[t("a",O1,[l("找树左下角的值"),e(n)])]),j1,t("td",L1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[q1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[C1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[N1]),_:1}),l(),P1]),t("td",K1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V1,t("td",B1,[t("a",T1,[l("自由之路"),e(n)])]),t("td",U1,[e(s,{to:"/problem/0514.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",A1,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[W1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[D1]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Y1]),_:1}),l(),J1]),t("td",Q1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R1,t("td",S1,[t("a",Z1,[l("在每个树行中找最大值"),e(n)])]),F1,t("td",G1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[X1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[tf]),_:1}),l(),ef]),t("td",lf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[of,t("td",sf,[t("a",nf,[l("扫雷游戏"),e(n)])]),df,t("td",_f,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[rf]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[af]),_:1}),l(),hf]),t("td",ff,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uf,t("td",gf,[t("a",mf,[l("二叉搜索树的最小绝对差"),e(n)])]),t("td",yf,[e(s,{to:"/problem/0530.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[pf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[kf]),_:1}),l(),Mf]),t("td",If,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vf,t("td",wf,[t("a",Hf,[l("从字符串生成二叉树"),e(n)])]),Ef,t("td",zf,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Of]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[jf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Lf]),_:1}),l(),qf]),t("td",Cf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nf,t("td",Pf,[t("a",Kf,[l("把二叉搜索树转换为累加树"),e(n)])]),Vf,t("td",Bf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Tf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Uf]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Af]),_:1}),l(),Wf]),t("td",Df,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yf,t("td",Jf,[t("a",Qf,[l("二叉树的直径"),e(n)])]),t("td",Rf,[e(s,{to:"/problem/0543.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Zf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ff]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Gf]),_:1})]),t("td",Xf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$f,t("td",tu,[t("a",eu,[l("二叉树的边界"),e(n)])]),lu,t("td",ou,[e(s,{to:"/tag/tree.html"},{default:o(()=>[su]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nu]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[du]),_:1})]),t("td",_u,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cu,t("td",ru,[t("a",au,[l("省份数量"),e(n)])]),iu,t("td",hu,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fu]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[uu]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[gu]),_:1}),l(),mu]),t("td",yu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xu,t("td",pu,[t("a",bu,[l("二叉树最长连续序列 II"),e(n)])]),ku,t("td",Mu,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Iu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vu]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[wu]),_:1})]),t("td",Hu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Eu,t("td",zu,[t("a",Ou,[l("N 叉树的最大深度"),e(n)])]),t("td",ju,[e(s,{to:"/problem/0559.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Lu,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cu]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Nu]),_:1})]),t("td",Pu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ku,t("td",Vu,[t("a",Bu,[l("二叉树的坡度"),e(n)])]),Tu,t("td",Uu,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Au]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Wu]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Du]),_:1})]),t("td",Yu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ju,t("td",Qu,[t("a",Ru,[l("数组嵌套"),e(n)])]),Su,t("td",Zu,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Fu]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Gu]),_:1})]),t("td",Xu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$u,t("td",tg,[t("a",eg,[l("另一棵树的子树"),e(n)])]),t("td",lg,[e(s,{to:"/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",og,[e(s,{to:"/tag/tree.html"},{default:o(()=>[sg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ng]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[dg]),_:1}),l(),_g]),t("td",cg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rg,t("td",ag,[t("a",ig,[l("杀掉进程"),e(n)])]),hg,t("td",fg,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ug]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gg]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mg]),_:1}),l(),yg]),t("td",xg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pg,t("td",bg,[t("a",kg,[l("N 叉树的前序遍历"),e(n)])]),t("td",Mg,[e(s,{to:"/problem/0589.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ig,[e(s,{to:"/tag/stack.html"},{default:o(()=>[vg]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[wg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Hg]),_:1})]),t("td",Eg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zg,t("td",Og,[t("a",jg,[l("N 叉树的后序遍历"),e(n)])]),t("td",Lg,[e(s,{to:"/problem/0590.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qg,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Cg]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Ng]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pg]),_:1})]),t("td",Kg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Vg,t("td",Bg,[t("a",Tg,[l("根据二叉树创建字符串"),e(n)])]),Ug,t("td",Ag,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Wg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Dg]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Yg]),_:1}),l(),Jg]),t("td",Qg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rg,t("td",Sg,[t("a",Zg,[l("合并二叉树"),e(n)])]),t("td",Fg,[e(s,{to:"/problem/0617.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gg,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$g]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[tm]),_:1}),l(),em]),t("td",lm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[om,t("td",sm,[t("a",nm,[l("在二叉树中增加一行"),e(n)])]),dm,t("td",_m,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cm]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[am]),_:1}),l(),im]),t("td",hm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fm,t("td",um,[t("a",gm,[l("二叉树的层平均值"),e(n)])]),t("td",mm,[e(s,{to:"/problem/0637.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ym,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xm]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[bm]),_:1}),l(),km]),t("td",Mm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Im,t("td",vm,[t("a",wm,[l("设计搜索自动补全系统"),e(n)])]),Hm,t("td",Em,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zm]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Om]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[jm]),_:1}),l(),Lm]),t("td",qm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cm,t("td",Nm,[t("a",Pm,[l("寻找重复的子树"),e(n)])]),Km,t("td",Vm,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Bm]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Tm]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Um]),_:1}),l(),Am]),t("td",Wm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dm,t("td",Ym,[t("a",Jm,[l("两数之和 IV - 输入二叉搜索树"),e(n)])]),Qm,t("td",Rm,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Sm]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Fm]),_:1}),l(),Gm]),t("td",Xm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$m,t("td",t2,[t("a",e2,[l("输出二叉树"),e(n)])]),l2,t("td",o2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[s2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[n2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[d2]),_:1}),l(),_2]),t("td",c2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r2,t("td",a2,[t("a",i2,[l("二叉树最大宽度"),e(n)])]),t("td",h2,[e(s,{to:"/problem/0662.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",f2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[u2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[g2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[m2]),_:1}),l(),y2]),t("td",x2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p2,t("td",b2,[t("a",k2,[l("均匀树划分"),e(n)])]),M2,t("td",I2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[v2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[w2]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[H2]),_:1})]),t("td",E2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z2,t("td",O2,[t("a",j2,[l("路径总和 IV"),e(n)])]),L2,t("td",q2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[C2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[N2]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[P2]),_:1}),l(),K2]),t("td",V2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B2,t("td",T2,[t("a",U2,[l("修剪二叉搜索树"),e(n)])]),A2,t("td",W2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[D2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Y2]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[J2]),_:1}),l(),Q2]),t("td",R2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S2,t("td",Z2,[t("a",F2,[l("二叉树中第二小的节点"),e(n)])]),G2,t("td",X2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ty]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ey]),_:1})]),t("td",ly,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[oy,t("td",sy,[t("a",ny,[l("灯泡开关 Ⅱ"),e(n)])]),dy,t("td",_y,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[cy]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ry]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ay]),_:1}),l(),iy]),t("td",hy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fy,t("td",uy,[t("a",gy,[l("实现一个魔法字典"),e(n)])]),my,t("td",yy,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xy]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[py]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[by]),_:1}),l(),ky]),t("td",My,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Iy,t("td",vy,[t("a",wy,[l("冗余连接"),e(n)])]),Hy,t("td",Ey,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zy]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Oy]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[jy]),_:1}),l(),Ly]),t("td",qy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cy,t("td",Ny,[t("a",Py,[l("冗余连接 II"),e(n)])]),Ky,t("td",Vy,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[By]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ty]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Uy]),_:1}),l(),Ay]),t("td",Wy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dy,t("td",Yy,[t("a",Jy,[l("最长同值路径"),e(n)])]),Qy,t("td",Ry,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Sy]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zy]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Fy]),_:1})]),t("td",Gy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xy,t("td",$y,[t("a",t3,[l("员工的重要性"),e(n)])]),e3,t("td",l3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[o3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[s3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[n3]),_:1}),l(),d3]),t("td",_3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c3,t("td",r3,[t("a",a3,[l("不同岛屿的数量"),e(n)])]),i3,t("td",h3,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[f3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[u3]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[g3]),_:1}),l(),m3]),t("td",y3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x3,t("td",p3,[t("a",b3,[l("岛屿的最大面积"),e(n)])]),t("td",k3,[e(s,{to:"/problem/0695.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",M3,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[I3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[v3]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[w3]),_:1}),l(),H3]),t("td",E3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z3,t("td",O3,[t("a",j3,[l("不同岛屿的数量 II"),e(n)])]),L3,t("td",q3,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[C3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[N3]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[P3]),_:1}),l(),K3]),t("td",V3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B3,t("td",T3,[t("a",U3,[l("账户合并"),e(n)])]),A3,t("td",W3,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[D3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Y3]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[J3]),_:1}),l(),Q3]),t("td",R3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S3,t("td",Z3,[t("a",F3,[l("图像渲染"),e(n)])]),G3,t("td",X3,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[tx]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ex]),_:1}),l(),lx]),t("td",ox,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sx,t("td",nx,[t("a",dx,[l("句子相似性 II"),e(n)])]),_x,t("td",cx,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ax]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[ix]),_:1}),l(),hx]),t("td",fx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ux,t("td",gx,[t("a",mx,[l("二叉树最近的叶节点"),e(n)])]),yx,t("td",xx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[px]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[kx]),_:1}),l(),Mx]),t("td",Ix,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vx,t("td",wx,[t("a",Hx,[l("网络延迟时间"),e(n)])]),Ex,t("td",zx,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ox]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[jx]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Lx]),_:1}),l(),qx]),t("td",Cx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nx,t("td",Px,[t("a",Kx,[l("隔离病毒"),e(n)])]),Vx,t("td",Bx,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Tx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ux]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ax]),_:1}),l(),Wx]),t("td",Dx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yx,t("td",Jx,[t("a",Qx,[l("破解保险箱"),e(n)])]),Rx,t("td",Sx,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zx]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Fx]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[Gx]),_:1})]),t("td",Xx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$x,t("td",tp,[t("a",ep,[l("金字塔转换矩阵"),e(n)])]),lp,t("td",op,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[sp]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[np]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dp]),_:1})]),t("td",_p,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cp,t("td",rp,[t("a",ap,[l("情侣牵手"),e(n)])]),ip,t("td",hp,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[fp]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[up]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gp]),_:1}),l(),mp]),t("td",yp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xp,t("td",pp,[t("a",bp,[l("水位上升的泳池中游泳"),e(n)])]),kp,t("td",Mp,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ip]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[vp]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[wp]),_:1}),l(),Hp]),t("td",Ep,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zp,t("td",Op,[t("a",jp,[l("二叉搜索树节点最小距离"),e(n)])]),t("td",Lp,[e(s,{to:"/problem/0783.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Cp]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Np]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Pp]),_:1}),l(),Kp]),t("td",Vp,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Bp,t("td",Tp,[t("a",Up,[l("判断二分图"),e(n)])]),Ap,t("td",Wp,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Dp]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Yp]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Jp]),_:1}),l(),Qp]),t("td",Rp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sp,t("td",Zp,[t("a",Fp,[l("K 站中转内最便宜的航班"),e(n)])]),Gp,t("td",Xp,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$p]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[t0]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[e0]),_:1}),l(),l0]),t("td",o0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s0,t("td",n0,[t("a",d0,[l("所有可能的路径"),e(n)])]),_0,t("td",c0,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[r0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[a0]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[i0]),_:1}),l(),h0]),t("td",f0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u0,t("td",g0,[t("a",m0,[l("找到最终的安全状态"),e(n)])]),y0,t("td",x0,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[p0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[b0]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[k0]),_:1}),l(),M0]),t("td",I0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v0,t("td",w0,[t("a",H0,[l("二叉树剪枝"),e(n)])]),E0,t("td",z0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[O0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[j0]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[L0]),_:1})]),t("td",q0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C0,t("td",N0,[t("a",P0,[l("最大人工岛"),e(n)])]),K0,t("td",V0,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[B0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[T0]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[U0]),_:1}),l(),A0]),t("td",W0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D0,t("td",Y0,[t("a",J0,[l("树中距离之和"),e(n)])]),Q0,t("td",R0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[S0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Z0]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[F0]),_:1}),l(),G0]),t("td",X0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$0,t("td",tb,[t("a",eb,[l("相似字符串组"),e(n)])]),lb,t("td",ob,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sb]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[nb]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[db]),_:1}),l(),_b]),t("td",cb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rb,t("td",ab,[t("a",ib,[l("钥匙和房间"),e(n)])]),hb,t("td",fb,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ub]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gb]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[mb]),_:1})]),t("td",yb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xb,t("td",pb,[t("a",bb,[l("喧闹和富有"),e(n)])]),kb,t("td",Mb,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ib]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[vb]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[wb]),_:1}),l(),Hb]),t("td",Eb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zb,t("td",Ob,[t("a",jb,[l("二叉树中所有距离为 K 的结点"),e(n)])]),Lb,t("td",qb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Cb]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Nb]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Pb]),_:1}),l(),Kb]),t("td",Vb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bb,t("td",Tb,[t("a",Ub,[l("具有所有最深节点的最小子树"),e(n)])]),Ab,t("td",Wb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Db]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yb]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Jb]),_:1}),l(),Qb]),t("td",Rb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sb,t("td",Zb,[t("a",Fb,[l("叶子相似的树"),e(n)])]),Gb,t("td",Xb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$b]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[t4]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[e4]),_:1})]),t("td",l4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[o4,t("td",s4,[t("a",n4,[l("可能的二分法"),e(n)])]),d4,t("td",_4,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[c4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[r4]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[a4]),_:1}),l(),i4]),t("td",h4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f4,t("td",u4,[t("a",g4,[l("递增顺序搜索树"),e(n)])]),m4,t("td",y4,[e(s,{to:"/tag/stack.html"},{default:o(()=>[x4]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[p4]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[b4]),_:1}),l(),k4]),t("td",M4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[I4,t("td",v4,[t("a",w4,[l("尽量减少恶意软件的传播"),e(n)])]),H4,t("td",E4,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[z4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[O4]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[j4]),_:1}),l(),L4]),t("td",q4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[C4,t("td",N4,[t("a",P4,[l("尽量减少恶意软件的传播 II"),e(n)])]),K4,t("td",V4,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[B4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[T4]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[U4]),_:1}),l(),A4]),t("td",W4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D4,t("td",Y4,[t("a",J4,[l("最短的桥"),e(n)])]),Q4,t("td",R4,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[S4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Z4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[F4]),_:1}),l(),G4]),t("td",X4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$4,t("td",t8,[t("a",e8,[l("二叉搜索树的范围和"),e(n)])]),l8,t("td",o8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[s8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[n8]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[d8]),_:1}),l(),_8]),t("td",c8,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[r8,t("td",a8,[t("a",i8,[l("移除最多的同行或同列石头"),e(n)])]),h8,t("td",f8,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[u8]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[g8]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[m8]),_:1}),l(),y8]),t("td",x8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p8,t("td",b8,[t("a",k8,[l("翻转等价二叉树"),e(n)])]),M8,t("td",I8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[v8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[w8]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[H8]),_:1})]),t("td",E8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z8,t("td",O8,[t("a",j8,[l("由斜杠划分区域"),e(n)])]),L8,t("td",q8,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[C8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[N8]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[P8]),_:1}),l(),K8]),t("td",V8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B8,t("td",T8,[t("a",U8,[l("单值二叉树"),e(n)])]),A8,t("td",W8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[D8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Y8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[J8]),_:1}),l(),Q8]),t("td",R8,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[S8,t("td",Z8,[t("a",F8,[l("监控二叉树"),e(n)])]),G8,t("td",X8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[t6]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[e6]),_:1}),l(),l6]),t("td",o6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[s6,t("td",n6,[t("a",d6,[l("翻转二叉树以匹配先序遍历"),e(n)])]),_6,t("td",c6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[r6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[a6]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[i6]),_:1})]),t("td",h6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f6,t("td",u6,[t("a",g6,[l("在二叉树中分配硬币"),e(n)])]),m6,t("td",y6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[x6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[p6]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[b6]),_:1})]),t("td",k6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M6,t("td",I6,[t("a",v6,[l("二叉树的垂序遍历"),e(n)])]),w6,t("td",H6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[E6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[z6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[O6]),_:1}),l(),j6]),t("td",L6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[q6,t("td",C6,[t("a",N6,[l("从叶结点开始的最小字符串"),e(n)])]),P6,t("td",K6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[V6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[B6]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[T6]),_:1}),l(),U6]),t("td",A6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W6,t("td",D6,[t("a",Y6,[l("二叉树的堂兄弟节点"),e(n)])]),J6,t("td",Q6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[R6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[S6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Z6]),_:1}),l(),F6]),t("td",G6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[X6,t("td",$6,[t("a",t5,[l("飞地的数量"),e(n)])]),e5,t("td",l5,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[o5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[s5]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[n5]),_:1}),l(),d5]),t("td",_5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c5,t("td",r5,[t("a",a5,[l("从根到叶的二进制数之和"),e(n)])]),i5,t("td",h5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[f5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[u5]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[g5]),_:1})]),t("td",m5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[y5,t("td",x5,[t("a",p5,[l("节点与其祖先之间的最大差值"),e(n)])]),b5,t("td",k5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[M5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[I5]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[v5]),_:1})]),t("td",w5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H5,t("td",E5,[t("a",z5,[l("从先序遍历还原二叉树"),e(n)])]),O5,t("td",j5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[L5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q5]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[C5]),_:1}),l(),N5]),t("td",P5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K5,t("td",V5,[t("a",B5,[l("边界着色"),e(n)])]),T5,t("td",U5,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[A5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[W5]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[D5]),_:1}),l(),Y5]),t("td",J5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q5,t("td",R5,[t("a",S5,[l("逃离大迷宫"),e(n)])]),Z5,t("td",F5,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[G5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[X5]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[$5]),_:1}),l(),t7]),t("td",e7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l7,t("td",o7,[t("a",s7,[l("从二叉搜索树到更大和树"),e(n)])]),n7,t("td",d7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[c7]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[r7]),_:1}),l(),a7]),t("td",i7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h7,t("td",f7,[t("a",u7,[l("不邻接植花"),e(n)])]),g7,t("td",m7,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[y7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[x7]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[p7]),_:1})]),t("td",b7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k7,t("td",M7,[t("a",I7,[l("根到叶路径上的不足节点"),e(n)])]),v7,t("td",w7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[H7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[E7]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[z7]),_:1})]),t("td",O7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j7,t("td",L7,[t("a",q7,[l("得分最高的路径"),e(n)])]),C7,t("td",N7,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[P7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[K7]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[V7]),_:1}),l(),B7]),t("td",T7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U7,t("td",A7,[t("a",W7,[l("删点成林"),e(n)])]),D7,t("td",Y7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[J7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Q7]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[R7]),_:1}),l(),S7]),t("td",Z7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F7,t("td",G7,[t("a",X7,[l("子树的最大平均值"),e(n)])]),$7,t("td",t9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[e9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[l9]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[o9]),_:1})]),t("td",s9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n9,t("td",d9,[t("a",_9,[l("最深叶节点的最近公共祖先"),e(n)])]),c9,t("td",r9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[a9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[i9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[h9]),_:1}),l(),f9]),t("td",u9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g9,t("td",m9,[t("a",y9,[l("二叉树着色游戏"),e(n)])]),x9,t("td",p9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[b9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[k9]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[M9]),_:1})]),t("td",I9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v9,t("td",w9,[t("a",H9,[l("最大层内元素和"),e(n)])]),E9,t("td",z9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[O9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[j9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[L9]),_:1}),l(),q9]),t("td",C9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N9,t("td",P9,[t("a",K9,[l("查找集群内的关键连接"),e(n)])]),V9,t("td",B9,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[T9]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[U9]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[A9]),_:1})]),t("td",W9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D9,t("td",Y9,[t("a",J9,[l("交换字符串中的元素"),e(n)])]),Q9,t("td",R9,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[S9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Z9]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[F9]),_:1}),l(),G9]),t("td",X9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$9,t("td",tk,[t("a",ek,[l("项目管理"),e(n)])]),lk,t("td",ok,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sk]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[nk]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[dk]),_:1}),l(),_k]),t("td",ck,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rk,t("td",ak,[t("a",ik,[l("查找两棵二叉搜索树之和"),e(n)])]),hk,t("td",fk,[e(s,{to:"/tag/stack.html"},{default:o(()=>[uk]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[gk]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mk]),_:1}),l(),yk]),t("td",xk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pk,t("td",bk,[t("a",kk,[l("删除子文件夹"),e(n)])]),Mk,t("td",Ik,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vk]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[wk]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Hk]),_:1}),l(),Ek]),t("td",zk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ok,t("td",jk,[t("a",Lk,[l("网络爬虫"),e(n)])]),qk,t("td",Ck,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Nk]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Pk]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Kk]),_:1}),l(),Vk]),t("td",Bk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tk,t("td",Uk,[t("a",Ak,[l("多线程网页爬虫"),e(n)])]),Wk,t("td",Dk,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yk]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Jk]),_:1}),l(),e(s,{to:"/tag/concurrency.html"},{default:o(()=>[Qk]),_:1})]),t("td",Rk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sk,t("td",Zk,[t("a",Fk,[l("树的直径"),e(n)])]),Gk,t("td",Xk,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$k]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[tM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[eM]),_:1}),l(),lM]),t("td",oM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sM,t("td",nM,[t("a",dM,[l("统计封闭岛屿的数目"),e(n)])]),_M,t("td",cM,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[aM]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[iM]),_:1}),l(),hM]),t("td",fM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uM,t("td",gM,[t("a",mM,[l("最小公共区域"),e(n)])]),yM,t("td",xM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[pM]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[kM]),_:1}),l(),MM]),t("td",IM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vM,t("td",wM,[t("a",HM,[l("在受污染的二叉树中查找元素"),e(n)])]),EM,t("td",zM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[OM]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[LM]),_:1}),l(),qM]),t("td",CM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NM,t("td",PM,[t("a",KM,[l("统计参与通信的服务器"),e(n)])]),VM,t("td",BM,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[TM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[UM]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[AM]),_:1}),l(),WM]),t("td",DM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YM,t("td",JM,[t("a",QM,[l("删除树节点"),e(n)])]),RM,t("td",SM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ZM]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[FM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[GM]),_:1}),l(),XM]),t("td",$M,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tI,t("td",eI,[t("a",lI,[l("层数最深叶子节点的和"),e(n)])]),oI,t("td",sI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_I]),_:1}),l(),cI]),t("td",rI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aI,t("td",iI,[t("a",hI,[l("两棵二叉搜索树中的所有元素"),e(n)])]),fI,t("td",uI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mI]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[yI]),_:1}),l(),xI]),t("td",pI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bI,t("td",kI,[t("a",MI,[l("跳跃游戏 III"),e(n)])]),II,t("td",vI,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[HI]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[EI]),_:1})]),t("td",zI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OI,t("td",jI,[t("a",LI,[l("祖父节点值为偶数的节点和"),e(n)])]),qI,t("td",CI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[NI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[PI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[KI]),_:1}),l(),VI]),t("td",BI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TI,t("td",UI,[t("a",AI,[l("连通网络的操作次数"),e(n)])]),WI,t("td",DI,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[YI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[JI]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[QI]),_:1}),l(),RI]),t("td",SI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZI,t("td",FI,[t("a",GI,[l("删除给定值的叶子节点"),e(n)])]),XI,t("td",$I,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ev]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[lv]),_:1})]),t("td",ov,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sv,t("td",nv,[t("a",dv,[l("分裂二叉树的最大乘积"),e(n)])]),_v,t("td",cv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[rv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[av]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[iv]),_:1})]),t("td",hv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fv,t("td",uv,[t("a",gv,[l("验证二叉树"),e(n)])]),mv,t("td",yv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pv]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[bv]),_:1}),l(),kv]),t("td",Mv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Iv,t("td",vv,[t("a",wv,[l("二叉树中的链表"),e(n)])]),Hv,t("td",Ev,[e(s,{to:"/tag/tree.html"},{default:o(()=>[zv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ov]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[jv]),_:1}),l(),Lv]),t("td",qv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cv,t("td",Nv,[t("a",Pv,[l("二叉树中的最长交错路径"),e(n)])]),Kv,t("td",Vv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Bv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Tv]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Uv]),_:1}),l(),Av]),t("td",Wv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dv,t("td",Yv,[t("a",Jv,[l("二叉搜索子树的最大键值和"),e(n)])]),Qv,t("td",Rv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Sv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zv]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Fv]),_:1}),l(),Gv]),t("td",Xv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$v,t("td",tw,[t("a",ew,[l("通知所有员工所需的时间"),e(n)])]),lw,t("td",ow,[e(s,{to:"/tag/tree.html"},{default:o(()=>[sw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dw]),_:1})]),t("td",_w,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cw,t("td",rw,[t("a",aw,[l("T 秒后青蛙的位置"),e(n)])]),iw,t("td",hw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[uw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gw]),_:1}),l(),mw]),t("td",yw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xw,t("td",pw,[t("a",bw,[l("找出克隆二叉树中的相同节点"),e(n)])]),kw,t("td",Mw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Iw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ww]),_:1}),l(),Hw]),t("td",Ew,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zw,t("td",Ow,[t("a",jw,[l("将二叉搜索树变平衡"),e(n)])]),Lw,t("td",qw,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[Cw]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Nw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pw]),_:1}),l(),Kw]),t("td",Vw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bw,t("td",Tw,[t("a",Uw,[l("检查网格中是否存在有效路径"),e(n)])]),Aw,t("td",Ww,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Dw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Yw]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Jw]),_:1}),l(),Qw]),t("td",Rw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sw,t("td",Zw,[t("a",Fw,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(n)])]),Gw,t("td",Xw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$w]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[tH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[eH]),_:1}),l(),lH]),t("td",oH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sH,t("td",nH,[t("a",dH,[l("收集树上所有苹果的最少时间"),e(n)])]),_H,t("td",cH,[e(s,{to:"/tag/tree.html"},{default:o(()=>[rH]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[aH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[iH]),_:1}),l(),hH]),t("td",fH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uH,t("td",gH,[t("a",mH,[l("统计二叉树中好节点的数目"),e(n)])]),yH,t("td",xH,[e(s,{to:"/tag/tree.html"},{default:o(()=>[pH]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[kH]),_:1}),l(),MH]),t("td",IH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vH,t("td",wH,[t("a",HH,[l("二叉树中的伪回文路径"),e(n)])]),EH,t("td",zH,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[OH]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[jH]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[LH]),_:1}),l(),qH]),t("td",CH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NH,t("td",PH,[t("a",KH,[l("课程表 IV"),e(n)])]),VH,t("td",BH,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[TH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[UH]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[AH]),_:1}),l(),WH]),t("td",DH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YH,t("td",JH,[t("a",QH,[l("重新规划路线"),e(n)])]),RH,t("td",SH,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ZH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[FH]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[GH]),_:1})]),t("td",XH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$H,t("td",tE,[t("a",eE,[l("寻找所有的独生节点"),e(n)])]),lE,t("td",oE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[sE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dE]),_:1}),l(),_E]),t("td",cE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rE,t("td",aE,[t("a",iE,[l("树节点的第 K 个祖先"),e(n)])]),hE,t("td",fE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[uE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mE]),_:1}),l(),yE]),t("td",xE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pE,t("td",bE,[t("a",kE,[l("克隆含随机指针的二叉树"),e(n)])]),ME,t("td",IE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[HE]),_:1}),l(),EE]),t("td",zE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OE,t("td",jE,[t("a",LE,[l("克隆 N 叉树"),e(n)])]),qE,t("td",CE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[NE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[PE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[KE]),_:1}),l(),VE]),t("td",BE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TE,t("td",UE,[t("a",AE,[l("找到 N 叉树的根节点"),e(n)])]),WE,t("td",DE,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[YE]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[JE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[QE]),_:1}),l(),RE]),t("td",SE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZE,t("td",FE,[t("a",GE,[l("移动 N 叉树的子树"),e(n)])]),XE,t("td",$E,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ez]),_:1})]),t("td",lz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oz,t("td",sz,[t("a",nz,[l("子树中标签相同的节点数"),e(n)])]),dz,t("td",_z,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rz]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[az]),_:1}),l(),iz]),t("td",hz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fz,t("td",uz,[t("a",gz,[l("N 叉树的直径"),e(n)])]),t("td",mz,[e(s,{to:"/problem/1522.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pz]),_:1})]),t("td",bz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kz,t("td",Mz,[t("a",Iz,[l("好叶子节点对的数量"),e(n)])]),vz,t("td",wz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Hz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ez]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[zz]),_:1})]),t("td",Oz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jz,t("td",Lz,[t("a",qz,[l("二维网格图中探测环"),e(n)])]),Cz,t("td",Nz,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pz]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Kz]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Vz]),_:1}),l(),Bz]),t("td",Tz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uz,t("td",Az,[t("a",Wz,[l("使陆地分离的最少天数"),e(n)])]),Dz,t("td",Yz,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jz]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Qz]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Rz]),_:1}),l(),Sz]),t("td",Zz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fz,t("td",Gz,[t("a",Xz,[l("王位继承顺序"),e(n)])]),$z,t("td",tO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[eO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[lO]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[oO]),_:1}),l(),sO]),t("td",nO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dO,t("td",_O,[t("a",cO,[l("检查两棵二叉表达式树是否等价"),e(n)])]),rO,t("td",aO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[iO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hO]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[fO]),_:1}),l(),uO]),t("td",gO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mO,t("td",yO,[t("a",xO,[l("执行操作后字典序最小的字符串"),e(n)])]),pO,t("td",bO,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kO]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[MO]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[IO]),_:1}),l(),vO]),t("td",wO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HO,t("td",EO,[t("a",zO,[l("最小体力消耗路径"),e(n)])]),OO,t("td",jO,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[LO]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[qO]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[CO]),_:1}),l(),NO]),t("td",PO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KO,t("td",VO,[t("a",BO,[l("二叉树的最近公共祖先 II"),e(n)])]),TO,t("td",UO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[AO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[WO]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[DO]),_:1})]),t("td",YO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JO,t("td",QO,[t("a",RO,[l("纠正二叉树"),e(n)])]),SO,t("td",ZO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[FO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[GO]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[XO]),_:1}),l(),$O]),t("td",tj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ej,t("td",lj,[t("a",oj,[l("改变二叉树的根节点"),e(n)])]),sj,t("td",nj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[dj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_j]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[cj]),_:1})]),t("td",rj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aj,t("td",ij,[t("a",hj,[l("二叉树的最近公共祖先 IV"),e(n)])]),fj,t("td",uj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mj]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[yj]),_:1}),l(),xj]),t("td",pj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bj,t("td",kj,[t("a",Mj,[l("执行交换操作后的最小汉明距离"),e(n)])]),Ij,t("td",vj,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wj]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Hj]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ej]),_:1})]),t("td",zj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oj,t("td",jj,[t("a",Lj,[l("找到二叉树中的距离"),e(n)])]),qj,t("td",Cj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Nj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pj]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Kj]),_:1}),l(),Vj]),t("td",Bj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tj,t("td",Uj,[t("a",Aj,[l("从相邻元素对还原数组"),e(n)])]),Wj,t("td",Dj,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yj]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Jj]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Qj]),_:1})]),t("td",Rj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sj,t("td",Zj,[t("a",Fj,[l("互质树"),e(n)])]),Gj,t("td",Xj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$j]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[tL]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[eL]),_:1}),l(),lL]),t("td",oL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sL,t("td",nL,[t("a",dL,[l("未知网格中的最短路径"),e(n)])]),_L,t("td",cL,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rL]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[aL]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[iL]),_:1}),l(),hL]),t("td",fL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uL,t("td",gL,[t("a",mL,[l("隐藏网格下的最小消耗路径"),e(n)])]),yL,t("td",xL,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pL]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[bL]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[kL]),_:1}),l(),ML]),t("td",IL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vL,t("td",wL,[t("a",HL,[l("最多邀请的个数"),e(n)])]),EL,t("td",zL,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[OL]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[jL]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[LL]),_:1}),l(),qL]),t("td",CL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NL,t("td",PL,[t("a",KL,[l("包含所有前缀的最长单词"),e(n)])]),VL,t("td",BL,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[TL]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[UL]),_:1})]),t("td",AL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WL,t("td",DL,[t("a",YL,[l("统计子岛屿"),e(n)])]),JL,t("td",QL,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[RL]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[SL]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[ZL]),_:1}),l(),FL]),t("td",GL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[XL,t("td",$L,[t("a",tq,[l("合并多棵二叉搜索树"),e(n)])]),eq,t("td",lq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[oq]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sq]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[nq]),_:1}),l(),dq]),t("td",_q,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cq,t("td",rq,[t("a",aq,[l("查询最大基因差"),e(n)])]),iq,t("td",hq,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[fq]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[uq]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[gq]),_:1}),l(),mq]),t("td",yq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xq,t("td",pq,[t("a",bq,[l("你能穿过矩阵的最后一天"),e(n)])]),kq,t("td",Mq,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Iq]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[vq]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[wq]),_:1}),l(),Hq]),t("td",Eq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zq,t("td",Oq,[t("a",jq,[l("寻找图中是否存在路径"),e(n)])]),Lq,t("td",qq,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cq]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Nq]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Pq]),_:1}),l(),Kq]),t("td",Vq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Bq,t("td",Tq,[t("a",Uq,[l("值等于子节点值之和的节点数量"),e(n)])]),Aq,t("td",Wq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dq]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yq]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Jq]),_:1})]),t("td",Qq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rq,t("td",Sq,[t("a",Zq,[l("找到所有的农场组"),e(n)])]),Fq,t("td",Gq,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Xq]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$q]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[tC]),_:1}),l(),eC]),t("td",lC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oC,t("td",sC,[t("a",nC,[l("树上的操作"),e(n)])]),dC,t("td",_C,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cC]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[aC]),_:1}),l(),iC]),t("td",hC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fC,t("td",uC,[t("a",gC,[l("每棵子树内缺失的最小基因值"),e(n)])]),mC,t("td",yC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xC]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pC]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[bC]),_:1}),l(),kC]),t("td",MC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IC,t("td",vC,[t("a",wC,[l("统计最高分的节点数目"),e(n)])]),HC,t("td",EC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[zC]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[OC]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[jC]),_:1}),l(),LC]),t("td",qC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CC,t("td",NC,[t("a",PC,[l("找出知晓秘密的所有专家"),e(n)])]),KC,t("td",VC,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[BC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[TC]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[UC]),_:1}),l(),AC]),t("td",WC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DC,t("td",YC,[t("a",JC,[l("从二叉树一个节点到另一个节点每一步的方向"),e(n)])]),QC,t("td",RC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[SC]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ZC]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[FC]),_:1}),l(),GC]),t("td",XC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$C,t("td",tN,[t("a",eN,[l("合法重新排列数对"),e(n)])]),lN,t("td",oN,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sN]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[nN]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[dN]),_:1})]),t("td",_N,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cN,t("td",rN,[t("a",aN,[l("引爆最多的炸弹"),e(n)])]),iN,t("td",hN,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fN]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[uN]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[gN]),_:1}),l(),mN]),t("td",yN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xN,t("td",pN,[t("a",bN,[l("参加会议的最多员工数"),e(n)])]),kN,t("td",MN,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[IN]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[vN]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[wN]),_:1})]),t("td",HN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[EN,t("td",zN,[t("a",ON,[l("有向无环图中一个节点的所有祖先"),e(n)])]),jN,t("td",LN,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qN]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[CN]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[NN]),_:1}),l(),PN]),t("td",KN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VN,t("td",BN,[t("a",TN,[l("无向图中到环的距离"),e(n)])]),UN,t("td",AN,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[WN]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[DN]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[YN]),_:1}),l(),JN]),t("td",QN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RN,t("td",SN,[t("a",ZN,[l("相邻字符不同的最长路径"),e(n)])]),FN,t("td",GN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[XN]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$N]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[tP]),_:1}),l(),eP]),t("td",lP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oP,t("td",sP,[t("a",nP,[l("统计值等于子树平均值的节点数"),e(n)])]),dP,t("td",_P,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cP]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rP]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[aP]),_:1})]),t("td",iP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hP,t("td",fP,[t("a",uP,[l("树中最接近路径的节点"),e(n)])]),gP,t("td",mP,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yP]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xP]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[pP]),_:1}),l(),bP]),t("td",kP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[MP,t("td",IP,[t("a",vP,[l("检查方程中的矛盾之处"),e(n)])]),wP,t("td",HP,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[EP]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[zP]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[OP]),_:1}),l(),jP]),t("td",LP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qP,t("td",CP,[t("a",NP,[l("二叉树中得到结果所需的最少翻转次数"),e(n)])]),PP,t("td",KP,[e(s,{to:"/tag/tree.html"},{default:o(()=>[VP]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[BP]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[TP]),_:1}),l(),UP]),t("td",AP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[WP,t("td",DP,[t("a",YP,[l("统计无向图中无法互相到达点对数"),e(n)])]),JP,t("td",QP,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[RP]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[SP]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[ZP]),_:1}),l(),FP]),t("td",GP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[XP,t("td",$P,[t("a",tK,[l("从树中删除边的最小分数"),e(n)])]),eK,t("td",lK,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[oK]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[sK]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nK]),_:1}),l(),dK]),t("td",_K,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cK,t("td",rK,[t("a",aK,[l("网格图中递增路径的数目"),e(n)])]),iK,t("td",hK,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fK]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[uK]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[gK]),_:1}),l(),mK]),t("td",yK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xK,t("td",pK,[t("a",bK,[l("计算布尔二叉树的值"),e(n)])]),kK,t("td",MK,[e(s,{to:"/tag/tree.html"},{default:o(()=>[IK]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vK]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[wK]),_:1})]),t("td",HK,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[EK,t("td",zK,[t("a",OK,[l("找到离给定两个节点最近的节点"),e(n)])]),jK,t("td",LK,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qK]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[CK]),_:1})]),t("td",NK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PK,t("td",KK,[t("a",VK,[l("图中的最长环"),e(n)])]),BK,t("td",TK,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[UK]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[AK]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[WK]),_:1})]),t("td",DK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[YK,t("td",JK,[t("a",QK,[l("受限条件下可到达节点的数目"),e(n)])]),RK,t("td",SK,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ZK]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[FK]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[GK]),_:1}),l(),XK]),t("td",$K,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tV,t("td",eV,[t("a",lV,[l("选择边来最大化树的得分"),e(n)])]),oV,t("td",sV,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dV]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_V]),_:1})]),t("td",cV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rV,t("td",aV,[t("a",iV,[l("感染二叉树需要的总时间"),e(n)])]),hV,t("td",fV,[e(s,{to:"/tag/tree.html"},{default:o(()=>[uV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gV]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mV]),_:1}),l(),yV]),t("td",xV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pV,t("td",bV,[t("a",kV,[l("反转二叉树的奇数层"),e(n)])]),MV,t("td",IV,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wV]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[HV]),_:1}),l(),EV]),t("td",zV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OV,t("td",jV,[t("a",LV,[l("创建价值相同的连通块"),e(n)])]),qV,t("td",CV,[e(s,{to:"/tag/tree.html"},{default:o(()=>[NV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[PV]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[KV]),_:1}),l(),VV]),t("td",BV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TV,t("td",UV,[t("a",AV,[l("值为 1 的节点数"),e(n)])]),WV,t("td",DV,[e(s,{to:"/tag/tree.html"},{default:o(()=>[YV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[JV]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[QV]),_:1}),l(),RV]),t("td",SV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZV,t("td",FV,[t("a",GV,[l("移除子树后的二叉树高度"),e(n)])]),XV,t("td",$V,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tB]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[eB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lB]),_:1}),l(),oB]),t("td",sB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nB,t("td",dB,[t("a",_B,[l("树上最大得分和路径"),e(n)])]),cB,t("td",rB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[aB]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[iB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hB]),_:1}),l(),fB]),t("td",uB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gB,t("td",mB,[t("a",yB,[l("二叉搜索树最近节点查询"),e(n)])]),xB,t("td",pB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[bB]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kB]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[MB]),_:1}),l(),IB]),t("td",vB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wB,t("td",HB,[t("a",EB,[l("到达首都的最少油耗"),e(n)])]),zB,t("td",OB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[jB]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[LB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[qB]),_:1}),l(),CB]),t("td",NB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PB,t("td",KB,[t("a",VB,[l("两个不重叠子树的最大异或值"),e(n)])]),BB,t("td",TB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[UB]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[AB]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[WB]),_:1}),l(),DB]),t("td",YB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JB,t("td",QB,[t("a",RB,[l("两个城市间路径的最小分数"),e(n)])]),SB,t("td",ZB,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[FB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[GB]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[XB]),_:1}),l(),$B]),t("td",tT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eT,t("td",lT,[t("a",oT,[l("最大价值和与最小价值和的差值"),e(n)])]),sT,t("td",nT,[e(s,{to:"/tag/tree.html"},{default:o(()=>[dT]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_T]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[cT]),_:1}),l(),rT]),t("td",aT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iT,t("td",hT,[t("a",fT,[l("二进制矩阵中翻转最多一次使路径不连通"),e(n)])]),uT,t("td",gT,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mT]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[yT]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[xT]),_:1}),l(),pT]),t("td",bT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kT,t("td",MT,[t("a",IT,[l("统计可能的树根数目"),e(n)])]),vT,t("td",wT,[e(s,{to:"/tag/tree.html"},{default:o(()=>[HT]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ET]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[zT]),_:1}),l(),OT]),t("td",jT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[LT,t("td",qT,[t("a",CT,[l("检查骑士巡视方案"),e(n)])]),NT,t("td",PT,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[KT]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[VT]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[BT]),_:1}),l(),TT]),t("td",UT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AT,t("td",WT,[t("a",DT,[l("二叉树的堂兄弟节点 II"),e(n)])]),YT,t("td",JT,[e(s,{to:"/tag/tree.html"},{default:o(()=>[QT]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[RT]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ST]),_:1}),l(),ZT]),t("td",FT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GT,t("td",XT,[t("a",$T,[l("最小化旅行的价格总和"),e(n)])]),tU,t("td",eU,[e(s,{to:"/tag/tree.html"},{default:o(()=>[lU]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[oU]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[sU]),_:1}),l(),nU]),t("td",dU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_U,t("td",cU,[t("a",rU,[l("网格图中鱼的最大数目"),e(n)])]),aU,t("td",iU,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hU]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fU]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[uU]),_:1}),l(),gU]),t("td",mU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yU,t("td",xU,[t("a",pU,[l("统计完全连通分量的数量"),e(n)])]),bU,t("td",kU,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[MU]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[IU]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[vU]),_:1})]),t("td",wU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HU,t("td",EU,[t("a",zU,[l("从 Rope 树中提取第 K 个字符"),e(n)])]),OU,t("td",jU,[e(s,{to:"/tag/tree.html"},{default:o(()=>[LU]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qU]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[CU]),_:1})]),t("td",NU,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[PU,t("td",KU,[t("a",VU,[l("数组是否表示某二叉树的前序遍历"),e(n)])]),BU,t("td",TU,[e(s,{to:"/tag/stack.html"},{default:o(()=>[UU]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[AU]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[WU]),_:1}),l(),DU]),t("td",YU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JU,t("td",QU,[t("a",RU,[l("特殊二叉树的高度"),e(n)])]),SU,t("td",ZU,[e(s,{to:"/tag/tree.html"},{default:o(()=>[FU]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[GU]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[XU]),_:1}),l(),$U]),t("td",tA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eA,t("td",lA,[t("a",oA,[l("树中可以形成回文的路径数"),e(n)])]),sA,t("td",nA,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[dA]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[_A]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cA]),_:1}),l(),rA]),t("td",aA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iA,t("td",hA,[t("a",fA,[l("计算足够大的节点数"),e(n)])]),uA,t("td",gA,[e(s,{to:"/tag/tree.html"},{default:o(()=>[mA]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yA]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[xA]),_:1}),l(),pA]),t("td",bA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kA,t("td",MA,[t("a",IA,[l("所有单元格的远离程度之和"),e(n)])]),vA,t("td",wA,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[HA]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[EA]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[zA]),_:1}),l(),OA]),t("td",jA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LA,t("td",qA,[t("a",CA,[l("可以到达每一个节点的最少边反转次数"),e(n)])]),NA,t("td",PA,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[KA]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[VA]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[BA]),_:1}),l(),TA]),t("td",UA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[AA,t("td",WA,[t("a",DA,[l("统计树中的合法路径数目"),e(n)])]),YA,t("td",JA,[e(s,{to:"/tag/tree.html"},{default:o(()=>[QA]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[RA]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[SA]),_:1}),l(),ZA]),t("td",FA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[GA,t("td",XA,[t("a",$A,[l("可以被 K 整除连通块的最大数目"),e(n)])]),tW,t("td",eW,[e(s,{to:"/tag/tree.html"},{default:o(()=>[lW]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[oW]),_:1})]),t("td",sW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nW,t("td",dW,[t("a",_W,[l("收集所有金币可获得的最大积分"),e(n)])]),cW,t("td",rW,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[aW]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[iW]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hW]),_:1}),l(),fW]),t("td",uW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gW,t("td",mW,[t("a",yW,[l("在树上执行操作以后得到的最大分数"),e(n)])]),xW,t("td",pW,[e(s,{to:"/tag/tree.html"},{default:o(()=>[bW]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kW]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[MW]),_:1})]),t("td",IW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vW,t("td",wW,[t("a",HW,[l("树中每个节点放置的金币数目"),e(n)])]),EW,t("td",zW,[e(s,{to:"/tag/tree.html"},{default:o(()=>[OW]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jW]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[LW]),_:1}),l(),qW]),t("td",CW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[NW,t("td",PW,[t("a",KW,[l("相同颜色的最大子树"),e(n)])]),VW,t("td",BW,[e(s,{to:"/tag/tree.html"},{default:o(()=>[TW]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[UW]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[AW]),_:1}),l(),WW]),t("td",DW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YW,t("td",JW,[t("a",QW,[l("在带权树网络中统计可连接服务器对数目"),e(n)])]),RW,t("td",SW,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ZW]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[FW]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[GW]),_:1})]),t("td",XW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$W,t("td",tD,[t("a",eD,[l("最短路径中的边"),e(n)])]),lD,t("td",oD,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sD]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[nD]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[dD]),_:1}),l(),_D]),t("td",cD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rD,t("td",aD,[t("a",iD,[l("找到具有最小和的树的层数"),e(n)])]),hD,t("td",fD,[e(s,{to:"/tag/tree.html"},{default:o(()=>[uD]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gD]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mD]),_:1}),l(),yD]),t("td",xD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pD,t("td",bD,[t("a",kD,[l("合并两棵树后的最小直径"),e(n)])]),MD,t("td",ID,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vD]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wD]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[HD]),_:1}),l(),ED]),t("td",zD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[OD,t("td",jD,[t("a",LD,[l("判断矩形的两个角落是否可达"),e(n)])]),qD,t("td",CD,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ND]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[PD]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[KD]),_:1}),l(),VD]),t("td",BD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TD,t("td",UD,[t("a",AD,[l("标记所有节点需要的时间"),e(n)])]),WD,t("td",DD,[e(s,{to:"/tag/tree.html"},{default:o(()=>[YD]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[JD]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[QD]),_:1}),l(),RD]),t("td",SD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZD,t("td",FD,[t("a",GD,[l("统计好节点的数目"),e(n)])]),XD,t("td",$D,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tY]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[eY]),_:1})]),t("td",lY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oY,t("td",sY,[t("a",nY,[l("移除可疑的方法"),e(n)])]),dY,t("td",_Y,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cY]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[rY]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[aY]),_:1})]),t("td",iY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hY,t("td",fY,[t("a",uY,[l("查找树中最后标记的节点"),e(n)])]),gY,t("td",mY,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yY]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xY]),_:1})]),t("td",pY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bY,t("td",kY,[t("a",MY,[l("第 K 大的完美二叉子树的大小"),e(n)])]),t("td",IY,[e(s,{to:"/problem/3319.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vY,[e(s,{to:"/tag/tree.html"},{default:o(()=>[wY]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[HY]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[EY]),_:1}),l(),zY]),t("td",OY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jY,t("td",LY,[t("a",qY,[l("传递信息"),e(n)])]),CY,t("td",NY,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[PY]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[KY]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[VY]),_:1}),l(),BY]),t("td",TY,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[UY,t("td",AY,[t("a",WY,[l("二叉树任务调度"),e(n)])]),DY,t("td",YY,[e(s,{to:"/tag/tree.html"},{default:o(()=>[JY]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[QY]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[RY]),_:1}),l(),SY]),t("td",ZY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FY,t("td",GY,[t("a",XY,[l("追逐游戏"),e(n)])]),$Y,t("td",tJ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[eJ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lJ]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[oJ]),_:1}),l(),sJ]),t("td",nJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dJ,t("td",_J,[t("a",cJ,[l("变换的迷宫"),e(n)])]),rJ,t("td",aJ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[iJ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hJ]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[fJ]),_:1}),l(),uJ]),t("td",gJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mJ,t("td",yJ,[t("a",xJ,[l("开幕式焰火"),e(n)])]),pJ,t("td",bJ,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kJ]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[MJ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[IJ]),_:1}),l(),vJ]),t("td",wJ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[HJ,t("td",EJ,[t("a",zJ,[l("自行车炫技赛场"),e(n)])]),OJ,t("td",jJ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[LJ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[qJ]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[CJ]),_:1}),l(),NJ]),t("td",PJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KJ,t("td",VJ,[t("a",BJ,[l("弹珠游戏"),e(n)])]),TJ,t("td",UJ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[AJ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[WJ]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[DJ]),_:1}),l(),YJ]),t("td",JJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QJ,t("td",RJ,[t("a",SJ,[l("二叉树灯饰"),e(n)])]),ZJ,t("td",FJ,[e(s,{to:"/tag/tree.html"},{default:o(()=>[GJ]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[XJ]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$J]),_:1}),l(),tQ]),t("td",eQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lQ,t("td",oQ,[t("a",sQ,[l("装饰树"),e(n)])]),nQ,t("td",dQ,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_Q]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cQ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[rQ]),_:1}),l(),aQ]),t("td",iQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hQ,t("td",fQ,[t("a",uQ,[l("主题空间"),e(n)])]),gQ,t("td",mQ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yQ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xQ]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[pQ]),_:1}),l(),bQ]),t("td",kQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MQ,t("td",IQ,[t("a",vQ,[l("机器人的运动范围"),e(n)])]),t("td",wQ,[e(s,{to:"/offer/jz_offer_13_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",HQ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[EQ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[zQ]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[OQ]),_:1})]),t("td",jQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LQ,t("td",qQ,[t("a",CQ,[l("树的子结构"),e(n)])]),t("td",NQ,[e(s,{to:"/offer/jz_offer_26_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",PQ,[e(s,{to:"/tag/tree.html"},{default:o(()=>[KQ]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[VQ]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[BQ]),_:1})]),t("td",TQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UQ,t("td",AQ,[t("a",WQ,[l("二叉树的镜像"),e(n)])]),t("td",DQ,[e(s,{to:"/offer/jz_offer_27_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",YQ,[e(s,{to:"/tag/tree.html"},{default:o(()=>[JQ]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[QQ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[RQ]),_:1}),l(),SQ]),t("td",ZQ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[FQ,t("td",GQ,[t("a",XQ,[l("对称的二叉树"),e(n)])]),t("td",$Q,[e(s,{to:"/offer/jz_offer_28_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",tR,[e(s,{to:"/tag/tree.html"},{default:o(()=>[eR]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[lR]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[oR]),_:1}),l(),sR]),t("td",nR,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[dR,t("td",_R,[t("a",cR,[l("二叉树中和为某一值的路径"),e(n)])]),t("td",rR,[e(s,{to:"/offer/jz_offer_34_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",aR,[e(s,{to:"/tag/tree.html"},{default:o(()=>[iR]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hR]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[fR]),_:1}),l(),uR]),t("td",gR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mR,t("td",yR,[t("a",xR,[l("二叉搜索树与双向链表"),e(n)])]),t("td",pR,[e(s,{to:"/offer/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bR,[e(s,{to:"/tag/stack.html"},{default:o(()=>[kR]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[MR]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[IR]),_:1}),l(),vR]),t("td",wR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HR,t("td",ER,[t("a",zR,[l("序列化二叉树"),e(n)])]),t("td",OR,[e(s,{to:"/offer/jz_offer_37_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jR,[e(s,{to:"/tag/tree.html"},{default:o(()=>[LR]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qR]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[CR]),_:1}),l(),NR]),t("td",PR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[KR,t("td",VR,[t("a",BR,[l("二叉搜索树的第k大节点"),e(n)])]),t("td",TR,[e(s,{to:"/offer/jz_offer_54_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",UR,[e(s,{to:"/tag/tree.html"},{default:o(()=>[AR]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[WR]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[DR]),_:1}),l(),YR]),t("td",JR,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[QR,t("td",RR,[t("a",SR,[l("二叉树的深度"),e(n)])]),t("td",ZR,[e(s,{to:"/offer/jz_offer_55_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",FR,[e(s,{to:"/tag/tree.html"},{default:o(()=>[GR]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[XR]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$R]),_:1}),l(),tS]),t("td",eS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[lS,t("td",oS,[t("a",sS,[l("平衡二叉树"),e(n)])]),nS,t("td",dS,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_S]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cS]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[rS]),_:1})]),t("td",aS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[iS,t("td",hS,[t("a",fS,[l("二叉搜索树的最近公共祖先"),e(n)])]),uS,t("td",gS,[e(s,{to:"/tag/tree.html"},{default:o(()=>[mS]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yS]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[xS]),_:1}),l(),pS]),t("td",bS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[kS,t("td",MS,[t("a",IS,[l("二叉树的最近公共祖先"),e(n)])]),vS,t("td",wS,[e(s,{to:"/tag/tree.html"},{default:o(()=>[HS]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ES]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[zS]),_:1})]),t("td",OS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jS,t("td",LS,[t("a",qS,[l("岛屿的最大面积"),e(n)])]),CS,t("td",NS,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[PS]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[KS]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[VS]),_:1}),l(),BS]),t("td",TS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[US,t("td",AS,[t("a",WS,[l("二分图"),e(n)])]),DS,t("td",YS,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[JS]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[QS]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[RS]),_:1}),l(),SS]),t("td",ZS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FS,t("td",GS,[t("a",XS,[l("所有路径"),e(n)])]),$S,t("td",tZ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[eZ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lZ]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[oZ]),_:1}),l(),sZ]),t("td",nZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dZ,t("td",_Z,[t("a",cZ,[l("计算除法"),e(n)])]),rZ,t("td",aZ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[iZ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hZ]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[fZ]),_:1}),l(),uZ]),t("td",gZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mZ,t("td",yZ,[t("a",xZ,[l("最长递增路径"),e(n)])]),pZ,t("td",bZ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kZ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[MZ]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[IZ]),_:1}),l(),vZ]),t("td",wZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HZ,t("td",EZ,[t("a",zZ,[l("课程顺序"),e(n)])]),OZ,t("td",jZ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[LZ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[qZ]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[CZ]),_:1}),l(),NZ]),t("td",PZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KZ,t("td",VZ,[t("a",BZ,[l("外星文字典"),e(n)])]),TZ,t("td",UZ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[AZ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[WZ]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[DZ]),_:1}),l(),YZ]),t("td",JZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QZ,t("td",RZ,[t("a",SZ,[l("省份数量"),e(n)])]),ZZ,t("td",FZ,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[GZ]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[XZ]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[$Z]),_:1}),l(),tF]),t("td",eF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lF,t("td",oF,[t("a",sF,[l("相似的字符串"),e(n)])]),nF,t("td",dF,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_F]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[cF]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[rF]),_:1}),l(),aF]),t("td",iF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hF,t("td",fF,[t("a",uF,[l("多余的边"),e(n)])]),gF,t("td",mF,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yF]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xF]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[pF]),_:1}),l(),bF]),t("td",kF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MF,t("td",IF,[t("a",vF,[l("展平多级双向链表"),e(n)])]),wF,t("td",HF,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[EF]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[zF]),_:1}),l(),e(s,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[OF]),_:1})]),t("td",jF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LF,t("td",qF,[t("a",CF,[l("二叉树每层的最大值"),e(n)])]),NF,t("td",PF,[e(s,{to:"/tag/tree.html"},{default:o(()=>[KF]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[VF]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[BF]),_:1}),l(),TF]),t("td",UF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AF,t("td",WF,[t("a",DF,[l("二叉树最底层最左边的值"),e(n)])]),YF,t("td",JF,[e(s,{to:"/tag/tree.html"},{default:o(()=>[QF]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[RF]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[SF]),_:1}),l(),ZF]),t("td",FF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GF,t("td",XF,[t("a",$F,[l("二叉树的右侧视图"),e(n)])]),tG,t("td",eG,[e(s,{to:"/tag/tree.html"},{default:o(()=>[lG]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[oG]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[sG]),_:1}),l(),nG]),t("td",dG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_G,t("td",cG,[t("a",rG,[l("二叉树剪枝"),e(n)])]),aG,t("td",iG,[e(s,{to:"/tag/tree.html"},{default:o(()=>[hG]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fG]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[uG]),_:1})]),t("td",gG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mG,t("td",yG,[t("a",xG,[l("序列化与反序列化二叉树"),e(n)])]),pG,t("td",bG,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kG]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[MG]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[IG]),_:1}),l(),vG]),t("td",wG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HG,t("td",EG,[t("a",zG,[l("从根节点到叶节点的路径数字之和"),e(n)])]),OG,t("td",jG,[e(s,{to:"/tag/tree.html"},{default:o(()=>[LG]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qG]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[CG]),_:1})]),t("td",NG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PG,t("td",KG,[t("a",VG,[l("向下的路径节点之和"),e(n)])]),BG,t("td",TG,[e(s,{to:"/tag/tree.html"},{default:o(()=>[UG]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[AG]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[WG]),_:1})]),t("td",DG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YG,t("td",JG,[t("a",QG,[l("节点之和最大的路径"),e(n)])]),RG,t("td",SG,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ZG]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[FG]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[GG]),_:1}),l(),XG]),t("td",$G,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tX,t("td",eX,[t("a",lX,[l("展平二叉搜索树"),e(n)])]),oX,t("td",sX,[e(s,{to:"/tag/stack.html"},{default:o(()=>[nX]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[dX]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_X]),_:1}),l(),cX]),t("td",rX,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[aX,t("td",iX,[t("a",hX,[l("二叉搜索树中的中序后继"),e(n)])]),fX,t("td",uX,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gX]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mX]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[yX]),_:1}),l(),xX]),t("td",pX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bX,t("td",kX,[t("a",MX,[l("所有大于等于节点的值之和"),e(n)])]),IX,t("td",vX,[e(s,{to:"/tag/tree.html"},{default:o(()=>[wX]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[HX]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[EX]),_:1}),l(),zX]),t("td",OX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jX,t("td",LX,[t("a",qX,[l("神奇的字典"),e(n)])]),CX,t("td",NX,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[PX]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[KX]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[VX]),_:1}),l(),BX]),t("td",TX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UX,t("td",AX,[t("a",WX,[l("分割回文子字符串"),e(n)])]),DX,t("td",YX,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[JX]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[QX]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[RX]),_:1}),l(),SX]),t("td",ZX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FX,t("td",GX,[t("a",XX,[l("节点间通路"),e(n)])]),$X,t("td",t$,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[e$]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[l$]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[o$]),_:1})]),t("td",s$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n$,t("td",d$,[t("a",_$,[l("检查平衡性"),e(n)])]),c$,t("td",r$,[e(s,{to:"/tag/tree.html"},{default:o(()=>[a$]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[i$]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[h$]),_:1})]),t("td",f$,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[u$,t("td",g$,[t("a",m$,[l("合法二叉搜索树"),e(n)])]),y$,t("td",x$,[e(s,{to:"/tag/tree.html"},{default:o(()=>[p$]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[b$]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[k$]),_:1}),l(),M$]),t("td",I$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v$,t("td",w$,[t("a",H$,[l("后继者"),e(n)])]),E$,t("td",z$,[e(s,{to:"/tag/tree.html"},{default:o(()=>[O$]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[j$]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[L$]),_:1}),l(),q$]),t("td",C$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N$,t("td",P$,[t("a",K$,[l("首个共同祖先"),e(n)])]),V$,t("td",B$,[e(s,{to:"/tag/tree.html"},{default:o(()=>[T$]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[U$]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[A$]),_:1})]),t("td",W$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D$,t("td",Y$,[t("a",J$,[l("检查子树"),e(n)])]),Q$,t("td",R$,[e(s,{to:"/tag/tree.html"},{default:o(()=>[S$]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Z$]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[F$]),_:1}),l(),G$]),t("td",X$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$$,t("td",ttt,[t("a",ett,[l("求和路径"),e(n)])]),ltt,t("td",ott,[e(s,{to:"/tag/tree.html"},{default:o(()=>[stt]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ntt]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[dtt]),_:1})]),t("td",_tt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ctt,t("td",rtt,[t("a",att,[l("颜色填充"),e(n)])]),itt,t("td",htt,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ftt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[utt]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[gtt]),_:1}),l(),mtt]),t("td",ytt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xtt,t("td",ptt,[t("a",btt,[l("水域大小"),e(n)])]),ktt,t("td",Mtt,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Itt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[vtt]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[wtt]),_:1}),l(),Htt]),t("td",Ett,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ztt,t("td",Ott,[t("a",jtt,[l("婴儿名字"),e(n)])]),Ltt,t("td",qtt,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ctt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ntt]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Ptt]),_:1}),l(),Ktt]),t("td",Vtt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Btt,t("td",Ttt,[t("a",Utt,[l("BiNode"),e(n)])]),Att,t("td",Wtt,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Dtt]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Ytt]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jtt]),_:1}),l(),Qtt]),t("td",Rtt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const Xtt=c(h,[["render",Stt],["__file","depth-first-search.html.vue"]]);export{Xtt as default};
