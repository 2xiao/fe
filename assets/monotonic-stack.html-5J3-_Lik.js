import{_ as i,r as _,o as a,c,a as t,b as e,w as l,d as o,f as r}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"单调栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#单调栈","aria-hidden":"true"},"#"),o(" 单调栈")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("span",{class:"blue"},"单调栈",-1),I=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),V=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),E=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),j=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),O=t("code",null,"拓扑排序",-1),C=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),Q=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),A=t("code",null,"并查集",-1),P=t("code",null,"字典树",-1),S=t("code",null,"线段树",-1),T=t("code",null,"树状数组",-1),X=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),D=t("code",null,"枚举",-1),F=t("code",null,"递归",-1),G=t("code",null,"分治",-1),J=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Vt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Et=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),jt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Ot=t("hr",null,null,-1),Ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"42",-1),Qt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},At={style:{"text-align":"center"}},Pt={href:"/problem/0042",target:"_blank",rel:"noopener noreferrer"},St={style:{"text-align":"left"}},Tt=t("code",null,"栈",-1),Xt=t("code",null,"数组",-1),Yt=t("code",null,"双指针",-1),Dt=t("code",null,"2+",-1),Ft={style:{"text-align":"left"}},Gt=t("td",{style:{"text-align":"center"}},"84",-1),Jt={style:{"text-align":"left"}},Ut={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"center"}},Zt={href:"/problem/0084",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"栈",-1),ee=t("code",null,"数组",-1),oe=t("code",null,"单调栈",-1),le={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"85",-1),se={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},_e={style:{"text-align":"center"}},ie={href:"/problem/0085",target:"_blank",rel:"noopener noreferrer"},ae={style:{"text-align":"left"}},ce=t("code",null,"栈",-1),re=t("code",null,"数组",-1),he=t("code",null,"动态规划",-1),ue=t("code",null,"2+",-1),fe={style:{"text-align":"left"}},ge=t("td",{style:{"text-align":"center"}},"255",-1),me={style:{"text-align":"left"}},ye={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},xe=t("td",{style:{"text-align":"center"}},null,-1),be={style:{"text-align":"left"}},pe=t("code",null,"栈",-1),ke=t("code",null,"树",-1),Me=t("code",null,"二叉搜索树",-1),Ie=t("code",null,"4+",-1),ve={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"316",-1),we={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},Ve={style:{"text-align":"center"}},ze={href:"/problem/0316",target:"_blank",rel:"noopener noreferrer"},Ee={style:{"text-align":"left"}},Le=t("code",null,"栈",-1),je=t("code",null,"贪心",-1),Be=t("code",null,"字符串",-1),Ne=t("code",null,"1+",-1),Oe={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"321",-1),Ke={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},Re=t("td",{style:{"text-align":"center"}},null,-1),Ae={style:{"text-align":"left"}},Pe=t("code",null,"栈",-1),Se=t("code",null,"贪心",-1),Te=t("code",null,"数组",-1),Xe=t("code",null,"2+",-1),Ye={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"402",-1),Fe={style:{"text-align":"left"}},Ge={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},Je=t("td",{style:{"text-align":"center"}},null,-1),Ue={style:{"text-align":"left"}},We=t("code",null,"栈",-1),Ze=t("code",null,"贪心",-1),$e=t("code",null,"字符串",-1),to=t("code",null,"1+",-1),eo={style:{"text-align":"left"}},oo=t("td",{style:{"text-align":"center"}},"456",-1),lo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),_o={style:{"text-align":"left"}},io=t("code",null,"栈",-1),ao=t("code",null,"数组",-1),co=t("code",null,"二分查找",-1),ro=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"496",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},mo={style:{"text-align":"center"}},yo={href:"/problem/0496",target:"_blank",rel:"noopener noreferrer"},xo={style:{"text-align":"left"}},bo=t("code",null,"栈",-1),po=t("code",null,"数组",-1),ko=t("code",null,"哈希表",-1),Mo=t("code",null,"1+",-1),Io={style:{"text-align":"left"}},vo=t("td",{style:{"text-align":"center"}},"503",-1),Ho={style:{"text-align":"left"}},wo={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},qo={style:{"text-align":"center"}},Vo={href:"/problem/0503",target:"_blank",rel:"noopener noreferrer"},zo={style:{"text-align":"left"}},Eo=t("code",null,"栈",-1),Lo=t("code",null,"数组",-1),jo=t("code",null,"单调栈",-1),Bo={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"center"}},"581",-1),Oo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},Ko=t("td",{style:{"text-align":"center"}},null,-1),Qo={style:{"text-align":"left"}},Ro=t("code",null,"栈",-1),Ao=t("code",null,"贪心",-1),Po=t("code",null,"数组",-1),So=t("code",null,"3+",-1),To={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"654",-1),Yo={style:{"text-align":"left"}},Do={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Fo={style:{"text-align":"center"}},Go={href:"/problem/0654",target:"_blank",rel:"noopener noreferrer"},Jo={style:{"text-align":"left"}},Uo=t("code",null,"栈",-1),Wo=t("code",null,"树",-1),Zo=t("code",null,"数组",-1),$o=t("code",null,"3+",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"739",-1),ol={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},nl={style:{"text-align":"center"}},sl={href:"/problem/0739",target:"_blank",rel:"noopener noreferrer"},dl={style:{"text-align":"left"}},_l=t("code",null,"栈",-1),il=t("code",null,"数组",-1),al=t("code",null,"单调栈",-1),cl={style:{"text-align":"left"}},rl=t("td",{style:{"text-align":"center"}},"768",-1),hl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},fl=t("td",{style:{"text-align":"center"}},null,-1),gl={style:{"text-align":"left"}},ml=t("code",null,"栈",-1),yl=t("code",null,"贪心",-1),xl=t("code",null,"数组",-1),bl=t("code",null,"2+",-1),pl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"center"}},"769",-1),Ml={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},vl=t("td",{style:{"text-align":"center"}},null,-1),Hl={style:{"text-align":"left"}},wl=t("code",null,"栈",-1),ql=t("code",null,"贪心",-1),Vl=t("code",null,"数组",-1),zl=t("code",null,"2+",-1),El={style:{"text-align":"left"}},Ll=t("td",{style:{"text-align":"center"}},"853",-1),jl={style:{"text-align":"left"}},Bl={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},Nl=t("td",{style:{"text-align":"center"}},null,-1),Ol={style:{"text-align":"left"}},Cl=t("code",null,"栈",-1),Kl=t("code",null,"数组",-1),Ql=t("code",null,"排序",-1),Rl=t("code",null,"1+",-1),Al={style:{"text-align":"left"}},Pl=t("td",{style:{"text-align":"center"}},"901",-1),Sl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},Xl=t("td",{style:{"text-align":"center"}},null,-1),Yl={style:{"text-align":"left"}},Dl=t("code",null,"栈",-1),Fl=t("code",null,"设计",-1),Gl=t("code",null,"数据流",-1),Jl=t("code",null,"1+",-1),Ul={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"907",-1),Zl={style:{"text-align":"left"}},$l={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},tn=t("td",{style:{"text-align":"center"}},null,-1),en={style:{"text-align":"left"}},on=t("code",null,"栈",-1),ln=t("code",null,"数组",-1),nn=t("code",null,"动态规划",-1),sn=t("code",null,"1+",-1),dn={style:{"text-align":"left"}},_n=t("td",{style:{"text-align":"center"}},"962",-1),an={style:{"text-align":"left"}},cn={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},rn={style:{"text-align":"center"}},hn={href:"/problem/0962",target:"_blank",rel:"noopener noreferrer"},un={style:{"text-align":"left"}},fn=t("code",null,"栈",-1),gn=t("code",null,"数组",-1),mn=t("code",null,"单调栈",-1),yn={style:{"text-align":"left"}},xn=t("td",{style:{"text-align":"center"}},"975",-1),bn={style:{"text-align":"left"}},pn={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},In=t("code",null,"栈",-1),vn=t("code",null,"数组",-1),Hn=t("code",null,"动态规划",-1),wn=t("code",null,"2+",-1),qn={style:{"text-align":"left"}},Vn=t("td",{style:{"text-align":"center"}},"1008",-1),zn={style:{"text-align":"left"}},En={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ln={style:{"text-align":"center"}},jn={href:"/problem/1008",target:"_blank",rel:"noopener noreferrer"},Bn={style:{"text-align":"left"}},Nn=t("code",null,"栈",-1),On=t("code",null,"树",-1),Cn=t("code",null,"二叉搜索树",-1),Kn=t("code",null,"3+",-1),Qn={style:{"text-align":"left"}},Rn=t("td",{style:{"text-align":"center"}},"1019",-1),An={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},null,-1),Tn={style:{"text-align":"left"}},Xn=t("code",null,"栈",-1),Yn=t("code",null,"数组",-1),Dn=t("code",null,"链表",-1),Fn=t("code",null,"1+",-1),Gn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"1063",-1),Un={style:{"text-align":"left"}},Wn={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Zn=t("td",{style:{"text-align":"center"}},null,-1),$n={style:{"text-align":"left"}},ts=t("code",null,"栈",-1),es=t("code",null,"数组",-1),os=t("code",null,"单调栈",-1),ls={style:{"text-align":"left"}},ns=t("td",{style:{"text-align":"center"}},"1081",-1),ss={style:{"text-align":"left"}},ds={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},_s={style:{"text-align":"center"}},is={href:"/problem/1081",target:"_blank",rel:"noopener noreferrer"},as={style:{"text-align":"left"}},cs=t("code",null,"栈",-1),rs=t("code",null,"贪心",-1),hs=t("code",null,"字符串",-1),us=t("code",null,"1+",-1),fs={style:{"text-align":"left"}},gs=t("td",{style:{"text-align":"center"}},"1124",-1),ms={style:{"text-align":"left"}},ys={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},xs=t("td",{style:{"text-align":"center"}},null,-1),bs={style:{"text-align":"left"}},ps=t("code",null,"栈",-1),ks=t("code",null,"数组",-1),Ms=t("code",null,"哈希表",-1),Is=t("code",null,"2+",-1),vs={style:{"text-align":"left"}},Hs=t("td",{style:{"text-align":"center"}},"1130",-1),ws={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},Vs=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Es=t("code",null,"栈",-1),Ls=t("code",null,"贪心",-1),js=t("code",null,"数组",-1),Bs=t("code",null,"2+",-1),Ns={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"1475",-1),Cs={style:{"text-align":"left"}},Ks={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},Qs={style:{"text-align":"center"}},Rs={href:"/problem/1475",target:"_blank",rel:"noopener noreferrer"},As={style:{"text-align":"left"}},Ps=t("code",null,"栈",-1),Ss=t("code",null,"数组",-1),Ts=t("code",null,"单调栈",-1),Xs={style:{"text-align":"left"}},Ys=t("td",{style:{"text-align":"center"}},"1504",-1),Ds={style:{"text-align":"left"}},Fs={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Gs=t("td",{style:{"text-align":"center"}},null,-1),Js={style:{"text-align":"left"}},Us=t("code",null,"栈",-1),Ws=t("code",null,"数组",-1),Zs=t("code",null,"动态规划",-1),$s=t("code",null,"2+",-1),td={style:{"text-align":"left"}},ed=t("td",{style:{"text-align":"center"}},"1526",-1),od={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},nd=t("td",{style:{"text-align":"center"}},null,-1),sd={style:{"text-align":"left"}},dd=t("code",null,"栈",-1),_d=t("code",null,"贪心",-1),id=t("code",null,"数组",-1),ad=t("code",null,"2+",-1),cd={style:{"text-align":"left"}},rd=t("td",{style:{"text-align":"center"}},"1574",-1),hd={style:{"text-align":"left"}},ud={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},fd=t("td",{style:{"text-align":"center"}},null,-1),gd={style:{"text-align":"left"}},md=t("code",null,"栈",-1),yd=t("code",null,"数组",-1),xd=t("code",null,"双指针",-1),bd=t("code",null,"2+",-1),pd={style:{"text-align":"left"}},kd=t("td",{style:{"text-align":"center"}},"1673",-1),Md={style:{"text-align":"left"}},Id={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},vd=t("td",{style:{"text-align":"center"}},null,-1),Hd={style:{"text-align":"left"}},wd=t("code",null,"栈",-1),qd=t("code",null,"贪心",-1),Vd=t("code",null,"数组",-1),zd=t("code",null,"1+",-1),Ed={style:{"text-align":"left"}},Ld=t("td",{style:{"text-align":"center"}},"1762",-1),jd={style:{"text-align":"left"}},Bd={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},Nd=t("td",{style:{"text-align":"center"}},null,-1),Od={style:{"text-align":"left"}},Cd=t("code",null,"栈",-1),Kd=t("code",null,"数组",-1),Qd=t("code",null,"单调栈",-1),Rd={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"1776",-1),Pd={style:{"text-align":"left"}},Sd={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},null,-1),Xd={style:{"text-align":"left"}},Yd=t("code",null,"栈",-1),Dd=t("code",null,"数组",-1),Fd=t("code",null,"数学",-1),Gd=t("code",null,"2+",-1),Jd={style:{"text-align":"left"}},Ud=t("td",{style:{"text-align":"center"}},"1793",-1),Wd={style:{"text-align":"left"}},Zd={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"栈",-1),o_=t("code",null,"数组",-1),l_=t("code",null,"双指针",-1),n_=t("code",null,"2+",-1),s_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"1856",-1),__={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},a_=t("td",{style:{"text-align":"center"}},null,-1),c_={style:{"text-align":"left"}},r_=t("code",null,"栈",-1),h_=t("code",null,"数组",-1),u_=t("code",null,"前缀和",-1),f_=t("code",null,"1+",-1),g_={style:{"text-align":"left"}},m_=t("td",{style:{"text-align":"center"}},"1944",-1),y_={style:{"text-align":"left"}},x_={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},b_=t("td",{style:{"text-align":"center"}},null,-1),p_={style:{"text-align":"left"}},k_=t("code",null,"栈",-1),M_=t("code",null,"数组",-1),I_=t("code",null,"单调栈",-1),v_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"1950",-1),w_={style:{"text-align":"left"}},q_={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},V_=t("td",{style:{"text-align":"center"}},null,-1),z_={style:{"text-align":"left"}},E_=t("code",null,"栈",-1),L_=t("code",null,"数组",-1),j_=t("code",null,"单调栈",-1),B_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"1996",-1),O_={style:{"text-align":"left"}},C_={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},K_=t("td",{style:{"text-align":"center"}},null,-1),Q_={style:{"text-align":"left"}},R_=t("code",null,"栈",-1),A_=t("code",null,"贪心",-1),P_=t("code",null,"数组",-1),S_=t("code",null,"2+",-1),T_={style:{"text-align":"left"}},X_=t("td",{style:{"text-align":"center"}},"2030",-1),Y_={style:{"text-align":"left"}},D_={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},F_=t("td",{style:{"text-align":"center"}},null,-1),G_={style:{"text-align":"left"}},J_=t("code",null,"栈",-1),U_=t("code",null,"贪心",-1),W_=t("code",null,"字符串",-1),Z_=t("code",null,"1+",-1),$_={style:{"text-align":"left"}},ti=t("td",{style:{"text-align":"center"}},"2104",-1),ei={style:{"text-align":"left"}},oi={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},li=t("td",{style:{"text-align":"center"}},null,-1),ni={style:{"text-align":"left"}},si=t("code",null,"栈",-1),di=t("code",null,"数组",-1),_i=t("code",null,"单调栈",-1),ii={style:{"text-align":"left"}},ai=t("td",{style:{"text-align":"center"}},"2281",-1),ci={style:{"text-align":"left"}},ri={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},hi=t("td",{style:{"text-align":"center"}},null,-1),ui={style:{"text-align":"left"}},fi=t("code",null,"栈",-1),gi=t("code",null,"数组",-1),mi=t("code",null,"前缀和",-1),yi=t("code",null,"1+",-1),xi={style:{"text-align":"left"}},bi=t("td",{style:{"text-align":"center"}},"2282",-1),pi={style:{"text-align":"left"}},ki={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Mi=t("td",{style:{"text-align":"center"}},null,-1),Ii={style:{"text-align":"left"}},vi=t("code",null,"栈",-1),Hi=t("code",null,"数组",-1),wi=t("code",null,"矩阵",-1),qi=t("code",null,"1+",-1),Vi={style:{"text-align":"left"}},zi=t("td",{style:{"text-align":"center"}},"2289",-1),Ei={style:{"text-align":"left"}},Li={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},ji=t("td",{style:{"text-align":"center"}},null,-1),Bi={style:{"text-align":"left"}},Ni=t("code",null,"栈",-1),Oi=t("code",null,"数组",-1),Ci=t("code",null,"链表",-1),Ki=t("code",null,"1+",-1),Qi={style:{"text-align":"left"}},Ri=t("td",{style:{"text-align":"center"}},"2297",-1),Ai={style:{"text-align":"left"}},Pi={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Si=t("td",{style:{"text-align":"center"}},null,-1),Ti={style:{"text-align":"left"}},Xi=t("code",null,"栈",-1),Yi=t("code",null,"图",-1),Di=t("code",null,"数组",-1),Fi=t("code",null,"3+",-1),Gi={style:{"text-align":"left"}},Ji=t("td",{style:{"text-align":"center"}},"2334",-1),Ui={style:{"text-align":"left"}},Wi={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},Zi=t("td",{style:{"text-align":"center"}},null,-1),$i={style:{"text-align":"left"}},ta=t("code",null,"栈",-1),ea=t("code",null,"并查集",-1),oa=t("code",null,"数组",-1),la=t("code",null,"1+",-1),na={style:{"text-align":"left"}},sa=t("td",{style:{"text-align":"center"}},"2345",-1),da={style:{"text-align":"left"}},_a={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},ia=t("td",{style:{"text-align":"center"}},null,-1),aa={style:{"text-align":"left"}},ca=t("code",null,"栈",-1),ra=t("code",null,"数组",-1),ha=t("code",null,"排序",-1),ua=t("code",null,"1+",-1),fa={style:{"text-align":"left"}},ga=t("td",{style:{"text-align":"center"}},"2355",-1),ma={style:{"text-align":"left"}},ya={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},xa=t("td",{style:{"text-align":"center"}},null,-1),ba={style:{"text-align":"left"}},pa=t("code",null,"栈",-1),ka=t("code",null,"数组",-1),Ma=t("code",null,"动态规划",-1),Ia=t("code",null,"1+",-1),va={style:{"text-align":"left"}},Ha=t("td",{style:{"text-align":"center"}},"2454",-1),wa={style:{"text-align":"left"}},qa={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},Va=t("td",{style:{"text-align":"center"}},null,-1),za={style:{"text-align":"left"}},Ea=t("code",null,"栈",-1),La=t("code",null,"数组",-1),ja=t("code",null,"二分查找",-1),Ba=t("code",null,"3+",-1),Na={style:{"text-align":"left"}},Oa=t("td",{style:{"text-align":"center"}},"2487",-1),Ca={style:{"text-align":"left"}},Ka={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},Qa=t("td",{style:{"text-align":"center"}},null,-1),Ra={style:{"text-align":"left"}},Aa=t("code",null,"栈",-1),Pa=t("code",null,"递归",-1),Sa=t("code",null,"链表",-1),Ta=t("code",null,"1+",-1),Xa={style:{"text-align":"left"}},Ya=t("td",{style:{"text-align":"center"}},"2617",-1),Da={style:{"text-align":"left"}},Fa={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Ga=t("td",{style:{"text-align":"center"}},null,-1),Ja={style:{"text-align":"left"}},Ua=t("code",null,"栈",-1),Wa=t("code",null,"广度优先搜索",-1),Za=t("code",null,"并查集",-1),$a=t("code",null,"5+",-1),tc={style:{"text-align":"left"}},ec=t("td",{style:{"text-align":"center"}},"2736",-1),oc={style:{"text-align":"left"}},lc={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},nc=t("td",{style:{"text-align":"center"}},null,-1),sc={style:{"text-align":"left"}},dc=t("code",null,"栈",-1),_c=t("code",null,"树状数组",-1),ic=t("code",null,"线段树",-1),ac=t("code",null,"4+",-1),cc={style:{"text-align":"left"}},rc=t("td",{style:{"text-align":"center"}},"2818",-1),hc={style:{"text-align":"left"}},uc={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},fc=t("td",{style:{"text-align":"center"}},null,-1),gc={style:{"text-align":"left"}},mc=t("code",null,"栈",-1),yc=t("code",null,"贪心",-1),xc=t("code",null,"数组",-1),bc=t("code",null,"3+",-1),pc={style:{"text-align":"left"}},kc=t("td",{style:{"text-align":"center"}},"2832",-1),Mc={style:{"text-align":"left"}},Ic={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},vc=t("td",{style:{"text-align":"center"}},null,-1),Hc={style:{"text-align":"left"}},wc=t("code",null,"栈",-1),qc=t("code",null,"数组",-1),Vc=t("code",null,"单调栈",-1),zc={style:{"text-align":"left"}},Ec=t("td",{style:{"text-align":"center"}},"2863",-1),Lc={style:{"text-align":"left"}},jc={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},Bc=t("td",{style:{"text-align":"center"}},null,-1),Nc={style:{"text-align":"left"}},Oc=t("code",null,"栈",-1),Cc=t("code",null,"数组",-1),Kc=t("code",null,"排序",-1),Qc=t("code",null,"1+",-1),Rc={style:{"text-align":"left"}},Ac=t("td",{style:{"text-align":"center"}},"2865",-1),Pc={style:{"text-align":"left"}},Sc={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},Tc=t("td",{style:{"text-align":"center"}},null,-1),Xc={style:{"text-align":"left"}},Yc=t("code",null,"栈",-1),Dc=t("code",null,"数组",-1),Fc=t("code",null,"单调栈",-1),Gc={style:{"text-align":"left"}},Jc=t("td",{style:{"text-align":"center"}},"2866",-1),Uc={style:{"text-align":"left"}},Wc={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},Zc=t("td",{style:{"text-align":"center"}},null,-1),$c={style:{"text-align":"left"}},tr=t("code",null,"栈",-1),er=t("code",null,"数组",-1),or=t("code",null,"单调栈",-1),lr={style:{"text-align":"left"}},nr=t("td",{style:{"text-align":"center"}},"2940",-1),sr={style:{"text-align":"left"}},dr={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},_r=t("td",{style:{"text-align":"center"}},null,-1),ir={style:{"text-align":"left"}},ar=t("code",null,"栈",-1),cr=t("code",null,"树状数组",-1),rr=t("code",null,"线段树",-1),hr=t("code",null,"4+",-1),ur={style:{"text-align":"left"}},fr=t("td",{style:{"text-align":"center"}},"2945",-1),gr={style:{"text-align":"left"}},mr={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},yr=t("td",{style:{"text-align":"center"}},null,-1),xr={style:{"text-align":"left"}},br=t("code",null,"栈",-1),pr=t("code",null,"队列",-1),kr=t("code",null,"数组",-1),Mr=t("code",null,"4+",-1),Ir={style:{"text-align":"left"}},vr=t("td",{style:{"text-align":"center"}},"3113",-1),Hr={style:{"text-align":"left"}},wr={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},qr=t("td",{style:{"text-align":"center"}},null,-1),Vr={style:{"text-align":"left"}},zr=t("code",null,"栈",-1),Er=t("code",null,"数组",-1),Lr=t("code",null,"二分查找",-1),jr=t("code",null,"1+",-1),Br={style:{"text-align":"left"}},Nr=t("td",{style:{"text-align":"center"}},"3205",-1),Or={style:{"text-align":"left"}},Cr={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},null,-1),Qr={style:{"text-align":"left"}},Rr=t("code",null,"栈",-1),Ar=t("code",null,"贪心",-1),Pr=t("code",null,"数组",-1),Sr=t("code",null,"2+",-1),Tr={style:{"text-align":"left"}},Xr=t("td",{style:{"text-align":"center"}},"3221",-1),Yr={style:{"text-align":"left"}},Dr={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},Fr=t("td",{style:{"text-align":"center"}},null,-1),Gr={style:{"text-align":"left"}},Jr=t("code",null,"栈",-1),Ur=t("code",null,"贪心",-1),Wr=t("code",null,"数组",-1),Zr=t("code",null,"1+",-1),$r={style:{"text-align":"left"}},th=t("td",{style:{"text-align":"center"}},"3229",-1),eh={style:{"text-align":"left"}},oh={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},lh=t("td",{style:{"text-align":"center"}},null,-1),nh={style:{"text-align":"left"}},sh=t("code",null,"栈",-1),dh=t("code",null,"贪心",-1),_h=t("code",null,"数组",-1),ih=t("code",null,"2+",-1),ah={style:{"text-align":"left"}},ch=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),rh={style:{"text-align":"left"}},hh={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},uh={style:{"text-align":"center"}},fh={href:"/problem/jz_offer_33_1",target:"_blank",rel:"noopener noreferrer"},gh={style:{"text-align":"left"}},mh=t("code",null,"栈",-1),yh=t("code",null,"树",-1),xh=t("code",null,"二叉搜索树",-1),bh=t("code",null,"4+",-1),ph={style:{"text-align":"left"}},kh=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),Mh={style:{"text-align":"left"}},Ih={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},vh=t("td",{style:{"text-align":"center"}},null,-1),Hh={style:{"text-align":"left"}},wh=t("code",null,"栈",-1),qh=t("code",null,"数组",-1),Vh=t("code",null,"单调栈",-1),zh={style:{"text-align":"left"}},Eh=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),Lh={style:{"text-align":"left"}},jh={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},Bh=t("td",{style:{"text-align":"center"}},null,-1),Nh={style:{"text-align":"left"}},Oh=t("code",null,"栈",-1),Ch=t("code",null,"数组",-1),Kh=t("code",null,"单调栈",-1),Qh={style:{"text-align":"left"}},Rh=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),Ah={style:{"text-align":"left"}},Ph={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},Sh=t("td",{style:{"text-align":"center"}},null,-1),Th={style:{"text-align":"left"}},Xh=t("code",null,"栈",-1),Yh=t("code",null,"数组",-1),Dh=t("code",null,"动态规划",-1),Fh=t("code",null,"2+",-1),Gh={style:{"text-align":"left"}},Jh=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),Uh={style:{"text-align":"left"}},Wh={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Zh=t("td",{style:{"text-align":"center"}},null,-1),$h={style:{"text-align":"left"}},tu=t("code",null,"栈",-1),eu=t("code",null,"设计",-1),ou=t("code",null,"单调栈",-1),lu={style:{"text-align":"left"}},nu=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),su={style:{"text-align":"left"}},du={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},_u=t("td",{style:{"text-align":"center"}},null,-1),iu={style:{"text-align":"left"}},au=t("code",null,"栈",-1),cu=t("code",null,"贪心",-1),ru=t("code",null,"数组",-1),hu=t("code",null,"3+",-1),uu={style:{"text-align":"left"}},fu=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),gu={style:{"text-align":"left"}},mu={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},yu=t("td",{style:{"text-align":"center"}},null,-1),xu={style:{"text-align":"left"}},bu=t("code",null,"栈",-1),pu=t("code",null,"数组",-1),ku=t("code",null,"双指针",-1),Mu=t("code",null,"2+",-1),Iu={style:{"text-align":"left"}};function vu(Hu,wu){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),M,o(),e(n,{to:"/outline/tag/queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/outline/tag/binary-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/outline/tag/ordered-set.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/outline/tag/suffix-array.html"},{default:l(()=>[X]),_:1})]),Y,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/outline/tag/backtracking.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/outline/tag/counting.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/outline/tag/simulation.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/outline/tag/randomized.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/outline/tag/database.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/outline/tag/data-stream.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/outline/tag/brainteaser.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/outline/tag/interactive.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/outline/tag/iterator.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/outline/tag/concurrency.html"},{default:l(()=>[Nt]),_:1})])]),Ot,r(" prettier-ignore "),t("table",null,[Ct,t("tbody",null,[t("tr",null,[Kt,t("td",Qt,[t("a",Rt,[o("接雨水"),e(s)])]),t("td",At,[t("a",Pt,[o("[✓]"),e(s)])]),t("td",St,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Tt]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Xt]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[Yt]),_:1}),o(),Dt]),t("td",Ft,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Gt,t("td",Jt,[t("a",Ut,[o("柱状图中最大的矩形"),e(s)])]),t("td",Wt,[t("a",Zt,[o("[✓]"),e(s)])]),t("td",$t,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ee]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[oe]),_:1})]),t("td",le,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ne,t("td",se,[t("a",de,[o("最大矩形"),e(s)])]),t("td",_e,[t("a",ie,[o("[✓]"),e(s)])]),t("td",ae,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[ce]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[re]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[he]),_:1}),o(),ue]),t("td",fe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ge,t("td",me,[t("a",ye,[o("验证二叉搜索树的前序遍历序列"),e(s)])]),xe,t("td",be,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[ke]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[Me]),_:1}),o(),Ie]),t("td",ve,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[He,t("td",we,[t("a",qe,[o("去除重复字母"),e(s)])]),t("td",Ve,[t("a",ze,[o("[✓]"),e(s)])]),t("td",Ee,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Le]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Be]),_:1}),o(),Ne]),t("td",Oe,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ce,t("td",Ke,[t("a",Qe,[o("拼接最大数"),e(s)])]),Re,t("td",Ae,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Pe]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Se]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Te]),_:1}),o(),Xe]),t("td",Ye,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[De,t("td",Fe,[t("a",Ge,[o("移掉 K 位数字"),e(s)])]),Je,t("td",Ue,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[We]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Ze]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[$e]),_:1}),o(),to]),t("td",eo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oo,t("td",lo,[t("a",no,[o("132 模式"),e(s)])]),so,t("td",_o,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[io]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ao]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[co]),_:1}),o(),ro]),t("td",ho,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[o("下一个更大元素 I"),e(s)])]),t("td",mo,[t("a",yo,[o("[✓]"),e(s)])]),t("td",xo,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[bo]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[po]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[ko]),_:1}),o(),Mo]),t("td",Io,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[vo,t("td",Ho,[t("a",wo,[o("下一个更大元素 II"),e(s)])]),t("td",qo,[t("a",Vo,[o("[✓]"),e(s)])]),t("td",zo,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Eo]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Lo]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[jo]),_:1})]),t("td",Bo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[No,t("td",Oo,[t("a",Co,[o("最短无序连续子数组"),e(s)])]),Ko,t("td",Qo,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Ro]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Ao]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Po]),_:1}),o(),So]),t("td",To,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xo,t("td",Yo,[t("a",Do,[o("最大二叉树"),e(s)])]),t("td",Fo,[t("a",Go,[o("[✓]"),e(s)])]),t("td",Jo,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Uo]),_:1}),o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[Wo]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Zo]),_:1}),o(),$o]),t("td",tl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[el,t("td",ol,[t("a",ll,[o("每日温度"),e(s)])]),t("td",nl,[t("a",sl,[o("[✓]"),e(s)])]),t("td",dl,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[_l]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[il]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[al]),_:1})]),t("td",cl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rl,t("td",hl,[t("a",ul,[o("最多能完成排序的块 II"),e(s)])]),fl,t("td",gl,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[ml]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[yl]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[xl]),_:1}),o(),bl]),t("td",pl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[kl,t("td",Ml,[t("a",Il,[o("最多能完成排序的块"),e(s)])]),vl,t("td",Hl,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[wl]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[ql]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Vl]),_:1}),o(),zl]),t("td",El,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ll,t("td",jl,[t("a",Bl,[o("车队"),e(s)])]),Nl,t("td",Ol,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Cl]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Kl]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[Ql]),_:1}),o(),Rl]),t("td",Al,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pl,t("td",Sl,[t("a",Tl,[o("股票价格跨度"),e(s)])]),Xl,t("td",Yl,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Dl]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[Fl]),_:1}),o(),e(n,{to:"/outline/tag/data-stream.html"},{default:l(()=>[Gl]),_:1}),o(),Jl]),t("td",Ul,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wl,t("td",Zl,[t("a",$l,[o("子数组的最小值之和"),e(s)])]),tn,t("td",en,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[on]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ln]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[nn]),_:1}),o(),sn]),t("td",dn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_n,t("td",an,[t("a",cn,[o("最大宽度坡"),e(s)])]),t("td",rn,[t("a",hn,[o("[✓]"),e(s)])]),t("td",un,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[fn]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[gn]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[mn]),_:1})]),t("td",yn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xn,t("td",bn,[t("a",pn,[o("奇偶跳"),e(s)])]),kn,t("td",Mn,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[In]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[vn]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Hn]),_:1}),o(),wn]),t("td",qn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vn,t("td",zn,[t("a",En,[o("前序遍历构造二叉搜索树"),e(s)])]),t("td",Ln,[t("a",jn,[o("[✓]"),e(s)])]),t("td",Bn,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Nn]),_:1}),o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[On]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[Cn]),_:1}),o(),Kn]),t("td",Qn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Rn,t("td",An,[t("a",Pn,[o("链表中的下一个更大节点"),e(s)])]),Sn,t("td",Tn,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Xn]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Yn]),_:1}),o(),e(n,{to:"/outline/tag/linked-list.html"},{default:l(()=>[Dn]),_:1}),o(),Fn]),t("td",Gn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jn,t("td",Un,[t("a",Wn,[o("有效子数组的数目"),e(s)])]),Zn,t("td",$n,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[ts]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[es]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[os]),_:1})]),t("td",ls,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ns,t("td",ss,[t("a",ds,[o("不同字符的最小子序列"),e(s)])]),t("td",_s,[t("a",is,[o("[✓]"),e(s)])]),t("td",as,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[cs]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[rs]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[hs]),_:1}),o(),us]),t("td",fs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gs,t("td",ms,[t("a",ys,[o("表现良好的最长时间段"),e(s)])]),xs,t("td",bs,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[ps]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ks]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[Ms]),_:1}),o(),Is]),t("td",vs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Hs,t("td",ws,[t("a",qs,[o("叶值的最小代价生成树"),e(s)])]),Vs,t("td",zs,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Es]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Ls]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[js]),_:1}),o(),Bs]),t("td",Ns,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Os,t("td",Cs,[t("a",Ks,[o("商品折扣后的最终价格"),e(s)])]),t("td",Qs,[t("a",Rs,[o("[✓]"),e(s)])]),t("td",As,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Ps]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Ss]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[Ts]),_:1})]),t("td",Xs,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ys,t("td",Ds,[t("a",Fs,[o("统计全 1 子矩形"),e(s)])]),Gs,t("td",Js,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Us]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Ws]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Zs]),_:1}),o(),$s]),t("td",td,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ed,t("td",od,[t("a",ld,[o("形成目标数组的子数组最少增加次数"),e(s)])]),nd,t("td",sd,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[dd]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[_d]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[id]),_:1}),o(),ad]),t("td",cd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[rd,t("td",hd,[t("a",ud,[o("删除最短的子数组使剩余数组有序"),e(s)])]),fd,t("td",gd,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[md]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[yd]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[xd]),_:1}),o(),bd]),t("td",pd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[kd,t("td",Md,[t("a",Id,[o("找出最具竞争力的子序列"),e(s)])]),vd,t("td",Hd,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[wd]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[qd]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Vd]),_:1}),o(),zd]),t("td",Ed,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ld,t("td",jd,[t("a",Bd,[o("能看到海景的建筑物"),e(s)])]),Nd,t("td",Od,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Cd]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Kd]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[Qd]),_:1})]),t("td",Rd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ad,t("td",Pd,[t("a",Sd,[o("车队 II"),e(s)])]),Td,t("td",Xd,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Yd]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Dd]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Fd]),_:1}),o(),Gd]),t("td",Jd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ud,t("td",Wd,[t("a",Zd,[o("好子数组的最大分数"),e(s)])]),$d,t("td",t_,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[e_]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[o_]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[l_]),_:1}),o(),n_]),t("td",s_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[d_,t("td",__,[t("a",i_,[o("子数组最小乘积的最大值"),e(s)])]),a_,t("td",c_,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[r_]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[h_]),_:1}),o(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:l(()=>[u_]),_:1}),o(),f_]),t("td",g_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[m_,t("td",y_,[t("a",x_,[o("队列中可以看到的人数"),e(s)])]),b_,t("td",p_,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[k_]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[M_]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[I_]),_:1})]),t("td",v_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[H_,t("td",w_,[t("a",q_,[o("所有子数组最小值中的最大值"),e(s)])]),V_,t("td",z_,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[E_]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[L_]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[j_]),_:1})]),t("td",B_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[N_,t("td",O_,[t("a",C_,[o("游戏中弱角色的数量"),e(s)])]),K_,t("td",Q_,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[R_]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[A_]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[P_]),_:1}),o(),S_]),t("td",T_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[X_,t("td",Y_,[t("a",D_,[o("含特定字母的最小子序列"),e(s)])]),F_,t("td",G_,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[J_]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[U_]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[W_]),_:1}),o(),Z_]),t("td",$_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ti,t("td",ei,[t("a",oi,[o("子数组范围和"),e(s)])]),li,t("td",ni,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[si]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[di]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[_i]),_:1})]),t("td",ii,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ai,t("td",ci,[t("a",ri,[o("巫师的总力量和"),e(s)])]),hi,t("td",ui,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[fi]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[gi]),_:1}),o(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:l(()=>[mi]),_:1}),o(),yi]),t("td",xi,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bi,t("td",pi,[t("a",ki,[o("在一个网格中可以看到的人数"),e(s)])]),Mi,t("td",Ii,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[vi]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Hi]),_:1}),o(),e(n,{to:"/outline/tag/matrix.html"},{default:l(()=>[wi]),_:1}),o(),qi]),t("td",Vi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zi,t("td",Ei,[t("a",Li,[o("使数组按非递减顺序排列"),e(s)])]),ji,t("td",Bi,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Ni]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Oi]),_:1}),o(),e(n,{to:"/outline/tag/linked-list.html"},{default:l(()=>[Ci]),_:1}),o(),Ki]),t("td",Qi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ri,t("td",Ai,[t("a",Pi,[o("跳跃游戏 VIII"),e(s)])]),Si,t("td",Ti,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Xi]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Yi]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Di]),_:1}),o(),Fi]),t("td",Gi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ji,t("td",Ui,[t("a",Wi,[o("元素值大于变化阈值的子数组"),e(s)])]),Zi,t("td",$i,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[ta]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[ea]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[oa]),_:1}),o(),la]),t("td",na,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sa,t("td",da,[t("a",_a,[o("寻找可见山的数量"),e(s)])]),ia,t("td",aa,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[ca]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ra]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[ha]),_:1}),o(),ua]),t("td",fa,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ga,t("td",ma,[t("a",ya,[o("你能拿走的最大图书数量"),e(s)])]),xa,t("td",ba,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[pa]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ka]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ma]),_:1}),o(),Ia]),t("td",va,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ha,t("td",wa,[t("a",qa,[o("下一个更大元素 IV"),e(s)])]),Va,t("td",za,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Ea]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[La]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[ja]),_:1}),o(),Ba]),t("td",Na,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Oa,t("td",Ca,[t("a",Ka,[o("从链表中移除节点"),e(s)])]),Qa,t("td",Ra,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Aa]),_:1}),o(),e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[Pa]),_:1}),o(),e(n,{to:"/outline/tag/linked-list.html"},{default:l(()=>[Sa]),_:1}),o(),Ta]),t("td",Xa,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ya,t("td",Da,[t("a",Fa,[o("网格图中最少访问的格子数"),e(s)])]),Ga,t("td",Ja,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Ua]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Wa]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[Za]),_:1}),o(),$a]),t("td",tc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ec,t("td",oc,[t("a",lc,[o("最大和查询"),e(s)])]),nc,t("td",sc,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[dc]),_:1}),o(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:l(()=>[_c]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[ic]),_:1}),o(),ac]),t("td",cc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[rc,t("td",hc,[t("a",uc,[o("操作使得分最大"),e(s)])]),fc,t("td",gc,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[mc]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[yc]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[xc]),_:1}),o(),bc]),t("td",pc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[kc,t("td",Mc,[t("a",Ic,[o("每个元素为最大值的最大范围"),e(s)])]),vc,t("td",Hc,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[wc]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[qc]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[Vc]),_:1})]),t("td",zc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ec,t("td",Lc,[t("a",jc,[o("最长半递减子数组的长度"),e(s)])]),Bc,t("td",Nc,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Oc]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Cc]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[Kc]),_:1}),o(),Qc]),t("td",Rc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ac,t("td",Pc,[t("a",Sc,[o("美丽塔 I"),e(s)])]),Tc,t("td",Xc,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Yc]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Dc]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[Fc]),_:1})]),t("td",Gc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jc,t("td",Uc,[t("a",Wc,[o("美丽塔 II"),e(s)])]),Zc,t("td",$c,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[tr]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[er]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[or]),_:1})]),t("td",lr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nr,t("td",sr,[t("a",dr,[o("找到 Alice 和 Bob 可以相遇的建筑"),e(s)])]),_r,t("td",ir,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[ar]),_:1}),o(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:l(()=>[cr]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[rr]),_:1}),o(),hr]),t("td",ur,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[fr,t("td",gr,[t("a",mr,[o("找到最大非递减数组的长度"),e(s)])]),yr,t("td",xr,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[br]),_:1}),o(),e(n,{to:"/outline/tag/queue.html"},{default:l(()=>[pr]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[kr]),_:1}),o(),Mr]),t("td",Ir,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vr,t("td",Hr,[t("a",wr,[o("边界元素是最大值的子数组数目"),e(s)])]),qr,t("td",Vr,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[zr]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Er]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[Lr]),_:1}),o(),jr]),t("td",Br,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Nr,t("td",Or,[t("a",Cr,[o("最大数组跳跃得分 I"),e(s)])]),Kr,t("td",Qr,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Rr]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Ar]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Pr]),_:1}),o(),Sr]),t("td",Tr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xr,t("td",Yr,[t("a",Dr,[o("最大数组跳跃得分 II"),e(s)])]),Fr,t("td",Gr,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Jr]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Ur]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Wr]),_:1}),o(),Zr]),t("td",$r,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[th,t("td",eh,[t("a",oh,[o("使数组等于目标数组所需的最少操作次数"),e(s)])]),lh,t("td",nh,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[sh]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[dh]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[_h]),_:1}),o(),ih]),t("td",ah,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ch,t("td",rh,[t("a",hh,[o("二叉搜索树的后序遍历序列"),e(s)])]),t("td",uh,[t("a",fh,[o("[✓]"),e(s)])]),t("td",gh,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[mh]),_:1}),o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[yh]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[xh]),_:1}),o(),bh]),t("td",ph,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[kh,t("td",Mh,[t("a",Ih,[o("每日温度"),e(s)])]),vh,t("td",Hh,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[wh]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[qh]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[Vh]),_:1})]),t("td",zh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Eh,t("td",Lh,[t("a",jh,[o("直方图最大矩形面积"),e(s)])]),Bh,t("td",Nh,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Oh]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Ch]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[Kh]),_:1})]),t("td",Qh,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Rh,t("td",Ah,[t("a",Ph,[o("矩阵中最大的矩形"),e(s)])]),Sh,t("td",Th,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Xh]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Yh]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Dh]),_:1}),o(),Fh]),t("td",Gh,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Jh,t("td",Uh,[t("a",Wh,[o("栈排序"),e(s)])]),Zh,t("td",$h,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[tu]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[eu]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[ou]),_:1})]),t("td",lu,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nu,t("td",su,[t("a",du,[o("部分排序"),e(s)])]),_u,t("td",iu,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[au]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[cu]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ru]),_:1}),o(),hu]),t("td",uu,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fu,t("td",gu,[t("a",mu,[o("直方图的水量"),e(s)])]),yu,t("td",xu,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[bu]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[pu]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[ku]),_:1}),o(),Mu]),t("td",Iu,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])])])])])}const Vu=i(h,[["render",vu],["__file","monotonic-stack.html.vue"]]);export{Vu as default};
