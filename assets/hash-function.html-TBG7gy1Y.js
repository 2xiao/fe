import{_ as i,r as _,o as a,c,a as t,b as e,w as o,d as l,f as r}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"哈希函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#哈希函数","aria-hidden":"true"},"#"),l(" 哈希函数")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),I=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),E=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),N=t("code",null,"二叉树",-1),z=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),T=t("code",null,"强连通分量",-1),j=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),U=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),O=t("p",null,[t("strong",null,"算法")],-1),P=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("span",{class:"blue"},"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),It=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Et=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Nt=t("code",null,"数据流",-1),zt=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Tt=t("td",{style:{"text-align":"center"}},"187",-1),jt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/repeated-dna-sequences",target:"_blank",rel:"noopener noreferrer"},Dt=t("td",{style:{"text-align":"center"}},null,-1),Ft={style:{"text-align":"left"}},Ut=t("code",null,"位运算",-1),Gt=t("code",null,"哈希表",-1),Jt=t("code",null,"字符串",-1),Ot=t("code",null,"3+",-1),Pt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"214",-1),St={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"字符串",-1),$t=t("code",null,"字符串匹配",-1),te=t("code",null,"哈希函数",-1),ee=t("code",null,"1+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"535",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/encode-and-decode-tinyurl",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),_e={style:{"text-align":"left"}},ie=t("code",null,"设计",-1),ae=t("code",null,"哈希表",-1),ce=t("code",null,"字符串",-1),re=t("code",null,"1+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"572",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={href:"/problem/0572",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"left"}},be=t("code",null,"树",-1),pe=t("code",null,"深度优先搜索",-1),ke=t("code",null,"二叉树",-1),Ie=t("code",null,"2+",-1),we={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"694",-1),Me={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},qe=t("td",{style:{"text-align":"center"}},null,-1),Ee={style:{"text-align":"left"}},Le=t("code",null,"深度优先搜索",-1),Ne=t("code",null,"广度优先搜索",-1),ze=t("code",null,"并查集",-1),Ve=t("code",null,"2+",-1),Be={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"705",-1),Re={style:{"text-align":"left"}},Ke={href:"https://leetcode.com/problems/design-hashset",target:"_blank",rel:"noopener noreferrer"},Te={style:{"text-align":"center"}},je={href:"/problem/0705",target:"_blank",rel:"noopener noreferrer"},Ae={style:{"text-align":"left"}},De=t("code",null,"设计",-1),Fe=t("code",null,"数组",-1),Ue=t("code",null,"哈希表",-1),Ge=t("code",null,"2+",-1),Je={style:{"text-align":"left"}},Oe=t("td",{style:{"text-align":"center"}},"706",-1),Pe={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/design-hashmap",target:"_blank",rel:"noopener noreferrer"},Se={style:{"text-align":"center"}},We={href:"/problem/0706",target:"_blank",rel:"noopener noreferrer"},Xe={style:{"text-align":"left"}},Ye=t("code",null,"设计",-1),Ze=t("code",null,"数组",-1),$e=t("code",null,"哈希表",-1),tl=t("code",null,"2+",-1),el={style:{"text-align":"left"}},ll=t("td",{style:{"text-align":"center"}},"711",-1),ol={style:{"text-align":"left"}},nl={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},sl=t("td",{style:{"text-align":"center"}},null,-1),dl={style:{"text-align":"left"}},_l=t("code",null,"深度优先搜索",-1),il=t("code",null,"广度优先搜索",-1),al=t("code",null,"并查集",-1),cl=t("code",null,"2+",-1),rl={style:{"text-align":"left"}},hl=t("td",{style:{"text-align":"center"}},"718",-1),ul={style:{"text-align":"left"}},fl={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},gl=t("td",{style:{"text-align":"center"}},null,-1),ml={style:{"text-align":"left"}},yl=t("code",null,"数组",-1),xl=t("code",null,"二分查找",-1),bl=t("code",null,"动态规划",-1),pl=t("code",null,"3+",-1),kl={style:{"text-align":"left"}},Il=t("td",{style:{"text-align":"center"}},"1044",-1),wl={style:{"text-align":"left"}},Hl={href:"https://leetcode.com/problems/longest-duplicate-substring",target:"_blank",rel:"noopener noreferrer"},Ml=t("td",{style:{"text-align":"center"}},null,-1),vl={style:{"text-align":"left"}},ql=t("code",null,"字符串",-1),El=t("code",null,"二分查找",-1),Ll=t("code",null,"后缀数组",-1),Nl=t("code",null,"3+",-1),zl={style:{"text-align":"left"}},Vl=t("td",{style:{"text-align":"center"}},"1062",-1),Bl={style:{"text-align":"left"}},Cl={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Rl=t("td",{style:{"text-align":"center"}},null,-1),Kl={style:{"text-align":"left"}},Tl=t("code",null,"字符串",-1),jl=t("code",null,"二分查找",-1),Al=t("code",null,"动态规划",-1),Dl=t("code",null,"3+",-1),Fl={style:{"text-align":"left"}},Ul=t("td",{style:{"text-align":"center"}},"1147",-1),Gl={style:{"text-align":"left"}},Jl={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},Ol=t("td",{style:{"text-align":"center"}},null,-1),Pl={style:{"text-align":"left"}},Ql=t("code",null,"贪心",-1),Sl=t("code",null,"双指针",-1),Wl=t("code",null,"字符串",-1),Xl=t("code",null,"3+",-1),Yl={style:{"text-align":"left"}},Zl=t("td",{style:{"text-align":"center"}},"1316",-1),$l={style:{"text-align":"left"}},to={href:"https://leetcode.com/problems/distinct-echo-substrings",target:"_blank",rel:"noopener noreferrer"},eo=t("td",{style:{"text-align":"center"}},null,-1),lo={style:{"text-align":"left"}},oo=t("code",null,"字典树",-1),no=t("code",null,"字符串",-1),so=t("code",null,"哈希函数",-1),_o=t("code",null,"1+",-1),io={style:{"text-align":"left"}},ao=t("td",{style:{"text-align":"center"}},"1392",-1),co={style:{"text-align":"left"}},ro={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},null,-1),uo={style:{"text-align":"left"}},fo=t("code",null,"字符串",-1),go=t("code",null,"字符串匹配",-1),mo=t("code",null,"哈希函数",-1),yo=t("code",null,"1+",-1),xo={style:{"text-align":"left"}},bo=t("td",{style:{"text-align":"center"}},"1461",-1),po={style:{"text-align":"left"}},ko={href:"https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k",target:"_blank",rel:"noopener noreferrer"},Io=t("td",{style:{"text-align":"center"}},null,-1),wo={style:{"text-align":"left"}},Ho=t("code",null,"位运算",-1),Mo=t("code",null,"哈希表",-1),vo=t("code",null,"字符串",-1),qo=t("code",null,"2+",-1),Eo={style:{"text-align":"left"}},Lo=t("td",{style:{"text-align":"center"}},"1554",-1),No={style:{"text-align":"left"}},zo={href:"https://leetcode.com/problems/strings-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},Vo=t("td",{style:{"text-align":"center"}},null,-1),Bo={style:{"text-align":"left"}},Co=t("code",null,"哈希表",-1),Ro=t("code",null,"字符串",-1),Ko=t("code",null,"哈希函数",-1),To=t("code",null,"1+",-1),jo={style:{"text-align":"left"}},Ao=t("td",{style:{"text-align":"center"}},"1698",-1),Do={style:{"text-align":"left"}},Fo={href:"https://leetcode.com/problems/number-of-distinct-substrings-in-a-string",target:"_blank",rel:"noopener noreferrer"},Uo=t("td",{style:{"text-align":"center"}},null,-1),Go={style:{"text-align":"left"}},Jo=t("code",null,"字典树",-1),Oo=t("code",null,"字符串",-1),Po=t("code",null,"后缀数组",-1),Qo=t("code",null,"2+",-1),So={style:{"text-align":"left"}},Wo=t("td",{style:{"text-align":"center"}},"1923",-1),Xo={style:{"text-align":"left"}},Yo={href:"https://leetcode.com/problems/longest-common-subpath",target:"_blank",rel:"noopener noreferrer"},Zo=t("td",{style:{"text-align":"center"}},null,-1),$o={style:{"text-align":"left"}},tn=t("code",null,"数组",-1),en=t("code",null,"二分查找",-1),ln=t("code",null,"后缀数组",-1),on=t("code",null,"2+",-1),nn={style:{"text-align":"left"}},sn=t("td",{style:{"text-align":"center"}},"1948",-1),dn={style:{"text-align":"left"}},_n={href:"https://leetcode.com/problems/delete-duplicate-folders-in-system",target:"_blank",rel:"noopener noreferrer"},an=t("td",{style:{"text-align":"center"}},null,-1),cn={style:{"text-align":"left"}},rn=t("code",null,"字典树",-1),hn=t("code",null,"数组",-1),un=t("code",null,"哈希表",-1),fn=t("code",null,"2+",-1),gn={style:{"text-align":"left"}},mn=t("td",{style:{"text-align":"center"}},"1960",-1),yn={style:{"text-align":"left"}},xn={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},bn=t("td",{style:{"text-align":"center"}},null,-1),pn={style:{"text-align":"left"}},kn=t("code",null,"字符串",-1),In=t("code",null,"哈希函数",-1),wn=t("code",null,"滚动哈希",-1),Hn={style:{"text-align":"left"}},Mn=t("td",{style:{"text-align":"center"}},"2156",-1),vn={style:{"text-align":"left"}},qn={href:"https://leetcode.com/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},En=t("td",{style:{"text-align":"center"}},null,-1),Ln={style:{"text-align":"left"}},Nn=t("code",null,"字符串",-1),zn=t("code",null,"滑动窗口",-1),Vn=t("code",null,"哈希函数",-1),Bn=t("code",null,"1+",-1),Cn={style:{"text-align":"left"}},Rn=t("td",{style:{"text-align":"center"}},"2168",-1),Kn={style:{"text-align":"left"}},Tn={href:"https://leetcode.com/problems/unique-substrings-with-equal-digit-frequency",target:"_blank",rel:"noopener noreferrer"},jn=t("td",{style:{"text-align":"center"}},null,-1),An={style:{"text-align":"left"}},Dn=t("code",null,"哈希表",-1),Fn=t("code",null,"字符串",-1),Un=t("code",null,"计数",-1),Gn=t("code",null,"2+",-1),Jn={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"center"}},"2223",-1),Pn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},null,-1),Wn={style:{"text-align":"left"}},Xn=t("code",null,"字符串",-1),Yn=t("code",null,"二分查找",-1),Zn=t("code",null,"字符串匹配",-1),$n=t("code",null,"3+",-1),ts={style:{"text-align":"left"}},es=t("td",{style:{"text-align":"center"}},"2261",-1),ls={style:{"text-align":"left"}},os={href:"https://leetcode.com/problems/k-divisible-elements-subarrays",target:"_blank",rel:"noopener noreferrer"},ns={style:{"text-align":"center"}},ss={href:"/problem/2261",target:"_blank",rel:"noopener noreferrer"},ds={style:{"text-align":"left"}},_s=t("code",null,"字典树",-1),is=t("code",null,"数组",-1),as=t("code",null,"哈希表",-1),cs=t("code",null,"3+",-1),rs={style:{"text-align":"left"}},hs=t("td",{style:{"text-align":"center"}},"2430",-1),us={style:{"text-align":"left"}},fs={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},gs=t("td",{style:{"text-align":"center"}},null,-1),ms={style:{"text-align":"left"}},ys=t("code",null,"字符串",-1),xs=t("code",null,"动态规划",-1),bs=t("code",null,"字符串匹配",-1),ps=t("code",null,"2+",-1),ks={style:{"text-align":"left"}},Is=t("td",{style:{"text-align":"center"}},"3006",-1),ws={style:{"text-align":"left"}},Hs={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},Ms=t("td",{style:{"text-align":"center"}},null,-1),vs={style:{"text-align":"left"}},qs=t("code",null,"双指针",-1),Es=t("code",null,"字符串",-1),Ls=t("code",null,"二分查找",-1),Ns=t("code",null,"3+",-1),zs={style:{"text-align":"left"}},Vs=t("td",{style:{"text-align":"center"}},"3008",-1),Bs={style:{"text-align":"left"}},Cs={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},Rs=t("td",{style:{"text-align":"center"}},null,-1),Ks={style:{"text-align":"left"}},Ts=t("code",null,"双指针",-1),js=t("code",null,"字符串",-1),As=t("code",null,"二分查找",-1),Ds=t("code",null,"3+",-1),Fs={style:{"text-align":"left"}},Us=t("td",{style:{"text-align":"center"}},"3023",-1),Gs={style:{"text-align":"left"}},Js={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Os=t("td",{style:{"text-align":"center"}},null,-1),Ps={style:{"text-align":"left"}},Qs=t("code",null,"数组",-1),Ss=t("code",null,"字符串匹配",-1),Ws=t("code",null,"滑动窗口",-1),Xs=t("code",null,"2+",-1),Ys={style:{"text-align":"left"}},Zs=t("td",{style:{"text-align":"center"}},"3029",-1),$s={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},null,-1),ld={style:{"text-align":"left"}},od=t("code",null,"字符串",-1),nd=t("code",null,"字符串匹配",-1),sd=t("code",null,"哈希函数",-1),dd=t("code",null,"1+",-1),_d={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"3031",-1),ad={style:{"text-align":"left"}},cd={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},rd=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},ud=t("code",null,"字符串",-1),fd=t("code",null,"字符串匹配",-1),gd=t("code",null,"哈希函数",-1),md=t("code",null,"1+",-1),yd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"3034",-1),bd={style:{"text-align":"left"}},pd={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},null,-1),Id={style:{"text-align":"left"}},wd=t("code",null,"数组",-1),Hd=t("code",null,"字符串匹配",-1),Md=t("code",null,"哈希函数",-1),vd=t("code",null,"1+",-1),qd={style:{"text-align":"left"}},Ed=t("td",{style:{"text-align":"center"}},"3036",-1),Ld={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Bd=t("code",null,"数组",-1),Cd=t("code",null,"字符串匹配",-1),Rd=t("code",null,"哈希函数",-1),Kd=t("code",null,"1+",-1),Td={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"3037",-1),Ad={style:{"text-align":"left"}},Dd={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Ud={style:{"text-align":"left"}},Gd=t("code",null,"数组",-1),Jd=t("code",null,"字符串匹配",-1),Od=t("code",null,"滑动窗口",-1),Pd=t("code",null,"2+",-1),Qd={style:{"text-align":"left"}},Sd=t("td",{style:{"text-align":"center"}},"3042",-1),Wd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Yd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},$d=t("code",null,"字典树",-1),t_=t("code",null,"数组",-1),e_=t("code",null,"字符串",-1),l_=t("code",null,"3+",-1),o_={style:{"text-align":"left"}},n_=t("td",{style:{"text-align":"center"}},"3045",-1),s_={style:{"text-align":"left"}},d_={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},a_=t("code",null,"字典树",-1),c_=t("code",null,"数组",-1),r_=t("code",null,"字符串",-1),h_=t("code",null,"3+",-1),u_={style:{"text-align":"left"}},f_=t("td",{style:{"text-align":"center"}},"3135",-1),g_={style:{"text-align":"left"}},m_={href:"https://leetcode.com/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},y_=t("td",{style:{"text-align":"center"}},null,-1),x_={style:{"text-align":"left"}},b_=t("code",null,"字符串",-1),p_=t("code",null,"二分查找",-1),k_=t("code",null,"动态规划",-1),I_=t("code",null,"2+",-1),w_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"3291",-1),M_={style:{"text-align":"left"}},v_={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},q_=t("td",{style:{"text-align":"center"}},null,-1),E_={style:{"text-align":"left"}},L_=t("code",null,"字典树",-1),N_=t("code",null,"线段树",-1),z_=t("code",null,"数组",-1),V_=t("code",null,"6+",-1),B_={style:{"text-align":"left"}},C_=t("td",{style:{"text-align":"center"}},"3292",-1),R_={style:{"text-align":"left"}},K_={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},T_=t("td",{style:{"text-align":"center"}},null,-1),j_={style:{"text-align":"left"}},A_=t("code",null,"线段树",-1),D_=t("code",null,"数组",-1),F_=t("code",null,"字符串",-1),U_=t("code",null,"5+",-1),G_={style:{"text-align":"left"}},J_=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),O_={style:{"text-align":"left"}},P_={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},null,-1),S_={style:{"text-align":"left"}},W_=t("code",null,"树",-1),X_=t("code",null,"深度优先搜索",-1),Y_=t("code",null,"二叉树",-1),Z_=t("code",null,"2+",-1),$_={style:{"text-align":"left"}},ti=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),ei={style:{"text-align":"left"}},li={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},oi=t("td",{style:{"text-align":"center"}},null,-1),ni={style:{"text-align":"left"}},si=t("code",null,"字典树",-1),di=t("code",null,"数组",-1),_i=t("code",null,"哈希表",-1),ii=t("code",null,"4+",-1),ai={style:{"text-align":"left"}};function ci(ri,hi){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[J]),_:1})]),O,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),ft,l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),Rt,r(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Tt,t("td",jt,[t("a",At,[l("重复的DNA序列"),e(s)])]),Dt,t("td",Ft,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Jt]),_:1}),l(),Ot]),t("td",Pt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qt,t("td",St,[t("a",Wt,[l("最短回文串"),e(s)])]),Xt,t("td",Yt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("TinyURL 的加密与解密"),e(s)])]),de,t("td",_e,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ce]),_:1}),l(),re]),t("td",he,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("另一棵树的子树"),e(s)])]),t("td",me,[t("a",ye,[l("[✓]"),e(s)])]),t("td",xe,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pe]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ke]),_:1}),l(),Ie]),t("td",we,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[He,t("td",Me,[t("a",ve,[l("不同岛屿的数量"),e(s)])]),qe,t("td",Ee,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ze]),_:1}),l(),Ve]),t("td",Be,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ce,t("td",Re,[t("a",Ke,[l("设计哈希集合"),e(s)])]),t("td",Te,[t("a",je,[l("[✓]"),e(s)])]),t("td",Ae,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[De]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fe]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ue]),_:1}),l(),Ge]),t("td",Je,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Oe,t("td",Pe,[t("a",Qe,[l("设计哈希映射"),e(s)])]),t("td",Se,[t("a",We,[l("[✓]"),e(s)])]),t("td",Xe,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ye]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ze]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[$e]),_:1}),l(),tl]),t("td",el,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ll,t("td",ol,[t("a",nl,[l("不同岛屿的数量 II"),e(s)])]),sl,t("td",dl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_l]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[il]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[al]),_:1}),l(),cl]),t("td",rl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hl,t("td",ul,[t("a",fl,[l("最长重复子数组"),e(s)])]),gl,t("td",ml,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[xl]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[bl]),_:1}),l(),pl]),t("td",kl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Il,t("td",wl,[t("a",Hl,[l("最长重复子串"),e(s)])]),Ml,t("td",vl,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[El]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[Ll]),_:1}),l(),Nl]),t("td",zl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vl,t("td",Bl,[t("a",Cl,[l("最长重复子串"),e(s)])]),Rl,t("td",Kl,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[jl]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Al]),_:1}),l(),Dl]),t("td",Fl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ul,t("td",Gl,[t("a",Jl,[l("段式回文"),e(s)])]),Ol,t("td",Pl,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ql]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Sl]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Wl]),_:1}),l(),Xl]),t("td",Yl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zl,t("td",$l,[t("a",to,[l("不同的循环子字符串"),e(s)])]),eo,t("td",lo,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[oo]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[no]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[so]),_:1}),l(),_o]),t("td",io,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ao,t("td",co,[t("a",ro,[l("最长快乐前缀"),e(s)])]),ho,t("td",uo,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[fo]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[go]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[mo]),_:1}),l(),yo]),t("td",xo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bo,t("td",po,[t("a",ko,[l("检查一个字符串是否包含所有长度为 K 的二进制子串"),e(s)])]),Io,t("td",wo,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Ho]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Mo]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[vo]),_:1}),l(),qo]),t("td",Eo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lo,t("td",No,[t("a",zo,[l("只有一个不同字符的字符串"),e(s)])]),Vo,t("td",Bo,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Co]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ro]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[Ko]),_:1}),l(),To]),t("td",jo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ao,t("td",Do,[t("a",Fo,[l("字符串的不同子字符串个数"),e(s)])]),Uo,t("td",Go,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Jo]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Oo]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[Po]),_:1}),l(),Qo]),t("td",So,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wo,t("td",Xo,[t("a",Yo,[l("最长公共子路径"),e(s)])]),Zo,t("td",$o,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[tn]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[en]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[ln]),_:1}),l(),on]),t("td",nn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sn,t("td",dn,[t("a",_n,[l("删除系统中的重复文件夹"),e(s)])]),an,t("td",cn,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[rn]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hn]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[un]),_:1}),l(),fn]),t("td",gn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mn,t("td",yn,[t("a",xn,[l("两个回文子字符串长度的最大乘积"),e(s)])]),bn,t("td",pn,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[kn]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[In]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[wn]),_:1})]),t("td",Hn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mn,t("td",vn,[t("a",qn,[l("查找给定哈希值的子串"),e(s)])]),En,t("td",Ln,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Nn]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[zn]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[Vn]),_:1}),l(),Bn]),t("td",Cn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rn,t("td",Kn,[t("a",Tn,[l("每个数字的频率都相同的独特子字符串的数量"),e(s)])]),jn,t("td",An,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Dn]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Fn]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[Un]),_:1}),l(),Gn]),t("td",Jn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[On,t("td",Pn,[t("a",Qn,[l("构造字符串的总得分和"),e(s)])]),Sn,t("td",Wn,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Xn]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Yn]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[Zn]),_:1}),l(),$n]),t("td",ts,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[es,t("td",ls,[t("a",os,[l("含最多 K 个可整除元素的子数组"),e(s)])]),t("td",ns,[t("a",ss,[l("[✓]"),e(s)])]),t("td",ds,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[_s]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[is]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[as]),_:1}),l(),cs]),t("td",rs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hs,t("td",us,[t("a",fs,[l("对字母串可执行的最大删除数"),e(s)])]),gs,t("td",ms,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ys]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[xs]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[bs]),_:1}),l(),ps]),t("td",ks,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Is,t("td",ws,[t("a",Hs,[l("找出数组中的美丽下标 I"),e(s)])]),Ms,t("td",vs,[e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[qs]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Es]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Ls]),_:1}),l(),Ns]),t("td",zs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vs,t("td",Bs,[t("a",Cs,[l("找出数组中的美丽下标 II"),e(s)])]),Rs,t("td",Ks,[e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Ts]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[js]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[As]),_:1}),l(),Ds]),t("td",Fs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Us,t("td",Gs,[t("a",Js,[l("在无限流中寻找模式 I"),e(s)])]),Os,t("td",Ps,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qs]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[Ss]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[Ws]),_:1}),l(),Xs]),t("td",Ys,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zs,t("td",$s,[t("a",td,[l("将单词恢复初始状态所需的最短时间 I"),e(s)])]),ed,t("td",ld,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[od]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[sd]),_:1}),l(),dd]),t("td",_d,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",cd,[l("将单词恢复初始状态所需的最短时间 II"),e(s)])]),rd,t("td",hd,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ud]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[gd]),_:1}),l(),md]),t("td",yd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xd,t("td",bd,[t("a",pd,[l("匹配模式数组的子数组数目 I"),e(s)])]),kd,t("td",Id,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wd]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[Hd]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[Md]),_:1}),l(),vd]),t("td",qd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ed,t("td",Ld,[t("a",Nd,[l("匹配模式数组的子数组数目 II"),e(s)])]),zd,t("td",Vd,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Bd]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[Rd]),_:1}),l(),Kd]),t("td",Td,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jd,t("td",Ad,[t("a",Dd,[l("在无限流中寻找模式 II"),e(s)])]),Fd,t("td",Ud,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gd]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[Od]),_:1}),l(),Pd]),t("td",Qd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sd,t("td",Wd,[t("a",Xd,[l("统计前后缀下标对 I"),e(s)])]),Yd,t("td",Zd,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[t_]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[e_]),_:1}),l(),l_]),t("td",o_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[n_,t("td",s_,[t("a",d_,[l("统计前后缀下标对 II"),e(s)])]),__,t("td",i_,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[c_]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[r_]),_:1}),l(),h_]),t("td",u_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f_,t("td",g_,[t("a",m_,[l("通过添加或删除结尾字符来同化字符串"),e(s)])]),y_,t("td",x_,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[b_]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[p_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[k_]),_:1}),l(),I_]),t("td",w_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H_,t("td",M_,[t("a",v_,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),q_,t("td",E_,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[L_]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[N_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[z_]),_:1}),l(),V_]),t("td",B_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C_,t("td",R_,[t("a",K_,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),T_,t("td",j_,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[A_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[D_]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[F_]),_:1}),l(),U_]),t("td",G_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J_,t("td",O_,[t("a",P_,[l("检查子树"),e(s)])]),Q_,t("td",S_,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[W_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Y_]),_:1}),l(),Z_]),t("td",$_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ti,t("td",ei,[t("a",li,[l("恢复空格"),e(s)])]),oi,t("td",ni,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[si]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[di]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[_i]),_:1}),l(),ii]),t("td",ai,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const fi=i(h,[["render",ci],["__file","hash-function.html.vue"]]);export{fi as default};
