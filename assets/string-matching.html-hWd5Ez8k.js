import{_ as a,r as _,o as c,c as i,a as t,d as e,w as o,b as l,f as r}from"./app-ZVJfwurD.js";const h={},u=t("h1",{id:"字符串匹配",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字符串匹配","aria-hidden":"true"},"#"),l(" 字符串匹配")],-1),g=t("summary",null,"全部标签",-1),f=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),E=t("code",null,"字符串",-1),M=t("span",{class:"blue"},"字符串匹配",-1),q=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),N=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),z=t("code",null,"拓扑排序",-1),R=t("code",null,"最短路",-1),j=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),J=t("code",null,"树状数组",-1),K=t("code",null,"后缀数组",-1),O=t("p",null,[t("strong",null,"算法")],-1),P=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),U=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),X=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ut=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ft=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),Et=t("code",null,"拒绝采样",-1),Mt=t("code",null,"数据库",-1),qt=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Nt=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),zt=t("hr",null,null,-1),Rt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),jt=t("td",{style:{"text-align":"center"}},"28",-1),Tt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"center"}},Ft={style:{"text-align":"left"}},Gt=t("code",null,"双指针",-1),Jt=t("code",null,"字符串",-1),Kt=t("code",null,"字符串匹配",-1),Ot={style:{"text-align":"left"}},Pt=t("td",{style:{"text-align":"center"}},"214",-1),Qt={style:{"text-align":"left"}},St={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Ut=t("td",{style:{"text-align":"center"}},null,-1),Wt={style:{"text-align":"left"}},Xt=t("code",null,"字符串",-1),Yt=t("code",null,"字符串匹配",-1),Zt=t("code",null,"哈希函数",-1),$t=t("code",null,"1+",-1),te={style:{"text-align":"left"}},ee=t("td",{style:{"text-align":"center"}},"459",-1),le={style:{"text-align":"left"}},oe={href:"https://leetcode.com/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},ne={style:{"text-align":"center"}},se={style:{"text-align":"left"}},de=t("code",null,"字符串",-1),_e=t("code",null,"字符串匹配",-1),ae={style:{"text-align":"left"}},ce=t("td",{style:{"text-align":"center"}},"572",-1),ie={style:{"text-align":"left"}},re={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},he={style:{"text-align":"center"}},ue={style:{"text-align":"left"}},ge=t("code",null,"树",-1),fe=t("code",null,"深度优先搜索",-1),me=t("code",null,"二叉树",-1),ye=t("code",null,"2+",-1),xe={style:{"text-align":"left"}},pe=t("td",{style:{"text-align":"center"}},"616",-1),be={style:{"text-align":"left"}},ke={href:"https://leetcode.com/problems/add-bold-tag-in-string",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),Ie={style:{"text-align":"left"}},He=t("code",null,"字典树",-1),ve=t("code",null,"数组",-1),Ee=t("code",null,"哈希表",-1),Me=t("code",null,"2+",-1),qe={style:{"text-align":"left"}},Le=t("td",{style:{"text-align":"center"}},"686",-1),Ne={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/repeated-string-match",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},null,-1),Ce={style:{"text-align":"left"}},ze=t("code",null,"字符串",-1),Re=t("code",null,"字符串匹配",-1),je={style:{"text-align":"left"}},Te=t("td",{style:{"text-align":"center"}},"758",-1),Ae={style:{"text-align":"left"}},De={href:"https://leetcode.com/problems/bold-words-in-string",target:"_blank",rel:"noopener noreferrer"},Fe=t("td",{style:{"text-align":"center"}},null,-1),Ge={style:{"text-align":"left"}},Je=t("code",null,"字典树",-1),Ke=t("code",null,"数组",-1),Oe=t("code",null,"哈希表",-1),Pe=t("code",null,"2+",-1),Qe={style:{"text-align":"left"}},Se=t("td",{style:{"text-align":"center"}},"796",-1),Ue={style:{"text-align":"left"}},We={href:"https://leetcode.com/problems/rotate-string",target:"_blank",rel:"noopener noreferrer"},Xe=t("td",{style:{"text-align":"center"}},null,-1),Ye={style:{"text-align":"left"}},Ze=t("code",null,"字符串",-1),$e=t("code",null,"字符串匹配",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"1023",-1),ll={style:{"text-align":"left"}},ol={href:"https://leetcode.com/problems/camelcase-matching",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},null,-1),sl={style:{"text-align":"left"}},dl=t("code",null,"字典树",-1),_l=t("code",null,"数组",-1),al=t("code",null,"双指针",-1),cl=t("code",null,"2+",-1),il={style:{"text-align":"left"}},rl=t("td",{style:{"text-align":"center"}},"1392",-1),hl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},gl=t("td",{style:{"text-align":"center"}},null,-1),fl={style:{"text-align":"left"}},ml=t("code",null,"字符串",-1),yl=t("code",null,"字符串匹配",-1),xl=t("code",null,"哈希函数",-1),pl=t("code",null,"1+",-1),bl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"center"}},"1397",-1),wl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},Hl=t("td",{style:{"text-align":"center"}},null,-1),vl={style:{"text-align":"left"}},El=t("code",null,"字符串",-1),Ml=t("code",null,"动态规划",-1),ql=t("code",null,"字符串匹配",-1),Ll={style:{"text-align":"left"}},Nl=t("td",{style:{"text-align":"center"}},"1408",-1),Vl={style:{"text-align":"left"}},Bl={href:"https://leetcode.com/problems/string-matching-in-an-array",target:"_blank",rel:"noopener noreferrer"},Cl=t("td",{style:{"text-align":"center"}},null,-1),zl={style:{"text-align":"left"}},Rl=t("code",null,"数组",-1),jl=t("code",null,"字符串",-1),Tl=t("code",null,"字符串匹配",-1),Al={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"1455",-1),Fl={style:{"text-align":"left"}},Gl={href:"https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",target:"_blank",rel:"noopener noreferrer"},Jl=t("td",{style:{"text-align":"center"}},null,-1),Kl={style:{"text-align":"left"}},Ol=t("code",null,"双指针",-1),Pl=t("code",null,"字符串",-1),Ql=t("code",null,"字符串匹配",-1),Sl={style:{"text-align":"left"}},Ul=t("td",{style:{"text-align":"center"}},"1668",-1),Wl={style:{"text-align":"left"}},Xl={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Yl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},$l=t("code",null,"字符串",-1),to=t("code",null,"动态规划",-1),eo=t("code",null,"字符串匹配",-1),lo={style:{"text-align":"left"}},oo=t("td",{style:{"text-align":"center"}},"1764",-1),no={style:{"text-align":"left"}},so={href:"https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array",target:"_blank",rel:"noopener noreferrer"},_o=t("td",{style:{"text-align":"center"}},null,-1),ao={style:{"text-align":"left"}},co=t("code",null,"贪心",-1),io=t("code",null,"数组",-1),ro=t("code",null,"双指针",-1),ho=t("code",null,"1+",-1),uo={style:{"text-align":"left"}},go=t("td",{style:{"text-align":"center"}},"2185",-1),fo={style:{"text-align":"left"}},mo={href:"https://leetcode.com/problems/counting-words-with-a-given-prefix",target:"_blank",rel:"noopener noreferrer"},yo=t("td",{style:{"text-align":"center"}},null,-1),xo={style:{"text-align":"left"}},po=t("code",null,"数组",-1),bo=t("code",null,"字符串",-1),ko=t("code",null,"字符串匹配",-1),wo={style:{"text-align":"left"}},Io=t("td",{style:{"text-align":"center"}},"2223",-1),Ho={style:{"text-align":"left"}},vo={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",{style:{"text-align":"center"}},null,-1),Mo={style:{"text-align":"left"}},qo=t("code",null,"字符串",-1),Lo=t("code",null,"二分查找",-1),No=t("code",null,"字符串匹配",-1),Vo=t("code",null,"3+",-1),Bo={style:{"text-align":"left"}},Co=t("td",{style:{"text-align":"center"}},"2301",-1),zo={style:{"text-align":"left"}},Ro={href:"https://leetcode.com/problems/match-substring-after-replacement",target:"_blank",rel:"noopener noreferrer"},jo=t("td",{style:{"text-align":"center"}},null,-1),To={style:{"text-align":"left"}},Ao=t("code",null,"数组",-1),Do=t("code",null,"哈希表",-1),Fo=t("code",null,"字符串",-1),Go=t("code",null,"1+",-1),Jo={style:{"text-align":"left"}},Ko=t("td",{style:{"text-align":"center"}},"2430",-1),Oo={style:{"text-align":"left"}},Po={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},null,-1),So={style:{"text-align":"left"}},Uo=t("code",null,"字符串",-1),Wo=t("code",null,"动态规划",-1),Xo=t("code",null,"字符串匹配",-1),Yo=t("code",null,"2+",-1),Zo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"2851",-1),tn={style:{"text-align":"left"}},en={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},ln=t("td",{style:{"text-align":"center"}},null,-1),on={style:{"text-align":"left"}},nn=t("code",null,"数学",-1),sn=t("code",null,"字符串",-1),dn=t("code",null,"动态规划",-1),_n=t("code",null,"1+",-1),an={style:{"text-align":"left"}},cn=t("td",{style:{"text-align":"center"}},"3006",-1),rn={style:{"text-align":"left"}},hn={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},null,-1),gn={style:{"text-align":"left"}},fn=t("code",null,"双指针",-1),mn=t("code",null,"字符串",-1),yn=t("code",null,"二分查找",-1),xn=t("code",null,"3+",-1),pn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"3008",-1),kn={style:{"text-align":"left"}},wn={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},In=t("td",{style:{"text-align":"center"}},null,-1),Hn={style:{"text-align":"left"}},vn=t("code",null,"双指针",-1),En=t("code",null,"字符串",-1),Mn=t("code",null,"二分查找",-1),qn=t("code",null,"3+",-1),Ln={style:{"text-align":"left"}},Nn=t("td",{style:{"text-align":"center"}},"3023",-1),Vn={style:{"text-align":"left"}},Bn={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Cn=t("td",{style:{"text-align":"center"}},null,-1),zn={style:{"text-align":"left"}},Rn=t("code",null,"数组",-1),jn=t("code",null,"字符串匹配",-1),Tn=t("code",null,"滑动窗口",-1),An=t("code",null,"2+",-1),Dn={style:{"text-align":"left"}},Fn=t("td",{style:{"text-align":"center"}},"3029",-1),Gn={style:{"text-align":"left"}},Jn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Kn=t("td",{style:{"text-align":"center"}},null,-1),On={style:{"text-align":"left"}},Pn=t("code",null,"字符串",-1),Qn=t("code",null,"字符串匹配",-1),Sn=t("code",null,"哈希函数",-1),Un=t("code",null,"1+",-1),Wn={style:{"text-align":"left"}},Xn=t("td",{style:{"text-align":"center"}},"3031",-1),Yn={style:{"text-align":"left"}},Zn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},$n=t("td",{style:{"text-align":"center"}},null,-1),ts={style:{"text-align":"left"}},es=t("code",null,"字符串",-1),ls=t("code",null,"字符串匹配",-1),os=t("code",null,"哈希函数",-1),ns=t("code",null,"1+",-1),ss={style:{"text-align":"left"}},ds=t("td",{style:{"text-align":"center"}},"3034",-1),_s={style:{"text-align":"left"}},as={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},cs=t("td",{style:{"text-align":"center"}},null,-1),is={style:{"text-align":"left"}},rs=t("code",null,"数组",-1),hs=t("code",null,"字符串匹配",-1),us=t("code",null,"哈希函数",-1),gs=t("code",null,"1+",-1),fs={style:{"text-align":"left"}},ms=t("td",{style:{"text-align":"center"}},"3036",-1),ys={style:{"text-align":"left"}},xs={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},ps=t("td",{style:{"text-align":"center"}},null,-1),bs={style:{"text-align":"left"}},ks=t("code",null,"数组",-1),ws=t("code",null,"字符串匹配",-1),Is=t("code",null,"哈希函数",-1),Hs=t("code",null,"1+",-1),vs={style:{"text-align":"left"}},Es=t("td",{style:{"text-align":"center"}},"3037",-1),Ms={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},null,-1),Ns={style:{"text-align":"left"}},Vs=t("code",null,"数组",-1),Bs=t("code",null,"字符串匹配",-1),Cs=t("code",null,"滑动窗口",-1),zs=t("code",null,"2+",-1),Rs={style:{"text-align":"left"}},js=t("td",{style:{"text-align":"center"}},"3042",-1),Ts={style:{"text-align":"left"}},As={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Ds=t("td",{style:{"text-align":"center"}},null,-1),Fs={style:{"text-align":"left"}},Gs=t("code",null,"字典树",-1),Js=t("code",null,"数组",-1),Ks=t("code",null,"字符串",-1),Os=t("code",null,"3+",-1),Ps={style:{"text-align":"left"}},Qs=t("td",{style:{"text-align":"center"}},"3045",-1),Ss={style:{"text-align":"left"}},Us={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},Ws=t("td",{style:{"text-align":"center"}},null,-1),Xs={style:{"text-align":"left"}},Ys=t("code",null,"字典树",-1),Zs=t("code",null,"数组",-1),$s=t("code",null,"字符串",-1),td=t("code",null,"3+",-1),ed={style:{"text-align":"left"}},ld=t("td",{style:{"text-align":"center"}},"3291",-1),od={style:{"text-align":"left"}},nd={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},sd=t("td",{style:{"text-align":"center"}},null,-1),dd={style:{"text-align":"left"}},_d=t("code",null,"字典树",-1),ad=t("code",null,"线段树",-1),cd=t("code",null,"数组",-1),id=t("code",null,"6+",-1),rd={style:{"text-align":"left"}},hd=t("td",{style:{"text-align":"center"}},"3292",-1),ud={style:{"text-align":"left"}},gd={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},fd=t("td",{style:{"text-align":"center"}},null,-1),md={style:{"text-align":"left"}},yd=t("code",null,"线段树",-1),xd=t("code",null,"数组",-1),pd=t("code",null,"字符串",-1),bd=t("code",null,"5+",-1),kd={style:{"text-align":"left"}},wd=t("td",{style:{"text-align":"center"}},"3303",-1),Id={style:{"text-align":"left"}},Hd={href:"https://leetcode.com/problems/find-the-occurrence-of-first-almost-equal-substring",target:"_blank",rel:"noopener noreferrer"},vd=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},Md=t("code",null,"字符串",-1),qd=t("code",null,"字符串匹配",-1),Ld={style:{"text-align":"left"}},Nd=t("td",{style:{"text-align":"center"}},"面试题 01.09",-1),Vd={style:{"text-align":"left"}},Bd={href:"https://leetcode.cn/problems/string-rotation-lcci",target:"_blank",rel:"noopener noreferrer"},Cd=t("td",{style:{"text-align":"center"}},null,-1),zd={style:{"text-align":"left"}},Rd=t("code",null,"字符串",-1),jd=t("code",null,"字符串匹配",-1),Td={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Dd={style:{"text-align":"left"}},Fd={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Gd=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},Kd=t("code",null,"树",-1),Od=t("code",null,"深度优先搜索",-1),Pd=t("code",null,"二叉树",-1),Qd=t("code",null,"2+",-1),Sd={style:{"text-align":"left"}},Ud=t("td",{style:{"text-align":"center"}},"面试题 17.17",-1),Wd={style:{"text-align":"left"}},Xd={href:"https://leetcode.cn/problems/multi-search-lcci",target:"_blank",rel:"noopener noreferrer"},Yd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},$d=t("code",null,"字典树",-1),t_=t("code",null,"数组",-1),e_=t("code",null,"哈希表",-1),l_=t("code",null,"3+",-1),o_={style:{"text-align":"left"}};function n_(s_,d_){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return c(),i("div",null,[u,t("details",null,[g,f,t("p",null,[e(n,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/tag/stack.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[E]),_:1}),l(),M,l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/tag/shortest-path.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/tag/trie.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[K]),_:1})]),O,t("p",null,[e(n,{to:"/tag/enumeration.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/tag/recursion.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/tag/bucket-sort.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/tag/counting.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/tag/line-sweep.html"},{default:o(()=>[ft]),_:1})]),mt,t("p",null,[e(n,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(n,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/tag/game-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/tag/rejection-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/tag/database.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/tag/interactive.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/tag/iterator.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),zt,r(" prettier-ignore "),t("table",null,[Rt,t("tbody",null,[t("tr",null,[jt,t("td",Tt,[t("a",At,[l("找出字符串中第一个匹配项的下标"),e(s)])]),t("td",Dt,[e(n,{to:"/problem/0028.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ft,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Jt]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Kt]),_:1})]),t("td",Ot,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Pt,t("td",Qt,[t("a",St,[l("最短回文串"),e(s)])]),Ut,t("td",Wt,[e(n,{to:"/tag/string.html"},{default:o(()=>[Xt]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[Zt]),_:1}),l(),$t]),t("td",te,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ee,t("td",le,[t("a",oe,[l("重复的子字符串"),e(s)])]),t("td",ne,[e(n,{to:"/problem/0459.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",se,[e(n,{to:"/tag/string.html"},{default:o(()=>[de]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[_e]),_:1})]),t("td",ae,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ce,t("td",ie,[t("a",re,[l("另一棵树的子树"),e(s)])]),t("td",he,[e(n,{to:"/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ue,[e(n,{to:"/tag/tree.html"},{default:o(()=>[ge]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[fe]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[me]),_:1}),l(),ye]),t("td",xe,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pe,t("td",be,[t("a",ke,[l("给字符串添加加粗标签 🔒"),e(s)])]),we,t("td",Ie,[e(n,{to:"/tag/trie.html"},{default:o(()=>[He]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ve]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Ee]),_:1}),l(),Me]),t("td",qe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Le,t("td",Ne,[t("a",Ve,[l("重复叠加字符串匹配"),e(s)])]),Be,t("td",Ce,[e(n,{to:"/tag/string.html"},{default:o(()=>[ze]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Re]),_:1})]),t("td",je,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Te,t("td",Ae,[t("a",De,[l("字符串中的加粗单词 🔒"),e(s)])]),Fe,t("td",Ge,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Je]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ke]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Oe]),_:1}),l(),Pe]),t("td",Qe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Se,t("td",Ue,[t("a",We,[l("旋转字符串"),e(s)])]),Xe,t("td",Ye,[e(n,{to:"/tag/string.html"},{default:o(()=>[Ze]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[$e]),_:1})]),t("td",tl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[el,t("td",ll,[t("a",ol,[l("驼峰式匹配"),e(s)])]),nl,t("td",sl,[e(n,{to:"/tag/trie.html"},{default:o(()=>[dl]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[_l]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[al]),_:1}),l(),cl]),t("td",il,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rl,t("td",hl,[t("a",ul,[l("最长快乐前缀"),e(s)])]),gl,t("td",fl,[e(n,{to:"/tag/string.html"},{default:o(()=>[ml]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[xl]),_:1}),l(),pl]),t("td",bl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kl,t("td",wl,[t("a",Il,[l("找到所有好字符串"),e(s)])]),Hl,t("td",vl,[e(n,{to:"/tag/string.html"},{default:o(()=>[El]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[ql]),_:1})]),t("td",Ll,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nl,t("td",Vl,[t("a",Bl,[l("数组中的字符串匹配"),e(s)])]),Cl,t("td",zl,[e(n,{to:"/tag/array.html"},{default:o(()=>[Rl]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[jl]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Tl]),_:1})]),t("td",Al,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Dl,t("td",Fl,[t("a",Gl,[l("检查单词是否为句中其他单词的前缀"),e(s)])]),Jl,t("td",Kl,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[Ol]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Pl]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Ql]),_:1})]),t("td",Sl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ul,t("td",Wl,[t("a",Xl,[l("最大重复子字符串"),e(s)])]),Yl,t("td",Zl,[e(n,{to:"/tag/string.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[to]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[eo]),_:1})]),t("td",lo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[oo,t("td",no,[t("a",so,[l("通过连接另一个数组的子数组得到一个数组"),e(s)])]),_o,t("td",ao,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[co]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[ro]),_:1}),l(),ho]),t("td",uo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[go,t("td",fo,[t("a",mo,[l("统计包含给定前缀的字符串"),e(s)])]),yo,t("td",xo,[e(n,{to:"/tag/array.html"},{default:o(()=>[po]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[ko]),_:1})]),t("td",wo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Io,t("td",Ho,[t("a",vo,[l("构造字符串的总得分和"),e(s)])]),Eo,t("td",Mo,[e(n,{to:"/tag/string.html"},{default:o(()=>[qo]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[No]),_:1}),l(),Vo]),t("td",Bo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Co,t("td",zo,[t("a",Ro,[l("替换字符后匹配"),e(s)])]),jo,t("td",To,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ao]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Fo]),_:1}),l(),Go]),t("td",Jo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ko,t("td",Oo,[t("a",Po,[l("对字母串可执行的最大删除数"),e(s)])]),Qo,t("td",So,[e(n,{to:"/tag/string.html"},{default:o(()=>[Uo]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Wo]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Xo]),_:1}),l(),Yo]),t("td",Zo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$o,t("td",tn,[t("a",en,[l("字符串转换"),e(s)])]),ln,t("td",on,[e(n,{to:"/tag/math.html"},{default:o(()=>[nn]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[dn]),_:1}),l(),_n]),t("td",an,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cn,t("td",rn,[t("a",hn,[l("找出数组中的美丽下标 I"),e(s)])]),un,t("td",gn,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[fn]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[yn]),_:1}),l(),xn]),t("td",pn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bn,t("td",kn,[t("a",wn,[l("找出数组中的美丽下标 II"),e(s)])]),In,t("td",Hn,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[vn]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[En]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[Mn]),_:1}),l(),qn]),t("td",Ln,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nn,t("td",Vn,[t("a",Bn,[l("在无限流中寻找模式 I 🔒"),e(s)])]),Cn,t("td",zn,[e(n,{to:"/tag/array.html"},{default:o(()=>[Rn]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[Tn]),_:1}),l(),An]),t("td",Dn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fn,t("td",Gn,[t("a",Jn,[l("将单词恢复初始状态所需的最短时间 I"),e(s)])]),Kn,t("td",On,[e(n,{to:"/tag/string.html"},{default:o(()=>[Pn]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[Sn]),_:1}),l(),Un]),t("td",Wn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xn,t("td",Yn,[t("a",Zn,[l("将单词恢复初始状态所需的最短时间 II"),e(s)])]),$n,t("td",ts,[e(n,{to:"/tag/string.html"},{default:o(()=>[es]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[os]),_:1}),l(),ns]),t("td",ss,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ds,t("td",_s,[t("a",as,[l("匹配模式数组的子数组数目 I"),e(s)])]),cs,t("td",is,[e(n,{to:"/tag/array.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[hs]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[us]),_:1}),l(),gs]),t("td",fs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ms,t("td",ys,[t("a",xs,[l("匹配模式数组的子数组数目 II"),e(s)])]),ps,t("td",bs,[e(n,{to:"/tag/array.html"},{default:o(()=>[ks]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[ws]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[Is]),_:1}),l(),Hs]),t("td",vs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Es,t("td",Ms,[t("a",qs,[l("在无限流中寻找模式 II 🔒"),e(s)])]),Ls,t("td",Ns,[e(n,{to:"/tag/array.html"},{default:o(()=>[Vs]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[Cs]),_:1}),l(),zs]),t("td",Rs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[js,t("td",Ts,[t("a",As,[l("统计前后缀下标对 I"),e(s)])]),Ds,t("td",Fs,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Js]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Ks]),_:1}),l(),Os]),t("td",Ps,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qs,t("td",Ss,[t("a",Us,[l("统计前后缀下标对 II"),e(s)])]),Ws,t("td",Xs,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Ys]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[$s]),_:1}),l(),td]),t("td",ed,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ld,t("td",od,[t("a",nd,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),sd,t("td",dd,[e(n,{to:"/tag/trie.html"},{default:o(()=>[_d]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[ad]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[cd]),_:1}),l(),id]),t("td",rd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hd,t("td",ud,[t("a",gd,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),fd,t("td",md,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[yd]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[xd]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[pd]),_:1}),l(),bd]),t("td",kd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wd,t("td",Id,[t("a",Hd,[l("第一个几乎相等子字符串的下标"),e(s)])]),vd,t("td",Ed,[e(n,{to:"/tag/string.html"},{default:o(()=>[Md]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[qd]),_:1})]),t("td",Ld,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nd,t("td",Vd,[t("a",Bd,[l("字符串轮转"),e(s)])]),Cd,t("td",zd,[e(n,{to:"/tag/string.html"},{default:o(()=>[Rd]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[jd]),_:1})]),t("td",Td,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ad,t("td",Dd,[t("a",Fd,[l("检查子树"),e(s)])]),Gd,t("td",Jd,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Kd]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Od]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[Pd]),_:1}),l(),Qd]),t("td",Sd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ud,t("td",Wd,[t("a",Xd,[l("多次搜索"),e(s)])]),Yd,t("td",Zd,[e(n,{to:"/tag/trie.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[t_]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[e_]),_:1}),l(),l_]),t("td",o_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const a_=a(h,[["render",n_],["__file","string-matching.html.vue"]]);export{a_ as default};
