import{_ as i,r as _,o as a,c,a as t,b as e,w as l,d as o,f as h}from"./app-EzxVwzgV.js";const r={},u=t("h1",{id:"拓扑排序",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#拓扑排序","aria-hidden":"true"},"#"),o(" 拓扑排序")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),p=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),H=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),M=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),O=t("code",null,"有序集合",-1),P=t("span",{class:"blue"},"拓扑排序",-1),B=t("code",null,"最短路",-1),T=t("code",null,"强连通分量",-1),j=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),J=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),W=t("code",null,"递归",-1),X=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),K=t("code",null,"贪心",-1),U=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),pt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Ht=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),Mt=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Ot=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Tt=t("td",{style:{"text-align":"center"}},"207",-1),jt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"center"}},Rt={style:{"text-align":"left"}},Dt=t("code",null,"深度优先搜索",-1),Ft=t("code",null,"广度优先搜索",-1),Gt=t("code",null,"图",-1),Qt=t("code",null,"1+",-1),St={style:{"text-align":"left"}},Wt=t("td",{style:{"text-align":"center"}},"210",-1),Xt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Kt={style:{"text-align":"center"}},Ut={style:{"text-align":"left"}},Yt=t("code",null,"深度优先搜索",-1),$t=t("code",null,"广度优先搜索",-1),te=t("code",null,"图",-1),ee=t("code",null,"1+",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"269",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),_e={style:{"text-align":"left"}},ie=t("code",null,"深度优先搜索",-1),ae=t("code",null,"广度优先搜索",-1),ce=t("code",null,"图",-1),he=t("code",null,"3+",-1),re={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"310",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),pe={style:{"text-align":"left"}},ye=t("code",null,"深度优先搜索",-1),xe=t("code",null,"广度优先搜索",-1),be=t("code",null,"图",-1),ke=t("code",null,"1+",-1),He={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"center"}},"329",-1),Me={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),qe={style:{"text-align":"left"}},ze=t("code",null,"深度优先搜索",-1),Le=t("code",null,"广度优先搜索",-1),Ce=t("code",null,"图",-1),Ee=t("code",null,"5+",-1),Ve={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"444",-1),Oe={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/sequence-reconstruction",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},null,-1),Te={style:{"text-align":"left"}},je=t("code",null,"图",-1),Ae=t("code",null,"拓扑排序",-1),Je=t("code",null,"数组",-1),Re={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"631",-1),Fe={style:{"text-align":"left"}},Ge={href:"https://leetcode.com/problems/design-excel-sum-formula",target:"_blank",rel:"noopener noreferrer"},Qe=t("td",{style:{"text-align":"center"}},null,-1),Se={style:{"text-align":"left"}},We=t("code",null,"图",-1),Xe=t("code",null,"设计",-1),Ze=t("code",null,"拓扑排序",-1),Ke=t("code",null,"2+",-1),Ue={style:{"text-align":"left"}},Ye=t("td",{style:{"text-align":"center"}},"802",-1),$e={style:{"text-align":"left"}},to={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},eo=t("td",{style:{"text-align":"center"}},null,-1),oo={style:{"text-align":"left"}},lo=t("code",null,"深度优先搜索",-1),no=t("code",null,"广度优先搜索",-1),so=t("code",null,"图",-1),_o=t("code",null,"1+",-1),io={style:{"text-align":"left"}},ao=t("td",{style:{"text-align":"center"}},"851",-1),co={style:{"text-align":"left"}},ho={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},ro=t("td",{style:{"text-align":"center"}},null,-1),uo={style:{"text-align":"left"}},fo=t("code",null,"深度优先搜索",-1),go=t("code",null,"图",-1),mo=t("code",null,"拓扑排序",-1),po=t("code",null,"1+",-1),yo={style:{"text-align":"left"}},xo=t("td",{style:{"text-align":"center"}},"913",-1),bo={style:{"text-align":"left"}},ko={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},Ho=t("td",{style:{"text-align":"center"}},null,-1),Io={style:{"text-align":"left"}},Mo=t("code",null,"图",-1),vo=t("code",null,"拓扑排序",-1),wo=t("code",null,"记忆化搜索",-1),qo=t("code",null,"3+",-1),zo={style:{"text-align":"left"}},Lo=t("td",{style:{"text-align":"center"}},"1059",-1),Co={style:{"text-align":"left"}},Eo={href:"https://leetcode.com/problems/all-paths-from-source-lead-to-destination",target:"_blank",rel:"noopener noreferrer"},Vo=t("td",{style:{"text-align":"center"}},null,-1),No={style:{"text-align":"left"}},Oo=t("code",null,"图",-1),Po=t("code",null,"拓扑排序",-1),Bo={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"1136",-1),jo={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/parallel-courses",target:"_blank",rel:"noopener noreferrer"},Jo=t("td",{style:{"text-align":"center"}},null,-1),Ro={style:{"text-align":"left"}},Do=t("code",null,"图",-1),Fo=t("code",null,"拓扑排序",-1),Go={style:{"text-align":"left"}},Qo=t("td",{style:{"text-align":"center"}},"1203",-1),So={style:{"text-align":"left"}},Wo={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},Xo=t("td",{style:{"text-align":"center"}},null,-1),Zo={style:{"text-align":"left"}},Ko=t("code",null,"深度优先搜索",-1),Uo=t("code",null,"广度优先搜索",-1),Yo=t("code",null,"图",-1),$o=t("code",null,"1+",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"1245",-1),ol={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},null,-1),sl={style:{"text-align":"left"}},dl=t("code",null,"树",-1),_l=t("code",null,"深度优先搜索",-1),il=t("code",null,"广度优先搜索",-1),al=t("code",null,"2+",-1),cl={style:{"text-align":"left"}},hl=t("td",{style:{"text-align":"center"}},"1462",-1),rl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},fl=t("td",{style:{"text-align":"center"}},null,-1),gl={style:{"text-align":"left"}},ml=t("code",null,"深度优先搜索",-1),pl=t("code",null,"广度优先搜索",-1),yl=t("code",null,"图",-1),xl=t("code",null,"1+",-1),bl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"center"}},"1591",-1),Hl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/strange-printer-ii",target:"_blank",rel:"noopener noreferrer"},Ml=t("td",{style:{"text-align":"center"}},null,-1),vl={style:{"text-align":"left"}},wl=t("code",null,"图",-1),ql=t("code",null,"拓扑排序",-1),zl=t("code",null,"数组",-1),Ll=t("code",null,"1+",-1),Cl={style:{"text-align":"left"}},El=t("td",{style:{"text-align":"center"}},"1632",-1),Vl={style:{"text-align":"left"}},Nl={href:"https://leetcode.com/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},Ol=t("td",{style:{"text-align":"center"}},null,-1),Pl={style:{"text-align":"left"}},Bl=t("code",null,"并查集",-1),Tl=t("code",null,"图",-1),jl=t("code",null,"拓扑排序",-1),Al=t("code",null,"3+",-1),Jl={style:{"text-align":"left"}},Rl=t("td",{style:{"text-align":"center"}},"1728",-1),Dl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},Gl=t("td",{style:{"text-align":"center"}},null,-1),Ql={style:{"text-align":"left"}},Sl=t("code",null,"图",-1),Wl=t("code",null,"拓扑排序",-1),Xl=t("code",null,"记忆化搜索",-1),Zl=t("code",null,"5+",-1),Kl={style:{"text-align":"left"}},Ul=t("td",{style:{"text-align":"center"}},"1786",-1),Yl={style:{"text-align":"left"}},$l={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},tn=t("td",{style:{"text-align":"center"}},null,-1),en={style:{"text-align":"left"}},on=t("code",null,"图",-1),ln=t("code",null,"拓扑排序",-1),nn=t("code",null,"动态规划",-1),sn=t("code",null,"2+",-1),dn={style:{"text-align":"left"}},_n=t("td",{style:{"text-align":"center"}},"1857",-1),an={style:{"text-align":"left"}},cn={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},hn=t("td",{style:{"text-align":"center"}},null,-1),rn={style:{"text-align":"left"}},un=t("code",null,"图",-1),fn=t("code",null,"拓扑排序",-1),gn=t("code",null,"记忆化搜索",-1),mn=t("code",null,"3+",-1),pn={style:{"text-align":"left"}},yn=t("td",{style:{"text-align":"center"}},"1916",-1),xn={style:{"text-align":"left"}},bn={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},null,-1),Hn={style:{"text-align":"left"}},In=t("code",null,"树",-1),Mn=t("code",null,"图",-1),vn=t("code",null,"拓扑排序",-1),wn=t("code",null,"3+",-1),qn={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"1976",-1),Ln={style:{"text-align":"left"}},Cn={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},En=t("td",{style:{"text-align":"center"}},null,-1),Vn={style:{"text-align":"left"}},Nn=t("code",null,"图",-1),On=t("code",null,"拓扑排序",-1),Pn=t("code",null,"动态规划",-1),Bn=t("code",null,"1+",-1),Tn={style:{"text-align":"left"}},jn=t("td",{style:{"text-align":"center"}},"2050",-1),An={style:{"text-align":"left"}},Jn={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},null,-1),Dn={style:{"text-align":"left"}},Fn=t("code",null,"图",-1),Gn=t("code",null,"拓扑排序",-1),Qn=t("code",null,"数组",-1),Sn=t("code",null,"1+",-1),Wn={style:{"text-align":"left"}},Xn=t("td",{style:{"text-align":"center"}},"2115",-1),Zn={style:{"text-align":"left"}},Kn={href:"https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies",target:"_blank",rel:"noopener noreferrer"},Un=t("td",{style:{"text-align":"center"}},null,-1),Yn={style:{"text-align":"left"}},$n=t("code",null,"图",-1),ts=t("code",null,"拓扑排序",-1),es=t("code",null,"数组",-1),os=t("code",null,"2+",-1),ls={style:{"text-align":"left"}},ns=t("td",{style:{"text-align":"center"}},"2127",-1),ss={style:{"text-align":"left"}},ds={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},_s=t("td",{style:{"text-align":"center"}},null,-1),is={style:{"text-align":"left"}},as=t("code",null,"深度优先搜索",-1),cs=t("code",null,"图",-1),hs=t("code",null,"拓扑排序",-1),rs={style:{"text-align":"left"}},us=t("td",{style:{"text-align":"center"}},"2192",-1),fs={style:{"text-align":"left"}},gs={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},ms=t("td",{style:{"text-align":"center"}},null,-1),ps={style:{"text-align":"left"}},ys=t("code",null,"深度优先搜索",-1),xs=t("code",null,"广度优先搜索",-1),bs=t("code",null,"图",-1),ks=t("code",null,"1+",-1),Hs={style:{"text-align":"left"}},Is=t("td",{style:{"text-align":"center"}},"2246",-1),Ms={style:{"text-align":"left"}},vs={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},ws=t("td",{style:{"text-align":"center"}},null,-1),qs={style:{"text-align":"left"}},zs=t("code",null,"树",-1),Ls=t("code",null,"深度优先搜索",-1),Cs=t("code",null,"图",-1),Es=t("code",null,"3+",-1),Vs={style:{"text-align":"left"}},Ns=t("td",{style:{"text-align":"center"}},"2328",-1),Os={style:{"text-align":"left"}},Ps={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Bs=t("td",{style:{"text-align":"center"}},null,-1),Ts={style:{"text-align":"left"}},js=t("code",null,"深度优先搜索",-1),As=t("code",null,"广度优先搜索",-1),Js=t("code",null,"图",-1),Rs=t("code",null,"5+",-1),Ds={style:{"text-align":"left"}},Fs=t("td",{style:{"text-align":"center"}},"2360",-1),Gs={style:{"text-align":"left"}},Qs={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},Ss=t("td",{style:{"text-align":"center"}},null,-1),Ws={style:{"text-align":"left"}},Xs=t("code",null,"深度优先搜索",-1),Zs=t("code",null,"图",-1),Ks=t("code",null,"拓扑排序",-1),Us={style:{"text-align":"left"}},Ys=t("td",{style:{"text-align":"center"}},"2371",-1),$s={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},null,-1),od={style:{"text-align":"left"}},ld=t("code",null,"并查集",-1),nd=t("code",null,"图",-1),sd=t("code",null,"拓扑排序",-1),dd=t("code",null,"3+",-1),_d={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"2392",-1),ad={style:{"text-align":"left"}},cd={href:"https://leetcode.com/problems/build-a-matrix-with-conditions",target:"_blank",rel:"noopener noreferrer"},hd=t("td",{style:{"text-align":"center"}},null,-1),rd={style:{"text-align":"left"}},ud=t("code",null,"图",-1),fd=t("code",null,"拓扑排序",-1),gd=t("code",null,"数组",-1),md=t("code",null,"1+",-1),pd={style:{"text-align":"left"}},yd=t("td",{style:{"text-align":"center"}},"2603",-1),xd={style:{"text-align":"left"}},bd={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},null,-1),Hd={style:{"text-align":"left"}},Id=t("code",null,"树",-1),Md=t("code",null,"图",-1),vd=t("code",null,"拓扑排序",-1),wd=t("code",null,"1+",-1),qd={style:{"text-align":"left"}},zd=t("td",{style:{"text-align":"center"}},"LCP 21",-1),Ld={style:{"text-align":"left"}},Cd={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},Ed=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Nd=t("code",null,"深度优先搜索",-1),Od=t("code",null,"广度优先搜索",-1),Pd=t("code",null,"图",-1),Bd=t("code",null,"1+",-1),Td={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"LCP 63",-1),Ad={style:{"text-align":"left"}},Jd={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},Rd=t("td",{style:{"text-align":"center"}},null,-1),Dd={style:{"text-align":"left"}},Fd=t("code",null,"深度优先搜索",-1),Gd=t("code",null,"广度优先搜索",-1),Qd=t("code",null,"图",-1),Sd=t("code",null,"5+",-1),Wd={style:{"text-align":"left"}},Xd=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),Zd={style:{"text-align":"left"}},Kd={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},$d=t("code",null,"深度优先搜索",-1),t_=t("code",null,"广度优先搜索",-1),e_=t("code",null,"图",-1),o_=t("code",null,"5+",-1),l_={style:{"text-align":"left"}},n_=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),s_={style:{"text-align":"left"}},d_={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},a_=t("code",null,"深度优先搜索",-1),c_=t("code",null,"广度优先搜索",-1),h_=t("code",null,"图",-1),r_=t("code",null,"1+",-1),u_={style:{"text-align":"left"}},f_=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),g_={style:{"text-align":"left"}},m_={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),y_={style:{"text-align":"left"}},x_=t("code",null,"深度优先搜索",-1),b_=t("code",null,"广度优先搜索",-1),k_=t("code",null,"图",-1),H_=t("code",null,"3+",-1),I_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"剑指 Offer II 115",-1),v_={style:{"text-align":"left"}},w_={href:"https://leetcode.cn/problems/ur2n8P",target:"_blank",rel:"noopener noreferrer"},q_=t("td",{style:{"text-align":"center"}},null,-1),z_={style:{"text-align":"left"}},L_=t("code",null,"图",-1),C_=t("code",null,"拓扑排序",-1),E_=t("code",null,"数组",-1),V_={style:{"text-align":"left"}};function N_(O_,P_){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/outline/tag/matrix.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/outline/tag/linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/outline/tag/queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/outline/tag/binary-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/outline/tag/ordered-set.html"},{default:l(()=>[O]),_:1}),o(),P,o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/outline/tag/suffix-array.html"},{default:l(()=>[G]),_:1})]),Q,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/outline/tag/backtracking.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/outline/tag/counting.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),pt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[yt]),_:1}),o(),e(n,{to:"/outline/tag/number-theory.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/outline/tag/simulation.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/outline/tag/randomized.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/outline/tag/database.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/outline/tag/data-stream.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/outline/tag/brainteaser.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/outline/tag/interactive.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/outline/tag/iterator.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/outline/tag/concurrency.html"},{default:l(()=>[Ot]),_:1})])]),Pt,h(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Tt,t("td",jt,[t("a",At,[o("课程表"),e(s)])]),t("td",Jt,[e(n,{to:"/problem/0207.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Rt,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Dt]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Ft]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Gt]),_:1}),o(),Qt]),t("td",St,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wt,t("td",Xt,[t("a",Zt,[o("课程表 II"),e(s)])]),t("td",Kt,[e(n,{to:"/problem/0210.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Ut,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Yt]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[te]),_:1}),o(),ee]),t("td",oe,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[le,t("td",ne,[t("a",se,[o("火星词典"),e(s)])]),de,t("td",_e,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[ie]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[ce]),_:1}),o(),he]),t("td",re,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[o("最小高度树"),e(s)])]),me,t("td",pe,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[ye]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[be]),_:1}),o(),ke]),t("td",He,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ie,t("td",Me,[t("a",ve,[o("矩阵中的最长递增路径"),e(s)])]),we,t("td",qe,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[ze]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Le]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Ce]),_:1}),o(),Ee]),t("td",Ve,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ne,t("td",Oe,[t("a",Pe,[o("序列重建"),e(s)])]),Be,t("td",Te,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Ae]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Je]),_:1})]),t("td",Re,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[De,t("td",Fe,[t("a",Ge,[o("设计 Excel 求和公式"),e(s)])]),Qe,t("td",Se,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[We]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[Xe]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Ze]),_:1}),o(),Ke]),t("td",Ue,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ye,t("td",$e,[t("a",to,[o("找到最终的安全状态"),e(s)])]),eo,t("td",oo,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[lo]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[no]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[so]),_:1}),o(),_o]),t("td",io,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ao,t("td",co,[t("a",ho,[o("喧闹和富有"),e(s)])]),ro,t("td",uo,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[fo]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[go]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[mo]),_:1}),o(),po]),t("td",yo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xo,t("td",bo,[t("a",ko,[o("猫和老鼠"),e(s)])]),Ho,t("td",Io,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Mo]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[wo]),_:1}),o(),qo]),t("td",zo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Lo,t("td",Co,[t("a",Eo,[o("从始点到终点的所有路径"),e(s)])]),Vo,t("td",No,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Oo]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Po]),_:1})]),t("td",Bo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[To,t("td",jo,[t("a",Ao,[o("并行课程"),e(s)])]),Jo,t("td",Ro,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Do]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Fo]),_:1})]),t("td",Go,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Qo,t("td",So,[t("a",Wo,[o("项目管理"),e(s)])]),Xo,t("td",Zo,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Ko]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Uo]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Yo]),_:1}),o(),$o]),t("td",tl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[el,t("td",ol,[t("a",ll,[o("树的直径"),e(s)])]),nl,t("td",sl,[e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[dl]),_:1}),o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[_l]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[il]),_:1}),o(),al]),t("td",cl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[hl,t("td",rl,[t("a",ul,[o("课程表 IV"),e(s)])]),fl,t("td",gl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[ml]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[pl]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[yl]),_:1}),o(),xl]),t("td",bl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[kl,t("td",Hl,[t("a",Il,[o("奇怪的打印机 II"),e(s)])]),Ml,t("td",vl,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[wl]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[ql]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[zl]),_:1}),o(),Ll]),t("td",Cl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[El,t("td",Vl,[t("a",Nl,[o("矩阵转换后的秩"),e(s)])]),Ol,t("td",Pl,[e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[Bl]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Tl]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[jl]),_:1}),o(),Al]),t("td",Jl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Rl,t("td",Dl,[t("a",Fl,[o("猫和老鼠 II"),e(s)])]),Gl,t("td",Ql,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Sl]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Wl]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Xl]),_:1}),o(),Zl]),t("td",Kl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ul,t("td",Yl,[t("a",$l,[o("从第一个节点出发到最后一个节点的受限路径数"),e(s)])]),tn,t("td",en,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[on]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[ln]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[nn]),_:1}),o(),sn]),t("td",dn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_n,t("td",an,[t("a",cn,[o("有向图中最大颜色值"),e(s)])]),hn,t("td",rn,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[un]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[fn]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[gn]),_:1}),o(),mn]),t("td",pn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[yn,t("td",xn,[t("a",bn,[o("统计为蚁群构筑房间的不同顺序"),e(s)])]),kn,t("td",Hn,[e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[In]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Mn]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[vn]),_:1}),o(),wn]),t("td",qn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[zn,t("td",Ln,[t("a",Cn,[o("到达目的地的方案数"),e(s)])]),En,t("td",Vn,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Nn]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[On]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Pn]),_:1}),o(),Bn]),t("td",Tn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jn,t("td",An,[t("a",Jn,[o("并行课程 III"),e(s)])]),Rn,t("td",Dn,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Fn]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Gn]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Qn]),_:1}),o(),Sn]),t("td",Wn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Xn,t("td",Zn,[t("a",Kn,[o("从给定原材料中找到所有可以做出的菜"),e(s)])]),Un,t("td",Yn,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[$n]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[ts]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[es]),_:1}),o(),os]),t("td",ls,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ns,t("td",ss,[t("a",ds,[o("参加会议的最多员工数"),e(s)])]),_s,t("td",is,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[as]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[cs]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[hs]),_:1})]),t("td",rs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[us,t("td",fs,[t("a",gs,[o("有向无环图中一个节点的所有祖先"),e(s)])]),ms,t("td",ps,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[ys]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[xs]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[bs]),_:1}),o(),ks]),t("td",Hs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Is,t("td",Ms,[t("a",vs,[o("相邻字符不同的最长路径"),e(s)])]),ws,t("td",qs,[e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[zs]),_:1}),o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Ls]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Cs]),_:1}),o(),Es]),t("td",Vs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ns,t("td",Os,[t("a",Ps,[o("网格图中递增路径的数目"),e(s)])]),Bs,t("td",Ts,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[js]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[As]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Js]),_:1}),o(),Rs]),t("td",Ds,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Fs,t("td",Gs,[t("a",Qs,[o("图中的最长环"),e(s)])]),Ss,t("td",Ws,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Xs]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Zs]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Ks]),_:1})]),t("td",Us,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ys,t("td",$s,[t("a",td,[o("最小化网格中的最大值"),e(s)])]),ed,t("td",od,[e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[ld]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[nd]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[sd]),_:1}),o(),dd]),t("td",_d,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",cd,[o("给定条件下构造矩阵"),e(s)])]),hd,t("td",rd,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[ud]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[fd]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[gd]),_:1}),o(),md]),t("td",pd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[yd,t("td",xd,[t("a",bd,[o("收集树中金币"),e(s)])]),kd,t("td",Hd,[e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[Id]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Md]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[vd]),_:1}),o(),wd]),t("td",qd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[zd,t("td",Ld,[t("a",Cd,[o("追逐游戏"),e(s)])]),Ed,t("td",Vd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Nd]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Od]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Pd]),_:1}),o(),Bd]),t("td",Td,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jd,t("td",Ad,[t("a",Jd,[o("弹珠游戏"),e(s)])]),Rd,t("td",Dd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Fd]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Gd]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Qd]),_:1}),o(),Sd]),t("td",Wd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xd,t("td",Zd,[t("a",Kd,[o("最长递增路径"),e(s)])]),Ud,t("td",Yd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[$d]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[t_]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[e_]),_:1}),o(),o_]),t("td",l_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[n_,t("td",s_,[t("a",d_,[o("课程顺序"),e(s)])]),__,t("td",i_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[a_]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[c_]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[h_]),_:1}),o(),r_]),t("td",u_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[f_,t("td",g_,[t("a",m_,[o("外星文字典"),e(s)])]),p_,t("td",y_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[x_]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[b_]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[k_]),_:1}),o(),H_]),t("td",I_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[M_,t("td",v_,[t("a",w_,[o("重建序列"),e(s)])]),q_,t("td",z_,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[L_]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[C_]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[E_]),_:1})]),t("td",V_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const T_=i(r,[["render",N_],["__file","topological-sort.html.vue"]]);export{T_ as default};
