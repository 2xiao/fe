import{_ as a,r as _,o as i,c,a as t,d as e,w as o,b as l,f as h}from"./app-Ob52y8QZ.js";const r={},u=t("h1",{id:"滚动哈希",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#滚动哈希","aria-hidden":"true"},"#"),l(" 滚动哈希")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),M=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),N=t("code",null,"树",-1),E=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),z=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),C=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),R=t("code",null,"强连通分量",-1),j=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),T=t("code",null,"字典树",-1),F=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),O=t("p",null,[t("strong",null,"算法")],-1),P=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),U=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),X=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),it=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ut=t("code",null,"哈希函数",-1),ft=t("span",{class:"blue"},"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),Mt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Nt=t("code",null,"设计",-1),Et=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),zt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Ct=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Rt=t("td",{style:{"text-align":"center"}},"187",-1),jt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/repeated-dna-sequences",target:"_blank",rel:"noopener noreferrer"},Dt=t("td",{style:{"text-align":"center"}},null,-1),Tt={style:{"text-align":"left"}},Ft=t("code",null,"位运算",-1),Gt=t("code",null,"哈希表",-1),Jt=t("code",null,"字符串",-1),Ot=t("code",null,"3+",-1),Pt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"214",-1),St={style:{"text-align":"left"}},Ut={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Wt=t("td",{style:{"text-align":"center"}},null,-1),Xt={style:{"text-align":"left"}},Yt=t("code",null,"字符串",-1),Zt=t("code",null,"字符串匹配",-1),$t=t("code",null,"哈希函数",-1),te=t("code",null,"1+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"718",-1),oe={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),de={style:{"text-align":"left"}},_e=t("code",null,"数组",-1),ae=t("code",null,"二分查找",-1),ie=t("code",null,"动态规划",-1),ce=t("code",null,"3+",-1),he={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"1044",-1),ue={style:{"text-align":"left"}},fe={href:"https://leetcode.com/problems/longest-duplicate-substring",target:"_blank",rel:"noopener noreferrer"},ge=t("td",{style:{"text-align":"center"}},null,-1),me={style:{"text-align":"left"}},ye=t("code",null,"字符串",-1),xe=t("code",null,"二分查找",-1),pe=t("code",null,"后缀数组",-1),be=t("code",null,"3+",-1),ke={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"1062",-1),Ie={style:{"text-align":"left"}},He={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},ve=t("td",{style:{"text-align":"center"}},null,-1),Me={style:{"text-align":"left"}},qe=t("code",null,"字符串",-1),Ne=t("code",null,"二分查找",-1),Ee=t("code",null,"动态规划",-1),Le=t("code",null,"3+",-1),Ve={style:{"text-align":"left"}},ze=t("td",{style:{"text-align":"center"}},"1147",-1),Be={style:{"text-align":"left"}},Ce={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},Ke=t("td",{style:{"text-align":"center"}},null,-1),Re={style:{"text-align":"left"}},je=t("code",null,"贪心",-1),Ae=t("code",null,"双指针",-1),De=t("code",null,"字符串",-1),Te=t("code",null,"3+",-1),Fe={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"1316",-1),Je={style:{"text-align":"left"}},Oe={href:"https://leetcode.com/problems/distinct-echo-substrings",target:"_blank",rel:"noopener noreferrer"},Pe=t("td",{style:{"text-align":"center"}},null,-1),Qe={style:{"text-align":"left"}},Se=t("code",null,"字典树",-1),Ue=t("code",null,"字符串",-1),We=t("code",null,"哈希函数",-1),Xe=t("code",null,"1+",-1),Ye={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"1392",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},ol=t("code",null,"字符串",-1),nl=t("code",null,"字符串匹配",-1),sl=t("code",null,"哈希函数",-1),dl=t("code",null,"1+",-1),_l={style:{"text-align":"left"}},al=t("td",{style:{"text-align":"center"}},"1461",-1),il={style:{"text-align":"left"}},cl={href:"https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k",target:"_blank",rel:"noopener noreferrer"},hl=t("td",{style:{"text-align":"center"}},null,-1),rl={style:{"text-align":"left"}},ul=t("code",null,"位运算",-1),fl=t("code",null,"哈希表",-1),gl=t("code",null,"字符串",-1),ml=t("code",null,"2+",-1),yl={style:{"text-align":"left"}},xl=t("td",{style:{"text-align":"center"}},"1554",-1),pl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/strings-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),wl={style:{"text-align":"left"}},Il=t("code",null,"哈希表",-1),Hl=t("code",null,"字符串",-1),vl=t("code",null,"哈希函数",-1),Ml=t("code",null,"1+",-1),ql={style:{"text-align":"left"}},Nl=t("td",{style:{"text-align":"center"}},"1698",-1),El={style:{"text-align":"left"}},Ll={href:"https://leetcode.com/problems/number-of-distinct-substrings-in-a-string",target:"_blank",rel:"noopener noreferrer"},Vl=t("td",{style:{"text-align":"center"}},null,-1),zl={style:{"text-align":"left"}},Bl=t("code",null,"字典树",-1),Cl=t("code",null,"字符串",-1),Kl=t("code",null,"后缀数组",-1),Rl=t("code",null,"2+",-1),jl={style:{"text-align":"left"}},Al=t("td",{style:{"text-align":"center"}},"1923",-1),Dl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/longest-common-subpath",target:"_blank",rel:"noopener noreferrer"},Fl=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Jl=t("code",null,"数组",-1),Ol=t("code",null,"二分查找",-1),Pl=t("code",null,"后缀数组",-1),Ql=t("code",null,"2+",-1),Sl={style:{"text-align":"left"}},Ul=t("td",{style:{"text-align":"center"}},"1960",-1),Wl={style:{"text-align":"left"}},Xl={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},Yl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},$l=t("code",null,"字符串",-1),to=t("code",null,"哈希函数",-1),eo=t("code",null,"滚动哈希",-1),lo={style:{"text-align":"left"}},oo=t("td",{style:{"text-align":"center"}},"2156",-1),no={style:{"text-align":"left"}},so={href:"https://leetcode.com/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},_o=t("td",{style:{"text-align":"center"}},null,-1),ao={style:{"text-align":"left"}},io=t("code",null,"字符串",-1),co=t("code",null,"滑动窗口",-1),ho=t("code",null,"哈希函数",-1),ro=t("code",null,"1+",-1),uo={style:{"text-align":"left"}},fo=t("td",{style:{"text-align":"center"}},"2168",-1),go={style:{"text-align":"left"}},mo={href:"https://leetcode.com/problems/unique-substrings-with-equal-digit-frequency",target:"_blank",rel:"noopener noreferrer"},yo=t("td",{style:{"text-align":"center"}},null,-1),xo={style:{"text-align":"left"}},po=t("code",null,"哈希表",-1),bo=t("code",null,"字符串",-1),ko=t("code",null,"计数",-1),wo=t("code",null,"2+",-1),Io={style:{"text-align":"left"}},Ho=t("td",{style:{"text-align":"center"}},"2223",-1),vo={style:{"text-align":"left"}},Mo={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},qo=t("td",{style:{"text-align":"center"}},null,-1),No={style:{"text-align":"left"}},Eo=t("code",null,"字符串",-1),Lo=t("code",null,"二分查找",-1),Vo=t("code",null,"字符串匹配",-1),zo=t("code",null,"3+",-1),Bo={style:{"text-align":"left"}},Co=t("td",{style:{"text-align":"center"}},"2261",-1),Ko={style:{"text-align":"left"}},Ro={href:"https://leetcode.com/problems/k-divisible-elements-subarrays",target:"_blank",rel:"noopener noreferrer"},jo={style:{"text-align":"center"}},Ao={style:{"text-align":"left"}},Do=t("code",null,"字典树",-1),To=t("code",null,"数组",-1),Fo=t("code",null,"哈希表",-1),Go=t("code",null,"3+",-1),Jo={style:{"text-align":"left"}},Oo=t("td",{style:{"text-align":"center"}},"2430",-1),Po={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},So=t("td",{style:{"text-align":"center"}},null,-1),Uo={style:{"text-align":"left"}},Wo=t("code",null,"字符串",-1),Xo=t("code",null,"动态规划",-1),Yo=t("code",null,"字符串匹配",-1),Zo=t("code",null,"2+",-1),$o={style:{"text-align":"left"}},tn=t("td",{style:{"text-align":"center"}},"3006",-1),en={style:{"text-align":"left"}},ln={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},on=t("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},sn=t("code",null,"双指针",-1),dn=t("code",null,"字符串",-1),_n=t("code",null,"二分查找",-1),an=t("code",null,"3+",-1),cn={style:{"text-align":"left"}},hn=t("td",{style:{"text-align":"center"}},"3008",-1),rn={style:{"text-align":"left"}},un={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},fn=t("td",{style:{"text-align":"center"}},null,-1),gn={style:{"text-align":"left"}},mn=t("code",null,"双指针",-1),yn=t("code",null,"字符串",-1),xn=t("code",null,"二分查找",-1),pn=t("code",null,"3+",-1),bn={style:{"text-align":"left"}},kn=t("td",{style:{"text-align":"center"}},"3023",-1),wn={style:{"text-align":"left"}},In={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Hn=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},Mn=t("code",null,"数组",-1),qn=t("code",null,"字符串匹配",-1),Nn=t("code",null,"滑动窗口",-1),En=t("code",null,"2+",-1),Ln={style:{"text-align":"left"}},Vn=t("td",{style:{"text-align":"center"}},"3029",-1),zn={style:{"text-align":"left"}},Bn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Cn=t("td",{style:{"text-align":"center"}},null,-1),Kn={style:{"text-align":"left"}},Rn=t("code",null,"字符串",-1),jn=t("code",null,"字符串匹配",-1),An=t("code",null,"哈希函数",-1),Dn=t("code",null,"1+",-1),Tn={style:{"text-align":"left"}},Fn=t("td",{style:{"text-align":"center"}},"3031",-1),Gn={style:{"text-align":"left"}},Jn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},null,-1),Pn={style:{"text-align":"left"}},Qn=t("code",null,"字符串",-1),Sn=t("code",null,"字符串匹配",-1),Un=t("code",null,"哈希函数",-1),Wn=t("code",null,"1+",-1),Xn={style:{"text-align":"left"}},Yn=t("td",{style:{"text-align":"center"}},"3034",-1),Zn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},ts=t("td",{style:{"text-align":"center"}},null,-1),es={style:{"text-align":"left"}},ls=t("code",null,"数组",-1),os=t("code",null,"字符串匹配",-1),ns=t("code",null,"哈希函数",-1),ss=t("code",null,"1+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"3036",-1),as={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},cs=t("td",{style:{"text-align":"center"}},null,-1),hs={style:{"text-align":"left"}},rs=t("code",null,"数组",-1),us=t("code",null,"字符串匹配",-1),fs=t("code",null,"哈希函数",-1),gs=t("code",null,"1+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"3037",-1),xs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},bs=t("td",{style:{"text-align":"center"}},null,-1),ks={style:{"text-align":"left"}},ws=t("code",null,"数组",-1),Is=t("code",null,"字符串匹配",-1),Hs=t("code",null,"滑动窗口",-1),vs=t("code",null,"2+",-1),Ms={style:{"text-align":"left"}},qs=t("td",{style:{"text-align":"center"}},"3042",-1),Ns={style:{"text-align":"left"}},Es={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},null,-1),Vs={style:{"text-align":"left"}},zs=t("code",null,"字典树",-1),Bs=t("code",null,"数组",-1),Cs=t("code",null,"字符串",-1),Ks=t("code",null,"3+",-1),Rs={style:{"text-align":"left"}},js=t("td",{style:{"text-align":"center"}},"3045",-1),As={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},Ts=t("td",{style:{"text-align":"center"}},null,-1),Fs={style:{"text-align":"left"}},Gs=t("code",null,"字典树",-1),Js=t("code",null,"数组",-1),Os=t("code",null,"字符串",-1),Ps=t("code",null,"3+",-1),Qs={style:{"text-align":"left"}},Ss=t("td",{style:{"text-align":"center"}},"3291",-1),Us={style:{"text-align":"left"}},Ws={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Xs=t("td",{style:{"text-align":"center"}},null,-1),Ys={style:{"text-align":"left"}},Zs=t("code",null,"字典树",-1),$s=t("code",null,"线段树",-1),td=t("code",null,"数组",-1),ed=t("code",null,"6+",-1),ld={style:{"text-align":"left"}},od=t("td",{style:{"text-align":"center"}},"3292",-1),nd={style:{"text-align":"left"}},sd={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},dd=t("td",{style:{"text-align":"center"}},null,-1),_d={style:{"text-align":"left"}},ad=t("code",null,"线段树",-1),id=t("code",null,"数组",-1),cd=t("code",null,"字符串",-1),hd=t("code",null,"5+",-1),rd={style:{"text-align":"left"}},ud=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),fd={style:{"text-align":"left"}},gd={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},md=t("td",{style:{"text-align":"center"}},null,-1),yd={style:{"text-align":"left"}},xd=t("code",null,"字典树",-1),pd=t("code",null,"数组",-1),bd=t("code",null,"哈希表",-1),kd=t("code",null,"4+",-1),wd={style:{"text-align":"left"}};function Id(Hd,vd){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),c("div",null,[u,t("details",null,[f,g,t("p",null,[e(n,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/tag/stack.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/tag/trie.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[J]),_:1})]),O,t("p",null,[e(n,{to:"/tag/enumeration.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/tag/recursion.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/tag/bucket-sort.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/tag/counting.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/tag/bitmask.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[ut]),_:1}),l(),ft,l(),e(n,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(n,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(n,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/tag/game-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/tag/rejection-sampling.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/tag/interactive.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/tag/iterator.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Bt]),_:1})])]),Ct,h(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Rt,t("td",jt,[t("a",At,[l("重复的DNA序列"),e(s)])]),Dt,t("td",Tt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Ft]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Jt]),_:1}),l(),Ot]),t("td",Pt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qt,t("td",St,[t("a",Ut,[l("最短回文串"),e(s)])]),Wt,t("td",Xt,[e(n,{to:"/tag/string.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",ne,[l("最长重复子数组"),e(s)])]),se,t("td",de,[e(n,{to:"/tag/array.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ie]),_:1}),l(),ce]),t("td",he,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[re,t("td",ue,[t("a",fe,[l("最长重复子串"),e(s)])]),ge,t("td",me,[e(n,{to:"/tag/string.html"},{default:o(()=>[ye]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[pe]),_:1}),l(),be]),t("td",ke,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[we,t("td",Ie,[t("a",He,[l("最长重复子串 🔒"),e(s)])]),ve,t("td",Me,[e(n,{to:"/tag/string.html"},{default:o(()=>[qe]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ee]),_:1}),l(),Le]),t("td",Ve,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ze,t("td",Be,[t("a",Ce,[l("段式回文"),e(s)])]),Ke,t("td",Re,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[je]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[Ae]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[De]),_:1}),l(),Te]),t("td",Fe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ge,t("td",Je,[t("a",Oe,[l("不同的循环子字符串"),e(s)])]),Pe,t("td",Qe,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Ue]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[We]),_:1}),l(),Xe]),t("td",Ye,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ze,t("td",$e,[t("a",tl,[l("最长快乐前缀"),e(s)])]),el,t("td",ll,[e(n,{to:"/tag/string.html"},{default:o(()=>[ol]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[sl]),_:1}),l(),dl]),t("td",_l,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[al,t("td",il,[t("a",cl,[l("检查一个字符串是否包含所有长度为 K 的二进制子串"),e(s)])]),hl,t("td",rl,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ul]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[gl]),_:1}),l(),ml]),t("td",yl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xl,t("td",pl,[t("a",bl,[l("只有一个不同字符的字符串 🔒"),e(s)])]),kl,t("td",wl,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Hl]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[vl]),_:1}),l(),Ml]),t("td",ql,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nl,t("td",El,[t("a",Ll,[l("字符串的不同子字符串个数 🔒"),e(s)])]),Vl,t("td",zl,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Bl]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[Kl]),_:1}),l(),Rl]),t("td",jl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Al,t("td",Dl,[t("a",Tl,[l("最长公共子路径"),e(s)])]),Fl,t("td",Gl,[e(n,{to:"/tag/array.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[Ol]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[Pl]),_:1}),l(),Ql]),t("td",Sl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ul,t("td",Wl,[t("a",Xl,[l("两个回文子字符串长度的最大乘积"),e(s)])]),Yl,t("td",Zl,[e(n,{to:"/tag/string.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[to]),_:1}),l(),e(n,{to:"/tag/rolling-hash.html"},{default:o(()=>[eo]),_:1})]),t("td",lo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oo,t("td",no,[t("a",so,[l("查找给定哈希值的子串"),e(s)])]),_o,t("td",ao,[e(n,{to:"/tag/string.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[co]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[ho]),_:1}),l(),ro]),t("td",uo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fo,t("td",go,[t("a",mo,[l("每个数字的频率都相同的独特子字符串的数量 🔒"),e(s)])]),yo,t("td",xo,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[po]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/tag/counting.html"},{default:o(()=>[ko]),_:1}),l(),wo]),t("td",Io,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ho,t("td",vo,[t("a",Mo,[l("构造字符串的总得分和"),e(s)])]),qo,t("td",No,[e(n,{to:"/tag/string.html"},{default:o(()=>[Eo]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Vo]),_:1}),l(),zo]),t("td",Bo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Co,t("td",Ko,[t("a",Ro,[l("含最多 K 个可整除元素的子数组"),e(s)])]),t("td",jo,[e(n,{to:"/problem/2261.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ao,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[To]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Fo]),_:1}),l(),Go]),t("td",Jo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oo,t("td",Po,[t("a",Qo,[l("对字母串可执行的最大删除数"),e(s)])]),So,t("td",Uo,[e(n,{to:"/tag/string.html"},{default:o(()=>[Wo]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Xo]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Yo]),_:1}),l(),Zo]),t("td",$o,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tn,t("td",en,[t("a",ln,[l("找出数组中的美丽下标 I"),e(s)])]),on,t("td",nn,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[dn]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[_n]),_:1}),l(),an]),t("td",cn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hn,t("td",rn,[t("a",un,[l("找出数组中的美丽下标 II"),e(s)])]),fn,t("td",gn,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[xn]),_:1}),l(),pn]),t("td",bn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kn,t("td",wn,[t("a",In,[l("在无限流中寻找模式 I 🔒"),e(s)])]),Hn,t("td",vn,[e(n,{to:"/tag/array.html"},{default:o(()=>[Mn]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[qn]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[Nn]),_:1}),l(),En]),t("td",Ln,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vn,t("td",zn,[t("a",Bn,[l("将单词恢复初始状态所需的最短时间 I"),e(s)])]),Cn,t("td",Kn,[e(n,{to:"/tag/string.html"},{default:o(()=>[Rn]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[An]),_:1}),l(),Dn]),t("td",Tn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fn,t("td",Gn,[t("a",Jn,[l("将单词恢复初始状态所需的最短时间 II"),e(s)])]),On,t("td",Pn,[e(n,{to:"/tag/string.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Sn]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[Un]),_:1}),l(),Wn]),t("td",Xn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yn,t("td",Zn,[t("a",$n,[l("匹配模式数组的子数组数目 I"),e(s)])]),ts,t("td",es,[e(n,{to:"/tag/array.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[ns]),_:1}),l(),ss]),t("td",ds,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_s,t("td",as,[t("a",is,[l("匹配模式数组的子数组数目 II"),e(s)])]),cs,t("td",hs,[e(n,{to:"/tag/array.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[fs]),_:1}),l(),gs]),t("td",ms,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",ps,[l("在无限流中寻找模式 II 🔒"),e(s)])]),bs,t("td",ks,[e(n,{to:"/tag/array.html"},{default:o(()=>[ws]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Is]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[Hs]),_:1}),l(),vs]),t("td",Ms,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qs,t("td",Ns,[t("a",Es,[l("统计前后缀下标对 I"),e(s)])]),Ls,t("td",Vs,[e(n,{to:"/tag/trie.html"},{default:o(()=>[zs]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Cs]),_:1}),l(),Ks]),t("td",Rs,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[js,t("td",As,[t("a",Ds,[l("统计前后缀下标对 II"),e(s)])]),Ts,t("td",Fs,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Js]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Os]),_:1}),l(),Ps]),t("td",Qs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ss,t("td",Us,[t("a",Ws,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),Xs,t("td",Ys,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[$s]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[td]),_:1}),l(),ed]),t("td",ld,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[od,t("td",nd,[t("a",sd,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),dd,t("td",_d,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[ad]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[id]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[cd]),_:1}),l(),hd]),t("td",rd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ud,t("td",fd,[t("a",gd,[l("恢复空格"),e(s)])]),md,t("td",yd,[e(n,{to:"/tag/trie.html"},{default:o(()=>[xd]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[pd]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[bd]),_:1}),l(),kd]),t("td",wd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const qd=a(r,[["render",Id],["__file","rolling-hash.html.vue"]]);export{qd as default};
