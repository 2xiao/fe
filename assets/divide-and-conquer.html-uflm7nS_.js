import{_ as a,r as _,o as c,c as i,a as t,d as e,w as o,b as l,f as r}from"./app-JnDxddK3.js";const h={},u=t("h1",{id:"分治",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#分治","aria-hidden":"true"},"#"),l(" 分治")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),q=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),z=t("code",null,"哈希表",-1),I=t("code",null,"字符串",-1),H=t("code",null,"字符串匹配",-1),w=t("code",null,"树",-1),j=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),K=t("code",null,"最小生成树",-1),O=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),C=t("code",null,"拓扑排序",-1),L=t("code",null,"最短路",-1),N=t("code",null,"强连通分量",-1),V=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),W=t("code",null,"字典树",-1),A=t("code",null,"线段树",-1),S=t("code",null,"树状数组",-1),X=t("code",null,"后缀数组",-1),D=t("p",null,[t("strong",null,"算法")],-1),F=t("code",null,"枚举",-1),G=t("code",null,"递归",-1),J=t("span",{class:"blue"},"分治",-1),P=t("code",null,"回溯",-1),Q=t("code",null,"贪心",-1),U=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ut=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),qt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),zt=t("code",null,"水塘抽样",-1),It=t("code",null,"拒绝采样",-1),Ht=t("code",null,"数据库",-1),wt=t("code",null,"设计",-1),jt=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Kt=t("code",null,"交互",-1),Ot=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Ct=t("hr",null,null,-1),Lt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Nt=t("td",{style:{"text-align":"center"}},"4",-1),Vt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/median-of-two-sorted-arrays",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"center"}},Wt={style:{"text-align":"left"}},At=t("code",null,"数组",-1),St=t("code",null,"二分查找",-1),Xt=t("code",null,"分治",-1),Dt={style:{"text-align":"left"}},Ft=t("td",{style:{"text-align":"center"}},"23",-1),Gt={style:{"text-align":"left"}},Jt={href:"https://leetcode.com/problems/merge-k-sorted-lists",target:"_blank",rel:"noopener noreferrer"},Pt={style:{"text-align":"center"}},Qt={style:{"text-align":"left"}},Ut=t("code",null,"链表",-1),Yt=t("code",null,"分治",-1),Zt=t("code",null,"堆（优先队列）",-1),$t=t("code",null,"1+",-1),te={style:{"text-align":"left"}},ee=t("td",{style:{"text-align":"center"}},"53",-1),le={style:{"text-align":"left"}},oe={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},ne={style:{"text-align":"center"}},se={style:{"text-align":"left"}},de=t("code",null,"数组",-1),_e=t("code",null,"分治",-1),ae=t("code",null,"动态规划",-1),ce={style:{"text-align":"left"}},ie=t("td",{style:{"text-align":"center"}},"105",-1),re={style:{"text-align":"left"}},he={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},ue={style:{"text-align":"center"}},fe={style:{"text-align":"left"}},ge=t("code",null,"树",-1),me=t("code",null,"数组",-1),ye=t("code",null,"哈希表",-1),xe=t("code",null,"2+",-1),be={style:{"text-align":"left"}},pe=t("td",{style:{"text-align":"center"}},"106",-1),ke={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ve={style:{"text-align":"center"}},Me={style:{"text-align":"left"}},ze=t("code",null,"树",-1),Ie=t("code",null,"数组",-1),He=t("code",null,"哈希表",-1),we=t("code",null,"2+",-1),je={style:{"text-align":"left"}},Ee=t("td",{style:{"text-align":"center"}},"108",-1),Ke={style:{"text-align":"left"}},Oe={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Be={style:{"text-align":"center"}},Ce={style:{"text-align":"left"}},Le=t("code",null,"树",-1),Ne=t("code",null,"二叉搜索树",-1),Ve=t("code",null,"数组",-1),Re=t("code",null,"2+",-1),Te={style:{"text-align":"left"}},We=t("td",{style:{"text-align":"center"}},"109",-1),Ae={style:{"text-align":"left"}},Se={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Xe={style:{"text-align":"center"}},De={style:{"text-align":"left"}},Fe=t("code",null,"树",-1),Ge=t("code",null,"二叉搜索树",-1),Je=t("code",null,"链表",-1),Pe=t("code",null,"2+",-1),Qe={style:{"text-align":"left"}},Ue=t("td",{style:{"text-align":"center"}},"148",-1),Ye={style:{"text-align":"left"}},Ze={href:"https://leetcode.com/problems/sort-list",target:"_blank",rel:"noopener noreferrer"},$e={style:{"text-align":"center"}},tl={style:{"text-align":"left"}},el=t("code",null,"链表",-1),ll=t("code",null,"双指针",-1),ol=t("code",null,"分治",-1),nl=t("code",null,"2+",-1),sl={style:{"text-align":"left"}},dl=t("td",{style:{"text-align":"center"}},"169",-1),_l={style:{"text-align":"left"}},al={href:"https://leetcode.com/problems/majority-element",target:"_blank",rel:"noopener noreferrer"},cl={style:{"text-align":"center"}},il={style:{"text-align":"left"}},rl=t("code",null,"数组",-1),hl=t("code",null,"哈希表",-1),ul=t("code",null,"分治",-1),fl=t("code",null,"2+",-1),gl={style:{"text-align":"left"}},ml=t("td",{style:{"text-align":"center"}},"190",-1),yl={style:{"text-align":"left"}},xl={href:"https://leetcode.com/problems/reverse-bits",target:"_blank",rel:"noopener noreferrer"},bl={style:{"text-align":"center"}},pl={style:{"text-align":"left"}},kl=t("code",null,"位运算",-1),ql=t("code",null,"分治",-1),vl={style:{"text-align":"left"}},Ml=t("td",{style:{"text-align":"center"}},"191",-1),zl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/number-of-1-bits",target:"_blank",rel:"noopener noreferrer"},Hl={style:{"text-align":"center"}},wl={style:{"text-align":"left"}},jl=t("code",null,"位运算",-1),El=t("code",null,"分治",-1),Kl={style:{"text-align":"left"}},Ol=t("td",{style:{"text-align":"center"}},"215",-1),Bl={style:{"text-align":"left"}},Cl={href:"https://leetcode.com/problems/kth-largest-element-in-an-array",target:"_blank",rel:"noopener noreferrer"},Ll={style:{"text-align":"center"}},Nl={style:{"text-align":"left"}},Vl=t("code",null,"数组",-1),Rl=t("code",null,"分治",-1),Tl=t("code",null,"快速选择",-1),Wl=t("code",null,"2+",-1),Al={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"218",-1),Xl={style:{"text-align":"left"}},Dl={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Fl=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Jl=t("code",null,"树状数组",-1),Pl=t("code",null,"线段树",-1),Ql=t("code",null,"数组",-1),Ul=t("code",null,"4+",-1),Yl={style:{"text-align":"left"}},Zl=t("td",{style:{"text-align":"center"}},"240",-1),$l={style:{"text-align":"left"}},to={href:"https://leetcode.com/problems/search-a-2d-matrix-ii",target:"_blank",rel:"noopener noreferrer"},eo={style:{"text-align":"center"}},lo={style:{"text-align":"left"}},oo=t("code",null,"数组",-1),no=t("code",null,"二分查找",-1),so=t("code",null,"分治",-1),_o=t("code",null,"1+",-1),ao={style:{"text-align":"left"}},co=t("td",{style:{"text-align":"center"}},"315",-1),io={style:{"text-align":"left"}},ro={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},null,-1),uo={style:{"text-align":"left"}},fo=t("code",null,"树状数组",-1),go=t("code",null,"线段树",-1),mo=t("code",null,"数组",-1),yo=t("code",null,"4+",-1),xo={style:{"text-align":"left"}},bo=t("td",{style:{"text-align":"center"}},"324",-1),po={style:{"text-align":"left"}},ko={href:"https://leetcode.com/problems/wiggle-sort-ii",target:"_blank",rel:"noopener noreferrer"},qo=t("td",{style:{"text-align":"center"}},null,-1),vo={style:{"text-align":"left"}},Mo=t("code",null,"贪心",-1),zo=t("code",null,"数组",-1),Io=t("code",null,"分治",-1),Ho=t("code",null,"2+",-1),wo={style:{"text-align":"left"}},jo=t("td",{style:{"text-align":"center"}},"327",-1),Eo={style:{"text-align":"left"}},Ko={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Oo=t("td",{style:{"text-align":"center"}},null,-1),Bo={style:{"text-align":"left"}},Co=t("code",null,"树状数组",-1),Lo=t("code",null,"线段树",-1),No=t("code",null,"数组",-1),Vo=t("code",null,"4+",-1),Ro={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"347",-1),Wo={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/top-k-frequent-elements",target:"_blank",rel:"noopener noreferrer"},So={style:{"text-align":"center"}},Xo={style:{"text-align":"left"}},Do=t("code",null,"数组",-1),Fo=t("code",null,"哈希表",-1),Go=t("code",null,"分治",-1),Jo=t("code",null,"5+",-1),Po={style:{"text-align":"left"}},Qo=t("td",{style:{"text-align":"center"}},"372",-1),Uo={style:{"text-align":"left"}},Yo={href:"https://leetcode.com/problems/super-pow",target:"_blank",rel:"noopener noreferrer"},Zo=t("td",{style:{"text-align":"center"}},null,-1),$o={style:{"text-align":"left"}},tn=t("code",null,"数学",-1),en=t("code",null,"分治",-1),ln={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"395",-1),nn={style:{"text-align":"left"}},sn={href:"https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},null,-1),_n={style:{"text-align":"left"}},an=t("code",null,"哈希表",-1),cn=t("code",null,"字符串",-1),rn=t("code",null,"分治",-1),hn=t("code",null,"1+",-1),un={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"427",-1),gn={style:{"text-align":"left"}},mn={href:"https://leetcode.com/problems/construct-quad-tree",target:"_blank",rel:"noopener noreferrer"},yn={style:{"text-align":"center"}},xn={style:{"text-align":"left"}},bn=t("code",null,"树",-1),pn=t("code",null,"数组",-1),kn=t("code",null,"分治",-1),qn=t("code",null,"1+",-1),vn={style:{"text-align":"left"}},Mn=t("td",{style:{"text-align":"center"}},"493",-1),zn={style:{"text-align":"left"}},In={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},Hn=t("td",{style:{"text-align":"center"}},null,-1),wn={style:{"text-align":"left"}},jn=t("code",null,"树状数组",-1),En=t("code",null,"线段树",-1),Kn=t("code",null,"数组",-1),On=t("code",null,"4+",-1),Bn={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"558",-1),Ln={style:{"text-align":"left"}},Nn={href:"https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees",target:"_blank",rel:"noopener noreferrer"},Vn=t("td",{style:{"text-align":"center"}},null,-1),Rn={style:{"text-align":"left"}},Tn=t("code",null,"树",-1),Wn=t("code",null,"分治",-1),An={style:{"text-align":"left"}},Sn=t("td",{style:{"text-align":"center"}},"654",-1),Xn={style:{"text-align":"left"}},Dn={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Fn={style:{"text-align":"center"}},Gn={style:{"text-align":"left"}},Jn=t("code",null,"栈",-1),Pn=t("code",null,"树",-1),Qn=t("code",null,"数组",-1),Un=t("code",null,"3+",-1),Yn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"889",-1),$n={style:{"text-align":"left"}},ts={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},es={style:{"text-align":"center"}},ls={style:{"text-align":"left"}},os=t("code",null,"树",-1),ns=t("code",null,"数组",-1),ss=t("code",null,"哈希表",-1),ds=t("code",null,"2+",-1),_s={style:{"text-align":"left"}},as=t("td",{style:{"text-align":"center"}},"912",-1),cs={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/sort-an-array",target:"_blank",rel:"noopener noreferrer"},rs=t("td",{style:{"text-align":"center"}},null,-1),hs={style:{"text-align":"left"}},us=t("code",null,"数组",-1),fs=t("code",null,"分治",-1),gs=t("code",null,"桶排序",-1),ms=t("code",null,"5+",-1),ys={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"918",-1),bs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},ks={style:{"text-align":"center"}},qs={style:{"text-align":"left"}},vs=t("code",null,"队列",-1),Ms=t("code",null,"数组",-1),zs=t("code",null,"分治",-1),Is=t("code",null,"2+",-1),Hs={style:{"text-align":"left"}},ws=t("td",{style:{"text-align":"center"}},"932",-1),js={style:{"text-align":"left"}},Es={href:"https://leetcode.com/problems/beautiful-array",target:"_blank",rel:"noopener noreferrer"},Ks=t("td",{style:{"text-align":"center"}},null,-1),Os={style:{"text-align":"left"}},Bs=t("code",null,"数组",-1),Cs=t("code",null,"数学",-1),Ls=t("code",null,"分治",-1),Ns={style:{"text-align":"left"}},Vs=t("td",{style:{"text-align":"center"}},"973",-1),Rs={style:{"text-align":"left"}},Ts={href:"https://leetcode.com/problems/k-closest-points-to-origin",target:"_blank",rel:"noopener noreferrer"},Ws={style:{"text-align":"center"}},As={style:{"text-align":"left"}},Ss=t("code",null,"几何",-1),Xs=t("code",null,"数组",-1),Ds=t("code",null,"数学",-1),Fs=t("code",null,"4+",-1),Gs={style:{"text-align":"left"}},Js=t("td",{style:{"text-align":"center"}},"1274",-1),Ps={style:{"text-align":"left"}},Qs={href:"https://leetcode.com/problems/number-of-ships-in-a-rectangle",target:"_blank",rel:"noopener noreferrer"},Us=t("td",{style:{"text-align":"center"}},null,-1),Ys={style:{"text-align":"left"}},Zs=t("code",null,"数组",-1),$s=t("code",null,"分治",-1),td=t("code",null,"交互",-1),ed={style:{"text-align":"left"}},ld=t("td",{style:{"text-align":"center"}},"1382",-1),od={style:{"text-align":"left"}},nd={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},sd=t("td",{style:{"text-align":"center"}},null,-1),dd={style:{"text-align":"left"}},_d=t("code",null,"贪心",-1),ad=t("code",null,"树",-1),cd=t("code",null,"深度优先搜索",-1),id=t("code",null,"3+",-1),rd={style:{"text-align":"left"}},hd=t("td",{style:{"text-align":"center"}},"1569",-1),ud={style:{"text-align":"left"}},fd={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},gd=t("td",{style:{"text-align":"center"}},null,-1),md={style:{"text-align":"left"}},yd=t("code",null,"树",-1),xd=t("code",null,"并查集",-1),bd=t("code",null,"二叉搜索树",-1),pd=t("code",null,"7+",-1),kd={style:{"text-align":"left"}},qd=t("td",{style:{"text-align":"center"}},"1649",-1),vd={style:{"text-align":"left"}},Md={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},null,-1),Id={style:{"text-align":"left"}},Hd=t("code",null,"树状数组",-1),wd=t("code",null,"线段树",-1),jd=t("code",null,"数组",-1),Ed=t("code",null,"4+",-1),Kd={style:{"text-align":"left"}},Od=t("td",{style:{"text-align":"center"}},"1738",-1),Bd={style:{"text-align":"left"}},Cd={href:"https://leetcode.com/problems/find-kth-largest-xor-coordinate-value",target:"_blank",rel:"noopener noreferrer"},Ld=t("td",{style:{"text-align":"center"}},null,-1),Nd={style:{"text-align":"left"}},Vd=t("code",null,"位运算",-1),Rd=t("code",null,"数组",-1),Td=t("code",null,"分治",-1),Wd=t("code",null,"5+",-1),Ad={style:{"text-align":"left"}},Sd=t("td",{style:{"text-align":"center"}},"1763",-1),Xd={style:{"text-align":"left"}},Dd={href:"https://leetcode.com/problems/longest-nice-substring",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Gd={style:{"text-align":"left"}},Jd=t("code",null,"位运算",-1),Pd=t("code",null,"哈希表",-1),Qd=t("code",null,"字符串",-1),Ud=t("code",null,"2+",-1),Yd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"1982",-1),$d={style:{"text-align":"left"}},t_={href:"https://leetcode.com/problems/find-array-given-subset-sums",target:"_blank",rel:"noopener noreferrer"},e_=t("td",{style:{"text-align":"center"}},null,-1),l_={style:{"text-align":"left"}},o_=t("code",null,"数组",-1),n_=t("code",null,"分治",-1),s_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"1985",-1),__={style:{"text-align":"left"}},a_={href:"https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array",target:"_blank",rel:"noopener noreferrer"},c_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},r_=t("code",null,"数组",-1),h_=t("code",null,"字符串",-1),u_=t("code",null,"分治",-1),f_=t("code",null,"3+",-1),g_={style:{"text-align":"left"}},m_=t("td",{style:{"text-align":"center"}},"2031",-1),y_={style:{"text-align":"left"}},x_={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},b_=t("td",{style:{"text-align":"center"}},null,-1),p_={style:{"text-align":"left"}},k_=t("code",null,"树状数组",-1),q_=t("code",null,"线段树",-1),v_=t("code",null,"数组",-1),M_=t("code",null,"4+",-1),z_={style:{"text-align":"left"}},I_=t("td",{style:{"text-align":"center"}},"2179",-1),H_={style:{"text-align":"left"}},w_={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},j_=t("td",{style:{"text-align":"center"}},null,-1),E_={style:{"text-align":"left"}},K_=t("code",null,"树状数组",-1),O_=t("code",null,"线段树",-1),B_=t("code",null,"数组",-1),C_=t("code",null,"4+",-1),L_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"2343",-1),V_={style:{"text-align":"left"}},R_={href:"https://leetcode.com/problems/query-kth-smallest-trimmed-number",target:"_blank",rel:"noopener noreferrer"},T_=t("td",{style:{"text-align":"center"}},null,-1),W_={style:{"text-align":"left"}},A_=t("code",null,"数组",-1),S_=t("code",null,"字符串",-1),X_=t("code",null,"分治",-1),D_=t("code",null,"4+",-1),F_={style:{"text-align":"left"}},G_=t("td",{style:{"text-align":"center"}},"2407",-1),J_={style:{"text-align":"left"}},P_={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},null,-1),U_={style:{"text-align":"left"}},Y_=t("code",null,"树状数组",-1),Z_=t("code",null,"线段树",-1),$_=t("code",null,"队列",-1),ta=t("code",null,"4+",-1),ea={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"2426",-1),oa={style:{"text-align":"left"}},na={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},sa=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"树状数组",-1),aa=t("code",null,"线段树",-1),ca=t("code",null,"数组",-1),ia=t("code",null,"4+",-1),ra={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"2519",-1),ua={style:{"text-align":"left"}},fa={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},ga=t("td",{style:{"text-align":"center"}},null,-1),ma={style:{"text-align":"left"}},ya=t("code",null,"树状数组",-1),xa=t("code",null,"线段树",-1),ba=t("code",null,"数组",-1),pa=t("code",null,"4+",-1),ka={style:{"text-align":"left"}},qa=t("td",{style:{"text-align":"center"}},"2613",-1),va={style:{"text-align":"left"}},Ma={href:"https://leetcode.com/problems/beautiful-pairs",target:"_blank",rel:"noopener noreferrer"},za=t("td",{style:{"text-align":"center"}},null,-1),Ia={style:{"text-align":"left"}},Ha=t("code",null,"几何",-1),wa=t("code",null,"数组",-1),ja=t("code",null,"数学",-1),Ea=t("code",null,"3+",-1),Ka={style:{"text-align":"left"}},Oa=t("td",{style:{"text-align":"center"}},"2792",-1),Ba={style:{"text-align":"left"}},Ca={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},La=t("td",{style:{"text-align":"center"}},null,-1),Na={style:{"text-align":"left"}},Va=t("code",null,"树",-1),Ra=t("code",null,"深度优先搜索",-1),Ta=t("code",null,"分治",-1),Wa=t("code",null,"1+",-1),Aa={style:{"text-align":"left"}},Sa=t("td",{style:{"text-align":"center"}},"3109",-1),Xa={style:{"text-align":"left"}},Da={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},Fa=t("td",{style:{"text-align":"center"}},null,-1),Ga={style:{"text-align":"left"}},Ja=t("code",null,"树状数组",-1),Pa=t("code",null,"线段树",-1),Qa=t("code",null,"数组",-1),Ua=t("code",null,"4+",-1),Ya={style:{"text-align":"left"}},Za=t("td",{style:{"text-align":"center"}},"3165",-1),$a={style:{"text-align":"left"}},tc={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},ec=t("td",{style:{"text-align":"center"}},null,-1),lc={style:{"text-align":"left"}},oc=t("code",null,"线段树",-1),nc=t("code",null,"数组",-1),sc=t("code",null,"分治",-1),dc=t("code",null,"1+",-1),_c={style:{"text-align":"left"}},ac=t("td",{style:{"text-align":"center"}},"剑指 Offer 39",-1),cc={style:{"text-align":"left"}},ic={href:"https://leetcode.cn/problems/shu-zu-zhong-chu-xian-ci-shu-chao-guo-yi-ban-de-shu-zi-lcof",target:"_blank",rel:"noopener noreferrer"},rc={style:{"text-align":"center"}},hc={style:{"text-align":"left"}},uc=t("code",null,"数组",-1),fc=t("code",null,"哈希表",-1),gc=t("code",null,"分治",-1),mc=t("code",null,"2+",-1),yc={style:{"text-align":"left"}},xc=t("td",{style:{"text-align":"center"}},"剑指 Offer 4",-1),bc={style:{"text-align":"left"}},pc={href:"https://leetcode.cn/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof",target:"_blank",rel:"noopener noreferrer"},kc={style:{"text-align":"center"}},qc={style:{"text-align":"left"}},vc=t("code",null,"数组",-1),Mc=t("code",null,"二分查找",-1),zc=t("code",null,"分治",-1),Ic=t("code",null,"1+",-1),Hc={style:{"text-align":"left"}},wc=t("td",{style:{"text-align":"center"}},"剑指 Offer 40",-1),jc={style:{"text-align":"left"}},Ec={href:"https://leetcode.cn/problems/zui-xiao-de-kge-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Kc={style:{"text-align":"center"}},Oc={style:{"text-align":"left"}},Bc=t("code",null,"数组",-1),Cc=t("code",null,"分治",-1),Lc=t("code",null,"快速选择",-1),Nc=t("code",null,"2+",-1),Vc={style:{"text-align":"left"}},Rc=t("td",{style:{"text-align":"center"}},"剑指 Offer 42",-1),Tc={style:{"text-align":"left"}},Wc={href:"https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof",target:"_blank",rel:"noopener noreferrer"},Ac={style:{"text-align":"center"}},Sc={style:{"text-align":"left"}},Xc=t("code",null,"数组",-1),Dc=t("code",null,"分治",-1),Fc=t("code",null,"动态规划",-1),Gc={style:{"text-align":"left"}},Jc=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),Pc={style:{"text-align":"left"}},Qc={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},Uc={style:{"text-align":"center"}},Yc={style:{"text-align":"left"}},Zc=t("code",null,"树状数组",-1),$c=t("code",null,"线段树",-1),ti=t("code",null,"数组",-1),ei=t("code",null,"4+",-1),li={style:{"text-align":"left"}},oi=t("td",{style:{"text-align":"center"}},"剑指 Offer 7",-1),ni={style:{"text-align":"left"}},si={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},di={style:{"text-align":"center"}},_i={style:{"text-align":"left"}},ai=t("code",null,"树",-1),ci=t("code",null,"数组",-1),ii=t("code",null,"哈希表",-1),ri=t("code",null,"2+",-1),hi={style:{"text-align":"left"}},ui=t("td",{style:{"text-align":"center"}},"剑指 Offer II 60",-1),fi={style:{"text-align":"left"}},gi={href:"https://leetcode.cn/problems/g5c51o",target:"_blank",rel:"noopener noreferrer"},mi={style:{"text-align":"center"}},yi={style:{"text-align":"left"}},xi=t("code",null,"数组",-1),bi=t("code",null,"哈希表",-1),pi=t("code",null,"分治",-1),ki=t("code",null,"5+",-1),qi={style:{"text-align":"left"}},vi=t("td",{style:{"text-align":"center"}},"剑指 Offer II 76",-1),Mi={style:{"text-align":"left"}},zi={href:"https://leetcode.cn/problems/xx4gT2",target:"_blank",rel:"noopener noreferrer"},Ii={style:{"text-align":"center"}},Hi={style:{"text-align":"left"}},wi=t("code",null,"数组",-1),ji=t("code",null,"分治",-1),Ei=t("code",null,"快速选择",-1),Ki=t("code",null,"2+",-1),Oi={style:{"text-align":"left"}},Bi=t("td",{style:{"text-align":"center"}},"剑指 Offer II 77",-1),Ci={style:{"text-align":"left"}},Li={href:"https://leetcode.cn/problems/7WHec2",target:"_blank",rel:"noopener noreferrer"},Ni={style:{"text-align":"center"}},Vi={style:{"text-align":"left"}},Ri=t("code",null,"链表",-1),Ti=t("code",null,"双指针",-1),Wi=t("code",null,"分治",-1),Ai=t("code",null,"2+",-1),Si={style:{"text-align":"left"}},Xi=t("td",{style:{"text-align":"center"}},"剑指 Offer II 78",-1),Di={style:{"text-align":"left"}},Fi={href:"https://leetcode.cn/problems/vvXgSW",target:"_blank",rel:"noopener noreferrer"},Gi={style:{"text-align":"center"}},Ji={style:{"text-align":"left"}},Pi=t("code",null,"链表",-1),Qi=t("code",null,"分治",-1),Ui=t("code",null,"堆（优先队列）",-1),Yi=t("code",null,"1+",-1),Zi={style:{"text-align":"left"}},$i=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),tr={style:{"text-align":"left"}},er={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},lr=t("td",{style:{"text-align":"center"}},null,-1),or={style:{"text-align":"left"}},nr=t("code",null,"树",-1),sr=t("code",null,"二叉搜索树",-1),dr=t("code",null,"数组",-1),_r=t("code",null,"2+",-1),ar={style:{"text-align":"left"}},cr=t("td",{style:{"text-align":"center"}},"面试题 10.09",-1),ir={style:{"text-align":"left"}},rr={href:"https://leetcode.cn/problems/sorted-matrix-search-lcci",target:"_blank",rel:"noopener noreferrer"},hr=t("td",{style:{"text-align":"center"}},null,-1),ur={style:{"text-align":"left"}},fr=t("code",null,"数组",-1),gr=t("code",null,"二分查找",-1),mr=t("code",null,"分治",-1),yr=t("code",null,"1+",-1),xr={style:{"text-align":"left"}},br=t("td",{style:{"text-align":"center"}},"面试题 16.17",-1),pr={style:{"text-align":"left"}},kr={href:"https://leetcode.cn/problems/contiguous-sequence-lcci",target:"_blank",rel:"noopener noreferrer"},qr=t("td",{style:{"text-align":"center"}},null,-1),vr={style:{"text-align":"left"}},Mr=t("code",null,"数组",-1),zr=t("code",null,"分治",-1),Ir=t("code",null,"动态规划",-1),Hr={style:{"text-align":"left"}},wr=t("td",{style:{"text-align":"center"}},"面试题 17.14",-1),jr={style:{"text-align":"left"}},Er={href:"https://leetcode.cn/problems/smallest-k-lcci",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},null,-1),Or={style:{"text-align":"left"}},Br=t("code",null,"数组",-1),Cr=t("code",null,"分治",-1),Lr=t("code",null,"快速选择",-1),Nr=t("code",null,"2+",-1),Vr={style:{"text-align":"left"}};function Rr(Tr,Wr){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return c(),i("div",null,[u,t("details",null,[f,g,t("p",null,[e(n,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/tag/shortest-path.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/tag/biconnected-component.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/tag/trie.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[X]),_:1})]),D,t("p",null,[e(n,{to:"/tag/enumeration.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/tag/recursion.html"},{default:o(()=>[G]),_:1}),l(),J,l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/tag/bucket-sort.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/tag/counting.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/tag/rolling-hash.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(n,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(n,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/tag/rejection-sampling.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/tag/database.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/tag/interactive.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/tag/iterator.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Bt]),_:1})])]),Ct,r(" prettier-ignore "),t("table",null,[Lt,t("tbody",null,[t("tr",null,[Nt,t("td",Vt,[t("a",Rt,[l("寻找两个正序数组的中位数"),e(s)])]),t("td",Tt,[e(n,{to:"/problem/0004.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wt,[e(n,{to:"/tag/array.html"},{default:o(()=>[At]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[St]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Xt]),_:1})]),t("td",Dt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ft,t("td",Gt,[t("a",Jt,[l("合并 K 个升序链表"),e(s)])]),t("td",Pt,[e(n,{to:"/problem/0023.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qt,[e(n,{to:"/tag/linked-list.html"},{default:o(()=>[Ut]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[Zt]),_:1}),l(),$t]),t("td",te,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ee,t("td",le,[t("a",oe,[l("最大子数组和"),e(s)])]),t("td",ne,[e(n,{to:"/problem/0053.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",se,[e(n,{to:"/tag/array.html"},{default:o(()=>[de]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ae]),_:1})]),t("td",ce,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ie,t("td",re,[t("a",he,[l("从前序与中序遍历序列构造二叉树"),e(s)])]),t("td",ue,[e(n,{to:"/problem/0105.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fe,[e(n,{to:"/tag/tree.html"},{default:o(()=>[ge]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[me]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[ye]),_:1}),l(),xe]),t("td",be,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pe,t("td",ke,[t("a",qe,[l("从中序与后序遍历序列构造二叉树"),e(s)])]),t("td",ve,[e(n,{to:"/problem/0106.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Me,[e(n,{to:"/tag/tree.html"},{default:o(()=>[ze]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ie]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[He]),_:1}),l(),we]),t("td",je,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ee,t("td",Ke,[t("a",Oe,[l("将有序数组转换为二叉搜索树"),e(s)])]),t("td",Be,[e(n,{to:"/problem/0108.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ce,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ve]),_:1}),l(),Re]),t("td",Te,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[We,t("td",Ae,[t("a",Se,[l("有序链表转换二叉搜索树"),e(s)])]),t("td",Xe,[e(n,{to:"/problem/0109.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",De,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Fe]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ge]),_:1}),l(),e(n,{to:"/tag/linked-list.html"},{default:o(()=>[Je]),_:1}),l(),Pe]),t("td",Qe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ue,t("td",Ye,[t("a",Ze,[l("排序链表"),e(s)])]),t("td",$e,[e(n,{to:"/problem/0148.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",tl,[e(n,{to:"/tag/linked-list.html"},{default:o(()=>[el]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[ll]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[ol]),_:1}),l(),nl]),t("td",sl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dl,t("td",_l,[t("a",al,[l("多数元素"),e(s)])]),t("td",cl,[e(n,{to:"/problem/0169.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",il,[e(n,{to:"/tag/array.html"},{default:o(()=>[rl]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[hl]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[ul]),_:1}),l(),fl]),t("td",gl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ml,t("td",yl,[t("a",xl,[l("颠倒二进制位"),e(s)])]),t("td",bl,[e(n,{to:"/problem/0190.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",pl,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[kl]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[ql]),_:1})]),t("td",vl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ml,t("td",zl,[t("a",Il,[l("位1的个数"),e(s)])]),t("td",Hl,[e(n,{to:"/problem/0191.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wl,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[jl]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[El]),_:1})]),t("td",Kl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ol,t("td",Bl,[t("a",Cl,[l("数组中的第K个最大元素"),e(s)])]),t("td",Ll,[e(n,{to:"/problem/0215.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Nl,[e(n,{to:"/tag/array.html"},{default:o(()=>[Vl]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Rl]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[Tl]),_:1}),l(),Wl]),t("td",Al,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Xl,[t("a",Dl,[l("天际线问题"),e(s)])]),Fl,t("td",Gl,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Pl]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ql]),_:1}),l(),Ul]),t("td",Yl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zl,t("td",$l,[t("a",to,[l("搜索二维矩阵 II"),e(s)])]),t("td",eo,[e(n,{to:"/problem/0240.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lo,[e(n,{to:"/tag/array.html"},{default:o(()=>[oo]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[no]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[so]),_:1}),l(),_o]),t("td",ao,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[co,t("td",io,[t("a",ro,[l("计算右侧小于当前元素的个数"),e(s)])]),ho,t("td",uo,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[fo]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[go]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[mo]),_:1}),l(),yo]),t("td",xo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bo,t("td",po,[t("a",ko,[l("摆动排序 II"),e(s)])]),qo,t("td",vo,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Mo]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Io]),_:1}),l(),Ho]),t("td",wo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jo,t("td",Eo,[t("a",Ko,[l("区间和的个数"),e(s)])]),Oo,t("td",Bo,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Co]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[No]),_:1}),l(),Vo]),t("td",Ro,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[To,t("td",Wo,[t("a",Ao,[l("前 K 个高频元素"),e(s)])]),t("td",So,[e(n,{to:"/problem/0347.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xo,[e(n,{to:"/tag/array.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Go]),_:1}),l(),Jo]),t("td",Po,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qo,t("td",Uo,[t("a",Yo,[l("超级次方"),e(s)])]),Zo,t("td",$o,[e(n,{to:"/tag/math.html"},{default:o(()=>[tn]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[en]),_:1})]),t("td",ln,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[on,t("td",nn,[t("a",sn,[l("至少有 K 个重复字符的最长子串"),e(s)])]),dn,t("td",_n,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[an]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[cn]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[rn]),_:1}),l(),hn]),t("td",un,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fn,t("td",gn,[t("a",mn,[l("建立四叉树"),e(s)])]),t("td",yn,[e(n,{to:"/problem/0427.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xn,[e(n,{to:"/tag/tree.html"},{default:o(()=>[bn]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[pn]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[kn]),_:1}),l(),qn]),t("td",vn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mn,t("td",zn,[t("a",In,[l("翻转对"),e(s)])]),Hn,t("td",wn,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[En]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Kn]),_:1}),l(),On]),t("td",Bn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cn,t("td",Ln,[t("a",Nn,[l("四叉树交集"),e(s)])]),Vn,t("td",Rn,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Tn]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Wn]),_:1})]),t("td",An,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sn,t("td",Xn,[t("a",Dn,[l("最大二叉树"),e(s)])]),t("td",Fn,[e(n,{to:"/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gn,[e(n,{to:"/tag/stack.html"},{default:o(()=>[Jn]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[Pn]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Qn]),_:1}),l(),Un]),t("td",Yn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zn,t("td",$n,[t("a",ts,[l("根据前序和后序遍历构造二叉树"),e(s)])]),t("td",es,[e(n,{to:"/problem/0889.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ls,[e(n,{to:"/tag/tree.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ns]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[ss]),_:1}),l(),ds]),t("td",_s,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[as,t("td",cs,[t("a",is,[l("排序数组"),e(s)])]),rs,t("td",hs,[e(n,{to:"/tag/array.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[fs]),_:1}),l(),e(n,{to:"/tag/bucket-sort.html"},{default:o(()=>[gs]),_:1}),l(),ms]),t("td",ys,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xs,t("td",bs,[t("a",ps,[l("环形子数组的最大和"),e(s)])]),t("td",ks,[e(n,{to:"/problem/0918.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qs,[e(n,{to:"/tag/queue.html"},{default:o(()=>[vs]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ms]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[zs]),_:1}),l(),Is]),t("td",Hs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ws,t("td",js,[t("a",Es,[l("漂亮数组"),e(s)])]),Ks,t("td",Os,[e(n,{to:"/tag/array.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Cs]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Ls]),_:1})]),t("td",Ns,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vs,t("td",Rs,[t("a",Ts,[l("最接近原点的 K 个点"),e(s)])]),t("td",Ws,[e(n,{to:"/problem/0973.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",As,[e(n,{to:"/tag/geometry.html"},{default:o(()=>[Ss]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Xs]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Ds]),_:1}),l(),Fs]),t("td",Gs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Js,t("td",Ps,[t("a",Qs,[l("矩形内船只的数目 🔒"),e(s)])]),Us,t("td",Ys,[e(n,{to:"/tag/array.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[$s]),_:1}),l(),e(n,{to:"/tag/interactive.html"},{default:o(()=>[td]),_:1})]),t("td",ed,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ld,t("td",od,[t("a",nd,[l("将二叉搜索树变平衡"),e(s)])]),sd,t("td",dd,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[_d]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[ad]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[cd]),_:1}),l(),id]),t("td",rd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hd,t("td",ud,[t("a",fd,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),gd,t("td",md,[e(n,{to:"/tag/tree.html"},{default:o(()=>[yd]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[xd]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[bd]),_:1}),l(),pd]),t("td",kd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qd,t("td",vd,[t("a",Md,[l("通过指令创建有序数组"),e(s)])]),zd,t("td",Id,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Hd]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[wd]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[jd]),_:1}),l(),Ed]),t("td",Kd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Od,t("td",Bd,[t("a",Cd,[l("找出第 K 大的异或坐标值"),e(s)])]),Ld,t("td",Nd,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Vd]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Rd]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Td]),_:1}),l(),Wd]),t("td",Ad,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sd,t("td",Xd,[t("a",Dd,[l("最长的美好子字符串"),e(s)])]),Fd,t("td",Gd,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Qd]),_:1}),l(),Ud]),t("td",Yd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zd,t("td",$d,[t("a",t_,[l("从子集的和还原数组"),e(s)])]),e_,t("td",l_,[e(n,{to:"/tag/array.html"},{default:o(()=>[o_]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[n_]),_:1})]),t("td",s_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d_,t("td",__,[t("a",a_,[l("找出数组中的第 K 大整数"),e(s)])]),c_,t("td",i_,[e(n,{to:"/tag/array.html"},{default:o(()=>[r_]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[u_]),_:1}),l(),f_]),t("td",g_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m_,t("td",y_,[t("a",x_,[l("1 比 0 多的子数组个数 🔒"),e(s)])]),b_,t("td",p_,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[k_]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[v_]),_:1}),l(),M_]),t("td",z_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I_,t("td",H_,[t("a",w_,[l("统计数组中好三元组数目"),e(s)])]),j_,t("td",E_,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[K_]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[O_]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[B_]),_:1}),l(),C_]),t("td",L_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[N_,t("td",V_,[t("a",R_,[l("裁剪数字后查询第 K 小的数字"),e(s)])]),T_,t("td",W_,[e(n,{to:"/tag/array.html"},{default:o(()=>[A_]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[S_]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[X_]),_:1}),l(),D_]),t("td",F_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G_,t("td",J_,[t("a",P_,[l("最长递增子序列 II"),e(s)])]),Q_,t("td",U_,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Y_]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Z_]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[$_]),_:1}),l(),ta]),t("td",ea,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[la,t("td",oa,[t("a",na,[l("满足不等式的数对数目"),e(s)])]),sa,t("td",da,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[_a]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[aa]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ca]),_:1}),l(),ia]),t("td",ra,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ha,t("td",ua,[t("a",fa,[l("统计 K-Big 索引的数量 🔒"),e(s)])]),ga,t("td",ma,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[ya]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[xa]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ba]),_:1}),l(),pa]),t("td",ka,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qa,t("td",va,[t("a",Ma,[l("美数对 🔒"),e(s)])]),za,t("td",Ia,[e(n,{to:"/tag/geometry.html"},{default:o(()=>[Ha]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[wa]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[ja]),_:1}),l(),Ea]),t("td",Ka,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oa,t("td",Ba,[t("a",Ca,[l("计算足够大的节点数 🔒"),e(s)])]),La,t("td",Na,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Va]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ra]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Ta]),_:1}),l(),Wa]),t("td",Aa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sa,t("td",Xa,[t("a",Da,[l("查找排列的下标 🔒"),e(s)])]),Fa,t("td",Ga,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Ja]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Pa]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Qa]),_:1}),l(),Ua]),t("td",Ya,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Za,t("td",$a,[t("a",tc,[l("不包含相邻元素的子序列的最大和"),e(s)])]),ec,t("td",lc,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[oc]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[nc]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[sc]),_:1}),l(),dc]),t("td",_c,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ac,t("td",cc,[t("a",ic,[l("数组中出现次数超过一半的数字"),e(s)])]),t("td",rc,[e(n,{to:"/offer/jz_offer_39_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hc,[e(n,{to:"/tag/array.html"},{default:o(()=>[uc]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[fc]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[gc]),_:1}),l(),mc]),t("td",yc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xc,t("td",bc,[t("a",pc,[l("二维数组中的查找"),e(s)])]),t("td",kc,[e(n,{to:"/offer/jz_offer_04_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qc,[e(n,{to:"/tag/array.html"},{default:o(()=>[vc]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[Mc]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[zc]),_:1}),l(),Ic]),t("td",Hc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wc,t("td",jc,[t("a",Ec,[l("最小的k个数"),e(s)])]),t("td",Kc,[e(n,{to:"/offer/jz_offer_40_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Oc,[e(n,{to:"/tag/array.html"},{default:o(()=>[Bc]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Cc]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[Lc]),_:1}),l(),Nc]),t("td",Vc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Rc,t("td",Tc,[t("a",Wc,[l("连续子数组的最大和"),e(s)])]),t("td",Ac,[e(n,{to:"/offer/jz_offer_42_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sc,[e(n,{to:"/tag/array.html"},{default:o(()=>[Xc]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Dc]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Fc]),_:1})]),t("td",Gc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Jc,t("td",Pc,[t("a",Qc,[l("数组中的逆序对"),e(s)])]),t("td",Uc,[e(n,{to:"/offer/jz_offer_51_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yc,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Zc]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[$c]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ti]),_:1}),l(),ei]),t("td",li,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oi,t("td",ni,[t("a",si,[l("重建二叉树"),e(s)])]),t("td",di,[e(n,{to:"/offer/jz_offer_07_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_i,[e(n,{to:"/tag/tree.html"},{default:o(()=>[ai]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ci]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[ii]),_:1}),l(),ri]),t("td",hi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ui,t("td",fi,[t("a",gi,[l("出现频率最高的 k 个数字"),e(s)])]),t("td",mi,[e(n,{to:"/offer2/jz_offer_II_060.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yi,[e(n,{to:"/tag/array.html"},{default:o(()=>[xi]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[bi]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[pi]),_:1}),l(),ki]),t("td",qi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vi,t("td",Mi,[t("a",zi,[l("数组中的第 k 大的数字"),e(s)])]),t("td",Ii,[e(n,{to:"/offer2/jz_offer_II_076.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hi,[e(n,{to:"/tag/array.html"},{default:o(()=>[wi]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[ji]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[Ei]),_:1}),l(),Ki]),t("td",Oi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bi,t("td",Ci,[t("a",Li,[l("链表排序"),e(s)])]),t("td",Ni,[e(n,{to:"/offer2/jz_offer_II_077.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Vi,[e(n,{to:"/tag/linked-list.html"},{default:o(()=>[Ri]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[Ti]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Wi]),_:1}),l(),Ai]),t("td",Si,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xi,t("td",Di,[t("a",Fi,[l("合并排序链表"),e(s)])]),t("td",Gi,[e(n,{to:"/offer2/jz_offer_II_078.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ji,[e(n,{to:"/tag/linked-list.html"},{default:o(()=>[Pi]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Qi]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[Ui]),_:1}),l(),Yi]),t("td",Zi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$i,t("td",tr,[t("a",er,[l("最小高度树"),e(s)])]),lr,t("td",or,[e(n,{to:"/tag/tree.html"},{default:o(()=>[nr]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[sr]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[dr]),_:1}),l(),_r]),t("td",ar,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cr,t("td",ir,[t("a",rr,[l("排序矩阵查找"),e(s)])]),hr,t("td",ur,[e(n,{to:"/tag/array.html"},{default:o(()=>[fr]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[gr]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[mr]),_:1}),l(),yr]),t("td",xr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[br,t("td",pr,[t("a",kr,[l("连续数列"),e(s)])]),qr,t("td",vr,[e(n,{to:"/tag/array.html"},{default:o(()=>[Mr]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[zr]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ir]),_:1})]),t("td",Hr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wr,t("td",jr,[t("a",Er,[l("最小K个数"),e(s)])]),Kr,t("td",Or,[e(n,{to:"/tag/array.html"},{default:o(()=>[Br]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Cr]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[Lr]),_:1}),l(),Nr]),t("td",Vr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const Sr=a(h,[["render",Rr],["__file","divide-and-conquer.html.vue"]]);export{Sr as default};
