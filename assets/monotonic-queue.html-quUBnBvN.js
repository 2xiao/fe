import{_ as a,r as _,o as c,c as i,a as t,b as e,w as l,d as o,f as h}from"./app-Fucr7yuT.js";const u={},r=t("h1",{id:"单调队列",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#单调队列","aria-hidden":"true"},"#"),o(" 单调队列")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),q=t("code",null,"队列",-1),w=t("span",{class:"blue"},"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),I=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),M=t("code",null,"树",-1),V=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),E=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),O=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),Q=t("code",null,"并查集",-1),T=t("code",null,"字典树",-1),A=t("code",null,"线段树",-1),D=t("code",null,"树状数组",-1),F=t("code",null,"后缀数组",-1),G=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),P=t("code",null,"递归",-1),S=t("code",null,"分治",-1),U=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),X=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),lt=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),rt=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),qt=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),It=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Mt=t("code",null,"设计",-1),Vt=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Et=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"239",-1),Ot={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},Qt={style:{"text-align":"center"}},Tt={style:{"text-align":"left"}},At=t("code",null,"队列",-1),Dt=t("code",null,"数组",-1),Ft=t("code",null,"滑动窗口",-1),Gt=t("code",null,"2+",-1),Jt={style:{"text-align":"left"}},Pt=t("td",{style:{"text-align":"center"}},"683",-1),St={style:{"text-align":"left"}},Ut={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},Wt=t("td",{style:{"text-align":"center"}},null,-1),Xt={style:{"text-align":"left"}},Yt=t("code",null,"树状数组",-1),Zt=t("code",null,"线段树",-1),$t=t("code",null,"队列",-1),te=t("code",null,"5+",-1),ee={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"862",-1),le={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),de={style:{"text-align":"left"}},_e=t("code",null,"队列",-1),ae=t("code",null,"数组",-1),ce=t("code",null,"二分查找",-1),ie=t("code",null,"4+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"918",-1),re={style:{"text-align":"left"}},fe={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},ge={style:{"text-align":"center"}},me={style:{"text-align":"left"}},ye=t("code",null,"队列",-1),xe=t("code",null,"数组",-1),be=t("code",null,"分治",-1),pe=t("code",null,"2+",-1),ke={style:{"text-align":"left"}},qe=t("td",{style:{"text-align":"center"}},"1425",-1),we={style:{"text-align":"left"}},He={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},ve=t("td",{style:{"text-align":"center"}},null,-1),Ie={style:{"text-align":"left"}},ze=t("code",null,"队列",-1),Me=t("code",null,"数组",-1),Ve=t("code",null,"动态规划",-1),Le=t("code",null,"3+",-1),Ne={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"1438",-1),Ce={style:{"text-align":"left"}},Ee={href:"https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",target:"_blank",rel:"noopener noreferrer"},je=t("td",{style:{"text-align":"center"}},null,-1),Ke={style:{"text-align":"left"}},Oe=t("code",null,"队列",-1),Re=t("code",null,"数组",-1),Qe=t("code",null,"有序集合",-1),Te=t("code",null,"3+",-1),Ae={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"1499",-1),Fe={style:{"text-align":"left"}},Ge={href:"https://leetcode.com/problems/max-value-of-equation",target:"_blank",rel:"noopener noreferrer"},Je=t("td",{style:{"text-align":"center"}},null,-1),Pe={style:{"text-align":"left"}},Se=t("code",null,"队列",-1),Ue=t("code",null,"数组",-1),We=t("code",null,"滑动窗口",-1),Xe=t("code",null,"2+",-1),Ye={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"1687",-1),$e={style:{"text-align":"left"}},to={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},eo=t("td",{style:{"text-align":"center"}},null,-1),oo={style:{"text-align":"left"}},lo=t("code",null,"线段树",-1),no=t("code",null,"队列",-1),so=t("code",null,"数组",-1),_o=t("code",null,"4+",-1),ao={style:{"text-align":"left"}},co=t("td",{style:{"text-align":"center"}},"1696",-1),io={style:{"text-align":"left"}},ho={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},uo=t("td",{style:{"text-align":"center"}},null,-1),ro={style:{"text-align":"left"}},fo=t("code",null,"队列",-1),go=t("code",null,"数组",-1),mo=t("code",null,"动态规划",-1),yo=t("code",null,"2+",-1),xo={style:{"text-align":"left"}},bo=t("td",{style:{"text-align":"center"}},"2071",-1),po={style:{"text-align":"left"}},ko={href:"https://leetcode.com/problems/maximum-number-of-tasks-you-can-assign",target:"_blank",rel:"noopener noreferrer"},qo=t("td",{style:{"text-align":"center"}},null,-1),wo={style:{"text-align":"left"}},Ho=t("code",null,"贪心",-1),vo=t("code",null,"队列",-1),Io=t("code",null,"数组",-1),zo=t("code",null,"3+",-1),Mo={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"2398",-1),Lo={style:{"text-align":"left"}},No={href:"https://leetcode.com/problems/maximum-number-of-robots-within-budget",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},null,-1),Co={style:{"text-align":"left"}},Eo=t("code",null,"队列",-1),jo=t("code",null,"数组",-1),Ko=t("code",null,"二分查找",-1),Oo=t("code",null,"4+",-1),Ro={style:{"text-align":"left"}},Qo=t("td",{style:{"text-align":"center"}},"2407",-1),To={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Do=t("td",{style:{"text-align":"center"}},null,-1),Fo={style:{"text-align":"left"}},Go=t("code",null,"树状数组",-1),Jo=t("code",null,"线段树",-1),Po=t("code",null,"队列",-1),So=t("code",null,"4+",-1),Uo={style:{"text-align":"left"}},Wo=t("td",{style:{"text-align":"center"}},"2444",-1),Xo={style:{"text-align":"left"}},Yo={href:"https://leetcode.com/problems/count-subarrays-with-fixed-bounds",target:"_blank",rel:"noopener noreferrer"},Zo=t("td",{style:{"text-align":"center"}},null,-1),$o={style:{"text-align":"left"}},tl=t("code",null,"队列",-1),el=t("code",null,"数组",-1),ol=t("code",null,"滑动窗口",-1),ll=t("code",null,"1+",-1),nl={style:{"text-align":"left"}},sl=t("td",{style:{"text-align":"center"}},"2762",-1),dl={style:{"text-align":"left"}},_l={href:"https://leetcode.com/problems/continuous-subarrays",target:"_blank",rel:"noopener noreferrer"},al=t("td",{style:{"text-align":"center"}},null,-1),cl={style:{"text-align":"left"}},il=t("code",null,"队列",-1),hl=t("code",null,"数组",-1),ul=t("code",null,"有序集合",-1),rl=t("code",null,"3+",-1),fl={style:{"text-align":"left"}},gl=t("td",{style:{"text-align":"center"}},"2944",-1),ml={style:{"text-align":"left"}},yl={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},xl=t("td",{style:{"text-align":"center"}},null,-1),bl={style:{"text-align":"left"}},pl=t("code",null,"队列",-1),kl=t("code",null,"数组",-1),ql=t("code",null,"动态规划",-1),wl=t("code",null,"2+",-1),Hl={style:{"text-align":"left"}},vl=t("td",{style:{"text-align":"center"}},"2945",-1),Il={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},Ml=t("td",{style:{"text-align":"center"}},null,-1),Vl={style:{"text-align":"left"}},Ll=t("code",null,"栈",-1),Nl=t("code",null,"队列",-1),Bl=t("code",null,"数组",-1),Cl=t("code",null,"4+",-1),El={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"2969",-1),Kl={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},Rl=t("td",{style:{"text-align":"center"}},null,-1),Ql={style:{"text-align":"left"}},Tl=t("code",null,"队列",-1),Al=t("code",null,"数组",-1),Dl=t("code",null,"动态规划",-1),Fl=t("code",null,"2+",-1),Gl={style:{"text-align":"left"}},Jl=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - I",-1),Pl={style:{"text-align":"left"}},Sl={href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},Ul=t("td",{style:{"text-align":"center"}},null,-1),Wl={style:{"text-align":"left"}},Xl=t("code",null,"队列",-1),Yl=t("code",null,"数组",-1),Zl=t("code",null,"滑动窗口",-1),$l=t("code",null,"2+",-1),tn={style:{"text-align":"left"}},en=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - II",-1),on={style:{"text-align":"left"}},ln={href:"https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},nn=t("td",{style:{"text-align":"center"}},null,-1),sn={style:{"text-align":"left"}},dn=t("code",null,"设计",-1),_n=t("code",null,"队列",-1),an=t("code",null,"单调队列",-1),cn={style:{"text-align":"left"}};function hn(un,rn){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return c(),i("div",null,[r,t("details",null,[f,g,t("p",null,[e(n,{to:"/tag/array.html"},{default:l(()=>[m]),_:1}),o(),e(n,{to:"/tag/matrix.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/tag/linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/tag/stack.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/tag/monotonic-stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/tag/queue.html"},{default:l(()=>[q]),_:1}),o(),w,o(),e(n,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/tag/hash-table.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/tag/string.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/tag/string-matching.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/tag/tree.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/tag/binary-tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/tag/binary-search-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/tag/minimum-spanning-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/tag/graph.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/tag/ordered-set.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/tag/topological-sort.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/tag/shortest-path.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/tag/strongly-connected-component.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/tag/eulerian-circuit.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/tag/biconnected-component.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/tag/union-find.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/tag/trie.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/tag/segment-tree.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/tag/suffix-array.html"},{default:l(()=>[F]),_:1})]),G,t("p",null,[e(n,{to:"/tag/enumeration.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/tag/recursion.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/tag/backtracking.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/tag/greedy.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/tag/sorting.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/tag/bucket-sort.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/tag/counting-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/tag/radix-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/tag/merge-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/tag/quickselect.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/tag/binary-search.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/tag/prefix-sum.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/tag/counting.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/tag/hash-function.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/tag/rolling-hash.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/tag/line-sweep.html"},{default:l(()=>[gt]),_:1})]),mt,t("p",null,[e(n,{to:"/tag/math.html"},{default:l(()=>[yt]),_:1}),o(),e(n,{to:"/tag/number-theory.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/tag/game-theory.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/tag/simulation.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/tag/combinatorics.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/tag/randomized.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/tag/probability-and-statistics.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/tag/reservoir-sampling.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/tag/rejection-sampling.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/tag/database.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/tag/design.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/tag/data-stream.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/tag/brainteaser.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/tag/interactive.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/tag/iterator.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/tag/concurrency.html"},{default:l(()=>[Ct]),_:1})])]),Et,h(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Kt,t("td",Ot,[t("a",Rt,[o("滑动窗口最大值"),e(s)])]),t("td",Qt,[e(n,{to:"/problem/0239.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Tt,[e(n,{to:"/tag/queue.html"},{default:l(()=>[At]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Dt]),_:1}),o(),e(n,{to:"/tag/sliding-window.html"},{default:l(()=>[Ft]),_:1}),o(),Gt]),t("td",Jt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Pt,t("td",St,[t("a",Ut,[o("K 个关闭的灯泡"),e(s)])]),Wt,t("td",Xt,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Yt]),_:1}),o(),e(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Zt]),_:1}),o(),e(n,{to:"/tag/queue.html"},{default:l(()=>[$t]),_:1}),o(),te]),t("td",ee,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[oe,t("td",le,[t("a",ne,[o("和至少为 K 的最短子数组"),e(s)])]),se,t("td",de,[e(n,{to:"/tag/queue.html"},{default:l(()=>[_e]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/tag/binary-search.html"},{default:l(()=>[ce]),_:1}),o(),ie]),t("td",he,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ue,t("td",re,[t("a",fe,[o("环形子数组的最大和"),e(s)])]),t("td",ge,[e(n,{to:"/problem/0918.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",me,[e(n,{to:"/tag/queue.html"},{default:l(()=>[ye]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[be]),_:1}),o(),pe]),t("td",ke,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qe,t("td",we,[t("a",He,[o("带限制的子序列和"),e(s)])]),ve,t("td",Ie,[e(n,{to:"/tag/queue.html"},{default:l(()=>[ze]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Me]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Ve]),_:1}),o(),Le]),t("td",Ne,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Be,t("td",Ce,[t("a",Ee,[o("绝对差不超过限制的最长连续子数组"),e(s)])]),je,t("td",Ke,[e(n,{to:"/tag/queue.html"},{default:l(()=>[Oe]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Re]),_:1}),o(),e(n,{to:"/tag/ordered-set.html"},{default:l(()=>[Qe]),_:1}),o(),Te]),t("td",Ae,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[De,t("td",Fe,[t("a",Ge,[o("满足不等式的最大值"),e(s)])]),Je,t("td",Pe,[e(n,{to:"/tag/queue.html"},{default:l(()=>[Se]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Ue]),_:1}),o(),e(n,{to:"/tag/sliding-window.html"},{default:l(()=>[We]),_:1}),o(),Xe]),t("td",Ye,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ze,t("td",$e,[t("a",to,[o("从仓库到码头运输箱子"),e(s)])]),eo,t("td",oo,[e(n,{to:"/tag/segment-tree.html"},{default:l(()=>[lo]),_:1}),o(),e(n,{to:"/tag/queue.html"},{default:l(()=>[no]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[so]),_:1}),o(),_o]),t("td",ao,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[co,t("td",io,[t("a",ho,[o("跳跃游戏 VI"),e(s)])]),uo,t("td",ro,[e(n,{to:"/tag/queue.html"},{default:l(()=>[fo]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[go]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[mo]),_:1}),o(),yo]),t("td",xo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bo,t("td",po,[t("a",ko,[o("你可以安排的最多任务数目"),e(s)])]),qo,t("td",wo,[e(n,{to:"/tag/greedy.html"},{default:l(()=>[Ho]),_:1}),o(),e(n,{to:"/tag/queue.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Io]),_:1}),o(),zo]),t("td",Mo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vo,t("td",Lo,[t("a",No,[o("预算内的最多机器人数目"),e(s)])]),Bo,t("td",Co,[e(n,{to:"/tag/queue.html"},{default:l(()=>[Eo]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[jo]),_:1}),o(),e(n,{to:"/tag/binary-search.html"},{default:l(()=>[Ko]),_:1}),o(),Oo]),t("td",Ro,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Qo,t("td",To,[t("a",Ao,[o("最长递增子序列 II"),e(s)])]),Do,t("td",Fo,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[Go]),_:1}),o(),e(n,{to:"/tag/segment-tree.html"},{default:l(()=>[Jo]),_:1}),o(),e(n,{to:"/tag/queue.html"},{default:l(()=>[Po]),_:1}),o(),So]),t("td",Uo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Wo,t("td",Xo,[t("a",Yo,[o("统计定界子数组的数目"),e(s)])]),Zo,t("td",$o,[e(n,{to:"/tag/queue.html"},{default:l(()=>[tl]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[el]),_:1}),o(),e(n,{to:"/tag/sliding-window.html"},{default:l(()=>[ol]),_:1}),o(),ll]),t("td",nl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sl,t("td",dl,[t("a",_l,[o("不间断子数组"),e(s)])]),al,t("td",cl,[e(n,{to:"/tag/queue.html"},{default:l(()=>[il]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[hl]),_:1}),o(),e(n,{to:"/tag/ordered-set.html"},{default:l(()=>[ul]),_:1}),o(),rl]),t("td",fl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gl,t("td",ml,[t("a",yl,[o("购买水果需要的最少金币数"),e(s)])]),xl,t("td",bl,[e(n,{to:"/tag/queue.html"},{default:l(()=>[pl]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[kl]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[ql]),_:1}),o(),wl]),t("td",Hl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vl,t("td",Il,[t("a",zl,[o("找到最大非递减数组的长度"),e(s)])]),Ml,t("td",Vl,[e(n,{to:"/tag/stack.html"},{default:l(()=>[Ll]),_:1}),o(),e(n,{to:"/tag/queue.html"},{default:l(()=>[Nl]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Bl]),_:1}),o(),Cl]),t("td",El,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jl,t("td",Kl,[t("a",Ol,[o("购买水果需要的最少金币数 II"),e(s)])]),Rl,t("td",Ql,[e(n,{to:"/tag/queue.html"},{default:l(()=>[Tl]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Al]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Dl]),_:1}),o(),Fl]),t("td",Gl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Jl,t("td",Pl,[t("a",Sl,[o("滑动窗口的最大值"),e(s)])]),Ul,t("td",Wl,[e(n,{to:"/tag/queue.html"},{default:l(()=>[Xl]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Yl]),_:1}),o(),e(n,{to:"/tag/sliding-window.html"},{default:l(()=>[Zl]),_:1}),o(),$l]),t("td",tn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[en,t("td",on,[t("a",ln,[o("队列的最大值"),e(s)])]),nn,t("td",sn,[e(n,{to:"/tag/design.html"},{default:l(()=>[dn]),_:1}),o(),e(n,{to:"/tag/queue.html"},{default:l(()=>[_n]),_:1}),o(),e(n,{to:"/tag/monotonic-queue.html"},{default:l(()=>[an]),_:1})]),t("td",cn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const gn=a(u,[["render",hn],["__file","monotonic-queue.html.vue"]]);export{gn as default};
