import{_ as r,r as i,o as c,c as d,a as t,d as n,b as e,w as o,f as u,e as p}from"./app-ynO5B_DP.js";const _={},h={id:"_136-只出现一次的数字",tabindex:"-1"},m=t("a",{class:"header-anchor",href:"#_136-只出现一次的数字","aria-hidden":"true"},"#",-1),f={href:"https://leetcode.com/problems/single-number",target:"_blank",rel:"noopener noreferrer"},g=t("code",null,"位运算",-1),b=t("code",null,"数组",-1),k={href:"https://leetcode.com/problems/single-number",target:"_blank",rel:"noopener noreferrer"},y=t("code",null,"LeetCode",-1),x=p(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given a <strong>non-empty</strong> array of integers <code>nums</code>, every element appears <em>twice</em> except for one. Find that single one.</p><p>You must implement a solution with a linear runtime complexity and use only constant extra space.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: nums = [2,2,1]</p><p>Output: 1</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums = [4,1,2,1,2]</p><p>Output: 4</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: nums = [1]</p><p>Output: 1</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 3 * 10^4</code></li><li><code>-3 * 10^4 &lt;= nums[i] &lt;= 3 * 10^4</code></li><li>Each element in the array appears twice except for one element which appears only once.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。要求算法时间复杂度是线性的，并且不使用额外的辅助空间。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ul><li>可以使用位运算，利用异或运算的性质：任何一个数字异或它自己都等于 <code>0</code> (<code>x ^ x = 0</code>)；</li><li>从头遍历数组，依次异或数组中的每一个数字；</li><li>数组中除了某个元素只出现一次以外，其余每个元素均出现两次，因为出现两次的数字在异或中会被抵消掉，所以最终得到的结果就是那个只出现一次的数字。</li></ul><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>: <code>O(n)</code>，其中 <code>n</code> 为 <code>nums</code> 数组的长度，需要遍历数组中的所有整数。</li><li><strong>空间复杂度</strong>: <code>O(1)</code>，使用了常数级别的辅助空间。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">singleNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> res <span class="token operator">^</span> i<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,20),v=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),w=t("td",{style:{"text-align":"center"}},"137",-1),E={style:{"text-align":"left"}},I={href:"https://leetcode.com/problems/single-number-ii",target:"_blank",rel:"noopener noreferrer"},q={style:{"text-align":"center"}},N={href:"/problem/0137",target:"_blank",rel:"noopener noreferrer"},O={style:{"text-align":"left"}},C=t("code",null,"位运算",-1),L=t("code",null,"数组",-1),V={style:{"text-align":"left"}},j=t("td",{style:{"text-align":"center"}},"260",-1),B={style:{"text-align":"left"}},M={href:"https://leetcode.com/problems/single-number-iii",target:"_blank",rel:"noopener noreferrer"},R=t("td",{style:{"text-align":"center"}},null,-1),F={style:{"text-align":"left"}},G=t("code",null,"位运算",-1),S=t("code",null,"数组",-1),T={style:{"text-align":"left"}},X=t("td",{style:{"text-align":"center"}},"268",-1),Y={style:{"text-align":"left"}},z={href:"https://leetcode.com/problems/missing-number",target:"_blank",rel:"noopener noreferrer"},A={style:{"text-align":"center"}},D={href:"/problem/0268",target:"_blank",rel:"noopener noreferrer"},H={style:{"text-align":"left"}},J=t("code",null,"位运算",-1),K=t("code",null,"数组",-1),P=t("code",null,"哈希表",-1),Q=t("code",null,"3+",-1),U={style:{"text-align":"left"}},W=t("td",{style:{"text-align":"center"}},"287",-1),Z={style:{"text-align":"left"}},$={href:"https://leetcode.com/problems/find-the-duplicate-number",target:"_blank",rel:"noopener noreferrer"},tt={style:{"text-align":"center"}},et={href:"/problem/0287",target:"_blank",rel:"noopener noreferrer"},nt={style:{"text-align":"left"}},ot=t("code",null,"位运算",-1),st=t("code",null,"数组",-1),at=t("code",null,"双指针",-1),lt=t("code",null,"1+",-1),it={style:{"text-align":"left"}},rt=t("td",{style:{"text-align":"center"}},"389",-1),ct={style:{"text-align":"left"}},dt={href:"https://leetcode.com/problems/find-the-difference",target:"_blank",rel:"noopener noreferrer"},ut=t("td",{style:{"text-align":"center"}},null,-1),pt={style:{"text-align":"left"}},_t=t("code",null,"位运算",-1),ht=t("code",null,"哈希表",-1),mt=t("code",null,"字符串",-1),ft=t("code",null,"1+",-1),gt={style:{"text-align":"left"}},bt=t("td",{style:{"text-align":"center"}},"3158",-1),kt={style:{"text-align":"left"}},yt={href:"https://leetcode.com/problems/find-the-xor-of-numbers-which-appear-twice",target:"_blank",rel:"noopener noreferrer"},xt=t("td",{style:{"text-align":"center"}},null,-1),vt={style:{"text-align":"left"}},wt=t("code",null,"位运算",-1),Et=t("code",null,"数组",-1),It=t("code",null,"哈希表",-1),qt={style:{"text-align":"left"}};function Nt(Ot,Ct){const a=i("ExternalLinkIcon"),l=i("font"),s=i("RouterLink");return c(),d("div",null,[t("h1",h,[m,n(),t("a",f,[n("136. 只出现一次的数字"),e(a)])]),t("p",null,[n("🟢 "),e(l,{color:"#15bd66"},{default:o(()=>[n("Easy")]),_:1}),n("  🔖  "),e(s,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[g]),_:1}),n(),e(s,{to:"/outline/tag/array.html"},{default:o(()=>[b]),_:1}),n("  🔗 "),t("a",k,[y,e(a)])]),x,u(" prettier-ignore "),t("table",null,[v,t("tbody",null,[t("tr",null,[w,t("td",E,[t("a",I,[n("只出现一次的数字 II"),e(a)])]),t("td",q,[t("a",N,[n("[✓]"),e(a)])]),t("td",O,[e(s,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[C]),_:1}),n(),e(s,{to:"/outline/tag/array.html"},{default:o(()=>[L]),_:1})]),t("td",V,[e(l,{color:"#ffb800"},{default:o(()=>[n("Medium")]),_:1})])]),t("tr",null,[j,t("td",B,[t("a",M,[n("只出现一次的数字 III"),e(a)])]),R,t("td",F,[e(s,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[G]),_:1}),n(),e(s,{to:"/outline/tag/array.html"},{default:o(()=>[S]),_:1})]),t("td",T,[e(l,{color:"#ffb800"},{default:o(()=>[n("Medium")]),_:1})])]),t("tr",null,[X,t("td",Y,[t("a",z,[n("丢失的数字"),e(a)])]),t("td",A,[t("a",D,[n("[✓]"),e(a)])]),t("td",H,[e(s,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[J]),_:1}),n(),e(s,{to:"/outline/tag/array.html"},{default:o(()=>[K]),_:1}),n(),e(s,{to:"/outline/tag/hash-table.html"},{default:o(()=>[P]),_:1}),n(),Q]),t("td",U,[e(l,{color:"#15bd66"},{default:o(()=>[n("Easy")]),_:1})])]),t("tr",null,[W,t("td",Z,[t("a",$,[n("寻找重复数"),e(a)])]),t("td",tt,[t("a",et,[n("[✓]"),e(a)])]),t("td",nt,[e(s,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[ot]),_:1}),n(),e(s,{to:"/outline/tag/array.html"},{default:o(()=>[st]),_:1}),n(),e(s,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[at]),_:1}),n(),lt]),t("td",it,[e(l,{color:"#ffb800"},{default:o(()=>[n("Medium")]),_:1})])]),t("tr",null,[rt,t("td",ct,[t("a",dt,[n("找不同"),e(a)])]),ut,t("td",pt,[e(s,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[_t]),_:1}),n(),e(s,{to:"/outline/tag/hash-table.html"},{default:o(()=>[ht]),_:1}),n(),e(s,{to:"/outline/tag/string.html"},{default:o(()=>[mt]),_:1}),n(),ft]),t("td",gt,[e(l,{color:"#15bd66"},{default:o(()=>[n("Easy")]),_:1})])]),t("tr",null,[bt,t("td",kt,[t("a",yt,[n("求出出现两次数字的 XOR 值"),e(a)])]),xt,t("td",vt,[e(s,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[wt]),_:1}),n(),e(s,{to:"/outline/tag/array.html"},{default:o(()=>[Et]),_:1}),n(),e(s,{to:"/outline/tag/hash-table.html"},{default:o(()=>[It]),_:1})]),t("td",qt,[e(l,{color:"#15bd66"},{default:o(()=>[n("Easy")]),_:1})])])])])])}const Vt=r(_,[["render",Nt],["__file","0136.html.vue"]]);export{Vt as default};
