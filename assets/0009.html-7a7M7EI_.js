import{_ as r,r as c,o as i,c as d,a as t,b as n,d as e,w as s,f as p,e as u}from"./app-mXo2sCT-.js";const _={},h={id:"_9-回文数",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#_9-回文数","aria-hidden":"true"},"#",-1),m={href:"https://2xiao.github.io/leetcode-js/problem/0009.html",target:"_blank",rel:"noopener noreferrer"},g=t("code",null,"数学",-1),k={href:"https://leetcode.cn/problems/palindrome-number",target:"_blank",rel:"noopener noreferrer"},b=t("code",null,"力扣",-1),x={href:"https://leetcode.com/problems/palindrome-number",target:"_blank",rel:"noopener noreferrer"},y=t("code",null,"LeetCode",-1),v=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given an integer <code>x</code>, return <code>true</code> if <code>x</code> is a <strong>palindrome</strong> ,and <code>false</code> otherwise .</p><p><strong>Example 1:</strong></p><blockquote><p>Input: x = 121</p><p>Output: true</p><p>Explanation: 121 reads as 121 from left to right and from right to left.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: x = -121</p><p>Output: false</p><p>Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: x = 10</p><p>Output: false</p><p>Explanation: Reads 01 from right to left. Therefore it is not a palindrome.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>-2^31 &lt;= x &lt;= 2^31 - 1</code></li></ul><p><strong>Follow up:</strong> Could you solve it without converting the integer to a string?</p><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>判断一个整数是不是回文数，先将整数转换为字符串。</p><p>然后用对撞指针分别一前一后开始扫描，如果前后的字段相同，则移动指针，否则直接返回 <code>false</code>。</p><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">x</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">isPalindrome</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	x <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token operator">+</span> x<span class="token punctuation">;</span>
	<span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> right <span class="token operator">=</span> x<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">===</span> x<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			left<span class="token operator">++</span><span class="token punctuation">;</span>
			right<span class="token operator">--</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,19),w=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),E=t("td",{style:{"text-align":"center"}},"234",-1),q={style:{"text-align":"left"}},C={href:"https://leetcode.com/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},N={style:{"text-align":"center"}},I={style:{"text-align":"left"}},L=t("code",null,"栈",-1),V=t("code",null,"递归",-1),j=t("code",null,"链表",-1),B=t("code",null,"1+",-1),F={style:{"text-align":"left"}},O=t("td",{style:{"text-align":"center"}},"2217",-1),R={style:{"text-align":"left"}},T={href:"https://leetcode.com/problems/find-palindrome-with-fixed-length",target:"_blank",rel:"noopener noreferrer"},H=t("td",{style:{"text-align":"center"}},null,-1),M={style:{"text-align":"left"}},G=t("code",null,"数组",-1),K=t("code",null,"数学",-1),P={style:{"text-align":"left"}},S=t("td",{style:{"text-align":"center"}},"2396",-1),z={style:{"text-align":"left"}},A={href:"https://leetcode.com/problems/strictly-palindromic-number",target:"_blank",rel:"noopener noreferrer"},D=t("td",{style:{"text-align":"center"}},null,-1),J={style:{"text-align":"left"}},Q=t("code",null,"脑筋急转弯",-1),U=t("code",null,"数学",-1),W=t("code",null,"双指针",-1),X={style:{"text-align":"left"}},Y=t("td",{style:{"text-align":"center"}},"2843",-1),Z={style:{"text-align":"left"}},$={href:"https://leetcode.com/problems/count-symmetric-integers",target:"_blank",rel:"noopener noreferrer"},tt=t("td",{style:{"text-align":"center"}},null,-1),et={style:{"text-align":"left"}},nt=t("code",null,"数学",-1),st=t("code",null,"枚举",-1),at={style:{"text-align":"left"}},ot=t("td",{style:{"text-align":"center"}},"3260",-1),lt={style:{"text-align":"left"}},ct={href:"https://leetcode.com/problems/find-the-largest-palindrome-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},rt=t("td",{style:{"text-align":"center"}},null,-1),it={style:{"text-align":"left"}},dt=t("code",null,"贪心",-1),pt=t("code",null,"数学",-1),ut=t("code",null,"字符串",-1),_t=t("code",null,"2+",-1),ht={style:{"text-align":"left"}},ft=t("td",{style:{"text-align":"center"}},"3272",-1),mt={style:{"text-align":"left"}},gt={href:"https://leetcode.com/problems/find-the-count-of-good-integers",target:"_blank",rel:"noopener noreferrer"},kt=t("td",{style:{"text-align":"center"}},null,-1),bt={style:{"text-align":"left"}},xt=t("code",null,"哈希表",-1),yt=t("code",null,"数学",-1),vt=t("code",null,"组合数学",-1),wt=t("code",null,"1+",-1),Et={style:{"text-align":"left"}};function qt(Ct,Nt){const o=c("ExternalLinkIcon"),l=c("font"),a=c("RouterLink");return i(),d("div",null,[t("h1",h,[f,n(),t("a",m,[n("9. 回文数"),e(o)])]),t("p",null,[n("🟢 "),e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1}),n("  🔖  "),e(a,{to:"/tag/math.html"},{default:s(()=>[g]),_:1}),n("  🔗 "),t("a",k,[b,e(o)]),n(),t("a",x,[y,e(o)])]),v,p(" prettier-ignore "),t("table",null,[w,t("tbody",null,[t("tr",null,[E,t("td",q,[t("a",C,[n("回文链表"),e(o)])]),t("td",N,[e(a,{to:"/problem/0234.html"},{default:s(()=>[n("[✓]")]),_:1})]),t("td",I,[e(a,{to:"/tag/stack.html"},{default:s(()=>[L]),_:1}),n(),e(a,{to:"/tag/recursion.html"},{default:s(()=>[V]),_:1}),n(),e(a,{to:"/tag/linked-list.html"},{default:s(()=>[j]),_:1}),n(),B]),t("td",F,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[O,t("td",R,[t("a",T,[n("找到指定长度的回文数"),e(o)])]),H,t("td",M,[e(a,{to:"/tag/array.html"},{default:s(()=>[G]),_:1}),n(),e(a,{to:"/tag/math.html"},{default:s(()=>[K]),_:1})]),t("td",P,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[S,t("td",z,[t("a",A,[n("严格回文的数字"),e(o)])]),D,t("td",J,[e(a,{to:"/tag/brainteaser.html"},{default:s(()=>[Q]),_:1}),n(),e(a,{to:"/tag/math.html"},{default:s(()=>[U]),_:1}),n(),e(a,{to:"/tag/two-pointers.html"},{default:s(()=>[W]),_:1})]),t("td",X,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Y,t("td",Z,[t("a",$,[n("统计对称整数的数目"),e(o)])]),tt,t("td",et,[e(a,{to:"/tag/math.html"},{default:s(()=>[nt]),_:1}),n(),e(a,{to:"/tag/enumeration.html"},{default:s(()=>[st]),_:1})]),t("td",at,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[ot,t("td",lt,[t("a",ct,[n("找出最大的 N 位 K 回文数"),e(o)])]),rt,t("td",it,[e(a,{to:"/tag/greedy.html"},{default:s(()=>[dt]),_:1}),n(),e(a,{to:"/tag/math.html"},{default:s(()=>[pt]),_:1}),n(),e(a,{to:"/tag/string.html"},{default:s(()=>[ut]),_:1}),n(),_t]),t("td",ht,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[ft,t("td",mt,[t("a",gt,[n("统计好整数的数目"),e(o)])]),kt,t("td",bt,[e(a,{to:"/tag/hash-table.html"},{default:s(()=>[xt]),_:1}),n(),e(a,{to:"/tag/math.html"},{default:s(()=>[yt]),_:1}),n(),e(a,{to:"/tag/combinatorics.html"},{default:s(()=>[vt]),_:1}),n(),wt]),t("td",Et,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])])])])])}const Lt=r(_,[["render",qt],["__file","0009.html.vue"]]);export{Lt as default};
