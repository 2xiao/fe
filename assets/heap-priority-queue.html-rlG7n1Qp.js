import{_ as i,r as _,o as a,c,a as t,b as e,w as o,d as l,f as r}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"堆-优先队列",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#堆-优先队列","aria-hidden":"true"},"#"),l(" 堆（优先队列）")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),q=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),w=t("code",null,"单调队列",-1),H=t("span",{class:"blue"},"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),I=t("code",null,"字符串",-1),K=t("code",null,"字符串匹配",-1),E=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),O=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),N=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),X=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),J=t("p",null,[t("strong",null,"算法")],-1),R=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),A=t("code",null,"分治",-1),Q=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),Z=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),qt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),It=t("code",null,"拒绝采样",-1),Kt=t("code",null,"数据库",-1),Et=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Ot=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"23",-1),Nt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/merge-k-sorted-lists",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Xt={href:"/problem/0023",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"left"}},Ft=t("code",null,"链表",-1),Gt=t("code",null,"分治",-1),Jt=t("code",null,"堆（优先队列）",-1),Rt=t("code",null,"1+",-1),St={style:{"text-align":"left"}},At=t("td",{style:{"text-align":"center"}},"215",-1),Qt={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/kth-largest-element-in-an-array",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"center"}},Yt={href:"/problem/0215",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"数组",-1),ee=t("code",null,"分治",-1),le=t("code",null,"快速选择",-1),oe=t("code",null,"2+",-1),ne={style:{"text-align":"left"}},se=t("td",{style:{"text-align":"center"}},"218",-1),de={style:{"text-align":"left"}},_e={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},ie=t("td",{style:{"text-align":"center"}},null,-1),ae={style:{"text-align":"left"}},ce=t("code",null,"树状数组",-1),re=t("code",null,"线段树",-1),he=t("code",null,"数组",-1),ue=t("code",null,"4+",-1),fe={style:{"text-align":"left"}},ge=t("td",{style:{"text-align":"center"}},"239",-1),me={style:{"text-align":"left"}},ye={href:"https://leetcode.com/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"center"}},pe={href:"/problem/0239",target:"_blank",rel:"noopener noreferrer"},be={style:{"text-align":"left"}},ke=t("code",null,"队列",-1),qe=t("code",null,"数组",-1),Me=t("code",null,"滑动窗口",-1),we=t("code",null,"2+",-1),He={style:{"text-align":"left"}},ve=t("td",{style:{"text-align":"center"}},"253",-1),Ie={style:{"text-align":"left"}},Ke={href:"https://leetcode.com/problems/meeting-rooms-ii",target:"_blank",rel:"noopener noreferrer"},Ee=t("td",{style:{"text-align":"center"}},null,-1),ze={style:{"text-align":"left"}},Ce=t("code",null,"贪心",-1),Le=t("code",null,"数组",-1),Oe=t("code",null,"双指针",-1),Pe=t("code",null,"3+",-1),Ve={style:{"text-align":"left"}},je=t("td",{style:{"text-align":"center"}},"264",-1),Be={style:{"text-align":"left"}},Ne={href:"https://leetcode.com/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},Te={style:{"text-align":"center"}},Ue={href:"/problem/0264",target:"_blank",rel:"noopener noreferrer"},Xe={style:{"text-align":"left"}},De=t("code",null,"哈希表",-1),Fe=t("code",null,"数学",-1),Ge=t("code",null,"动态规划",-1),Je=t("code",null,"1+",-1),Re={style:{"text-align":"left"}},Se=t("td",{style:{"text-align":"center"}},"272",-1),Ae={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},We=t("td",{style:{"text-align":"center"}},null,-1),Ze={style:{"text-align":"left"}},Ye=t("code",null,"栈",-1),$e=t("code",null,"树",-1),tl=t("code",null,"深度优先搜索",-1),el=t("code",null,"4+",-1),ll={style:{"text-align":"left"}},ol=t("td",{style:{"text-align":"center"}},"295",-1),nl={style:{"text-align":"left"}},sl={href:"https://leetcode.com/problems/find-median-from-data-stream",target:"_blank",rel:"noopener noreferrer"},dl={style:{"text-align":"center"}},_l={href:"/problem/0295",target:"_blank",rel:"noopener noreferrer"},il={style:{"text-align":"left"}},al=t("code",null,"设计",-1),cl=t("code",null,"双指针",-1),rl=t("code",null,"数据流",-1),hl=t("code",null,"2+",-1),ul={style:{"text-align":"left"}},fl=t("td",{style:{"text-align":"center"}},"347",-1),gl={style:{"text-align":"left"}},ml={href:"https://leetcode.com/problems/top-k-frequent-elements",target:"_blank",rel:"noopener noreferrer"},yl={style:{"text-align":"center"}},xl={href:"/problem/0347",target:"_blank",rel:"noopener noreferrer"},pl={style:{"text-align":"left"}},bl=t("code",null,"数组",-1),kl=t("code",null,"哈希表",-1),ql=t("code",null,"分治",-1),Ml=t("code",null,"5+",-1),wl={style:{"text-align":"left"}},Hl=t("td",{style:{"text-align":"center"}},"355",-1),vl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/design-twitter",target:"_blank",rel:"noopener noreferrer"},Kl={style:{"text-align":"center"}},El={href:"/problem/0355",target:"_blank",rel:"noopener noreferrer"},zl={style:{"text-align":"left"}},Cl=t("code",null,"设计",-1),Ll=t("code",null,"哈希表",-1),Ol=t("code",null,"链表",-1),Pl=t("code",null,"1+",-1),Vl={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"358",-1),Bl={style:{"text-align":"left"}},Nl={href:"https://leetcode.com/problems/rearrange-string-k-distance-apart",target:"_blank",rel:"noopener noreferrer"},Tl=t("td",{style:{"text-align":"center"}},null,-1),Ul={style:{"text-align":"left"}},Xl=t("code",null,"贪心",-1),Dl=t("code",null,"哈希表",-1),Fl=t("code",null,"字符串",-1),Gl=t("code",null,"3+",-1),Jl={style:{"text-align":"left"}},Rl=t("td",{style:{"text-align":"center"}},"373",-1),Sl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/find-k-pairs-with-smallest-sums",target:"_blank",rel:"noopener noreferrer"},Ql={style:{"text-align":"center"}},Wl={href:"/problem/0373",target:"_blank",rel:"noopener noreferrer"},Zl={style:{"text-align":"left"}},Yl=t("code",null,"数组",-1),$l=t("code",null,"堆（优先队列）",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"378",-1),lo={style:{"text-align":"left"}},oo={href:"https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix",target:"_blank",rel:"noopener noreferrer"},no={style:{"text-align":"center"}},so={href:"/problem/0378",target:"_blank",rel:"noopener noreferrer"},_o={style:{"text-align":"left"}},io=t("code",null,"数组",-1),ao=t("code",null,"二分查找",-1),co=t("code",null,"矩阵",-1),ro=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"407",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/trapping-rain-water-ii",target:"_blank",rel:"noopener noreferrer"},mo=t("td",{style:{"text-align":"center"}},null,-1),yo={style:{"text-align":"left"}},xo=t("code",null,"广度优先搜索",-1),po=t("code",null,"数组",-1),bo=t("code",null,"矩阵",-1),ko=t("code",null,"1+",-1),qo={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"420",-1),wo={style:{"text-align":"left"}},Ho={href:"https://leetcode.com/problems/strong-password-checker",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},null,-1),Io={style:{"text-align":"left"}},Ko=t("code",null,"贪心",-1),Eo=t("code",null,"字符串",-1),zo=t("code",null,"堆（优先队列）",-1),Co={style:{"text-align":"left"}},Lo=t("td",{style:{"text-align":"center"}},"451",-1),Oo={style:{"text-align":"left"}},Po={href:"https://leetcode.com/problems/sort-characters-by-frequency",target:"_blank",rel:"noopener noreferrer"},Vo={style:{"text-align":"center"}},jo={href:"/problem/0451",target:"_blank",rel:"noopener noreferrer"},Bo={style:{"text-align":"left"}},No=t("code",null,"哈希表",-1),To=t("code",null,"字符串",-1),Uo=t("code",null,"桶排序",-1),Xo=t("code",null,"3+",-1),Do={style:{"text-align":"left"}},Fo=t("td",{style:{"text-align":"center"}},"480",-1),Go={style:{"text-align":"left"}},Jo={href:"https://leetcode.com/problems/sliding-window-median",target:"_blank",rel:"noopener noreferrer"},Ro=t("td",{style:{"text-align":"center"}},null,-1),So={style:{"text-align":"left"}},Ao=t("code",null,"数组",-1),Qo=t("code",null,"哈希表",-1),Wo=t("code",null,"滑动窗口",-1),Zo=t("code",null,"1+",-1),Yo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"499",-1),tn={style:{"text-align":"left"}},en={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},ln=t("td",{style:{"text-align":"center"}},null,-1),on={style:{"text-align":"left"}},nn=t("code",null,"深度优先搜索",-1),sn=t("code",null,"广度优先搜索",-1),dn=t("code",null,"图",-1),_n=t("code",null,"5+",-1),an={style:{"text-align":"left"}},cn=t("td",{style:{"text-align":"center"}},"502",-1),rn={style:{"text-align":"left"}},hn={href:"https://leetcode.com/problems/ipo",target:"_blank",rel:"noopener noreferrer"},un={style:{"text-align":"center"}},fn={href:"/problem/0502",target:"_blank",rel:"noopener noreferrer"},gn={style:{"text-align":"left"}},mn=t("code",null,"贪心",-1),yn=t("code",null,"数组",-1),xn=t("code",null,"排序",-1),pn=t("code",null,"1+",-1),bn={style:{"text-align":"left"}},kn=t("td",{style:{"text-align":"center"}},"505",-1),qn={style:{"text-align":"left"}},Mn={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},wn=t("td",{style:{"text-align":"center"}},null,-1),Hn={style:{"text-align":"left"}},vn=t("code",null,"深度优先搜索",-1),In=t("code",null,"广度优先搜索",-1),Kn=t("code",null,"图",-1),En=t("code",null,"4+",-1),zn={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"506",-1),Ln={style:{"text-align":"left"}},On={href:"https://leetcode.com/problems/relative-ranks",target:"_blank",rel:"noopener noreferrer"},Pn={style:{"text-align":"center"}},Vn={href:"/problem/0506",target:"_blank",rel:"noopener noreferrer"},jn={style:{"text-align":"left"}},Bn=t("code",null,"数组",-1),Nn=t("code",null,"排序",-1),Tn=t("code",null,"堆（优先队列）",-1),Un={style:{"text-align":"left"}},Xn=t("td",{style:{"text-align":"center"}},"621",-1),Dn={style:{"text-align":"left"}},Fn={href:"https://leetcode.com/problems/task-scheduler",target:"_blank",rel:"noopener noreferrer"},Gn=t("td",{style:{"text-align":"center"}},null,-1),Jn={style:{"text-align":"left"}},Rn=t("code",null,"贪心",-1),Sn=t("code",null,"数组",-1),An=t("code",null,"哈希表",-1),Qn=t("code",null,"3+",-1),Wn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"630",-1),Yn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/course-schedule-iii",target:"_blank",rel:"noopener noreferrer"},ts=t("td",{style:{"text-align":"center"}},null,-1),es={style:{"text-align":"left"}},ls=t("code",null,"贪心",-1),os=t("code",null,"数组",-1),ns=t("code",null,"排序",-1),ss=t("code",null,"1+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"632",-1),is={style:{"text-align":"left"}},as={href:"https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists",target:"_blank",rel:"noopener noreferrer"},cs={style:{"text-align":"center"}},rs={href:"/problem/0632",target:"_blank",rel:"noopener noreferrer"},hs={style:{"text-align":"left"}},us=t("code",null,"贪心",-1),fs=t("code",null,"数组",-1),gs=t("code",null,"哈希表",-1),ms=t("code",null,"3+",-1),ys={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"642",-1),ps={style:{"text-align":"left"}},bs={href:"https://leetcode.com/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},ks=t("td",{style:{"text-align":"center"}},null,-1),qs={style:{"text-align":"left"}},Ms=t("code",null,"深度优先搜索",-1),ws=t("code",null,"设计",-1),Hs=t("code",null,"字典树",-1),vs=t("code",null,"4+",-1),Is={style:{"text-align":"left"}},Ks=t("td",{style:{"text-align":"center"}},"658",-1),Es={style:{"text-align":"left"}},zs={href:"https://leetcode.com/problems/find-k-closest-elements",target:"_blank",rel:"noopener noreferrer"},Cs=t("td",{style:{"text-align":"center"}},null,-1),Ls={style:{"text-align":"left"}},Os=t("code",null,"数组",-1),Ps=t("code",null,"双指针",-1),Vs=t("code",null,"二分查找",-1),js=t("code",null,"3+",-1),Bs={style:{"text-align":"left"}},Ns=t("td",{style:{"text-align":"center"}},"659",-1),Ts={style:{"text-align":"left"}},Us={href:"https://leetcode.com/problems/split-array-into-consecutive-subsequences",target:"_blank",rel:"noopener noreferrer"},Xs=t("td",{style:{"text-align":"center"}},null,-1),Ds={style:{"text-align":"left"}},Fs=t("code",null,"贪心",-1),Gs=t("code",null,"数组",-1),Js=t("code",null,"哈希表",-1),Rs=t("code",null,"1+",-1),Ss={style:{"text-align":"left"}},As=t("td",{style:{"text-align":"center"}},"675",-1),Qs={style:{"text-align":"left"}},Ws={href:"https://leetcode.com/problems/cut-off-trees-for-golf-event",target:"_blank",rel:"noopener noreferrer"},Zs=t("td",{style:{"text-align":"center"}},null,-1),Ys={style:{"text-align":"left"}},$s=t("code",null,"广度优先搜索",-1),td=t("code",null,"数组",-1),ed=t("code",null,"矩阵",-1),ld=t("code",null,"1+",-1),od={style:{"text-align":"left"}},nd=t("td",{style:{"text-align":"center"}},"683",-1),sd={style:{"text-align":"left"}},dd={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},_d=t("td",{style:{"text-align":"center"}},null,-1),id={style:{"text-align":"left"}},ad=t("code",null,"树状数组",-1),cd=t("code",null,"线段树",-1),rd=t("code",null,"队列",-1),hd=t("code",null,"5+",-1),ud={style:{"text-align":"left"}},fd=t("td",{style:{"text-align":"center"}},"692",-1),gd={style:{"text-align":"left"}},md={href:"https://leetcode.com/problems/top-k-frequent-words",target:"_blank",rel:"noopener noreferrer"},yd=t("td",{style:{"text-align":"center"}},null,-1),xd={style:{"text-align":"left"}},pd=t("code",null,"字典树",-1),bd=t("code",null,"哈希表",-1),kd=t("code",null,"字符串",-1),qd=t("code",null,"4+",-1),Md={style:{"text-align":"left"}},wd=t("td",{style:{"text-align":"center"}},"703",-1),Hd={style:{"text-align":"left"}},vd={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},Id={style:{"text-align":"center"}},Kd={href:"/problem/0703",target:"_blank",rel:"noopener noreferrer"},Ed={style:{"text-align":"left"}},zd=t("code",null,"树",-1),Cd=t("code",null,"设计",-1),Ld=t("code",null,"二叉搜索树",-1),Od=t("code",null,"3+",-1),Pd={style:{"text-align":"left"}},Vd=t("td",{style:{"text-align":"center"}},"743",-1),jd={style:{"text-align":"left"}},Bd={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},Nd=t("td",{style:{"text-align":"center"}},null,-1),Td={style:{"text-align":"left"}},Ud=t("code",null,"深度优先搜索",-1),Xd=t("code",null,"广度优先搜索",-1),Dd=t("code",null,"图",-1),Fd=t("code",null,"2+",-1),Gd={style:{"text-align":"left"}},Jd=t("td",{style:{"text-align":"center"}},"759",-1),Rd={style:{"text-align":"left"}},Sd={href:"https://leetcode.com/problems/employee-free-time",target:"_blank",rel:"noopener noreferrer"},Ad=t("td",{style:{"text-align":"center"}},null,-1),Qd={style:{"text-align":"left"}},Wd=t("code",null,"数组",-1),Zd=t("code",null,"排序",-1),Yd=t("code",null,"堆（优先队列）",-1),$d={style:{"text-align":"left"}},t_=t("td",{style:{"text-align":"center"}},"767",-1),e_={style:{"text-align":"left"}},l_={href:"https://leetcode.com/problems/reorganize-string",target:"_blank",rel:"noopener noreferrer"},o_=t("td",{style:{"text-align":"center"}},null,-1),n_={style:{"text-align":"left"}},s_=t("code",null,"贪心",-1),d_=t("code",null,"哈希表",-1),__=t("code",null,"字符串",-1),i_=t("code",null,"3+",-1),a_={style:{"text-align":"left"}},c_=t("td",{style:{"text-align":"center"}},"778",-1),r_={style:{"text-align":"left"}},h_={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},u_=t("td",{style:{"text-align":"center"}},null,-1),f_={style:{"text-align":"left"}},g_=t("code",null,"深度优先搜索",-1),m_=t("code",null,"广度优先搜索",-1),y_=t("code",null,"并查集",-1),x_=t("code",null,"4+",-1),p_={style:{"text-align":"left"}},b_=t("td",{style:{"text-align":"center"}},"786",-1),k_={style:{"text-align":"left"}},q_={href:"https://leetcode.com/problems/k-th-smallest-prime-fraction",target:"_blank",rel:"noopener noreferrer"},M_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},H_=t("code",null,"数组",-1),v_=t("code",null,"双指针",-1),I_=t("code",null,"二分查找",-1),K_=t("code",null,"2+",-1),E_={style:{"text-align":"left"}},z_=t("td",{style:{"text-align":"center"}},"787",-1),C_={style:{"text-align":"left"}},L_={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},O_=t("td",{style:{"text-align":"center"}},null,-1),P_={style:{"text-align":"left"}},V_=t("code",null,"深度优先搜索",-1),j_=t("code",null,"广度优先搜索",-1),B_=t("code",null,"图",-1),N_=t("code",null,"3+",-1),T_={style:{"text-align":"left"}},U_=t("td",{style:{"text-align":"center"}},"855",-1),X_={style:{"text-align":"left"}},D_={href:"https://leetcode.com/problems/exam-room",target:"_blank",rel:"noopener noreferrer"},F_=t("td",{style:{"text-align":"center"}},null,-1),G_={style:{"text-align":"left"}},J_=t("code",null,"设计",-1),R_=t("code",null,"有序集合",-1),S_=t("code",null,"堆（优先队列）",-1),A_={style:{"text-align":"left"}},Q_=t("td",{style:{"text-align":"center"}},"857",-1),W_={style:{"text-align":"left"}},Z_={href:"https://leetcode.com/problems/minimum-cost-to-hire-k-workers",target:"_blank",rel:"noopener noreferrer"},Y_=t("td",{style:{"text-align":"center"}},null,-1),$_={style:{"text-align":"left"}},ti=t("code",null,"贪心",-1),ei=t("code",null,"数组",-1),li=t("code",null,"排序",-1),oi=t("code",null,"1+",-1),ni={style:{"text-align":"left"}},si=t("td",{style:{"text-align":"center"}},"862",-1),di={style:{"text-align":"left"}},_i={href:"https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k",target:"_blank",rel:"noopener noreferrer"},ii=t("td",{style:{"text-align":"center"}},null,-1),ai={style:{"text-align":"left"}},ci=t("code",null,"队列",-1),ri=t("code",null,"数组",-1),hi=t("code",null,"二分查找",-1),ui=t("code",null,"4+",-1),fi={style:{"text-align":"left"}},gi=t("td",{style:{"text-align":"center"}},"871",-1),mi={style:{"text-align":"left"}},yi={href:"https://leetcode.com/problems/minimum-number-of-refueling-stops",target:"_blank",rel:"noopener noreferrer"},xi=t("td",{style:{"text-align":"center"}},null,-1),pi={style:{"text-align":"left"}},bi=t("code",null,"贪心",-1),ki=t("code",null,"数组",-1),qi=t("code",null,"动态规划",-1),Mi=t("code",null,"1+",-1),wi={style:{"text-align":"left"}},Hi=t("td",{style:{"text-align":"center"}},"882",-1),vi={style:{"text-align":"left"}},Ii={href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph",target:"_blank",rel:"noopener noreferrer"},Ki=t("td",{style:{"text-align":"center"}},null,-1),Ei={style:{"text-align":"left"}},zi=t("code",null,"图",-1),Ci=t("code",null,"最短路",-1),Li=t("code",null,"堆（优先队列）",-1),Oi={style:{"text-align":"left"}},Pi=t("td",{style:{"text-align":"center"}},"912",-1),Vi={style:{"text-align":"left"}},ji={href:"https://leetcode.com/problems/sort-an-array",target:"_blank",rel:"noopener noreferrer"},Bi=t("td",{style:{"text-align":"center"}},null,-1),Ni={style:{"text-align":"left"}},Ti=t("code",null,"数组",-1),Ui=t("code",null,"分治",-1),Xi=t("code",null,"桶排序",-1),Di=t("code",null,"5+",-1),Fi={style:{"text-align":"left"}},Gi=t("td",{style:{"text-align":"center"}},"973",-1),Ji={style:{"text-align":"left"}},Ri={href:"https://leetcode.com/problems/k-closest-points-to-origin",target:"_blank",rel:"noopener noreferrer"},Si={style:{"text-align":"center"}},Ai={href:"/problem/0973",target:"_blank",rel:"noopener noreferrer"},Qi={style:{"text-align":"left"}},Wi=t("code",null,"几何",-1),Zi=t("code",null,"数组",-1),Yi=t("code",null,"数学",-1),$i=t("code",null,"4+",-1),ta={style:{"text-align":"left"}},ea=t("td",{style:{"text-align":"center"}},"1046",-1),la={style:{"text-align":"left"}},oa={href:"https://leetcode.com/problems/last-stone-weight",target:"_blank",rel:"noopener noreferrer"},na=t("td",{style:{"text-align":"center"}},null,-1),sa={style:{"text-align":"left"}},da=t("code",null,"数组",-1),_a=t("code",null,"堆（优先队列）",-1),ia={style:{"text-align":"left"}},aa=t("td",{style:{"text-align":"center"}},"1054",-1),ca={style:{"text-align":"left"}},ra={href:"https://leetcode.com/problems/distant-barcodes",target:"_blank",rel:"noopener noreferrer"},ha=t("td",{style:{"text-align":"center"}},null,-1),ua={style:{"text-align":"left"}},fa=t("code",null,"贪心",-1),ga=t("code",null,"数组",-1),ma=t("code",null,"哈希表",-1),ya=t("code",null,"3+",-1),xa={style:{"text-align":"left"}},pa=t("td",{style:{"text-align":"center"}},"1086",-1),ba={style:{"text-align":"left"}},ka={href:"https://leetcode.com/problems/high-five",target:"_blank",rel:"noopener noreferrer"},qa=t("td",{style:{"text-align":"center"}},null,-1),Ma={style:{"text-align":"left"}},wa=t("code",null,"数组",-1),Ha=t("code",null,"哈希表",-1),va=t("code",null,"排序",-1),Ia=t("code",null,"1+",-1),Ka={style:{"text-align":"left"}},Ea=t("td",{style:{"text-align":"center"}},"1094",-1),za={style:{"text-align":"left"}},Ca={href:"https://leetcode.com/problems/car-pooling",target:"_blank",rel:"noopener noreferrer"},La=t("td",{style:{"text-align":"center"}},null,-1),Oa={style:{"text-align":"left"}},Pa=t("code",null,"数组",-1),Va=t("code",null,"前缀和",-1),ja=t("code",null,"排序",-1),Ba=t("code",null,"2+",-1),Na={style:{"text-align":"left"}},Ta=t("td",{style:{"text-align":"center"}},"1102",-1),Ua={style:{"text-align":"left"}},Xa={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},Da=t("td",{style:{"text-align":"center"}},null,-1),Fa={style:{"text-align":"left"}},Ga=t("code",null,"深度优先搜索",-1),Ja=t("code",null,"广度优先搜索",-1),Ra=t("code",null,"并查集",-1),Sa=t("code",null,"4+",-1),Aa={style:{"text-align":"left"}},Qa=t("td",{style:{"text-align":"center"}},"1135",-1),Wa={style:{"text-align":"left"}},Za={href:"https://leetcode.com/problems/connecting-cities-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},Ya=t("td",{style:{"text-align":"center"}},null,-1),$a={style:{"text-align":"left"}},tc=t("code",null,"并查集",-1),ec=t("code",null,"图",-1),lc=t("code",null,"最小生成树",-1),oc=t("code",null,"1+",-1),nc={style:{"text-align":"left"}},sc=t("td",{style:{"text-align":"center"}},"1167",-1),dc={style:{"text-align":"left"}},_c={href:"https://leetcode.com/problems/minimum-cost-to-connect-sticks",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},null,-1),ac={style:{"text-align":"left"}},cc=t("code",null,"贪心",-1),rc=t("code",null,"数组",-1),hc=t("code",null,"堆（优先队列）",-1),uc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"1168",-1),gc={style:{"text-align":"left"}},mc={href:"https://leetcode.com/problems/optimize-water-distribution-in-a-village",target:"_blank",rel:"noopener noreferrer"},yc=t("td",{style:{"text-align":"center"}},null,-1),xc={style:{"text-align":"left"}},pc=t("code",null,"并查集",-1),bc=t("code",null,"图",-1),kc=t("code",null,"最小生成树",-1),qc=t("code",null,"1+",-1),Mc={style:{"text-align":"left"}},wc=t("td",{style:{"text-align":"center"}},"1172",-1),Hc={style:{"text-align":"left"}},vc={href:"https://leetcode.com/problems/dinner-plate-stacks",target:"_blank",rel:"noopener noreferrer"},Ic=t("td",{style:{"text-align":"center"}},null,-1),Kc={style:{"text-align":"left"}},Ec=t("code",null,"栈",-1),zc=t("code",null,"设计",-1),Cc=t("code",null,"哈希表",-1),Lc=t("code",null,"1+",-1),Oc={style:{"text-align":"left"}},Pc=t("td",{style:{"text-align":"center"}},"1183",-1),Vc={style:{"text-align":"left"}},jc={href:"https://leetcode.com/problems/maximum-number-of-ones",target:"_blank",rel:"noopener noreferrer"},Bc=t("td",{style:{"text-align":"center"}},null,-1),Nc={style:{"text-align":"left"}},Tc=t("code",null,"贪心",-1),Uc=t("code",null,"堆（优先队列）",-1),Xc={style:{"text-align":"left"}},Dc=t("td",{style:{"text-align":"center"}},"1199",-1),Fc={style:{"text-align":"left"}},Gc={href:"https://leetcode.com/problems/minimum-time-to-build-blocks",target:"_blank",rel:"noopener noreferrer"},Jc=t("td",{style:{"text-align":"center"}},null,-1),Rc={style:{"text-align":"left"}},Sc=t("code",null,"贪心",-1),Ac=t("code",null,"数组",-1),Qc=t("code",null,"数学",-1),Wc=t("code",null,"1+",-1),Zc={style:{"text-align":"left"}},Yc=t("td",{style:{"text-align":"center"}},"1263",-1),$c={style:{"text-align":"left"}},tr={href:"https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location",target:"_blank",rel:"noopener noreferrer"},er=t("td",{style:{"text-align":"center"}},null,-1),lr={style:{"text-align":"left"}},or=t("code",null,"广度优先搜索",-1),nr=t("code",null,"数组",-1),sr=t("code",null,"矩阵",-1),dr=t("code",null,"1+",-1),_r={style:{"text-align":"left"}},ir=t("td",{style:{"text-align":"center"}},"1268",-1),ar={style:{"text-align":"left"}},cr={href:"https://leetcode.com/problems/search-suggestions-system",target:"_blank",rel:"noopener noreferrer"},rr=t("td",{style:{"text-align":"center"}},null,-1),hr={style:{"text-align":"left"}},ur=t("code",null,"字典树",-1),fr=t("code",null,"数组",-1),gr=t("code",null,"字符串",-1),mr=t("code",null,"3+",-1),yr={style:{"text-align":"left"}},xr=t("td",{style:{"text-align":"center"}},"1337",-1),pr={style:{"text-align":"left"}},br={href:"https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},kr=t("td",{style:{"text-align":"center"}},null,-1),qr={style:{"text-align":"left"}},Mr=t("code",null,"数组",-1),wr=t("code",null,"二分查找",-1),Hr=t("code",null,"矩阵",-1),vr=t("code",null,"2+",-1),Ir={style:{"text-align":"left"}},Kr=t("td",{style:{"text-align":"center"}},"1338",-1),Er={style:{"text-align":"left"}},zr={href:"https://leetcode.com/problems/reduce-array-size-to-the-half",target:"_blank",rel:"noopener noreferrer"},Cr=t("td",{style:{"text-align":"center"}},null,-1),Lr={style:{"text-align":"left"}},Or=t("code",null,"贪心",-1),Pr=t("code",null,"数组",-1),Vr=t("code",null,"哈希表",-1),jr=t("code",null,"2+",-1),Br={style:{"text-align":"left"}},Nr=t("td",{style:{"text-align":"center"}},"1353",-1),Tr={style:{"text-align":"left"}},Ur={href:"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended",target:"_blank",rel:"noopener noreferrer"},Xr=t("td",{style:{"text-align":"center"}},null,-1),Dr={style:{"text-align":"left"}},Fr=t("code",null,"贪心",-1),Gr=t("code",null,"数组",-1),Jr=t("code",null,"排序",-1),Rr=t("code",null,"1+",-1),Sr={style:{"text-align":"left"}},Ar=t("td",{style:{"text-align":"center"}},"1354",-1),Qr={style:{"text-align":"left"}},Wr={href:"https://leetcode.com/problems/construct-target-array-with-multiple-sums",target:"_blank",rel:"noopener noreferrer"},Zr=t("td",{style:{"text-align":"center"}},null,-1),Yr={style:{"text-align":"left"}},$r=t("code",null,"数组",-1),t1=t("code",null,"堆（优先队列）",-1),e1={style:{"text-align":"left"}},l1=t("td",{style:{"text-align":"center"}},"1368",-1),o1={style:{"text-align":"left"}},n1={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},s1=t("td",{style:{"text-align":"center"}},null,-1),d1={style:{"text-align":"left"}},_1=t("code",null,"广度优先搜索",-1),i1=t("code",null,"图",-1),a1=t("code",null,"数组",-1),c1=t("code",null,"3+",-1),r1={style:{"text-align":"left"}},h1=t("td",{style:{"text-align":"center"}},"1383",-1),u1={style:{"text-align":"left"}},f1={href:"https://leetcode.com/problems/maximum-performance-of-a-team",target:"_blank",rel:"noopener noreferrer"},g1=t("td",{style:{"text-align":"center"}},null,-1),m1={style:{"text-align":"left"}},y1=t("code",null,"贪心",-1),x1=t("code",null,"数组",-1),p1=t("code",null,"排序",-1),b1=t("code",null,"1+",-1),k1={style:{"text-align":"left"}},q1=t("td",{style:{"text-align":"center"}},"1388",-1),M1={style:{"text-align":"left"}},w1={href:"https://leetcode.com/problems/pizza-with-3n-slices",target:"_blank",rel:"noopener noreferrer"},H1=t("td",{style:{"text-align":"center"}},null,-1),v1={style:{"text-align":"left"}},I1=t("code",null,"贪心",-1),K1=t("code",null,"数组",-1),E1=t("code",null,"动态规划",-1),z1=t("code",null,"1+",-1),C1={style:{"text-align":"left"}},L1=t("td",{style:{"text-align":"center"}},"1405",-1),O1={style:{"text-align":"left"}},P1={href:"https://leetcode.com/problems/longest-happy-string",target:"_blank",rel:"noopener noreferrer"},V1={style:{"text-align":"center"}},j1={href:"/problem/1405",target:"_blank",rel:"noopener noreferrer"},B1={style:{"text-align":"left"}},N1=t("code",null,"贪心",-1),T1=t("code",null,"字符串",-1),U1=t("code",null,"堆（优先队列）",-1),X1={style:{"text-align":"left"}},D1=t("td",{style:{"text-align":"center"}},"1424",-1),F1={style:{"text-align":"left"}},G1={href:"https://leetcode.com/problems/diagonal-traverse-ii",target:"_blank",rel:"noopener noreferrer"},J1=t("td",{style:{"text-align":"center"}},null,-1),R1={style:{"text-align":"left"}},S1=t("code",null,"数组",-1),A1=t("code",null,"排序",-1),Q1=t("code",null,"堆（优先队列）",-1),W1={style:{"text-align":"left"}},Z1=t("td",{style:{"text-align":"center"}},"1425",-1),Y1={style:{"text-align":"left"}},$1={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},th=t("td",{style:{"text-align":"center"}},null,-1),eh={style:{"text-align":"left"}},lh=t("code",null,"队列",-1),oh=t("code",null,"数组",-1),nh=t("code",null,"动态规划",-1),sh=t("code",null,"3+",-1),dh={style:{"text-align":"left"}},_h=t("td",{style:{"text-align":"center"}},"1438",-1),ih={style:{"text-align":"left"}},ah={href:"https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",target:"_blank",rel:"noopener noreferrer"},ch=t("td",{style:{"text-align":"center"}},null,-1),rh={style:{"text-align":"left"}},hh=t("code",null,"队列",-1),uh=t("code",null,"数组",-1),fh=t("code",null,"有序集合",-1),gh=t("code",null,"3+",-1),mh={style:{"text-align":"left"}},yh=t("td",{style:{"text-align":"center"}},"1439",-1),xh={style:{"text-align":"left"}},ph={href:"https://leetcode.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",target:"_blank",rel:"noopener noreferrer"},bh=t("td",{style:{"text-align":"center"}},null,-1),kh={style:{"text-align":"left"}},qh=t("code",null,"数组",-1),Mh=t("code",null,"二分查找",-1),wh=t("code",null,"矩阵",-1),Hh=t("code",null,"1+",-1),vh={style:{"text-align":"left"}},Ih=t("td",{style:{"text-align":"center"}},"1464",-1),Kh={style:{"text-align":"left"}},Eh={href:"https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array",target:"_blank",rel:"noopener noreferrer"},zh=t("td",{style:{"text-align":"center"}},null,-1),Ch={style:{"text-align":"left"}},Lh=t("code",null,"数组",-1),Oh=t("code",null,"排序",-1),Ph=t("code",null,"堆（优先队列）",-1),Vh={style:{"text-align":"left"}},jh=t("td",{style:{"text-align":"center"}},"1488",-1),Bh={style:{"text-align":"left"}},Nh={href:"https://leetcode.com/problems/avoid-flood-in-the-city",target:"_blank",rel:"noopener noreferrer"},Th=t("td",{style:{"text-align":"center"}},null,-1),Uh={style:{"text-align":"left"}},Xh=t("code",null,"贪心",-1),Dh=t("code",null,"数组",-1),Fh=t("code",null,"哈希表",-1),Gh=t("code",null,"2+",-1),Jh={style:{"text-align":"left"}},Rh=t("td",{style:{"text-align":"center"}},"1499",-1),Sh={style:{"text-align":"left"}},Ah={href:"https://leetcode.com/problems/max-value-of-equation",target:"_blank",rel:"noopener noreferrer"},Qh=t("td",{style:{"text-align":"center"}},null,-1),Wh={style:{"text-align":"left"}},Zh=t("code",null,"队列",-1),Yh=t("code",null,"数组",-1),$h=t("code",null,"滑动窗口",-1),tu=t("code",null,"2+",-1),eu={style:{"text-align":"left"}},lu=t("td",{style:{"text-align":"center"}},"1500",-1),ou={style:{"text-align":"left"}},nu={href:"https://leetcode.com/problems/design-a-file-sharing-system",target:"_blank",rel:"noopener noreferrer"},su=t("td",{style:{"text-align":"center"}},null,-1),du={style:{"text-align":"left"}},_u=t("code",null,"设计",-1),iu=t("code",null,"哈希表",-1),au=t("code",null,"数据流",-1),cu=t("code",null,"2+",-1),ru={style:{"text-align":"left"}},hu=t("td",{style:{"text-align":"center"}},"1514",-1),uu={style:{"text-align":"left"}},fu={href:"https://leetcode.com/problems/path-with-maximum-probability",target:"_blank",rel:"noopener noreferrer"},gu=t("td",{style:{"text-align":"center"}},null,-1),mu={style:{"text-align":"left"}},yu=t("code",null,"图",-1),xu=t("code",null,"数组",-1),pu=t("code",null,"最短路",-1),bu=t("code",null,"1+",-1),ku={style:{"text-align":"left"}},qu=t("td",{style:{"text-align":"center"}},"1606",-1),Mu={style:{"text-align":"left"}},wu={href:"https://leetcode.com/problems/find-servers-that-handled-most-number-of-requests",target:"_blank",rel:"noopener noreferrer"},Hu=t("td",{style:{"text-align":"center"}},null,-1),vu={style:{"text-align":"left"}},Iu=t("code",null,"贪心",-1),Ku=t("code",null,"数组",-1),Eu=t("code",null,"有序集合",-1),zu=t("code",null,"1+",-1),Cu={style:{"text-align":"left"}},Lu=t("td",{style:{"text-align":"center"}},"1631",-1),Ou={style:{"text-align":"left"}},Pu={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},Vu=t("td",{style:{"text-align":"center"}},null,-1),ju={style:{"text-align":"left"}},Bu=t("code",null,"深度优先搜索",-1),Nu=t("code",null,"广度优先搜索",-1),Tu=t("code",null,"并查集",-1),Uu=t("code",null,"4+",-1),Xu={style:{"text-align":"left"}},Du=t("td",{style:{"text-align":"center"}},"1642",-1),Fu={style:{"text-align":"left"}},Gu={href:"https://leetcode.com/problems/furthest-building-you-can-reach",target:"_blank",rel:"noopener noreferrer"},Ju=t("td",{style:{"text-align":"center"}},null,-1),Ru={style:{"text-align":"left"}},Su=t("code",null,"贪心",-1),Au=t("code",null,"数组",-1),Qu=t("code",null,"堆（优先队列）",-1),Wu={style:{"text-align":"left"}},Zu=t("td",{style:{"text-align":"center"}},"1648",-1),Yu={style:{"text-align":"left"}},$u={href:"https://leetcode.com/problems/sell-diminishing-valued-colored-balls",target:"_blank",rel:"noopener noreferrer"},tf=t("td",{style:{"text-align":"center"}},null,-1),ef={style:{"text-align":"left"}},lf=t("code",null,"贪心",-1),of=t("code",null,"数组",-1),nf=t("code",null,"数学",-1),sf=t("code",null,"3+",-1),df={style:{"text-align":"left"}},_f=t("td",{style:{"text-align":"center"}},"1675",-1),af={style:{"text-align":"left"}},cf={href:"https://leetcode.com/problems/minimize-deviation-in-array",target:"_blank",rel:"noopener noreferrer"},rf=t("td",{style:{"text-align":"center"}},null,-1),hf={style:{"text-align":"left"}},uf=t("code",null,"贪心",-1),ff=t("code",null,"数组",-1),gf=t("code",null,"有序集合",-1),mf=t("code",null,"1+",-1),yf={style:{"text-align":"left"}},xf=t("td",{style:{"text-align":"center"}},"1686",-1),pf={style:{"text-align":"left"}},bf={href:"https://leetcode.com/problems/stone-game-vi",target:"_blank",rel:"noopener noreferrer"},kf=t("td",{style:{"text-align":"center"}},null,-1),qf={style:{"text-align":"left"}},Mf=t("code",null,"贪心",-1),wf=t("code",null,"数组",-1),Hf=t("code",null,"数学",-1),vf=t("code",null,"3+",-1),If={style:{"text-align":"left"}},Kf=t("td",{style:{"text-align":"center"}},"1687",-1),Ef={style:{"text-align":"left"}},zf={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},Cf=t("td",{style:{"text-align":"center"}},null,-1),Lf={style:{"text-align":"left"}},Of=t("code",null,"线段树",-1),Pf=t("code",null,"队列",-1),Vf=t("code",null,"数组",-1),jf=t("code",null,"4+",-1),Bf={style:{"text-align":"left"}},Nf=t("td",{style:{"text-align":"center"}},"1696",-1),Tf={style:{"text-align":"left"}},Uf={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},Xf=t("td",{style:{"text-align":"center"}},null,-1),Df={style:{"text-align":"left"}},Ff=t("code",null,"队列",-1),Gf=t("code",null,"数组",-1),Jf=t("code",null,"动态规划",-1),Rf=t("code",null,"2+",-1),Sf={style:{"text-align":"left"}},Af=t("td",{style:{"text-align":"center"}},"1705",-1),Qf={style:{"text-align":"left"}},Wf={href:"https://leetcode.com/problems/maximum-number-of-eaten-apples",target:"_blank",rel:"noopener noreferrer"},Zf=t("td",{style:{"text-align":"center"}},null,-1),Yf={style:{"text-align":"left"}},$f=t("code",null,"贪心",-1),tg=t("code",null,"数组",-1),eg=t("code",null,"堆（优先队列）",-1),lg={style:{"text-align":"left"}},og=t("td",{style:{"text-align":"center"}},"1738",-1),ng={style:{"text-align":"left"}},sg={href:"https://leetcode.com/problems/find-kth-largest-xor-coordinate-value",target:"_blank",rel:"noopener noreferrer"},dg=t("td",{style:{"text-align":"center"}},null,-1),_g={style:{"text-align":"left"}},ig=t("code",null,"位运算",-1),ag=t("code",null,"数组",-1),cg=t("code",null,"分治",-1),rg=t("code",null,"5+",-1),hg={style:{"text-align":"left"}},ug=t("td",{style:{"text-align":"center"}},"1753",-1),fg={style:{"text-align":"left"}},gg={href:"https://leetcode.com/problems/maximum-score-from-removing-stones",target:"_blank",rel:"noopener noreferrer"},mg=t("td",{style:{"text-align":"center"}},null,-1),yg={style:{"text-align":"left"}},xg=t("code",null,"贪心",-1),pg=t("code",null,"数学",-1),bg=t("code",null,"堆（优先队列）",-1),kg={style:{"text-align":"left"}},qg=t("td",{style:{"text-align":"center"}},"1776",-1),Mg={style:{"text-align":"left"}},wg={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Hg=t("td",{style:{"text-align":"center"}},null,-1),vg={style:{"text-align":"left"}},Ig=t("code",null,"栈",-1),Kg=t("code",null,"数组",-1),Eg=t("code",null,"数学",-1),zg=t("code",null,"2+",-1),Cg={style:{"text-align":"left"}},Lg=t("td",{style:{"text-align":"center"}},"1786",-1),Og={style:{"text-align":"left"}},Pg={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},Vg=t("td",{style:{"text-align":"center"}},null,-1),jg={style:{"text-align":"left"}},Bg=t("code",null,"图",-1),Ng=t("code",null,"拓扑排序",-1),Tg=t("code",null,"动态规划",-1),Ug=t("code",null,"2+",-1),Xg={style:{"text-align":"left"}},Dg=t("td",{style:{"text-align":"center"}},"1792",-1),Fg={style:{"text-align":"left"}},Gg={href:"https://leetcode.com/problems/maximum-average-pass-ratio",target:"_blank",rel:"noopener noreferrer"},Jg=t("td",{style:{"text-align":"center"}},null,-1),Rg={style:{"text-align":"left"}},Sg=t("code",null,"贪心",-1),Ag=t("code",null,"数组",-1),Qg=t("code",null,"堆（优先队列）",-1),Wg={style:{"text-align":"left"}},Zg=t("td",{style:{"text-align":"center"}},"1801",-1),Yg={style:{"text-align":"left"}},$g={href:"https://leetcode.com/problems/number-of-orders-in-the-backlog",target:"_blank",rel:"noopener noreferrer"},tm=t("td",{style:{"text-align":"center"}},null,-1),em={style:{"text-align":"left"}},lm=t("code",null,"数组",-1),om=t("code",null,"模拟",-1),nm=t("code",null,"堆（优先队列）",-1),sm={style:{"text-align":"left"}},dm=t("td",{style:{"text-align":"center"}},"1810",-1),_m={style:{"text-align":"left"}},im={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},am=t("td",{style:{"text-align":"center"}},null,-1),cm={style:{"text-align":"left"}},rm=t("code",null,"深度优先搜索",-1),hm=t("code",null,"广度优先搜索",-1),um=t("code",null,"图",-1),fm=t("code",null,"2+",-1),gm={style:{"text-align":"left"}},mm=t("td",{style:{"text-align":"center"}},"1825",-1),ym={style:{"text-align":"left"}},xm={href:"https://leetcode.com/problems/finding-mk-average",target:"_blank",rel:"noopener noreferrer"},pm=t("td",{style:{"text-align":"center"}},null,-1),bm={style:{"text-align":"left"}},km=t("code",null,"设计",-1),qm=t("code",null,"队列",-1),Mm=t("code",null,"数据流",-1),wm=t("code",null,"2+",-1),Hm={style:{"text-align":"left"}},vm=t("td",{style:{"text-align":"center"}},"1834",-1),Im={style:{"text-align":"left"}},Km={href:"https://leetcode.com/problems/single-threaded-cpu",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},null,-1),zm={style:{"text-align":"left"}},Cm=t("code",null,"数组",-1),Lm=t("code",null,"排序",-1),Om=t("code",null,"堆（优先队列）",-1),Pm={style:{"text-align":"left"}},Vm=t("td",{style:{"text-align":"center"}},"1845",-1),jm={style:{"text-align":"left"}},Bm={href:"https://leetcode.com/problems/seat-reservation-manager",target:"_blank",rel:"noopener noreferrer"},Nm=t("td",{style:{"text-align":"center"}},null,-1),Tm={style:{"text-align":"left"}},Um=t("code",null,"设计",-1),Xm=t("code",null,"堆（优先队列）",-1),Dm={style:{"text-align":"left"}},Fm=t("td",{style:{"text-align":"center"}},"1851",-1),Gm={style:{"text-align":"left"}},Jm={href:"https://leetcode.com/problems/minimum-interval-to-include-each-query",target:"_blank",rel:"noopener noreferrer"},Rm=t("td",{style:{"text-align":"center"}},null,-1),Sm={style:{"text-align":"left"}},Am=t("code",null,"数组",-1),Qm=t("code",null,"二分查找",-1),Wm=t("code",null,"排序",-1),Zm=t("code",null,"2+",-1),Ym={style:{"text-align":"left"}},$m=t("td",{style:{"text-align":"center"}},"1878",-1),ty={style:{"text-align":"left"}},ey={href:"https://leetcode.com/problems/get-biggest-three-rhombus-sums-in-a-grid",target:"_blank",rel:"noopener noreferrer"},ly=t("td",{style:{"text-align":"center"}},null,-1),oy={style:{"text-align":"left"}},ny=t("code",null,"数组",-1),sy=t("code",null,"数学",-1),dy=t("code",null,"矩阵",-1),_y=t("code",null,"3+",-1),iy={style:{"text-align":"left"}},ay=t("td",{style:{"text-align":"center"}},"1882",-1),cy={style:{"text-align":"left"}},ry={href:"https://leetcode.com/problems/process-tasks-using-servers",target:"_blank",rel:"noopener noreferrer"},hy=t("td",{style:{"text-align":"center"}},null,-1),uy={style:{"text-align":"left"}},fy=t("code",null,"数组",-1),gy=t("code",null,"堆（优先队列）",-1),my={style:{"text-align":"left"}},yy=t("td",{style:{"text-align":"center"}},"1912",-1),xy={style:{"text-align":"left"}},py={href:"https://leetcode.com/problems/design-movie-rental-system",target:"_blank",rel:"noopener noreferrer"},by=t("td",{style:{"text-align":"center"}},null,-1),ky={style:{"text-align":"left"}},qy=t("code",null,"设计",-1),My=t("code",null,"数组",-1),wy=t("code",null,"哈希表",-1),Hy=t("code",null,"2+",-1),vy={style:{"text-align":"left"}},Iy=t("td",{style:{"text-align":"center"}},"1942",-1),Ky={style:{"text-align":"left"}},Ey={href:"https://leetcode.com/problems/the-number-of-the-smallest-unoccupied-chair",target:"_blank",rel:"noopener noreferrer"},zy={style:{"text-align":"center"}},Cy={href:"/problem/1942",target:"_blank",rel:"noopener noreferrer"},Ly={style:{"text-align":"left"}},Oy=t("code",null,"数组",-1),Py=t("code",null,"哈希表",-1),Vy=t("code",null,"堆（优先队列）",-1),jy={style:{"text-align":"left"}},By=t("td",{style:{"text-align":"center"}},"1962",-1),Ny={style:{"text-align":"left"}},Ty={href:"https://leetcode.com/problems/remove-stones-to-minimize-the-total",target:"_blank",rel:"noopener noreferrer"},Uy=t("td",{style:{"text-align":"center"}},null,-1),Xy={style:{"text-align":"left"}},Dy=t("code",null,"贪心",-1),Fy=t("code",null,"数组",-1),Gy=t("code",null,"堆（优先队列）",-1),Jy={style:{"text-align":"left"}},Ry=t("td",{style:{"text-align":"center"}},"1985",-1),Sy={style:{"text-align":"left"}},Ay={href:"https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array",target:"_blank",rel:"noopener noreferrer"},Qy=t("td",{style:{"text-align":"center"}},null,-1),Wy={style:{"text-align":"left"}},Zy=t("code",null,"数组",-1),Yy=t("code",null,"字符串",-1),$y=t("code",null,"分治",-1),tx=t("code",null,"3+",-1),ex={style:{"text-align":"left"}},lx=t("td",{style:{"text-align":"center"}},"2015",-1),ox={style:{"text-align":"left"}},nx={href:"https://leetcode.com/problems/average-height-of-buildings-in-each-segment",target:"_blank",rel:"noopener noreferrer"},sx=t("td",{style:{"text-align":"center"}},null,-1),dx={style:{"text-align":"left"}},_x=t("code",null,"贪心",-1),ix=t("code",null,"数组",-1),ax=t("code",null,"排序",-1),cx=t("code",null,"1+",-1),rx={style:{"text-align":"left"}},hx=t("td",{style:{"text-align":"center"}},"2034",-1),ux={style:{"text-align":"left"}},fx={href:"https://leetcode.com/problems/stock-price-fluctuation",target:"_blank",rel:"noopener noreferrer"},gx=t("td",{style:{"text-align":"center"}},null,-1),mx={style:{"text-align":"left"}},yx=t("code",null,"设计",-1),xx=t("code",null,"哈希表",-1),px=t("code",null,"数据流",-1),bx=t("code",null,"2+",-1),kx={style:{"text-align":"left"}},qx=t("td",{style:{"text-align":"center"}},"2054",-1),Mx={style:{"text-align":"left"}},wx={href:"https://leetcode.com/problems/two-best-non-overlapping-events",target:"_blank",rel:"noopener noreferrer"},Hx=t("td",{style:{"text-align":"center"}},null,-1),vx={style:{"text-align":"left"}},Ix=t("code",null,"数组",-1),Kx=t("code",null,"二分查找",-1),Ex=t("code",null,"动态规划",-1),zx=t("code",null,"2+",-1),Cx={style:{"text-align":"left"}},Lx=t("td",{style:{"text-align":"center"}},"2093",-1),Ox={style:{"text-align":"left"}},Px={href:"https://leetcode.com/problems/minimum-cost-to-reach-city-with-discounts",target:"_blank",rel:"noopener noreferrer"},Vx=t("td",{style:{"text-align":"center"}},null,-1),jx={style:{"text-align":"left"}},Bx=t("code",null,"图",-1),Nx=t("code",null,"最短路",-1),Tx=t("code",null,"堆（优先队列）",-1),Ux={style:{"text-align":"left"}},Xx=t("td",{style:{"text-align":"center"}},"2099",-1),Dx={style:{"text-align":"left"}},Fx={href:"https://leetcode.com/problems/find-subsequence-of-length-k-with-the-largest-sum",target:"_blank",rel:"noopener noreferrer"},Gx=t("td",{style:{"text-align":"center"}},null,-1),Jx={style:{"text-align":"left"}},Rx=t("code",null,"数组",-1),Sx=t("code",null,"哈希表",-1),Ax=t("code",null,"排序",-1),Qx=t("code",null,"1+",-1),Wx={style:{"text-align":"left"}},Zx=t("td",{style:{"text-align":"center"}},"2102",-1),Yx={style:{"text-align":"left"}},$x={href:"https://leetcode.com/problems/sequentially-ordinal-rank-tracker",target:"_blank",rel:"noopener noreferrer"},tp=t("td",{style:{"text-align":"center"}},null,-1),ep={style:{"text-align":"left"}},lp=t("code",null,"设计",-1),op=t("code",null,"数据流",-1),np=t("code",null,"有序集合",-1),sp=t("code",null,"1+",-1),dp={style:{"text-align":"left"}},_p=t("td",{style:{"text-align":"center"}},"2146",-1),ip={style:{"text-align":"left"}},ap={href:"https://leetcode.com/problems/k-highest-ranked-items-within-a-price-range",target:"_blank",rel:"noopener noreferrer"},cp=t("td",{style:{"text-align":"center"}},null,-1),rp={style:{"text-align":"left"}},hp=t("code",null,"广度优先搜索",-1),up=t("code",null,"数组",-1),fp=t("code",null,"矩阵",-1),gp=t("code",null,"2+",-1),mp={style:{"text-align":"left"}},yp=t("td",{style:{"text-align":"center"}},"2163",-1),xp={style:{"text-align":"left"}},pp={href:"https://leetcode.com/problems/minimum-difference-in-sums-after-removal-of-elements",target:"_blank",rel:"noopener noreferrer"},bp=t("td",{style:{"text-align":"center"}},null,-1),kp={style:{"text-align":"left"}},qp=t("code",null,"数组",-1),Mp=t("code",null,"动态规划",-1),wp=t("code",null,"堆（优先队列）",-1),Hp={style:{"text-align":"left"}},vp=t("td",{style:{"text-align":"center"}},"2182",-1),Ip={style:{"text-align":"left"}},Kp={href:"https://leetcode.com/problems/construct-string-with-repeat-limit",target:"_blank",rel:"noopener noreferrer"},Ep=t("td",{style:{"text-align":"center"}},null,-1),zp={style:{"text-align":"left"}},Cp=t("code",null,"贪心",-1),Lp=t("code",null,"哈希表",-1),Op=t("code",null,"字符串",-1),Pp=t("code",null,"2+",-1),Vp={style:{"text-align":"left"}},jp=t("td",{style:{"text-align":"center"}},"2208",-1),Bp={style:{"text-align":"left"}},Np={href:"https://leetcode.com/problems/minimum-operations-to-halve-array-sum",target:"_blank",rel:"noopener noreferrer"},Tp=t("td",{style:{"text-align":"center"}},null,-1),Up={style:{"text-align":"left"}},Xp=t("code",null,"贪心",-1),Dp=t("code",null,"数组",-1),Fp=t("code",null,"堆（优先队列）",-1),Gp={style:{"text-align":"left"}},Jp=t("td",{style:{"text-align":"center"}},"2231",-1),Rp={style:{"text-align":"left"}},Sp={href:"https://leetcode.com/problems/largest-number-after-digit-swaps-by-parity",target:"_blank",rel:"noopener noreferrer"},Ap=t("td",{style:{"text-align":"center"}},null,-1),Qp={style:{"text-align":"left"}},Wp=t("code",null,"排序",-1),Zp=t("code",null,"堆（优先队列）",-1),Yp={style:{"text-align":"left"}},$p=t("td",{style:{"text-align":"center"}},"2233",-1),t3={style:{"text-align":"left"}},e3={href:"https://leetcode.com/problems/maximum-product-after-k-increments",target:"_blank",rel:"noopener noreferrer"},l3=t("td",{style:{"text-align":"center"}},null,-1),o3={style:{"text-align":"left"}},n3=t("code",null,"贪心",-1),s3=t("code",null,"数组",-1),d3=t("code",null,"堆（优先队列）",-1),_3={style:{"text-align":"left"}},i3=t("td",{style:{"text-align":"center"}},"2285",-1),a3={style:{"text-align":"left"}},c3={href:"https://leetcode.com/problems/maximum-total-importance-of-roads",target:"_blank",rel:"noopener noreferrer"},r3=t("td",{style:{"text-align":"center"}},null,-1),h3={style:{"text-align":"left"}},u3=t("code",null,"贪心",-1),f3=t("code",null,"图",-1),g3=t("code",null,"排序",-1),m3=t("code",null,"1+",-1),y3={style:{"text-align":"left"}},x3=t("td",{style:{"text-align":"center"}},"2290",-1),p3={style:{"text-align":"left"}},b3={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},k3=t("td",{style:{"text-align":"center"}},null,-1),q3={style:{"text-align":"left"}},M3=t("code",null,"广度优先搜索",-1),w3=t("code",null,"图",-1),H3=t("code",null,"数组",-1),v3=t("code",null,"3+",-1),I3={style:{"text-align":"left"}},K3=t("td",{style:{"text-align":"center"}},"2333",-1),E3={style:{"text-align":"left"}},z3={href:"https://leetcode.com/problems/minimum-sum-of-squared-difference",target:"_blank",rel:"noopener noreferrer"},C3=t("td",{style:{"text-align":"center"}},null,-1),L3={style:{"text-align":"left"}},O3=t("code",null,"贪心",-1),P3=t("code",null,"数组",-1),V3=t("code",null,"二分查找",-1),j3=t("code",null,"2+",-1),B3={style:{"text-align":"left"}},N3=t("td",{style:{"text-align":"center"}},"2335",-1),T3={style:{"text-align":"left"}},U3={href:"https://leetcode.com/problems/minimum-amount-of-time-to-fill-cups",target:"_blank",rel:"noopener noreferrer"},X3=t("td",{style:{"text-align":"center"}},null,-1),D3={style:{"text-align":"left"}},F3=t("code",null,"贪心",-1),G3=t("code",null,"数组",-1),J3=t("code",null,"排序",-1),R3=t("code",null,"1+",-1),S3={style:{"text-align":"left"}},A3=t("td",{style:{"text-align":"center"}},"2336",-1),Q3={style:{"text-align":"left"}},W3={href:"https://leetcode.com/problems/smallest-number-in-infinite-set",target:"_blank",rel:"noopener noreferrer"},Z3=t("td",{style:{"text-align":"center"}},null,-1),Y3={style:{"text-align":"left"}},$3=t("code",null,"设计",-1),tb=t("code",null,"哈希表",-1),eb=t("code",null,"有序集合",-1),lb=t("code",null,"1+",-1),ob={style:{"text-align":"left"}},nb=t("td",{style:{"text-align":"center"}},"2342",-1),sb={style:{"text-align":"left"}},db={href:"https://leetcode.com/problems/max-sum-of-a-pair-with-equal-sum-of-digits",target:"_blank",rel:"noopener noreferrer"},_b=t("td",{style:{"text-align":"center"}},null,-1),ib={style:{"text-align":"left"}},ab=t("code",null,"数组",-1),cb=t("code",null,"哈希表",-1),rb=t("code",null,"排序",-1),hb=t("code",null,"1+",-1),ub={style:{"text-align":"left"}},fb=t("td",{style:{"text-align":"center"}},"2343",-1),gb={style:{"text-align":"left"}},mb={href:"https://leetcode.com/problems/query-kth-smallest-trimmed-number",target:"_blank",rel:"noopener noreferrer"},yb=t("td",{style:{"text-align":"center"}},null,-1),xb={style:{"text-align":"left"}},pb=t("code",null,"数组",-1),bb=t("code",null,"字符串",-1),kb=t("code",null,"分治",-1),qb=t("code",null,"4+",-1),Mb={style:{"text-align":"left"}},wb=t("td",{style:{"text-align":"center"}},"2344",-1),Hb={style:{"text-align":"left"}},vb={href:"https://leetcode.com/problems/minimum-deletions-to-make-array-divisible",target:"_blank",rel:"noopener noreferrer"},Ib=t("td",{style:{"text-align":"center"}},null,-1),Kb={style:{"text-align":"left"}},Eb=t("code",null,"数组",-1),zb=t("code",null,"数学",-1),Cb=t("code",null,"数论",-1),Lb=t("code",null,"2+",-1),Ob={style:{"text-align":"left"}},Pb=t("td",{style:{"text-align":"center"}},"2349",-1),Vb={style:{"text-align":"left"}},jb={href:"https://leetcode.com/problems/design-a-number-container-system",target:"_blank",rel:"noopener noreferrer"},Bb=t("td",{style:{"text-align":"center"}},null,-1),Nb={style:{"text-align":"left"}},Tb=t("code",null,"设计",-1),Ub=t("code",null,"哈希表",-1),Xb=t("code",null,"有序集合",-1),Db=t("code",null,"1+",-1),Fb={style:{"text-align":"left"}},Gb=t("td",{style:{"text-align":"center"}},"2353",-1),Jb={style:{"text-align":"left"}},Rb={href:"https://leetcode.com/problems/design-a-food-rating-system",target:"_blank",rel:"noopener noreferrer"},Sb=t("td",{style:{"text-align":"center"}},null,-1),Ab={style:{"text-align":"left"}},Qb=t("code",null,"设计",-1),Wb=t("code",null,"哈希表",-1),Zb=t("code",null,"有序集合",-1),Yb=t("code",null,"1+",-1),$b={style:{"text-align":"left"}},t2=t("td",{style:{"text-align":"center"}},"2357",-1),e2={style:{"text-align":"left"}},l2={href:"https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts",target:"_blank",rel:"noopener noreferrer"},o2=t("td",{style:{"text-align":"center"}},null,-1),n2={style:{"text-align":"left"}},s2=t("code",null,"贪心",-1),d2=t("code",null,"数组",-1),_2=t("code",null,"哈希表",-1),i2=t("code",null,"3+",-1),a2={style:{"text-align":"left"}},c2=t("td",{style:{"text-align":"center"}},"2386",-1),r2={style:{"text-align":"left"}},h2={href:"https://leetcode.com/problems/find-the-k-sum-of-an-array",target:"_blank",rel:"noopener noreferrer"},u2=t("td",{style:{"text-align":"center"}},null,-1),f2={style:{"text-align":"left"}},g2=t("code",null,"数组",-1),m2=t("code",null,"排序",-1),y2=t("code",null,"堆（优先队列）",-1),x2={style:{"text-align":"left"}},p2=t("td",{style:{"text-align":"center"}},"2398",-1),b2={style:{"text-align":"left"}},k2={href:"https://leetcode.com/problems/maximum-number-of-robots-within-budget",target:"_blank",rel:"noopener noreferrer"},q2=t("td",{style:{"text-align":"center"}},null,-1),M2={style:{"text-align":"left"}},w2=t("code",null,"队列",-1),H2=t("code",null,"数组",-1),v2=t("code",null,"二分查找",-1),I2=t("code",null,"4+",-1),K2={style:{"text-align":"left"}},E2=t("td",{style:{"text-align":"center"}},"2402",-1),z2={style:{"text-align":"left"}},C2={href:"https://leetcode.com/problems/meeting-rooms-iii",target:"_blank",rel:"noopener noreferrer"},L2=t("td",{style:{"text-align":"center"}},null,-1),O2={style:{"text-align":"left"}},P2=t("code",null,"数组",-1),V2=t("code",null,"哈希表",-1),j2=t("code",null,"排序",-1),B2=t("code",null,"2+",-1),N2={style:{"text-align":"left"}},T2=t("td",{style:{"text-align":"center"}},"2406",-1),U2={style:{"text-align":"left"}},X2={href:"https://leetcode.com/problems/divide-intervals-into-minimum-number-of-groups",target:"_blank",rel:"noopener noreferrer"},D2={style:{"text-align":"center"}},F2={href:"/problem/2406",target:"_blank",rel:"noopener noreferrer"},G2={style:{"text-align":"left"}},J2=t("code",null,"贪心",-1),R2=t("code",null,"数组",-1),S2=t("code",null,"双指针",-1),A2=t("code",null,"3+",-1),Q2={style:{"text-align":"left"}},W2=t("td",{style:{"text-align":"center"}},"2424",-1),Z2={style:{"text-align":"left"}},Y2={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},$2=t("td",{style:{"text-align":"center"}},null,-1),t0={style:{"text-align":"left"}},e0=t("code",null,"并查集",-1),l0=t("code",null,"设计",-1),o0=t("code",null,"树状数组",-1),n0=t("code",null,"4+",-1),s0={style:{"text-align":"left"}},d0=t("td",{style:{"text-align":"center"}},"2454",-1),_0={style:{"text-align":"left"}},i0={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},a0=t("td",{style:{"text-align":"center"}},null,-1),c0={style:{"text-align":"left"}},r0=t("code",null,"栈",-1),h0=t("code",null,"数组",-1),u0=t("code",null,"二分查找",-1),f0=t("code",null,"3+",-1),g0={style:{"text-align":"left"}},m0=t("td",{style:{"text-align":"center"}},"2456",-1),y0={style:{"text-align":"left"}},x0={href:"https://leetcode.com/problems/most-popular-video-creator",target:"_blank",rel:"noopener noreferrer"},p0=t("td",{style:{"text-align":"center"}},null,-1),b0={style:{"text-align":"left"}},k0=t("code",null,"数组",-1),q0=t("code",null,"哈希表",-1),M0=t("code",null,"字符串",-1),w0=t("code",null,"2+",-1),H0={style:{"text-align":"left"}},v0=t("td",{style:{"text-align":"center"}},"2462",-1),I0={style:{"text-align":"left"}},K0={href:"https://leetcode.com/problems/total-cost-to-hire-k-workers",target:"_blank",rel:"noopener noreferrer"},E0=t("td",{style:{"text-align":"center"}},null,-1),z0={style:{"text-align":"left"}},C0=t("code",null,"数组",-1),L0=t("code",null,"双指针",-1),O0=t("code",null,"模拟",-1),P0=t("code",null,"1+",-1),V0={style:{"text-align":"left"}},j0=t("td",{style:{"text-align":"center"}},"2473",-1),B0={style:{"text-align":"left"}},N0={href:"https://leetcode.com/problems/minimum-cost-to-buy-apples",target:"_blank",rel:"noopener noreferrer"},T0=t("td",{style:{"text-align":"center"}},null,-1),U0={style:{"text-align":"left"}},X0=t("code",null,"图",-1),D0=t("code",null,"数组",-1),F0=t("code",null,"最短路",-1),G0=t("code",null,"1+",-1),J0={style:{"text-align":"left"}},R0=t("td",{style:{"text-align":"center"}},"2497",-1),S0={style:{"text-align":"left"}},A0={href:"https://leetcode.com/problems/maximum-star-sum-of-a-graph",target:"_blank",rel:"noopener noreferrer"},Q0=t("td",{style:{"text-align":"center"}},null,-1),W0={style:{"text-align":"left"}},Z0=t("code",null,"贪心",-1),Y0=t("code",null,"图",-1),$0=t("code",null,"数组",-1),t4=t("code",null,"2+",-1),e4={style:{"text-align":"left"}},l4=t("td",{style:{"text-align":"center"}},"2500",-1),o4={style:{"text-align":"left"}},n4={href:"https://leetcode.com/problems/delete-greatest-value-in-each-row",target:"_blank",rel:"noopener noreferrer"},s4=t("td",{style:{"text-align":"center"}},null,-1),d4={style:{"text-align":"left"}},_4=t("code",null,"数组",-1),i4=t("code",null,"矩阵",-1),a4=t("code",null,"排序",-1),c4=t("code",null,"2+",-1),r4={style:{"text-align":"left"}},h4=t("td",{style:{"text-align":"center"}},"2503",-1),u4={style:{"text-align":"left"}},f4={href:"https://leetcode.com/problems/maximum-number-of-points-from-grid-queries",target:"_blank",rel:"noopener noreferrer"},g4=t("td",{style:{"text-align":"center"}},null,-1),m4={style:{"text-align":"left"}},y4=t("code",null,"广度优先搜索",-1),x4=t("code",null,"并查集",-1),p4=t("code",null,"数组",-1),b4=t("code",null,"4+",-1),k4={style:{"text-align":"left"}},q4=t("td",{style:{"text-align":"center"}},"2512",-1),M4={style:{"text-align":"left"}},w4={href:"https://leetcode.com/problems/reward-top-k-students",target:"_blank",rel:"noopener noreferrer"},H4=t("td",{style:{"text-align":"center"}},null,-1),v4={style:{"text-align":"left"}},I4=t("code",null,"数组",-1),K4=t("code",null,"哈希表",-1),E4=t("code",null,"字符串",-1),z4=t("code",null,"2+",-1),C4={style:{"text-align":"left"}},L4=t("td",{style:{"text-align":"center"}},"2530",-1),O4={style:{"text-align":"left"}},P4={href:"https://leetcode.com/problems/maximal-score-after-applying-k-operations",target:"_blank",rel:"noopener noreferrer"},V4={style:{"text-align":"center"}},j4={href:"/problem/2530",target:"_blank",rel:"noopener noreferrer"},B4={style:{"text-align":"left"}},N4=t("code",null,"贪心",-1),T4=t("code",null,"数组",-1),U4=t("code",null,"堆（优先队列）",-1),X4={style:{"text-align":"left"}},D4=t("td",{style:{"text-align":"center"}},"2532",-1),F4={style:{"text-align":"left"}},G4={href:"https://leetcode.com/problems/time-to-cross-a-bridge",target:"_blank",rel:"noopener noreferrer"},J4=t("td",{style:{"text-align":"center"}},null,-1),R4={style:{"text-align":"left"}},S4=t("code",null,"数组",-1),A4=t("code",null,"模拟",-1),Q4=t("code",null,"堆（优先队列）",-1),W4={style:{"text-align":"left"}},Z4=t("td",{style:{"text-align":"center"}},"2542",-1),Y4={style:{"text-align":"left"}},$4={href:"https://leetcode.com/problems/maximum-subsequence-score",target:"_blank",rel:"noopener noreferrer"},t8=t("td",{style:{"text-align":"center"}},null,-1),e8={style:{"text-align":"left"}},l8=t("code",null,"贪心",-1),o8=t("code",null,"数组",-1),n8=t("code",null,"排序",-1),s8=t("code",null,"1+",-1),d8={style:{"text-align":"left"}},_8=t("td",{style:{"text-align":"center"}},"2551",-1),i8={style:{"text-align":"left"}},a8={href:"https://leetcode.com/problems/put-marbles-in-bags",target:"_blank",rel:"noopener noreferrer"},c8=t("td",{style:{"text-align":"center"}},null,-1),r8={style:{"text-align":"left"}},h8=t("code",null,"贪心",-1),u8=t("code",null,"数组",-1),f8=t("code",null,"排序",-1),g8=t("code",null,"1+",-1),m8={style:{"text-align":"left"}},y8=t("td",{style:{"text-align":"center"}},"2558",-1),x8={style:{"text-align":"left"}},p8={href:"https://leetcode.com/problems/take-gifts-from-the-richest-pile",target:"_blank",rel:"noopener noreferrer"},b8=t("td",{style:{"text-align":"center"}},null,-1),k8={style:{"text-align":"left"}},q8=t("code",null,"数组",-1),M8=t("code",null,"模拟",-1),w8=t("code",null,"堆（优先队列）",-1),H8={style:{"text-align":"left"}},v8=t("td",{style:{"text-align":"center"}},"2577",-1),I8={style:{"text-align":"left"}},K8={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},E8=t("td",{style:{"text-align":"center"}},null,-1),z8={style:{"text-align":"left"}},C8=t("code",null,"广度优先搜索",-1),L8=t("code",null,"图",-1),O8=t("code",null,"数组",-1),P8=t("code",null,"3+",-1),V8={style:{"text-align":"left"}},j8=t("td",{style:{"text-align":"center"}},"2593",-1),B8={style:{"text-align":"left"}},N8={href:"https://leetcode.com/problems/find-score-of-an-array-after-marking-all-elements",target:"_blank",rel:"noopener noreferrer"},T8=t("td",{style:{"text-align":"center"}},null,-1),U8={style:{"text-align":"left"}},X8=t("code",null,"数组",-1),D8=t("code",null,"哈希表",-1),F8=t("code",null,"排序",-1),G8=t("code",null,"2+",-1),J8={style:{"text-align":"left"}},R8=t("td",{style:{"text-align":"center"}},"2599",-1),S8={style:{"text-align":"left"}},A8={href:"https://leetcode.com/problems/make-the-prefix-sum-non-negative",target:"_blank",rel:"noopener noreferrer"},Q8=t("td",{style:{"text-align":"center"}},null,-1),W8={style:{"text-align":"left"}},Z8=t("code",null,"贪心",-1),Y8=t("code",null,"数组",-1),$8=t("code",null,"堆（优先队列）",-1),t6={style:{"text-align":"left"}},e6=t("td",{style:{"text-align":"center"}},"2611",-1),l6={style:{"text-align":"left"}},o6={href:"https://leetcode.com/problems/mice-and-cheese",target:"_blank",rel:"noopener noreferrer"},n6=t("td",{style:{"text-align":"center"}},null,-1),s6={style:{"text-align":"left"}},d6=t("code",null,"贪心",-1),_6=t("code",null,"数组",-1),i6=t("code",null,"排序",-1),a6=t("code",null,"1+",-1),c6={style:{"text-align":"left"}},r6=t("td",{style:{"text-align":"center"}},"2617",-1),h6={style:{"text-align":"left"}},u6={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},f6=t("td",{style:{"text-align":"center"}},null,-1),g6={style:{"text-align":"left"}},m6=t("code",null,"栈",-1),y6=t("code",null,"广度优先搜索",-1),x6=t("code",null,"并查集",-1),p6=t("code",null,"5+",-1),b6={style:{"text-align":"left"}},k6=t("td",{style:{"text-align":"center"}},"2642",-1),q6={style:{"text-align":"left"}},M6={href:"https://leetcode.com/problems/design-graph-with-shortest-path-calculator",target:"_blank",rel:"noopener noreferrer"},w6=t("td",{style:{"text-align":"center"}},null,-1),H6={style:{"text-align":"left"}},v6=t("code",null,"图",-1),I6=t("code",null,"设计",-1),K6=t("code",null,"最短路",-1),E6=t("code",null,"1+",-1),z6={style:{"text-align":"left"}},C6=t("td",{style:{"text-align":"center"}},"2662",-1),L6={style:{"text-align":"left"}},O6={href:"https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads",target:"_blank",rel:"noopener noreferrer"},P6=t("td",{style:{"text-align":"center"}},null,-1),V6={style:{"text-align":"left"}},j6=t("code",null,"图",-1),B6=t("code",null,"数组",-1),N6=t("code",null,"最短路",-1),T6=t("code",null,"1+",-1),U6={style:{"text-align":"left"}},X6=t("td",{style:{"text-align":"center"}},"2679",-1),D6={style:{"text-align":"left"}},F6={href:"https://leetcode.com/problems/sum-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},G6=t("td",{style:{"text-align":"center"}},null,-1),J6={style:{"text-align":"left"}},R6=t("code",null,"数组",-1),S6=t("code",null,"矩阵",-1),A6=t("code",null,"排序",-1),Q6=t("code",null,"2+",-1),W6={style:{"text-align":"left"}},Z6=t("td",{style:{"text-align":"center"}},"2699",-1),Y6={style:{"text-align":"left"}},$6={href:"https://leetcode.com/problems/modify-graph-edge-weights",target:"_blank",rel:"noopener noreferrer"},t5=t("td",{style:{"text-align":"center"}},null,-1),e5={style:{"text-align":"left"}},l5=t("code",null,"图",-1),o5=t("code",null,"最短路",-1),n5=t("code",null,"堆（优先队列）",-1),s5={style:{"text-align":"left"}},d5=t("td",{style:{"text-align":"center"}},"2714",-1),_5={style:{"text-align":"left"}},i5={href:"https://leetcode.com/problems/find-shortest-path-with-k-hops",target:"_blank",rel:"noopener noreferrer"},a5=t("td",{style:{"text-align":"center"}},null,-1),c5={style:{"text-align":"left"}},r5=t("code",null,"图",-1),h5=t("code",null,"最短路",-1),u5=t("code",null,"堆（优先队列）",-1),f5={style:{"text-align":"left"}},g5=t("td",{style:{"text-align":"center"}},"2737",-1),m5={style:{"text-align":"left"}},y5={href:"https://leetcode.com/problems/find-the-closest-marked-node",target:"_blank",rel:"noopener noreferrer"},x5=t("td",{style:{"text-align":"center"}},null,-1),p5={style:{"text-align":"left"}},b5=t("code",null,"图",-1),k5=t("code",null,"数组",-1),q5=t("code",null,"最短路",-1),M5=t("code",null,"1+",-1),w5={style:{"text-align":"left"}},H5=t("td",{style:{"text-align":"center"}},"2762",-1),v5={style:{"text-align":"left"}},I5={href:"https://leetcode.com/problems/continuous-subarrays",target:"_blank",rel:"noopener noreferrer"},K5=t("td",{style:{"text-align":"center"}},null,-1),E5={style:{"text-align":"left"}},z5=t("code",null,"队列",-1),C5=t("code",null,"数组",-1),L5=t("code",null,"有序集合",-1),O5=t("code",null,"3+",-1),P5={style:{"text-align":"left"}},V5=t("td",{style:{"text-align":"center"}},"2813",-1),j5={style:{"text-align":"left"}},B5={href:"https://leetcode.com/problems/maximum-elegance-of-a-k-length-subsequence",target:"_blank",rel:"noopener noreferrer"},N5=t("td",{style:{"text-align":"center"}},null,-1),T5={style:{"text-align":"left"}},U5=t("code",null,"栈",-1),X5=t("code",null,"贪心",-1),D5=t("code",null,"数组",-1),F5=t("code",null,"3+",-1),G5={style:{"text-align":"left"}},J5=t("td",{style:{"text-align":"center"}},"2931",-1),R5={style:{"text-align":"left"}},S5={href:"https://leetcode.com/problems/maximum-spending-after-buying-items",target:"_blank",rel:"noopener noreferrer"},A5=t("td",{style:{"text-align":"center"}},null,-1),Q5={style:{"text-align":"left"}},W5=t("code",null,"贪心",-1),Z5=t("code",null,"数组",-1),Y5=t("code",null,"矩阵",-1),$5=t("code",null,"2+",-1),t7={style:{"text-align":"left"}},e7=t("td",{style:{"text-align":"center"}},"2940",-1),l7={style:{"text-align":"left"}},o7={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},n7=t("td",{style:{"text-align":"center"}},null,-1),s7={style:{"text-align":"left"}},d7=t("code",null,"栈",-1),_7=t("code",null,"树状数组",-1),i7=t("code",null,"线段树",-1),a7=t("code",null,"4+",-1),c7={style:{"text-align":"left"}},r7=t("td",{style:{"text-align":"center"}},"2944",-1),h7={style:{"text-align":"left"}},u7={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},f7=t("td",{style:{"text-align":"center"}},null,-1),g7={style:{"text-align":"left"}},m7=t("code",null,"队列",-1),y7=t("code",null,"数组",-1),x7=t("code",null,"动态规划",-1),p7=t("code",null,"2+",-1),b7={style:{"text-align":"left"}},k7=t("td",{style:{"text-align":"center"}},"2959",-1),q7={style:{"text-align":"left"}},M7={href:"https://leetcode.com/problems/number-of-possible-sets-of-closing-branches",target:"_blank",rel:"noopener noreferrer"},w7=t("td",{style:{"text-align":"center"}},null,-1),H7={style:{"text-align":"left"}},v7=t("code",null,"位运算",-1),I7=t("code",null,"图",-1),K7=t("code",null,"枚举",-1),E7=t("code",null,"2+",-1),z7={style:{"text-align":"left"}},C7=t("td",{style:{"text-align":"center"}},"2969",-1),L7={style:{"text-align":"left"}},O7={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},P7=t("td",{style:{"text-align":"center"}},null,-1),V7={style:{"text-align":"left"}},j7=t("code",null,"队列",-1),B7=t("code",null,"数组",-1),N7=t("code",null,"动态规划",-1),T7=t("code",null,"2+",-1),U7={style:{"text-align":"left"}},X7=t("td",{style:{"text-align":"center"}},"2973",-1),D7={style:{"text-align":"left"}},F7={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},G7=t("td",{style:{"text-align":"center"}},null,-1),J7={style:{"text-align":"left"}},R7=t("code",null,"树",-1),S7=t("code",null,"深度优先搜索",-1),A7=t("code",null,"动态规划",-1),Q7=t("code",null,"2+",-1),W7={style:{"text-align":"left"}},Z7=t("td",{style:{"text-align":"center"}},"2974",-1),Y7={style:{"text-align":"left"}},$7={href:"https://leetcode.com/problems/minimum-number-game",target:"_blank",rel:"noopener noreferrer"},t9=t("td",{style:{"text-align":"center"}},null,-1),e9={style:{"text-align":"left"}},l9=t("code",null,"数组",-1),o9=t("code",null,"排序",-1),n9=t("code",null,"模拟",-1),s9=t("code",null,"1+",-1),d9={style:{"text-align":"left"}},_9=t("td",{style:{"text-align":"center"}},"3013",-1),i9={style:{"text-align":"left"}},a9={href:"https://leetcode.com/problems/divide-an-array-into-subarrays-with-minimum-cost-ii",target:"_blank",rel:"noopener noreferrer"},c9=t("td",{style:{"text-align":"center"}},null,-1),r9={style:{"text-align":"left"}},h9=t("code",null,"数组",-1),u9=t("code",null,"哈希表",-1),f9=t("code",null,"滑动窗口",-1),g9=t("code",null,"1+",-1),m9={style:{"text-align":"left"}},y9=t("td",{style:{"text-align":"center"}},"3049",-1),x9={style:{"text-align":"left"}},p9={href:"https://leetcode.com/problems/earliest-second-to-mark-indices-ii",target:"_blank",rel:"noopener noreferrer"},b9=t("td",{style:{"text-align":"center"}},null,-1),k9={style:{"text-align":"left"}},q9=t("code",null,"贪心",-1),M9=t("code",null,"数组",-1),w9=t("code",null,"二分查找",-1),H9=t("code",null,"1+",-1),v9={style:{"text-align":"left"}},I9=t("td",{style:{"text-align":"center"}},"3066",-1),K9={style:{"text-align":"left"}},E9={href:"https://leetcode.com/problems/minimum-operations-to-exceed-threshold-value-ii",target:"_blank",rel:"noopener noreferrer"},z9=t("td",{style:{"text-align":"center"}},null,-1),C9={style:{"text-align":"left"}},L9=t("code",null,"数组",-1),O9=t("code",null,"模拟",-1),P9=t("code",null,"堆（优先队列）",-1),V9={style:{"text-align":"left"}},j9=t("td",{style:{"text-align":"center"}},"3080",-1),B9={style:{"text-align":"left"}},N9={href:"https://leetcode.com/problems/mark-elements-on-array-by-performing-queries",target:"_blank",rel:"noopener noreferrer"},T9=t("td",{style:{"text-align":"center"}},null,-1),U9={style:{"text-align":"left"}},X9=t("code",null,"数组",-1),D9=t("code",null,"哈希表",-1),F9=t("code",null,"排序",-1),G9=t("code",null,"2+",-1),J9={style:{"text-align":"left"}},R9=t("td",{style:{"text-align":"center"}},"3081",-1),S9={style:{"text-align":"left"}},A9={href:"https://leetcode.com/problems/replace-question-marks-in-string-to-minimize-its-value",target:"_blank",rel:"noopener noreferrer"},Q9=t("td",{style:{"text-align":"center"}},null,-1),W9={style:{"text-align":"left"}},Z9=t("code",null,"贪心",-1),Y9=t("code",null,"哈希表",-1),$9=t("code",null,"字符串",-1),tk=t("code",null,"3+",-1),ek={style:{"text-align":"left"}},lk=t("td",{style:{"text-align":"center"}},"3092",-1),ok={style:{"text-align":"left"}},nk={href:"https://leetcode.com/problems/most-frequent-ids",target:"_blank",rel:"noopener noreferrer"},sk=t("td",{style:{"text-align":"center"}},null,-1),dk={style:{"text-align":"left"}},_k=t("code",null,"数组",-1),ik=t("code",null,"哈希表",-1),ak=t("code",null,"有序集合",-1),ck=t("code",null,"1+",-1),rk={style:{"text-align":"left"}},hk=t("td",{style:{"text-align":"center"}},"3112",-1),uk={style:{"text-align":"left"}},fk={href:"https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes",target:"_blank",rel:"noopener noreferrer"},gk=t("td",{style:{"text-align":"center"}},null,-1),mk={style:{"text-align":"left"}},yk=t("code",null,"图",-1),xk=t("code",null,"数组",-1),pk=t("code",null,"最短路",-1),bk=t("code",null,"1+",-1),kk={style:{"text-align":"left"}},qk=t("td",{style:{"text-align":"center"}},"3123",-1),Mk={style:{"text-align":"left"}},wk={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},Hk=t("td",{style:{"text-align":"center"}},null,-1),vk={style:{"text-align":"left"}},Ik=t("code",null,"深度优先搜索",-1),Kk=t("code",null,"广度优先搜索",-1),Ek=t("code",null,"图",-1),zk=t("code",null,"2+",-1),Ck={style:{"text-align":"left"}},Lk=t("td",{style:{"text-align":"center"}},"3170",-1),Ok={style:{"text-align":"left"}},Pk={href:"https://leetcode.com/problems/lexicographically-minimum-string-after-removing-stars",target:"_blank",rel:"noopener noreferrer"},Vk=t("td",{style:{"text-align":"center"}},null,-1),jk={style:{"text-align":"left"}},Bk=t("code",null,"栈",-1),Nk=t("code",null,"贪心",-1),Tk=t("code",null,"哈希表",-1),Uk=t("code",null,"2+",-1),Xk={style:{"text-align":"left"}},Dk=t("td",{style:{"text-align":"center"}},"3264",-1),Fk={style:{"text-align":"left"}},Gk={href:"https://leetcode.com/problems/final-array-state-after-k-multiplication-operations-i",target:"_blank",rel:"noopener noreferrer"},Jk=t("td",{style:{"text-align":"center"}},null,-1),Rk={style:{"text-align":"left"}},Sk=t("code",null,"数组",-1),Ak=t("code",null,"数学",-1),Qk=t("code",null,"模拟",-1),Wk=t("code",null,"1+",-1),Zk={style:{"text-align":"left"}},Yk=t("td",{style:{"text-align":"center"}},"3266",-1),$k={style:{"text-align":"left"}},tq={href:"https://leetcode.com/problems/final-array-state-after-k-multiplication-operations-ii",target:"_blank",rel:"noopener noreferrer"},eq=t("td",{style:{"text-align":"center"}},null,-1),lq={style:{"text-align":"left"}},oq=t("code",null,"数组",-1),nq=t("code",null,"模拟",-1),sq=t("code",null,"堆（优先队列）",-1),dq={style:{"text-align":"left"}},_q=t("td",{style:{"text-align":"center"}},"3275",-1),iq={style:{"text-align":"left"}},aq={href:"https://leetcode.com/problems/k-th-nearest-obstacle-queries",target:"_blank",rel:"noopener noreferrer"},cq=t("td",{style:{"text-align":"center"}},null,-1),rq={style:{"text-align":"left"}},hq=t("code",null,"数组",-1),uq=t("code",null,"堆（优先队列）",-1),fq={style:{"text-align":"left"}},gq=t("td",{style:{"text-align":"center"}},"3286",-1),mq={style:{"text-align":"left"}},yq={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},xq=t("td",{style:{"text-align":"center"}},null,-1),pq={style:{"text-align":"left"}},bq=t("code",null,"广度优先搜索",-1),kq=t("code",null,"图",-1),qq=t("code",null,"数组",-1),Mq=t("code",null,"3+",-1),wq={style:{"text-align":"left"}},Hq=t("td",{style:{"text-align":"center"}},"3296",-1),vq={style:{"text-align":"left"}},Iq={href:"https://leetcode.com/problems/minimum-number-of-seconds-to-make-mountain-height-zero",target:"_blank",rel:"noopener noreferrer"},Kq=t("td",{style:{"text-align":"center"}},null,-1),Eq={style:{"text-align":"left"}},zq=t("code",null,"贪心",-1),Cq=t("code",null,"数组",-1),Lq=t("code",null,"数学",-1),Oq=t("code",null,"2+",-1),Pq={style:{"text-align":"left"}},Vq=t("td",{style:{"text-align":"center"}},"3318",-1),jq={style:{"text-align":"left"}},Bq={href:"https://leetcode.com/problems/find-x-sum-of-all-k-long-subarrays-i",target:"_blank",rel:"noopener noreferrer"},Nq={style:{"text-align":"center"}},Tq={href:"/problem/3318",target:"_blank",rel:"noopener noreferrer"},Uq={style:{"text-align":"left"}},Xq=t("code",null,"数组",-1),Dq=t("code",null,"哈希表",-1),Fq=t("code",null,"滑动窗口",-1),Gq=t("code",null,"1+",-1),Jq={style:{"text-align":"left"}},Rq=t("td",{style:{"text-align":"center"}},"3321",-1),Sq={style:{"text-align":"left"}},Aq={href:"https://leetcode.com/problems/find-x-sum-of-all-k-long-subarrays-ii",target:"_blank",rel:"noopener noreferrer"},Qq={style:{"text-align":"center"}},Wq={href:"/problem/3321",target:"_blank",rel:"noopener noreferrer"},Zq={style:{"text-align":"left"}},Yq=t("code",null,"数组",-1),$q=t("code",null,"哈希表",-1),tM=t("code",null,"滑动窗口",-1),eM=t("code",null,"1+",-1),lM={style:{"text-align":"left"}},oM=t("td",{style:{"text-align":"center"}},"LCP 24",-1),nM={style:{"text-align":"left"}},sM={href:"https://leetcode.cn/problems/5TxKeK",target:"_blank",rel:"noopener noreferrer"},dM=t("td",{style:{"text-align":"center"}},null,-1),_M={style:{"text-align":"left"}},iM=t("code",null,"数组",-1),aM=t("code",null,"数学",-1),cM=t("code",null,"堆（优先队列）",-1),rM={style:{"text-align":"left"}},hM=t("td",{style:{"text-align":"center"}},"LCP 30",-1),uM={style:{"text-align":"left"}},fM={href:"https://leetcode.cn/problems/p0NxJO",target:"_blank",rel:"noopener noreferrer"},gM=t("td",{style:{"text-align":"center"}},null,-1),mM={style:{"text-align":"left"}},yM=t("code",null,"贪心",-1),xM=t("code",null,"数组",-1),pM=t("code",null,"堆（优先队列）",-1),bM={style:{"text-align":"left"}},kM=t("td",{style:{"text-align":"center"}},"LCP 32",-1),qM={style:{"text-align":"left"}},MM={href:"https://leetcode.cn/problems/t3fKg1",target:"_blank",rel:"noopener noreferrer"},wM=t("td",{style:{"text-align":"center"}},null,-1),HM={style:{"text-align":"left"}},vM=t("code",null,"贪心",-1),IM=t("code",null,"数组",-1),KM=t("code",null,"堆（优先队列）",-1),EM={style:{"text-align":"left"}},zM=t("td",{style:{"text-align":"center"}},"LCP 33",-1),CM={style:{"text-align":"left"}},LM={href:"https://leetcode.cn/problems/o8SXZn",target:"_blank",rel:"noopener noreferrer"},OM=t("td",{style:{"text-align":"center"}},null,-1),PM={style:{"text-align":"left"}},VM=t("code",null,"贪心",-1),jM=t("code",null,"数组",-1),BM=t("code",null,"堆（优先队列）",-1),NM={style:{"text-align":"left"}},TM=t("td",{style:{"text-align":"center"}},"LCP 35",-1),UM={style:{"text-align":"left"}},XM={href:"https://leetcode.cn/problems/DFPeFJ",target:"_blank",rel:"noopener noreferrer"},DM=t("td",{style:{"text-align":"center"}},null,-1),FM={style:{"text-align":"left"}},GM=t("code",null,"图",-1),JM=t("code",null,"最短路",-1),RM=t("code",null,"堆（优先队列）",-1),SM={style:{"text-align":"left"}},AM=t("td",{style:{"text-align":"center"}},"LCP 49",-1),QM={style:{"text-align":"left"}},WM={href:"https://leetcode.cn/problems/K8GULz",target:"_blank",rel:"noopener noreferrer"},ZM=t("td",{style:{"text-align":"center"}},null,-1),YM={style:{"text-align":"left"}},$M=t("code",null,"位运算",-1),tw=t("code",null,"并查集",-1),ew=t("code",null,"数组",-1),lw=t("code",null,"1+",-1),ow={style:{"text-align":"left"}},nw=t("td",{style:{"text-align":"center"}},"LCP 56",-1),sw={style:{"text-align":"left"}},dw={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},_w=t("td",{style:{"text-align":"center"}},null,-1),iw={style:{"text-align":"left"}},aw=t("code",null,"广度优先搜索",-1),cw=t("code",null,"图",-1),rw=t("code",null,"数组",-1),hw=t("code",null,"3+",-1),uw={style:{"text-align":"left"}},fw=t("td",{style:{"text-align":"center"}},"剑指 Offer 40",-1),gw={style:{"text-align":"left"}},mw={href:"https://leetcode.cn/problems/zui-xiao-de-kge-shu-lcof",target:"_blank",rel:"noopener noreferrer"},yw=t("td",{style:{"text-align":"center"}},null,-1),xw={style:{"text-align":"left"}},pw=t("code",null,"数组",-1),bw=t("code",null,"分治",-1),kw=t("code",null,"快速选择",-1),qw=t("code",null,"2+",-1),Mw={style:{"text-align":"left"}},ww=t("td",{style:{"text-align":"center"}},"剑指 Offer 41",-1),Hw={style:{"text-align":"left"}},vw={href:"https://leetcode.cn/problems/shu-ju-liu-zhong-de-zhong-wei-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Iw=t("td",{style:{"text-align":"center"}},null,-1),Kw={style:{"text-align":"left"}},Ew=t("code",null,"设计",-1),zw=t("code",null,"双指针",-1),Cw=t("code",null,"数据流",-1),Lw=t("code",null,"2+",-1),Ow={style:{"text-align":"left"}},Pw=t("td",{style:{"text-align":"center"}},"剑指 Offer 49",-1),Vw={style:{"text-align":"left"}},jw={href:"https://leetcode.cn/problems/chou-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Bw={style:{"text-align":"center"}},Nw={href:"/problem/jz_offer_49_1",target:"_blank",rel:"noopener noreferrer"},Tw={style:{"text-align":"left"}},Uw=t("code",null,"哈希表",-1),Xw=t("code",null,"数学",-1),Dw=t("code",null,"动态规划",-1),Fw=t("code",null,"1+",-1),Gw={style:{"text-align":"left"}},Jw=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - I",-1),Rw={style:{"text-align":"left"}},Sw={href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},Aw=t("td",{style:{"text-align":"center"}},null,-1),Qw={style:{"text-align":"left"}},Ww=t("code",null,"队列",-1),Zw=t("code",null,"数组",-1),Yw=t("code",null,"滑动窗口",-1),$w=t("code",null,"2+",-1),tH={style:{"text-align":"left"}},eH=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),lH={style:{"text-align":"left"}},oH={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},nH=t("td",{style:{"text-align":"center"}},null,-1),sH={style:{"text-align":"left"}},dH=t("code",null,"树",-1),_H=t("code",null,"设计",-1),iH=t("code",null,"二叉搜索树",-1),aH=t("code",null,"3+",-1),cH={style:{"text-align":"left"}},rH=t("td",{style:{"text-align":"center"}},"剑指 Offer II 60",-1),hH={style:{"text-align":"left"}},uH={href:"https://leetcode.cn/problems/g5c51o",target:"_blank",rel:"noopener noreferrer"},fH=t("td",{style:{"text-align":"center"}},null,-1),gH={style:{"text-align":"left"}},mH=t("code",null,"数组",-1),yH=t("code",null,"哈希表",-1),xH=t("code",null,"分治",-1),pH=t("code",null,"5+",-1),bH={style:{"text-align":"left"}},kH=t("td",{style:{"text-align":"center"}},"剑指 Offer II 61",-1),qH={style:{"text-align":"left"}},MH={href:"https://leetcode.cn/problems/qn8gGX",target:"_blank",rel:"noopener noreferrer"},wH=t("td",{style:{"text-align":"center"}},null,-1),HH={style:{"text-align":"left"}},vH=t("code",null,"数组",-1),IH=t("code",null,"堆（优先队列）",-1),KH={style:{"text-align":"left"}},EH=t("td",{style:{"text-align":"center"}},"剑指 Offer II 76",-1),zH={style:{"text-align":"left"}},CH={href:"https://leetcode.cn/problems/xx4gT2",target:"_blank",rel:"noopener noreferrer"},LH=t("td",{style:{"text-align":"center"}},null,-1),OH={style:{"text-align":"left"}},PH=t("code",null,"数组",-1),VH=t("code",null,"分治",-1),jH=t("code",null,"快速选择",-1),BH=t("code",null,"2+",-1),NH={style:{"text-align":"left"}},TH=t("td",{style:{"text-align":"center"}},"剑指 Offer II 78",-1),UH={style:{"text-align":"left"}},XH={href:"https://leetcode.cn/problems/vvXgSW",target:"_blank",rel:"noopener noreferrer"},DH=t("td",{style:{"text-align":"center"}},null,-1),FH={style:{"text-align":"left"}},GH=t("code",null,"链表",-1),JH=t("code",null,"分治",-1),RH=t("code",null,"堆（优先队列）",-1),SH=t("code",null,"1+",-1),AH={style:{"text-align":"left"}},QH=t("td",{style:{"text-align":"center"}},"面试题 17.09",-1),WH={style:{"text-align":"left"}},ZH={href:"https://leetcode.cn/problems/get-kth-magic-number-lcci",target:"_blank",rel:"noopener noreferrer"},YH=t("td",{style:{"text-align":"center"}},null,-1),$H={style:{"text-align":"left"}},tv=t("code",null,"哈希表",-1),ev=t("code",null,"数学",-1),lv=t("code",null,"动态规划",-1),ov=t("code",null,"1+",-1),nv={style:{"text-align":"left"}},sv=t("td",{style:{"text-align":"center"}},"面试题 17.14",-1),dv={style:{"text-align":"left"}},_v={href:"https://leetcode.cn/problems/smallest-k-lcci",target:"_blank",rel:"noopener noreferrer"},iv=t("td",{style:{"text-align":"center"}},null,-1),av={style:{"text-align":"left"}},cv=t("code",null,"数组",-1),rv=t("code",null,"分治",-1),hv=t("code",null,"快速选择",-1),uv=t("code",null,"2+",-1),fv={style:{"text-align":"left"}},gv=t("td",{style:{"text-align":"center"}},"面试题 17.20",-1),mv={style:{"text-align":"left"}},yv={href:"https://leetcode.cn/problems/continuous-median-lcci",target:"_blank",rel:"noopener noreferrer"},xv=t("td",{style:{"text-align":"center"}},null,-1),pv={style:{"text-align":"left"}},bv=t("code",null,"设计",-1),kv=t("code",null,"双指针",-1),qv=t("code",null,"数据流",-1),Mv=t("code",null,"2+",-1),wv={style:{"text-align":"left"}};function Hv(vv,Iv){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[w]),_:1}),l(),H,l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[G]),_:1})]),J,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[Pt]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Bt,t("td",Nt,[t("a",Tt,[l("合并 K 个升序链表"),e(s)])]),t("td",Ut,[t("a",Xt,[l("[✓]"),e(s)])]),t("td",Dt,[e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Ft]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Jt]),_:1}),l(),Rt]),t("td",St,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[At,t("td",Qt,[t("a",Wt,[l("数组中的第K个最大元素"),e(s)])]),t("td",Zt,[t("a",Yt,[l("[✓]"),e(s)])]),t("td",$t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[ee]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[le]),_:1}),l(),oe]),t("td",ne,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[se,t("td",de,[t("a",_e,[l("天际线问题"),e(s)])]),ie,t("td",ae,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[re]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[he]),_:1}),l(),ue]),t("td",fe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ge,t("td",me,[t("a",ye,[l("滑动窗口最大值"),e(s)])]),t("td",xe,[t("a",pe,[l("[✓]"),e(s)])]),t("td",be,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[ke]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qe]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[Me]),_:1}),l(),we]),t("td",He,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ve,t("td",Ie,[t("a",Ke,[l("会议室 II"),e(s)])]),Ee,t("td",ze,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Oe]),_:1}),l(),Pe]),t("td",Ve,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[je,t("td",Be,[t("a",Ne,[l("丑数 II"),e(s)])]),t("td",Te,[t("a",Ue,[l("[✓]"),e(s)])]),t("td",Xe,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[De]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Fe]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ge]),_:1}),l(),Je]),t("td",Re,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Se,t("td",Ae,[t("a",Qe,[l("最接近的二叉搜索树值 II"),e(s)])]),We,t("td",Ze,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ye]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$e]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tl]),_:1}),l(),el]),t("td",ll,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ol,t("td",nl,[t("a",sl,[l("数据流的中位数"),e(s)])]),t("td",dl,[t("a",_l,[l("[✓]"),e(s)])]),t("td",il,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[al]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[cl]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[rl]),_:1}),l(),hl]),t("td",ul,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fl,t("td",gl,[t("a",ml,[l("前 K 个高频元素"),e(s)])]),t("td",yl,[t("a",xl,[l("[✓]"),e(s)])]),t("td",pl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bl]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[kl]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[ql]),_:1}),l(),Ml]),t("td",wl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hl,t("td",vl,[t("a",Il,[l("设计推特"),e(s)])]),t("td",Kl,[t("a",El,[l("[✓]"),e(s)])]),t("td",zl,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ll]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Ol]),_:1}),l(),Pl]),t("td",Vl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jl,t("td",Bl,[t("a",Nl,[l("K 距离间隔重排字符串"),e(s)])]),Tl,t("td",Ul,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Xl]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Dl]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Fl]),_:1}),l(),Gl]),t("td",Jl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rl,t("td",Sl,[t("a",Al,[l("查找和最小的 K 对数字"),e(s)])]),t("td",Ql,[t("a",Wl,[l("[✓]"),e(s)])]),t("td",Zl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yl]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[$l]),_:1})]),t("td",to,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eo,t("td",lo,[t("a",oo,[l("有序矩阵中第 K 小的元素"),e(s)])]),t("td",no,[t("a",so,[l("[✓]"),e(s)])]),t("td",_o,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[co]),_:1}),l(),ro]),t("td",ho,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[l("接雨水 II"),e(s)])]),mo,t("td",yo,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xo]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[po]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[bo]),_:1}),l(),ko]),t("td",qo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mo,t("td",wo,[t("a",Ho,[l("强密码检验器"),e(s)])]),vo,t("td",Io,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ko]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Eo]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[zo]),_:1})]),t("td",Co,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lo,t("td",Oo,[t("a",Po,[l("根据字符出现频率排序"),e(s)])]),t("td",Vo,[t("a",jo,[l("[✓]"),e(s)])]),t("td",Bo,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[No]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[To]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[Uo]),_:1}),l(),Xo]),t("td",Do,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fo,t("td",Go,[t("a",Jo,[l("滑动窗口中位数"),e(s)])]),Ro,t("td",So,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ao]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Qo]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[Wo]),_:1}),l(),Zo]),t("td",Yo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$o,t("td",tn,[t("a",en,[l("迷宫 III"),e(s)])]),ln,t("td",on,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[dn]),_:1}),l(),_n]),t("td",an,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cn,t("td",rn,[t("a",hn,[l("IPO"),e(s)])]),t("td",un,[t("a",fn,[l("[✓]"),e(s)])]),t("td",gn,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[xn]),_:1}),l(),pn]),t("td",bn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kn,t("td",qn,[t("a",Mn,[l("迷宫 II"),e(s)])]),wn,t("td",Hn,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[In]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Kn]),_:1}),l(),En]),t("td",zn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cn,t("td",Ln,[t("a",On,[l("相对名次"),e(s)])]),t("td",Pn,[t("a",Vn,[l("[✓]"),e(s)])]),t("td",jn,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Bn]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Nn]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Tn]),_:1})]),t("td",Un,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xn,t("td",Dn,[t("a",Fn,[l("任务调度器"),e(s)])]),Gn,t("td",Jn,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Rn]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sn]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[An]),_:1}),l(),Qn]),t("td",Wn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zn,t("td",Yn,[t("a",$n,[l("课程表 III"),e(s)])]),ts,t("td",es,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[ns]),_:1}),l(),ss]),t("td",ds,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_s,t("td",is,[t("a",as,[l("最小区间"),e(s)])]),t("td",cs,[t("a",rs,[l("[✓]"),e(s)])]),t("td",hs,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fs]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[gs]),_:1}),l(),ms]),t("td",ys,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xs,t("td",ps,[t("a",bs,[l("设计搜索自动补全系统"),e(s)])]),ks,t("td",qs,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ms]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ws]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Hs]),_:1}),l(),vs]),t("td",Is,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ks,t("td",Es,[t("a",zs,[l("找到 K 个最接近的元素"),e(s)])]),Cs,t("td",Ls,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Os]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Ps]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Vs]),_:1}),l(),js]),t("td",Bs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ns,t("td",Ts,[t("a",Us,[l("分割数组为连续子序列"),e(s)])]),Xs,t("td",Ds,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Fs]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Js]),_:1}),l(),Rs]),t("td",Ss,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[As,t("td",Qs,[t("a",Ws,[l("为高尔夫比赛砍树"),e(s)])]),Zs,t("td",Ys,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$s]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[td]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ed]),_:1}),l(),ld]),t("td",od,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nd,t("td",sd,[t("a",dd,[l("K 个关闭的灯泡"),e(s)])]),_d,t("td",id,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ad]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[cd]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[rd]),_:1}),l(),hd]),t("td",ud,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fd,t("td",gd,[t("a",md,[l("前K个高频单词"),e(s)])]),yd,t("td",xd,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[pd]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[bd]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[kd]),_:1}),l(),qd]),t("td",Md,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wd,t("td",Hd,[t("a",vd,[l("数据流中的第 K 大元素"),e(s)])]),t("td",Id,[t("a",Kd,[l("[✓]"),e(s)])]),t("td",Ed,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[zd]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Ld]),_:1}),l(),Od]),t("td",Pd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Vd,t("td",jd,[t("a",Bd,[l("网络延迟时间"),e(s)])]),Nd,t("td",Td,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ud]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Xd]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Dd]),_:1}),l(),Fd]),t("td",Gd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jd,t("td",Rd,[t("a",Sd,[l("员工空闲时间"),e(s)])]),Ad,t("td",Qd,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Wd]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Zd]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Yd]),_:1})]),t("td",$d,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t_,t("td",e_,[t("a",l_,[l("重构字符串"),e(s)])]),o_,t("td",n_,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[s_]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[d_]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[__]),_:1}),l(),i_]),t("td",a_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c_,t("td",r_,[t("a",h_,[l("水位上升的泳池中游泳"),e(s)])]),u_,t("td",f_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[g_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[m_]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[y_]),_:1}),l(),x_]),t("td",p_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b_,t("td",k_,[t("a",q_,[l("第 K 个最小的质数分数"),e(s)])]),M_,t("td",w_,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[H_]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[v_]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[I_]),_:1}),l(),K_]),t("td",E_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z_,t("td",C_,[t("a",L_,[l("K 站中转内最便宜的航班"),e(s)])]),O_,t("td",P_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[V_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[j_]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[B_]),_:1}),l(),N_]),t("td",T_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U_,t("td",X_,[t("a",D_,[l("考场就座"),e(s)])]),F_,t("td",G_,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[J_]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[R_]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[S_]),_:1})]),t("td",A_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q_,t("td",W_,[t("a",Z_,[l("雇佣 K 名工人的最低成本"),e(s)])]),Y_,t("td",$_,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[ti]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ei]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[li]),_:1}),l(),oi]),t("td",ni,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[si,t("td",di,[t("a",_i,[l("和至少为 K 的最短子数组"),e(s)])]),ii,t("td",ai,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[ci]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ri]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[hi]),_:1}),l(),ui]),t("td",fi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gi,t("td",mi,[t("a",yi,[l("最低加油次数"),e(s)])]),xi,t("td",pi,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[bi]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ki]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[qi]),_:1}),l(),Mi]),t("td",wi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hi,t("td",vi,[t("a",Ii,[l("细分图中的可到达节点"),e(s)])]),Ki,t("td",Ei,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[zi]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[Ci]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Li]),_:1})]),t("td",Oi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pi,t("td",Vi,[t("a",ji,[l("排序数组"),e(s)])]),Bi,t("td",Ni,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ti]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[Ui]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[Xi]),_:1}),l(),Di]),t("td",Fi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gi,t("td",Ji,[t("a",Ri,[l("最接近原点的 K 个点"),e(s)])]),t("td",Si,[t("a",Ai,[l("[✓]"),e(s)])]),t("td",Qi,[e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[Wi]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zi]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Yi]),_:1}),l(),$i]),t("td",ta,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ea,t("td",la,[t("a",oa,[l("最后一块石头的重量"),e(s)])]),na,t("td",sa,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[da]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[_a]),_:1})]),t("td",ia,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[aa,t("td",ca,[t("a",ra,[l("距离相等的条形码"),e(s)])]),ha,t("td",ua,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[fa]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ga]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[ma]),_:1}),l(),ya]),t("td",xa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pa,t("td",ba,[t("a",ka,[l("前五科的均分"),e(s)])]),qa,t("td",Ma,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wa]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ha]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[va]),_:1}),l(),Ia]),t("td",Ka,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ea,t("td",za,[t("a",Ca,[l("拼车"),e(s)])]),La,t("td",Oa,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pa]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[Va]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[ja]),_:1}),l(),Ba]),t("td",Na,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ta,t("td",Ua,[t("a",Xa,[l("得分最高的路径"),e(s)])]),Da,t("td",Fa,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ga]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ja]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ra]),_:1}),l(),Sa]),t("td",Aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qa,t("td",Wa,[t("a",Za,[l("最低成本连通所有城市"),e(s)])]),Ya,t("td",$a,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[tc]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ec]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[lc]),_:1}),l(),oc]),t("td",nc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sc,t("td",dc,[t("a",_c,[l("连接木棍的最低费用"),e(s)])]),ic,t("td",ac,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[cc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rc]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[hc]),_:1})]),t("td",uc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fc,t("td",gc,[t("a",mc,[l("水资源分配优化"),e(s)])]),yc,t("td",xc,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[pc]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[bc]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[kc]),_:1}),l(),qc]),t("td",Mc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wc,t("td",Hc,[t("a",vc,[l("餐盘栈"),e(s)])]),Ic,t("td",Kc,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[zc]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Cc]),_:1}),l(),Lc]),t("td",Oc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pc,t("td",Vc,[t("a",jc,[l("矩阵中 1 的最大数量"),e(s)])]),Bc,t("td",Nc,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Tc]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Uc]),_:1})]),t("td",Xc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dc,t("td",Fc,[t("a",Gc,[l("建造街区的最短时间"),e(s)])]),Jc,t("td",Rc,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Sc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ac]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Qc]),_:1}),l(),Wc]),t("td",Zc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yc,t("td",$c,[t("a",tr,[l("推箱子"),e(s)])]),er,t("td",lr,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[or]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nr]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[sr]),_:1}),l(),dr]),t("td",_r,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ir,t("td",ar,[t("a",cr,[l("搜索推荐系统"),e(s)])]),rr,t("td",hr,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[ur]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fr]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[gr]),_:1}),l(),mr]),t("td",yr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xr,t("td",pr,[t("a",br,[l("矩阵中战斗力最弱的 K 行"),e(s)])]),kr,t("td",qr,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Mr]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[wr]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Hr]),_:1}),l(),vr]),t("td",Ir,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Kr,t("td",Er,[t("a",zr,[l("数组大小减半"),e(s)])]),Cr,t("td",Lr,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Or]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pr]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Vr]),_:1}),l(),jr]),t("td",Br,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nr,t("td",Tr,[t("a",Ur,[l("最多可以参加的会议数目"),e(s)])]),Xr,t("td",Dr,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Fr]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gr]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Jr]),_:1}),l(),Rr]),t("td",Sr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ar,t("td",Qr,[t("a",Wr,[l("多次求和构造目标数组"),e(s)])]),Zr,t("td",Yr,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$r]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[t1]),_:1})]),t("td",e1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l1,t("td",o1,[t("a",n1,[l("使网格图至少有一条有效路径的最小代价"),e(s)])]),s1,t("td",d1,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_1]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[i1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[a1]),_:1}),l(),c1]),t("td",r1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[h1,t("td",u1,[t("a",f1,[l("最大的团队表现值"),e(s)])]),g1,t("td",m1,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[y1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[x1]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[p1]),_:1}),l(),b1]),t("td",k1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[q1,t("td",M1,[t("a",w1,[l("3n 块披萨"),e(s)])]),H1,t("td",v1,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[I1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[K1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[E1]),_:1}),l(),z1]),t("td",C1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L1,t("td",O1,[t("a",P1,[l("最长快乐字符串"),e(s)])]),t("td",V1,[t("a",j1,[l("[✓]"),e(s)])]),t("td",B1,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[N1]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[T1]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[U1]),_:1})]),t("td",X1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D1,t("td",F1,[t("a",G1,[l("对角线遍历 II"),e(s)])]),J1,t("td",R1,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[S1]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[A1]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Q1]),_:1})]),t("td",W1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z1,t("td",Y1,[t("a",$1,[l("带限制的子序列和"),e(s)])]),th,t("td",eh,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[lh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oh]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nh]),_:1}),l(),sh]),t("td",dh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_h,t("td",ih,[t("a",ah,[l("绝对差不超过限制的最长连续子数组"),e(s)])]),ch,t("td",rh,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[hh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uh]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[fh]),_:1}),l(),gh]),t("td",mh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yh,t("td",xh,[t("a",ph,[l("有序矩阵中的第 k 个最小数组和"),e(s)])]),bh,t("td",kh,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qh]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Mh]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[wh]),_:1}),l(),Hh]),t("td",vh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ih,t("td",Kh,[t("a",Eh,[l("数组中两元素的最大乘积"),e(s)])]),zh,t("td",Ch,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Lh]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Oh]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Ph]),_:1})]),t("td",Vh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jh,t("td",Bh,[t("a",Nh,[l("避免洪水泛滥"),e(s)])]),Th,t("td",Uh,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Xh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Dh]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Fh]),_:1}),l(),Gh]),t("td",Jh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rh,t("td",Sh,[t("a",Ah,[l("满足不等式的最大值"),e(s)])]),Qh,t("td",Wh,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Zh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yh]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[$h]),_:1}),l(),tu]),t("td",eu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lu,t("td",ou,[t("a",nu,[l("设计文件分享系统"),e(s)])]),su,t("td",du,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[_u]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[iu]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[au]),_:1}),l(),cu]),t("td",ru,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hu,t("td",uu,[t("a",fu,[l("概率最大的路径"),e(s)])]),gu,t("td",mu,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[yu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xu]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[pu]),_:1}),l(),bu]),t("td",ku,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qu,t("td",Mu,[t("a",wu,[l("找到处理最多请求的服务器"),e(s)])]),Hu,t("td",vu,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Iu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ku]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Eu]),_:1}),l(),zu]),t("td",Cu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lu,t("td",Ou,[t("a",Pu,[l("最小体力消耗路径"),e(s)])]),Vu,t("td",ju,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Bu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Nu]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Tu]),_:1}),l(),Uu]),t("td",Xu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Du,t("td",Fu,[t("a",Gu,[l("可以到达的最远建筑"),e(s)])]),Ju,t("td",Ru,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Su]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Au]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Qu]),_:1})]),t("td",Wu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zu,t("td",Yu,[t("a",$u,[l("销售价值减少的颜色球"),e(s)])]),tf,t("td",ef,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[lf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[of]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[nf]),_:1}),l(),sf]),t("td",df,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_f,t("td",af,[t("a",cf,[l("数组的最小偏移量"),e(s)])]),rf,t("td",hf,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[uf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ff]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[gf]),_:1}),l(),mf]),t("td",yf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xf,t("td",pf,[t("a",bf,[l("石子游戏 VI"),e(s)])]),kf,t("td",qf,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Mf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wf]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Hf]),_:1}),l(),vf]),t("td",If,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kf,t("td",Ef,[t("a",zf,[l("从仓库到码头运输箱子"),e(s)])]),Cf,t("td",Lf,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Of]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Pf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Vf]),_:1}),l(),jf]),t("td",Bf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nf,t("td",Tf,[t("a",Uf,[l("跳跃游戏 VI"),e(s)])]),Xf,t("td",Df,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Ff]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gf]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Jf]),_:1}),l(),Rf]),t("td",Sf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Af,t("td",Qf,[t("a",Wf,[l("吃苹果的最大数目"),e(s)])]),Zf,t("td",Yf,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[$f]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[tg]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[eg]),_:1})]),t("td",lg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[og,t("td",ng,[t("a",sg,[l("找出第 K 大的异或坐标值"),e(s)])]),dg,t("td",_g,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[ig]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ag]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[cg]),_:1}),l(),rg]),t("td",hg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ug,t("td",fg,[t("a",gg,[l("移除石子的最大得分"),e(s)])]),mg,t("td",yg,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[xg]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[pg]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[bg]),_:1})]),t("td",kg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qg,t("td",Mg,[t("a",wg,[l("车队 II"),e(s)])]),Hg,t("td",vg,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ig]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Kg]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Eg]),_:1}),l(),zg]),t("td",Cg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lg,t("td",Og,[t("a",Pg,[l("从第一个节点出发到最后一个节点的受限路径数"),e(s)])]),Vg,t("td",jg,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Bg]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Ng]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Tg]),_:1}),l(),Ug]),t("td",Xg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dg,t("td",Fg,[t("a",Gg,[l("最大平均通过率"),e(s)])]),Jg,t("td",Rg,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Sg]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ag]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Qg]),_:1})]),t("td",Wg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zg,t("td",Yg,[t("a",$g,[l("积压订单中的订单总数"),e(s)])]),tm,t("td",em,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[lm]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[om]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[nm]),_:1})]),t("td",sm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dm,t("td",_m,[t("a",im,[l("隐藏网格下的最小消耗路径"),e(s)])]),am,t("td",cm,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rm]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hm]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[um]),_:1}),l(),fm]),t("td",gm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mm,t("td",ym,[t("a",xm,[l("求出 MK 平均值"),e(s)])]),pm,t("td",bm,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[km]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[qm]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[Mm]),_:1}),l(),wm]),t("td",Hm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vm,t("td",Im,[t("a",Km,[l("单线程 CPU"),e(s)])]),Em,t("td",zm,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Cm]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Lm]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Om]),_:1})]),t("td",Pm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vm,t("td",jm,[t("a",Bm,[l("座位预约管理系统"),e(s)])]),Nm,t("td",Tm,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Um]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Xm]),_:1})]),t("td",Dm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fm,t("td",Gm,[t("a",Jm,[l("包含每个查询的最小区间"),e(s)])]),Rm,t("td",Sm,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Am]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Qm]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Wm]),_:1}),l(),Zm]),t("td",Ym,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$m,t("td",ty,[t("a",ey,[l("矩阵中最大的三个菱形和"),e(s)])]),ly,t("td",oy,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ny]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[sy]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[dy]),_:1}),l(),_y]),t("td",iy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ay,t("td",cy,[t("a",ry,[l("使用服务器处理任务"),e(s)])]),hy,t("td",uy,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fy]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[gy]),_:1})]),t("td",my,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yy,t("td",xy,[t("a",py,[l("设计电影租借系统"),e(s)])]),by,t("td",ky,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[qy]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[My]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[wy]),_:1}),l(),Hy]),t("td",vy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Iy,t("td",Ky,[t("a",Ey,[l("最小未被占据椅子的编号"),e(s)])]),t("td",zy,[t("a",Cy,[l("[✓]"),e(s)])]),t("td",Ly,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Oy]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Py]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Vy]),_:1})]),t("td",jy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[By,t("td",Ny,[t("a",Ty,[l("移除石子使总数最小"),e(s)])]),Uy,t("td",Xy,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Dy]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fy]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Gy]),_:1})]),t("td",Jy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ry,t("td",Sy,[t("a",Ay,[l("找出数组中的第 K 大整数"),e(s)])]),Qy,t("td",Wy,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zy]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Yy]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[$y]),_:1}),l(),tx]),t("td",ex,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lx,t("td",ox,[t("a",nx,[l("每段建筑物的平均高度"),e(s)])]),sx,t("td",dx,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[_x]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ix]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[ax]),_:1}),l(),cx]),t("td",rx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hx,t("td",ux,[t("a",fx,[l("股票价格波动"),e(s)])]),gx,t("td",mx,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[yx]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[xx]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[px]),_:1}),l(),bx]),t("td",kx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qx,t("td",Mx,[t("a",wx,[l("两个最好的不重叠活动"),e(s)])]),Hx,t("td",vx,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ix]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Kx]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ex]),_:1}),l(),zx]),t("td",Cx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lx,t("td",Ox,[t("a",Px,[l("前往目标城市的最小费用"),e(s)])]),Vx,t("td",jx,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Bx]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[Nx]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Tx]),_:1})]),t("td",Ux,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xx,t("td",Dx,[t("a",Fx,[l("找到和最大的长度为 K 的子序列"),e(s)])]),Gx,t("td",Jx,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Rx]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Sx]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Ax]),_:1}),l(),Qx]),t("td",Wx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zx,t("td",Yx,[t("a",$x,[l("序列顺序查询"),e(s)])]),tp,t("td",ep,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[lp]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[op]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[np]),_:1}),l(),sp]),t("td",dp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_p,t("td",ip,[t("a",ap,[l("价格范围内最高排名的 K 样物品"),e(s)])]),cp,t("td",rp,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hp]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[up]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[fp]),_:1}),l(),gp]),t("td",mp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yp,t("td",xp,[t("a",pp,[l("删除元素后和的最小差值"),e(s)])]),bp,t("td",kp,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qp]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Mp]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[wp]),_:1})]),t("td",Hp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vp,t("td",Ip,[t("a",Kp,[l("构造限制重复的字符串"),e(s)])]),Ep,t("td",zp,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Cp]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Lp]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Op]),_:1}),l(),Pp]),t("td",Vp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jp,t("td",Bp,[t("a",Np,[l("将数组和减半的最少操作次数"),e(s)])]),Tp,t("td",Up,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Xp]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Dp]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Fp]),_:1})]),t("td",Gp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jp,t("td",Rp,[t("a",Sp,[l("按奇偶性交换后的最大数字"),e(s)])]),Ap,t("td",Qp,[e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Wp]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Zp]),_:1})]),t("td",Yp,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$p,t("td",t3,[t("a",e3,[l("K 次增加后的最大乘积"),e(s)])]),l3,t("td",o3,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[n3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[s3]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[d3]),_:1})]),t("td",_3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i3,t("td",a3,[t("a",c3,[l("道路的最大总重要性"),e(s)])]),r3,t("td",h3,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[u3]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[f3]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[g3]),_:1}),l(),m3]),t("td",y3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x3,t("td",p3,[t("a",b3,[l("到达角落需要移除障碍物的最小数目"),e(s)])]),k3,t("td",q3,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[M3]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[w3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[H3]),_:1}),l(),v3]),t("td",I3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K3,t("td",E3,[t("a",z3,[l("最小差值平方和"),e(s)])]),C3,t("td",L3,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[O3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[P3]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[V3]),_:1}),l(),j3]),t("td",B3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N3,t("td",T3,[t("a",U3,[l("装满杯子需要的最短总时长"),e(s)])]),X3,t("td",D3,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[F3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[G3]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[J3]),_:1}),l(),R3]),t("td",S3,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[A3,t("td",Q3,[t("a",W3,[l("无限集中的最小数字"),e(s)])]),Z3,t("td",Y3,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[$3]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[tb]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[eb]),_:1}),l(),lb]),t("td",ob,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nb,t("td",sb,[t("a",db,[l("数位和相等数对的最大和"),e(s)])]),_b,t("td",ib,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ab]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[cb]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[rb]),_:1}),l(),hb]),t("td",ub,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fb,t("td",gb,[t("a",mb,[l("裁剪数字后查询第 K 小的数字"),e(s)])]),yb,t("td",xb,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pb]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[bb]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[kb]),_:1}),l(),qb]),t("td",Mb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wb,t("td",Hb,[t("a",vb,[l("使数组可以被整除的最少删除次数"),e(s)])]),Ib,t("td",Kb,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Eb]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[zb]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[Cb]),_:1}),l(),Lb]),t("td",Ob,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pb,t("td",Vb,[t("a",jb,[l("设计数字容器系统"),e(s)])]),Bb,t("td",Nb,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Tb]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ub]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Xb]),_:1}),l(),Db]),t("td",Fb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gb,t("td",Jb,[t("a",Rb,[l("设计食物评分系统"),e(s)])]),Sb,t("td",Ab,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Qb]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Wb]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Zb]),_:1}),l(),Yb]),t("td",$b,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t2,t("td",e2,[t("a",l2,[l("使数组中所有元素都等于零"),e(s)])]),o2,t("td",n2,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[s2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[d2]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[_2]),_:1}),l(),i2]),t("td",a2,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[c2,t("td",r2,[t("a",h2,[l("找出数组的第 K 大和"),e(s)])]),u2,t("td",f2,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[g2]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[m2]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[y2]),_:1})]),t("td",x2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p2,t("td",b2,[t("a",k2,[l("预算内的最多机器人数目"),e(s)])]),q2,t("td",M2,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[w2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[H2]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[v2]),_:1}),l(),I2]),t("td",K2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E2,t("td",z2,[t("a",C2,[l("会议室 III"),e(s)])]),L2,t("td",O2,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[P2]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[V2]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[j2]),_:1}),l(),B2]),t("td",N2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T2,t("td",U2,[t("a",X2,[l("将区间分为最少组数"),e(s)])]),t("td",D2,[t("a",F2,[l("[✓]"),e(s)])]),t("td",G2,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[J2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[R2]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[S2]),_:1}),l(),A2]),t("td",Q2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W2,t("td",Z2,[t("a",Y2,[l("最长上传前缀"),e(s)])]),$2,t("td",t0,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[e0]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[l0]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[o0]),_:1}),l(),n0]),t("td",s0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d0,t("td",_0,[t("a",i0,[l("下一个更大元素 IV"),e(s)])]),a0,t("td",c0,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[r0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[h0]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[u0]),_:1}),l(),f0]),t("td",g0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m0,t("td",y0,[t("a",x0,[l("最流行的视频创作者"),e(s)])]),p0,t("td",b0,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k0]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[q0]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[M0]),_:1}),l(),w0]),t("td",H0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v0,t("td",I0,[t("a",K0,[l("雇佣 K 位工人的总代价"),e(s)])]),E0,t("td",z0,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[C0]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[L0]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[O0]),_:1}),l(),P0]),t("td",V0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j0,t("td",B0,[t("a",N0,[l("购买苹果的最低成本"),e(s)])]),T0,t("td",U0,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[X0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[D0]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[F0]),_:1}),l(),G0]),t("td",J0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R0,t("td",S0,[t("a",A0,[l("图中最大星和"),e(s)])]),Q0,t("td",W0,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Z0]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Y0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$0]),_:1}),l(),t4]),t("td",e4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l4,t("td",o4,[t("a",n4,[l("删除每行中的最大值"),e(s)])]),s4,t("td",d4,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_4]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[i4]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[a4]),_:1}),l(),c4]),t("td",r4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[h4,t("td",u4,[t("a",f4,[l("矩阵查询可获得的最大分数"),e(s)])]),g4,t("td",m4,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[y4]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[x4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[p4]),_:1}),l(),b4]),t("td",k4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[q4,t("td",M4,[t("a",w4,[l("奖励最顶尖的 K 名学生"),e(s)])]),H4,t("td",v4,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[I4]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[K4]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[E4]),_:1}),l(),z4]),t("td",C4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L4,t("td",O4,[t("a",P4,[l("执行 K 次操作后的最大分数"),e(s)])]),t("td",V4,[t("a",j4,[l("[✓]"),e(s)])]),t("td",B4,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[N4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[T4]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[U4]),_:1})]),t("td",X4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D4,t("td",F4,[t("a",G4,[l("过桥的时间"),e(s)])]),J4,t("td",R4,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[S4]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[A4]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[Q4]),_:1})]),t("td",W4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Z4,t("td",Y4,[t("a",$4,[l("最大子序列的分数"),e(s)])]),t8,t("td",e8,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[l8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[o8]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[n8]),_:1}),l(),s8]),t("td",d8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_8,t("td",i8,[t("a",a8,[l("将珠子放入背包中"),e(s)])]),c8,t("td",r8,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[h8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[u8]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[f8]),_:1}),l(),g8]),t("td",m8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y8,t("td",x8,[t("a",p8,[l("从数量最多的堆取走礼物"),e(s)])]),b8,t("td",k8,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[q8]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[M8]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[w8]),_:1})]),t("td",H8,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[v8,t("td",I8,[t("a",K8,[l("在网格图中访问一个格子的最少时间"),e(s)])]),E8,t("td",z8,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[C8]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[L8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[O8]),_:1}),l(),P8]),t("td",V8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j8,t("td",B8,[t("a",N8,[l("标记所有元素后数组的分数"),e(s)])]),T8,t("td",U8,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[X8]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[D8]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[F8]),_:1}),l(),G8]),t("td",J8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R8,t("td",S8,[t("a",A8,[l("使前缀和数组非负"),e(s)])]),Q8,t("td",W8,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Z8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Y8]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[$8]),_:1})]),t("td",t6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e6,t("td",l6,[t("a",o6,[l("老鼠和奶酪"),e(s)])]),n6,t("td",s6,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[d6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_6]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[i6]),_:1}),l(),a6]),t("td",c6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r6,t("td",h6,[t("a",u6,[l("网格图中最少访问的格子数"),e(s)])]),f6,t("td",g6,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[m6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[y6]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[x6]),_:1}),l(),p6]),t("td",b6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[k6,t("td",q6,[t("a",M6,[l("设计可以求最短路径的图类"),e(s)])]),w6,t("td",H6,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[v6]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[I6]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[K6]),_:1}),l(),E6]),t("td",z6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[C6,t("td",L6,[t("a",O6,[l("前往目标的最小代价"),e(s)])]),P6,t("td",V6,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[j6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[B6]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[N6]),_:1}),l(),T6]),t("td",U6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X6,t("td",D6,[t("a",F6,[l("矩阵中的和"),e(s)])]),G6,t("td",J6,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[R6]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[S6]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[A6]),_:1}),l(),Q6]),t("td",W6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z6,t("td",Y6,[t("a",$6,[l("修改图中的边权"),e(s)])]),t5,t("td",e5,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[l5]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[o5]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[n5]),_:1})]),t("td",s5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d5,t("td",_5,[t("a",i5,[l("找到 K 次跨越的最短路径"),e(s)])]),a5,t("td",c5,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[r5]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[h5]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[u5]),_:1})]),t("td",f5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[g5,t("td",m5,[t("a",y5,[l("找到最近的标记节点"),e(s)])]),x5,t("td",p5,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[b5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k5]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[q5]),_:1}),l(),M5]),t("td",w5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H5,t("td",v5,[t("a",I5,[l("不间断子数组"),e(s)])]),K5,t("td",E5,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[z5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[C5]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[L5]),_:1}),l(),O5]),t("td",P5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V5,t("td",j5,[t("a",B5,[l("子序列最大优雅度"),e(s)])]),N5,t("td",T5,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[U5]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[X5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[D5]),_:1}),l(),F5]),t("td",G5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J5,t("td",R5,[t("a",S5,[l("购买物品的最大开销"),e(s)])]),A5,t("td",Q5,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[W5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Z5]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Y5]),_:1}),l(),$5]),t("td",t7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e7,t("td",l7,[t("a",o7,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(s)])]),n7,t("td",s7,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[d7]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[_7]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[i7]),_:1}),l(),a7]),t("td",c7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[r7,t("td",h7,[t("a",u7,[l("购买水果需要的最少金币数"),e(s)])]),f7,t("td",g7,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[m7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[x7]),_:1}),l(),p7]),t("td",b7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k7,t("td",q7,[t("a",M7,[l("关闭分部的可行集合数目"),e(s)])]),w7,t("td",H7,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[v7]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[I7]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[K7]),_:1}),l(),E7]),t("td",z7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[C7,t("td",L7,[t("a",O7,[l("购买水果需要的最少金币数 II"),e(s)])]),P7,t("td",V7,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[j7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[B7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[N7]),_:1}),l(),T7]),t("td",U7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[X7,t("td",D7,[t("a",F7,[l("树中每个节点放置的金币数目"),e(s)])]),G7,t("td",J7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[R7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[S7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[A7]),_:1}),l(),Q7]),t("td",W7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Z7,t("td",Y7,[t("a",$7,[l("最小数字游戏"),e(s)])]),t9,t("td",e9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[l9]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[o9]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[n9]),_:1}),l(),s9]),t("td",d9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[_9,t("td",i9,[t("a",a9,[l("将数组分成最小总代价的子数组 II"),e(s)])]),c9,t("td",r9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[h9]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[u9]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[f9]),_:1}),l(),g9]),t("td",m9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y9,t("td",x9,[t("a",p9,[l("标记所有下标的最早秒数 II"),e(s)])]),b9,t("td",k9,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[q9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[M9]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[w9]),_:1}),l(),H9]),t("td",v9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[I9,t("td",K9,[t("a",E9,[l("超过阈值的最少操作数 II"),e(s)])]),z9,t("td",C9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[L9]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[O9]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[P9]),_:1})]),t("td",V9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j9,t("td",B9,[t("a",N9,[l("执行操作标记数组中的元素"),e(s)])]),T9,t("td",U9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[X9]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[D9]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[F9]),_:1}),l(),G9]),t("td",J9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R9,t("td",S9,[t("a",A9,[l("替换字符串中的问号使分数最小"),e(s)])]),Q9,t("td",W9,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Z9]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Y9]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[$9]),_:1}),l(),tk]),t("td",ek,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lk,t("td",ok,[t("a",nk,[l("最高频率的 ID"),e(s)])]),sk,t("td",dk,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_k]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[ik]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[ak]),_:1}),l(),ck]),t("td",rk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hk,t("td",uk,[t("a",fk,[l("访问消失节点的最少时间"),e(s)])]),gk,t("td",mk,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[yk]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xk]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[pk]),_:1}),l(),bk]),t("td",kk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qk,t("td",Mk,[t("a",wk,[l("最短路径中的边"),e(s)])]),Hk,t("td",vk,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ik]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Kk]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ek]),_:1}),l(),zk]),t("td",Ck,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lk,t("td",Ok,[t("a",Pk,[l("删除星号以后字典序最小的字符串"),e(s)])]),Vk,t("td",jk,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Bk]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Nk]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Tk]),_:1}),l(),Uk]),t("td",Xk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dk,t("td",Fk,[t("a",Gk,[l("K 次乘运算后的最终数组 I"),e(s)])]),Jk,t("td",Rk,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sk]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Ak]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Qk]),_:1}),l(),Wk]),t("td",Zk,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Yk,t("td",$k,[t("a",tq,[l("K 次乘运算后的最终数组 II"),e(s)])]),eq,t("td",lq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oq]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[nq]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[sq]),_:1})]),t("td",dq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_q,t("td",iq,[t("a",aq,[l("第 K 近障碍物查询"),e(s)])]),cq,t("td",rq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hq]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[uq]),_:1})]),t("td",fq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gq,t("td",mq,[t("a",yq,[l("穿越网格图的安全路径"),e(s)])]),xq,t("td",pq,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bq]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[kq]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qq]),_:1}),l(),Mq]),t("td",wq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hq,t("td",vq,[t("a",Iq,[l("移山所需的最少秒数"),e(s)])]),Kq,t("td",Eq,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[zq]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Cq]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Lq]),_:1}),l(),Oq]),t("td",Pq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vq,t("td",jq,[t("a",Bq,[l("计算子数组的 x-sum I"),e(s)])]),t("td",Nq,[t("a",Tq,[l("[✓]"),e(s)])]),t("td",Uq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xq]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Dq]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[Fq]),_:1}),l(),Gq]),t("td",Jq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Rq,t("td",Sq,[t("a",Aq,[l("计算子数组的 x-sum II"),e(s)])]),t("td",Qq,[t("a",Wq,[l("[✓]"),e(s)])]),t("td",Zq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yq]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[$q]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[tM]),_:1}),l(),eM]),t("td",lM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oM,t("td",nM,[t("a",sM,[l("数字游戏"),e(s)])]),dM,t("td",_M,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[iM]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[aM]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[cM]),_:1})]),t("td",rM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hM,t("td",uM,[t("a",fM,[l("魔塔游戏"),e(s)])]),gM,t("td",mM,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[yM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xM]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[pM]),_:1})]),t("td",bM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kM,t("td",qM,[t("a",MM,[l("批量处理任务"),e(s)])]),wM,t("td",HM,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[vM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[IM]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[KM]),_:1})]),t("td",EM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zM,t("td",CM,[t("a",LM,[l("蓄水"),e(s)])]),OM,t("td",PM,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[VM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jM]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[BM]),_:1})]),t("td",NM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[TM,t("td",UM,[t("a",XM,[l("电动车游城市"),e(s)])]),DM,t("td",FM,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[GM]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[JM]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[RM]),_:1})]),t("td",SM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[AM,t("td",QM,[t("a",WM,[l("环形闯关游戏"),e(s)])]),ZM,t("td",YM,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[$M]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[tw]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ew]),_:1}),l(),lw]),t("td",ow,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nw,t("td",sw,[t("a",dw,[l("信物传送"),e(s)])]),_w,t("td",iw,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[aw]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[cw]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rw]),_:1}),l(),hw]),t("td",uw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fw,t("td",gw,[t("a",mw,[l("最小的k个数"),e(s)])]),yw,t("td",xw,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pw]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[bw]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[kw]),_:1}),l(),qw]),t("td",Mw,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ww,t("td",Hw,[t("a",vw,[l("数据流中的中位数"),e(s)])]),Iw,t("td",Kw,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ew]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[zw]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[Cw]),_:1}),l(),Lw]),t("td",Ow,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pw,t("td",Vw,[t("a",jw,[l("丑数"),e(s)])]),t("td",Bw,[t("a",Nw,[l("[✓]"),e(s)])]),t("td",Tw,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Uw]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Xw]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Dw]),_:1}),l(),Fw]),t("td",Gw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jw,t("td",Rw,[t("a",Sw,[l("滑动窗口的最大值"),e(s)])]),Aw,t("td",Qw,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Ww]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zw]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[Yw]),_:1}),l(),$w]),t("td",tH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eH,t("td",lH,[t("a",oH,[l("数据流的第 K 大数值"),e(s)])]),nH,t("td",sH,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[dH]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[_H]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[iH]),_:1}),l(),aH]),t("td",cH,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rH,t("td",hH,[t("a",uH,[l("出现频率最高的 k 个数字"),e(s)])]),fH,t("td",gH,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mH]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[yH]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[xH]),_:1}),l(),pH]),t("td",bH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kH,t("td",qH,[t("a",MH,[l("和最小的 k 个数对"),e(s)])]),wH,t("td",HH,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vH]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[IH]),_:1})]),t("td",KH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EH,t("td",zH,[t("a",CH,[l("数组中的第 k 大的数字"),e(s)])]),LH,t("td",OH,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[PH]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[VH]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[jH]),_:1}),l(),BH]),t("td",NH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TH,t("td",UH,[t("a",XH,[l("合并排序链表"),e(s)])]),DH,t("td",FH,[e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[GH]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[JH]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[RH]),_:1}),l(),SH]),t("td",AH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QH,t("td",WH,[t("a",ZH,[l("第 k 个数"),e(s)])]),YH,t("td",$H,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[tv]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[ev]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[lv]),_:1}),l(),ov]),t("td",nv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sv,t("td",dv,[t("a",_v,[l("最小K个数"),e(s)])]),iv,t("td",av,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[cv]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[rv]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[hv]),_:1}),l(),uv]),t("td",fv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gv,t("td",mv,[t("a",yv,[l("连续中值"),e(s)])]),xv,t("td",pv,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[bv]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[kv]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[qv]),_:1}),l(),Mv]),t("td",wv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const Ev=i(h,[["render",Hv],["__file","heap-priority-queue.html.vue"]]);export{Ev as default};
