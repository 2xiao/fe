import{_ as a,r as _,o as c,c as i,f as d,a as t,d as o,w as l,b as e,e as h}from"./app-JnDxddK3.js";const g={},f=h('<h1 id="_3-5-贪心算法" tabindex="-1"><a class="header-anchor" href="#_3-5-贪心算法" aria-hidden="true">#</a> 3.5 贪心算法</h1><h4 id="什么是贪心算法" tabindex="-1"><a class="header-anchor" href="#什么是贪心算法" aria-hidden="true">#</a> 什么是贪心算法？</h4><p>贪心算法，又称贪婪算法，在对问题求解时，总是做出在当前看来最好的选择，期望通过每个阶段的局部最优选择达到全局最优，但结果不一定最优。</p><h4 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景" aria-hidden="true">#</a> 适用场景</h4><p>简单的说，问题能够分解成子问题来解决，子问题的最优解能递推到最终问题的最优解，就能用贪心算法的到最后的最优解，这种子问题最优解称为最优子结构。</p><h4 id="贪心算法与动态规划的区别" tabindex="-1"><a class="header-anchor" href="#贪心算法与动态规划的区别" aria-hidden="true">#</a> 贪心算法与动态规划的区别</h4><p>贪心算法与动态规划的不同点在于它对每个子问题的解决方案都做出当前的最优选择，不能回退，而动态规划会保留之前的运算结果，并根据之前的结果进行选择，有回退的功能，贪心是动态规划的理想化的情况。</p>',7),u=t("h2",{id:"相关题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),e(" 相关题目")],-1),m=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),y=t("td",{style:{"text-align":"center"}},"455",-1),p=t("td",{style:{"text-align":"left"}},"分发饼干",-1),x=t("td",{style:{"text-align":"center"}},null,-1),b={style:{"text-align":"left"}},k=t("code",null,"贪心",-1),v=t("code",null,"数组",-1),M=t("code",null,"双指针",-1),w=t("code",null,"1+",-1),E={style:{"text-align":"left"}},T={style:{"text-align":"center"}},I={href:"https://leetcode.cn/problems/assign-cookies",target:"_blank",rel:"noopener noreferrer"},N={href:"https://leetcode.com/problems/assign-cookies",target:"_blank",rel:"noopener noreferrer"},q=t("td",{style:{"text-align":"center"}},"860",-1),L=t("td",{style:{"text-align":"left"}},"柠檬水找零",-1),R=t("td",{style:{"text-align":"center"}},null,-1),S={style:{"text-align":"left"}},V=t("code",null,"贪心",-1),j=t("code",null,"数组",-1),A={style:{"text-align":"left"}},B={style:{"text-align":"center"}},C={href:"https://leetcode.cn/problems/lemonade-change",target:"_blank",rel:"noopener noreferrer"},D={href:"https://leetcode.com/problems/lemonade-change",target:"_blank",rel:"noopener noreferrer"},O=t("td",{style:{"text-align":"center"}},"56",-1),H=t("td",{style:{"text-align":"left"}},"合并区间",-1),K={style:{"text-align":"center"}},P={style:{"text-align":"left"}},U=t("code",null,"数组",-1),z=t("code",null,"排序",-1),F={style:{"text-align":"left"}},G={style:{"text-align":"center"}},J={href:"https://leetcode.cn/problems/merge-intervals",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://leetcode.com/problems/merge-intervals",target:"_blank",rel:"noopener noreferrer"},W=t("td",{style:{"text-align":"center"}},"435",-1),X=t("td",{style:{"text-align":"left"}},"无重叠区间",-1),Y=t("td",{style:{"text-align":"center"}},null,-1),Z={style:{"text-align":"left"}},$=t("code",null,"贪心",-1),tt=t("code",null,"数组",-1),et=t("code",null,"动态规划",-1),ot=t("code",null,"1+",-1),lt={style:{"text-align":"left"}},nt={style:{"text-align":"center"}},st={href:"https://leetcode.cn/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://leetcode.com/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},dt=t("td",{style:{"text-align":"center"}},"452",-1),_t=t("td",{style:{"text-align":"left"}},"用最少数量的箭引爆气球",-1),at={style:{"text-align":"center"}},ct={style:{"text-align":"left"}},it=t("code",null,"贪心",-1),ht=t("code",null,"数组",-1),gt=t("code",null,"排序",-1),ft={style:{"text-align":"left"}},ut={style:{"text-align":"center"}},mt={href:"https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons",target:"_blank",rel:"noopener noreferrer"},pt=t("td",{style:{"text-align":"center"}},"55",-1),xt=t("td",{style:{"text-align":"left"}},"跳跃游戏",-1),bt={style:{"text-align":"center"}},kt={style:{"text-align":"left"}},vt=t("code",null,"贪心",-1),Mt=t("code",null,"数组",-1),wt=t("code",null,"动态规划",-1),Et={style:{"text-align":"left"}},Tt={style:{"text-align":"center"}},It={href:"https://leetcode.cn/problems/jump-game",target:"_blank",rel:"noopener noreferrer"},Nt={href:"https://leetcode.com/problems/jump-game",target:"_blank",rel:"noopener noreferrer"},qt=t("td",{style:{"text-align":"center"}},"45",-1),Lt=t("td",{style:{"text-align":"left"}},"跳跃游戏 II",-1),Rt={style:{"text-align":"center"}},St={style:{"text-align":"left"}},Vt=t("code",null,"贪心",-1),jt=t("code",null,"数组",-1),At=t("code",null,"动态规划",-1),Bt={style:{"text-align":"left"}},Ct={style:{"text-align":"center"}},Dt={href:"https://leetcode.cn/problems/jump-game-ii",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://leetcode.com/problems/jump-game-ii",target:"_blank",rel:"noopener noreferrer"},Ht=t("td",{style:{"text-align":"center"}},"392",-1),Kt=t("td",{style:{"text-align":"left"}},"判断子序列",-1),Pt={style:{"text-align":"center"}},Ut={style:{"text-align":"left"}},zt=t("code",null,"双指针",-1),Ft=t("code",null,"字符串",-1),Gt=t("code",null,"动态规划",-1),Jt={style:{"text-align":"left"}},Qt={style:{"text-align":"center"}},Wt={href:"https://leetcode.cn/problems/is-subsequence",target:"_blank",rel:"noopener noreferrer"},Xt={href:"https://leetcode.com/problems/is-subsequence",target:"_blank",rel:"noopener noreferrer"},Yt=t("td",{style:{"text-align":"center"}},"122",-1),Zt=t("td",{style:{"text-align":"left"}},"买卖股票的最佳时机 II",-1),$t={style:{"text-align":"center"}},te={style:{"text-align":"left"}},ee=t("code",null,"贪心",-1),oe=t("code",null,"数组",-1),le=t("code",null,"动态规划",-1),ne={style:{"text-align":"left"}},se={style:{"text-align":"center"}},re={href:"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii",target:"_blank",rel:"noopener noreferrer"},de={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",target:"_blank",rel:"noopener noreferrer"},_e=t("td",{style:{"text-align":"center"}},"561",-1),ae=t("td",{style:{"text-align":"left"}},"数组拆分",-1),ce=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},he=t("code",null,"贪心",-1),ge=t("code",null,"数组",-1),fe=t("code",null,"计数排序",-1),ue=t("code",null,"1+",-1),me={style:{"text-align":"left"}},ye={style:{"text-align":"center"}},pe={href:"https://leetcode.cn/problems/array-partition",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://leetcode.com/problems/array-partition",target:"_blank",rel:"noopener noreferrer"},be=t("td",{style:{"text-align":"center"}},"1710",-1),ke=t("td",{style:{"text-align":"left"}},"卡车上的最大单元数",-1),ve=t("td",{style:{"text-align":"center"}},null,-1),Me={style:{"text-align":"left"}},we=t("code",null,"贪心",-1),Ee=t("code",null,"数组",-1),Te=t("code",null,"排序",-1),Ie={style:{"text-align":"left"}},Ne={style:{"text-align":"center"}},qe={href:"https://leetcode.cn/problems/maximum-units-on-a-truck",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://leetcode.com/problems/maximum-units-on-a-truck",target:"_blank",rel:"noopener noreferrer"},Re=t("td",{style:{"text-align":"center"}},"1217",-1),Se=t("td",{style:{"text-align":"left"}},"玩筹码",-1),Ve=t("td",{style:{"text-align":"center"}},null,-1),je={style:{"text-align":"left"}},Ae=t("code",null,"贪心",-1),Be=t("code",null,"数组",-1),Ce=t("code",null,"数学",-1),De={style:{"text-align":"left"}},Oe={style:{"text-align":"center"}},He={href:"https://leetcode.cn/problems/minimum-cost-to-move-chips-to-the-same-position",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://leetcode.com/problems/minimum-cost-to-move-chips-to-the-same-position",target:"_blank",rel:"noopener noreferrer"},Pe=t("td",{style:{"text-align":"center"}},"1247",-1),Ue=t("td",{style:{"text-align":"left"}},"交换字符使得字符串相同",-1),ze=t("td",{style:{"text-align":"center"}},null,-1),Fe={style:{"text-align":"left"}},Ge=t("code",null,"贪心",-1),Je=t("code",null,"数学",-1),Qe=t("code",null,"字符串",-1),We={style:{"text-align":"left"}},Xe={style:{"text-align":"center"}},Ye={href:"https://leetcode.cn/problems/minimum-swaps-to-make-strings-equal",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://leetcode.com/problems/minimum-swaps-to-make-strings-equal",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"1400",-1),to=t("td",{style:{"text-align":"left"}},"构造 K 个回文字符串",-1),eo=t("td",{style:{"text-align":"center"}},null,-1),oo={style:{"text-align":"left"}},lo=t("code",null,"贪心",-1),no=t("code",null,"哈希表",-1),so=t("code",null,"字符串",-1),ro=t("code",null,"1+",-1),_o={style:{"text-align":"left"}},ao={style:{"text-align":"center"}},co={href:"https://leetcode.cn/problems/construct-k-palindrome-strings",target:"_blank",rel:"noopener noreferrer"},io={href:"https://leetcode.com/problems/construct-k-palindrome-strings",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"921",-1),go=t("td",{style:{"text-align":"left"}},"使括号有效的最少添加",-1),fo={style:{"text-align":"center"}},uo={style:{"text-align":"left"}},mo=t("code",null,"栈",-1),yo=t("code",null,"贪心",-1),po=t("code",null,"字符串",-1),xo={style:{"text-align":"left"}},bo={style:{"text-align":"center"}},ko={href:"https://leetcode.cn/problems/minimum-add-to-make-parentheses-valid",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://leetcode.com/problems/minimum-add-to-make-parentheses-valid",target:"_blank",rel:"noopener noreferrer"},Mo=t("td",{style:{"text-align":"center"}},"1029",-1),wo=t("td",{style:{"text-align":"left"}},"两地调度",-1),Eo=t("td",{style:{"text-align":"center"}},null,-1),To={style:{"text-align":"left"}},Io=t("code",null,"贪心",-1),No=t("code",null,"数组",-1),qo=t("code",null,"排序",-1),Lo={style:{"text-align":"left"}},Ro={style:{"text-align":"center"}},So={href:"https://leetcode.cn/problems/two-city-scheduling",target:"_blank",rel:"noopener noreferrer"},Vo={href:"https://leetcode.com/problems/two-city-scheduling",target:"_blank",rel:"noopener noreferrer"},jo=t("td",{style:{"text-align":"center"}},"1605",-1),Ao=t("td",{style:{"text-align":"left"}},"给定行和列的和求可行矩阵",-1),Bo=t("td",{style:{"text-align":"center"}},null,-1),Co={style:{"text-align":"left"}},Do=t("code",null,"贪心",-1),Oo=t("code",null,"数组",-1),Ho=t("code",null,"矩阵",-1),Ko={style:{"text-align":"left"}},Po={style:{"text-align":"center"}},Uo={href:"https://leetcode.cn/problems/find-valid-matrix-given-row-and-column-sums",target:"_blank",rel:"noopener noreferrer"},zo={href:"https://leetcode.com/problems/find-valid-matrix-given-row-and-column-sums",target:"_blank",rel:"noopener noreferrer"},Fo=t("td",{style:{"text-align":"center"}},"135",-1),Go=t("td",{style:{"text-align":"left"}},"分发糖果",-1),Jo={style:{"text-align":"center"}},Qo={style:{"text-align":"left"}},Wo=t("code",null,"贪心",-1),Xo=t("code",null,"数组",-1),Yo={style:{"text-align":"left"}},Zo={style:{"text-align":"center"}},$o={href:"https://leetcode.cn/problems/candy",target:"_blank",rel:"noopener noreferrer"},tl={href:"https://leetcode.com/problems/candy",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},"134",-1),ol=t("td",{style:{"text-align":"left"}},"加油站",-1),ll={style:{"text-align":"center"}},nl={style:{"text-align":"left"}},sl=t("code",null,"贪心",-1),rl=t("code",null,"数组",-1),dl={style:{"text-align":"left"}},_l={style:{"text-align":"center"}},al={href:"https://leetcode.cn/problems/gas-station",target:"_blank",rel:"noopener noreferrer"},cl={href:"https://leetcode.com/problems/gas-station",target:"_blank",rel:"noopener noreferrer"},il=t("td",{style:{"text-align":"center"}},"53",-1),hl=t("td",{style:{"text-align":"left"}},"最大子数组和",-1),gl={style:{"text-align":"center"}},fl={style:{"text-align":"left"}},ul=t("code",null,"数组",-1),ml=t("code",null,"分治",-1),yl=t("code",null,"动态规划",-1),pl={style:{"text-align":"left"}},xl={style:{"text-align":"center"}},bl={href:"https://leetcode.cn/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},kl={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},vl=t("td",{style:{"text-align":"center"}},"376",-1),Ml=t("td",{style:{"text-align":"left"}},"摆动序列",-1),wl=t("td",{style:{"text-align":"center"}},null,-1),El={style:{"text-align":"left"}},Tl=t("code",null,"贪心",-1),Il=t("code",null,"数组",-1),Nl=t("code",null,"动态规划",-1),ql={style:{"text-align":"left"}},Ll={style:{"text-align":"center"}},Rl={href:"https://leetcode.cn/problems/wiggle-subsequence",target:"_blank",rel:"noopener noreferrer"},Sl={href:"https://leetcode.com/problems/wiggle-subsequence",target:"_blank",rel:"noopener noreferrer"},Vl=t("td",{style:{"text-align":"center"}},"738",-1),jl=t("td",{style:{"text-align":"left"}},"单调递增的数字",-1),Al=t("td",{style:{"text-align":"center"}},null,-1),Bl={style:{"text-align":"left"}},Cl=t("code",null,"贪心",-1),Dl=t("code",null,"数学",-1),Ol={style:{"text-align":"left"}},Hl={style:{"text-align":"center"}},Kl={href:"https://leetcode.cn/problems/monotone-increasing-digits",target:"_blank",rel:"noopener noreferrer"},Pl={href:"https://leetcode.com/problems/monotone-increasing-digits",target:"_blank",rel:"noopener noreferrer"},Ul=t("td",{style:{"text-align":"center"}},"402",-1),zl=t("td",{style:{"text-align":"left"}},"移掉 K 位数字",-1),Fl=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Jl=t("code",null,"栈",-1),Ql=t("code",null,"贪心",-1),Wl=t("code",null,"字符串",-1),Xl=t("code",null,"1+",-1),Yl={style:{"text-align":"left"}},Zl={style:{"text-align":"center"}},$l={href:"https://leetcode.cn/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},en=t("td",{style:{"text-align":"center"}},"861",-1),on=t("td",{style:{"text-align":"left"}},"翻转矩阵后的得分",-1),ln=t("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},sn=t("code",null,"贪心",-1),rn=t("code",null,"位运算",-1),dn=t("code",null,"数组",-1),_n=t("code",null,"1+",-1),an={style:{"text-align":"left"}},cn={style:{"text-align":"center"}},hn={href:"https://leetcode.cn/problems/score-after-flipping-matrix",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://leetcode.com/problems/score-after-flipping-matrix",target:"_blank",rel:"noopener noreferrer"},fn=t("td",{style:{"text-align":"center"}},"670",-1),un=t("td",{style:{"text-align":"left"}},"最大交换",-1),mn={style:{"text-align":"center"}},yn={style:{"text-align":"left"}},pn=t("code",null,"贪心",-1),xn=t("code",null,"数学",-1),bn={style:{"text-align":"left"}},kn={style:{"text-align":"center"}},vn={href:"https://leetcode.cn/problems/maximum-swap",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://leetcode.com/problems/maximum-swap",target:"_blank",rel:"noopener noreferrer"};function wn(En,Tn){const n=_("RouterLink"),r=_("font"),s=_("ExternalLinkIcon");return c(),i("div",null,[f,d(" START TABLE "),d(" Please keep comment here to allow auto update "),d(" DON'T EDIT THIS SECTION, INSTEAD RE-RUN `npm run lc` TO UPDATE "),u,d(" prettier-ignore "),t("table",null,[m,t("tbody",null,[t("tr",null,[y,p,x,t("td",b,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[k]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[v]),_:1}),e(),o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[M]),_:1}),e(),w]),t("td",E,[o(r,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",T,[t("a",I,[e("🀄️"),o(s)]),e(),t("a",N,[e("🔗"),o(s)])])]),t("tr",null,[q,L,R,t("td",S,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[V]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[j]),_:1})]),t("td",A,[o(r,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",B,[t("a",C,[e("🀄️"),o(s)]),e(),t("a",D,[e("🔗"),o(s)])])]),t("tr",null,[O,H,t("td",K,[o(n,{to:"/problem/0056.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",P,[o(n,{to:"/tag/array.html"},{default:l(()=>[U]),_:1}),e(),o(n,{to:"/tag/sorting.html"},{default:l(()=>[z]),_:1})]),t("td",F,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",G,[t("a",J,[e("🀄️"),o(s)]),e(),t("a",Q,[e("🔗"),o(s)])])]),t("tr",null,[W,X,Y,t("td",Z,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[$]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[tt]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[et]),_:1}),e(),ot]),t("td",lt,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",nt,[t("a",st,[e("🀄️"),o(s)]),e(),t("a",rt,[e("🔗"),o(s)])])]),t("tr",null,[dt,_t,t("td",at,[o(n,{to:"/problem/0452.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",ct,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[it]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[ht]),_:1}),e(),o(n,{to:"/tag/sorting.html"},{default:l(()=>[gt]),_:1})]),t("td",ft,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",ut,[t("a",mt,[e("🀄️"),o(s)]),e(),t("a",yt,[e("🔗"),o(s)])])]),t("tr",null,[pt,xt,t("td",bt,[o(n,{to:"/problem/0055.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",kt,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[vt]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Mt]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[wt]),_:1})]),t("td",Et,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Tt,[t("a",It,[e("🀄️"),o(s)]),e(),t("a",Nt,[e("🔗"),o(s)])])]),t("tr",null,[qt,Lt,t("td",Rt,[o(n,{to:"/problem/0045.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",St,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[Vt]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[jt]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[At]),_:1})]),t("td",Bt,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Ct,[t("a",Dt,[e("🀄️"),o(s)]),e(),t("a",Ot,[e("🔗"),o(s)])])]),t("tr",null,[Ht,Kt,t("td",Pt,[o(n,{to:"/problem/0392.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Ut,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[zt]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Ft]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Gt]),_:1})]),t("td",Jt,[o(r,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",Qt,[t("a",Wt,[e("🀄️"),o(s)]),e(),t("a",Xt,[e("🔗"),o(s)])])]),t("tr",null,[Yt,Zt,t("td",$t,[o(n,{to:"/problem/0122.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",te,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[ee]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[oe]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[le]),_:1})]),t("td",ne,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",se,[t("a",re,[e("🀄️"),o(s)]),e(),t("a",de,[e("🔗"),o(s)])])]),t("tr",null,[_e,ae,ce,t("td",ie,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[he]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[ge]),_:1}),e(),o(n,{to:"/tag/counting-sort.html"},{default:l(()=>[fe]),_:1}),e(),ue]),t("td",me,[o(r,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",ye,[t("a",pe,[e("🀄️"),o(s)]),e(),t("a",xe,[e("🔗"),o(s)])])]),t("tr",null,[be,ke,ve,t("td",Me,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[we]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Ee]),_:1}),e(),o(n,{to:"/tag/sorting.html"},{default:l(()=>[Te]),_:1})]),t("td",Ie,[o(r,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",Ne,[t("a",qe,[e("🀄️"),o(s)]),e(),t("a",Le,[e("🔗"),o(s)])])]),t("tr",null,[Re,Se,Ve,t("td",je,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[Ae]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Be]),_:1}),e(),o(n,{to:"/tag/math.html"},{default:l(()=>[Ce]),_:1})]),t("td",De,[o(r,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",Oe,[t("a",He,[e("🀄️"),o(s)]),e(),t("a",Ke,[e("🔗"),o(s)])])]),t("tr",null,[Pe,Ue,ze,t("td",Fe,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[Ge]),_:1}),e(),o(n,{to:"/tag/math.html"},{default:l(()=>[Je]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Qe]),_:1})]),t("td",We,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Xe,[t("a",Ye,[e("🀄️"),o(s)]),e(),t("a",Ze,[e("🔗"),o(s)])])]),t("tr",null,[$e,to,eo,t("td",oo,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[lo]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[no]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[so]),_:1}),e(),ro]),t("td",_o,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",ao,[t("a",co,[e("🀄️"),o(s)]),e(),t("a",io,[e("🔗"),o(s)])])]),t("tr",null,[ho,go,t("td",fo,[o(n,{to:"/problem/0921.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",uo,[o(n,{to:"/tag/stack.html"},{default:l(()=>[mo]),_:1}),e(),o(n,{to:"/tag/greedy.html"},{default:l(()=>[yo]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[po]),_:1})]),t("td",xo,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",bo,[t("a",ko,[e("🀄️"),o(s)]),e(),t("a",vo,[e("🔗"),o(s)])])]),t("tr",null,[Mo,wo,Eo,t("td",To,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[Io]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[No]),_:1}),e(),o(n,{to:"/tag/sorting.html"},{default:l(()=>[qo]),_:1})]),t("td",Lo,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Ro,[t("a",So,[e("🀄️"),o(s)]),e(),t("a",Vo,[e("🔗"),o(s)])])]),t("tr",null,[jo,Ao,Bo,t("td",Co,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[Do]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Oo]),_:1}),e(),o(n,{to:"/tag/matrix.html"},{default:l(()=>[Ho]),_:1})]),t("td",Ko,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Po,[t("a",Uo,[e("🀄️"),o(s)]),e(),t("a",zo,[e("🔗"),o(s)])])]),t("tr",null,[Fo,Go,t("td",Jo,[o(n,{to:"/problem/0135.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Qo,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[Wo]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Xo]),_:1})]),t("td",Yo,[o(r,{color:"#ff334b"},{default:l(()=>[e("Hard")]),_:1})]),t("td",Zo,[t("a",$o,[e("🀄️"),o(s)]),e(),t("a",tl,[e("🔗"),o(s)])])]),t("tr",null,[el,ol,t("td",ll,[o(n,{to:"/problem/0134.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",nl,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[sl]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[rl]),_:1})]),t("td",dl,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",_l,[t("a",al,[e("🀄️"),o(s)]),e(),t("a",cl,[e("🔗"),o(s)])])]),t("tr",null,[il,hl,t("td",gl,[o(n,{to:"/problem/0053.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",fl,[o(n,{to:"/tag/array.html"},{default:l(()=>[ul]),_:1}),e(),o(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[ml]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[yl]),_:1})]),t("td",pl,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",xl,[t("a",bl,[e("🀄️"),o(s)]),e(),t("a",kl,[e("🔗"),o(s)])])]),t("tr",null,[vl,Ml,wl,t("td",El,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[Tl]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Il]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Nl]),_:1})]),t("td",ql,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Ll,[t("a",Rl,[e("🀄️"),o(s)]),e(),t("a",Sl,[e("🔗"),o(s)])])]),t("tr",null,[Vl,jl,Al,t("td",Bl,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[Cl]),_:1}),e(),o(n,{to:"/tag/math.html"},{default:l(()=>[Dl]),_:1})]),t("td",Ol,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Hl,[t("a",Kl,[e("🀄️"),o(s)]),e(),t("a",Pl,[e("🔗"),o(s)])])]),t("tr",null,[Ul,zl,Fl,t("td",Gl,[o(n,{to:"/tag/stack.html"},{default:l(()=>[Jl]),_:1}),e(),o(n,{to:"/tag/greedy.html"},{default:l(()=>[Ql]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Wl]),_:1}),e(),Xl]),t("td",Yl,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Zl,[t("a",$l,[e("🀄️"),o(s)]),e(),t("a",tn,[e("🔗"),o(s)])])]),t("tr",null,[en,on,ln,t("td",nn,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[sn]),_:1}),e(),o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[rn]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[dn]),_:1}),e(),_n]),t("td",an,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",cn,[t("a",hn,[e("🀄️"),o(s)]),e(),t("a",gn,[e("🔗"),o(s)])])]),t("tr",null,[fn,un,t("td",mn,[o(n,{to:"/problem/0670.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",yn,[o(n,{to:"/tag/greedy.html"},{default:l(()=>[pn]),_:1}),e(),o(n,{to:"/tag/math.html"},{default:l(()=>[xn]),_:1})]),t("td",bn,[o(r,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",kn,[t("a",vn,[e("🀄️"),o(s)]),e(),t("a",Mn,[e("🔗"),o(s)])])])])])])}const Nn=a(g,[["render",wn],["__file","greedy.html.vue"]]);export{Nn as default};
