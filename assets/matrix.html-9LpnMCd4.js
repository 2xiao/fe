import{_ as i,r as _,o as a,c as r,a as t,b as e,w as o,d as l,f as c}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"矩阵",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#矩阵","aria-hidden":"true"},"#"),l(" 矩阵")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("span",{class:"blue"},"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),E=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),q=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),P=t("code",null,"最小生成树",-1),j=t("code",null,"图",-1),O=t("code",null,"有序集合",-1),K=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),D=t("code",null,"欧拉回路",-1),N=t("code",null,"双连通分量",-1),X=t("code",null,"并查集",-1),Y=t("code",null,"字典树",-1),Q=t("code",null,"线段树",-1),R=t("code",null,"树状数组",-1),A=t("code",null,"后缀数组",-1),T=t("p",null,[t("strong",null,"算法")],-1),W=t("code",null,"枚举",-1),Z=t("code",null,"递归",-1),F=t("code",null,"分治",-1),G=t("code",null,"回溯",-1),S=t("code",null,"贪心",-1),U=t("code",null,"动态规划",-1),J=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),Et=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),qt=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Pt=t("code",null,"交互",-1),jt=t("code",null,"迭代器",-1),Ot=t("code",null,"多线程",-1),Kt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"36",-1),Dt={style:{"text-align":"left"}},Nt={href:"https://leetcode.com/problems/valid-sudoku",target:"_blank",rel:"noopener noreferrer"},Xt={style:{"text-align":"center"}},Yt={href:"/problem/0036",target:"_blank",rel:"noopener noreferrer"},Qt={style:{"text-align":"left"}},Rt=t("code",null,"数组",-1),At=t("code",null,"哈希表",-1),Tt=t("code",null,"矩阵",-1),Wt={style:{"text-align":"left"}},Zt=t("td",{style:{"text-align":"center"}},"37",-1),Ft={style:{"text-align":"left"}},Gt={href:"https://leetcode.com/problems/sudoku-solver",target:"_blank",rel:"noopener noreferrer"},St={style:{"text-align":"center"}},Ut={href:"/problem/0037",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"left"}},$t=t("code",null,"数组",-1),te=t("code",null,"哈希表",-1),ee=t("code",null,"回溯",-1),le=t("code",null,"1+",-1),oe={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"48",-1),se={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/rotate-image",target:"_blank",rel:"noopener noreferrer"},_e={style:{"text-align":"center"}},ie={href:"/problem/0048",target:"_blank",rel:"noopener noreferrer"},ae={style:{"text-align":"left"}},re=t("code",null,"数组",-1),ce=t("code",null,"数学",-1),he=t("code",null,"矩阵",-1),ue={style:{"text-align":"left"}},fe=t("td",{style:{"text-align":"center"}},"54",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/spiral-matrix",target:"_blank",rel:"noopener noreferrer"},ye={style:{"text-align":"center"}},xe={href:"/problem/0054",target:"_blank",rel:"noopener noreferrer"},pe={style:{"text-align":"left"}},be=t("code",null,"数组",-1),ke=t("code",null,"矩阵",-1),Me=t("code",null,"模拟",-1),we={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"59",-1),ve={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/spiral-matrix-ii",target:"_blank",rel:"noopener noreferrer"},Ee={style:{"text-align":"center"}},ze={href:"/problem/0059",target:"_blank",rel:"noopener noreferrer"},qe={style:{"text-align":"left"}},Le=t("code",null,"数组",-1),Ce=t("code",null,"矩阵",-1),Pe=t("code",null,"模拟",-1),je={style:{"text-align":"left"}},Oe=t("td",{style:{"text-align":"center"}},"63",-1),Ke={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/unique-paths-ii",target:"_blank",rel:"noopener noreferrer"},Be={style:{"text-align":"center"}},De={href:"/problem/0063",target:"_blank",rel:"noopener noreferrer"},Ne={style:{"text-align":"left"}},Xe=t("code",null,"数组",-1),Ye=t("code",null,"动态规划",-1),Qe=t("code",null,"矩阵",-1),Re={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"64",-1),Te={style:{"text-align":"left"}},We={href:"https://leetcode.com/problems/minimum-path-sum",target:"_blank",rel:"noopener noreferrer"},Ze={style:{"text-align":"center"}},Fe={href:"/problem/0064",target:"_blank",rel:"noopener noreferrer"},Ge={style:{"text-align":"left"}},Se=t("code",null,"数组",-1),Ue=t("code",null,"动态规划",-1),Je=t("code",null,"矩阵",-1),$e={style:{"text-align":"left"}},tl=t("td",{style:{"text-align":"center"}},"73",-1),el={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/set-matrix-zeroes",target:"_blank",rel:"noopener noreferrer"},ol={style:{"text-align":"center"}},nl={href:"/problem/0073",target:"_blank",rel:"noopener noreferrer"},sl={style:{"text-align":"left"}},dl=t("code",null,"数组",-1),_l=t("code",null,"哈希表",-1),il=t("code",null,"矩阵",-1),al={style:{"text-align":"left"}},rl=t("td",{style:{"text-align":"center"}},"74",-1),cl={style:{"text-align":"left"}},hl={href:"https://leetcode.com/problems/search-a-2d-matrix",target:"_blank",rel:"noopener noreferrer"},ul={style:{"text-align":"center"}},fl={href:"/problem/0074",target:"_blank",rel:"noopener noreferrer"},gl={style:{"text-align":"left"}},ml=t("code",null,"数组",-1),yl=t("code",null,"二分查找",-1),xl=t("code",null,"矩阵",-1),pl={style:{"text-align":"left"}},bl=t("td",{style:{"text-align":"center"}},"79",-1),kl={style:{"text-align":"left"}},Ml={href:"https://leetcode.com/problems/word-search",target:"_blank",rel:"noopener noreferrer"},wl={style:{"text-align":"center"}},Hl={href:"/problem/0079",target:"_blank",rel:"noopener noreferrer"},vl={style:{"text-align":"left"}},Il=t("code",null,"数组",-1),El=t("code",null,"字符串",-1),zl=t("code",null,"回溯",-1),ql=t("code",null,"1+",-1),Ll={style:{"text-align":"left"}},Cl=t("td",{style:{"text-align":"center"}},"85",-1),Pl={style:{"text-align":"left"}},jl={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},Ol={style:{"text-align":"center"}},Kl={href:"/problem/0085",target:"_blank",rel:"noopener noreferrer"},Vl={style:{"text-align":"left"}},Bl=t("code",null,"栈",-1),Dl=t("code",null,"数组",-1),Nl=t("code",null,"动态规划",-1),Xl=t("code",null,"2+",-1),Yl={style:{"text-align":"left"}},Ql=t("td",{style:{"text-align":"center"}},"130",-1),Rl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},Tl={style:{"text-align":"center"}},Wl={href:"/problem/0130",target:"_blank",rel:"noopener noreferrer"},Zl={style:{"text-align":"left"}},Fl=t("code",null,"深度优先搜索",-1),Gl=t("code",null,"广度优先搜索",-1),Sl=t("code",null,"并查集",-1),Ul=t("code",null,"2+",-1),Jl={style:{"text-align":"left"}},$l=t("td",{style:{"text-align":"center"}},"174",-1),to={style:{"text-align":"left"}},eo={href:"https://leetcode.com/problems/dungeon-game",target:"_blank",rel:"noopener noreferrer"},lo={style:{"text-align":"center"}},oo={href:"/problem/0174",target:"_blank",rel:"noopener noreferrer"},no={style:{"text-align":"left"}},so=t("code",null,"数组",-1),_o=t("code",null,"动态规划",-1),io=t("code",null,"矩阵",-1),ao={style:{"text-align":"left"}},ro=t("td",{style:{"text-align":"center"}},"200",-1),co={style:{"text-align":"left"}},ho={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},uo={style:{"text-align":"center"}},fo={href:"/problem/0200",target:"_blank",rel:"noopener noreferrer"},go={style:{"text-align":"left"}},mo=t("code",null,"深度优先搜索",-1),yo=t("code",null,"广度优先搜索",-1),xo=t("code",null,"并查集",-1),po=t("code",null,"2+",-1),bo={style:{"text-align":"left"}},ko=t("td",{style:{"text-align":"center"}},"212",-1),Mo={style:{"text-align":"left"}},wo={href:"https://leetcode.com/problems/word-search-ii",target:"_blank",rel:"noopener noreferrer"},Ho={style:{"text-align":"center"}},vo={href:"/problem/0212",target:"_blank",rel:"noopener noreferrer"},Io={style:{"text-align":"left"}},Eo=t("code",null,"字典树",-1),zo=t("code",null,"数组",-1),qo=t("code",null,"字符串",-1),Lo=t("code",null,"2+",-1),Co={style:{"text-align":"left"}},Po=t("td",{style:{"text-align":"center"}},"221",-1),jo={style:{"text-align":"left"}},Oo={href:"https://leetcode.com/problems/maximal-square",target:"_blank",rel:"noopener noreferrer"},Ko={style:{"text-align":"center"}},Vo={href:"/problem/0221",target:"_blank",rel:"noopener noreferrer"},Bo={style:{"text-align":"left"}},Do=t("code",null,"数组",-1),No=t("code",null,"动态规划",-1),Xo=t("code",null,"矩阵",-1),Yo={style:{"text-align":"left"}},Qo=t("td",{style:{"text-align":"center"}},"240",-1),Ro={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/search-a-2d-matrix-ii",target:"_blank",rel:"noopener noreferrer"},To={style:{"text-align":"center"}},Wo={href:"/problem/0240",target:"_blank",rel:"noopener noreferrer"},Zo={style:{"text-align":"left"}},Fo=t("code",null,"数组",-1),Go=t("code",null,"二分查找",-1),So=t("code",null,"分治",-1),Uo=t("code",null,"1+",-1),Jo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"286",-1),tn={style:{"text-align":"left"}},en={href:"https://leetcode.com/problems/walls-and-gates",target:"_blank",rel:"noopener noreferrer"},ln=t("td",{style:{"text-align":"center"}},null,-1),on={style:{"text-align":"left"}},nn=t("code",null,"广度优先搜索",-1),sn=t("code",null,"数组",-1),dn=t("code",null,"矩阵",-1),_n={style:{"text-align":"left"}},an=t("td",{style:{"text-align":"center"}},"289",-1),rn={style:{"text-align":"left"}},cn={href:"https://leetcode.com/problems/game-of-life",target:"_blank",rel:"noopener noreferrer"},hn={style:{"text-align":"center"}},un={href:"/problem/0289",target:"_blank",rel:"noopener noreferrer"},fn={style:{"text-align":"left"}},gn=t("code",null,"数组",-1),mn=t("code",null,"矩阵",-1),yn=t("code",null,"模拟",-1),xn={style:{"text-align":"left"}},pn=t("td",{style:{"text-align":"center"}},"296",-1),bn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/best-meeting-point",target:"_blank",rel:"noopener noreferrer"},Mn=t("td",{style:{"text-align":"center"}},null,-1),wn={style:{"text-align":"left"}},Hn=t("code",null,"数组",-1),vn=t("code",null,"数学",-1),In=t("code",null,"矩阵",-1),En=t("code",null,"1+",-1),zn={style:{"text-align":"left"}},qn=t("td",{style:{"text-align":"center"}},"302",-1),Ln={style:{"text-align":"left"}},Cn={href:"https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},Pn=t("td",{style:{"text-align":"center"}},null,-1),jn={style:{"text-align":"left"}},On=t("code",null,"深度优先搜索",-1),Kn=t("code",null,"广度优先搜索",-1),Vn=t("code",null,"数组",-1),Bn=t("code",null,"2+",-1),Dn={style:{"text-align":"left"}},Nn=t("td",{style:{"text-align":"center"}},"304",-1),Xn={style:{"text-align":"left"}},Yn={href:"https://leetcode.com/problems/range-sum-query-2d-immutable",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},null,-1),Rn={style:{"text-align":"left"}},An=t("code",null,"设计",-1),Tn=t("code",null,"数组",-1),Wn=t("code",null,"矩阵",-1),Zn=t("code",null,"1+",-1),Fn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"308",-1),Sn={style:{"text-align":"left"}},Un={href:"https://leetcode.com/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},Jn=t("td",{style:{"text-align":"center"}},null,-1),$n={style:{"text-align":"left"}},ts=t("code",null,"设计",-1),es=t("code",null,"树状数组",-1),ls=t("code",null,"线段树",-1),os=t("code",null,"2+",-1),ns={style:{"text-align":"left"}},ss=t("td",{style:{"text-align":"center"}},"311",-1),ds={style:{"text-align":"left"}},_s={href:"https://leetcode.com/problems/sparse-matrix-multiplication",target:"_blank",rel:"noopener noreferrer"},is=t("td",{style:{"text-align":"center"}},null,-1),as={style:{"text-align":"left"}},rs=t("code",null,"数组",-1),cs=t("code",null,"哈希表",-1),hs=t("code",null,"矩阵",-1),us={style:{"text-align":"left"}},fs=t("td",{style:{"text-align":"center"}},"317",-1),gs={style:{"text-align":"left"}},ms={href:"https://leetcode.com/problems/shortest-distance-from-all-buildings",target:"_blank",rel:"noopener noreferrer"},ys=t("td",{style:{"text-align":"center"}},null,-1),xs={style:{"text-align":"left"}},ps=t("code",null,"广度优先搜索",-1),bs=t("code",null,"数组",-1),ks=t("code",null,"矩阵",-1),Ms={style:{"text-align":"left"}},ws=t("td",{style:{"text-align":"center"}},"329",-1),Hs={style:{"text-align":"left"}},vs={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Is=t("td",{style:{"text-align":"center"}},null,-1),Es={style:{"text-align":"left"}},zs=t("code",null,"深度优先搜索",-1),qs=t("code",null,"广度优先搜索",-1),Ls=t("code",null,"图",-1),Cs=t("code",null,"5+",-1),Ps={style:{"text-align":"left"}},js=t("td",{style:{"text-align":"center"}},"348",-1),Os={style:{"text-align":"left"}},Ks={href:"https://leetcode.com/problems/design-tic-tac-toe",target:"_blank",rel:"noopener noreferrer"},Vs=t("td",{style:{"text-align":"center"}},null,-1),Bs={style:{"text-align":"left"}},Ds=t("code",null,"设计",-1),Ns=t("code",null,"数组",-1),Xs=t("code",null,"哈希表",-1),Ys=t("code",null,"2+",-1),Qs={style:{"text-align":"left"}},Rs=t("td",{style:{"text-align":"center"}},"361",-1),As={style:{"text-align":"left"}},Ts={href:"https://leetcode.com/problems/bomb-enemy",target:"_blank",rel:"noopener noreferrer"},Ws=t("td",{style:{"text-align":"center"}},null,-1),Zs={style:{"text-align":"left"}},Fs=t("code",null,"数组",-1),Gs=t("code",null,"动态规划",-1),Ss=t("code",null,"矩阵",-1),Us={style:{"text-align":"left"}},Js=t("td",{style:{"text-align":"center"}},"363",-1),$s={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},null,-1),ld={style:{"text-align":"left"}},od=t("code",null,"数组",-1),nd=t("code",null,"二分查找",-1),sd=t("code",null,"矩阵",-1),dd=t("code",null,"2+",-1),_d={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"378",-1),ad={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix",target:"_blank",rel:"noopener noreferrer"},cd={style:{"text-align":"center"}},hd={href:"/problem/0378",target:"_blank",rel:"noopener noreferrer"},ud={style:{"text-align":"left"}},fd=t("code",null,"数组",-1),gd=t("code",null,"二分查找",-1),md=t("code",null,"矩阵",-1),yd=t("code",null,"2+",-1),xd={style:{"text-align":"left"}},pd=t("td",{style:{"text-align":"center"}},"407",-1),bd={style:{"text-align":"left"}},kd={href:"https://leetcode.com/problems/trapping-rain-water-ii",target:"_blank",rel:"noopener noreferrer"},Md=t("td",{style:{"text-align":"center"}},null,-1),wd={style:{"text-align":"left"}},Hd=t("code",null,"广度优先搜索",-1),vd=t("code",null,"数组",-1),Id=t("code",null,"矩阵",-1),Ed=t("code",null,"1+",-1),zd={style:{"text-align":"left"}},qd=t("td",{style:{"text-align":"center"}},"417",-1),Ld={style:{"text-align":"left"}},Cd={href:"https://leetcode.com/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},Pd=t("td",{style:{"text-align":"center"}},null,-1),jd={style:{"text-align":"left"}},Od=t("code",null,"深度优先搜索",-1),Kd=t("code",null,"广度优先搜索",-1),Vd=t("code",null,"数组",-1),Bd=t("code",null,"1+",-1),Dd={style:{"text-align":"left"}},Nd=t("td",{style:{"text-align":"center"}},"419",-1),Xd={style:{"text-align":"left"}},Yd={href:"https://leetcode.com/problems/battleships-in-a-board",target:"_blank",rel:"noopener noreferrer"},Qd=t("td",{style:{"text-align":"center"}},null,-1),Rd={style:{"text-align":"left"}},Ad=t("code",null,"深度优先搜索",-1),Td=t("code",null,"数组",-1),Wd=t("code",null,"矩阵",-1),Zd={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"422",-1),Gd={style:{"text-align":"left"}},Sd={href:"https://leetcode.com/problems/valid-word-square",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},$d=t("code",null,"数组",-1),t_=t("code",null,"矩阵",-1),e_={style:{"text-align":"left"}},l_=t("td",{style:{"text-align":"center"}},"427",-1),o_={style:{"text-align":"left"}},n_={href:"https://leetcode.com/problems/construct-quad-tree",target:"_blank",rel:"noopener noreferrer"},s_={style:{"text-align":"center"}},d_={href:"/problem/0427",target:"_blank",rel:"noopener noreferrer"},__={style:{"text-align":"left"}},i_=t("code",null,"树",-1),a_=t("code",null,"数组",-1),r_=t("code",null,"分治",-1),c_=t("code",null,"1+",-1),h_={style:{"text-align":"left"}},u_=t("td",{style:{"text-align":"center"}},"463",-1),f_={style:{"text-align":"left"}},g_={href:"https://leetcode.com/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},m_=t("td",{style:{"text-align":"center"}},null,-1),y_={style:{"text-align":"left"}},x_=t("code",null,"深度优先搜索",-1),p_=t("code",null,"广度优先搜索",-1),b_=t("code",null,"数组",-1),k_=t("code",null,"1+",-1),M_={style:{"text-align":"left"}},w_=t("td",{style:{"text-align":"center"}},"490",-1),H_={style:{"text-align":"left"}},v_={href:"https://leetcode.com/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},I_=t("td",{style:{"text-align":"center"}},null,-1),E_={style:{"text-align":"left"}},z_=t("code",null,"深度优先搜索",-1),q_=t("code",null,"广度优先搜索",-1),L_=t("code",null,"数组",-1),C_=t("code",null,"1+",-1),P_={style:{"text-align":"left"}},j_=t("td",{style:{"text-align":"center"}},"498",-1),O_={style:{"text-align":"left"}},K_={href:"https://leetcode.com/problems/diagonal-traverse",target:"_blank",rel:"noopener noreferrer"},V_={style:{"text-align":"center"}},B_={href:"/problem/0498",target:"_blank",rel:"noopener noreferrer"},D_={style:{"text-align":"left"}},N_=t("code",null,"数组",-1),X_=t("code",null,"矩阵",-1),Y_=t("code",null,"模拟",-1),Q_={style:{"text-align":"left"}},R_=t("td",{style:{"text-align":"center"}},"499",-1),A_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},W_=t("td",{style:{"text-align":"center"}},null,-1),Z_={style:{"text-align":"left"}},F_=t("code",null,"深度优先搜索",-1),G_=t("code",null,"广度优先搜索",-1),S_=t("code",null,"图",-1),U_=t("code",null,"5+",-1),J_={style:{"text-align":"left"}},$_=t("td",{style:{"text-align":"center"}},"505",-1),ti={style:{"text-align":"left"}},ei={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},li=t("td",{style:{"text-align":"center"}},null,-1),oi={style:{"text-align":"left"}},ni=t("code",null,"深度优先搜索",-1),si=t("code",null,"广度优先搜索",-1),di=t("code",null,"图",-1),_i=t("code",null,"4+",-1),ii={style:{"text-align":"left"}},ai=t("td",{style:{"text-align":"center"}},"529",-1),ri={style:{"text-align":"left"}},ci={href:"https://leetcode.com/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},hi=t("td",{style:{"text-align":"center"}},null,-1),ui={style:{"text-align":"left"}},fi=t("code",null,"深度优先搜索",-1),gi=t("code",null,"广度优先搜索",-1),mi=t("code",null,"数组",-1),yi=t("code",null,"1+",-1),xi={style:{"text-align":"left"}},pi=t("td",{style:{"text-align":"center"}},"531",-1),bi={style:{"text-align":"left"}},ki={href:"https://leetcode.com/problems/lonely-pixel-i",target:"_blank",rel:"noopener noreferrer"},Mi=t("td",{style:{"text-align":"center"}},null,-1),wi={style:{"text-align":"left"}},Hi=t("code",null,"数组",-1),vi=t("code",null,"哈希表",-1),Ii=t("code",null,"矩阵",-1),Ei={style:{"text-align":"left"}},zi=t("td",{style:{"text-align":"center"}},"533",-1),qi={style:{"text-align":"left"}},Li={href:"https://leetcode.com/problems/lonely-pixel-ii",target:"_blank",rel:"noopener noreferrer"},Ci=t("td",{style:{"text-align":"center"}},null,-1),Pi={style:{"text-align":"left"}},ji=t("code",null,"数组",-1),Oi=t("code",null,"哈希表",-1),Ki=t("code",null,"矩阵",-1),Vi={style:{"text-align":"left"}},Bi=t("td",{style:{"text-align":"center"}},"542",-1),Di={style:{"text-align":"left"}},Ni={href:"https://leetcode.com/problems/01-matrix",target:"_blank",rel:"noopener noreferrer"},Xi=t("td",{style:{"text-align":"center"}},null,-1),Yi={style:{"text-align":"left"}},Qi=t("code",null,"广度优先搜索",-1),Ri=t("code",null,"数组",-1),Ai=t("code",null,"动态规划",-1),Ti=t("code",null,"1+",-1),Wi={style:{"text-align":"left"}},Zi=t("td",{style:{"text-align":"center"}},"562",-1),Fi={style:{"text-align":"left"}},Gi={href:"https://leetcode.com/problems/longest-line-of-consecutive-one-in-matrix",target:"_blank",rel:"noopener noreferrer"},Si=t("td",{style:{"text-align":"center"}},null,-1),Ui={style:{"text-align":"left"}},Ji=t("code",null,"数组",-1),$i=t("code",null,"动态规划",-1),ta=t("code",null,"矩阵",-1),ea={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"566",-1),oa={style:{"text-align":"left"}},na={href:"https://leetcode.com/problems/reshape-the-matrix",target:"_blank",rel:"noopener noreferrer"},sa=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"数组",-1),ia=t("code",null,"矩阵",-1),aa=t("code",null,"模拟",-1),ra={style:{"text-align":"left"}},ca=t("td",{style:{"text-align":"center"}},"568",-1),ha={style:{"text-align":"left"}},ua={href:"https://leetcode.com/problems/maximum-vacation-days",target:"_blank",rel:"noopener noreferrer"},fa=t("td",{style:{"text-align":"center"}},null,-1),ga={style:{"text-align":"left"}},ma=t("code",null,"数组",-1),ya=t("code",null,"动态规划",-1),xa=t("code",null,"矩阵",-1),pa={style:{"text-align":"left"}},ba=t("td",{style:{"text-align":"center"}},"631",-1),ka={style:{"text-align":"left"}},Ma={href:"https://leetcode.com/problems/design-excel-sum-formula",target:"_blank",rel:"noopener noreferrer"},wa=t("td",{style:{"text-align":"center"}},null,-1),Ha={style:{"text-align":"left"}},va=t("code",null,"图",-1),Ia=t("code",null,"设计",-1),Ea=t("code",null,"拓扑排序",-1),za=t("code",null,"2+",-1),qa={style:{"text-align":"left"}},La=t("td",{style:{"text-align":"center"}},"661",-1),Ca={style:{"text-align":"left"}},Pa={href:"https://leetcode.com/problems/image-smoother",target:"_blank",rel:"noopener noreferrer"},ja=t("td",{style:{"text-align":"center"}},null,-1),Oa={style:{"text-align":"left"}},Ka=t("code",null,"数组",-1),Va=t("code",null,"矩阵",-1),Ba={style:{"text-align":"left"}},Da=t("td",{style:{"text-align":"center"}},"675",-1),Na={style:{"text-align":"left"}},Xa={href:"https://leetcode.com/problems/cut-off-trees-for-golf-event",target:"_blank",rel:"noopener noreferrer"},Ya=t("td",{style:{"text-align":"center"}},null,-1),Qa={style:{"text-align":"left"}},Ra=t("code",null,"广度优先搜索",-1),Aa=t("code",null,"数组",-1),Ta=t("code",null,"矩阵",-1),Wa=t("code",null,"1+",-1),Za={style:{"text-align":"left"}},Fa=t("td",{style:{"text-align":"center"}},"695",-1),Ga={style:{"text-align":"left"}},Sa={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},Ua={style:{"text-align":"center"}},Ja={href:"/problem/0695",target:"_blank",rel:"noopener noreferrer"},$a={style:{"text-align":"left"}},tr=t("code",null,"深度优先搜索",-1),er=t("code",null,"广度优先搜索",-1),lr=t("code",null,"并查集",-1),or=t("code",null,"2+",-1),nr={style:{"text-align":"left"}},sr=t("td",{style:{"text-align":"center"}},"723",-1),dr={style:{"text-align":"left"}},_r={href:"https://leetcode.com/problems/candy-crush",target:"_blank",rel:"noopener noreferrer"},ir=t("td",{style:{"text-align":"center"}},null,-1),ar={style:{"text-align":"left"}},rr=t("code",null,"数组",-1),cr=t("code",null,"双指针",-1),hr=t("code",null,"矩阵",-1),ur=t("code",null,"1+",-1),fr={style:{"text-align":"left"}},gr=t("td",{style:{"text-align":"center"}},"733",-1),mr={style:{"text-align":"left"}},yr={href:"https://leetcode.com/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},xr=t("td",{style:{"text-align":"center"}},null,-1),pr={style:{"text-align":"left"}},br=t("code",null,"深度优先搜索",-1),kr=t("code",null,"广度优先搜索",-1),Mr=t("code",null,"数组",-1),wr=t("code",null,"1+",-1),Hr={style:{"text-align":"left"}},vr=t("td",{style:{"text-align":"center"}},"741",-1),Ir={style:{"text-align":"left"}},Er={href:"https://leetcode.com/problems/cherry-pickup",target:"_blank",rel:"noopener noreferrer"},zr=t("td",{style:{"text-align":"center"}},null,-1),qr={style:{"text-align":"left"}},Lr=t("code",null,"数组",-1),Cr=t("code",null,"动态规划",-1),Pr=t("code",null,"矩阵",-1),jr={style:{"text-align":"left"}},Or=t("td",{style:{"text-align":"center"}},"749",-1),Kr={style:{"text-align":"left"}},Vr={href:"https://leetcode.com/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},Br=t("td",{style:{"text-align":"center"}},null,-1),Dr={style:{"text-align":"left"}},Nr=t("code",null,"深度优先搜索",-1),Xr=t("code",null,"广度优先搜索",-1),Yr=t("code",null,"数组",-1),Qr=t("code",null,"2+",-1),Rr={style:{"text-align":"left"}},Ar=t("td",{style:{"text-align":"center"}},"750",-1),Tr={style:{"text-align":"left"}},Wr={href:"https://leetcode.com/problems/number-of-corner-rectangles",target:"_blank",rel:"noopener noreferrer"},Zr=t("td",{style:{"text-align":"center"}},null,-1),Fr={style:{"text-align":"left"}},Gr=t("code",null,"数组",-1),Sr=t("code",null,"数学",-1),Ur=t("code",null,"动态规划",-1),Jr=t("code",null,"1+",-1),$r={style:{"text-align":"left"}},tc=t("td",{style:{"text-align":"center"}},"766",-1),ec={style:{"text-align":"left"}},lc={href:"https://leetcode.com/problems/toeplitz-matrix",target:"_blank",rel:"noopener noreferrer"},oc=t("td",{style:{"text-align":"center"}},null,-1),nc={style:{"text-align":"left"}},sc=t("code",null,"数组",-1),dc=t("code",null,"矩阵",-1),_c={style:{"text-align":"left"}},ic=t("td",{style:{"text-align":"center"}},"773",-1),ac={style:{"text-align":"left"}},rc={href:"https://leetcode.com/problems/sliding-puzzle",target:"_blank",rel:"noopener noreferrer"},cc=t("td",{style:{"text-align":"center"}},null,-1),hc={style:{"text-align":"left"}},uc=t("code",null,"广度优先搜索",-1),fc=t("code",null,"数组",-1),gc=t("code",null,"矩阵",-1),mc={style:{"text-align":"left"}},yc=t("td",{style:{"text-align":"center"}},"778",-1),xc={style:{"text-align":"left"}},pc={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},bc=t("td",{style:{"text-align":"center"}},null,-1),kc={style:{"text-align":"left"}},Mc=t("code",null,"深度优先搜索",-1),wc=t("code",null,"广度优先搜索",-1),Hc=t("code",null,"并查集",-1),vc=t("code",null,"4+",-1),Ic={style:{"text-align":"left"}},Ec=t("td",{style:{"text-align":"center"}},"782",-1),zc={style:{"text-align":"left"}},qc={href:"https://leetcode.com/problems/transform-to-chessboard",target:"_blank",rel:"noopener noreferrer"},Lc=t("td",{style:{"text-align":"center"}},null,-1),Cc={style:{"text-align":"left"}},Pc=t("code",null,"位运算",-1),jc=t("code",null,"数组",-1),Oc=t("code",null,"数学",-1),Kc=t("code",null,"1+",-1),Vc={style:{"text-align":"left"}},Bc=t("td",{style:{"text-align":"center"}},"794",-1),Dc={style:{"text-align":"left"}},Nc={href:"https://leetcode.com/problems/valid-tic-tac-toe-state",target:"_blank",rel:"noopener noreferrer"},Xc=t("td",{style:{"text-align":"center"}},null,-1),Yc={style:{"text-align":"left"}},Qc=t("code",null,"数组",-1),Rc=t("code",null,"矩阵",-1),Ac={style:{"text-align":"left"}},Tc=t("td",{style:{"text-align":"center"}},"803",-1),Wc={style:{"text-align":"left"}},Zc={href:"https://leetcode.com/problems/bricks-falling-when-hit",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},null,-1),Gc={style:{"text-align":"left"}},Sc=t("code",null,"并查集",-1),Uc=t("code",null,"数组",-1),Jc=t("code",null,"矩阵",-1),$c={style:{"text-align":"left"}},t1=t("td",{style:{"text-align":"center"}},"807",-1),e1={style:{"text-align":"left"}},l1={href:"https://leetcode.com/problems/max-increase-to-keep-city-skyline",target:"_blank",rel:"noopener noreferrer"},o1=t("td",{style:{"text-align":"center"}},null,-1),n1={style:{"text-align":"left"}},s1=t("code",null,"贪心",-1),d1=t("code",null,"数组",-1),_1=t("code",null,"矩阵",-1),i1={style:{"text-align":"left"}},a1=t("td",{style:{"text-align":"center"}},"827",-1),r1={style:{"text-align":"left"}},c1={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},h1=t("td",{style:{"text-align":"center"}},null,-1),u1={style:{"text-align":"left"}},f1=t("code",null,"深度优先搜索",-1),g1=t("code",null,"广度优先搜索",-1),m1=t("code",null,"并查集",-1),y1=t("code",null,"2+",-1),x1={style:{"text-align":"left"}},p1=t("td",{style:{"text-align":"center"}},"832",-1),b1={style:{"text-align":"left"}},k1={href:"https://leetcode.com/problems/flipping-an-image",target:"_blank",rel:"noopener noreferrer"},M1=t("td",{style:{"text-align":"center"}},null,-1),w1={style:{"text-align":"left"}},H1=t("code",null,"位运算",-1),v1=t("code",null,"数组",-1),I1=t("code",null,"双指针",-1),E1=t("code",null,"2+",-1),z1={style:{"text-align":"left"}},q1=t("td",{style:{"text-align":"center"}},"835",-1),L1={style:{"text-align":"left"}},C1={href:"https://leetcode.com/problems/image-overlap",target:"_blank",rel:"noopener noreferrer"},P1=t("td",{style:{"text-align":"center"}},null,-1),j1={style:{"text-align":"left"}},O1=t("code",null,"数组",-1),K1=t("code",null,"矩阵",-1),V1={style:{"text-align":"left"}},B1=t("td",{style:{"text-align":"center"}},"840",-1),D1={style:{"text-align":"left"}},N1={href:"https://leetcode.com/problems/magic-squares-in-grid",target:"_blank",rel:"noopener noreferrer"},X1=t("td",{style:{"text-align":"center"}},null,-1),Y1={style:{"text-align":"left"}},Q1=t("code",null,"数组",-1),R1=t("code",null,"哈希表",-1),A1=t("code",null,"数学",-1),T1=t("code",null,"1+",-1),W1={style:{"text-align":"left"}},Z1=t("td",{style:{"text-align":"center"}},"861",-1),F1={style:{"text-align":"left"}},G1={href:"https://leetcode.com/problems/score-after-flipping-matrix",target:"_blank",rel:"noopener noreferrer"},S1=t("td",{style:{"text-align":"center"}},null,-1),U1={style:{"text-align":"left"}},J1=t("code",null,"贪心",-1),$1=t("code",null,"位运算",-1),th=t("code",null,"数组",-1),eh=t("code",null,"1+",-1),lh={style:{"text-align":"left"}},oh=t("td",{style:{"text-align":"center"}},"864",-1),nh={style:{"text-align":"left"}},sh={href:"https://leetcode.com/problems/shortest-path-to-get-all-keys",target:"_blank",rel:"noopener noreferrer"},dh=t("td",{style:{"text-align":"center"}},null,-1),_h={style:{"text-align":"left"}},ih=t("code",null,"位运算",-1),ah=t("code",null,"广度优先搜索",-1),rh=t("code",null,"数组",-1),ch=t("code",null,"1+",-1),hh={style:{"text-align":"left"}},uh=t("td",{style:{"text-align":"center"}},"867",-1),fh={style:{"text-align":"left"}},gh={href:"https://leetcode.com/problems/transpose-matrix",target:"_blank",rel:"noopener noreferrer"},mh=t("td",{style:{"text-align":"center"}},null,-1),yh={style:{"text-align":"left"}},xh=t("code",null,"数组",-1),ph=t("code",null,"矩阵",-1),bh=t("code",null,"模拟",-1),kh={style:{"text-align":"left"}},Mh=t("td",{style:{"text-align":"center"}},"883",-1),wh={style:{"text-align":"left"}},Hh={href:"https://leetcode.com/problems/projection-area-of-3d-shapes",target:"_blank",rel:"noopener noreferrer"},vh=t("td",{style:{"text-align":"center"}},null,-1),Ih={style:{"text-align":"left"}},Eh=t("code",null,"几何",-1),zh=t("code",null,"数组",-1),qh=t("code",null,"数学",-1),Lh=t("code",null,"1+",-1),Ch={style:{"text-align":"left"}},Ph=t("td",{style:{"text-align":"center"}},"885",-1),jh={style:{"text-align":"left"}},Oh={href:"https://leetcode.com/problems/spiral-matrix-iii",target:"_blank",rel:"noopener noreferrer"},Kh=t("td",{style:{"text-align":"center"}},null,-1),Vh={style:{"text-align":"left"}},Bh=t("code",null,"数组",-1),Dh=t("code",null,"矩阵",-1),Nh=t("code",null,"模拟",-1),Xh={style:{"text-align":"left"}},Yh=t("td",{style:{"text-align":"center"}},"892",-1),Qh={style:{"text-align":"left"}},Rh={href:"https://leetcode.com/problems/surface-area-of-3d-shapes",target:"_blank",rel:"noopener noreferrer"},Ah=t("td",{style:{"text-align":"center"}},null,-1),Th={style:{"text-align":"left"}},Wh=t("code",null,"几何",-1),Zh=t("code",null,"数组",-1),Fh=t("code",null,"数学",-1),Gh=t("code",null,"1+",-1),Sh={style:{"text-align":"left"}},Uh=t("td",{style:{"text-align":"center"}},"909",-1),Jh={style:{"text-align":"left"}},$h={href:"https://leetcode.com/problems/snakes-and-ladders",target:"_blank",rel:"noopener noreferrer"},tu={style:{"text-align":"center"}},eu={href:"/problem/0909",target:"_blank",rel:"noopener noreferrer"},lu={style:{"text-align":"left"}},ou=t("code",null,"广度优先搜索",-1),nu=t("code",null,"数组",-1),su=t("code",null,"矩阵",-1),du={style:{"text-align":"left"}},_u=t("td",{style:{"text-align":"center"}},"931",-1),iu={style:{"text-align":"left"}},au={href:"https://leetcode.com/problems/minimum-falling-path-sum",target:"_blank",rel:"noopener noreferrer"},ru={style:{"text-align":"center"}},cu={href:"/problem/0931",target:"_blank",rel:"noopener noreferrer"},hu={style:{"text-align":"left"}},uu=t("code",null,"数组",-1),fu=t("code",null,"动态规划",-1),gu=t("code",null,"矩阵",-1),mu={style:{"text-align":"left"}},yu=t("td",{style:{"text-align":"center"}},"934",-1),xu={style:{"text-align":"left"}},pu={href:"https://leetcode.com/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},bu=t("td",{style:{"text-align":"center"}},null,-1),ku={style:{"text-align":"left"}},Mu=t("code",null,"深度优先搜索",-1),wu=t("code",null,"广度优先搜索",-1),Hu=t("code",null,"数组",-1),vu=t("code",null,"1+",-1),Iu={style:{"text-align":"left"}},Eu=t("td",{style:{"text-align":"center"}},"959",-1),zu={style:{"text-align":"left"}},qu={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},Lu=t("td",{style:{"text-align":"center"}},null,-1),Cu={style:{"text-align":"left"}},Pu=t("code",null,"深度优先搜索",-1),ju=t("code",null,"广度优先搜索",-1),Ou=t("code",null,"并查集",-1),Ku=t("code",null,"3+",-1),Vu={style:{"text-align":"left"}},Bu=t("td",{style:{"text-align":"center"}},"980",-1),Du={style:{"text-align":"left"}},Nu={href:"https://leetcode.com/problems/unique-paths-iii",target:"_blank",rel:"noopener noreferrer"},Xu=t("td",{style:{"text-align":"center"}},null,-1),Yu={style:{"text-align":"left"}},Qu=t("code",null,"位运算",-1),Ru=t("code",null,"数组",-1),Au=t("code",null,"回溯",-1),Tu=t("code",null,"1+",-1),Wu={style:{"text-align":"left"}},Zu=t("td",{style:{"text-align":"center"}},"994",-1),Fu={style:{"text-align":"left"}},Gu={href:"https://leetcode.com/problems/rotting-oranges",target:"_blank",rel:"noopener noreferrer"},Su={style:{"text-align":"center"}},Uu={href:"/problem/0994",target:"_blank",rel:"noopener noreferrer"},Ju={style:{"text-align":"left"}},$u=t("code",null,"广度优先搜索",-1),tf=t("code",null,"数组",-1),ef=t("code",null,"矩阵",-1),lf={style:{"text-align":"left"}},of=t("td",{style:{"text-align":"center"}},"999",-1),nf={style:{"text-align":"left"}},sf={href:"https://leetcode.com/problems/available-captures-for-rook",target:"_blank",rel:"noopener noreferrer"},df=t("td",{style:{"text-align":"center"}},null,-1),_f={style:{"text-align":"left"}},af=t("code",null,"数组",-1),rf=t("code",null,"矩阵",-1),cf=t("code",null,"模拟",-1),hf={style:{"text-align":"left"}},uf=t("td",{style:{"text-align":"center"}},"1020",-1),ff={style:{"text-align":"left"}},gf={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},mf=t("td",{style:{"text-align":"center"}},null,-1),yf={style:{"text-align":"left"}},xf=t("code",null,"深度优先搜索",-1),pf=t("code",null,"广度优先搜索",-1),bf=t("code",null,"并查集",-1),kf=t("code",null,"2+",-1),Mf={style:{"text-align":"left"}},wf=t("td",{style:{"text-align":"center"}},"1030",-1),Hf={style:{"text-align":"left"}},vf={href:"https://leetcode.com/problems/matrix-cells-in-distance-order",target:"_blank",rel:"noopener noreferrer"},If=t("td",{style:{"text-align":"center"}},null,-1),Ef={style:{"text-align":"left"}},zf=t("code",null,"几何",-1),qf=t("code",null,"数组",-1),Lf=t("code",null,"数学",-1),Cf=t("code",null,"2+",-1),Pf={style:{"text-align":"left"}},jf=t("td",{style:{"text-align":"center"}},"1034",-1),Of={style:{"text-align":"left"}},Kf={href:"https://leetcode.com/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},Vf=t("td",{style:{"text-align":"center"}},null,-1),Bf={style:{"text-align":"left"}},Df=t("code",null,"深度优先搜索",-1),Nf=t("code",null,"广度优先搜索",-1),Xf=t("code",null,"数组",-1),Yf=t("code",null,"1+",-1),Qf={style:{"text-align":"left"}},Rf=t("td",{style:{"text-align":"center"}},"1072",-1),Af={style:{"text-align":"left"}},Tf={href:"https://leetcode.com/problems/flip-columns-for-maximum-number-of-equal-rows",target:"_blank",rel:"noopener noreferrer"},Wf=t("td",{style:{"text-align":"center"}},null,-1),Zf={style:{"text-align":"left"}},Ff=t("code",null,"数组",-1),Gf=t("code",null,"哈希表",-1),Sf=t("code",null,"矩阵",-1),Uf={style:{"text-align":"left"}},Jf=t("td",{style:{"text-align":"center"}},"1074",-1),$f={style:{"text-align":"left"}},tg={href:"https://leetcode.com/problems/number-of-submatrices-that-sum-to-target",target:"_blank",rel:"noopener noreferrer"},eg=t("td",{style:{"text-align":"center"}},null,-1),lg={style:{"text-align":"left"}},og=t("code",null,"数组",-1),ng=t("code",null,"哈希表",-1),sg=t("code",null,"矩阵",-1),dg=t("code",null,"1+",-1),_g={style:{"text-align":"left"}},ig=t("td",{style:{"text-align":"center"}},"1091",-1),ag={style:{"text-align":"left"}},rg={href:"https://leetcode.com/problems/shortest-path-in-binary-matrix",target:"_blank",rel:"noopener noreferrer"},cg=t("td",{style:{"text-align":"center"}},null,-1),hg={style:{"text-align":"left"}},ug=t("code",null,"广度优先搜索",-1),fg=t("code",null,"数组",-1),gg=t("code",null,"矩阵",-1),mg={style:{"text-align":"left"}},yg=t("td",{style:{"text-align":"center"}},"1102",-1),xg={style:{"text-align":"left"}},pg={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},bg=t("td",{style:{"text-align":"center"}},null,-1),kg={style:{"text-align":"left"}},Mg=t("code",null,"深度优先搜索",-1),wg=t("code",null,"广度优先搜索",-1),Hg=t("code",null,"并查集",-1),vg=t("code",null,"4+",-1),Ig={style:{"text-align":"left"}},Eg=t("td",{style:{"text-align":"center"}},"1139",-1),zg={style:{"text-align":"left"}},qg={href:"https://leetcode.com/problems/largest-1-bordered-square",target:"_blank",rel:"noopener noreferrer"},Lg=t("td",{style:{"text-align":"center"}},null,-1),Cg={style:{"text-align":"left"}},Pg=t("code",null,"数组",-1),jg=t("code",null,"动态规划",-1),Og=t("code",null,"矩阵",-1),Kg={style:{"text-align":"left"}},Vg=t("td",{style:{"text-align":"center"}},"1162",-1),Bg={style:{"text-align":"left"}},Dg={href:"https://leetcode.com/problems/as-far-from-land-as-possible",target:"_blank",rel:"noopener noreferrer"},Ng=t("td",{style:{"text-align":"center"}},null,-1),Xg={style:{"text-align":"left"}},Yg=t("code",null,"广度优先搜索",-1),Qg=t("code",null,"数组",-1),Rg=t("code",null,"动态规划",-1),Ag=t("code",null,"1+",-1),Tg={style:{"text-align":"left"}},Wg=t("td",{style:{"text-align":"center"}},"1198",-1),Zg={style:{"text-align":"left"}},Fg={href:"https://leetcode.com/problems/find-smallest-common-element-in-all-rows",target:"_blank",rel:"noopener noreferrer"},Gg=t("td",{style:{"text-align":"center"}},null,-1),Sg={style:{"text-align":"left"}},Ug=t("code",null,"数组",-1),Jg=t("code",null,"哈希表",-1),$g=t("code",null,"二分查找",-1),tm=t("code",null,"2+",-1),em={style:{"text-align":"left"}},lm=t("td",{style:{"text-align":"center"}},"1210",-1),om={style:{"text-align":"left"}},nm={href:"https://leetcode.com/problems/minimum-moves-to-reach-target-with-rotations",target:"_blank",rel:"noopener noreferrer"},sm=t("td",{style:{"text-align":"center"}},null,-1),dm={style:{"text-align":"left"}},_m=t("code",null,"广度优先搜索",-1),im=t("code",null,"数组",-1),am=t("code",null,"矩阵",-1),rm={style:{"text-align":"left"}},cm=t("td",{style:{"text-align":"center"}},"1219",-1),hm={style:{"text-align":"left"}},um={href:"https://leetcode.com/problems/path-with-maximum-gold",target:"_blank",rel:"noopener noreferrer"},fm=t("td",{style:{"text-align":"center"}},null,-1),gm={style:{"text-align":"left"}},mm=t("code",null,"数组",-1),ym=t("code",null,"回溯",-1),xm=t("code",null,"矩阵",-1),pm={style:{"text-align":"left"}},bm=t("td",{style:{"text-align":"center"}},"1222",-1),km={style:{"text-align":"left"}},Mm={href:"https://leetcode.com/problems/queens-that-can-attack-the-king",target:"_blank",rel:"noopener noreferrer"},wm=t("td",{style:{"text-align":"center"}},null,-1),Hm={style:{"text-align":"left"}},vm=t("code",null,"数组",-1),Im=t("code",null,"矩阵",-1),Em=t("code",null,"模拟",-1),zm={style:{"text-align":"left"}},qm=t("td",{style:{"text-align":"center"}},"1253",-1),Lm={style:{"text-align":"left"}},Cm={href:"https://leetcode.com/problems/reconstruct-a-2-row-binary-matrix",target:"_blank",rel:"noopener noreferrer"},Pm=t("td",{style:{"text-align":"center"}},null,-1),jm={style:{"text-align":"left"}},Om=t("code",null,"贪心",-1),Km=t("code",null,"数组",-1),Vm=t("code",null,"矩阵",-1),Bm={style:{"text-align":"left"}},Dm=t("td",{style:{"text-align":"center"}},"1254",-1),Nm={style:{"text-align":"left"}},Xm={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},Ym=t("td",{style:{"text-align":"center"}},null,-1),Qm={style:{"text-align":"left"}},Rm=t("code",null,"深度优先搜索",-1),Am=t("code",null,"广度优先搜索",-1),Tm=t("code",null,"并查集",-1),Wm=t("code",null,"2+",-1),Zm={style:{"text-align":"left"}},Fm=t("td",{style:{"text-align":"center"}},"1260",-1),Gm={style:{"text-align":"left"}},Sm={href:"https://leetcode.com/problems/shift-2d-grid",target:"_blank",rel:"noopener noreferrer"},Um=t("td",{style:{"text-align":"center"}},null,-1),Jm={style:{"text-align":"left"}},$m=t("code",null,"数组",-1),ty=t("code",null,"矩阵",-1),ey=t("code",null,"模拟",-1),ly={style:{"text-align":"left"}},oy=t("td",{style:{"text-align":"center"}},"1263",-1),ny={style:{"text-align":"left"}},sy={href:"https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location",target:"_blank",rel:"noopener noreferrer"},dy=t("td",{style:{"text-align":"center"}},null,-1),_y={style:{"text-align":"left"}},iy=t("code",null,"广度优先搜索",-1),ay=t("code",null,"数组",-1),ry=t("code",null,"矩阵",-1),cy=t("code",null,"1+",-1),hy={style:{"text-align":"left"}},uy=t("td",{style:{"text-align":"center"}},"1267",-1),fy={style:{"text-align":"left"}},gy={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},my=t("td",{style:{"text-align":"center"}},null,-1),yy={style:{"text-align":"left"}},xy=t("code",null,"深度优先搜索",-1),py=t("code",null,"广度优先搜索",-1),by=t("code",null,"并查集",-1),ky=t("code",null,"3+",-1),My={style:{"text-align":"left"}},wy=t("td",{style:{"text-align":"center"}},"1275",-1),Hy={style:{"text-align":"left"}},vy={href:"https://leetcode.com/problems/find-winner-on-a-tic-tac-toe-game",target:"_blank",rel:"noopener noreferrer"},Iy=t("td",{style:{"text-align":"center"}},null,-1),Ey={style:{"text-align":"left"}},zy=t("code",null,"数组",-1),qy=t("code",null,"哈希表",-1),Ly=t("code",null,"矩阵",-1),Cy=t("code",null,"1+",-1),Py={style:{"text-align":"left"}},jy=t("td",{style:{"text-align":"center"}},"1277",-1),Oy={style:{"text-align":"left"}},Ky={href:"https://leetcode.com/problems/count-square-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Vy=t("td",{style:{"text-align":"center"}},null,-1),By={style:{"text-align":"left"}},Dy=t("code",null,"数组",-1),Ny=t("code",null,"动态规划",-1),Xy=t("code",null,"矩阵",-1),Yy={style:{"text-align":"left"}},Qy=t("td",{style:{"text-align":"center"}},"1284",-1),Ry={style:{"text-align":"left"}},Ay={href:"https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",target:"_blank",rel:"noopener noreferrer"},Ty=t("td",{style:{"text-align":"center"}},null,-1),Wy={style:{"text-align":"left"}},Zy=t("code",null,"位运算",-1),Fy=t("code",null,"广度优先搜索",-1),Gy=t("code",null,"数组",-1),Sy=t("code",null,"2+",-1),Uy={style:{"text-align":"left"}},Jy=t("td",{style:{"text-align":"center"}},"1289",-1),$y={style:{"text-align":"left"}},t2={href:"https://leetcode.com/problems/minimum-falling-path-sum-ii",target:"_blank",rel:"noopener noreferrer"},e2=t("td",{style:{"text-align":"center"}},null,-1),l2={style:{"text-align":"left"}},o2=t("code",null,"数组",-1),n2=t("code",null,"动态规划",-1),s2=t("code",null,"矩阵",-1),d2={style:{"text-align":"left"}},_2=t("td",{style:{"text-align":"center"}},"1292",-1),i2={style:{"text-align":"left"}},a2={href:"https://leetcode.com/problems/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",target:"_blank",rel:"noopener noreferrer"},r2=t("td",{style:{"text-align":"center"}},null,-1),c2={style:{"text-align":"left"}},h2=t("code",null,"数组",-1),u2=t("code",null,"二分查找",-1),f2=t("code",null,"矩阵",-1),g2=t("code",null,"1+",-1),m2={style:{"text-align":"left"}},y2=t("td",{style:{"text-align":"center"}},"1293",-1),x2={style:{"text-align":"left"}},p2={href:"https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination",target:"_blank",rel:"noopener noreferrer"},b2=t("td",{style:{"text-align":"center"}},null,-1),k2={style:{"text-align":"left"}},M2=t("code",null,"广度优先搜索",-1),w2=t("code",null,"数组",-1),H2=t("code",null,"矩阵",-1),v2={style:{"text-align":"left"}},I2=t("td",{style:{"text-align":"center"}},"1301",-1),E2={style:{"text-align":"left"}},z2={href:"https://leetcode.com/problems/number-of-paths-with-max-score",target:"_blank",rel:"noopener noreferrer"},q2=t("td",{style:{"text-align":"center"}},null,-1),L2={style:{"text-align":"left"}},C2=t("code",null,"数组",-1),P2=t("code",null,"动态规划",-1),j2=t("code",null,"矩阵",-1),O2={style:{"text-align":"left"}},K2=t("td",{style:{"text-align":"center"}},"1314",-1),V2={style:{"text-align":"left"}},B2={href:"https://leetcode.com/problems/matrix-block-sum",target:"_blank",rel:"noopener noreferrer"},D2=t("td",{style:{"text-align":"center"}},null,-1),N2={style:{"text-align":"left"}},X2=t("code",null,"数组",-1),Y2=t("code",null,"矩阵",-1),Q2=t("code",null,"前缀和",-1),R2={style:{"text-align":"left"}},A2=t("td",{style:{"text-align":"center"}},"1329",-1),T2={style:{"text-align":"left"}},W2={href:"https://leetcode.com/problems/sort-the-matrix-diagonally",target:"_blank",rel:"noopener noreferrer"},Z2=t("td",{style:{"text-align":"center"}},null,-1),F2={style:{"text-align":"left"}},G2=t("code",null,"数组",-1),S2=t("code",null,"矩阵",-1),U2=t("code",null,"排序",-1),J2={style:{"text-align":"left"}},$2=t("td",{style:{"text-align":"center"}},"1337",-1),tx={style:{"text-align":"left"}},ex={href:"https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},lx=t("td",{style:{"text-align":"center"}},null,-1),ox={style:{"text-align":"left"}},nx=t("code",null,"数组",-1),sx=t("code",null,"二分查找",-1),dx=t("code",null,"矩阵",-1),_x=t("code",null,"2+",-1),ix={style:{"text-align":"left"}},ax=t("td",{style:{"text-align":"center"}},"1349",-1),rx={style:{"text-align":"left"}},cx={href:"https://leetcode.com/problems/maximum-students-taking-exam",target:"_blank",rel:"noopener noreferrer"},hx=t("td",{style:{"text-align":"center"}},null,-1),ux={style:{"text-align":"left"}},fx=t("code",null,"位运算",-1),gx=t("code",null,"数组",-1),mx=t("code",null,"动态规划",-1),yx=t("code",null,"2+",-1),xx={style:{"text-align":"left"}},px=t("td",{style:{"text-align":"center"}},"1351",-1),bx={style:{"text-align":"left"}},kx={href:"https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix",target:"_blank",rel:"noopener noreferrer"},Mx=t("td",{style:{"text-align":"center"}},null,-1),wx={style:{"text-align":"left"}},Hx=t("code",null,"数组",-1),vx=t("code",null,"二分查找",-1),Ix=t("code",null,"矩阵",-1),Ex={style:{"text-align":"left"}},zx=t("td",{style:{"text-align":"center"}},"1368",-1),qx={style:{"text-align":"left"}},Lx={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Cx=t("td",{style:{"text-align":"center"}},null,-1),Px={style:{"text-align":"left"}},jx=t("code",null,"广度优先搜索",-1),Ox=t("code",null,"图",-1),Kx=t("code",null,"数组",-1),Vx=t("code",null,"3+",-1),Bx={style:{"text-align":"left"}},Dx=t("td",{style:{"text-align":"center"}},"1380",-1),Nx={style:{"text-align":"left"}},Xx={href:"https://leetcode.com/problems/lucky-numbers-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Yx=t("td",{style:{"text-align":"center"}},null,-1),Qx={style:{"text-align":"left"}},Rx=t("code",null,"数组",-1),Ax=t("code",null,"矩阵",-1),Tx={style:{"text-align":"left"}},Wx=t("td",{style:{"text-align":"center"}},"1391",-1),Zx={style:{"text-align":"left"}},Fx={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Gx=t("td",{style:{"text-align":"center"}},null,-1),Sx={style:{"text-align":"left"}},Ux=t("code",null,"深度优先搜索",-1),Jx=t("code",null,"广度优先搜索",-1),$x=t("code",null,"并查集",-1),tp=t("code",null,"2+",-1),ep={style:{"text-align":"left"}},lp=t("td",{style:{"text-align":"center"}},"1428",-1),op={style:{"text-align":"left"}},np={href:"https://leetcode.com/problems/leftmost-column-with-at-least-a-one",target:"_blank",rel:"noopener noreferrer"},sp=t("td",{style:{"text-align":"center"}},null,-1),dp={style:{"text-align":"left"}},_p=t("code",null,"数组",-1),ip=t("code",null,"二分查找",-1),ap=t("code",null,"交互",-1),rp=t("code",null,"1+",-1),cp={style:{"text-align":"left"}},hp=t("td",{style:{"text-align":"center"}},"1439",-1),up={style:{"text-align":"left"}},fp={href:"https://leetcode.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",target:"_blank",rel:"noopener noreferrer"},gp=t("td",{style:{"text-align":"center"}},null,-1),mp={style:{"text-align":"left"}},yp=t("code",null,"数组",-1),xp=t("code",null,"二分查找",-1),pp=t("code",null,"矩阵",-1),bp=t("code",null,"1+",-1),kp={style:{"text-align":"left"}},Mp=t("td",{style:{"text-align":"center"}},"1444",-1),wp={style:{"text-align":"left"}},Hp={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},vp=t("td",{style:{"text-align":"center"}},null,-1),Ip={style:{"text-align":"left"}},Ep=t("code",null,"记忆化搜索",-1),zp=t("code",null,"数组",-1),qp=t("code",null,"动态规划",-1),Lp=t("code",null,"1+",-1),Cp={style:{"text-align":"left"}},Pp=t("td",{style:{"text-align":"center"}},"1463",-1),jp={style:{"text-align":"left"}},Op={href:"https://leetcode.com/problems/cherry-pickup-ii",target:"_blank",rel:"noopener noreferrer"},Kp=t("td",{style:{"text-align":"center"}},null,-1),Vp={style:{"text-align":"left"}},Bp=t("code",null,"数组",-1),Dp=t("code",null,"动态规划",-1),Np=t("code",null,"矩阵",-1),Xp={style:{"text-align":"left"}},Yp=t("td",{style:{"text-align":"center"}},"1476",-1),Qp={style:{"text-align":"left"}},Rp={href:"https://leetcode.com/problems/subrectangle-queries",target:"_blank",rel:"noopener noreferrer"},Ap=t("td",{style:{"text-align":"center"}},null,-1),Tp={style:{"text-align":"left"}},Wp=t("code",null,"设计",-1),Zp=t("code",null,"数组",-1),Fp=t("code",null,"矩阵",-1),Gp={style:{"text-align":"left"}},Sp=t("td",{style:{"text-align":"center"}},"1504",-1),Up={style:{"text-align":"left"}},Jp={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},$p=t("td",{style:{"text-align":"center"}},null,-1),t0={style:{"text-align":"left"}},e0=t("code",null,"栈",-1),l0=t("code",null,"数组",-1),o0=t("code",null,"动态规划",-1),n0=t("code",null,"2+",-1),s0={style:{"text-align":"left"}},d0=t("td",{style:{"text-align":"center"}},"1536",-1),_0={style:{"text-align":"left"}},i0={href:"https://leetcode.com/problems/minimum-swaps-to-arrange-a-binary-grid",target:"_blank",rel:"noopener noreferrer"},a0=t("td",{style:{"text-align":"center"}},null,-1),r0={style:{"text-align":"left"}},c0=t("code",null,"贪心",-1),h0=t("code",null,"数组",-1),u0=t("code",null,"矩阵",-1),f0={style:{"text-align":"left"}},g0=t("td",{style:{"text-align":"center"}},"1559",-1),m0={style:{"text-align":"left"}},y0={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},x0=t("td",{style:{"text-align":"center"}},null,-1),p0={style:{"text-align":"left"}},b0=t("code",null,"深度优先搜索",-1),k0=t("code",null,"广度优先搜索",-1),M0=t("code",null,"并查集",-1),w0=t("code",null,"2+",-1),H0={style:{"text-align":"left"}},v0=t("td",{style:{"text-align":"center"}},"1568",-1),I0={style:{"text-align":"left"}},E0={href:"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},z0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},L0=t("code",null,"深度优先搜索",-1),C0=t("code",null,"广度优先搜索",-1),P0=t("code",null,"数组",-1),j0=t("code",null,"2+",-1),O0={style:{"text-align":"left"}},K0=t("td",{style:{"text-align":"center"}},"1572",-1),V0={style:{"text-align":"left"}},B0={href:"https://leetcode.com/problems/matrix-diagonal-sum",target:"_blank",rel:"noopener noreferrer"},D0=t("td",{style:{"text-align":"center"}},null,-1),N0={style:{"text-align":"left"}},X0=t("code",null,"数组",-1),Y0=t("code",null,"矩阵",-1),Q0={style:{"text-align":"left"}},R0=t("td",{style:{"text-align":"center"}},"1582",-1),A0={style:{"text-align":"left"}},T0={href:"https://leetcode.com/problems/special-positions-in-a-binary-matrix",target:"_blank",rel:"noopener noreferrer"},W0=t("td",{style:{"text-align":"center"}},null,-1),Z0={style:{"text-align":"left"}},F0=t("code",null,"数组",-1),G0=t("code",null,"矩阵",-1),S0={style:{"text-align":"left"}},U0=t("td",{style:{"text-align":"center"}},"1591",-1),J0={style:{"text-align":"left"}},$0={href:"https://leetcode.com/problems/strange-printer-ii",target:"_blank",rel:"noopener noreferrer"},tb=t("td",{style:{"text-align":"center"}},null,-1),eb={style:{"text-align":"left"}},lb=t("code",null,"图",-1),ob=t("code",null,"拓扑排序",-1),nb=t("code",null,"数组",-1),sb=t("code",null,"1+",-1),db={style:{"text-align":"left"}},_b=t("td",{style:{"text-align":"center"}},"1594",-1),ib={style:{"text-align":"left"}},ab={href:"https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},rb=t("td",{style:{"text-align":"center"}},null,-1),cb={style:{"text-align":"left"}},hb=t("code",null,"数组",-1),ub=t("code",null,"动态规划",-1),fb=t("code",null,"矩阵",-1),gb={style:{"text-align":"left"}},mb=t("td",{style:{"text-align":"center"}},"1595",-1),yb={style:{"text-align":"left"}},xb={href:"https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points",target:"_blank",rel:"noopener noreferrer"},pb=t("td",{style:{"text-align":"center"}},null,-1),bb={style:{"text-align":"left"}},kb=t("code",null,"位运算",-1),Mb=t("code",null,"数组",-1),wb=t("code",null,"动态规划",-1),Hb=t("code",null,"2+",-1),vb={style:{"text-align":"left"}},Ib=t("td",{style:{"text-align":"center"}},"1605",-1),Eb={style:{"text-align":"left"}},zb={href:"https://leetcode.com/problems/find-valid-matrix-given-row-and-column-sums",target:"_blank",rel:"noopener noreferrer"},qb=t("td",{style:{"text-align":"center"}},null,-1),Lb={style:{"text-align":"left"}},Cb=t("code",null,"贪心",-1),Pb=t("code",null,"数组",-1),jb=t("code",null,"矩阵",-1),Ob={style:{"text-align":"left"}},Kb=t("td",{style:{"text-align":"center"}},"1631",-1),Vb={style:{"text-align":"left"}},Bb={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},Db=t("td",{style:{"text-align":"center"}},null,-1),Nb={style:{"text-align":"left"}},Xb=t("code",null,"深度优先搜索",-1),Yb=t("code",null,"广度优先搜索",-1),Qb=t("code",null,"并查集",-1),Rb=t("code",null,"4+",-1),Ab={style:{"text-align":"left"}},Tb=t("td",{style:{"text-align":"center"}},"1632",-1),Wb={style:{"text-align":"left"}},Zb={href:"https://leetcode.com/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},Fb=t("td",{style:{"text-align":"center"}},null,-1),Gb={style:{"text-align":"left"}},Sb=t("code",null,"并查集",-1),Ub=t("code",null,"图",-1),Jb=t("code",null,"拓扑排序",-1),$b=t("code",null,"3+",-1),t3={style:{"text-align":"left"}},e3=t("td",{style:{"text-align":"center"}},"1672",-1),l3={style:{"text-align":"left"}},o3={href:"https://leetcode.com/problems/richest-customer-wealth",target:"_blank",rel:"noopener noreferrer"},n3=t("td",{style:{"text-align":"center"}},null,-1),s3={style:{"text-align":"left"}},d3=t("code",null,"数组",-1),_3=t("code",null,"矩阵",-1),i3={style:{"text-align":"left"}},a3=t("td",{style:{"text-align":"center"}},"1706",-1),r3={style:{"text-align":"left"}},c3={href:"https://leetcode.com/problems/where-will-the-ball-fall",target:"_blank",rel:"noopener noreferrer"},h3=t("td",{style:{"text-align":"center"}},null,-1),u3={style:{"text-align":"left"}},f3=t("code",null,"数组",-1),g3=t("code",null,"矩阵",-1),m3=t("code",null,"模拟",-1),y3={style:{"text-align":"left"}},x3=t("td",{style:{"text-align":"center"}},"1727",-1),p3={style:{"text-align":"left"}},b3={href:"https://leetcode.com/problems/largest-submatrix-with-rearrangements",target:"_blank",rel:"noopener noreferrer"},k3=t("td",{style:{"text-align":"center"}},null,-1),M3={style:{"text-align":"left"}},w3=t("code",null,"贪心",-1),H3=t("code",null,"数组",-1),v3=t("code",null,"矩阵",-1),I3=t("code",null,"1+",-1),E3={style:{"text-align":"left"}},z3=t("td",{style:{"text-align":"center"}},"1728",-1),q3={style:{"text-align":"left"}},L3={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},C3=t("td",{style:{"text-align":"center"}},null,-1),P3={style:{"text-align":"left"}},j3=t("code",null,"图",-1),O3=t("code",null,"拓扑排序",-1),K3=t("code",null,"记忆化搜索",-1),V3=t("code",null,"5+",-1),B3={style:{"text-align":"left"}},D3=t("td",{style:{"text-align":"center"}},"1730",-1),N3={style:{"text-align":"left"}},X3={href:"https://leetcode.com/problems/shortest-path-to-get-food",target:"_blank",rel:"noopener noreferrer"},Y3=t("td",{style:{"text-align":"center"}},null,-1),Q3={style:{"text-align":"left"}},R3=t("code",null,"广度优先搜索",-1),A3=t("code",null,"数组",-1),T3=t("code",null,"矩阵",-1),W3={style:{"text-align":"left"}},Z3=t("td",{style:{"text-align":"center"}},"1738",-1),F3={style:{"text-align":"left"}},G3={href:"https://leetcode.com/problems/find-kth-largest-xor-coordinate-value",target:"_blank",rel:"noopener noreferrer"},S3=t("td",{style:{"text-align":"center"}},null,-1),U3={style:{"text-align":"left"}},J3=t("code",null,"位运算",-1),$3=t("code",null,"数组",-1),t4=t("code",null,"分治",-1),e4=t("code",null,"5+",-1),l4={style:{"text-align":"left"}},o4=t("td",{style:{"text-align":"center"}},"1765",-1),n4={style:{"text-align":"left"}},s4={href:"https://leetcode.com/problems/map-of-highest-peak",target:"_blank",rel:"noopener noreferrer"},d4=t("td",{style:{"text-align":"center"}},null,-1),_4={style:{"text-align":"left"}},i4=t("code",null,"广度优先搜索",-1),a4=t("code",null,"数组",-1),r4=t("code",null,"矩阵",-1),c4={style:{"text-align":"left"}},h4=t("td",{style:{"text-align":"center"}},"1820",-1),u4={style:{"text-align":"left"}},f4={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},g4=t("td",{style:{"text-align":"center"}},null,-1),m4={style:{"text-align":"left"}},y4=t("code",null,"深度优先搜索",-1),x4=t("code",null,"图",-1),p4=t("code",null,"数组",-1),b4=t("code",null,"1+",-1),k4={style:{"text-align":"left"}},M4=t("td",{style:{"text-align":"center"}},"1861",-1),w4={style:{"text-align":"left"}},H4={href:"https://leetcode.com/problems/rotating-the-box",target:"_blank",rel:"noopener noreferrer"},v4=t("td",{style:{"text-align":"center"}},null,-1),I4={style:{"text-align":"left"}},E4=t("code",null,"数组",-1),z4=t("code",null,"双指针",-1),q4=t("code",null,"矩阵",-1),L4={style:{"text-align":"left"}},C4=t("td",{style:{"text-align":"center"}},"1878",-1),P4={style:{"text-align":"left"}},j4={href:"https://leetcode.com/problems/get-biggest-three-rhombus-sums-in-a-grid",target:"_blank",rel:"noopener noreferrer"},O4=t("td",{style:{"text-align":"center"}},null,-1),K4={style:{"text-align":"left"}},V4=t("code",null,"数组",-1),B4=t("code",null,"数学",-1),D4=t("code",null,"矩阵",-1),N4=t("code",null,"3+",-1),X4={style:{"text-align":"left"}},Y4=t("td",{style:{"text-align":"center"}},"1886",-1),Q4={style:{"text-align":"left"}},R4={href:"https://leetcode.com/problems/determine-whether-matrix-can-be-obtained-by-rotation",target:"_blank",rel:"noopener noreferrer"},A4=t("td",{style:{"text-align":"center"}},null,-1),T4={style:{"text-align":"left"}},W4=t("code",null,"数组",-1),Z4=t("code",null,"矩阵",-1),F4={style:{"text-align":"left"}},G4=t("td",{style:{"text-align":"center"}},"1895",-1),S4={style:{"text-align":"left"}},U4={href:"https://leetcode.com/problems/largest-magic-square",target:"_blank",rel:"noopener noreferrer"},J4=t("td",{style:{"text-align":"center"}},null,-1),$4={style:{"text-align":"left"}},t8=t("code",null,"数组",-1),e8=t("code",null,"矩阵",-1),l8=t("code",null,"前缀和",-1),o8={style:{"text-align":"left"}},n8=t("td",{style:{"text-align":"center"}},"1901",-1),s8={style:{"text-align":"left"}},d8={href:"https://leetcode.com/problems/find-a-peak-element-ii",target:"_blank",rel:"noopener noreferrer"},_8=t("td",{style:{"text-align":"center"}},null,-1),i8={style:{"text-align":"left"}},a8=t("code",null,"数组",-1),r8=t("code",null,"二分查找",-1),c8=t("code",null,"矩阵",-1),h8={style:{"text-align":"left"}},u8=t("td",{style:{"text-align":"center"}},"1905",-1),f8={style:{"text-align":"left"}},g8={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},m8=t("td",{style:{"text-align":"center"}},null,-1),y8={style:{"text-align":"left"}},x8=t("code",null,"深度优先搜索",-1),p8=t("code",null,"广度优先搜索",-1),b8=t("code",null,"并查集",-1),k8=t("code",null,"2+",-1),M8={style:{"text-align":"left"}},w8=t("td",{style:{"text-align":"center"}},"1914",-1),H8={style:{"text-align":"left"}},v8={href:"https://leetcode.com/problems/cyclically-rotating-a-grid",target:"_blank",rel:"noopener noreferrer"},I8=t("td",{style:{"text-align":"center"}},null,-1),E8={style:{"text-align":"left"}},z8=t("code",null,"数组",-1),q8=t("code",null,"矩阵",-1),L8=t("code",null,"模拟",-1),C8={style:{"text-align":"left"}},P8=t("td",{style:{"text-align":"center"}},"1926",-1),j8={style:{"text-align":"left"}},O8={href:"https://leetcode.com/problems/nearest-exit-from-entrance-in-maze",target:"_blank",rel:"noopener noreferrer"},K8=t("td",{style:{"text-align":"center"}},null,-1),V8={style:{"text-align":"left"}},B8=t("code",null,"广度优先搜索",-1),D8=t("code",null,"数组",-1),N8=t("code",null,"矩阵",-1),X8={style:{"text-align":"left"}},Y8=t("td",{style:{"text-align":"center"}},"1937",-1),Q8={style:{"text-align":"left"}},R8={href:"https://leetcode.com/problems/maximum-number-of-points-with-cost",target:"_blank",rel:"noopener noreferrer"},A8=t("td",{style:{"text-align":"center"}},null,-1),T8={style:{"text-align":"left"}},W8=t("code",null,"数组",-1),Z8=t("code",null,"动态规划",-1),F8=t("code",null,"矩阵",-1),G8={style:{"text-align":"left"}},S8=t("td",{style:{"text-align":"center"}},"1958",-1),U8={style:{"text-align":"left"}},J8={href:"https://leetcode.com/problems/check-if-move-is-legal",target:"_blank",rel:"noopener noreferrer"},$8=t("td",{style:{"text-align":"center"}},null,-1),t5={style:{"text-align":"left"}},e5=t("code",null,"数组",-1),l5=t("code",null,"枚举",-1),o5=t("code",null,"矩阵",-1),n5={style:{"text-align":"left"}},s5=t("td",{style:{"text-align":"center"}},"1970",-1),d5={style:{"text-align":"left"}},_5={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},i5=t("td",{style:{"text-align":"center"}},null,-1),a5={style:{"text-align":"left"}},r5=t("code",null,"深度优先搜索",-1),c5=t("code",null,"广度优先搜索",-1),h5=t("code",null,"并查集",-1),u5=t("code",null,"3+",-1),f5={style:{"text-align":"left"}},g5=t("td",{style:{"text-align":"center"}},"1975",-1),m5={style:{"text-align":"left"}},y5={href:"https://leetcode.com/problems/maximum-matrix-sum",target:"_blank",rel:"noopener noreferrer"},x5=t("td",{style:{"text-align":"center"}},null,-1),p5={style:{"text-align":"left"}},b5=t("code",null,"贪心",-1),k5=t("code",null,"数组",-1),M5=t("code",null,"矩阵",-1),w5={style:{"text-align":"left"}},H5=t("td",{style:{"text-align":"center"}},"1981",-1),v5={style:{"text-align":"left"}},I5={href:"https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements",target:"_blank",rel:"noopener noreferrer"},E5=t("td",{style:{"text-align":"center"}},null,-1),z5={style:{"text-align":"left"}},q5=t("code",null,"数组",-1),L5=t("code",null,"动态规划",-1),C5=t("code",null,"矩阵",-1),P5={style:{"text-align":"left"}},j5=t("td",{style:{"text-align":"center"}},"1992",-1),O5={style:{"text-align":"left"}},K5={href:"https://leetcode.com/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},V5=t("td",{style:{"text-align":"center"}},null,-1),B5={style:{"text-align":"left"}},D5=t("code",null,"深度优先搜索",-1),N5=t("code",null,"广度优先搜索",-1),X5=t("code",null,"数组",-1),Y5=t("code",null,"1+",-1),Q5={style:{"text-align":"left"}},R5=t("td",{style:{"text-align":"center"}},"2017",-1),A5={style:{"text-align":"left"}},T5={href:"https://leetcode.com/problems/grid-game",target:"_blank",rel:"noopener noreferrer"},W5=t("td",{style:{"text-align":"center"}},null,-1),Z5={style:{"text-align":"left"}},F5=t("code",null,"数组",-1),G5=t("code",null,"矩阵",-1),S5=t("code",null,"前缀和",-1),U5={style:{"text-align":"left"}},J5=t("td",{style:{"text-align":"center"}},"2018",-1),$5={style:{"text-align":"left"}},t6={href:"https://leetcode.com/problems/check-if-word-can-be-placed-in-crossword",target:"_blank",rel:"noopener noreferrer"},e6=t("td",{style:{"text-align":"center"}},null,-1),l6={style:{"text-align":"left"}},o6=t("code",null,"数组",-1),n6=t("code",null,"枚举",-1),s6=t("code",null,"矩阵",-1),d6={style:{"text-align":"left"}},_6=t("td",{style:{"text-align":"center"}},"2022",-1),i6={style:{"text-align":"left"}},a6={href:"https://leetcode.com/problems/convert-1d-array-into-2d-array",target:"_blank",rel:"noopener noreferrer"},r6=t("td",{style:{"text-align":"center"}},null,-1),c6={style:{"text-align":"left"}},h6=t("code",null,"数组",-1),u6=t("code",null,"矩阵",-1),f6=t("code",null,"模拟",-1),g6={style:{"text-align":"left"}},m6=t("td",{style:{"text-align":"center"}},"2033",-1),y6={style:{"text-align":"left"}},x6={href:"https://leetcode.com/problems/minimum-operations-to-make-a-uni-value-grid",target:"_blank",rel:"noopener noreferrer"},p6=t("td",{style:{"text-align":"center"}},null,-1),b6={style:{"text-align":"left"}},k6=t("code",null,"数组",-1),M6=t("code",null,"数学",-1),w6=t("code",null,"矩阵",-1),H6=t("code",null,"1+",-1),v6={style:{"text-align":"left"}},I6=t("td",{style:{"text-align":"center"}},"2061",-1),E6={style:{"text-align":"left"}},z6={href:"https://leetcode.com/problems/number-of-spaces-cleaning-robot-cleaned",target:"_blank",rel:"noopener noreferrer"},q6=t("td",{style:{"text-align":"center"}},null,-1),L6={style:{"text-align":"left"}},C6=t("code",null,"数组",-1),P6=t("code",null,"矩阵",-1),j6=t("code",null,"模拟",-1),O6={style:{"text-align":"left"}},K6=t("td",{style:{"text-align":"center"}},"2088",-1),V6={style:{"text-align":"left"}},B6={href:"https://leetcode.com/problems/count-fertile-pyramids-in-a-land",target:"_blank",rel:"noopener noreferrer"},D6=t("td",{style:{"text-align":"center"}},null,-1),N6={style:{"text-align":"left"}},X6=t("code",null,"数组",-1),Y6=t("code",null,"动态规划",-1),Q6=t("code",null,"矩阵",-1),R6={style:{"text-align":"left"}},A6=t("td",{style:{"text-align":"center"}},"2123",-1),T6={style:{"text-align":"left"}},W6={href:"https://leetcode.com/problems/minimum-operations-to-remove-adjacent-ones-in-matrix",target:"_blank",rel:"noopener noreferrer"},Z6=t("td",{style:{"text-align":"center"}},null,-1),F6={style:{"text-align":"left"}},G6=t("code",null,"图",-1),S6=t("code",null,"数组",-1),U6=t("code",null,"矩阵",-1),J6={style:{"text-align":"left"}},$6=t("td",{style:{"text-align":"center"}},"2125",-1),t7={style:{"text-align":"left"}},e7={href:"https://leetcode.com/problems/number-of-laser-beams-in-a-bank",target:"_blank",rel:"noopener noreferrer"},l7=t("td",{style:{"text-align":"center"}},null,-1),o7={style:{"text-align":"left"}},n7=t("code",null,"数组",-1),s7=t("code",null,"数学",-1),d7=t("code",null,"字符串",-1),_7=t("code",null,"1+",-1),i7={style:{"text-align":"left"}},a7=t("td",{style:{"text-align":"center"}},"2128",-1),r7={style:{"text-align":"left"}},c7={href:"https://leetcode.com/problems/remove-all-ones-with-row-and-column-flips",target:"_blank",rel:"noopener noreferrer"},h7=t("td",{style:{"text-align":"center"}},null,-1),u7={style:{"text-align":"left"}},f7=t("code",null,"位运算",-1),g7=t("code",null,"数组",-1),m7=t("code",null,"数学",-1),y7=t("code",null,"1+",-1),x7={style:{"text-align":"left"}},p7=t("td",{style:{"text-align":"center"}},"2132",-1),b7={style:{"text-align":"left"}},k7={href:"https://leetcode.com/problems/stamping-the-grid",target:"_blank",rel:"noopener noreferrer"},M7=t("td",{style:{"text-align":"center"}},null,-1),w7={style:{"text-align":"left"}},H7=t("code",null,"贪心",-1),v7=t("code",null,"数组",-1),I7=t("code",null,"矩阵",-1),E7=t("code",null,"1+",-1),z7={style:{"text-align":"left"}},q7=t("td",{style:{"text-align":"center"}},"2133",-1),L7={style:{"text-align":"left"}},C7={href:"https://leetcode.com/problems/check-if-every-row-and-column-contains-all-numbers",target:"_blank",rel:"noopener noreferrer"},P7=t("td",{style:{"text-align":"center"}},null,-1),j7={style:{"text-align":"left"}},O7=t("code",null,"数组",-1),K7=t("code",null,"哈希表",-1),V7=t("code",null,"矩阵",-1),B7={style:{"text-align":"left"}},D7=t("td",{style:{"text-align":"center"}},"2146",-1),N7={style:{"text-align":"left"}},X7={href:"https://leetcode.com/problems/k-highest-ranked-items-within-a-price-range",target:"_blank",rel:"noopener noreferrer"},Y7=t("td",{style:{"text-align":"center"}},null,-1),Q7={style:{"text-align":"left"}},R7=t("code",null,"广度优先搜索",-1),A7=t("code",null,"数组",-1),T7=t("code",null,"矩阵",-1),W7=t("code",null,"2+",-1),Z7={style:{"text-align":"left"}},F7=t("td",{style:{"text-align":"center"}},"2174",-1),G7={style:{"text-align":"left"}},S7={href:"https://leetcode.com/problems/remove-all-ones-with-row-and-column-flips-ii",target:"_blank",rel:"noopener noreferrer"},U7=t("td",{style:{"text-align":"center"}},null,-1),J7={style:{"text-align":"left"}},$7=t("code",null,"位运算",-1),t9=t("code",null,"广度优先搜索",-1),e9=t("code",null,"数组",-1),l9=t("code",null,"1+",-1),o9={style:{"text-align":"left"}},n9=t("td",{style:{"text-align":"center"}},"2245",-1),s9={style:{"text-align":"left"}},d9={href:"https://leetcode.com/problems/maximum-trailing-zeros-in-a-cornered-path",target:"_blank",rel:"noopener noreferrer"},_9=t("td",{style:{"text-align":"center"}},null,-1),i9={style:{"text-align":"left"}},a9=t("code",null,"数组",-1),r9=t("code",null,"矩阵",-1),c9=t("code",null,"前缀和",-1),h9={style:{"text-align":"left"}},u9=t("td",{style:{"text-align":"center"}},"2257",-1),f9={style:{"text-align":"left"}},g9={href:"https://leetcode.com/problems/count-unguarded-cells-in-the-grid",target:"_blank",rel:"noopener noreferrer"},m9=t("td",{style:{"text-align":"center"}},null,-1),y9={style:{"text-align":"left"}},x9=t("code",null,"数组",-1),p9=t("code",null,"矩阵",-1),b9=t("code",null,"模拟",-1),k9={style:{"text-align":"left"}},M9=t("td",{style:{"text-align":"center"}},"2258",-1),w9={style:{"text-align":"left"}},H9={href:"https://leetcode.com/problems/escape-the-spreading-fire",target:"_blank",rel:"noopener noreferrer"},v9=t("td",{style:{"text-align":"center"}},null,-1),I9={style:{"text-align":"left"}},E9=t("code",null,"广度优先搜索",-1),z9=t("code",null,"数组",-1),q9=t("code",null,"二分查找",-1),L9=t("code",null,"1+",-1),C9={style:{"text-align":"left"}},P9=t("td",{style:{"text-align":"center"}},"2267",-1),j9={style:{"text-align":"left"}},O9={href:"https://leetcode.com/problems/check-if-there-is-a-valid-parentheses-string-path",target:"_blank",rel:"noopener noreferrer"},K9=t("td",{style:{"text-align":"center"}},null,-1),V9={style:{"text-align":"left"}},B9=t("code",null,"数组",-1),D9=t("code",null,"动态规划",-1),N9=t("code",null,"矩阵",-1),X9={style:{"text-align":"left"}},Y9=t("td",{style:{"text-align":"center"}},"2282",-1),Q9={style:{"text-align":"left"}},R9={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},A9=t("td",{style:{"text-align":"center"}},null,-1),T9={style:{"text-align":"left"}},W9=t("code",null,"栈",-1),Z9=t("code",null,"数组",-1),F9=t("code",null,"矩阵",-1),G9=t("code",null,"1+",-1),S9={style:{"text-align":"left"}},U9=t("td",{style:{"text-align":"center"}},"2290",-1),J9={style:{"text-align":"left"}},$9={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},tk=t("td",{style:{"text-align":"center"}},null,-1),ek={style:{"text-align":"left"}},lk=t("code",null,"广度优先搜索",-1),ok=t("code",null,"图",-1),nk=t("code",null,"数组",-1),sk=t("code",null,"3+",-1),dk={style:{"text-align":"left"}},_k=t("td",{style:{"text-align":"center"}},"2304",-1),ik={style:{"text-align":"left"}},ak={href:"https://leetcode.com/problems/minimum-path-cost-in-a-grid",target:"_blank",rel:"noopener noreferrer"},rk=t("td",{style:{"text-align":"center"}},null,-1),ck={style:{"text-align":"left"}},hk=t("code",null,"数组",-1),uk=t("code",null,"动态规划",-1),fk=t("code",null,"矩阵",-1),gk={style:{"text-align":"left"}},mk=t("td",{style:{"text-align":"center"}},"2319",-1),yk={style:{"text-align":"left"}},xk={href:"https://leetcode.com/problems/check-if-matrix-is-x-matrix",target:"_blank",rel:"noopener noreferrer"},pk=t("td",{style:{"text-align":"center"}},null,-1),bk={style:{"text-align":"left"}},kk=t("code",null,"数组",-1),Mk=t("code",null,"矩阵",-1),wk={style:{"text-align":"left"}},Hk=t("td",{style:{"text-align":"center"}},"2326",-1),vk={style:{"text-align":"left"}},Ik={href:"https://leetcode.com/problems/spiral-matrix-iv",target:"_blank",rel:"noopener noreferrer"},Ek=t("td",{style:{"text-align":"center"}},null,-1),zk={style:{"text-align":"left"}},qk=t("code",null,"数组",-1),Lk=t("code",null,"链表",-1),Ck=t("code",null,"矩阵",-1),Pk=t("code",null,"1+",-1),jk={style:{"text-align":"left"}},Ok=t("td",{style:{"text-align":"center"}},"2328",-1),Kk={style:{"text-align":"left"}},Vk={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Bk=t("td",{style:{"text-align":"center"}},null,-1),Dk={style:{"text-align":"left"}},Nk=t("code",null,"深度优先搜索",-1),Xk=t("code",null,"广度优先搜索",-1),Yk=t("code",null,"图",-1),Qk=t("code",null,"5+",-1),Rk={style:{"text-align":"left"}},Ak=t("td",{style:{"text-align":"center"}},"2352",-1),Tk={style:{"text-align":"left"}},Wk={href:"https://leetcode.com/problems/equal-row-and-column-pairs",target:"_blank",rel:"noopener noreferrer"},Zk=t("td",{style:{"text-align":"center"}},null,-1),Fk={style:{"text-align":"left"}},Gk=t("code",null,"数组",-1),Sk=t("code",null,"哈希表",-1),Uk=t("code",null,"矩阵",-1),Jk=t("code",null,"1+",-1),$k={style:{"text-align":"left"}},tM=t("td",{style:{"text-align":"center"}},"2371",-1),eM={style:{"text-align":"left"}},lM={href:"https://leetcode.com/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},oM=t("td",{style:{"text-align":"center"}},null,-1),nM={style:{"text-align":"left"}},sM=t("code",null,"并查集",-1),dM=t("code",null,"图",-1),_M=t("code",null,"拓扑排序",-1),iM=t("code",null,"3+",-1),aM={style:{"text-align":"left"}},rM=t("td",{style:{"text-align":"center"}},"2373",-1),cM={style:{"text-align":"left"}},hM={href:"https://leetcode.com/problems/largest-local-values-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},uM=t("td",{style:{"text-align":"center"}},null,-1),fM={style:{"text-align":"left"}},gM=t("code",null,"数组",-1),mM=t("code",null,"矩阵",-1),yM={style:{"text-align":"left"}},xM=t("td",{style:{"text-align":"center"}},"2387",-1),pM={style:{"text-align":"left"}},bM={href:"https://leetcode.com/problems/median-of-a-row-wise-sorted-matrix",target:"_blank",rel:"noopener noreferrer"},kM=t("td",{style:{"text-align":"center"}},null,-1),MM={style:{"text-align":"left"}},wM=t("code",null,"数组",-1),HM=t("code",null,"二分查找",-1),vM=t("code",null,"矩阵",-1),IM={style:{"text-align":"left"}},EM=t("td",{style:{"text-align":"center"}},"2392",-1),zM={style:{"text-align":"left"}},qM={href:"https://leetcode.com/problems/build-a-matrix-with-conditions",target:"_blank",rel:"noopener noreferrer"},LM=t("td",{style:{"text-align":"center"}},null,-1),CM={style:{"text-align":"left"}},PM=t("code",null,"图",-1),jM=t("code",null,"拓扑排序",-1),OM=t("code",null,"数组",-1),KM=t("code",null,"1+",-1),VM={style:{"text-align":"left"}},BM=t("td",{style:{"text-align":"center"}},"2397",-1),DM={style:{"text-align":"left"}},NM={href:"https://leetcode.com/problems/maximum-rows-covered-by-columns",target:"_blank",rel:"noopener noreferrer"},XM=t("td",{style:{"text-align":"center"}},null,-1),YM={style:{"text-align":"left"}},QM=t("code",null,"位运算",-1),RM=t("code",null,"数组",-1),AM=t("code",null,"回溯",-1),TM=t("code",null,"2+",-1),WM={style:{"text-align":"left"}},ZM=t("td",{style:{"text-align":"center"}},"2428",-1),FM={style:{"text-align":"left"}},GM={href:"https://leetcode.com/problems/maximum-sum-of-an-hourglass",target:"_blank",rel:"noopener noreferrer"},SM=t("td",{style:{"text-align":"center"}},null,-1),UM={style:{"text-align":"left"}},JM=t("code",null,"数组",-1),$M=t("code",null,"矩阵",-1),tw=t("code",null,"前缀和",-1),ew={style:{"text-align":"left"}},lw=t("td",{style:{"text-align":"center"}},"2435",-1),ow={style:{"text-align":"left"}},nw={href:"https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},sw=t("td",{style:{"text-align":"center"}},null,-1),dw={style:{"text-align":"left"}},_w=t("code",null,"数组",-1),iw=t("code",null,"动态规划",-1),aw=t("code",null,"矩阵",-1),rw={style:{"text-align":"left"}},cw=t("td",{style:{"text-align":"center"}},"2482",-1),hw={style:{"text-align":"left"}},uw={href:"https://leetcode.com/problems/difference-between-ones-and-zeros-in-row-and-column",target:"_blank",rel:"noopener noreferrer"},fw=t("td",{style:{"text-align":"center"}},null,-1),gw={style:{"text-align":"left"}},mw=t("code",null,"数组",-1),yw=t("code",null,"矩阵",-1),xw=t("code",null,"模拟",-1),pw={style:{"text-align":"left"}},bw=t("td",{style:{"text-align":"center"}},"2500",-1),kw={style:{"text-align":"left"}},Mw={href:"https://leetcode.com/problems/delete-greatest-value-in-each-row",target:"_blank",rel:"noopener noreferrer"},ww=t("td",{style:{"text-align":"center"}},null,-1),Hw={style:{"text-align":"left"}},vw=t("code",null,"数组",-1),Iw=t("code",null,"矩阵",-1),Ew=t("code",null,"排序",-1),zw=t("code",null,"2+",-1),qw={style:{"text-align":"left"}},Lw=t("td",{style:{"text-align":"center"}},"2503",-1),Cw={style:{"text-align":"left"}},Pw={href:"https://leetcode.com/problems/maximum-number-of-points-from-grid-queries",target:"_blank",rel:"noopener noreferrer"},jw=t("td",{style:{"text-align":"center"}},null,-1),Ow={style:{"text-align":"left"}},Kw=t("code",null,"广度优先搜索",-1),Vw=t("code",null,"并查集",-1),Bw=t("code",null,"数组",-1),Dw=t("code",null,"4+",-1),Nw={style:{"text-align":"left"}},Xw=t("td",{style:{"text-align":"center"}},"2510",-1),Yw={style:{"text-align":"left"}},Qw={href:"https://leetcode.com/problems/check-if-there-is-a-path-with-equal-number-of-0s-and-1s",target:"_blank",rel:"noopener noreferrer"},Rw=t("td",{style:{"text-align":"center"}},null,-1),Aw={style:{"text-align":"left"}},Tw=t("code",null,"数组",-1),Ww=t("code",null,"动态规划",-1),Zw=t("code",null,"矩阵",-1),Fw={style:{"text-align":"left"}},Gw=t("td",{style:{"text-align":"center"}},"2536",-1),Sw={style:{"text-align":"left"}},Uw={href:"https://leetcode.com/problems/increment-submatrices-by-one",target:"_blank",rel:"noopener noreferrer"},Jw=t("td",{style:{"text-align":"center"}},null,-1),$w={style:{"text-align":"left"}},tH=t("code",null,"数组",-1),eH=t("code",null,"矩阵",-1),lH=t("code",null,"前缀和",-1),oH={style:{"text-align":"left"}},nH=t("td",{style:{"text-align":"center"}},"2545",-1),sH={style:{"text-align":"left"}},dH={href:"https://leetcode.com/problems/sort-the-students-by-their-kth-score",target:"_blank",rel:"noopener noreferrer"},_H=t("td",{style:{"text-align":"center"}},null,-1),iH={style:{"text-align":"left"}},aH=t("code",null,"数组",-1),rH=t("code",null,"矩阵",-1),cH=t("code",null,"排序",-1),hH={style:{"text-align":"left"}},uH=t("td",{style:{"text-align":"center"}},"2556",-1),fH={style:{"text-align":"left"}},gH={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},mH=t("td",{style:{"text-align":"center"}},null,-1),yH={style:{"text-align":"left"}},xH=t("code",null,"深度优先搜索",-1),pH=t("code",null,"广度优先搜索",-1),bH=t("code",null,"数组",-1),kH=t("code",null,"2+",-1),MH={style:{"text-align":"left"}},wH=t("td",{style:{"text-align":"center"}},"2573",-1),HH={style:{"text-align":"left"}},vH={href:"https://leetcode.com/problems/find-the-string-with-lcp",target:"_blank",rel:"noopener noreferrer"},IH=t("td",{style:{"text-align":"center"}},null,-1),EH={style:{"text-align":"left"}},zH=t("code",null,"贪心",-1),qH=t("code",null,"并查集",-1),LH=t("code",null,"数组",-1),CH=t("code",null,"3+",-1),PH={style:{"text-align":"left"}},jH=t("td",{style:{"text-align":"center"}},"2577",-1),OH={style:{"text-align":"left"}},KH={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},VH=t("td",{style:{"text-align":"center"}},null,-1),BH={style:{"text-align":"left"}},DH=t("code",null,"广度优先搜索",-1),NH=t("code",null,"图",-1),XH=t("code",null,"数组",-1),YH=t("code",null,"3+",-1),QH={style:{"text-align":"left"}},RH=t("td",{style:{"text-align":"center"}},"2596",-1),AH={style:{"text-align":"left"}},TH={href:"https://leetcode.com/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},WH=t("td",{style:{"text-align":"center"}},null,-1),ZH={style:{"text-align":"left"}},FH=t("code",null,"深度优先搜索",-1),GH=t("code",null,"广度优先搜索",-1),SH=t("code",null,"数组",-1),UH=t("code",null,"2+",-1),JH={style:{"text-align":"left"}},$H=t("td",{style:{"text-align":"center"}},"2614",-1),tv={style:{"text-align":"left"}},ev={href:"https://leetcode.com/problems/prime-in-diagonal",target:"_blank",rel:"noopener noreferrer"},lv=t("td",{style:{"text-align":"center"}},null,-1),ov={style:{"text-align":"left"}},nv=t("code",null,"数组",-1),sv=t("code",null,"数学",-1),dv=t("code",null,"矩阵",-1),_v=t("code",null,"1+",-1),iv={style:{"text-align":"left"}},av=t("td",{style:{"text-align":"center"}},"2617",-1),rv={style:{"text-align":"left"}},cv={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},hv=t("td",{style:{"text-align":"center"}},null,-1),uv={style:{"text-align":"left"}},fv=t("code",null,"栈",-1),gv=t("code",null,"广度优先搜索",-1),mv=t("code",null,"并查集",-1),yv=t("code",null,"5+",-1),xv={style:{"text-align":"left"}},pv=t("td",{style:{"text-align":"center"}},"2639",-1),bv={style:{"text-align":"left"}},kv={href:"https://leetcode.com/problems/find-the-width-of-columns-of-a-grid",target:"_blank",rel:"noopener noreferrer"},Mv=t("td",{style:{"text-align":"center"}},null,-1),wv={style:{"text-align":"left"}},Hv=t("code",null,"数组",-1),vv=t("code",null,"矩阵",-1),Iv={style:{"text-align":"left"}},Ev=t("td",{style:{"text-align":"center"}},"2643",-1),zv={style:{"text-align":"left"}},qv={href:"https://leetcode.com/problems/row-with-maximum-ones",target:"_blank",rel:"noopener noreferrer"},Lv=t("td",{style:{"text-align":"center"}},null,-1),Cv={style:{"text-align":"left"}},Pv=t("code",null,"数组",-1),jv=t("code",null,"矩阵",-1),Ov={style:{"text-align":"left"}},Kv=t("td",{style:{"text-align":"center"}},"2658",-1),Vv={style:{"text-align":"left"}},Bv={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Dv=t("td",{style:{"text-align":"center"}},null,-1),Nv={style:{"text-align":"left"}},Xv=t("code",null,"深度优先搜索",-1),Yv=t("code",null,"广度优先搜索",-1),Qv=t("code",null,"并查集",-1),Rv=t("code",null,"2+",-1),Av={style:{"text-align":"left"}},Tv=t("td",{style:{"text-align":"center"}},"2661",-1),Wv={style:{"text-align":"left"}},Zv={href:"https://leetcode.com/problems/first-completely-painted-row-or-column",target:"_blank",rel:"noopener noreferrer"},Fv=t("td",{style:{"text-align":"center"}},null,-1),Gv={style:{"text-align":"left"}},Sv=t("code",null,"数组",-1),Uv=t("code",null,"哈希表",-1),Jv=t("code",null,"矩阵",-1),$v={style:{"text-align":"left"}},tI=t("td",{style:{"text-align":"center"}},"2664",-1),eI={style:{"text-align":"left"}},lI={href:"https://leetcode.com/problems/the-knights-tour",target:"_blank",rel:"noopener noreferrer"},oI=t("td",{style:{"text-align":"center"}},null,-1),nI={style:{"text-align":"left"}},sI=t("code",null,"数组",-1),dI=t("code",null,"回溯",-1),_I=t("code",null,"矩阵",-1),iI={style:{"text-align":"left"}},aI=t("td",{style:{"text-align":"center"}},"2679",-1),rI={style:{"text-align":"left"}},cI={href:"https://leetcode.com/problems/sum-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},hI=t("td",{style:{"text-align":"center"}},null,-1),uI={style:{"text-align":"left"}},fI=t("code",null,"数组",-1),gI=t("code",null,"矩阵",-1),mI=t("code",null,"排序",-1),yI=t("code",null,"2+",-1),xI={style:{"text-align":"left"}},pI=t("td",{style:{"text-align":"center"}},"2684",-1),bI={style:{"text-align":"left"}},kI={href:"https://leetcode.com/problems/maximum-number-of-moves-in-a-grid",target:"_blank",rel:"noopener noreferrer"},MI=t("td",{style:{"text-align":"center"}},null,-1),wI={style:{"text-align":"left"}},HI=t("code",null,"数组",-1),vI=t("code",null,"动态规划",-1),II=t("code",null,"矩阵",-1),EI={style:{"text-align":"left"}},zI=t("td",{style:{"text-align":"center"}},"2711",-1),qI={style:{"text-align":"left"}},LI={href:"https://leetcode.com/problems/difference-of-number-of-distinct-values-on-diagonals",target:"_blank",rel:"noopener noreferrer"},CI=t("td",{style:{"text-align":"center"}},null,-1),PI={style:{"text-align":"left"}},jI=t("code",null,"数组",-1),OI=t("code",null,"哈希表",-1),KI=t("code",null,"矩阵",-1),VI={style:{"text-align":"left"}},BI=t("td",{style:{"text-align":"center"}},"2713",-1),DI={style:{"text-align":"left"}},NI={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},XI=t("td",{style:{"text-align":"center"}},null,-1),YI={style:{"text-align":"left"}},QI=t("code",null,"记忆化搜索",-1),RI=t("code",null,"数组",-1),AI=t("code",null,"哈希表",-1),TI=t("code",null,"5+",-1),WI={style:{"text-align":"left"}},ZI=t("td",{style:{"text-align":"center"}},"2732",-1),FI={style:{"text-align":"left"}},GI={href:"https://leetcode.com/problems/find-a-good-subset-of-the-matrix",target:"_blank",rel:"noopener noreferrer"},SI=t("td",{style:{"text-align":"center"}},null,-1),UI={style:{"text-align":"left"}},JI=t("code",null,"位运算",-1),$I=t("code",null,"数组",-1),tE=t("code",null,"哈希表",-1),eE=t("code",null,"1+",-1),lE={style:{"text-align":"left"}},oE=t("td",{style:{"text-align":"center"}},"2812",-1),nE={style:{"text-align":"left"}},sE={href:"https://leetcode.com/problems/find-the-safest-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},dE=t("td",{style:{"text-align":"center"}},null,-1),_E={style:{"text-align":"left"}},iE=t("code",null,"广度优先搜索",-1),aE=t("code",null,"并查集",-1),rE=t("code",null,"数组",-1),cE=t("code",null,"2+",-1),hE={style:{"text-align":"left"}},uE=t("td",{style:{"text-align":"center"}},"2814",-1),fE={style:{"text-align":"left"}},gE={href:"https://leetcode.com/problems/minimum-time-takes-to-reach-destination-without-drowning",target:"_blank",rel:"noopener noreferrer"},mE=t("td",{style:{"text-align":"center"}},null,-1),yE={style:{"text-align":"left"}},xE=t("code",null,"广度优先搜索",-1),pE=t("code",null,"数组",-1),bE=t("code",null,"矩阵",-1),kE={style:{"text-align":"left"}},ME=t("td",{style:{"text-align":"center"}},"2850",-1),wE={style:{"text-align":"left"}},HE={href:"https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid",target:"_blank",rel:"noopener noreferrer"},vE=t("td",{style:{"text-align":"center"}},null,-1),IE={style:{"text-align":"left"}},EE=t("code",null,"广度优先搜索",-1),zE=t("code",null,"数组",-1),qE=t("code",null,"动态规划",-1),LE=t("code",null,"1+",-1),CE={style:{"text-align":"left"}},PE=t("td",{style:{"text-align":"center"}},"2852",-1),jE={style:{"text-align":"left"}},OE={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},KE=t("td",{style:{"text-align":"center"}},null,-1),VE={style:{"text-align":"left"}},BE=t("code",null,"深度优先搜索",-1),DE=t("code",null,"广度优先搜索",-1),NE=t("code",null,"并查集",-1),XE=t("code",null,"3+",-1),YE={style:{"text-align":"left"}},QE=t("td",{style:{"text-align":"center"}},"2906",-1),RE={style:{"text-align":"left"}},AE={href:"https://leetcode.com/problems/construct-product-matrix",target:"_blank",rel:"noopener noreferrer"},TE=t("td",{style:{"text-align":"center"}},null,-1),WE={style:{"text-align":"left"}},ZE=t("code",null,"数组",-1),FE=t("code",null,"矩阵",-1),GE=t("code",null,"前缀和",-1),SE={style:{"text-align":"left"}},UE=t("td",{style:{"text-align":"center"}},"2923",-1),JE={style:{"text-align":"left"}},$E={href:"https://leetcode.com/problems/find-champion-i",target:"_blank",rel:"noopener noreferrer"},tz=t("td",{style:{"text-align":"center"}},null,-1),ez={style:{"text-align":"left"}},lz=t("code",null,"数组",-1),oz=t("code",null,"矩阵",-1),nz={style:{"text-align":"left"}},sz=t("td",{style:{"text-align":"center"}},"2931",-1),dz={style:{"text-align":"left"}},_z={href:"https://leetcode.com/problems/maximum-spending-after-buying-items",target:"_blank",rel:"noopener noreferrer"},iz=t("td",{style:{"text-align":"center"}},null,-1),az={style:{"text-align":"left"}},rz=t("code",null,"贪心",-1),cz=t("code",null,"数组",-1),hz=t("code",null,"矩阵",-1),uz=t("code",null,"2+",-1),fz={style:{"text-align":"left"}},gz=t("td",{style:{"text-align":"center"}},"2946",-1),mz={style:{"text-align":"left"}},yz={href:"https://leetcode.com/problems/matrix-similarity-after-cyclic-shifts",target:"_blank",rel:"noopener noreferrer"},xz=t("td",{style:{"text-align":"center"}},null,-1),pz={style:{"text-align":"left"}},bz=t("code",null,"数组",-1),kz=t("code",null,"数学",-1),Mz=t("code",null,"矩阵",-1),wz=t("code",null,"1+",-1),Hz={style:{"text-align":"left"}},vz=t("td",{style:{"text-align":"center"}},"2965",-1),Iz={style:{"text-align":"left"}},Ez={href:"https://leetcode.com/problems/find-missing-and-repeated-values",target:"_blank",rel:"noopener noreferrer"},zz=t("td",{style:{"text-align":"center"}},null,-1),qz={style:{"text-align":"left"}},Lz=t("code",null,"数组",-1),Cz=t("code",null,"哈希表",-1),Pz=t("code",null,"数学",-1),jz=t("code",null,"1+",-1),Oz={style:{"text-align":"left"}},Kz=t("td",{style:{"text-align":"center"}},"3030",-1),Vz={style:{"text-align":"left"}},Bz={href:"https://leetcode.com/problems/find-the-grid-of-region-average",target:"_blank",rel:"noopener noreferrer"},Dz=t("td",{style:{"text-align":"center"}},null,-1),Nz={style:{"text-align":"left"}},Xz=t("code",null,"数组",-1),Yz=t("code",null,"矩阵",-1),Qz={style:{"text-align":"left"}},Rz=t("td",{style:{"text-align":"center"}},"3033",-1),Az={style:{"text-align":"left"}},Tz={href:"https://leetcode.com/problems/modify-the-matrix",target:"_blank",rel:"noopener noreferrer"},Wz=t("td",{style:{"text-align":"center"}},null,-1),Zz={style:{"text-align":"left"}},Fz=t("code",null,"数组",-1),Gz=t("code",null,"矩阵",-1),Sz={style:{"text-align":"left"}},Uz=t("td",{style:{"text-align":"center"}},"3044",-1),Jz={style:{"text-align":"left"}},$z={href:"https://leetcode.com/problems/most-frequent-prime",target:"_blank",rel:"noopener noreferrer"},tq=t("td",{style:{"text-align":"center"}},null,-1),eq={style:{"text-align":"left"}},lq=t("code",null,"数组",-1),oq=t("code",null,"哈希表",-1),nq=t("code",null,"数学",-1),sq=t("code",null,"4+",-1),dq={style:{"text-align":"left"}},_q=t("td",{style:{"text-align":"center"}},"3070",-1),iq={style:{"text-align":"left"}},aq={href:"https://leetcode.com/problems/count-submatrices-with-top-left-element-and-sum-less-than-k",target:"_blank",rel:"noopener noreferrer"},rq=t("td",{style:{"text-align":"center"}},null,-1),cq={style:{"text-align":"left"}},hq=t("code",null,"数组",-1),uq=t("code",null,"矩阵",-1),fq=t("code",null,"前缀和",-1),gq={style:{"text-align":"left"}},mq=t("td",{style:{"text-align":"center"}},"3071",-1),yq={style:{"text-align":"left"}},xq={href:"https://leetcode.com/problems/minimum-operations-to-write-the-letter-y-on-a-grid",target:"_blank",rel:"noopener noreferrer"},pq=t("td",{style:{"text-align":"center"}},null,-1),bq={style:{"text-align":"left"}},kq=t("code",null,"数组",-1),Mq=t("code",null,"哈希表",-1),wq=t("code",null,"计数",-1),Hq=t("code",null,"1+",-1),vq={style:{"text-align":"left"}},Iq=t("td",{style:{"text-align":"center"}},"3078",-1),Eq={style:{"text-align":"left"}},zq={href:"https://leetcode.com/problems/match-alphanumerical-pattern-in-matrix-i",target:"_blank",rel:"noopener noreferrer"},qq=t("td",{style:{"text-align":"center"}},null,-1),Lq={style:{"text-align":"left"}},Cq=t("code",null,"数组",-1),Pq=t("code",null,"哈希表",-1),jq=t("code",null,"字符串",-1),Oq=t("code",null,"1+",-1),Kq={style:{"text-align":"left"}},Vq=t("td",{style:{"text-align":"center"}},"3122",-1),Bq={style:{"text-align":"left"}},Dq={href:"https://leetcode.com/problems/minimum-number-of-operations-to-satisfy-conditions",target:"_blank",rel:"noopener noreferrer"},Nq=t("td",{style:{"text-align":"center"}},null,-1),Xq={style:{"text-align":"left"}},Yq=t("code",null,"数组",-1),Qq=t("code",null,"动态规划",-1),Rq=t("code",null,"矩阵",-1),Aq={style:{"text-align":"left"}},Tq=t("td",{style:{"text-align":"center"}},"3127",-1),Wq={style:{"text-align":"left"}},Zq={href:"https://leetcode.com/problems/make-a-square-with-the-same-color",target:"_blank",rel:"noopener noreferrer"},Fq=t("td",{style:{"text-align":"center"}},null,-1),Gq={style:{"text-align":"left"}},Sq=t("code",null,"数组",-1),Uq=t("code",null,"枚举",-1),Jq=t("code",null,"矩阵",-1),$q={style:{"text-align":"left"}},tL=t("td",{style:{"text-align":"center"}},"3142",-1),eL={style:{"text-align":"left"}},lL={href:"https://leetcode.com/problems/check-if-grid-satisfies-conditions",target:"_blank",rel:"noopener noreferrer"},oL=t("td",{style:{"text-align":"center"}},null,-1),nL={style:{"text-align":"left"}},sL=t("code",null,"数组",-1),dL=t("code",null,"矩阵",-1),_L={style:{"text-align":"left"}},iL=t("td",{style:{"text-align":"center"}},"3148",-1),aL={style:{"text-align":"left"}},rL={href:"https://leetcode.com/problems/maximum-difference-score-in-a-grid",target:"_blank",rel:"noopener noreferrer"},cL=t("td",{style:{"text-align":"center"}},null,-1),hL={style:{"text-align":"left"}},uL=t("code",null,"数组",-1),fL=t("code",null,"动态规划",-1),gL=t("code",null,"矩阵",-1),mL={style:{"text-align":"left"}},yL=t("td",{style:{"text-align":"center"}},"3195",-1),xL={style:{"text-align":"left"}},pL={href:"https://leetcode.com/problems/find-the-minimum-area-to-cover-all-ones-i",target:"_blank",rel:"noopener noreferrer"},bL=t("td",{style:{"text-align":"center"}},null,-1),kL={style:{"text-align":"left"}},ML=t("code",null,"数组",-1),wL=t("code",null,"矩阵",-1),HL={style:{"text-align":"left"}},vL=t("td",{style:{"text-align":"center"}},"3197",-1),IL={style:{"text-align":"left"}},EL={href:"https://leetcode.com/problems/find-the-minimum-area-to-cover-all-ones-ii",target:"_blank",rel:"noopener noreferrer"},zL=t("td",{style:{"text-align":"center"}},null,-1),qL={style:{"text-align":"left"}},LL=t("code",null,"数组",-1),CL=t("code",null,"枚举",-1),PL=t("code",null,"矩阵",-1),jL={style:{"text-align":"left"}},OL=t("td",{style:{"text-align":"center"}},"3212",-1),KL={style:{"text-align":"left"}},VL={href:"https://leetcode.com/problems/count-submatrices-with-equal-frequency-of-x-and-y",target:"_blank",rel:"noopener noreferrer"},BL=t("td",{style:{"text-align":"center"}},null,-1),DL={style:{"text-align":"left"}},NL=t("code",null,"数组",-1),XL=t("code",null,"矩阵",-1),YL=t("code",null,"前缀和",-1),QL={style:{"text-align":"left"}},RL=t("td",{style:{"text-align":"center"}},"3225",-1),AL={style:{"text-align":"left"}},TL={href:"https://leetcode.com/problems/maximum-score-from-grid-operations",target:"_blank",rel:"noopener noreferrer"},WL=t("td",{style:{"text-align":"center"}},null,-1),ZL={style:{"text-align":"left"}},FL=t("code",null,"数组",-1),GL=t("code",null,"动态规划",-1),SL=t("code",null,"矩阵",-1),UL=t("code",null,"1+",-1),JL={style:{"text-align":"left"}},$L=t("td",{style:{"text-align":"center"}},"3239",-1),tC={style:{"text-align":"left"}},eC={href:"https://leetcode.com/problems/minimum-number-of-flips-to-make-binary-grid-palindromic-i",target:"_blank",rel:"noopener noreferrer"},lC=t("td",{style:{"text-align":"center"}},null,-1),oC={style:{"text-align":"left"}},nC=t("code",null,"数组",-1),sC=t("code",null,"双指针",-1),dC=t("code",null,"矩阵",-1),_C={style:{"text-align":"left"}},iC=t("td",{style:{"text-align":"center"}},"3240",-1),aC={style:{"text-align":"left"}},rC={href:"https://leetcode.com/problems/minimum-number-of-flips-to-make-binary-grid-palindromic-ii",target:"_blank",rel:"noopener noreferrer"},cC=t("td",{style:{"text-align":"center"}},null,-1),hC={style:{"text-align":"left"}},uC=t("code",null,"数组",-1),fC=t("code",null,"双指针",-1),gC=t("code",null,"矩阵",-1),mC={style:{"text-align":"left"}},yC=t("td",{style:{"text-align":"center"}},"3242",-1),xC={style:{"text-align":"left"}},pC={href:"https://leetcode.com/problems/design-neighbor-sum-service",target:"_blank",rel:"noopener noreferrer"},bC=t("td",{style:{"text-align":"center"}},null,-1),kC={style:{"text-align":"left"}},MC=t("code",null,"设计",-1),wC=t("code",null,"数组",-1),HC=t("code",null,"哈希表",-1),vC=t("code",null,"2+",-1),IC={style:{"text-align":"left"}},EC=t("td",{style:{"text-align":"center"}},"3256",-1),zC={style:{"text-align":"left"}},qC={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-i",target:"_blank",rel:"noopener noreferrer"},LC=t("td",{style:{"text-align":"center"}},null,-1),CC={style:{"text-align":"left"}},PC=t("code",null,"数组",-1),jC=t("code",null,"动态规划",-1),OC=t("code",null,"枚举",-1),KC=t("code",null,"1+",-1),VC={style:{"text-align":"left"}},BC=t("td",{style:{"text-align":"center"}},"3257",-1),DC={style:{"text-align":"left"}},NC={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-ii",target:"_blank",rel:"noopener noreferrer"},XC=t("td",{style:{"text-align":"center"}},null,-1),YC={style:{"text-align":"left"}},QC=t("code",null,"数组",-1),RC=t("code",null,"动态规划",-1),AC=t("code",null,"枚举",-1),TC=t("code",null,"1+",-1),WC={style:{"text-align":"left"}},ZC=t("td",{style:{"text-align":"center"}},"3276",-1),FC={style:{"text-align":"left"}},GC={href:"https://leetcode.com/problems/select-cells-in-grid-with-maximum-score",target:"_blank",rel:"noopener noreferrer"},SC=t("td",{style:{"text-align":"center"}},null,-1),UC={style:{"text-align":"left"}},JC=t("code",null,"位运算",-1),$C=t("code",null,"数组",-1),tP=t("code",null,"动态规划",-1),eP=t("code",null,"2+",-1),lP={style:{"text-align":"left"}},oP=t("td",{style:{"text-align":"center"}},"3286",-1),nP={style:{"text-align":"left"}},sP={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},dP=t("td",{style:{"text-align":"center"}},null,-1),_P={style:{"text-align":"left"}},iP=t("code",null,"广度优先搜索",-1),aP=t("code",null,"图",-1),rP=t("code",null,"数组",-1),cP=t("code",null,"3+",-1),hP={style:{"text-align":"left"}},uP=t("td",{style:{"text-align":"center"}},"3311",-1),fP={style:{"text-align":"left"}},gP={href:"https://leetcode.com/problems/construct-2d-grid-matching-graph-layout",target:"_blank",rel:"noopener noreferrer"},mP=t("td",{style:{"text-align":"center"}},null,-1),yP={style:{"text-align":"left"}},xP=t("code",null,"图",-1),pP=t("code",null,"数组",-1),bP=t("code",null,"哈希表",-1),kP=t("code",null,"1+",-1),MP={style:{"text-align":"left"}},wP=t("td",{style:{"text-align":"center"}},"LCP 13",-1),HP={style:{"text-align":"left"}},vP={href:"https://leetcode.cn/problems/xun-bao",target:"_blank",rel:"noopener noreferrer"},IP=t("td",{style:{"text-align":"center"}},null,-1),EP={style:{"text-align":"left"}},zP=t("code",null,"位运算",-1),qP=t("code",null,"广度优先搜索",-1),LP=t("code",null,"数组",-1),CP=t("code",null,"3+",-1),PP={style:{"text-align":"left"}},jP=t("td",{style:{"text-align":"center"}},"LCP 31",-1),OP={style:{"text-align":"left"}},KP={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},VP=t("td",{style:{"text-align":"center"}},null,-1),BP={style:{"text-align":"left"}},DP=t("code",null,"深度优先搜索",-1),NP=t("code",null,"广度优先搜索",-1),XP=t("code",null,"数组",-1),YP=t("code",null,"2+",-1),QP={style:{"text-align":"left"}},RP=t("td",{style:{"text-align":"center"}},"LCP 38",-1),AP={style:{"text-align":"left"}},TP={href:"https://leetcode.cn/problems/7rLGCR",target:"_blank",rel:"noopener noreferrer"},WP=t("td",{style:{"text-align":"center"}},null,-1),ZP={style:{"text-align":"left"}},FP=t("code",null,"数组",-1),GP=t("code",null,"动态规划",-1),SP=t("code",null,"矩阵",-1),UP={style:{"text-align":"left"}},JP=t("td",{style:{"text-align":"center"}},"LCP 39",-1),$P={style:{"text-align":"left"}},tj={href:"https://leetcode.cn/problems/0jQkd0",target:"_blank",rel:"noopener noreferrer"},ej=t("td",{style:{"text-align":"center"}},null,-1),lj={style:{"text-align":"left"}},oj=t("code",null,"数组",-1),nj=t("code",null,"哈希表",-1),sj=t("code",null,"计数",-1),dj=t("code",null,"1+",-1),_j={style:{"text-align":"left"}},ij=t("td",{style:{"text-align":"center"}},"LCP 41",-1),aj={style:{"text-align":"left"}},rj={href:"https://leetcode.cn/problems/fHi6rV",target:"_blank",rel:"noopener noreferrer"},cj=t("td",{style:{"text-align":"center"}},null,-1),hj={style:{"text-align":"left"}},uj=t("code",null,"广度优先搜索",-1),fj=t("code",null,"数组",-1),gj=t("code",null,"矩阵",-1),mj={style:{"text-align":"left"}},yj=t("td",{style:{"text-align":"center"}},"LCP 45",-1),xj={style:{"text-align":"left"}},pj={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},bj=t("td",{style:{"text-align":"center"}},null,-1),kj={style:{"text-align":"left"}},Mj=t("code",null,"深度优先搜索",-1),wj=t("code",null,"广度优先搜索",-1),Hj=t("code",null,"记忆化搜索",-1),vj=t("code",null,"3+",-1),Ij={style:{"text-align":"left"}},Ej=t("td",{style:{"text-align":"center"}},"LCP 56",-1),zj={style:{"text-align":"left"}},qj={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},Lj=t("td",{style:{"text-align":"center"}},null,-1),Cj={style:{"text-align":"left"}},Pj=t("code",null,"广度优先搜索",-1),jj=t("code",null,"图",-1),Oj=t("code",null,"数组",-1),Kj=t("code",null,"3+",-1),Vj={style:{"text-align":"left"}},Bj=t("td",{style:{"text-align":"center"}},"LCP 57",-1),Dj={style:{"text-align":"left"}},Nj={href:"https://leetcode.cn/problems/ZbAuEH",target:"_blank",rel:"noopener noreferrer"},Xj=t("td",{style:{"text-align":"center"}},null,-1),Yj={style:{"text-align":"left"}},Qj=t("code",null,"数组",-1),Rj=t("code",null,"动态规划",-1),Aj=t("code",null,"矩阵",-1),Tj=t("code",null,"1+",-1),Wj={style:{"text-align":"left"}},Zj=t("td",{style:{"text-align":"center"}},"LCP 58",-1),Fj={style:{"text-align":"left"}},Gj={href:"https://leetcode.cn/problems/De4qBB",target:"_blank",rel:"noopener noreferrer"},Sj=t("td",{style:{"text-align":"center"}},null,-1),Uj={style:{"text-align":"left"}},Jj=t("code",null,"数组",-1),$j=t("code",null,"回溯",-1),tO=t("code",null,"矩阵",-1),eO={style:{"text-align":"left"}},lO=t("td",{style:{"text-align":"center"}},"LCP 63",-1),oO={style:{"text-align":"left"}},nO={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},sO=t("td",{style:{"text-align":"center"}},null,-1),dO={style:{"text-align":"left"}},_O=t("code",null,"深度优先搜索",-1),iO=t("code",null,"广度优先搜索",-1),aO=t("code",null,"图",-1),rO=t("code",null,"5+",-1),cO={style:{"text-align":"left"}},hO=t("td",{style:{"text-align":"center"}},"LCP 71",-1),uO={style:{"text-align":"left"}},fO={href:"https://leetcode.cn/problems/kskhHQ",target:"_blank",rel:"noopener noreferrer"},gO=t("td",{style:{"text-align":"center"}},null,-1),mO={style:{"text-align":"left"}},yO=t("code",null,"并查集",-1),xO=t("code",null,"数组",-1),pO=t("code",null,"矩阵",-1),bO={style:{"text-align":"left"}},kO=t("td",{style:{"text-align":"center"}},"LCS 03",-1),MO={style:{"text-align":"left"}},wO={href:"https://leetcode.cn/problems/YesdPw",target:"_blank",rel:"noopener noreferrer"},HO=t("td",{style:{"text-align":"center"}},null,-1),vO={style:{"text-align":"left"}},IO=t("code",null,"深度优先搜索",-1),EO=t("code",null,"广度优先搜索",-1),zO=t("code",null,"并查集",-1),qO=t("code",null,"2+",-1),LO={style:{"text-align":"left"}},CO=t("td",{style:{"text-align":"center"}},"剑指 Offer 04",-1),PO={style:{"text-align":"left"}},jO={href:"https://leetcode.cn/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof",target:"_blank",rel:"noopener noreferrer"},OO={style:{"text-align":"center"}},KO={href:"/problem/jz_offer_04_1",target:"_blank",rel:"noopener noreferrer"},VO={style:{"text-align":"left"}},BO=t("code",null,"数组",-1),DO=t("code",null,"二分查找",-1),NO=t("code",null,"分治",-1),XO=t("code",null,"1+",-1),YO={style:{"text-align":"left"}},QO=t("td",{style:{"text-align":"center"}},"剑指 Offer 12",-1),RO={style:{"text-align":"left"}},AO={href:"https://leetcode.cn/problems/ju-zhen-zhong-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},TO={style:{"text-align":"center"}},WO={href:"/problem/jz_offer_12_1",target:"_blank",rel:"noopener noreferrer"},ZO={style:{"text-align":"left"}},FO=t("code",null,"数组",-1),GO=t("code",null,"字符串",-1),SO=t("code",null,"回溯",-1),UO=t("code",null,"1+",-1),JO={style:{"text-align":"left"}},$O=t("td",{style:{"text-align":"center"}},"剑指 Offer 29",-1),tK={style:{"text-align":"left"}},eK={href:"https://leetcode.cn/problems/shun-shi-zhen-da-yin-ju-zhen-lcof",target:"_blank",rel:"noopener noreferrer"},lK={style:{"text-align":"center"}},oK={href:"/problem/jz_offer_29_1",target:"_blank",rel:"noopener noreferrer"},nK={style:{"text-align":"left"}},sK=t("code",null,"数组",-1),dK=t("code",null,"矩阵",-1),_K=t("code",null,"模拟",-1),iK={style:{"text-align":"left"}},aK=t("td",{style:{"text-align":"center"}},"剑指 Offer 47",-1),rK={style:{"text-align":"left"}},cK={href:"https://leetcode.cn/problems/li-wu-de-zui-da-jie-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},hK={style:{"text-align":"center"}},uK={href:"/problem/jz_offer_47_1",target:"_blank",rel:"noopener noreferrer"},fK={style:{"text-align":"left"}},gK=t("code",null,"数组",-1),mK=t("code",null,"动态规划",-1),yK=t("code",null,"矩阵",-1),xK={style:{"text-align":"left"}},pK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 105",-1),bK={style:{"text-align":"left"}},kK={href:"https://leetcode.cn/problems/ZL6zAn",target:"_blank",rel:"noopener noreferrer"},MK=t("td",{style:{"text-align":"center"}},null,-1),wK={style:{"text-align":"left"}},HK=t("code",null,"深度优先搜索",-1),vK=t("code",null,"广度优先搜索",-1),IK=t("code",null,"并查集",-1),EK=t("code",null,"2+",-1),zK={style:{"text-align":"left"}},qK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 107",-1),LK={style:{"text-align":"left"}},CK={href:"https://leetcode.cn/problems/2bCMpM",target:"_blank",rel:"noopener noreferrer"},PK=t("td",{style:{"text-align":"center"}},null,-1),jK={style:{"text-align":"left"}},OK=t("code",null,"广度优先搜索",-1),KK=t("code",null,"数组",-1),VK=t("code",null,"动态规划",-1),BK=t("code",null,"1+",-1),DK={style:{"text-align":"left"}},NK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),XK={style:{"text-align":"left"}},YK={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},QK=t("td",{style:{"text-align":"center"}},null,-1),RK={style:{"text-align":"left"}},AK=t("code",null,"深度优先搜索",-1),TK=t("code",null,"广度优先搜索",-1),WK=t("code",null,"图",-1),ZK=t("code",null,"5+",-1),FK={style:{"text-align":"left"}},GK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 13",-1),SK={style:{"text-align":"left"}},UK={href:"https://leetcode.cn/problems/O4NDxx",target:"_blank",rel:"noopener noreferrer"},JK=t("td",{style:{"text-align":"center"}},null,-1),$K={style:{"text-align":"left"}},tV=t("code",null,"设计",-1),eV=t("code",null,"数组",-1),lV=t("code",null,"矩阵",-1),oV=t("code",null,"1+",-1),nV={style:{"text-align":"left"}},sV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),dV={style:{"text-align":"left"}},_V={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},iV=t("td",{style:{"text-align":"center"}},null,-1),aV={style:{"text-align":"left"}},rV=t("code",null,"栈",-1),cV=t("code",null,"数组",-1),hV=t("code",null,"动态规划",-1),uV=t("code",null,"2+",-1),fV={style:{"text-align":"left"}},gV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 99",-1),mV={style:{"text-align":"left"}},yV={href:"https://leetcode.cn/problems/0i0mDW",target:"_blank",rel:"noopener noreferrer"},xV=t("td",{style:{"text-align":"center"}},null,-1),pV={style:{"text-align":"left"}},bV=t("code",null,"数组",-1),kV=t("code",null,"动态规划",-1),MV=t("code",null,"矩阵",-1),wV={style:{"text-align":"left"}},HV=t("td",{style:{"text-align":"center"}},"面试题 01.07",-1),vV={style:{"text-align":"left"}},IV={href:"https://leetcode.cn/problems/rotate-matrix-lcci",target:"_blank",rel:"noopener noreferrer"},EV=t("td",{style:{"text-align":"center"}},null,-1),zV={style:{"text-align":"left"}},qV=t("code",null,"数组",-1),LV=t("code",null,"数学",-1),CV=t("code",null,"矩阵",-1),PV={style:{"text-align":"left"}},jV=t("td",{style:{"text-align":"center"}},"面试题 01.08",-1),OV={style:{"text-align":"left"}},KV={href:"https://leetcode.cn/problems/zero-matrix-lcci",target:"_blank",rel:"noopener noreferrer"},VV=t("td",{style:{"text-align":"center"}},null,-1),BV={style:{"text-align":"left"}},DV=t("code",null,"数组",-1),NV=t("code",null,"哈希表",-1),XV=t("code",null,"矩阵",-1),YV={style:{"text-align":"left"}},QV=t("td",{style:{"text-align":"center"}},"面试题 08.02",-1),RV={style:{"text-align":"left"}},AV={href:"https://leetcode.cn/problems/robot-in-a-grid-lcci",target:"_blank",rel:"noopener noreferrer"},TV=t("td",{style:{"text-align":"center"}},null,-1),WV={style:{"text-align":"left"}},ZV=t("code",null,"数组",-1),FV=t("code",null,"动态规划",-1),GV=t("code",null,"回溯",-1),SV=t("code",null,"1+",-1),UV={style:{"text-align":"left"}},JV=t("td",{style:{"text-align":"center"}},"面试题 08.10",-1),$V={style:{"text-align":"left"}},tB={href:"https://leetcode.cn/problems/color-fill-lcci",target:"_blank",rel:"noopener noreferrer"},eB=t("td",{style:{"text-align":"center"}},null,-1),lB={style:{"text-align":"left"}},oB=t("code",null,"深度优先搜索",-1),nB=t("code",null,"广度优先搜索",-1),sB=t("code",null,"数组",-1),dB=t("code",null,"1+",-1),_B={style:{"text-align":"left"}},iB=t("td",{style:{"text-align":"center"}},"面试题 10.09",-1),aB={style:{"text-align":"left"}},rB={href:"https://leetcode.cn/problems/sorted-matrix-search-lcci",target:"_blank",rel:"noopener noreferrer"},cB=t("td",{style:{"text-align":"center"}},null,-1),hB={style:{"text-align":"left"}},uB=t("code",null,"数组",-1),fB=t("code",null,"二分查找",-1),gB=t("code",null,"分治",-1),mB=t("code",null,"1+",-1),yB={style:{"text-align":"left"}},xB=t("td",{style:{"text-align":"center"}},"面试题 16.04",-1),pB={style:{"text-align":"left"}},bB={href:"https://leetcode.cn/problems/tic-tac-toe-lcci",target:"_blank",rel:"noopener noreferrer"},kB=t("td",{style:{"text-align":"center"}},null,-1),MB={style:{"text-align":"left"}},wB=t("code",null,"数组",-1),HB=t("code",null,"计数",-1),vB=t("code",null,"矩阵",-1),IB={style:{"text-align":"left"}},EB=t("td",{style:{"text-align":"center"}},"面试题 16.19",-1),zB={style:{"text-align":"left"}},qB={href:"https://leetcode.cn/problems/pond-sizes-lcci",target:"_blank",rel:"noopener noreferrer"},LB=t("td",{style:{"text-align":"center"}},null,-1),CB={style:{"text-align":"left"}},PB=t("code",null,"深度优先搜索",-1),jB=t("code",null,"广度优先搜索",-1),OB=t("code",null,"并查集",-1),KB=t("code",null,"2+",-1),VB={style:{"text-align":"left"}},BB=t("td",{style:{"text-align":"center"}},"面试题 16.22",-1),DB={style:{"text-align":"left"}},NB={href:"https://leetcode.cn/problems/langtons-ant-lcci",target:"_blank",rel:"noopener noreferrer"},XB=t("td",{style:{"text-align":"center"}},null,-1),YB={style:{"text-align":"left"}},QB=t("code",null,"数组",-1),RB=t("code",null,"哈希表",-1),AB=t("code",null,"字符串",-1),TB=t("code",null,"2+",-1),WB={style:{"text-align":"left"}},ZB=t("td",{style:{"text-align":"center"}},"面试题 17.23",-1),FB={style:{"text-align":"left"}},GB={href:"https://leetcode.cn/problems/max-black-square-lcci",target:"_blank",rel:"noopener noreferrer"},SB=t("td",{style:{"text-align":"center"}},null,-1),UB={style:{"text-align":"left"}},JB=t("code",null,"数组",-1),$B=t("code",null,"动态规划",-1),tD=t("code",null,"矩阵",-1),eD={style:{"text-align":"left"}},lD=t("td",{style:{"text-align":"center"}},"面试题 17.24",-1),oD={style:{"text-align":"left"}},nD={href:"https://leetcode.cn/problems/max-submatrix-lcci",target:"_blank",rel:"noopener noreferrer"},sD=t("td",{style:{"text-align":"center"}},null,-1),dD={style:{"text-align":"left"}},_D=t("code",null,"数组",-1),iD=t("code",null,"动态规划",-1),aD=t("code",null,"矩阵",-1),rD=t("code",null,"1+",-1),cD={style:{"text-align":"left"}};function hD(uD,fD){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),r("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),x,l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[A]),_:1})]),T,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Pt]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[Ot]),_:1})])]),Kt,c(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Bt,t("td",Dt,[t("a",Nt,[l("有效的数独"),e(s)])]),t("td",Xt,[t("a",Yt,[l("[✓]"),e(s)])]),t("td",Qt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Rt]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[At]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Tt]),_:1})]),t("td",Wt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zt,t("td",Ft,[t("a",Gt,[l("解数独"),e(s)])]),t("td",St,[t("a",Ut,[l("[✓]"),e(s)])]),t("td",Jt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[ee]),_:1}),l(),le]),t("td",oe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ne,t("td",se,[t("a",de,[l("旋转图像"),e(s)])]),t("td",_e,[t("a",ie,[l("[✓]"),e(s)])]),t("td",ae,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[re]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[he]),_:1})]),t("td",ue,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fe,t("td",ge,[t("a",me,[l("螺旋矩阵"),e(s)])]),t("td",ye,[t("a",xe,[l("[✓]"),e(s)])]),t("td",pe,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ke]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Me]),_:1})]),t("td",we,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[He,t("td",ve,[t("a",Ie,[l("螺旋矩阵 II"),e(s)])]),t("td",Ee,[t("a",ze,[l("[✓]"),e(s)])]),t("td",qe,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Pe]),_:1})]),t("td",je,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oe,t("td",Ke,[t("a",Ve,[l("不同路径 II"),e(s)])]),t("td",Be,[t("a",De,[l("[✓]"),e(s)])]),t("td",Ne,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xe]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ye]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Qe]),_:1})]),t("td",Re,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ae,t("td",Te,[t("a",We,[l("最小路径和"),e(s)])]),t("td",Ze,[t("a",Fe,[l("[✓]"),e(s)])]),t("td",Ge,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ue]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Je]),_:1})]),t("td",$e,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tl,t("td",el,[t("a",ll,[l("矩阵置零"),e(s)])]),t("td",ol,[t("a",nl,[l("[✓]"),e(s)])]),t("td",sl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[dl]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[_l]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[il]),_:1})]),t("td",al,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rl,t("td",cl,[t("a",hl,[l("搜索二维矩阵"),e(s)])]),t("td",ul,[t("a",fl,[l("[✓]"),e(s)])]),t("td",gl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ml]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[xl]),_:1})]),t("td",pl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bl,t("td",kl,[t("a",Ml,[l("单词搜索"),e(s)])]),t("td",wl,[t("a",Hl,[l("[✓]"),e(s)])]),t("td",vl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[El]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[zl]),_:1}),l(),ql]),t("td",Ll,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cl,t("td",Pl,[t("a",jl,[l("最大矩形"),e(s)])]),t("td",Ol,[t("a",Kl,[l("[✓]"),e(s)])]),t("td",Vl,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Bl]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Dl]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Nl]),_:1}),l(),Xl]),t("td",Yl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ql,t("td",Rl,[t("a",Al,[l("被围绕的区域"),e(s)])]),t("td",Tl,[t("a",Wl,[l("[✓]"),e(s)])]),t("td",Zl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Fl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Gl]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Sl]),_:1}),l(),Ul]),t("td",Jl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$l,t("td",to,[t("a",eo,[l("地下城游戏"),e(s)])]),t("td",lo,[t("a",oo,[l("[✓]"),e(s)])]),t("td",no,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[so]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_o]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[io]),_:1})]),t("td",ao,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ro,t("td",co,[t("a",ho,[l("岛屿数量"),e(s)])]),t("td",uo,[t("a",fo,[l("[✓]"),e(s)])]),t("td",go,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[mo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[yo]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[xo]),_:1}),l(),po]),t("td",bo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ko,t("td",Mo,[t("a",wo,[l("单词搜索 II"),e(s)])]),t("td",Ho,[t("a",vo,[l("[✓]"),e(s)])]),t("td",Io,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Eo]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[qo]),_:1}),l(),Lo]),t("td",Co,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Po,t("td",jo,[t("a",Oo,[l("最大正方形"),e(s)])]),t("td",Ko,[t("a",Vo,[l("[✓]"),e(s)])]),t("td",Bo,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[No]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Xo]),_:1})]),t("td",Yo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qo,t("td",Ro,[t("a",Ao,[l("搜索二维矩阵 II"),e(s)])]),t("td",To,[t("a",Wo,[l("[✓]"),e(s)])]),t("td",Zo,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Go]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[So]),_:1}),l(),Uo]),t("td",Jo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$o,t("td",tn,[t("a",en,[l("墙与门"),e(s)])]),ln,t("td",on,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[nn]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[dn]),_:1})]),t("td",_n,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[an,t("td",rn,[t("a",cn,[l("生命游戏"),e(s)])]),t("td",hn,[t("a",un,[l("[✓]"),e(s)])]),t("td",fn,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[gn]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[yn]),_:1})]),t("td",xn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pn,t("td",bn,[t("a",kn,[l("最佳的碰头地点"),e(s)])]),Mn,t("td",wn,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hn]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[vn]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[In]),_:1}),l(),En]),t("td",zn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qn,t("td",Ln,[t("a",Cn,[l("包含全部黑色像素的最小矩形"),e(s)])]),Pn,t("td",jn,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[On]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Kn]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Vn]),_:1}),l(),Bn]),t("td",Dn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nn,t("td",Xn,[t("a",Yn,[l("二维区域和检索 - 矩阵不可变"),e(s)])]),Qn,t("td",Rn,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[An]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Tn]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Wn]),_:1}),l(),Zn]),t("td",Fn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gn,t("td",Sn,[t("a",Un,[l("二维区域和检索 - 矩阵可修改"),e(s)])]),Jn,t("td",$n,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ts]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[es]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ls]),_:1}),l(),os]),t("td",ns,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ss,t("td",ds,[t("a",_s,[l("稀疏矩阵的乘法"),e(s)])]),is,t("td",as,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[cs]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[hs]),_:1})]),t("td",us,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fs,t("td",gs,[t("a",ms,[l("离建筑物最近的距离"),e(s)])]),ys,t("td",xs,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ps]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ks]),_:1})]),t("td",Ms,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ws,t("td",Hs,[t("a",vs,[l("矩阵中的最长递增路径"),e(s)])]),Is,t("td",Es,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zs]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[qs]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ls]),_:1}),l(),Cs]),t("td",Ps,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[js,t("td",Os,[t("a",Ks,[l("设计井字棋"),e(s)])]),Vs,t("td",Bs,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ds]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ns]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Xs]),_:1}),l(),Ys]),t("td",Qs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rs,t("td",As,[t("a",Ts,[l("轰炸敌人"),e(s)])]),Ws,t("td",Zs,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fs]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Ss]),_:1})]),t("td",Us,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Js,t("td",$s,[t("a",td,[l("矩形区域不超过 K 的最大数值和"),e(s)])]),ed,t("td",ld,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[od]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[sd]),_:1}),l(),dd]),t("td",_d,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",rd,[l("有序矩阵中第 K 小的元素"),e(s)])]),t("td",cd,[t("a",hd,[l("[✓]"),e(s)])]),t("td",ud,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[md]),_:1}),l(),yd]),t("td",xd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pd,t("td",bd,[t("a",kd,[l("接雨水 II"),e(s)])]),Md,t("td",wd,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Hd]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vd]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Id]),_:1}),l(),Ed]),t("td",zd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qd,t("td",Ld,[t("a",Cd,[l("太平洋大西洋水流问题"),e(s)])]),Pd,t("td",jd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Od]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Kd]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Vd]),_:1}),l(),Bd]),t("td",Dd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nd,t("td",Xd,[t("a",Yd,[l("棋盘上的战舰"),e(s)])]),Qd,t("td",Rd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ad]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Td]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Wd]),_:1})]),t("td",Zd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fd,t("td",Gd,[t("a",Sd,[l("有效的单词方块"),e(s)])]),Ud,t("td",Jd,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[t_]),_:1})]),t("td",e_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[l_,t("td",o_,[t("a",n_,[l("建立四叉树"),e(s)])]),t("td",s_,[t("a",d_,[l("[✓]"),e(s)])]),t("td",__,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[i_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[r_]),_:1}),l(),c_]),t("td",h_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u_,t("td",f_,[t("a",g_,[l("岛屿的周长"),e(s)])]),m_,t("td",y_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[x_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[p_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[b_]),_:1}),l(),k_]),t("td",M_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[w_,t("td",H_,[t("a",v_,[l("迷宫"),e(s)])]),I_,t("td",E_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[z_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[L_]),_:1}),l(),C_]),t("td",P_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j_,t("td",O_,[t("a",K_,[l("对角线遍历"),e(s)])]),t("td",V_,[t("a",B_,[l("[✓]"),e(s)])]),t("td",D_,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[N_]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Y_]),_:1})]),t("td",Q_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R_,t("td",A_,[t("a",T_,[l("迷宫 III"),e(s)])]),W_,t("td",Z_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[F_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[G_]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[S_]),_:1}),l(),U_]),t("td",J_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$_,t("td",ti,[t("a",ei,[l("迷宫 II"),e(s)])]),li,t("td",oi,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ni]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[si]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[di]),_:1}),l(),_i]),t("td",ii,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ai,t("td",ri,[t("a",ci,[l("扫雷游戏"),e(s)])]),hi,t("td",ui,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fi]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[gi]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mi]),_:1}),l(),yi]),t("td",xi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pi,t("td",bi,[t("a",ki,[l("孤独像素 I"),e(s)])]),Mi,t("td",wi,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hi]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[vi]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Ii]),_:1})]),t("td",Ei,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zi,t("td",qi,[t("a",Li,[l("孤独像素 II"),e(s)])]),Ci,t("td",Pi,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ji]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Ki]),_:1})]),t("td",Vi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bi,t("td",Di,[t("a",Ni,[l("01 矩阵"),e(s)])]),Xi,t("td",Yi,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Qi]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ri]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ai]),_:1}),l(),Ti]),t("td",Wi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zi,t("td",Fi,[t("a",Gi,[l("矩阵中最长的连续1线段"),e(s)])]),Si,t("td",Ui,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ji]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$i]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ta]),_:1})]),t("td",ea,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[la,t("td",oa,[t("a",na,[l("重塑矩阵"),e(s)])]),sa,t("td",da,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_a]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ia]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[aa]),_:1})]),t("td",ra,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ca,t("td",ha,[t("a",ua,[l("最大休假天数"),e(s)])]),fa,t("td",ga,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ma]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ya]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[xa]),_:1})]),t("td",pa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ba,t("td",ka,[t("a",Ma,[l("设计 Excel 求和公式"),e(s)])]),wa,t("td",Ha,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[va]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ia]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Ea]),_:1}),l(),za]),t("td",qa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[La,t("td",Ca,[t("a",Pa,[l("图片平滑器"),e(s)])]),ja,t("td",Oa,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ka]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Va]),_:1})]),t("td",Ba,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Da,t("td",Na,[t("a",Xa,[l("为高尔夫比赛砍树"),e(s)])]),Ya,t("td",Qa,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ra]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Aa]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Ta]),_:1}),l(),Wa]),t("td",Za,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fa,t("td",Ga,[t("a",Sa,[l("岛屿的最大面积"),e(s)])]),t("td",Ua,[t("a",Ja,[l("[✓]"),e(s)])]),t("td",$a,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[er]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[lr]),_:1}),l(),or]),t("td",nr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sr,t("td",dr,[t("a",_r,[l("粉碎糖果"),e(s)])]),ir,t("td",ar,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rr]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[cr]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[hr]),_:1}),l(),ur]),t("td",fr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gr,t("td",mr,[t("a",yr,[l("图像渲染"),e(s)])]),xr,t("td",pr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[br]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kr]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Mr]),_:1}),l(),wr]),t("td",Hr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vr,t("td",Ir,[t("a",Er,[l("摘樱桃"),e(s)])]),zr,t("td",qr,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Lr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Cr]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Pr]),_:1})]),t("td",jr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Or,t("td",Kr,[t("a",Vr,[l("隔离病毒"),e(s)])]),Br,t("td",Dr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Nr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Xr]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yr]),_:1}),l(),Qr]),t("td",Rr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ar,t("td",Tr,[t("a",Wr,[l("角矩形的数量"),e(s)])]),Zr,t("td",Fr,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gr]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Sr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ur]),_:1}),l(),Jr]),t("td",$r,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tc,t("td",ec,[t("a",lc,[l("托普利茨矩阵"),e(s)])]),oc,t("td",nc,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sc]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[dc]),_:1})]),t("td",_c,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ic,t("td",ac,[t("a",rc,[l("滑动谜题"),e(s)])]),cc,t("td",hc,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[uc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fc]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[gc]),_:1})]),t("td",mc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yc,t("td",xc,[t("a",pc,[l("水位上升的泳池中游泳"),e(s)])]),bc,t("td",kc,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Mc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[wc]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Hc]),_:1}),l(),vc]),t("td",Ic,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ec,t("td",zc,[t("a",qc,[l("变为棋盘"),e(s)])]),Lc,t("td",Cc,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Pc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jc]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Oc]),_:1}),l(),Kc]),t("td",Vc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bc,t("td",Dc,[t("a",Nc,[l("有效的井字游戏"),e(s)])]),Xc,t("td",Yc,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qc]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Rc]),_:1})]),t("td",Ac,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tc,t("td",Wc,[t("a",Zc,[l("打砖块"),e(s)])]),Fc,t("td",Gc,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Sc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Uc]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Jc]),_:1})]),t("td",$c,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t1,t("td",e1,[t("a",l1,[l("保持城市天际线"),e(s)])]),o1,t("td",n1,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[s1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[d1]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[_1]),_:1})]),t("td",i1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a1,t("td",r1,[t("a",c1,[l("最大人工岛"),e(s)])]),h1,t("td",u1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[f1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[g1]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[m1]),_:1}),l(),y1]),t("td",x1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p1,t("td",b1,[t("a",k1,[l("翻转图像"),e(s)])]),M1,t("td",w1,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[H1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[v1]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[I1]),_:1}),l(),E1]),t("td",z1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[q1,t("td",L1,[t("a",C1,[l("图像重叠"),e(s)])]),P1,t("td",j1,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[O1]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[K1]),_:1})]),t("td",V1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B1,t("td",D1,[t("a",N1,[l("矩阵中的幻方"),e(s)])]),X1,t("td",Y1,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Q1]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[R1]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[A1]),_:1}),l(),T1]),t("td",W1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z1,t("td",F1,[t("a",G1,[l("翻转矩阵后的得分"),e(s)])]),S1,t("td",U1,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[J1]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[$1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[th]),_:1}),l(),eh]),t("td",lh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oh,t("td",nh,[t("a",sh,[l("获取所有钥匙的最短路径"),e(s)])]),dh,t("td",_h,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[ih]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ah]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rh]),_:1}),l(),ch]),t("td",hh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uh,t("td",fh,[t("a",gh,[l("转置矩阵"),e(s)])]),mh,t("td",yh,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xh]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ph]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[bh]),_:1})]),t("td",kh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mh,t("td",wh,[t("a",Hh,[l("三维形体投影面积"),e(s)])]),vh,t("td",Ih,[e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[Eh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zh]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[qh]),_:1}),l(),Lh]),t("td",Ch,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ph,t("td",jh,[t("a",Oh,[l("螺旋矩阵 III"),e(s)])]),Kh,t("td",Vh,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Bh]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Dh]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Nh]),_:1})]),t("td",Xh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yh,t("td",Qh,[t("a",Rh,[l("三维形体的表面积"),e(s)])]),Ah,t("td",Th,[e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[Wh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zh]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Fh]),_:1}),l(),Gh]),t("td",Sh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Uh,t("td",Jh,[t("a",$h,[l("蛇梯棋"),e(s)])]),t("td",tu,[t("a",eu,[l("[✓]"),e(s)])]),t("td",lu,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ou]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nu]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[su]),_:1})]),t("td",du,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_u,t("td",iu,[t("a",au,[l("下降路径最小和"),e(s)])]),t("td",ru,[t("a",cu,[l("[✓]"),e(s)])]),t("td",hu,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fu]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[gu]),_:1})]),t("td",mu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yu,t("td",xu,[t("a",pu,[l("最短的桥"),e(s)])]),bu,t("td",ku,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Mu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[wu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hu]),_:1}),l(),vu]),t("td",Iu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Eu,t("td",zu,[t("a",qu,[l("由斜杠划分区域"),e(s)])]),Lu,t("td",Cu,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Pu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ju]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ou]),_:1}),l(),Ku]),t("td",Vu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bu,t("td",Du,[t("a",Nu,[l("不同路径 III"),e(s)])]),Xu,t("td",Yu,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Qu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ru]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Au]),_:1}),l(),Tu]),t("td",Wu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zu,t("td",Fu,[t("a",Gu,[l("腐烂的橘子"),e(s)])]),t("td",Su,[t("a",Uu,[l("[✓]"),e(s)])]),t("td",Ju,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$u]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[tf]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ef]),_:1})]),t("td",lf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[of,t("td",nf,[t("a",sf,[l("可以被一步捕获的棋子数"),e(s)])]),df,t("td",_f,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[af]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[rf]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[cf]),_:1})]),t("td",hf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[uf,t("td",ff,[t("a",gf,[l("飞地的数量"),e(s)])]),mf,t("td",yf,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xf]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[pf]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[bf]),_:1}),l(),kf]),t("td",Mf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wf,t("td",Hf,[t("a",vf,[l("距离顺序排列矩阵单元格"),e(s)])]),If,t("td",Ef,[e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[zf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qf]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Lf]),_:1}),l(),Cf]),t("td",Pf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jf,t("td",Of,[t("a",Kf,[l("边界着色"),e(s)])]),Vf,t("td",Bf,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Df]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Nf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xf]),_:1}),l(),Yf]),t("td",Qf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rf,t("td",Af,[t("a",Tf,[l("按列翻转得到最大值等行数"),e(s)])]),Wf,t("td",Zf,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ff]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Gf]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Sf]),_:1})]),t("td",Uf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jf,t("td",$f,[t("a",tg,[l("元素和为目标值的子矩阵数量"),e(s)])]),eg,t("td",lg,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[og]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[ng]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[sg]),_:1}),l(),dg]),t("td",_g,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ig,t("td",ag,[t("a",rg,[l("二进制矩阵中的最短路径"),e(s)])]),cg,t("td",hg,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ug]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fg]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[gg]),_:1})]),t("td",mg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yg,t("td",xg,[t("a",pg,[l("得分最高的路径"),e(s)])]),bg,t("td",kg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Mg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[wg]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Hg]),_:1}),l(),vg]),t("td",Ig,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Eg,t("td",zg,[t("a",qg,[l("最大的以 1 为边界的正方形"),e(s)])]),Lg,t("td",Cg,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pg]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jg]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Og]),_:1})]),t("td",Kg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vg,t("td",Bg,[t("a",Dg,[l("地图分析"),e(s)])]),Ng,t("td",Xg,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Yg]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qg]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Rg]),_:1}),l(),Ag]),t("td",Tg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wg,t("td",Zg,[t("a",Fg,[l("找出所有行中最小公共元素"),e(s)])]),Gg,t("td",Sg,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ug]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Jg]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[$g]),_:1}),l(),tm]),t("td",em,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lm,t("td",om,[t("a",nm,[l("穿过迷宫的最少移动次数"),e(s)])]),sm,t("td",dm,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_m]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[im]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[am]),_:1})]),t("td",rm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cm,t("td",hm,[t("a",um,[l("黄金矿工"),e(s)])]),fm,t("td",gm,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mm]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[ym]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[xm]),_:1})]),t("td",pm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bm,t("td",km,[t("a",Mm,[l("可以攻击国王的皇后"),e(s)])]),wm,t("td",Hm,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vm]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Im]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Em]),_:1})]),t("td",zm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qm,t("td",Lm,[t("a",Cm,[l("重构 2 行二进制矩阵"),e(s)])]),Pm,t("td",jm,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Om]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Km]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Vm]),_:1})]),t("td",Bm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dm,t("td",Nm,[t("a",Xm,[l("统计封闭岛屿的数目"),e(s)])]),Ym,t("td",Qm,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Rm]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Am]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Tm]),_:1}),l(),Wm]),t("td",Zm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fm,t("td",Gm,[t("a",Sm,[l("二维网格迁移"),e(s)])]),Um,t("td",Jm,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$m]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ty]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[ey]),_:1})]),t("td",ly,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[oy,t("td",ny,[t("a",sy,[l("推箱子"),e(s)])]),dy,t("td",_y,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[iy]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ay]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ry]),_:1}),l(),cy]),t("td",hy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uy,t("td",fy,[t("a",gy,[l("统计参与通信的服务器"),e(s)])]),my,t("td",yy,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xy]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[py]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[by]),_:1}),l(),ky]),t("td",My,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wy,t("td",Hy,[t("a",vy,[l("找出井字棋的获胜者"),e(s)])]),Iy,t("td",Ey,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zy]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[qy]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Ly]),_:1}),l(),Cy]),t("td",Py,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jy,t("td",Oy,[t("a",Ky,[l("统计全为 1 的正方形子矩阵"),e(s)])]),Vy,t("td",By,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Dy]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ny]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Xy]),_:1})]),t("td",Yy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qy,t("td",Ry,[t("a",Ay,[l("转化为全零矩阵的最少反转次数"),e(s)])]),Ty,t("td",Wy,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Zy]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Fy]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gy]),_:1}),l(),Sy]),t("td",Uy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jy,t("td",$y,[t("a",t2,[l("下降路径最小和 II"),e(s)])]),e2,t("td",l2,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[o2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[n2]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[s2]),_:1})]),t("td",d2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_2,t("td",i2,[t("a",a2,[l("元素和小于等于阈值的正方形的最大边长"),e(s)])]),r2,t("td",c2,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[h2]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[u2]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[f2]),_:1}),l(),g2]),t("td",m2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y2,t("td",x2,[t("a",p2,[l("网格中的最短路径"),e(s)])]),b2,t("td",k2,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[M2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[w2]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[H2]),_:1})]),t("td",v2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[I2,t("td",E2,[t("a",z2,[l("最大得分的路径数目"),e(s)])]),q2,t("td",L2,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[C2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[P2]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[j2]),_:1})]),t("td",O2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K2,t("td",V2,[t("a",B2,[l("矩阵区域和"),e(s)])]),D2,t("td",N2,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[X2]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Y2]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[Q2]),_:1})]),t("td",R2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A2,t("td",T2,[t("a",W2,[l("将矩阵按对角线排序"),e(s)])]),Z2,t("td",F2,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[G2]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[S2]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[U2]),_:1})]),t("td",J2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$2,t("td",tx,[t("a",ex,[l("矩阵中战斗力最弱的 K 行"),e(s)])]),lx,t("td",ox,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nx]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[sx]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[dx]),_:1}),l(),_x]),t("td",ix,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ax,t("td",rx,[t("a",cx,[l("参加考试的最大学生数"),e(s)])]),hx,t("td",ux,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[fx]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[gx]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[mx]),_:1}),l(),yx]),t("td",xx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[px,t("td",bx,[t("a",kx,[l("统计有序矩阵中的负数"),e(s)])]),Mx,t("td",wx,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hx]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[vx]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Ix]),_:1})]),t("td",Ex,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zx,t("td",qx,[t("a",Lx,[l("使网格图至少有一条有效路径的最小代价"),e(s)])]),Cx,t("td",Px,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[jx]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ox]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Kx]),_:1}),l(),Vx]),t("td",Bx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dx,t("td",Nx,[t("a",Xx,[l("矩阵中的幸运数"),e(s)])]),Yx,t("td",Qx,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Rx]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Ax]),_:1})]),t("td",Tx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Wx,t("td",Zx,[t("a",Fx,[l("检查网格中是否存在有效路径"),e(s)])]),Gx,t("td",Sx,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ux]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Jx]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[$x]),_:1}),l(),tp]),t("td",ep,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lp,t("td",op,[t("a",np,[l("至少有一个 1 的最左端列"),e(s)])]),sp,t("td",dp,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_p]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[ip]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[ap]),_:1}),l(),rp]),t("td",cp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hp,t("td",up,[t("a",fp,[l("有序矩阵中的第 k 个最小数组和"),e(s)])]),gp,t("td",mp,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[yp]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[xp]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[pp]),_:1}),l(),bp]),t("td",kp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mp,t("td",wp,[t("a",Hp,[l("切披萨的方案数"),e(s)])]),vp,t("td",Ip,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Ep]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zp]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[qp]),_:1}),l(),Lp]),t("td",Cp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pp,t("td",jp,[t("a",Op,[l("摘樱桃 II"),e(s)])]),Kp,t("td",Vp,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Bp]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Dp]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Np]),_:1})]),t("td",Xp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yp,t("td",Qp,[t("a",Rp,[l("子矩形查询"),e(s)])]),Ap,t("td",Tp,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Wp]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zp]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Fp]),_:1})]),t("td",Gp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sp,t("td",Up,[t("a",Jp,[l("统计全 1 子矩形"),e(s)])]),$p,t("td",t0,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[e0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[l0]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[o0]),_:1}),l(),n0]),t("td",s0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d0,t("td",_0,[t("a",i0,[l("排布二进制网格的最少交换次数"),e(s)])]),a0,t("td",r0,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[c0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[h0]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[u0]),_:1})]),t("td",f0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g0,t("td",m0,[t("a",y0,[l("二维网格图中探测环"),e(s)])]),x0,t("td",p0,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[b0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[k0]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[M0]),_:1}),l(),w0]),t("td",H0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v0,t("td",I0,[t("a",E0,[l("使陆地分离的最少天数"),e(s)])]),z0,t("td",q0,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[L0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[C0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[P0]),_:1}),l(),j0]),t("td",O0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K0,t("td",V0,[t("a",B0,[l("矩阵对角线元素的和"),e(s)])]),D0,t("td",N0,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[X0]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Y0]),_:1})]),t("td",Q0,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[R0,t("td",A0,[t("a",T0,[l("二进制矩阵中的特殊位置"),e(s)])]),W0,t("td",Z0,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[F0]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[G0]),_:1})]),t("td",S0,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[U0,t("td",J0,[t("a",$0,[l("奇怪的打印机 II"),e(s)])]),tb,t("td",eb,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[lb]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[ob]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nb]),_:1}),l(),sb]),t("td",db,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_b,t("td",ib,[t("a",ab,[l("矩阵的最大非负积"),e(s)])]),rb,t("td",cb,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hb]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ub]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[fb]),_:1})]),t("td",gb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mb,t("td",yb,[t("a",xb,[l("连通两组点的最小成本"),e(s)])]),pb,t("td",bb,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[kb]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Mb]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wb]),_:1}),l(),Hb]),t("td",vb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ib,t("td",Eb,[t("a",zb,[l("给定行和列的和求可行矩阵"),e(s)])]),qb,t("td",Lb,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Cb]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pb]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[jb]),_:1})]),t("td",Ob,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kb,t("td",Vb,[t("a",Bb,[l("最小体力消耗路径"),e(s)])]),Db,t("td",Nb,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Yb]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Qb]),_:1}),l(),Rb]),t("td",Ab,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tb,t("td",Wb,[t("a",Zb,[l("矩阵转换后的秩"),e(s)])]),Fb,t("td",Gb,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Sb]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ub]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Jb]),_:1}),l(),$b]),t("td",t3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e3,t("td",l3,[t("a",o3,[l("最富有客户的资产总量"),e(s)])]),n3,t("td",s3,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[d3]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[_3]),_:1})]),t("td",i3,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[a3,t("td",r3,[t("a",c3,[l("球会落何处"),e(s)])]),h3,t("td",u3,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[f3]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[g3]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[m3]),_:1})]),t("td",y3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x3,t("td",p3,[t("a",b3,[l("重新排列后的最大子矩阵"),e(s)])]),k3,t("td",M3,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[w3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[H3]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[v3]),_:1}),l(),I3]),t("td",E3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z3,t("td",q3,[t("a",L3,[l("猫和老鼠 II"),e(s)])]),C3,t("td",P3,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[j3]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[O3]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[K3]),_:1}),l(),V3]),t("td",B3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D3,t("td",N3,[t("a",X3,[l("获取食物的最短路径"),e(s)])]),Y3,t("td",Q3,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[R3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[A3]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[T3]),_:1})]),t("td",W3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z3,t("td",F3,[t("a",G3,[l("找出第 K 大的异或坐标值"),e(s)])]),S3,t("td",U3,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[J3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$3]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[t4]),_:1}),l(),e4]),t("td",l4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o4,t("td",n4,[t("a",s4,[l("地图中的最高点"),e(s)])]),d4,t("td",_4,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[i4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[a4]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[r4]),_:1})]),t("td",c4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h4,t("td",u4,[t("a",f4,[l("最多邀请的个数"),e(s)])]),g4,t("td",m4,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[y4]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[x4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[p4]),_:1}),l(),b4]),t("td",k4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M4,t("td",w4,[t("a",H4,[l("旋转盒子"),e(s)])]),v4,t("td",I4,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[E4]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[z4]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[q4]),_:1})]),t("td",L4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C4,t("td",P4,[t("a",j4,[l("矩阵中最大的三个菱形和"),e(s)])]),O4,t("td",K4,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[V4]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[B4]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[D4]),_:1}),l(),N4]),t("td",X4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y4,t("td",Q4,[t("a",R4,[l("判断矩阵经轮转后是否一致"),e(s)])]),A4,t("td",T4,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[W4]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Z4]),_:1})]),t("td",F4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[G4,t("td",S4,[t("a",U4,[l("最大的幻方"),e(s)])]),J4,t("td",$4,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[t8]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[e8]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[l8]),_:1})]),t("td",o8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n8,t("td",s8,[t("a",d8,[l("寻找峰值 II"),e(s)])]),_8,t("td",i8,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[a8]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[r8]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[c8]),_:1})]),t("td",h8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u8,t("td",f8,[t("a",g8,[l("统计子岛屿"),e(s)])]),m8,t("td",y8,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[x8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[p8]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[b8]),_:1}),l(),k8]),t("td",M8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w8,t("td",H8,[t("a",v8,[l("循环轮转矩阵"),e(s)])]),I8,t("td",E8,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[z8]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[q8]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[L8]),_:1})]),t("td",C8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P8,t("td",j8,[t("a",O8,[l("迷宫中离入口最近的出口"),e(s)])]),K8,t("td",V8,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[B8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[D8]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[N8]),_:1})]),t("td",X8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y8,t("td",Q8,[t("a",R8,[l("扣分后的最大得分"),e(s)])]),A8,t("td",T8,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[W8]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Z8]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[F8]),_:1})]),t("td",G8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S8,t("td",U8,[t("a",J8,[l("检查操作是否合法"),e(s)])]),$8,t("td",t5,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[e5]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[l5]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[o5]),_:1})]),t("td",n5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s5,t("td",d5,[t("a",_5,[l("你能穿过矩阵的最后一天"),e(s)])]),i5,t("td",a5,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[r5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[c5]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[h5]),_:1}),l(),u5]),t("td",f5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[g5,t("td",m5,[t("a",y5,[l("最大方阵和"),e(s)])]),x5,t("td",p5,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[b5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k5]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[M5]),_:1})]),t("td",w5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H5,t("td",v5,[t("a",I5,[l("最小化目标值与所选元素的差"),e(s)])]),E5,t("td",z5,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[q5]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[L5]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[C5]),_:1})]),t("td",P5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j5,t("td",O5,[t("a",K5,[l("找到所有的农场组"),e(s)])]),V5,t("td",B5,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[D5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[N5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[X5]),_:1}),l(),Y5]),t("td",Q5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R5,t("td",A5,[t("a",T5,[l("网格游戏"),e(s)])]),W5,t("td",Z5,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[F5]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[G5]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[S5]),_:1})]),t("td",U5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J5,t("td",$5,[t("a",t6,[l("判断单词是否能放入填字游戏内"),e(s)])]),e6,t("td",l6,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[o6]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[n6]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[s6]),_:1})]),t("td",d6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_6,t("td",i6,[t("a",a6,[l("将一维数组转变成二维数组"),e(s)])]),r6,t("td",c6,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[h6]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[u6]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[f6]),_:1})]),t("td",g6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[m6,t("td",y6,[t("a",x6,[l("获取单值网格的最小操作数"),e(s)])]),p6,t("td",b6,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k6]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[M6]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[w6]),_:1}),l(),H6]),t("td",v6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I6,t("td",E6,[t("a",z6,[l("扫地机器人清扫过的空间个数"),e(s)])]),q6,t("td",L6,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[C6]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[P6]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[j6]),_:1})]),t("td",O6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K6,t("td",V6,[t("a",B6,[l("统计农场中肥沃金字塔的数目"),e(s)])]),D6,t("td",N6,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[X6]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Y6]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Q6]),_:1})]),t("td",R6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A6,t("td",T6,[t("a",W6,[l("使矩阵中的 1 互不相邻的最小操作数"),e(s)])]),Z6,t("td",F6,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[G6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[S6]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[U6]),_:1})]),t("td",J6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$6,t("td",t7,[t("a",e7,[l("银行中的激光束数量"),e(s)])]),l7,t("td",o7,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[n7]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[s7]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[d7]),_:1}),l(),_7]),t("td",i7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a7,t("td",r7,[t("a",c7,[l("通过翻转行或列来去除所有的 1"),e(s)])]),h7,t("td",u7,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[f7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[g7]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[m7]),_:1}),l(),y7]),t("td",x7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p7,t("td",b7,[t("a",k7,[l("用邮票贴满网格图"),e(s)])]),M7,t("td",w7,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[H7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[v7]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[I7]),_:1}),l(),E7]),t("td",z7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[q7,t("td",L7,[t("a",C7,[l("检查是否每一行每一列都包含全部整数"),e(s)])]),P7,t("td",j7,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[O7]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[K7]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[V7]),_:1})]),t("td",B7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[D7,t("td",N7,[t("a",X7,[l("价格范围内最高排名的 K 样物品"),e(s)])]),Y7,t("td",Q7,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[R7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[A7]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[T7]),_:1}),l(),W7]),t("td",Z7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F7,t("td",G7,[t("a",S7,[l("通过翻转行或列来去除所有的 1 II"),e(s)])]),U7,t("td",J7,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[$7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[t9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[e9]),_:1}),l(),l9]),t("td",o9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n9,t("td",s9,[t("a",d9,[l("转角路径的乘积中最多能有几个尾随零"),e(s)])]),_9,t("td",i9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[a9]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[r9]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[c9]),_:1})]),t("td",h9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u9,t("td",f9,[t("a",g9,[l("统计网格图中没有被保卫的格子数"),e(s)])]),m9,t("td",y9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[x9]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[p9]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[b9]),_:1})]),t("td",k9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M9,t("td",w9,[t("a",H9,[l("逃离火灾"),e(s)])]),v9,t("td",I9,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[E9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[z9]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[q9]),_:1}),l(),L9]),t("td",C9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[P9,t("td",j9,[t("a",O9,[l("检查是否有合法括号字符串路径"),e(s)])]),K9,t("td",V9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[B9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[D9]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[N9]),_:1})]),t("td",X9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y9,t("td",Q9,[t("a",R9,[l("在一个网格中可以看到的人数"),e(s)])]),A9,t("td",T9,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[W9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Z9]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[F9]),_:1}),l(),G9]),t("td",S9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U9,t("td",J9,[t("a",$9,[l("到达角落需要移除障碍物的最小数目"),e(s)])]),tk,t("td",ek,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[lk]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ok]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nk]),_:1}),l(),sk]),t("td",dk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_k,t("td",ik,[t("a",ak,[l("网格中的最小路径代价"),e(s)])]),rk,t("td",ck,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hk]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uk]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[fk]),_:1})]),t("td",gk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mk,t("td",yk,[t("a",xk,[l("判断矩阵是否是一个 X 矩阵"),e(s)])]),pk,t("td",bk,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kk]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Mk]),_:1})]),t("td",wk,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Hk,t("td",vk,[t("a",Ik,[l("螺旋矩阵 IV"),e(s)])]),Ek,t("td",zk,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qk]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Lk]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Ck]),_:1}),l(),Pk]),t("td",jk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ok,t("td",Kk,[t("a",Vk,[l("网格图中递增路径的数目"),e(s)])]),Bk,t("td",Dk,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Nk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Xk]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Yk]),_:1}),l(),Qk]),t("td",Rk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ak,t("td",Tk,[t("a",Wk,[l("相等行列对"),e(s)])]),Zk,t("td",Fk,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gk]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Sk]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Uk]),_:1}),l(),Jk]),t("td",$k,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tM,t("td",eM,[t("a",lM,[l("最小化网格中的最大值"),e(s)])]),oM,t("td",nM,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[sM]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[dM]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[_M]),_:1}),l(),iM]),t("td",aM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rM,t("td",cM,[t("a",hM,[l("矩阵中的局部最大值"),e(s)])]),uM,t("td",fM,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[gM]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[mM]),_:1})]),t("td",yM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xM,t("td",pM,[t("a",bM,[l("行排序矩阵的中位数"),e(s)])]),kM,t("td",MM,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wM]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[HM]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[vM]),_:1})]),t("td",IM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EM,t("td",zM,[t("a",qM,[l("给定条件下构造矩阵"),e(s)])]),LM,t("td",CM,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[PM]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[jM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[OM]),_:1}),l(),KM]),t("td",VM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BM,t("td",DM,[t("a",NM,[l("被列覆盖的最多行数"),e(s)])]),XM,t("td",YM,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[QM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[RM]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[AM]),_:1}),l(),TM]),t("td",WM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZM,t("td",FM,[t("a",GM,[l("沙漏的最大总和"),e(s)])]),SM,t("td",UM,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[JM]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[$M]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[tw]),_:1})]),t("td",ew,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lw,t("td",ow,[t("a",nw,[l("矩阵中和能被 K 整除的路径"),e(s)])]),sw,t("td",dw,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_w]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[iw]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[aw]),_:1})]),t("td",rw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cw,t("td",hw,[t("a",uw,[l("行和列中一和零的差值"),e(s)])]),fw,t("td",gw,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mw]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[yw]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[xw]),_:1})]),t("td",pw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bw,t("td",kw,[t("a",Mw,[l("删除每行中的最大值"),e(s)])]),ww,t("td",Hw,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vw]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Iw]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Ew]),_:1}),l(),zw]),t("td",qw,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Lw,t("td",Cw,[t("a",Pw,[l("矩阵查询可获得的最大分数"),e(s)])]),jw,t("td",Ow,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Kw]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Vw]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Bw]),_:1}),l(),Dw]),t("td",Nw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xw,t("td",Yw,[t("a",Qw,[l("检查是否有路径经过相同数量的 0 和 1"),e(s)])]),Rw,t("td",Aw,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Tw]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ww]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Zw]),_:1})]),t("td",Fw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gw,t("td",Sw,[t("a",Uw,[l("子矩阵元素加 1"),e(s)])]),Jw,t("td",$w,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[tH]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[eH]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[lH]),_:1})]),t("td",oH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nH,t("td",sH,[t("a",dH,[l("根据第 K 场考试的分数排序"),e(s)])]),_H,t("td",iH,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[aH]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[rH]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[cH]),_:1})]),t("td",hH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uH,t("td",fH,[t("a",gH,[l("二进制矩阵中翻转最多一次使路径不连通"),e(s)])]),mH,t("td",yH,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[pH]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bH]),_:1}),l(),kH]),t("td",MH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wH,t("td",HH,[t("a",vH,[l("找出对应 LCP 矩阵的字符串"),e(s)])]),IH,t("td",EH,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[zH]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[qH]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[LH]),_:1}),l(),CH]),t("td",PH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jH,t("td",OH,[t("a",KH,[l("在网格图中访问一个格子的最少时间"),e(s)])]),VH,t("td",BH,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[DH]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[NH]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[XH]),_:1}),l(),YH]),t("td",QH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RH,t("td",AH,[t("a",TH,[l("检查骑士巡视方案"),e(s)])]),WH,t("td",ZH,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[FH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[GH]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[SH]),_:1}),l(),UH]),t("td",JH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$H,t("td",tv,[t("a",ev,[l("对角线上的质数"),e(s)])]),lv,t("td",ov,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nv]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[sv]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[dv]),_:1}),l(),_v]),t("td",iv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[av,t("td",rv,[t("a",cv,[l("网格图中最少访问的格子数"),e(s)])]),hv,t("td",uv,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[fv]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[gv]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[mv]),_:1}),l(),yv]),t("td",xv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pv,t("td",bv,[t("a",kv,[l("查询网格图中每一列的宽度"),e(s)])]),Mv,t("td",wv,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hv]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[vv]),_:1})]),t("td",Iv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ev,t("td",zv,[t("a",qv,[l("一最多的行"),e(s)])]),Lv,t("td",Cv,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pv]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[jv]),_:1})]),t("td",Ov,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Kv,t("td",Vv,[t("a",Bv,[l("网格图中鱼的最大数目"),e(s)])]),Dv,t("td",Nv,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xv]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Yv]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Qv]),_:1}),l(),Rv]),t("td",Av,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tv,t("td",Wv,[t("a",Zv,[l("找出叠涂元素"),e(s)])]),Fv,t("td",Gv,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sv]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Uv]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Jv]),_:1})]),t("td",$v,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tI,t("td",eI,[t("a",lI,[l("巡逻的骑士"),e(s)])]),oI,t("td",nI,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sI]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[dI]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[_I]),_:1})]),t("td",iI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aI,t("td",rI,[t("a",cI,[l("矩阵中的和"),e(s)])]),hI,t("td",uI,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fI]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[gI]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[mI]),_:1}),l(),yI]),t("td",xI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pI,t("td",bI,[t("a",kI,[l("矩阵中移动的最大次数"),e(s)])]),MI,t("td",wI,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[HI]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[vI]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[II]),_:1})]),t("td",EI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zI,t("td",qI,[t("a",LI,[l("对角线上不同值的数量差"),e(s)])]),CI,t("td",PI,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jI]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[OI]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[KI]),_:1})]),t("td",VI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[BI,t("td",DI,[t("a",NI,[l("矩阵中严格递增的单元格数"),e(s)])]),XI,t("td",YI,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[QI]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[RI]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[AI]),_:1}),l(),TI]),t("td",WI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZI,t("td",FI,[t("a",GI,[l("找到矩阵中的好子集"),e(s)])]),SI,t("td",UI,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[JI]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$I]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[tE]),_:1}),l(),eE]),t("td",lE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oE,t("td",nE,[t("a",sE,[l("找出最安全路径"),e(s)])]),dE,t("td",_E,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[iE]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[aE]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rE]),_:1}),l(),cE]),t("td",hE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uE,t("td",fE,[t("a",gE,[l("避免淹死并到达目的地的最短时间"),e(s)])]),mE,t("td",yE,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xE]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pE]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[bE]),_:1})]),t("td",kE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ME,t("td",wE,[t("a",HE,[l("将石头分散到网格图的最少移动次数"),e(s)])]),vE,t("td",IE,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[EE]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zE]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[qE]),_:1}),l(),LE]),t("td",CE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PE,t("td",jE,[t("a",OE,[l("所有单元格的远离程度之和"),e(s)])]),KE,t("td",VE,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[BE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[DE]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[NE]),_:1}),l(),XE]),t("td",YE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QE,t("td",RE,[t("a",AE,[l("构造乘积矩阵"),e(s)])]),TE,t("td",WE,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ZE]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[FE]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[GE]),_:1})]),t("td",SE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UE,t("td",JE,[t("a",$E,[l("找到冠军 I"),e(s)])]),tz,t("td",ez,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[lz]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[oz]),_:1})]),t("td",nz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sz,t("td",dz,[t("a",_z,[l("购买物品的最大开销"),e(s)])]),iz,t("td",az,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[rz]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[cz]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[hz]),_:1}),l(),uz]),t("td",fz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gz,t("td",mz,[t("a",yz,[l("循环移位后的矩阵相似检查"),e(s)])]),xz,t("td",pz,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bz]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[kz]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Mz]),_:1}),l(),wz]),t("td",Hz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vz,t("td",Iz,[t("a",Ez,[l("找出缺失和重复的数字"),e(s)])]),zz,t("td",qz,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Lz]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Cz]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Pz]),_:1}),l(),jz]),t("td",Oz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Kz,t("td",Vz,[t("a",Bz,[l("找出网格的区域平均强度"),e(s)])]),Dz,t("td",Nz,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xz]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Yz]),_:1})]),t("td",Qz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rz,t("td",Az,[t("a",Tz,[l("修改矩阵"),e(s)])]),Wz,t("td",Zz,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fz]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Gz]),_:1})]),t("td",Sz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Uz,t("td",Jz,[t("a",$z,[l("出现频率最高的质数"),e(s)])]),tq,t("td",eq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[lq]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[oq]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[nq]),_:1}),l(),sq]),t("td",dq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_q,t("td",iq,[t("a",aq,[l("元素和小于等于 k 的子矩阵的数目"),e(s)])]),rq,t("td",cq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hq]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[uq]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[fq]),_:1})]),t("td",gq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mq,t("td",yq,[t("a",xq,[l("在矩阵上写出字母 Y 所需的最少操作次数"),e(s)])]),pq,t("td",bq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kq]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Mq]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[wq]),_:1}),l(),Hq]),t("td",vq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Iq,t("td",Eq,[t("a",zq,[l("矩阵中的字母数字模式匹配 I"),e(s)])]),qq,t("td",Lq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Cq]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Pq]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[jq]),_:1}),l(),Oq]),t("td",Kq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vq,t("td",Bq,[t("a",Dq,[l("使矩阵满足条件的最少操作次数"),e(s)])]),Nq,t("td",Xq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yq]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Qq]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Rq]),_:1})]),t("td",Aq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tq,t("td",Wq,[t("a",Zq,[l("构造相同颜色的正方形"),e(s)])]),Fq,t("td",Gq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sq]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[Uq]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Jq]),_:1})]),t("td",$q,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[tL,t("td",eL,[t("a",lL,[l("判断矩阵是否满足条件"),e(s)])]),oL,t("td",nL,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sL]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[dL]),_:1})]),t("td",_L,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[iL,t("td",aL,[t("a",rL,[l("矩阵中的最大得分"),e(s)])]),cL,t("td",hL,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uL]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fL]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[gL]),_:1})]),t("td",mL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yL,t("td",xL,[t("a",pL,[l("包含所有 1 的最小矩形面积 I"),e(s)])]),bL,t("td",kL,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ML]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[wL]),_:1})]),t("td",HL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vL,t("td",IL,[t("a",EL,[l("包含所有 1 的最小矩形面积 II"),e(s)])]),zL,t("td",qL,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[LL]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[CL]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[PL]),_:1})]),t("td",jL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[OL,t("td",KL,[t("a",VL,[l("统计 X 和 Y 频数相等的子矩阵数量"),e(s)])]),BL,t("td",DL,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[NL]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[XL]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[YL]),_:1})]),t("td",QL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RL,t("td",AL,[t("a",TL,[l("网格图操作后的最大分数"),e(s)])]),WL,t("td",ZL,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FL]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[GL]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[SL]),_:1}),l(),UL]),t("td",JL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$L,t("td",tC,[t("a",eC,[l("最少翻转次数使二进制矩阵回文 I"),e(s)])]),lC,t("td",oC,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nC]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[sC]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[dC]),_:1})]),t("td",_C,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iC,t("td",aC,[t("a",rC,[l("最少翻转次数使二进制矩阵回文 II"),e(s)])]),cC,t("td",hC,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uC]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[fC]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[gC]),_:1})]),t("td",mC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yC,t("td",xC,[t("a",pC,[l("设计相邻元素求和服务"),e(s)])]),bC,t("td",kC,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[MC]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wC]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[HC]),_:1}),l(),vC]),t("td",IC,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[EC,t("td",zC,[t("a",qC,[l("放三个车的价值之和最大 I"),e(s)])]),LC,t("td",CC,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[PC]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jC]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[OC]),_:1}),l(),KC]),t("td",VC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BC,t("td",DC,[t("a",NC,[l("放三个车的价值之和最大 II"),e(s)])]),XC,t("td",YC,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[QC]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[RC]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[AC]),_:1}),l(),TC]),t("td",WC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZC,t("td",FC,[t("a",GC,[l("选择矩阵中单元格的最大得分"),e(s)])]),SC,t("td",UC,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[JC]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$C]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[tP]),_:1}),l(),eP]),t("td",lP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oP,t("td",nP,[t("a",sP,[l("穿越网格图的安全路径"),e(s)])]),dP,t("td",_P,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[iP]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[aP]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rP]),_:1}),l(),cP]),t("td",hP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uP,t("td",fP,[t("a",gP,[l("构造符合图结构的二维矩阵"),e(s)])]),mP,t("td",yP,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[xP]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pP]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[bP]),_:1}),l(),kP]),t("td",MP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wP,t("td",HP,[t("a",vP,[l("寻宝"),e(s)])]),IP,t("td",EP,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[zP]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[qP]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[LP]),_:1}),l(),CP]),t("td",PP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jP,t("td",OP,[t("a",KP,[l("变换的迷宫"),e(s)])]),VP,t("td",BP,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[DP]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[NP]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[XP]),_:1}),l(),YP]),t("td",QP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RP,t("td",AP,[t("a",TP,[l("守卫城堡"),e(s)])]),WP,t("td",ZP,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FP]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[GP]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[SP]),_:1})]),t("td",UP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JP,t("td",$P,[t("a",tj,[l("无人机方阵"),e(s)])]),ej,t("td",lj,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oj]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[nj]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[sj]),_:1}),l(),dj]),t("td",_j,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ij,t("td",aj,[t("a",rj,[l("黑白翻转棋"),e(s)])]),cj,t("td",hj,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[uj]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fj]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[gj]),_:1})]),t("td",mj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yj,t("td",xj,[t("a",pj,[l("自行车炫技赛场"),e(s)])]),bj,t("td",kj,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Mj]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[wj]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Hj]),_:1}),l(),vj]),t("td",Ij,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ej,t("td",zj,[t("a",qj,[l("信物传送"),e(s)])]),Lj,t("td",Cj,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Pj]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[jj]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Oj]),_:1}),l(),Kj]),t("td",Vj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bj,t("td",Dj,[t("a",Nj,[l("打地鼠"),e(s)])]),Xj,t("td",Yj,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qj]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Rj]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Aj]),_:1}),l(),Tj]),t("td",Wj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zj,t("td",Fj,[t("a",Gj,[l("积木拼接"),e(s)])]),Sj,t("td",Uj,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Jj]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[$j]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[tO]),_:1})]),t("td",eO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lO,t("td",oO,[t("a",nO,[l("弹珠游戏"),e(s)])]),sO,t("td",dO,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_O]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[iO]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[aO]),_:1}),l(),rO]),t("td",cO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hO,t("td",uO,[t("a",fO,[l("集水器"),e(s)])]),gO,t("td",mO,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[yO]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xO]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[pO]),_:1})]),t("td",bO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kO,t("td",MO,[t("a",wO,[l("主题空间"),e(s)])]),HO,t("td",vO,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[IO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[EO]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[zO]),_:1}),l(),qO]),t("td",LO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CO,t("td",PO,[t("a",jO,[l("二维数组中的查找"),e(s)])]),t("td",OO,[t("a",KO,[l("[✓]"),e(s)])]),t("td",VO,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[BO]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[DO]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[NO]),_:1}),l(),XO]),t("td",YO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QO,t("td",RO,[t("a",AO,[l("矩阵中的路径"),e(s)])]),t("td",TO,[t("a",WO,[l("[✓]"),e(s)])]),t("td",ZO,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FO]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[GO]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[SO]),_:1}),l(),UO]),t("td",JO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$O,t("td",tK,[t("a",eK,[l("顺时针打印矩阵"),e(s)])]),t("td",lK,[t("a",oK,[l("[✓]"),e(s)])]),t("td",nK,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sK]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[dK]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[_K]),_:1})]),t("td",iK,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[aK,t("td",rK,[t("a",cK,[l("礼物的最大价值"),e(s)])]),t("td",hK,[t("a",uK,[l("[✓]"),e(s)])]),t("td",fK,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[gK]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[mK]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[yK]),_:1})]),t("td",xK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pK,t("td",bK,[t("a",kK,[l("岛屿的最大面积"),e(s)])]),MK,t("td",wK,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[HK]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[vK]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[IK]),_:1}),l(),EK]),t("td",zK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qK,t("td",LK,[t("a",CK,[l("矩阵中的距离"),e(s)])]),PK,t("td",jK,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[OK]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[KK]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[VK]),_:1}),l(),BK]),t("td",DK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NK,t("td",XK,[t("a",YK,[l("最长递增路径"),e(s)])]),QK,t("td",RK,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[AK]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[TK]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[WK]),_:1}),l(),ZK]),t("td",FK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[GK,t("td",SK,[t("a",UK,[l("二维子矩阵的和"),e(s)])]),JK,t("td",$K,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[tV]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[eV]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[lV]),_:1}),l(),oV]),t("td",nV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sV,t("td",dV,[t("a",_V,[l("矩阵中最大的矩形"),e(s)])]),iV,t("td",aV,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[rV]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[cV]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[hV]),_:1}),l(),uV]),t("td",fV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gV,t("td",mV,[t("a",yV,[l("最小路径之和"),e(s)])]),xV,t("td",pV,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bV]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[kV]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[MV]),_:1})]),t("td",wV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HV,t("td",vV,[t("a",IV,[l("旋转矩阵"),e(s)])]),EV,t("td",zV,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qV]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[LV]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[CV]),_:1})]),t("td",PV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jV,t("td",OV,[t("a",KV,[l("零矩阵"),e(s)])]),VV,t("td",BV,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[DV]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[NV]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[XV]),_:1})]),t("td",YV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QV,t("td",RV,[t("a",AV,[l("迷路的机器人"),e(s)])]),TV,t("td",WV,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ZV]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[FV]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[GV]),_:1}),l(),SV]),t("td",UV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JV,t("td",$V,[t("a",tB,[l("颜色填充"),e(s)])]),eB,t("td",lB,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[oB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[nB]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sB]),_:1}),l(),dB]),t("td",_B,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[iB,t("td",aB,[t("a",rB,[l("排序矩阵查找"),e(s)])]),cB,t("td",hB,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uB]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[fB]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[gB]),_:1}),l(),mB]),t("td",yB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xB,t("td",pB,[t("a",bB,[l("井字游戏"),e(s)])]),kB,t("td",MB,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wB]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[HB]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[vB]),_:1})]),t("td",IB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EB,t("td",zB,[t("a",qB,[l("水域大小"),e(s)])]),LB,t("td",CB,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[PB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[jB]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[OB]),_:1}),l(),KB]),t("td",VB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[BB,t("td",DB,[t("a",NB,[l("兰顿蚂蚁"),e(s)])]),XB,t("td",YB,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[QB]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[RB]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[AB]),_:1}),l(),TB]),t("td",WB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZB,t("td",FB,[t("a",GB,[l("最大黑方阵"),e(s)])]),SB,t("td",UB,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[JB]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$B]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[tD]),_:1})]),t("td",eD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lD,t("td",oD,[t("a",nD,[l("最大子矩阵"),e(s)])]),sD,t("td",dD,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_D]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[iD]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[aD]),_:1}),l(),rD]),t("td",cD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const mD=i(h,[["render",hD],["__file","matrix.html.vue"]]);export{mD as default};
