import{_ as d,r as c,o as u,c as h,a as t,b as n,d as e,w as s,f as k,e as m}from"./app-PpWft8bW.js";const _={},g={id:"_62-不同路径",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#_62-不同路径","aria-hidden":"true"},"#",-1),b={href:"https://2xiao.github.io/leetcode-js/problem/0062.html",target:"_blank",rel:"noopener noreferrer"},y=t("code",null,"数学",-1),x=t("code",null,"动态规划",-1),v=t("code",null,"组合数学",-1),w={href:"https://leetcode.cn/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},j=t("code",null,"力扣",-1),q={href:"https://leetcode.com/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},O=t("code",null,"LeetCode",-1),T=m('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>There is a robot on an <code>m x n</code> grid. The robot is initially located at the <strong>top-left corner</strong> (i.e., <code>grid[0][0]</code>). The robot tries to move to the <strong>bottom-right corner</strong> (i.e., <code>grid[m - 1][n - 1]</code>). The robot can only move either down or right at any point in time.</p><p>Given the two integers <code>m</code> and <code>n</code>, return <em>the number of possible unique paths that the robot can take to reach the bottom-right corner</em>.</p><p>The test cases are generated so that the answer will be less than or equal to <code>2 * 10^9</code>.</p><p><strong>Example 1:</strong></p><figure><img src="https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>Input: m = 3, n = 7</p><p>Output: 28</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: m = 3, n = 2</p><p>Output: 3</p><p>Explanation: From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:</p><ol><li><p>Right -&gt; Down -&gt; Down</p></li><li><p>Down -&gt; Down -&gt; Right</p></li><li><p>Down -&gt; Right -&gt; Down</p></li></ol></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= m, n &lt;= 100</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为“Start” ）。机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为“Finish”）。问总共有多少条不同的路径？</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>可以使用动态规划来解决问题，机器人到达每个格子的路径数如下所示:</p><table><thead><tr><th>❤️</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td></tr><tr><td>1</td><td>3</td><td>6</td><td>10</td><td>15</td><td>21</td><td>28</td></tr></tbody></table><ol><li><p><strong>动态规划</strong>：定义一个二维数组 <code>dp</code>，其中 <code>dp[i][j]</code> 表示从 <code>(0, 0)</code> 到 <code>(i, j)</code> 的不同路径数目。</p></li><li><p><strong>状态转移方程</strong>：从 <code>(0, 0)</code> 到 <code>(i, j)</code> 的路径有两条：从 <code>(i-1, j)</code> 向下移动和从 <code>(i, j-1)</code> 向右移动，到达 <code>(i, j)</code> 的路径数就是上方格子 <code>(i-1, j)</code> 和左边格子 <code>(i, j-1)</code> 的路径数之和。状态转移方程为 <code>dp[i][j] = dp[i-1][j] + dp[i][j-1]</code>。</p></li><li><p><strong>边界条件</strong>：对于第一行和第一列，由于它们只能从上方或左侧移动到达，所以路径数目都是 1。</p></li><li><p><strong>初始化</strong>：初始化第一行和第一列的路径数目。</p></li></ol><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>: <code>O(m * n)</code>，遍历整个二维数组。</li><li><strong>空间复杂度</strong>: <code>O(m * n)</code>，使用了一个二维数组来存储中间状态。可以优化为 <code>O(n)</code>，只需使用一维数组来存储当前行的状态。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2>',20),A=t("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token comment"},"// 时间复杂度 O(m * n)，空间复杂度 O(m * n)"),n(`
`),t("span",{class:"token doc-comment comment"},[n(`/**
 * `),t("span",{class:"token keyword"},"@param"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"}")]),n(),t("span",{class:"token parameter"},"m"),n(`
 * `),t("span",{class:"token keyword"},"@param"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"}")]),n(),t("span",{class:"token parameter"},"n"),n(`
 * `),t("span",{class:"token keyword"},"@return"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`
`),t("span",{class:"token keyword"},"var"),n(),t("span",{class:"token function-variable function"},"uniquePaths"),n(),t("span",{class:"token operator"},"="),n(),t("span",{class:"token keyword"},"function"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[n("m"),t("span",{class:"token punctuation"},","),n(" n")]),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
	`),t("span",{class:"token keyword"},"const"),n(" dp "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token keyword"},"new"),n(),t("span",{class:"token class-name"},"Array"),t("span",{class:"token punctuation"},"("),n("m"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"fill"),t("span",{class:"token punctuation"},"("),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"map"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token operator"},"=>"),n(),t("span",{class:"token keyword"},"new"),n(),t("span",{class:"token class-name"},"Array"),t("span",{class:"token punctuation"},"("),n("n"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"fill"),t("span",{class:"token punctuation"},"("),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),n(`
	`),t("span",{class:"token keyword"},"for"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),n(" i "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),n(" i "),t("span",{class:"token operator"},"<"),n(" m"),t("span",{class:"token punctuation"},";"),n(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
		`),t("span",{class:"token keyword"},"for"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),n(" j "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),n(" j "),t("span",{class:"token operator"},"<"),n(" n"),t("span",{class:"token punctuation"},";"),n(" j"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
			dp`),t("span",{class:"token punctuation"},"["),n("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"["),n("j"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"="),n(" dp"),t("span",{class:"token punctuation"},"["),n("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"["),n("j "),t("span",{class:"token operator"},"-"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"+"),n(" dp"),t("span",{class:"token punctuation"},"["),n("i "),t("span",{class:"token operator"},"-"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"["),n("j"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),n(`
		`),t("span",{class:"token punctuation"},"}"),n(`
	`),t("span",{class:"token punctuation"},"}"),n(`
	`),t("span",{class:"token keyword"},"return"),n(" dp"),t("span",{class:"token punctuation"},"["),n("m "),t("span",{class:"token operator"},"-"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"["),n("n "),t("span",{class:"token operator"},"-"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),n(`
`),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),C=t("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token comment"},"// 时间复杂度 O(m * n)，空间复杂度优化后为 O(n)"),n(`
`),t("span",{class:"token doc-comment comment"},[n(`/**
 * `),t("span",{class:"token keyword"},"@param"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"}")]),n(),t("span",{class:"token parameter"},"m"),n(`
 * `),t("span",{class:"token keyword"},"@param"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"}")]),n(),t("span",{class:"token parameter"},"n"),n(`
 * `),t("span",{class:"token keyword"},"@return"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`
`),t("span",{class:"token keyword"},"var"),n(),t("span",{class:"token function-variable function"},"uniquePaths"),n(),t("span",{class:"token operator"},"="),n(),t("span",{class:"token keyword"},"function"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[n("m"),t("span",{class:"token punctuation"},","),n(" n")]),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
	`),t("span",{class:"token keyword"},"const"),n(" dp "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token keyword"},"new"),n(),t("span",{class:"token class-name"},"Array"),t("span",{class:"token punctuation"},"("),n("n"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"fill"),t("span",{class:"token punctuation"},"("),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),n(`
	`),t("span",{class:"token keyword"},"for"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),n(" i "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),n(" i "),t("span",{class:"token operator"},"<"),n(" m"),t("span",{class:"token punctuation"},";"),n(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
		`),t("span",{class:"token keyword"},"for"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),n(" j "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),n(" j "),t("span",{class:"token operator"},"<"),n(" n"),t("span",{class:"token punctuation"},";"),n(" j"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
			dp`),t("span",{class:"token punctuation"},"["),n("j"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"="),n(" dp"),t("span",{class:"token punctuation"},"["),n("j "),t("span",{class:"token operator"},"-"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"+"),n(" dp"),t("span",{class:"token punctuation"},"["),n("j"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),n(`
		`),t("span",{class:"token punctuation"},"}"),n(`
	`),t("span",{class:"token punctuation"},"}"),n(`
	`),t("span",{class:"token keyword"},"return"),n(" dp"),t("span",{class:"token punctuation"},"["),n("n "),t("span",{class:"token operator"},"-"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),n(`
`),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),D=t("h2",{id:"相关题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),n(" 相关题目")],-1),E=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),I=t("td",{style:{"text-align":"center"}},"63",-1),M={style:{"text-align":"left"}},L={href:"https://leetcode.com/problems/unique-paths-ii",target:"_blank",rel:"noopener noreferrer"},N={style:{"text-align":"center"}},R={style:{"text-align":"left"}},V=t("code",null,"数组",-1),B=t("code",null,"动态规划",-1),z=t("code",null,"矩阵",-1),F={style:{"text-align":"left"}},H=t("td",{style:{"text-align":"center"}},"64",-1),P={style:{"text-align":"left"}},S={href:"https://leetcode.com/problems/minimum-path-sum",target:"_blank",rel:"noopener noreferrer"},G={style:{"text-align":"center"}},K={style:{"text-align":"left"}},J=t("code",null,"数组",-1),Q=t("code",null,"动态规划",-1),U=t("code",null,"矩阵",-1),W={style:{"text-align":"left"}},X=t("td",{style:{"text-align":"center"}},"174",-1),Y={style:{"text-align":"left"}},Z={href:"https://leetcode.com/problems/dungeon-game",target:"_blank",rel:"noopener noreferrer"},$={style:{"text-align":"center"}},tt={style:{"text-align":"left"}},nt=t("code",null,"数组",-1),et=t("code",null,"动态规划",-1),st=t("code",null,"矩阵",-1),at={style:{"text-align":"left"}},ot=t("td",{style:{"text-align":"center"}},"2087",-1),lt={style:{"text-align":"left"}},ct={href:"https://leetcode.com/problems/minimum-cost-homecoming-of-a-robot-in-a-grid",target:"_blank",rel:"noopener noreferrer"},it=t("td",{style:{"text-align":"center"}},null,-1),rt={style:{"text-align":"left"}},pt=t("code",null,"贪心",-1),dt=t("code",null,"数组",-1),ut={style:{"text-align":"left"}},ht=t("td",{style:{"text-align":"center"}},"2304",-1),kt={style:{"text-align":"left"}},mt={href:"https://leetcode.com/problems/minimum-path-cost-in-a-grid",target:"_blank",rel:"noopener noreferrer"},_t=t("td",{style:{"text-align":"center"}},null,-1),gt={style:{"text-align":"left"}},ft=t("code",null,"数组",-1),bt=t("code",null,"动态规划",-1),yt=t("code",null,"矩阵",-1),xt={style:{"text-align":"left"}},vt=t("td",{style:{"text-align":"center"}},"2400",-1),wt={style:{"text-align":"left"}},jt={href:"https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},qt=t("td",{style:{"text-align":"center"}},null,-1),Ot={style:{"text-align":"left"}},Tt=t("code",null,"数学",-1),At=t("code",null,"动态规划",-1),Ct=t("code",null,"组合数学",-1),Dt={style:{"text-align":"left"}},Et=t("td",{style:{"text-align":"center"}},"2435",-1),It={style:{"text-align":"left"}},Mt={href:"https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},Lt=t("td",{style:{"text-align":"center"}},null,-1),Nt={style:{"text-align":"left"}},Rt=t("code",null,"数组",-1),Vt=t("code",null,"动态规划",-1),Bt=t("code",null,"矩阵",-1),zt={style:{"text-align":"left"}};function Ft(Ht,Pt){const o=c("ExternalLinkIcon"),l=c("font"),a=c("RouterLink"),p=c("CodeTabs");return u(),h("div",null,[t("h1",g,[f,n(),t("a",b,[n("62. 不同路径"),e(o)])]),t("p",null,[n("🟠 "),e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1}),n("  🔖  "),e(a,{to:"/tag/math.html"},{default:s(()=>[y]),_:1}),n(),e(a,{to:"/tag/dynamic-programming.html"},{default:s(()=>[x]),_:1}),n(),e(a,{to:"/tag/combinatorics.html"},{default:s(()=>[v]),_:1}),n("  🔗 "),t("a",w,[j,e(o)]),n(),t("a",q,[O,e(o)])]),T,e(p,{id:"200",data:[{id:"动态规划"},{id:"动态规划-状态压缩"}]},{title0:s(({value:i,isActive:r})=>[n("动态规划")]),title1:s(({value:i,isActive:r})=>[n("动态规划-状态压缩")]),tab0:s(({value:i,isActive:r})=>[A]),tab1:s(({value:i,isActive:r})=>[C]),_:1}),D,k(" prettier-ignore "),t("table",null,[E,t("tbody",null,[t("tr",null,[I,t("td",M,[t("a",L,[n("不同路径 II"),e(o)])]),t("td",N,[e(a,{to:"/problem/0063.html"},{default:s(()=>[n("[✓]")]),_:1})]),t("td",R,[e(a,{to:"/tag/array.html"},{default:s(()=>[V]),_:1}),n(),e(a,{to:"/tag/dynamic-programming.html"},{default:s(()=>[B]),_:1}),n(),e(a,{to:"/tag/matrix.html"},{default:s(()=>[z]),_:1})]),t("td",F,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[H,t("td",P,[t("a",S,[n("最小路径和"),e(o)])]),t("td",G,[e(a,{to:"/problem/0064.html"},{default:s(()=>[n("[✓]")]),_:1})]),t("td",K,[e(a,{to:"/tag/array.html"},{default:s(()=>[J]),_:1}),n(),e(a,{to:"/tag/dynamic-programming.html"},{default:s(()=>[Q]),_:1}),n(),e(a,{to:"/tag/matrix.html"},{default:s(()=>[U]),_:1})]),t("td",W,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[X,t("td",Y,[t("a",Z,[n("地下城游戏"),e(o)])]),t("td",$,[e(a,{to:"/problem/0174.html"},{default:s(()=>[n("[✓]")]),_:1})]),t("td",tt,[e(a,{to:"/tag/array.html"},{default:s(()=>[nt]),_:1}),n(),e(a,{to:"/tag/dynamic-programming.html"},{default:s(()=>[et]),_:1}),n(),e(a,{to:"/tag/matrix.html"},{default:s(()=>[st]),_:1})]),t("td",at,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[ot,t("td",lt,[t("a",ct,[n("网格图中机器人回家的最小代价"),e(o)])]),it,t("td",rt,[e(a,{to:"/tag/greedy.html"},{default:s(()=>[pt]),_:1}),n(),e(a,{to:"/tag/array.html"},{default:s(()=>[dt]),_:1})]),t("td",ut,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[ht,t("td",kt,[t("a",mt,[n("网格中的最小路径代价"),e(o)])]),_t,t("td",gt,[e(a,{to:"/tag/array.html"},{default:s(()=>[ft]),_:1}),n(),e(a,{to:"/tag/dynamic-programming.html"},{default:s(()=>[bt]),_:1}),n(),e(a,{to:"/tag/matrix.html"},{default:s(()=>[yt]),_:1})]),t("td",xt,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[vt,t("td",wt,[t("a",jt,[n("恰好移动 k 步到达某一位置的方法数目"),e(o)])]),qt,t("td",Ot,[e(a,{to:"/tag/math.html"},{default:s(()=>[Tt]),_:1}),n(),e(a,{to:"/tag/dynamic-programming.html"},{default:s(()=>[At]),_:1}),n(),e(a,{to:"/tag/combinatorics.html"},{default:s(()=>[Ct]),_:1})]),t("td",Dt,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Et,t("td",It,[t("a",Mt,[n("矩阵中和能被 K 整除的路径"),e(o)])]),Lt,t("td",Nt,[e(a,{to:"/tag/array.html"},{default:s(()=>[Rt]),_:1}),n(),e(a,{to:"/tag/dynamic-programming.html"},{default:s(()=>[Vt]),_:1}),n(),e(a,{to:"/tag/matrix.html"},{default:s(()=>[Bt]),_:1})]),t("td",zt,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])])])])])}const Gt=d(_,[["render",Ft],["__file","0062.html.vue"]]);export{Gt as default};
