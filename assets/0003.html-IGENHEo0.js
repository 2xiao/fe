import{_ as p,r as c,o as _,c as h,a as t,b as n,d as e,w as s,f as k,e as d}from"./app-PpWft8bW.js";const m={},g={id:"_3-无重复字符的最长子串",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#_3-无重复字符的最长子串","aria-hidden":"true"},"#",-1),b={href:"https://2xiao.github.io/leetcode-js/problem/0003.html",target:"_blank",rel:"noopener noreferrer"},y=t("code",null,"哈希表",-1),x=t("code",null,"字符串",-1),w=t("code",null,"滑动窗口",-1),v={href:"https://leetcode.cn/problems/longest-substring-without-repeating-characters",target:"_blank",rel:"noopener noreferrer"},q=t("code",null,"力扣",-1),M={href:"https://leetcode.com/problems/longest-substring-without-repeating-characters",target:"_blank",rel:"noopener noreferrer"},O=t("code",null,"LeetCode",-1),S=d('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given a string <code>s</code>, find the length of the <strong>longest</strong> <strong>substring</strong> without repeating characters.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: s = &quot;abcabcbb&quot;</p><p>Output: 3</p><p>Explanation: The answer is &quot;abc&quot;, with the length of 3.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: s = &quot;bbbbb&quot;</p><p>Output: 1</p><p>Explanation: The answer is &quot;b&quot;, with the length of 1.</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: s = &quot;pwwkew&quot;</p><p>Output: 3</p><p>Explanation: The answer is &quot;wke&quot;, with the length of 3.</p><p>Notice that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>0 &lt;= s.length &lt;= 5 * 10^4</code></li><li><code>s</code> consists of English letters, digits, symbols and spaces.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给定一个字符串 <code>s</code> ，请你找出其中不含有重复字符的 <strong>最长子串</strong> 的长度。</p><p><strong>子字符串</strong> 是字符串中连续的 <strong>非空</strong> 字符序列。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>这一题可以使用 <strong>滑动窗口</strong> 技巧来解决。</p><ol><li><p><strong>定义滑动窗口</strong>：</p><ul><li>使用两个指针 <code>left</code> 和 <code>right</code> 来表示滑动窗口的左右边界。滑动窗口会随着指针的移动而扩大或收缩。</li><li>维护一个 <code>window</code> 对象，记录当前窗口中各字符出现的频次。</li></ul></li><li><p><strong>扩展右指针</strong>：</p><ul><li>每次将右指针 <code>right</code> 向右移动一格，将对应的字符加入 <code>window</code>，更新该字符的出现次数。</li></ul></li><li><p><strong>收缩左指针</strong>：</p><ul><li>如果当前字符已经在窗口中出现了不止一次（即 <code>window[c] &gt; 1</code>），说明当前窗口中有重复字符。此时我们要通过移动左指针 <code>left</code> 来缩小窗口，直到去掉重复的字符，保证窗口内每个字符只出现一次。</li></ul></li><li><p><strong>记录结果</strong>：</p><ul><li>每次调整完窗口后，检查当前窗口的大小，并更新最长子串的长度 <code>res</code>。</li></ul></li><li><p><strong>终止条件</strong>：</p><ul><li>当右指针遍历到字符串的末尾时，循环结束，返回 <code>res</code> 即为最长不含重复字符的子串长度。</li></ul></li></ol>',16),E=d('<h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><p><strong>时间复杂度</strong>： <code>O(n)</code>，其中 <code>n</code> 是字符串 <code>s</code> 的长度。</p><ul><li>外层的 <code>while</code> 循环遍历字符串 <code>s</code>，每个字符最多只会被左指针和右指针访问一次。因此，整个滑动窗口算法的时间复杂度为 <code>O(n)</code>，因为每个字符至多只会被访问两次（一次右指针移动，一次左指针移动）。</li><li>更新 <code>window</code> 和比较操作都是常数时间操作 <code>O(1)</code>，不会影响整体复杂度。</li></ul></li><li><p><strong>空间复杂度</strong>： <code>O(1)</code></p><ul><li>虽然在 <code>window</code> 中存储字符的频次，但 <code>window</code> 最多只会包含 128 个 ASCII 字符，因此空间复杂度为 <code>O(1)</code>，与字符串 <code>s</code> 的长度无关。</li><li>其他变量如 <code>left</code>、<code>right</code>、<code>res</code> 以及中间变量 <code>c</code> 和 <code>d</code> 都只占用常数空间。</li></ul></li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2>',3),I=t("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token doc-comment comment"},[n(`/**
 * `),t("span",{class:"token keyword"},"@param"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("string"),t("span",{class:"token punctuation"},"}")]),n(),t("span",{class:"token parameter"},"s"),n(`
 * `),t("span",{class:"token keyword"},"@return"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`
`),t("span",{class:"token keyword"},"var"),n(),t("span",{class:"token function-variable function"},"lengthOfLongestSubstring"),n(),t("span",{class:"token operator"},"="),n(),t("span",{class:"token keyword"},"function"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},"s"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
	`),t("span",{class:"token keyword"},"let"),n(" window "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token punctuation"},"{"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),n(),t("span",{class:"token comment"},"// 记录窗口内字符的频次"),n(`
		left `),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},","),n(),t("span",{class:"token comment"},"// 左指针"),n(`
		right `),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},","),n(),t("span",{class:"token comment"},"// 右指针"),n(`
		res `),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),n(),t("span",{class:"token comment"},"// 记录最长子串的长度"),n(`

	`),t("span",{class:"token comment"},"// 遍历字符串"),n(`
	`),t("span",{class:"token keyword"},"while"),n(),t("span",{class:"token punctuation"},"("),n("right "),t("span",{class:"token operator"},"<"),n(" s"),t("span",{class:"token punctuation"},"."),n("length"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
		`),t("span",{class:"token keyword"},"let"),n(" c "),t("span",{class:"token operator"},"="),n(" s"),t("span",{class:"token punctuation"},"["),n("right"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),n(),t("span",{class:"token comment"},"// 当前右指针指向的字符"),n(`
		right`),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},";"),n(),t("span",{class:"token comment"},"// 右指针向右移动"),n(`
		window`),t("span",{class:"token punctuation"},"["),n("c"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"="),n(),t("span",{class:"token punctuation"},"("),n("window"),t("span",{class:"token punctuation"},"["),n("c"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"||"),n(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token operator"},"+"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),n(),t("span",{class:"token comment"},"// 统计当前字符的频次"),n(`

		`),t("span",{class:"token comment"},"// 如果窗口内有重复字符，收缩窗口"),n(`
		`),t("span",{class:"token keyword"},"while"),n(),t("span",{class:"token punctuation"},"("),n("window"),t("span",{class:"token punctuation"},"["),n("c"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},">"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
			`),t("span",{class:"token keyword"},"let"),n(" d "),t("span",{class:"token operator"},"="),n(" s"),t("span",{class:"token punctuation"},"["),n("left"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),n(),t("span",{class:"token comment"},"// 左指针指向的字符"),n(`
			left`),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},";"),n(),t("span",{class:"token comment"},"// 左指针向右移动，缩小窗口"),n(`
			window`),t("span",{class:"token punctuation"},"["),n("d"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),n(),t("span",{class:"token comment"},"// 减少窗口内字符频次"),n(`
		`),t("span",{class:"token punctuation"},"}"),n(`

		`),t("span",{class:"token comment"},"// 更新结果，记录最大长度"),n(`
		res `),t("span",{class:"token operator"},"="),n(" Math"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"max"),t("span",{class:"token punctuation"},"("),n("res"),t("span",{class:"token punctuation"},","),n(" right "),t("span",{class:"token operator"},"-"),n(" left"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),n(`
	`),t("span",{class:"token punctuation"},"}"),n(`

	`),t("span",{class:"token keyword"},"return"),n(" res"),t("span",{class:"token punctuation"},";"),n(),t("span",{class:"token comment"},"// 返回最长不含重复字符的子串长度"),n(`
`),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),C=t("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token doc-comment comment"},[n(`/**
 * `),t("span",{class:"token keyword"},"@param"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("string"),t("span",{class:"token punctuation"},"}")]),n(),t("span",{class:"token parameter"},"s"),n(`
 * `),t("span",{class:"token keyword"},"@return"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`
`),t("span",{class:"token keyword"},"var"),n(),t("span",{class:"token function-variable function"},"lengthOfLongestSubstring"),n(),t("span",{class:"token operator"},"="),n(),t("span",{class:"token keyword"},"function"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},"s"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
	`),t("span",{class:"token keyword"},"let"),n(" max "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),n(`
	`),t("span",{class:"token keyword"},"let"),n(" curStr "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token string"},"''"),t("span",{class:"token punctuation"},";"),n(`
	`),t("span",{class:"token keyword"},"for"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),n(" i "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),n(" i "),t("span",{class:"token operator"},"<"),n(" s"),t("span",{class:"token punctuation"},"."),n("length"),t("span",{class:"token punctuation"},";"),n(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
		`),t("span",{class:"token keyword"},"const"),n(" char "),t("span",{class:"token operator"},"="),n(" s"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"charAt"),t("span",{class:"token punctuation"},"("),n("i"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),n(`
		`),t("span",{class:"token keyword"},"const"),n(" pos "),t("span",{class:"token operator"},"="),n(" curStr"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"indexOf"),t("span",{class:"token punctuation"},"("),n("char"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),n(`
		`),t("span",{class:"token keyword"},"if"),n(),t("span",{class:"token punctuation"},"("),n("pos "),t("span",{class:"token operator"},"!=="),n(),t("span",{class:"token operator"},"-"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
			curStr `),t("span",{class:"token operator"},"="),n(" curStr"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"slice"),t("span",{class:"token punctuation"},"("),n("pos "),t("span",{class:"token operator"},"+"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),n(" curStr"),t("span",{class:"token punctuation"},"."),n("length"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),n(`
		`),t("span",{class:"token punctuation"},"}"),n(`
		curStr `),t("span",{class:"token operator"},"+="),n(" char"),t("span",{class:"token punctuation"},";"),n(`
		max `),t("span",{class:"token operator"},"="),n(" Math"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"max"),t("span",{class:"token punctuation"},"("),n("max"),t("span",{class:"token punctuation"},","),n(" curStr"),t("span",{class:"token punctuation"},"."),n("length"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),n(`
	`),t("span",{class:"token punctuation"},"}"),n(`
	`),t("span",{class:"token keyword"},"return"),n(" max"),t("span",{class:"token punctuation"},";"),n(`
`),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),j=t("h2",{id:"相关题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),n(" 相关题目")],-1),L=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),A=t("td",{style:{"text-align":"center"}},"159",-1),N={style:{"text-align":"left"}},T={href:"https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters",target:"_blank",rel:"noopener noreferrer"},V=t("td",{style:{"text-align":"center"}},null,-1),B={style:{"text-align":"left"}},K=t("code",null,"哈希表",-1),R=t("code",null,"字符串",-1),G=t("code",null,"滑动窗口",-1),H={style:{"text-align":"left"}},z=t("td",{style:{"text-align":"center"}},"340",-1),D={style:{"text-align":"left"}},F={href:"https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters",target:"_blank",rel:"noopener noreferrer"},J=t("td",{style:{"text-align":"center"}},null,-1),P={style:{"text-align":"left"}},Q=t("code",null,"哈希表",-1),U=t("code",null,"字符串",-1),W=t("code",null,"滑动窗口",-1),X={style:{"text-align":"left"}},Y=t("td",{style:{"text-align":"center"}},"992",-1),Z={style:{"text-align":"left"}},$={href:"https://leetcode.com/problems/subarrays-with-k-different-integers",target:"_blank",rel:"noopener noreferrer"},tt=t("td",{style:{"text-align":"center"}},null,-1),nt={style:{"text-align":"left"}},et=t("code",null,"数组",-1),st=t("code",null,"哈希表",-1),ot=t("code",null,"计数",-1),at=t("code",null,"1+",-1),lt={style:{"text-align":"left"}},ct=t("td",{style:{"text-align":"center"}},"1695",-1),it={style:{"text-align":"left"}},rt={href:"https://leetcode.com/problems/maximum-erasure-value",target:"_blank",rel:"noopener noreferrer"},dt=t("td",{style:{"text-align":"center"}},null,-1),ut={style:{"text-align":"left"}},pt=t("code",null,"数组",-1),_t=t("code",null,"哈希表",-1),ht=t("code",null,"滑动窗口",-1),kt={style:{"text-align":"left"}},mt=t("td",{style:{"text-align":"center"}},"2067",-1),gt={style:{"text-align":"left"}},ft={href:"https://leetcode.com/problems/number-of-equal-count-substrings",target:"_blank",rel:"noopener noreferrer"},bt=t("td",{style:{"text-align":"center"}},null,-1),yt={style:{"text-align":"left"}},xt=t("code",null,"字符串",-1),wt=t("code",null,"计数",-1),vt=t("code",null,"前缀和",-1),qt={style:{"text-align":"left"}},Mt=t("td",{style:{"text-align":"center"}},"2260",-1),Ot={style:{"text-align":"left"}},St={href:"https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up",target:"_blank",rel:"noopener noreferrer"},Et={style:{"text-align":"center"}},It={style:{"text-align":"left"}},Ct=t("code",null,"数组",-1),jt=t("code",null,"哈希表",-1),Lt=t("code",null,"滑动窗口",-1),At={style:{"text-align":"left"}},Nt=t("td",{style:{"text-align":"center"}},"2401",-1),Tt={style:{"text-align":"left"}},Vt={href:"https://leetcode.com/problems/longest-nice-subarray",target:"_blank",rel:"noopener noreferrer"},Bt=t("td",{style:{"text-align":"center"}},null,-1),Kt={style:{"text-align":"left"}},Rt=t("code",null,"位运算",-1),Gt=t("code",null,"数组",-1),Ht=t("code",null,"滑动窗口",-1),zt={style:{"text-align":"left"}},Dt=t("td",{style:{"text-align":"center"}},"2405",-1),Ft={style:{"text-align":"left"}},Jt={href:"https://leetcode.com/problems/optimal-partition-of-string",target:"_blank",rel:"noopener noreferrer"},Pt=t("td",{style:{"text-align":"center"}},null,-1),Qt={style:{"text-align":"left"}},Ut=t("code",null,"贪心",-1),Wt=t("code",null,"哈希表",-1),Xt=t("code",null,"字符串",-1),Yt={style:{"text-align":"left"}},Zt=t("td",{style:{"text-align":"center"}},"2799",-1),$t={style:{"text-align":"left"}},tn={href:"https://leetcode.com/problems/count-complete-subarrays-in-an-array",target:"_blank",rel:"noopener noreferrer"},nn=t("td",{style:{"text-align":"center"}},null,-1),en={style:{"text-align":"left"}},sn=t("code",null,"数组",-1),on=t("code",null,"哈希表",-1),an=t("code",null,"滑动窗口",-1),ln={style:{"text-align":"left"}},cn=t("td",{style:{"text-align":"center"}},"2981",-1),rn={style:{"text-align":"left"}},dn={href:"https://leetcode.com/problems/find-longest-special-substring-that-occurs-thrice-i",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},null,-1),pn={style:{"text-align":"left"}},_n=t("code",null,"哈希表",-1),hn=t("code",null,"字符串",-1),kn=t("code",null,"二分查找",-1),mn=t("code",null,"2+",-1),gn={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"2982",-1),bn={style:{"text-align":"left"}},yn={href:"https://leetcode.com/problems/find-longest-special-substring-that-occurs-thrice-ii",target:"_blank",rel:"noopener noreferrer"},xn=t("td",{style:{"text-align":"center"}},null,-1),wn={style:{"text-align":"left"}},vn=t("code",null,"哈希表",-1),qn=t("code",null,"字符串",-1),Mn=t("code",null,"二分查找",-1),On=t("code",null,"2+",-1),Sn={style:{"text-align":"left"}};function En(In,Cn){const a=c("ExternalLinkIcon"),l=c("font"),o=c("RouterLink"),u=c("CodeTabs");return _(),h("div",null,[t("h1",g,[f,n(),t("a",b,[n("3. 无重复字符的最长子串"),e(a)])]),t("p",null,[n("🟠 "),e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1}),n("  🔖  "),e(o,{to:"/tag/hash-table.html"},{default:s(()=>[y]),_:1}),n(),e(o,{to:"/tag/string.html"},{default:s(()=>[x]),_:1}),n(),e(o,{to:"/tag/sliding-window.html"},{default:s(()=>[w]),_:1}),n("  🔗 "),t("a",v,[q,e(a)]),n(),t("a",M,[O,e(a)])]),S,t("p",null,[n("详细的滑动窗口答题框架讲解，可阅读 "),e(o,{to:"/book/slide_window.html"},{default:s(()=>[n("《3.11 滑动窗口》")]),_:1}),n("。")]),E,e(u,{id:"199",data:[{id:"滑动窗口框架"},{id:"简化版"}]},{title0:s(({value:i,isActive:r})=>[n("滑动窗口框架")]),title1:s(({value:i,isActive:r})=>[n("简化版")]),tab0:s(({value:i,isActive:r})=>[I]),tab1:s(({value:i,isActive:r})=>[C]),_:1}),j,k(" prettier-ignore "),t("table",null,[L,t("tbody",null,[t("tr",null,[A,t("td",N,[t("a",T,[n("至多包含两个不同字符的最长子串 🔒"),e(a)])]),V,t("td",B,[e(o,{to:"/tag/hash-table.html"},{default:s(()=>[K]),_:1}),n(),e(o,{to:"/tag/string.html"},{default:s(()=>[R]),_:1}),n(),e(o,{to:"/tag/sliding-window.html"},{default:s(()=>[G]),_:1})]),t("td",H,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[z,t("td",D,[t("a",F,[n("至多包含 K 个不同字符的最长子串 🔒"),e(a)])]),J,t("td",P,[e(o,{to:"/tag/hash-table.html"},{default:s(()=>[Q]),_:1}),n(),e(o,{to:"/tag/string.html"},{default:s(()=>[U]),_:1}),n(),e(o,{to:"/tag/sliding-window.html"},{default:s(()=>[W]),_:1})]),t("td",X,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Y,t("td",Z,[t("a",$,[n("K 个不同整数的子数组"),e(a)])]),tt,t("td",nt,[e(o,{to:"/tag/array.html"},{default:s(()=>[et]),_:1}),n(),e(o,{to:"/tag/hash-table.html"},{default:s(()=>[st]),_:1}),n(),e(o,{to:"/tag/counting.html"},{default:s(()=>[ot]),_:1}),n(),at]),t("td",lt,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[ct,t("td",it,[t("a",rt,[n("删除子数组的最大得分"),e(a)])]),dt,t("td",ut,[e(o,{to:"/tag/array.html"},{default:s(()=>[pt]),_:1}),n(),e(o,{to:"/tag/hash-table.html"},{default:s(()=>[_t]),_:1}),n(),e(o,{to:"/tag/sliding-window.html"},{default:s(()=>[ht]),_:1})]),t("td",kt,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[mt,t("td",gt,[t("a",ft,[n("等计数子串的数量 🔒"),e(a)])]),bt,t("td",yt,[e(o,{to:"/tag/string.html"},{default:s(()=>[xt]),_:1}),n(),e(o,{to:"/tag/counting.html"},{default:s(()=>[wt]),_:1}),n(),e(o,{to:"/tag/prefix-sum.html"},{default:s(()=>[vt]),_:1})]),t("td",qt,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Mt,t("td",Ot,[t("a",St,[n("必须拿起的最小连续卡牌数"),e(a)])]),t("td",Et,[e(o,{to:"/problem/2260.html"},{default:s(()=>[n("[✓]")]),_:1})]),t("td",It,[e(o,{to:"/tag/array.html"},{default:s(()=>[Ct]),_:1}),n(),e(o,{to:"/tag/hash-table.html"},{default:s(()=>[jt]),_:1}),n(),e(o,{to:"/tag/sliding-window.html"},{default:s(()=>[Lt]),_:1})]),t("td",At,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Nt,t("td",Tt,[t("a",Vt,[n("最长优雅子数组"),e(a)])]),Bt,t("td",Kt,[e(o,{to:"/tag/bit-manipulation.html"},{default:s(()=>[Rt]),_:1}),n(),e(o,{to:"/tag/array.html"},{default:s(()=>[Gt]),_:1}),n(),e(o,{to:"/tag/sliding-window.html"},{default:s(()=>[Ht]),_:1})]),t("td",zt,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Dt,t("td",Ft,[t("a",Jt,[n("子字符串的最优划分"),e(a)])]),Pt,t("td",Qt,[e(o,{to:"/tag/greedy.html"},{default:s(()=>[Ut]),_:1}),n(),e(o,{to:"/tag/hash-table.html"},{default:s(()=>[Wt]),_:1}),n(),e(o,{to:"/tag/string.html"},{default:s(()=>[Xt]),_:1})]),t("td",Yt,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Zt,t("td",$t,[t("a",tn,[n("统计完全子数组的数目"),e(a)])]),nn,t("td",en,[e(o,{to:"/tag/array.html"},{default:s(()=>[sn]),_:1}),n(),e(o,{to:"/tag/hash-table.html"},{default:s(()=>[on]),_:1}),n(),e(o,{to:"/tag/sliding-window.html"},{default:s(()=>[an]),_:1})]),t("td",ln,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[cn,t("td",rn,[t("a",dn,[n("找出出现至少三次的最长特殊子字符串 I"),e(a)])]),un,t("td",pn,[e(o,{to:"/tag/hash-table.html"},{default:s(()=>[_n]),_:1}),n(),e(o,{to:"/tag/string.html"},{default:s(()=>[hn]),_:1}),n(),e(o,{to:"/tag/binary-search.html"},{default:s(()=>[kn]),_:1}),n(),mn]),t("td",gn,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[fn,t("td",bn,[t("a",yn,[n("找出出现至少三次的最长特殊子字符串 II"),e(a)])]),xn,t("td",wn,[e(o,{to:"/tag/hash-table.html"},{default:s(()=>[vn]),_:1}),n(),e(o,{to:"/tag/string.html"},{default:s(()=>[qn]),_:1}),n(),e(o,{to:"/tag/binary-search.html"},{default:s(()=>[Mn]),_:1}),n(),On]),t("td",Sn,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])])])])])}const Ln=p(m,[["render",En],["__file","0003.html.vue"]]);export{Ln as default};
