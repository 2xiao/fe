import{_ as c,r as _,o as r,c as a,a as t,b as e,w as o,d as l,f as i}from"./app-kg29FJls.js";const h={},f=t("h1",{id:"树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#树","aria-hidden":"true"},"#"),l(" 树")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),E=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),H=t("code",null,"字符串匹配",-1),z=t("span",{class:"blue"},"树",-1),O=t("code",null,"二叉树",-1),q=t("code",null,"二叉搜索树",-1),j=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),L=t("code",null,"有序集合",-1),C=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),P=t("code",null,"强连通分量",-1),B=t("code",null,"欧拉回路",-1),V=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),U=t("code",null,"字典树",-1),R=t("code",null,"线段树",-1),W=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),D=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),A=t("code",null,"贪心",-1),F=t("code",null,"动态规划",-1),J=t("code",null,"排序",-1),X=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),ct=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),it=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),Et=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),Ht=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),qt=t("code",null,"脑筋急转弯",-1),jt=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Lt=t("code",null,"多线程",-1),Ct=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Pt=t("td",{style:{"text-align":"center"}},"94",-1),Bt={style:{"text-align":"left"}},Vt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"center"}},Ut={style:{"text-align":"left"}},Rt=t("code",null,"栈",-1),Wt=t("code",null,"树",-1),Gt=t("code",null,"深度优先搜索",-1),Yt=t("code",null,"1+",-1),Qt={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"95",-1),Dt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},At={style:{"text-align":"center"}},Ft={style:{"text-align":"left"}},Jt=t("code",null,"树",-1),Xt=t("code",null,"二叉搜索树",-1),$t=t("code",null,"动态规划",-1),te=t("code",null,"2+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"96",-1),oe={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},ne={style:{"text-align":"center"}},de={style:{"text-align":"left"}},_e=t("code",null,"树",-1),ce=t("code",null,"二叉搜索树",-1),re=t("code",null,"数学",-1),ae=t("code",null,"2+",-1),ie={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"98",-1),fe={style:{"text-align":"left"}},ue={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ge={style:{"text-align":"center"}},me={style:{"text-align":"left"}},ye=t("code",null,"树",-1),xe=t("code",null,"深度优先搜索",-1),be=t("code",null,"二叉搜索树",-1),pe=t("code",null,"1+",-1),ke={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"99",-1),ve={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ee={style:{"text-align":"center"}},we={style:{"text-align":"left"}},He=t("code",null,"树",-1),ze=t("code",null,"深度优先搜索",-1),Oe=t("code",null,"二叉搜索树",-1),qe=t("code",null,"1+",-1),je={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"100",-1),Le={style:{"text-align":"left"}},Ce={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Ke={style:{"text-align":"center"}},Pe={style:{"text-align":"left"}},Be=t("code",null,"树",-1),Ve=t("code",null,"深度优先搜索",-1),Te=t("code",null,"广度优先搜索",-1),Ue=t("code",null,"1+",-1),Re={style:{"text-align":"left"}},We=t("td",{style:{"text-align":"center"}},"101",-1),Ge={style:{"text-align":"left"}},Ye={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Qe={style:{"text-align":"center"}},Se={style:{"text-align":"left"}},De=t("code",null,"树",-1),Ze=t("code",null,"深度优先搜索",-1),Ae=t("code",null,"广度优先搜索",-1),Fe=t("code",null,"1+",-1),Je={style:{"text-align":"left"}},Xe=t("td",{style:{"text-align":"center"}},"102",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},el={style:{"text-align":"center"}},ll={style:{"text-align":"left"}},ol=t("code",null,"树",-1),sl=t("code",null,"广度优先搜索",-1),nl=t("code",null,"二叉树",-1),dl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"103",-1),cl={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"center"}},il={style:{"text-align":"left"}},hl=t("code",null,"树",-1),fl=t("code",null,"广度优先搜索",-1),ul=t("code",null,"二叉树",-1),gl={style:{"text-align":"left"}},ml=t("td",{style:{"text-align":"center"}},"104",-1),yl={style:{"text-align":"left"}},xl={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},bl={style:{"text-align":"center"}},pl={style:{"text-align":"left"}},kl=t("code",null,"树",-1),Ml=t("code",null,"深度优先搜索",-1),vl=t("code",null,"广度优先搜索",-1),Il=t("code",null,"1+",-1),El={style:{"text-align":"left"}},wl=t("td",{style:{"text-align":"center"}},"105",-1),Hl={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ol={style:{"text-align":"center"}},ql={style:{"text-align":"left"}},jl=t("code",null,"树",-1),Nl=t("code",null,"数组",-1),Ll=t("code",null,"哈希表",-1),Cl=t("code",null,"2+",-1),Kl={style:{"text-align":"left"}},Pl=t("td",{style:{"text-align":"center"}},"106",-1),Bl={style:{"text-align":"left"}},Vl={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Tl={style:{"text-align":"center"}},Ul={style:{"text-align":"left"}},Rl=t("code",null,"树",-1),Wl=t("code",null,"数组",-1),Gl=t("code",null,"哈希表",-1),Yl=t("code",null,"2+",-1),Ql={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"107",-1),Dl={style:{"text-align":"left"}},Zl={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"center"}},Fl={style:{"text-align":"left"}},Jl=t("code",null,"树",-1),Xl=t("code",null,"广度优先搜索",-1),$l=t("code",null,"二叉树",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"108",-1),lo={style:{"text-align":"left"}},oo={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},so={style:{"text-align":"center"}},no={style:{"text-align":"left"}},_o=t("code",null,"树",-1),co=t("code",null,"二叉搜索树",-1),ro=t("code",null,"数组",-1),ao=t("code",null,"2+",-1),io={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"109",-1),fo={style:{"text-align":"left"}},uo={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},go={style:{"text-align":"center"}},mo={style:{"text-align":"left"}},yo=t("code",null,"树",-1),xo=t("code",null,"二叉搜索树",-1),bo=t("code",null,"链表",-1),po=t("code",null,"2+",-1),ko={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"110",-1),vo={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Eo={style:{"text-align":"center"}},wo={style:{"text-align":"left"}},Ho=t("code",null,"树",-1),zo=t("code",null,"深度优先搜索",-1),Oo=t("code",null,"二叉树",-1),qo={style:{"text-align":"left"}},jo=t("td",{style:{"text-align":"center"}},"111",-1),No={style:{"text-align":"left"}},Lo={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Co={style:{"text-align":"center"}},Ko={style:{"text-align":"left"}},Po=t("code",null,"树",-1),Bo=t("code",null,"深度优先搜索",-1),Vo=t("code",null,"广度优先搜索",-1),To=t("code",null,"1+",-1),Uo={style:{"text-align":"left"}},Ro=t("td",{style:{"text-align":"center"}},"112",-1),Wo={style:{"text-align":"left"}},Go={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Yo={style:{"text-align":"center"}},Qo={style:{"text-align":"left"}},So=t("code",null,"树",-1),Do=t("code",null,"深度优先搜索",-1),Zo=t("code",null,"广度优先搜索",-1),Ao=t("code",null,"1+",-1),Fo={style:{"text-align":"left"}},Jo=t("td",{style:{"text-align":"center"}},"113",-1),Xo={style:{"text-align":"left"}},$o={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},ts={style:{"text-align":"center"}},es={style:{"text-align":"left"}},ls=t("code",null,"树",-1),os=t("code",null,"深度优先搜索",-1),ss=t("code",null,"回溯",-1),ns=t("code",null,"1+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"114",-1),cs={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},as={style:{"text-align":"center"}},is={style:{"text-align":"left"}},hs=t("code",null,"栈",-1),fs=t("code",null,"树",-1),us=t("code",null,"深度优先搜索",-1),gs=t("code",null,"2+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"116",-1),xs={style:{"text-align":"left"}},bs={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},ps={style:{"text-align":"center"}},ks={style:{"text-align":"left"}},Ms=t("code",null,"树",-1),vs=t("code",null,"深度优先搜索",-1),Is=t("code",null,"广度优先搜索",-1),Es=t("code",null,"2+",-1),ws={style:{"text-align":"left"}},Hs=t("td",{style:{"text-align":"center"}},"117",-1),zs={style:{"text-align":"left"}},Os={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},qs={style:{"text-align":"center"}},js={style:{"text-align":"left"}},Ns=t("code",null,"树",-1),Ls=t("code",null,"深度优先搜索",-1),Cs=t("code",null,"广度优先搜索",-1),Ks=t("code",null,"2+",-1),Ps={style:{"text-align":"left"}},Bs=t("td",{style:{"text-align":"center"}},"124",-1),Vs={style:{"text-align":"left"}},Ts={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Us={style:{"text-align":"center"}},Rs={style:{"text-align":"left"}},Ws=t("code",null,"树",-1),Gs=t("code",null,"深度优先搜索",-1),Ys=t("code",null,"动态规划",-1),Qs=t("code",null,"1+",-1),Ss={style:{"text-align":"left"}},Ds=t("td",{style:{"text-align":"center"}},"129",-1),Zs={style:{"text-align":"left"}},As={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Fs={style:{"text-align":"center"}},Js={style:{"text-align":"left"}},Xs=t("code",null,"树",-1),$s=t("code",null,"深度优先搜索",-1),tn=t("code",null,"二叉树",-1),en={style:{"text-align":"left"}},ln=t("td",{style:{"text-align":"center"}},"144",-1),on={style:{"text-align":"left"}},sn={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},nn={style:{"text-align":"center"}},dn={style:{"text-align":"left"}},_n=t("code",null,"栈",-1),cn=t("code",null,"树",-1),rn=t("code",null,"深度优先搜索",-1),an=t("code",null,"1+",-1),hn={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"145",-1),un={style:{"text-align":"left"}},gn={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},mn={style:{"text-align":"center"}},yn={style:{"text-align":"left"}},xn=t("code",null,"栈",-1),bn=t("code",null,"树",-1),pn=t("code",null,"深度优先搜索",-1),kn=t("code",null,"1+",-1),Mn={style:{"text-align":"left"}},vn=t("td",{style:{"text-align":"center"}},"156",-1),In={style:{"text-align":"left"}},En={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},wn={style:{"text-align":"center"}},Hn={style:{"text-align":"left"}},zn=t("code",null,"树",-1),On=t("code",null,"深度优先搜索",-1),qn=t("code",null,"二叉树",-1),jn={style:{"text-align":"left"}},Nn=t("td",{style:{"text-align":"center"}},"173",-1),Ln={style:{"text-align":"left"}},Cn={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Kn={style:{"text-align":"center"}},Pn={style:{"text-align":"left"}},Bn=t("code",null,"栈",-1),Vn=t("code",null,"树",-1),Tn=t("code",null,"设计",-1),Un=t("code",null,"3+",-1),Rn={style:{"text-align":"left"}},Wn=t("td",{style:{"text-align":"center"}},"199",-1),Gn={style:{"text-align":"left"}},Yn={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},Qn={style:{"text-align":"center"}},Sn={style:{"text-align":"left"}},Dn=t("code",null,"树",-1),Zn=t("code",null,"深度优先搜索",-1),An=t("code",null,"广度优先搜索",-1),Fn=t("code",null,"1+",-1),Jn={style:{"text-align":"left"}},Xn=t("td",{style:{"text-align":"center"}},"222",-1),$n={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},ed={style:{"text-align":"center"}},ld={style:{"text-align":"left"}},od=t("code",null,"位运算",-1),sd=t("code",null,"树",-1),nd=t("code",null,"二分查找",-1),dd=t("code",null,"1+",-1),_d={style:{"text-align":"left"}},cd=t("td",{style:{"text-align":"center"}},"226",-1),rd={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},id={style:{"text-align":"center"}},hd={style:{"text-align":"left"}},fd=t("code",null,"树",-1),ud=t("code",null,"深度优先搜索",-1),gd=t("code",null,"广度优先搜索",-1),md=t("code",null,"1+",-1),yd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"230",-1),bd={style:{"text-align":"left"}},pd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},kd={style:{"text-align":"center"}},Md={style:{"text-align":"left"}},vd=t("code",null,"树",-1),Id=t("code",null,"深度优先搜索",-1),Ed=t("code",null,"二叉搜索树",-1),wd=t("code",null,"1+",-1),Hd={style:{"text-align":"left"}},zd=t("td",{style:{"text-align":"center"}},"235",-1),Od={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},jd={style:{"text-align":"center"}},Nd={style:{"text-align":"left"}},Ld=t("code",null,"树",-1),Cd=t("code",null,"深度优先搜索",-1),Kd=t("code",null,"二叉搜索树",-1),Pd=t("code",null,"1+",-1),Bd={style:{"text-align":"left"}},Vd=t("td",{style:{"text-align":"center"}},"236",-1),Td={style:{"text-align":"left"}},Ud={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rd={style:{"text-align":"center"}},Wd={style:{"text-align":"left"}},Gd=t("code",null,"树",-1),Yd=t("code",null,"深度优先搜索",-1),Qd=t("code",null,"二叉树",-1),Sd={style:{"text-align":"left"}},Dd=t("td",{style:{"text-align":"center"}},"250",-1),Zd={style:{"text-align":"left"}},Ad={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},Xd=t("code",null,"树",-1),$d=t("code",null,"深度优先搜索",-1),t_=t("code",null,"二叉树",-1),e_={style:{"text-align":"left"}},l_=t("td",{style:{"text-align":"center"}},"255",-1),o_={style:{"text-align":"left"}},s_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},n_=t("td",{style:{"text-align":"center"}},null,-1),d_={style:{"text-align":"left"}},__=t("code",null,"栈",-1),c_=t("code",null,"树",-1),r_=t("code",null,"二叉搜索树",-1),a_=t("code",null,"4+",-1),i_={style:{"text-align":"left"}},h_=t("td",{style:{"text-align":"center"}},"257",-1),f_={style:{"text-align":"left"}},u_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},g_={style:{"text-align":"center"}},m_={style:{"text-align":"left"}},y_=t("code",null,"树",-1),x_=t("code",null,"深度优先搜索",-1),b_=t("code",null,"字符串",-1),p_=t("code",null,"2+",-1),k_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"270",-1),v_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},E_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},H_=t("code",null,"树",-1),z_=t("code",null,"深度优先搜索",-1),O_=t("code",null,"二叉搜索树",-1),q_=t("code",null,"2+",-1),j_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"272",-1),L_={style:{"text-align":"left"}},C_={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},K_=t("td",{style:{"text-align":"center"}},null,-1),P_={style:{"text-align":"left"}},B_=t("code",null,"栈",-1),V_=t("code",null,"树",-1),T_=t("code",null,"深度优先搜索",-1),U_=t("code",null,"4+",-1),R_={style:{"text-align":"left"}},W_=t("td",{style:{"text-align":"center"}},"285",-1),G_={style:{"text-align":"left"}},Y_={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},null,-1),S_={style:{"text-align":"left"}},D_=t("code",null,"树",-1),Z_=t("code",null,"深度优先搜索",-1),A_=t("code",null,"二叉搜索树",-1),F_=t("code",null,"1+",-1),J_={style:{"text-align":"left"}},X_=t("td",{style:{"text-align":"center"}},"297",-1),$_={style:{"text-align":"left"}},tc={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},ec={style:{"text-align":"center"}},lc={style:{"text-align":"left"}},oc=t("code",null,"树",-1),sc=t("code",null,"深度优先搜索",-1),nc=t("code",null,"广度优先搜索",-1),dc=t("code",null,"3+",-1),_c={style:{"text-align":"left"}},cc=t("td",{style:{"text-align":"center"}},"298",-1),rc={style:{"text-align":"left"}},ac={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},null,-1),hc={style:{"text-align":"left"}},fc=t("code",null,"树",-1),uc=t("code",null,"深度优先搜索",-1),gc=t("code",null,"二叉树",-1),mc={style:{"text-align":"left"}},yc=t("td",{style:{"text-align":"center"}},"314",-1),xc={style:{"text-align":"left"}},bc={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},pc=t("td",{style:{"text-align":"center"}},null,-1),kc={style:{"text-align":"left"}},Mc=t("code",null,"树",-1),vc=t("code",null,"深度优先搜索",-1),Ic=t("code",null,"广度优先搜索",-1),Ec=t("code",null,"3+",-1),wc={style:{"text-align":"left"}},Hc=t("td",{style:{"text-align":"center"}},"331",-1),zc={style:{"text-align":"left"}},Oc={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},qc=t("td",{style:{"text-align":"center"}},null,-1),jc={style:{"text-align":"left"}},Nc=t("code",null,"栈",-1),Lc=t("code",null,"树",-1),Cc=t("code",null,"字符串",-1),Kc=t("code",null,"1+",-1),Pc={style:{"text-align":"left"}},Bc=t("td",{style:{"text-align":"center"}},"333",-1),Vc={style:{"text-align":"left"}},Tc={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Uc=t("td",{style:{"text-align":"center"}},null,-1),Rc={style:{"text-align":"left"}},Wc=t("code",null,"树",-1),Gc=t("code",null,"深度优先搜索",-1),Yc=t("code",null,"二叉搜索树",-1),Qc=t("code",null,"2+",-1),Sc={style:{"text-align":"left"}},Dc=t("td",{style:{"text-align":"center"}},"337",-1),Zc={style:{"text-align":"left"}},Ac={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},null,-1),Jc={style:{"text-align":"left"}},Xc=t("code",null,"树",-1),$c=t("code",null,"深度优先搜索",-1),tr=t("code",null,"动态规划",-1),er=t("code",null,"1+",-1),lr={style:{"text-align":"left"}},or=t("td",{style:{"text-align":"center"}},"341",-1),sr={style:{"text-align":"left"}},nr={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},dr=t("td",{style:{"text-align":"center"}},null,-1),_r={style:{"text-align":"left"}},cr=t("code",null,"栈",-1),rr=t("code",null,"树",-1),ar=t("code",null,"深度优先搜索",-1),ir=t("code",null,"3+",-1),hr={style:{"text-align":"left"}},fr=t("td",{style:{"text-align":"center"}},"366",-1),ur={style:{"text-align":"left"}},gr={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},mr={style:{"text-align":"center"}},yr={style:{"text-align":"left"}},xr=t("code",null,"树",-1),br=t("code",null,"深度优先搜索",-1),pr=t("code",null,"二叉树",-1),kr={style:{"text-align":"left"}},Mr=t("td",{style:{"text-align":"center"}},"404",-1),vr={style:{"text-align":"left"}},Ir={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},Er=t("td",{style:{"text-align":"center"}},null,-1),wr={style:{"text-align":"left"}},Hr=t("code",null,"树",-1),zr=t("code",null,"深度优先搜索",-1),Or=t("code",null,"广度优先搜索",-1),qr=t("code",null,"1+",-1),jr={style:{"text-align":"left"}},Nr=t("td",{style:{"text-align":"center"}},"426",-1),Lr={style:{"text-align":"left"}},Cr={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Kr={style:{"text-align":"center"}},Pr={style:{"text-align":"left"}},Br=t("code",null,"栈",-1),Vr=t("code",null,"树",-1),Tr=t("code",null,"深度优先搜索",-1),Ur=t("code",null,"4+",-1),Rr={style:{"text-align":"left"}},Wr=t("td",{style:{"text-align":"center"}},"427",-1),Gr={style:{"text-align":"left"}},Yr={href:"https://leetcode.com/problems/construct-quad-tree",target:"_blank",rel:"noopener noreferrer"},Qr={style:{"text-align":"center"}},Sr={style:{"text-align":"left"}},Dr=t("code",null,"树",-1),Zr=t("code",null,"数组",-1),Ar=t("code",null,"分治",-1),Fr=t("code",null,"1+",-1),Jr={style:{"text-align":"left"}},Xr=t("td",{style:{"text-align":"center"}},"428",-1),$r={style:{"text-align":"left"}},ta={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},ea=t("td",{style:{"text-align":"center"}},null,-1),la={style:{"text-align":"left"}},oa=t("code",null,"树",-1),sa=t("code",null,"深度优先搜索",-1),na=t("code",null,"广度优先搜索",-1),da=t("code",null,"1+",-1),_a={style:{"text-align":"left"}},ca=t("td",{style:{"text-align":"center"}},"429",-1),ra={style:{"text-align":"left"}},aa={href:"https://leetcode.com/problems/n-ary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},ia=t("td",{style:{"text-align":"center"}},null,-1),ha={style:{"text-align":"left"}},fa=t("code",null,"树",-1),ua=t("code",null,"广度优先搜索",-1),ga={style:{"text-align":"left"}},ma=t("td",{style:{"text-align":"center"}},"431",-1),ya={style:{"text-align":"left"}},xa={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},ba=t("td",{style:{"text-align":"center"}},null,-1),pa={style:{"text-align":"left"}},ka=t("code",null,"树",-1),Ma=t("code",null,"深度优先搜索",-1),va=t("code",null,"广度优先搜索",-1),Ia=t("code",null,"2+",-1),Ea={style:{"text-align":"left"}},wa=t("td",{style:{"text-align":"center"}},"437",-1),Ha={style:{"text-align":"left"}},za={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Oa={style:{"text-align":"center"}},qa={style:{"text-align":"left"}},ja=t("code",null,"树",-1),Na=t("code",null,"深度优先搜索",-1),La=t("code",null,"二叉树",-1),Ca={style:{"text-align":"left"}},Ka=t("td",{style:{"text-align":"center"}},"449",-1),Pa={style:{"text-align":"left"}},Ba={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Va=t("td",{style:{"text-align":"center"}},null,-1),Ta={style:{"text-align":"left"}},Ua=t("code",null,"树",-1),Ra=t("code",null,"深度优先搜索",-1),Wa=t("code",null,"广度优先搜索",-1),Ga=t("code",null,"4+",-1),Ya={style:{"text-align":"left"}},Qa=t("td",{style:{"text-align":"center"}},"450",-1),Sa={style:{"text-align":"left"}},Da={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Za={style:{"text-align":"center"}},Aa={style:{"text-align":"left"}},Fa=t("code",null,"树",-1),Ja=t("code",null,"二叉搜索树",-1),Xa=t("code",null,"二叉树",-1),$a={style:{"text-align":"left"}},ti=t("td",{style:{"text-align":"center"}},"501",-1),ei={style:{"text-align":"left"}},li={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},oi=t("td",{style:{"text-align":"center"}},null,-1),si={style:{"text-align":"left"}},ni=t("code",null,"树",-1),di=t("code",null,"深度优先搜索",-1),_i=t("code",null,"二叉搜索树",-1),ci=t("code",null,"1+",-1),ri={style:{"text-align":"left"}},ai=t("td",{style:{"text-align":"center"}},"508",-1),ii={style:{"text-align":"left"}},hi={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},fi=t("td",{style:{"text-align":"center"}},null,-1),ui={style:{"text-align":"left"}},gi=t("code",null,"树",-1),mi=t("code",null,"深度优先搜索",-1),yi=t("code",null,"哈希表",-1),xi=t("code",null,"1+",-1),bi={style:{"text-align":"left"}},pi=t("td",{style:{"text-align":"center"}},"510",-1),ki={style:{"text-align":"left"}},Mi={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},vi=t("td",{style:{"text-align":"center"}},null,-1),Ii={style:{"text-align":"left"}},Ei=t("code",null,"树",-1),wi=t("code",null,"二叉搜索树",-1),Hi=t("code",null,"二叉树",-1),zi={style:{"text-align":"left"}},Oi=t("td",{style:{"text-align":"center"}},"513",-1),qi={style:{"text-align":"left"}},ji={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},Ni=t("td",{style:{"text-align":"center"}},null,-1),Li={style:{"text-align":"left"}},Ci=t("code",null,"树",-1),Ki=t("code",null,"深度优先搜索",-1),Pi=t("code",null,"广度优先搜索",-1),Bi=t("code",null,"1+",-1),Vi={style:{"text-align":"left"}},Ti=t("td",{style:{"text-align":"center"}},"515",-1),Ui={style:{"text-align":"left"}},Ri={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Wi=t("td",{style:{"text-align":"center"}},null,-1),Gi={style:{"text-align":"left"}},Yi=t("code",null,"树",-1),Qi=t("code",null,"深度优先搜索",-1),Si=t("code",null,"广度优先搜索",-1),Di=t("code",null,"1+",-1),Zi={style:{"text-align":"left"}},Ai=t("td",{style:{"text-align":"center"}},"530",-1),Fi={style:{"text-align":"left"}},Ji={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},Xi={style:{"text-align":"center"}},$i={style:{"text-align":"left"}},th=t("code",null,"树",-1),eh=t("code",null,"深度优先搜索",-1),lh=t("code",null,"广度优先搜索",-1),oh=t("code",null,"2+",-1),sh={style:{"text-align":"left"}},nh=t("td",{style:{"text-align":"center"}},"536",-1),dh={style:{"text-align":"left"}},_h={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},ch=t("td",{style:{"text-align":"center"}},null,-1),rh={style:{"text-align":"left"}},ah=t("code",null,"栈",-1),ih=t("code",null,"树",-1),hh=t("code",null,"深度优先搜索",-1),fh=t("code",null,"2+",-1),uh={style:{"text-align":"left"}},gh=t("td",{style:{"text-align":"center"}},"538",-1),mh={style:{"text-align":"left"}},yh={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},xh=t("td",{style:{"text-align":"center"}},null,-1),bh={style:{"text-align":"left"}},ph=t("code",null,"树",-1),kh=t("code",null,"深度优先搜索",-1),Mh=t("code",null,"二叉搜索树",-1),vh=t("code",null,"1+",-1),Ih={style:{"text-align":"left"}},Eh=t("td",{style:{"text-align":"center"}},"543",-1),wh={style:{"text-align":"left"}},Hh={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},zh={style:{"text-align":"center"}},Oh={style:{"text-align":"left"}},qh=t("code",null,"树",-1),jh=t("code",null,"深度优先搜索",-1),Nh=t("code",null,"二叉树",-1),Lh={style:{"text-align":"left"}},Ch=t("td",{style:{"text-align":"center"}},"545",-1),Kh={style:{"text-align":"left"}},Ph={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Bh=t("td",{style:{"text-align":"center"}},null,-1),Vh={style:{"text-align":"left"}},Th=t("code",null,"树",-1),Uh=t("code",null,"深度优先搜索",-1),Rh=t("code",null,"二叉树",-1),Wh={style:{"text-align":"left"}},Gh=t("td",{style:{"text-align":"center"}},"549",-1),Yh={style:{"text-align":"left"}},Qh={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},Sh=t("td",{style:{"text-align":"center"}},null,-1),Dh={style:{"text-align":"left"}},Zh=t("code",null,"树",-1),Ah=t("code",null,"深度优先搜索",-1),Fh=t("code",null,"二叉树",-1),Jh={style:{"text-align":"left"}},Xh=t("td",{style:{"text-align":"center"}},"558",-1),$h={style:{"text-align":"left"}},t1={href:"https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees",target:"_blank",rel:"noopener noreferrer"},e1=t("td",{style:{"text-align":"center"}},null,-1),l1={style:{"text-align":"left"}},o1=t("code",null,"树",-1),s1=t("code",null,"分治",-1),n1={style:{"text-align":"left"}},d1=t("td",{style:{"text-align":"center"}},"559",-1),_1={style:{"text-align":"left"}},c1={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},r1={style:{"text-align":"center"}},a1={style:{"text-align":"left"}},i1=t("code",null,"树",-1),h1=t("code",null,"深度优先搜索",-1),f1=t("code",null,"广度优先搜索",-1),u1={style:{"text-align":"left"}},g1=t("td",{style:{"text-align":"center"}},"563",-1),m1={style:{"text-align":"left"}},y1={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},x1=t("td",{style:{"text-align":"center"}},null,-1),b1={style:{"text-align":"left"}},p1=t("code",null,"树",-1),k1=t("code",null,"深度优先搜索",-1),M1=t("code",null,"二叉树",-1),v1={style:{"text-align":"left"}},I1=t("td",{style:{"text-align":"center"}},"572",-1),E1={style:{"text-align":"left"}},w1={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},H1={style:{"text-align":"center"}},z1={style:{"text-align":"left"}},O1=t("code",null,"树",-1),q1=t("code",null,"深度优先搜索",-1),j1=t("code",null,"二叉树",-1),N1=t("code",null,"2+",-1),L1={style:{"text-align":"left"}},C1=t("td",{style:{"text-align":"center"}},"582",-1),K1={style:{"text-align":"left"}},P1={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},B1=t("td",{style:{"text-align":"center"}},null,-1),V1={style:{"text-align":"left"}},T1=t("code",null,"树",-1),U1=t("code",null,"深度优先搜索",-1),R1=t("code",null,"广度优先搜索",-1),W1=t("code",null,"2+",-1),G1={style:{"text-align":"left"}},Y1=t("td",{style:{"text-align":"center"}},"589",-1),Q1={style:{"text-align":"left"}},S1={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},D1={style:{"text-align":"center"}},Z1={style:{"text-align":"left"}},A1=t("code",null,"栈",-1),F1=t("code",null,"树",-1),J1=t("code",null,"深度优先搜索",-1),X1={style:{"text-align":"left"}},$1=t("td",{style:{"text-align":"center"}},"590",-1),tf={style:{"text-align":"left"}},ef={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},lf={style:{"text-align":"center"}},of={style:{"text-align":"left"}},sf=t("code",null,"栈",-1),nf=t("code",null,"树",-1),df=t("code",null,"深度优先搜索",-1),_f={style:{"text-align":"left"}},cf=t("td",{style:{"text-align":"center"}},"606",-1),rf={style:{"text-align":"left"}},af={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},hf=t("td",{style:{"text-align":"center"}},null,-1),ff={style:{"text-align":"left"}},uf=t("code",null,"树",-1),gf=t("code",null,"深度优先搜索",-1),mf=t("code",null,"字符串",-1),yf=t("code",null,"1+",-1),xf={style:{"text-align":"left"}},bf=t("td",{style:{"text-align":"center"}},"617",-1),pf={style:{"text-align":"left"}},kf={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},Mf={style:{"text-align":"center"}},vf={style:{"text-align":"left"}},If=t("code",null,"树",-1),Ef=t("code",null,"深度优先搜索",-1),wf=t("code",null,"广度优先搜索",-1),Hf=t("code",null,"1+",-1),zf={style:{"text-align":"left"}},Of=t("td",{style:{"text-align":"center"}},"623",-1),qf={style:{"text-align":"left"}},jf={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Nf=t("td",{style:{"text-align":"center"}},null,-1),Lf={style:{"text-align":"left"}},Cf=t("code",null,"树",-1),Kf=t("code",null,"深度优先搜索",-1),Pf=t("code",null,"广度优先搜索",-1),Bf=t("code",null,"1+",-1),Vf={style:{"text-align":"left"}},Tf=t("td",{style:{"text-align":"center"}},"637",-1),Uf={style:{"text-align":"left"}},Rf={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wf={style:{"text-align":"center"}},Gf={style:{"text-align":"left"}},Yf=t("code",null,"树",-1),Qf=t("code",null,"深度优先搜索",-1),Sf=t("code",null,"广度优先搜索",-1),Df=t("code",null,"1+",-1),Zf={style:{"text-align":"left"}},Af=t("td",{style:{"text-align":"center"}},"652",-1),Ff={style:{"text-align":"left"}},Jf={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},Xf=t("td",{style:{"text-align":"center"}},null,-1),$f={style:{"text-align":"left"}},tu=t("code",null,"树",-1),eu=t("code",null,"深度优先搜索",-1),lu=t("code",null,"哈希表",-1),ou=t("code",null,"1+",-1),su={style:{"text-align":"left"}},nu=t("td",{style:{"text-align":"center"}},"653",-1),du={style:{"text-align":"left"}},_u={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},cu=t("td",{style:{"text-align":"center"}},null,-1),ru={style:{"text-align":"left"}},au=t("code",null,"树",-1),iu=t("code",null,"深度优先搜索",-1),hu=t("code",null,"广度优先搜索",-1),fu=t("code",null,"4+",-1),uu={style:{"text-align":"left"}},gu=t("td",{style:{"text-align":"center"}},"654",-1),mu={style:{"text-align":"left"}},yu={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},xu={style:{"text-align":"center"}},bu={style:{"text-align":"left"}},pu=t("code",null,"栈",-1),ku=t("code",null,"树",-1),Mu=t("code",null,"数组",-1),vu=t("code",null,"3+",-1),Iu={style:{"text-align":"left"}},Eu=t("td",{style:{"text-align":"center"}},"655",-1),wu={style:{"text-align":"left"}},Hu={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},zu=t("td",{style:{"text-align":"center"}},null,-1),Ou={style:{"text-align":"left"}},qu=t("code",null,"树",-1),ju=t("code",null,"深度优先搜索",-1),Nu=t("code",null,"广度优先搜索",-1),Lu=t("code",null,"1+",-1),Cu={style:{"text-align":"left"}},Ku=t("td",{style:{"text-align":"center"}},"662",-1),Pu={style:{"text-align":"left"}},Bu={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vu={style:{"text-align":"center"}},Tu={style:{"text-align":"left"}},Uu=t("code",null,"树",-1),Ru=t("code",null,"深度优先搜索",-1),Wu=t("code",null,"广度优先搜索",-1),Gu=t("code",null,"1+",-1),Yu={style:{"text-align":"left"}},Qu=t("td",{style:{"text-align":"center"}},"663",-1),Su={style:{"text-align":"left"}},Du={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},Zu=t("td",{style:{"text-align":"center"}},null,-1),Au={style:{"text-align":"left"}},Fu=t("code",null,"树",-1),Ju=t("code",null,"深度优先搜索",-1),Xu=t("code",null,"二叉树",-1),$u={style:{"text-align":"left"}},tg=t("td",{style:{"text-align":"center"}},"666",-1),eg={style:{"text-align":"left"}},lg={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},og=t("td",{style:{"text-align":"center"}},null,-1),sg={style:{"text-align":"left"}},ng=t("code",null,"树",-1),dg=t("code",null,"深度优先搜索",-1),_g=t("code",null,"数组",-1),cg=t("code",null,"2+",-1),rg={style:{"text-align":"left"}},ag=t("td",{style:{"text-align":"center"}},"669",-1),ig={style:{"text-align":"left"}},hg={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},fg=t("td",{style:{"text-align":"center"}},null,-1),ug={style:{"text-align":"left"}},gg=t("code",null,"树",-1),mg=t("code",null,"深度优先搜索",-1),yg=t("code",null,"二叉搜索树",-1),xg=t("code",null,"1+",-1),bg={style:{"text-align":"left"}},pg=t("td",{style:{"text-align":"center"}},"671",-1),kg={style:{"text-align":"left"}},Mg={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},vg=t("td",{style:{"text-align":"center"}},null,-1),Ig={style:{"text-align":"left"}},Eg=t("code",null,"树",-1),wg=t("code",null,"深度优先搜索",-1),Hg=t("code",null,"二叉树",-1),zg={style:{"text-align":"left"}},Og=t("td",{style:{"text-align":"center"}},"687",-1),qg={style:{"text-align":"left"}},jg={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Ng=t("td",{style:{"text-align":"center"}},null,-1),Lg={style:{"text-align":"left"}},Cg=t("code",null,"树",-1),Kg=t("code",null,"深度优先搜索",-1),Pg=t("code",null,"二叉树",-1),Bg={style:{"text-align":"left"}},Vg=t("td",{style:{"text-align":"center"}},"690",-1),Tg={style:{"text-align":"left"}},Ug={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},Rg=t("td",{style:{"text-align":"center"}},null,-1),Wg={style:{"text-align":"left"}},Gg=t("code",null,"树",-1),Yg=t("code",null,"深度优先搜索",-1),Qg=t("code",null,"广度优先搜索",-1),Sg=t("code",null,"2+",-1),Dg={style:{"text-align":"left"}},Zg=t("td",{style:{"text-align":"center"}},"700",-1),Ag={style:{"text-align":"left"}},Fg={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Jg={style:{"text-align":"center"}},Xg={style:{"text-align":"left"}},$g=t("code",null,"树",-1),tm=t("code",null,"二叉搜索树",-1),em=t("code",null,"二叉树",-1),lm={style:{"text-align":"left"}},om=t("td",{style:{"text-align":"center"}},"701",-1),sm={style:{"text-align":"left"}},nm={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},dm={style:{"text-align":"center"}},_m={style:{"text-align":"left"}},cm=t("code",null,"树",-1),rm=t("code",null,"二叉搜索树",-1),am=t("code",null,"二叉树",-1),im={style:{"text-align":"left"}},hm=t("td",{style:{"text-align":"center"}},"703",-1),fm={style:{"text-align":"left"}},um={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},gm={style:{"text-align":"center"}},mm={style:{"text-align":"left"}},ym=t("code",null,"树",-1),xm=t("code",null,"设计",-1),bm=t("code",null,"二叉搜索树",-1),pm=t("code",null,"3+",-1),km={style:{"text-align":"left"}},Mm=t("td",{style:{"text-align":"center"}},"742",-1),vm={style:{"text-align":"left"}},Im={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},null,-1),wm={style:{"text-align":"left"}},Hm=t("code",null,"树",-1),zm=t("code",null,"深度优先搜索",-1),Om=t("code",null,"广度优先搜索",-1),qm=t("code",null,"1+",-1),jm={style:{"text-align":"left"}},Nm=t("td",{style:{"text-align":"center"}},"776",-1),Lm={style:{"text-align":"left"}},Cm={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},Km=t("td",{style:{"text-align":"center"}},null,-1),Pm={style:{"text-align":"left"}},Bm=t("code",null,"树",-1),Vm=t("code",null,"二叉搜索树",-1),Tm=t("code",null,"递归",-1),Um=t("code",null,"1+",-1),Rm={style:{"text-align":"left"}},Wm=t("td",{style:{"text-align":"center"}},"783",-1),Gm={style:{"text-align":"left"}},Ym={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},Qm={style:{"text-align":"center"}},Sm={style:{"text-align":"left"}},Dm=t("code",null,"树",-1),Zm=t("code",null,"深度优先搜索",-1),Am=t("code",null,"广度优先搜索",-1),Fm=t("code",null,"2+",-1),Jm={style:{"text-align":"left"}},Xm=t("td",{style:{"text-align":"center"}},"814",-1),$m={style:{"text-align":"left"}},t2={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},e2=t("td",{style:{"text-align":"center"}},null,-1),l2={style:{"text-align":"left"}},o2=t("code",null,"树",-1),s2=t("code",null,"深度优先搜索",-1),n2=t("code",null,"二叉树",-1),d2={style:{"text-align":"left"}},_2=t("td",{style:{"text-align":"center"}},"834",-1),c2={style:{"text-align":"left"}},r2={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},a2=t("td",{style:{"text-align":"center"}},null,-1),i2={style:{"text-align":"left"}},h2=t("code",null,"树",-1),f2=t("code",null,"深度优先搜索",-1),u2=t("code",null,"图",-1),g2=t("code",null,"1+",-1),m2={style:{"text-align":"left"}},y2=t("td",{style:{"text-align":"center"}},"863",-1),x2={style:{"text-align":"left"}},b2={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},p2=t("td",{style:{"text-align":"center"}},null,-1),k2={style:{"text-align":"left"}},M2=t("code",null,"树",-1),v2=t("code",null,"深度优先搜索",-1),I2=t("code",null,"广度优先搜索",-1),E2=t("code",null,"2+",-1),w2={style:{"text-align":"left"}},H2=t("td",{style:{"text-align":"center"}},"865",-1),z2={style:{"text-align":"left"}},O2={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},q2=t("td",{style:{"text-align":"center"}},null,-1),j2={style:{"text-align":"left"}},N2=t("code",null,"树",-1),L2=t("code",null,"深度优先搜索",-1),C2=t("code",null,"广度优先搜索",-1),K2=t("code",null,"2+",-1),P2={style:{"text-align":"left"}},B2=t("td",{style:{"text-align":"center"}},"872",-1),V2={style:{"text-align":"left"}},T2={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},U2=t("td",{style:{"text-align":"center"}},null,-1),R2={style:{"text-align":"left"}},W2=t("code",null,"树",-1),G2=t("code",null,"深度优先搜索",-1),Y2=t("code",null,"二叉树",-1),Q2={style:{"text-align":"left"}},S2=t("td",{style:{"text-align":"center"}},"889",-1),D2={style:{"text-align":"left"}},Z2={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},A2={style:{"text-align":"center"}},F2={style:{"text-align":"left"}},J2=t("code",null,"树",-1),X2=t("code",null,"数组",-1),$2=t("code",null,"哈希表",-1),ty=t("code",null,"2+",-1),ey={style:{"text-align":"left"}},ly=t("td",{style:{"text-align":"center"}},"894",-1),oy={style:{"text-align":"left"}},sy={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},ny=t("td",{style:{"text-align":"center"}},null,-1),dy={style:{"text-align":"left"}},_y=t("code",null,"树",-1),cy=t("code",null,"递归",-1),ry=t("code",null,"记忆化搜索",-1),ay=t("code",null,"2+",-1),iy={style:{"text-align":"left"}},hy=t("td",{style:{"text-align":"center"}},"897",-1),fy={style:{"text-align":"left"}},uy={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},gy=t("td",{style:{"text-align":"center"}},null,-1),my={style:{"text-align":"left"}},yy=t("code",null,"栈",-1),xy=t("code",null,"树",-1),by=t("code",null,"深度优先搜索",-1),py=t("code",null,"2+",-1),ky={style:{"text-align":"left"}},My=t("td",{style:{"text-align":"center"}},"919",-1),vy={style:{"text-align":"left"}},Iy={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},Ey=t("td",{style:{"text-align":"center"}},null,-1),wy={style:{"text-align":"left"}},Hy=t("code",null,"树",-1),zy=t("code",null,"广度优先搜索",-1),Oy=t("code",null,"设计",-1),qy=t("code",null,"1+",-1),jy={style:{"text-align":"left"}},Ny=t("td",{style:{"text-align":"center"}},"938",-1),Ly={style:{"text-align":"left"}},Cy={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},Ky=t("td",{style:{"text-align":"center"}},null,-1),Py={style:{"text-align":"left"}},By=t("code",null,"树",-1),Vy=t("code",null,"深度优先搜索",-1),Ty=t("code",null,"二叉搜索树",-1),Uy=t("code",null,"1+",-1),Ry={style:{"text-align":"left"}},Wy=t("td",{style:{"text-align":"center"}},"951",-1),Gy={style:{"text-align":"left"}},Yy={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Qy=t("td",{style:{"text-align":"center"}},null,-1),Sy={style:{"text-align":"left"}},Dy=t("code",null,"树",-1),Zy=t("code",null,"深度优先搜索",-1),Ay=t("code",null,"二叉树",-1),Fy={style:{"text-align":"left"}},Jy=t("td",{style:{"text-align":"center"}},"958",-1),Xy={style:{"text-align":"left"}},$y={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},tx={style:{"text-align":"center"}},ex={style:{"text-align":"left"}},lx=t("code",null,"树",-1),ox=t("code",null,"广度优先搜索",-1),sx=t("code",null,"二叉树",-1),nx={style:{"text-align":"left"}},dx=t("td",{style:{"text-align":"center"}},"965",-1),_x={style:{"text-align":"left"}},cx={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},rx=t("td",{style:{"text-align":"center"}},null,-1),ax={style:{"text-align":"left"}},ix=t("code",null,"树",-1),hx=t("code",null,"深度优先搜索",-1),fx=t("code",null,"广度优先搜索",-1),ux=t("code",null,"1+",-1),gx={style:{"text-align":"left"}},mx=t("td",{style:{"text-align":"center"}},"968",-1),yx={style:{"text-align":"left"}},xx={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},bx=t("td",{style:{"text-align":"center"}},null,-1),px={style:{"text-align":"left"}},kx=t("code",null,"树",-1),Mx=t("code",null,"深度优先搜索",-1),vx=t("code",null,"动态规划",-1),Ix=t("code",null,"1+",-1),Ex={style:{"text-align":"left"}},wx=t("td",{style:{"text-align":"center"}},"971",-1),Hx={style:{"text-align":"left"}},zx={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ox=t("td",{style:{"text-align":"center"}},null,-1),qx={style:{"text-align":"left"}},jx=t("code",null,"树",-1),Nx=t("code",null,"深度优先搜索",-1),Lx=t("code",null,"二叉树",-1),Cx={style:{"text-align":"left"}},Kx=t("td",{style:{"text-align":"center"}},"979",-1),Px={style:{"text-align":"left"}},Bx={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vx=t("td",{style:{"text-align":"center"}},null,-1),Tx={style:{"text-align":"left"}},Ux=t("code",null,"树",-1),Rx=t("code",null,"深度优先搜索",-1),Wx=t("code",null,"二叉树",-1),Gx={style:{"text-align":"left"}},Yx=t("td",{style:{"text-align":"center"}},"987",-1),Qx={style:{"text-align":"left"}},Sx={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Dx=t("td",{style:{"text-align":"center"}},null,-1),Zx={style:{"text-align":"left"}},Ax=t("code",null,"树",-1),Fx=t("code",null,"深度优先搜索",-1),Jx=t("code",null,"广度优先搜索",-1),Xx=t("code",null,"3+",-1),$x={style:{"text-align":"left"}},tb=t("td",{style:{"text-align":"center"}},"988",-1),eb={style:{"text-align":"left"}},lb={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},ob=t("td",{style:{"text-align":"center"}},null,-1),sb={style:{"text-align":"left"}},nb=t("code",null,"树",-1),db=t("code",null,"深度优先搜索",-1),_b=t("code",null,"字符串",-1),cb=t("code",null,"2+",-1),rb={style:{"text-align":"left"}},ab=t("td",{style:{"text-align":"center"}},"993",-1),ib={style:{"text-align":"left"}},hb={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},fb=t("td",{style:{"text-align":"center"}},null,-1),ub={style:{"text-align":"left"}},gb=t("code",null,"树",-1),mb=t("code",null,"深度优先搜索",-1),yb=t("code",null,"广度优先搜索",-1),xb=t("code",null,"1+",-1),bb={style:{"text-align":"left"}},pb=t("td",{style:{"text-align":"center"}},"998",-1),kb={style:{"text-align":"left"}},Mb={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},vb=t("td",{style:{"text-align":"center"}},null,-1),Ib={style:{"text-align":"left"}},Eb=t("code",null,"树",-1),wb=t("code",null,"二叉树",-1),Hb={style:{"text-align":"left"}},zb=t("td",{style:{"text-align":"center"}},"1008",-1),Ob={style:{"text-align":"left"}},qb={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},jb={style:{"text-align":"center"}},Nb={style:{"text-align":"left"}},Lb=t("code",null,"栈",-1),Cb=t("code",null,"树",-1),Kb=t("code",null,"二叉搜索树",-1),Pb=t("code",null,"3+",-1),Bb={style:{"text-align":"left"}},Vb=t("td",{style:{"text-align":"center"}},"1022",-1),Tb={style:{"text-align":"left"}},Ub={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Rb=t("td",{style:{"text-align":"center"}},null,-1),Wb={style:{"text-align":"left"}},Gb=t("code",null,"树",-1),Yb=t("code",null,"深度优先搜索",-1),Qb=t("code",null,"二叉树",-1),Sb={style:{"text-align":"left"}},Db=t("td",{style:{"text-align":"center"}},"1026",-1),Zb={style:{"text-align":"left"}},Ab={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},Fb=t("td",{style:{"text-align":"center"}},null,-1),Jb={style:{"text-align":"left"}},Xb=t("code",null,"树",-1),$b=t("code",null,"深度优先搜索",-1),tp=t("code",null,"二叉树",-1),ep={style:{"text-align":"left"}},lp=t("td",{style:{"text-align":"center"}},"1028",-1),op={style:{"text-align":"left"}},sp={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},np=t("td",{style:{"text-align":"center"}},null,-1),dp={style:{"text-align":"left"}},_p=t("code",null,"树",-1),cp=t("code",null,"深度优先搜索",-1),rp=t("code",null,"字符串",-1),ap=t("code",null,"1+",-1),ip={style:{"text-align":"left"}},hp=t("td",{style:{"text-align":"center"}},"1038",-1),fp={style:{"text-align":"left"}},up={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},gp=t("td",{style:{"text-align":"center"}},null,-1),mp={style:{"text-align":"left"}},yp=t("code",null,"树",-1),xp=t("code",null,"深度优先搜索",-1),bp=t("code",null,"二叉搜索树",-1),pp=t("code",null,"1+",-1),kp={style:{"text-align":"left"}},Mp=t("td",{style:{"text-align":"center"}},"1080",-1),vp={style:{"text-align":"left"}},Ip={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},Ep=t("td",{style:{"text-align":"center"}},null,-1),wp={style:{"text-align":"left"}},Hp=t("code",null,"树",-1),zp=t("code",null,"深度优先搜索",-1),Op=t("code",null,"二叉树",-1),qp={style:{"text-align":"left"}},jp=t("td",{style:{"text-align":"center"}},"1104",-1),Np={style:{"text-align":"left"}},Lp={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},Cp=t("td",{style:{"text-align":"center"}},null,-1),Kp={style:{"text-align":"left"}},Pp=t("code",null,"树",-1),Bp=t("code",null,"数学",-1),Vp=t("code",null,"二叉树",-1),Tp={style:{"text-align":"left"}},Up=t("td",{style:{"text-align":"center"}},"1110",-1),Rp={style:{"text-align":"left"}},Wp={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Gp=t("td",{style:{"text-align":"center"}},null,-1),Yp={style:{"text-align":"left"}},Qp=t("code",null,"树",-1),Sp=t("code",null,"深度优先搜索",-1),Dp=t("code",null,"数组",-1),Zp=t("code",null,"2+",-1),Ap={style:{"text-align":"left"}},Fp=t("td",{style:{"text-align":"center"}},"1120",-1),Jp={style:{"text-align":"left"}},Xp={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},$p=t("td",{style:{"text-align":"center"}},null,-1),t0={style:{"text-align":"left"}},e0=t("code",null,"树",-1),l0=t("code",null,"深度优先搜索",-1),o0=t("code",null,"二叉树",-1),s0={style:{"text-align":"left"}},n0=t("td",{style:{"text-align":"center"}},"1123",-1),d0={style:{"text-align":"left"}},_0={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},c0=t("td",{style:{"text-align":"center"}},null,-1),r0={style:{"text-align":"left"}},a0=t("code",null,"树",-1),i0=t("code",null,"深度优先搜索",-1),h0=t("code",null,"广度优先搜索",-1),f0=t("code",null,"2+",-1),u0={style:{"text-align":"left"}},g0=t("td",{style:{"text-align":"center"}},"1145",-1),m0={style:{"text-align":"left"}},y0={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},x0=t("td",{style:{"text-align":"center"}},null,-1),b0={style:{"text-align":"left"}},p0=t("code",null,"树",-1),k0=t("code",null,"深度优先搜索",-1),M0=t("code",null,"二叉树",-1),v0={style:{"text-align":"left"}},I0=t("td",{style:{"text-align":"center"}},"1161",-1),E0={style:{"text-align":"left"}},w0={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},H0=t("td",{style:{"text-align":"center"}},null,-1),z0={style:{"text-align":"left"}},O0=t("code",null,"树",-1),q0=t("code",null,"深度优先搜索",-1),j0=t("code",null,"广度优先搜索",-1),N0=t("code",null,"1+",-1),L0={style:{"text-align":"left"}},C0=t("td",{style:{"text-align":"center"}},"1214",-1),K0={style:{"text-align":"left"}},P0={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},B0=t("td",{style:{"text-align":"center"}},null,-1),V0={style:{"text-align":"left"}},T0=t("code",null,"栈",-1),U0=t("code",null,"树",-1),R0=t("code",null,"深度优先搜索",-1),W0=t("code",null,"4+",-1),G0={style:{"text-align":"left"}},Y0=t("td",{style:{"text-align":"center"}},"1245",-1),Q0={style:{"text-align":"left"}},S0={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},D0=t("td",{style:{"text-align":"center"}},null,-1),Z0={style:{"text-align":"left"}},A0=t("code",null,"树",-1),F0=t("code",null,"深度优先搜索",-1),J0=t("code",null,"广度优先搜索",-1),X0=t("code",null,"2+",-1),$0={style:{"text-align":"left"}},t3=t("td",{style:{"text-align":"center"}},"1257",-1),e3={style:{"text-align":"left"}},l3={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},o3=t("td",{style:{"text-align":"center"}},null,-1),s3={style:{"text-align":"left"}},n3=t("code",null,"树",-1),d3=t("code",null,"深度优先搜索",-1),_3=t("code",null,"广度优先搜索",-1),c3=t("code",null,"3+",-1),r3={style:{"text-align":"left"}},a3=t("td",{style:{"text-align":"center"}},"1261",-1),i3={style:{"text-align":"left"}},h3={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},f3=t("td",{style:{"text-align":"center"}},null,-1),u3={style:{"text-align":"left"}},g3=t("code",null,"树",-1),m3=t("code",null,"深度优先搜索",-1),y3=t("code",null,"广度优先搜索",-1),x3=t("code",null,"3+",-1),b3={style:{"text-align":"left"}},p3=t("td",{style:{"text-align":"center"}},"1273",-1),k3={style:{"text-align":"left"}},M3={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},v3=t("td",{style:{"text-align":"center"}},null,-1),I3={style:{"text-align":"left"}},E3=t("code",null,"树",-1),w3=t("code",null,"深度优先搜索",-1),H3=t("code",null,"广度优先搜索",-1),z3=t("code",null,"1+",-1),O3={style:{"text-align":"left"}},q3=t("td",{style:{"text-align":"center"}},"1302",-1),j3={style:{"text-align":"left"}},N3={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},L3=t("td",{style:{"text-align":"center"}},null,-1),C3={style:{"text-align":"left"}},K3=t("code",null,"树",-1),P3=t("code",null,"深度优先搜索",-1),B3=t("code",null,"广度优先搜索",-1),V3=t("code",null,"1+",-1),T3={style:{"text-align":"left"}},U3=t("td",{style:{"text-align":"center"}},"1305",-1),R3={style:{"text-align":"left"}},W3={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},G3=t("td",{style:{"text-align":"center"}},null,-1),Y3={style:{"text-align":"left"}},Q3=t("code",null,"树",-1),S3=t("code",null,"深度优先搜索",-1),D3=t("code",null,"二叉搜索树",-1),Z3=t("code",null,"2+",-1),A3={style:{"text-align":"left"}},F3=t("td",{style:{"text-align":"center"}},"1315",-1),J3={style:{"text-align":"left"}},X3={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},$3=t("td",{style:{"text-align":"center"}},null,-1),t6={style:{"text-align":"left"}},e6=t("code",null,"树",-1),l6=t("code",null,"深度优先搜索",-1),o6=t("code",null,"广度优先搜索",-1),s6=t("code",null,"1+",-1),n6={style:{"text-align":"left"}},d6=t("td",{style:{"text-align":"center"}},"1325",-1),_6={style:{"text-align":"left"}},c6={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},r6=t("td",{style:{"text-align":"center"}},null,-1),a6={style:{"text-align":"left"}},i6=t("code",null,"树",-1),h6=t("code",null,"深度优先搜索",-1),f6=t("code",null,"二叉树",-1),u6={style:{"text-align":"left"}},g6=t("td",{style:{"text-align":"center"}},"1339",-1),m6={style:{"text-align":"left"}},y6={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},x6=t("td",{style:{"text-align":"center"}},null,-1),b6={style:{"text-align":"left"}},p6=t("code",null,"树",-1),k6=t("code",null,"深度优先搜索",-1),M6=t("code",null,"二叉树",-1),v6={style:{"text-align":"left"}},I6=t("td",{style:{"text-align":"center"}},"1361",-1),E6={style:{"text-align":"left"}},w6={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},H6=t("td",{style:{"text-align":"center"}},null,-1),z6={style:{"text-align":"left"}},O6=t("code",null,"树",-1),q6=t("code",null,"深度优先搜索",-1),j6=t("code",null,"广度优先搜索",-1),N6=t("code",null,"3+",-1),L6={style:{"text-align":"left"}},C6=t("td",{style:{"text-align":"center"}},"1367",-1),K6={style:{"text-align":"left"}},P6={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},B6=t("td",{style:{"text-align":"center"}},null,-1),V6={style:{"text-align":"left"}},T6=t("code",null,"树",-1),U6=t("code",null,"深度优先搜索",-1),R6=t("code",null,"链表",-1),W6=t("code",null,"1+",-1),G6={style:{"text-align":"left"}},Y6=t("td",{style:{"text-align":"center"}},"1372",-1),Q6={style:{"text-align":"left"}},S6={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},D6=t("td",{style:{"text-align":"center"}},null,-1),Z6={style:{"text-align":"left"}},A6=t("code",null,"树",-1),F6=t("code",null,"深度优先搜索",-1),J6=t("code",null,"动态规划",-1),X6=t("code",null,"1+",-1),$6={style:{"text-align":"left"}},t4=t("td",{style:{"text-align":"center"}},"1373",-1),e4={style:{"text-align":"left"}},l4={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},o4=t("td",{style:{"text-align":"center"}},null,-1),s4={style:{"text-align":"left"}},n4=t("code",null,"树",-1),d4=t("code",null,"深度优先搜索",-1),_4=t("code",null,"二叉搜索树",-1),c4=t("code",null,"2+",-1),r4={style:{"text-align":"left"}},a4=t("td",{style:{"text-align":"center"}},"1376",-1),i4={style:{"text-align":"left"}},h4={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},f4=t("td",{style:{"text-align":"center"}},null,-1),u4={style:{"text-align":"left"}},g4=t("code",null,"树",-1),m4=t("code",null,"深度优先搜索",-1),y4=t("code",null,"广度优先搜索",-1),x4={style:{"text-align":"left"}},b4=t("td",{style:{"text-align":"center"}},"1377",-1),p4={style:{"text-align":"left"}},k4={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},M4=t("td",{style:{"text-align":"center"}},null,-1),v4={style:{"text-align":"left"}},I4=t("code",null,"树",-1),E4=t("code",null,"深度优先搜索",-1),w4=t("code",null,"广度优先搜索",-1),H4=t("code",null,"1+",-1),z4={style:{"text-align":"left"}},O4=t("td",{style:{"text-align":"center"}},"1379",-1),q4={style:{"text-align":"left"}},j4={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},N4=t("td",{style:{"text-align":"center"}},null,-1),L4={style:{"text-align":"left"}},C4=t("code",null,"树",-1),K4=t("code",null,"深度优先搜索",-1),P4=t("code",null,"广度优先搜索",-1),B4=t("code",null,"1+",-1),V4={style:{"text-align":"left"}},T4=t("td",{style:{"text-align":"center"}},"1382",-1),U4={style:{"text-align":"left"}},R4={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},W4=t("td",{style:{"text-align":"center"}},null,-1),G4={style:{"text-align":"left"}},Y4=t("code",null,"贪心",-1),Q4=t("code",null,"树",-1),S4=t("code",null,"深度优先搜索",-1),D4=t("code",null,"3+",-1),Z4={style:{"text-align":"left"}},A4=t("td",{style:{"text-align":"center"}},"1430",-1),F4={style:{"text-align":"left"}},J4={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},X4=t("td",{style:{"text-align":"center"}},null,-1),$4={style:{"text-align":"left"}},t5=t("code",null,"树",-1),e5=t("code",null,"深度优先搜索",-1),l5=t("code",null,"广度优先搜索",-1),o5=t("code",null,"1+",-1),s5={style:{"text-align":"left"}},n5=t("td",{style:{"text-align":"center"}},"1443",-1),d5={style:{"text-align":"left"}},_5={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},c5=t("td",{style:{"text-align":"center"}},null,-1),r5={style:{"text-align":"left"}},a5=t("code",null,"树",-1),i5=t("code",null,"深度优先搜索",-1),h5=t("code",null,"广度优先搜索",-1),f5=t("code",null,"1+",-1),u5={style:{"text-align":"left"}},g5=t("td",{style:{"text-align":"center"}},"1448",-1),m5={style:{"text-align":"left"}},y5={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},x5=t("td",{style:{"text-align":"center"}},null,-1),b5={style:{"text-align":"left"}},p5=t("code",null,"树",-1),k5=t("code",null,"深度优先搜索",-1),M5=t("code",null,"广度优先搜索",-1),v5=t("code",null,"1+",-1),I5={style:{"text-align":"left"}},E5=t("td",{style:{"text-align":"center"}},"1457",-1),w5={style:{"text-align":"left"}},H5={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},z5=t("td",{style:{"text-align":"center"}},null,-1),O5={style:{"text-align":"left"}},q5=t("code",null,"位运算",-1),j5=t("code",null,"树",-1),N5=t("code",null,"深度优先搜索",-1),L5=t("code",null,"2+",-1),C5={style:{"text-align":"left"}},K5=t("td",{style:{"text-align":"center"}},"1469",-1),P5={style:{"text-align":"left"}},B5={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},V5=t("td",{style:{"text-align":"center"}},null,-1),T5={style:{"text-align":"left"}},U5=t("code",null,"树",-1),R5=t("code",null,"深度优先搜索",-1),W5=t("code",null,"广度优先搜索",-1),G5=t("code",null,"1+",-1),Y5={style:{"text-align":"left"}},Q5=t("td",{style:{"text-align":"center"}},"1483",-1),S5={style:{"text-align":"left"}},D5={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},Z5=t("td",{style:{"text-align":"center"}},null,-1),A5={style:{"text-align":"left"}},F5=t("code",null,"树",-1),J5=t("code",null,"深度优先搜索",-1),X5=t("code",null,"广度优先搜索",-1),$5=t("code",null,"3+",-1),t8={style:{"text-align":"left"}},e8=t("td",{style:{"text-align":"center"}},"1485",-1),l8={style:{"text-align":"left"}},o8={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},s8=t("td",{style:{"text-align":"center"}},null,-1),n8={style:{"text-align":"left"}},d8=t("code",null,"树",-1),_8=t("code",null,"深度优先搜索",-1),c8=t("code",null,"广度优先搜索",-1),r8=t("code",null,"2+",-1),a8={style:{"text-align":"left"}},i8=t("td",{style:{"text-align":"center"}},"1490",-1),h8={style:{"text-align":"left"}},f8={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},u8=t("td",{style:{"text-align":"center"}},null,-1),g8={style:{"text-align":"left"}},m8=t("code",null,"树",-1),y8=t("code",null,"深度优先搜索",-1),x8=t("code",null,"广度优先搜索",-1),b8=t("code",null,"1+",-1),p8={style:{"text-align":"left"}},k8=t("td",{style:{"text-align":"center"}},"1506",-1),M8={style:{"text-align":"left"}},v8={href:"https://leetcode.com/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},I8=t("td",{style:{"text-align":"center"}},null,-1),E8={style:{"text-align":"left"}},w8=t("code",null,"位运算",-1),H8=t("code",null,"树",-1),z8=t("code",null,"深度优先搜索",-1),O8=t("code",null,"1+",-1),q8={style:{"text-align":"left"}},j8=t("td",{style:{"text-align":"center"}},"1516",-1),N8={style:{"text-align":"left"}},L8={href:"https://leetcode.com/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},C8=t("td",{style:{"text-align":"center"}},null,-1),K8={style:{"text-align":"left"}},P8=t("code",null,"树",-1),B8=t("code",null,"深度优先搜索",-1),V8={style:{"text-align":"left"}},T8=t("td",{style:{"text-align":"center"}},"1519",-1),U8={style:{"text-align":"left"}},R8={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},W8=t("td",{style:{"text-align":"center"}},null,-1),G8={style:{"text-align":"left"}},Y8=t("code",null,"树",-1),Q8=t("code",null,"深度优先搜索",-1),S8=t("code",null,"广度优先搜索",-1),D8=t("code",null,"2+",-1),Z8={style:{"text-align":"left"}},A8=t("td",{style:{"text-align":"center"}},"1522",-1),F8={style:{"text-align":"left"}},J8={href:"https://leetcode.com/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},X8={style:{"text-align":"center"}},$8={style:{"text-align":"left"}},t7=t("code",null,"树",-1),e7=t("code",null,"深度优先搜索",-1),l7={style:{"text-align":"left"}},o7=t("td",{style:{"text-align":"center"}},"1530",-1),s7={style:{"text-align":"left"}},n7={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},d7=t("td",{style:{"text-align":"center"}},null,-1),_7={style:{"text-align":"left"}},c7=t("code",null,"树",-1),r7=t("code",null,"深度优先搜索",-1),a7=t("code",null,"二叉树",-1),i7={style:{"text-align":"left"}},h7=t("td",{style:{"text-align":"center"}},"1569",-1),f7={style:{"text-align":"left"}},u7={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},g7=t("td",{style:{"text-align":"center"}},null,-1),m7={style:{"text-align":"left"}},y7=t("code",null,"树",-1),x7=t("code",null,"并查集",-1),b7=t("code",null,"二叉搜索树",-1),p7=t("code",null,"7+",-1),k7={style:{"text-align":"left"}},M7=t("td",{style:{"text-align":"center"}},"1586",-1),v7={style:{"text-align":"left"}},I7={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},E7=t("td",{style:{"text-align":"center"}},null,-1),w7={style:{"text-align":"left"}},H7=t("code",null,"栈",-1),z7=t("code",null,"树",-1),O7=t("code",null,"设计",-1),q7=t("code",null,"3+",-1),j7={style:{"text-align":"left"}},N7=t("td",{style:{"text-align":"center"}},"1597",-1),L7={style:{"text-align":"left"}},C7={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},K7=t("td",{style:{"text-align":"center"}},null,-1),P7={style:{"text-align":"left"}},B7=t("code",null,"栈",-1),V7=t("code",null,"树",-1),T7=t("code",null,"字符串",-1),U7=t("code",null,"1+",-1),R7={style:{"text-align":"left"}},W7=t("td",{style:{"text-align":"center"}},"1600",-1),G7={style:{"text-align":"left"}},Y7={href:"https://leetcode.com/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},Q7=t("td",{style:{"text-align":"center"}},null,-1),S7={style:{"text-align":"left"}},D7=t("code",null,"树",-1),Z7=t("code",null,"深度优先搜索",-1),A7=t("code",null,"设计",-1),F7=t("code",null,"1+",-1),J7={style:{"text-align":"left"}},X7=t("td",{style:{"text-align":"center"}},"1602",-1),$7={style:{"text-align":"left"}},t9={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},e9=t("td",{style:{"text-align":"center"}},null,-1),l9={style:{"text-align":"left"}},o9=t("code",null,"树",-1),s9=t("code",null,"广度优先搜索",-1),n9=t("code",null,"二叉树",-1),d9={style:{"text-align":"left"}},_9=t("td",{style:{"text-align":"center"}},"1609",-1),c9={style:{"text-align":"left"}},r9={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},a9=t("td",{style:{"text-align":"center"}},null,-1),i9={style:{"text-align":"left"}},h9=t("code",null,"树",-1),f9=t("code",null,"广度优先搜索",-1),u9=t("code",null,"二叉树",-1),g9={style:{"text-align":"left"}},m9=t("td",{style:{"text-align":"center"}},"1612",-1),y9={style:{"text-align":"left"}},x9={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},b9=t("td",{style:{"text-align":"center"}},null,-1),p9={style:{"text-align":"left"}},k9=t("code",null,"树",-1),M9=t("code",null,"深度优先搜索",-1),v9=t("code",null,"哈希表",-1),I9=t("code",null,"2+",-1),E9={style:{"text-align":"left"}},w9=t("td",{style:{"text-align":"center"}},"1617",-1),H9={style:{"text-align":"left"}},z9={href:"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},O9=t("td",{style:{"text-align":"center"}},null,-1),q9={style:{"text-align":"left"}},j9=t("code",null,"位运算",-1),N9=t("code",null,"树",-1),L9=t("code",null,"动态规划",-1),C9=t("code",null,"2+",-1),K9={style:{"text-align":"left"}},P9=t("td",{style:{"text-align":"center"}},"1628",-1),B9={style:{"text-align":"left"}},V9={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},T9=t("td",{style:{"text-align":"center"}},null,-1),U9={style:{"text-align":"left"}},R9=t("code",null,"栈",-1),W9=t("code",null,"树",-1),G9=t("code",null,"设计",-1),Y9=t("code",null,"3+",-1),Q9={style:{"text-align":"left"}},S9=t("td",{style:{"text-align":"center"}},"1644",-1),D9={style:{"text-align":"left"}},Z9={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},A9=t("td",{style:{"text-align":"center"}},null,-1),F9={style:{"text-align":"left"}},J9=t("code",null,"树",-1),X9=t("code",null,"深度优先搜索",-1),$9=t("code",null,"二叉树",-1),tk={style:{"text-align":"left"}},ek=t("td",{style:{"text-align":"center"}},"1650",-1),lk={style:{"text-align":"left"}},ok={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},sk=t("td",{style:{"text-align":"center"}},null,-1),nk={style:{"text-align":"left"}},dk=t("code",null,"树",-1),_k=t("code",null,"哈希表",-1),ck=t("code",null,"双指针",-1),rk=t("code",null,"1+",-1),ak={style:{"text-align":"left"}},ik=t("td",{style:{"text-align":"center"}},"1660",-1),hk={style:{"text-align":"left"}},fk={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},uk=t("td",{style:{"text-align":"center"}},null,-1),gk={style:{"text-align":"left"}},mk=t("code",null,"树",-1),yk=t("code",null,"深度优先搜索",-1),xk=t("code",null,"广度优先搜索",-1),bk=t("code",null,"2+",-1),pk={style:{"text-align":"left"}},kk=t("td",{style:{"text-align":"center"}},"1666",-1),Mk={style:{"text-align":"left"}},vk={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ik=t("td",{style:{"text-align":"center"}},null,-1),Ek={style:{"text-align":"left"}},wk=t("code",null,"树",-1),Hk=t("code",null,"深度优先搜索",-1),zk=t("code",null,"二叉树",-1),Ok={style:{"text-align":"left"}},qk=t("td",{style:{"text-align":"center"}},"1676",-1),jk={style:{"text-align":"left"}},Nk={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},Lk=t("td",{style:{"text-align":"center"}},null,-1),Ck={style:{"text-align":"left"}},Kk=t("code",null,"树",-1),Pk=t("code",null,"深度优先搜索",-1),Bk=t("code",null,"哈希表",-1),Vk=t("code",null,"1+",-1),Tk={style:{"text-align":"left"}},Uk=t("td",{style:{"text-align":"center"}},"1719",-1),Rk={style:{"text-align":"left"}},Wk={href:"https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree",target:"_blank",rel:"noopener noreferrer"},Gk=t("td",{style:{"text-align":"center"}},null,-1),Yk={style:{"text-align":"left"}},Qk=t("code",null,"树",-1),Sk=t("code",null,"图",-1),Dk={style:{"text-align":"left"}},Zk=t("td",{style:{"text-align":"center"}},"1740",-1),Ak={style:{"text-align":"left"}},Fk={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jk=t("td",{style:{"text-align":"center"}},null,-1),Xk={style:{"text-align":"left"}},$k=t("code",null,"树",-1),tM=t("code",null,"深度优先搜索",-1),eM=t("code",null,"广度优先搜索",-1),lM=t("code",null,"2+",-1),oM={style:{"text-align":"left"}},sM=t("td",{style:{"text-align":"center"}},"1766",-1),nM={style:{"text-align":"left"}},dM={href:"https://leetcode.com/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},_M=t("td",{style:{"text-align":"center"}},null,-1),cM={style:{"text-align":"left"}},rM=t("code",null,"树",-1),aM=t("code",null,"深度优先搜索",-1),iM=t("code",null,"数组",-1),hM=t("code",null,"2+",-1),fM={style:{"text-align":"left"}},uM=t("td",{style:{"text-align":"center"}},"1902",-1),gM={style:{"text-align":"left"}},mM={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},yM=t("td",{style:{"text-align":"center"}},null,-1),xM={style:{"text-align":"left"}},bM=t("code",null,"树",-1),pM=t("code",null,"二叉搜索树",-1),kM=t("code",null,"数组",-1),MM=t("code",null,"2+",-1),vM={style:{"text-align":"left"}},IM=t("td",{style:{"text-align":"center"}},"1916",-1),EM={style:{"text-align":"left"}},wM={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},HM=t("td",{style:{"text-align":"center"}},null,-1),zM={style:{"text-align":"left"}},OM=t("code",null,"树",-1),qM=t("code",null,"图",-1),jM=t("code",null,"拓扑排序",-1),NM=t("code",null,"3+",-1),LM={style:{"text-align":"left"}},CM=t("td",{style:{"text-align":"center"}},"1932",-1),KM={style:{"text-align":"left"}},PM={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},BM=t("td",{style:{"text-align":"center"}},null,-1),VM={style:{"text-align":"left"}},TM=t("code",null,"树",-1),UM=t("code",null,"深度优先搜索",-1),RM=t("code",null,"哈希表",-1),WM=t("code",null,"2+",-1),GM={style:{"text-align":"left"}},YM=t("td",{style:{"text-align":"center"}},"1973",-1),QM={style:{"text-align":"left"}},SM={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},DM=t("td",{style:{"text-align":"center"}},null,-1),ZM={style:{"text-align":"left"}},AM=t("code",null,"树",-1),FM=t("code",null,"深度优先搜索",-1),JM=t("code",null,"二叉树",-1),XM={style:{"text-align":"left"}},$M=t("td",{style:{"text-align":"center"}},"1993",-1),tv={style:{"text-align":"left"}},ev={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},lv=t("td",{style:{"text-align":"center"}},null,-1),ov={style:{"text-align":"left"}},sv=t("code",null,"树",-1),nv=t("code",null,"深度优先搜索",-1),dv=t("code",null,"广度优先搜索",-1),_v=t("code",null,"3+",-1),cv={style:{"text-align":"left"}},rv=t("td",{style:{"text-align":"center"}},"2003",-1),av={style:{"text-align":"left"}},iv={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},hv=t("td",{style:{"text-align":"center"}},null,-1),fv={style:{"text-align":"left"}},uv=t("code",null,"树",-1),gv=t("code",null,"深度优先搜索",-1),mv=t("code",null,"并查集",-1),yv=t("code",null,"1+",-1),xv={style:{"text-align":"left"}},bv=t("td",{style:{"text-align":"center"}},"2005",-1),pv={style:{"text-align":"left"}},kv={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},Mv=t("td",{style:{"text-align":"center"}},null,-1),vv={style:{"text-align":"left"}},Iv=t("code",null,"树",-1),Ev=t("code",null,"数学",-1),wv=t("code",null,"动态规划",-1),Hv=t("code",null,"2+",-1),zv={style:{"text-align":"left"}},Ov=t("td",{style:{"text-align":"center"}},"2049",-1),qv={style:{"text-align":"left"}},jv={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},Nv=t("td",{style:{"text-align":"center"}},null,-1),Lv={style:{"text-align":"left"}},Cv=t("code",null,"树",-1),Kv=t("code",null,"深度优先搜索",-1),Pv=t("code",null,"数组",-1),Bv=t("code",null,"1+",-1),Vv={style:{"text-align":"left"}},Tv=t("td",{style:{"text-align":"center"}},"2096",-1),Uv={style:{"text-align":"left"}},Rv={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},Wv=t("td",{style:{"text-align":"center"}},null,-1),Gv={style:{"text-align":"left"}},Yv=t("code",null,"树",-1),Qv=t("code",null,"深度优先搜索",-1),Sv=t("code",null,"字符串",-1),Dv=t("code",null,"1+",-1),Zv={style:{"text-align":"left"}},Av=t("td",{style:{"text-align":"center"}},"2196",-1),Fv={style:{"text-align":"left"}},Jv={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},Xv={style:{"text-align":"center"}},$v={style:{"text-align":"left"}},tI=t("code",null,"树",-1),eI=t("code",null,"数组",-1),lI=t("code",null,"哈希表",-1),oI=t("code",null,"1+",-1),sI={style:{"text-align":"left"}},nI=t("td",{style:{"text-align":"center"}},"2236",-1),dI={style:{"text-align":"left"}},_I={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},cI=t("td",{style:{"text-align":"center"}},null,-1),rI={style:{"text-align":"left"}},aI=t("code",null,"树",-1),iI=t("code",null,"二叉树",-1),hI={style:{"text-align":"left"}},fI=t("td",{style:{"text-align":"center"}},"2246",-1),uI={style:{"text-align":"left"}},gI={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},mI=t("td",{style:{"text-align":"center"}},null,-1),yI={style:{"text-align":"left"}},xI=t("code",null,"树",-1),bI=t("code",null,"深度优先搜索",-1),pI=t("code",null,"图",-1),kI=t("code",null,"3+",-1),MI={style:{"text-align":"left"}},vI=t("td",{style:{"text-align":"center"}},"2265",-1),II={style:{"text-align":"left"}},EI={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},wI=t("td",{style:{"text-align":"center"}},null,-1),HI={style:{"text-align":"left"}},zI=t("code",null,"树",-1),OI=t("code",null,"深度优先搜索",-1),qI=t("code",null,"二叉树",-1),jI={style:{"text-align":"left"}},NI=t("td",{style:{"text-align":"center"}},"2277",-1),LI={style:{"text-align":"left"}},CI={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},KI=t("td",{style:{"text-align":"center"}},null,-1),PI={style:{"text-align":"left"}},BI=t("code",null,"树",-1),VI=t("code",null,"深度优先搜索",-1),TI=t("code",null,"广度优先搜索",-1),UI=t("code",null,"1+",-1),RI={style:{"text-align":"left"}},WI=t("td",{style:{"text-align":"center"}},"2313",-1),GI={style:{"text-align":"left"}},YI={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},QI=t("td",{style:{"text-align":"center"}},null,-1),SI={style:{"text-align":"left"}},DI=t("code",null,"树",-1),ZI=t("code",null,"深度优先搜索",-1),AI=t("code",null,"动态规划",-1),FI=t("code",null,"1+",-1),JI={style:{"text-align":"left"}},XI=t("td",{style:{"text-align":"center"}},"2322",-1),$I={style:{"text-align":"left"}},tE={href:"https://leetcode.com/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},eE=t("td",{style:{"text-align":"center"}},null,-1),lE={style:{"text-align":"left"}},oE=t("code",null,"位运算",-1),sE=t("code",null,"树",-1),nE=t("code",null,"深度优先搜索",-1),dE=t("code",null,"1+",-1),_E={style:{"text-align":"left"}},cE=t("td",{style:{"text-align":"center"}},"2331",-1),rE={style:{"text-align":"left"}},aE={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},iE=t("td",{style:{"text-align":"center"}},null,-1),hE={style:{"text-align":"left"}},fE=t("code",null,"树",-1),uE=t("code",null,"深度优先搜索",-1),gE=t("code",null,"二叉树",-1),mE={style:{"text-align":"left"}},yE=t("td",{style:{"text-align":"center"}},"2368",-1),xE={style:{"text-align":"left"}},bE={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},pE=t("td",{style:{"text-align":"center"}},null,-1),kE={style:{"text-align":"left"}},ME=t("code",null,"树",-1),vE=t("code",null,"深度优先搜索",-1),IE=t("code",null,"广度优先搜索",-1),EE=t("code",null,"4+",-1),wE={style:{"text-align":"left"}},HE=t("td",{style:{"text-align":"center"}},"2378",-1),zE={style:{"text-align":"left"}},OE={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},qE=t("td",{style:{"text-align":"center"}},null,-1),jE={style:{"text-align":"left"}},NE=t("code",null,"树",-1),LE=t("code",null,"深度优先搜索",-1),CE=t("code",null,"动态规划",-1),KE={style:{"text-align":"left"}},PE=t("td",{style:{"text-align":"center"}},"2385",-1),BE={style:{"text-align":"left"}},VE={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},TE=t("td",{style:{"text-align":"center"}},null,-1),UE={style:{"text-align":"left"}},RE=t("code",null,"树",-1),WE=t("code",null,"深度优先搜索",-1),GE=t("code",null,"广度优先搜索",-1),YE=t("code",null,"2+",-1),QE={style:{"text-align":"left"}},SE=t("td",{style:{"text-align":"center"}},"2415",-1),DE={style:{"text-align":"left"}},ZE={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},AE=t("td",{style:{"text-align":"center"}},null,-1),FE={style:{"text-align":"left"}},JE=t("code",null,"树",-1),XE=t("code",null,"深度优先搜索",-1),$E=t("code",null,"广度优先搜索",-1),tw=t("code",null,"1+",-1),ew={style:{"text-align":"left"}},lw=t("td",{style:{"text-align":"center"}},"2421",-1),ow={style:{"text-align":"left"}},sw={href:"https://leetcode.com/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},nw=t("td",{style:{"text-align":"center"}},null,-1),dw={style:{"text-align":"left"}},_w=t("code",null,"树",-1),cw=t("code",null,"并查集",-1),rw=t("code",null,"图",-1),aw=t("code",null,"3+",-1),iw={style:{"text-align":"left"}},hw=t("td",{style:{"text-align":"center"}},"2440",-1),fw={style:{"text-align":"left"}},uw={href:"https://leetcode.com/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},gw=t("td",{style:{"text-align":"center"}},null,-1),mw={style:{"text-align":"left"}},yw=t("code",null,"树",-1),xw=t("code",null,"深度优先搜索",-1),bw=t("code",null,"数组",-1),pw=t("code",null,"2+",-1),kw={style:{"text-align":"left"}},Mw=t("td",{style:{"text-align":"center"}},"2445",-1),vw={style:{"text-align":"left"}},Iw={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},Ew=t("td",{style:{"text-align":"center"}},null,-1),ww={style:{"text-align":"left"}},Hw=t("code",null,"树",-1),zw=t("code",null,"深度优先搜索",-1),Ow=t("code",null,"广度优先搜索",-1),qw=t("code",null,"1+",-1),jw={style:{"text-align":"left"}},Nw=t("td",{style:{"text-align":"center"}},"2458",-1),Lw={style:{"text-align":"left"}},Cw={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},Kw=t("td",{style:{"text-align":"center"}},null,-1),Pw={style:{"text-align":"left"}},Bw=t("code",null,"树",-1),Vw=t("code",null,"深度优先搜索",-1),Tw=t("code",null,"广度优先搜索",-1),Uw=t("code",null,"2+",-1),Rw={style:{"text-align":"left"}},Ww=t("td",{style:{"text-align":"center"}},"2467",-1),Gw={style:{"text-align":"left"}},Yw={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Qw=t("td",{style:{"text-align":"center"}},null,-1),Sw={style:{"text-align":"left"}},Dw=t("code",null,"树",-1),Zw=t("code",null,"深度优先搜索",-1),Aw=t("code",null,"广度优先搜索",-1),Fw=t("code",null,"2+",-1),Jw={style:{"text-align":"left"}},Xw=t("td",{style:{"text-align":"center"}},"2471",-1),$w={style:{"text-align":"left"}},tH={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},eH=t("td",{style:{"text-align":"center"}},null,-1),lH={style:{"text-align":"left"}},oH=t("code",null,"树",-1),sH=t("code",null,"广度优先搜索",-1),nH=t("code",null,"二叉树",-1),dH={style:{"text-align":"left"}},_H=t("td",{style:{"text-align":"center"}},"2476",-1),cH={style:{"text-align":"left"}},rH={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},aH=t("td",{style:{"text-align":"center"}},null,-1),iH={style:{"text-align":"left"}},hH=t("code",null,"树",-1),fH=t("code",null,"深度优先搜索",-1),uH=t("code",null,"二叉搜索树",-1),gH=t("code",null,"3+",-1),mH={style:{"text-align":"left"}},yH=t("td",{style:{"text-align":"center"}},"2477",-1),xH={style:{"text-align":"left"}},bH={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},pH=t("td",{style:{"text-align":"center"}},null,-1),kH={style:{"text-align":"left"}},MH=t("code",null,"树",-1),vH=t("code",null,"深度优先搜索",-1),IH=t("code",null,"广度优先搜索",-1),EH=t("code",null,"1+",-1),wH={style:{"text-align":"left"}},HH=t("td",{style:{"text-align":"center"}},"2479",-1),zH={style:{"text-align":"left"}},OH={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},qH=t("td",{style:{"text-align":"center"}},null,-1),jH={style:{"text-align":"left"}},NH=t("code",null,"树",-1),LH=t("code",null,"深度优先搜索",-1),CH=t("code",null,"图",-1),KH=t("code",null,"1+",-1),PH={style:{"text-align":"left"}},BH=t("td",{style:{"text-align":"center"}},"2509",-1),VH={style:{"text-align":"left"}},TH={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},UH=t("td",{style:{"text-align":"center"}},null,-1),RH={style:{"text-align":"left"}},WH=t("code",null,"树",-1),GH=t("code",null,"数组",-1),YH=t("code",null,"二叉树",-1),QH={style:{"text-align":"left"}},SH=t("td",{style:{"text-align":"center"}},"2538",-1),DH={style:{"text-align":"left"}},ZH={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},AH=t("td",{style:{"text-align":"center"}},null,-1),FH={style:{"text-align":"left"}},JH=t("code",null,"树",-1),XH=t("code",null,"深度优先搜索",-1),$H=t("code",null,"数组",-1),tz=t("code",null,"1+",-1),ez={style:{"text-align":"left"}},lz=t("td",{style:{"text-align":"center"}},"2581",-1),oz={style:{"text-align":"left"}},sz={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},nz=t("td",{style:{"text-align":"center"}},null,-1),dz={style:{"text-align":"left"}},_z=t("code",null,"树",-1),cz=t("code",null,"深度优先搜索",-1),rz=t("code",null,"数组",-1),az=t("code",null,"2+",-1),iz={style:{"text-align":"left"}},hz=t("td",{style:{"text-align":"center"}},"2583",-1),fz={style:{"text-align":"left"}},uz={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},gz=t("td",{style:{"text-align":"center"}},null,-1),mz={style:{"text-align":"left"}},yz=t("code",null,"树",-1),xz=t("code",null,"广度优先搜索",-1),bz=t("code",null,"二叉树",-1),pz=t("code",null,"1+",-1),kz={style:{"text-align":"left"}},Mz=t("td",{style:{"text-align":"center"}},"2603",-1),vz={style:{"text-align":"left"}},Iz={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Ez=t("td",{style:{"text-align":"center"}},null,-1),wz={style:{"text-align":"left"}},Hz=t("code",null,"树",-1),zz=t("code",null,"图",-1),Oz=t("code",null,"拓扑排序",-1),qz=t("code",null,"1+",-1),jz={style:{"text-align":"left"}},Nz=t("td",{style:{"text-align":"center"}},"2641",-1),Lz={style:{"text-align":"left"}},Cz={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Kz=t("td",{style:{"text-align":"center"}},null,-1),Pz={style:{"text-align":"left"}},Bz=t("code",null,"树",-1),Vz=t("code",null,"深度优先搜索",-1),Tz=t("code",null,"广度优先搜索",-1),Uz=t("code",null,"2+",-1),Rz={style:{"text-align":"left"}},Wz=t("td",{style:{"text-align":"center"}},"2646",-1),Gz={style:{"text-align":"left"}},Yz={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},Qz=t("td",{style:{"text-align":"center"}},null,-1),Sz={style:{"text-align":"left"}},Dz=t("code",null,"树",-1),Zz=t("code",null,"深度优先搜索",-1),Az=t("code",null,"图",-1),Fz=t("code",null,"2+",-1),Jz={style:{"text-align":"left"}},Xz=t("td",{style:{"text-align":"center"}},"2673",-1),$z={style:{"text-align":"left"}},tO={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},eO=t("td",{style:{"text-align":"center"}},null,-1),lO={style:{"text-align":"left"}},oO=t("code",null,"贪心",-1),sO=t("code",null,"树",-1),nO=t("code",null,"数组",-1),dO=t("code",null,"2+",-1),_O={style:{"text-align":"left"}},cO=t("td",{style:{"text-align":"center"}},"2689",-1),rO={style:{"text-align":"left"}},aO={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},iO=t("td",{style:{"text-align":"center"}},null,-1),hO={style:{"text-align":"left"}},fO=t("code",null,"树",-1),uO=t("code",null,"深度优先搜索",-1),gO=t("code",null,"二叉树",-1),mO={style:{"text-align":"left"}},yO=t("td",{style:{"text-align":"center"}},"2764",-1),xO={style:{"text-align":"left"}},bO={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},pO=t("td",{style:{"text-align":"center"}},null,-1),kO={style:{"text-align":"left"}},MO=t("code",null,"栈",-1),vO=t("code",null,"树",-1),IO=t("code",null,"深度优先搜索",-1),EO=t("code",null,"1+",-1),wO={style:{"text-align":"left"}},HO=t("td",{style:{"text-align":"center"}},"2773",-1),zO={style:{"text-align":"left"}},OO={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},qO=t("td",{style:{"text-align":"center"}},null,-1),jO={style:{"text-align":"left"}},NO=t("code",null,"树",-1),LO=t("code",null,"深度优先搜索",-1),CO=t("code",null,"广度优先搜索",-1),KO=t("code",null,"1+",-1),PO={style:{"text-align":"left"}},BO=t("td",{style:{"text-align":"center"}},"2791",-1),VO={style:{"text-align":"left"}},TO={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},UO=t("td",{style:{"text-align":"center"}},null,-1),RO={style:{"text-align":"left"}},WO=t("code",null,"位运算",-1),GO=t("code",null,"树",-1),YO=t("code",null,"深度优先搜索",-1),QO=t("code",null,"2+",-1),SO={style:{"text-align":"left"}},DO=t("td",{style:{"text-align":"center"}},"2792",-1),ZO={style:{"text-align":"left"}},AO={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},FO=t("td",{style:{"text-align":"center"}},null,-1),JO={style:{"text-align":"left"}},XO=t("code",null,"树",-1),$O=t("code",null,"深度优先搜索",-1),tq=t("code",null,"分治",-1),eq=t("code",null,"1+",-1),lq={style:{"text-align":"left"}},oq=t("td",{style:{"text-align":"center"}},"2846",-1),sq={style:{"text-align":"left"}},nq={href:"https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},dq=t("td",{style:{"text-align":"center"}},null,-1),_q={style:{"text-align":"left"}},cq=t("code",null,"树",-1),rq=t("code",null,"图",-1),aq=t("code",null,"数组",-1),iq=t("code",null,"1+",-1),hq={style:{"text-align":"left"}},fq=t("td",{style:{"text-align":"center"}},"2867",-1),uq={style:{"text-align":"left"}},gq={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},mq=t("td",{style:{"text-align":"center"}},null,-1),yq={style:{"text-align":"left"}},xq=t("code",null,"树",-1),bq=t("code",null,"深度优先搜索",-1),pq=t("code",null,"数学",-1),kq=t("code",null,"2+",-1),Mq={style:{"text-align":"left"}},vq=t("td",{style:{"text-align":"center"}},"2872",-1),Iq={style:{"text-align":"left"}},Eq={href:"https://leetcode.com/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},wq=t("td",{style:{"text-align":"center"}},null,-1),Hq={style:{"text-align":"left"}},zq=t("code",null,"树",-1),Oq=t("code",null,"深度优先搜索",-1),qq={style:{"text-align":"left"}},jq=t("td",{style:{"text-align":"center"}},"2920",-1),Nq={style:{"text-align":"left"}},Lq={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},Cq=t("td",{style:{"text-align":"center"}},null,-1),Kq={style:{"text-align":"left"}},Pq=t("code",null,"位运算",-1),Bq=t("code",null,"树",-1),Vq=t("code",null,"深度优先搜索",-1),Tq=t("code",null,"2+",-1),Uq={style:{"text-align":"left"}},Rq=t("td",{style:{"text-align":"center"}},"2925",-1),Wq={style:{"text-align":"left"}},Gq={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},Yq=t("td",{style:{"text-align":"center"}},null,-1),Qq={style:{"text-align":"left"}},Sq=t("code",null,"树",-1),Dq=t("code",null,"深度优先搜索",-1),Zq=t("code",null,"动态规划",-1),Aq={style:{"text-align":"left"}},Fq=t("td",{style:{"text-align":"center"}},"2973",-1),Jq={style:{"text-align":"left"}},Xq={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},$q=t("td",{style:{"text-align":"center"}},null,-1),tj={style:{"text-align":"left"}},ej=t("code",null,"树",-1),lj=t("code",null,"深度优先搜索",-1),oj=t("code",null,"动态规划",-1),sj=t("code",null,"2+",-1),nj={style:{"text-align":"left"}},dj=t("td",{style:{"text-align":"center"}},"3004",-1),_j={style:{"text-align":"left"}},cj={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},rj=t("td",{style:{"text-align":"center"}},null,-1),aj={style:{"text-align":"left"}},ij=t("code",null,"树",-1),hj=t("code",null,"深度优先搜索",-1),fj=t("code",null,"数组",-1),uj=t("code",null,"1+",-1),gj={style:{"text-align":"left"}},mj=t("td",{style:{"text-align":"center"}},"3067",-1),yj={style:{"text-align":"left"}},xj={href:"https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},bj=t("td",{style:{"text-align":"center"}},null,-1),pj={style:{"text-align":"left"}},kj=t("code",null,"树",-1),Mj=t("code",null,"深度优先搜索",-1),vj=t("code",null,"数组",-1),Ij={style:{"text-align":"left"}},Ej=t("td",{style:{"text-align":"center"}},"3068",-1),wj={style:{"text-align":"left"}},Hj={href:"https://leetcode.com/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},zj=t("td",{style:{"text-align":"center"}},null,-1),Oj={style:{"text-align":"left"}},qj=t("code",null,"贪心",-1),jj=t("code",null,"位运算",-1),Nj=t("code",null,"树",-1),Lj=t("code",null,"3+",-1),Cj={style:{"text-align":"left"}},Kj=t("td",{style:{"text-align":"center"}},"3157",-1),Pj={style:{"text-align":"left"}},Bj={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},Vj=t("td",{style:{"text-align":"center"}},null,-1),Tj={style:{"text-align":"left"}},Uj=t("code",null,"树",-1),Rj=t("code",null,"深度优先搜索",-1),Wj=t("code",null,"广度优先搜索",-1),Gj=t("code",null,"1+",-1),Yj={style:{"text-align":"left"}},Qj=t("td",{style:{"text-align":"center"}},"3203",-1),Sj={style:{"text-align":"left"}},Dj={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},Zj=t("td",{style:{"text-align":"center"}},null,-1),Aj={style:{"text-align":"left"}},Fj=t("code",null,"树",-1),Jj=t("code",null,"深度优先搜索",-1),Xj=t("code",null,"广度优先搜索",-1),$j=t("code",null,"1+",-1),tN={style:{"text-align":"left"}},eN=t("td",{style:{"text-align":"center"}},"3241",-1),lN={style:{"text-align":"left"}},oN={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},sN=t("td",{style:{"text-align":"center"}},null,-1),nN={style:{"text-align":"left"}},dN=t("code",null,"树",-1),_N=t("code",null,"深度优先搜索",-1),cN=t("code",null,"图",-1),rN=t("code",null,"1+",-1),aN={style:{"text-align":"left"}},iN=t("td",{style:{"text-align":"center"}},"3249",-1),hN={style:{"text-align":"left"}},fN={href:"https://leetcode.com/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},uN=t("td",{style:{"text-align":"center"}},null,-1),gN={style:{"text-align":"left"}},mN=t("code",null,"树",-1),yN=t("code",null,"深度优先搜索",-1),xN={style:{"text-align":"left"}},bN=t("td",{style:{"text-align":"center"}},"3313",-1),pN={style:{"text-align":"left"}},kN={href:"https://leetcode.com/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},MN=t("td",{style:{"text-align":"center"}},null,-1),vN={style:{"text-align":"left"}},IN=t("code",null,"树",-1),EN=t("code",null,"深度优先搜索",-1),wN={style:{"text-align":"left"}},HN=t("td",{style:{"text-align":"center"}},"3319",-1),zN={style:{"text-align":"left"}},ON={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},qN={style:{"text-align":"center"}},jN={style:{"text-align":"left"}},NN=t("code",null,"树",-1),LN=t("code",null,"深度优先搜索",-1),CN=t("code",null,"二叉树",-1),KN=t("code",null,"1+",-1),PN={style:{"text-align":"left"}},BN=t("td",{style:{"text-align":"center"}},"LCP 10",-1),VN={style:{"text-align":"left"}},TN={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},UN=t("td",{style:{"text-align":"center"}},null,-1),RN={style:{"text-align":"left"}},WN=t("code",null,"树",-1),GN=t("code",null,"深度优先搜索",-1),YN=t("code",null,"动态规划",-1),QN=t("code",null,"1+",-1),SN={style:{"text-align":"left"}},DN=t("td",{style:{"text-align":"center"}},"LCP 26",-1),ZN={style:{"text-align":"left"}},AN={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},FN=t("td",{style:{"text-align":"center"}},null,-1),JN={style:{"text-align":"left"}},XN=t("code",null,"树",-1),$N=t("code",null,"动态规划",-1),tL=t("code",null,"二叉树",-1),eL={style:{"text-align":"left"}},lL=t("td",{style:{"text-align":"center"}},"LCP 34",-1),oL={style:{"text-align":"left"}},sL={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},nL=t("td",{style:{"text-align":"center"}},null,-1),dL={style:{"text-align":"left"}},_L=t("code",null,"树",-1),cL=t("code",null,"动态规划",-1),rL=t("code",null,"二叉树",-1),aL={style:{"text-align":"left"}},iL=t("td",{style:{"text-align":"center"}},"LCP 44",-1),hL={style:{"text-align":"left"}},fL={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},uL=t("td",{style:{"text-align":"center"}},null,-1),gL={style:{"text-align":"left"}},mL=t("code",null,"树",-1),yL=t("code",null,"深度优先搜索",-1),xL=t("code",null,"广度优先搜索",-1),bL=t("code",null,"2+",-1),pL={style:{"text-align":"left"}},kL=t("td",{style:{"text-align":"center"}},"LCP 52",-1),ML={style:{"text-align":"left"}},vL={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},IL=t("td",{style:{"text-align":"center"}},null,-1),EL={style:{"text-align":"left"}},wL=t("code",null,"树",-1),HL=t("code",null,"线段树",-1),zL=t("code",null,"二叉搜索树",-1),OL=t("code",null,"4+",-1),qL={style:{"text-align":"left"}},jL=t("td",{style:{"text-align":"center"}},"LCP 60",-1),NL={style:{"text-align":"left"}},LL={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},CL=t("td",{style:{"text-align":"center"}},null,-1),KL={style:{"text-align":"left"}},PL=t("code",null,"树",-1),BL=t("code",null,"动态规划",-1),VL=t("code",null,"二叉树",-1),TL={style:{"text-align":"left"}},UL=t("td",{style:{"text-align":"center"}},"LCP 64",-1),RL={style:{"text-align":"left"}},WL={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},GL=t("td",{style:{"text-align":"center"}},null,-1),YL={style:{"text-align":"left"}},QL=t("code",null,"树",-1),SL=t("code",null,"深度优先搜索",-1),DL=t("code",null,"动态规划",-1),ZL=t("code",null,"1+",-1),AL={style:{"text-align":"left"}},FL=t("td",{style:{"text-align":"center"}},"LCP 67",-1),JL={style:{"text-align":"left"}},XL={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},$L=t("td",{style:{"text-align":"center"}},null,-1),tC={style:{"text-align":"left"}},eC=t("code",null,"树",-1),lC=t("code",null,"深度优先搜索",-1),oC=t("code",null,"广度优先搜索",-1),sC=t("code",null,"1+",-1),nC={style:{"text-align":"left"}},dC=t("td",{style:{"text-align":"center"}},"剑指 Offer 07",-1),_C={style:{"text-align":"left"}},cC={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},rC={style:{"text-align":"center"}},aC={style:{"text-align":"left"}},iC=t("code",null,"树",-1),hC=t("code",null,"数组",-1),fC=t("code",null,"哈希表",-1),uC=t("code",null,"2+",-1),gC={style:{"text-align":"left"}},mC=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),yC={style:{"text-align":"left"}},xC={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},bC={style:{"text-align":"center"}},pC={style:{"text-align":"left"}},kC=t("code",null,"树",-1),MC=t("code",null,"深度优先搜索",-1),vC=t("code",null,"二叉树",-1),IC={style:{"text-align":"left"}},EC=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),wC={style:{"text-align":"left"}},HC={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},zC={style:{"text-align":"center"}},OC={style:{"text-align":"left"}},qC=t("code",null,"树",-1),jC=t("code",null,"深度优先搜索",-1),NC=t("code",null,"广度优先搜索",-1),LC=t("code",null,"1+",-1),CC={style:{"text-align":"left"}},KC=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),PC={style:{"text-align":"left"}},BC={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},VC={style:{"text-align":"center"}},TC={style:{"text-align":"left"}},UC=t("code",null,"树",-1),RC=t("code",null,"深度优先搜索",-1),WC=t("code",null,"广度优先搜索",-1),GC=t("code",null,"1+",-1),YC={style:{"text-align":"left"}},QC=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - I",-1),SC={style:{"text-align":"left"}},DC={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},ZC={style:{"text-align":"center"}},AC={style:{"text-align":"left"}},FC=t("code",null,"树",-1),JC=t("code",null,"广度优先搜索",-1),XC=t("code",null,"二叉树",-1),$C={style:{"text-align":"left"}},tK=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - II",-1),eK={style:{"text-align":"left"}},lK={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},oK={style:{"text-align":"center"}},sK={style:{"text-align":"left"}},nK=t("code",null,"树",-1),dK=t("code",null,"广度优先搜索",-1),_K=t("code",null,"二叉树",-1),cK={style:{"text-align":"left"}},rK=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - III",-1),aK={style:{"text-align":"left"}},iK={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},hK={style:{"text-align":"center"}},fK={style:{"text-align":"left"}},uK=t("code",null,"树",-1),gK=t("code",null,"广度优先搜索",-1),mK=t("code",null,"二叉树",-1),yK={style:{"text-align":"left"}},xK=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),bK={style:{"text-align":"left"}},pK={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},kK={style:{"text-align":"center"}},MK={style:{"text-align":"left"}},vK=t("code",null,"栈",-1),IK=t("code",null,"树",-1),EK=t("code",null,"二叉搜索树",-1),wK=t("code",null,"4+",-1),HK={style:{"text-align":"left"}},zK=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),OK={style:{"text-align":"left"}},qK={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},jK={style:{"text-align":"center"}},NK={style:{"text-align":"left"}},LK=t("code",null,"树",-1),CK=t("code",null,"深度优先搜索",-1),KK=t("code",null,"回溯",-1),PK=t("code",null,"1+",-1),BK={style:{"text-align":"left"}},VK=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),TK={style:{"text-align":"left"}},UK={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},RK={style:{"text-align":"center"}},WK={style:{"text-align":"left"}},GK=t("code",null,"栈",-1),YK=t("code",null,"树",-1),QK=t("code",null,"深度优先搜索",-1),SK=t("code",null,"4+",-1),DK={style:{"text-align":"left"}},ZK=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),AK={style:{"text-align":"left"}},FK={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},JK={style:{"text-align":"center"}},XK={style:{"text-align":"left"}},$K=t("code",null,"树",-1),tP=t("code",null,"深度优先搜索",-1),eP=t("code",null,"广度优先搜索",-1),lP=t("code",null,"3+",-1),oP={style:{"text-align":"left"}},sP=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),nP={style:{"text-align":"left"}},dP={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},_P={style:{"text-align":"center"}},cP={style:{"text-align":"left"}},rP=t("code",null,"树",-1),aP=t("code",null,"深度优先搜索",-1),iP=t("code",null,"二叉搜索树",-1),hP=t("code",null,"1+",-1),fP={style:{"text-align":"left"}},uP=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),gP={style:{"text-align":"left"}},mP={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},yP={style:{"text-align":"center"}},xP={style:{"text-align":"left"}},bP=t("code",null,"树",-1),pP=t("code",null,"深度优先搜索",-1),kP=t("code",null,"广度优先搜索",-1),MP=t("code",null,"1+",-1),vP={style:{"text-align":"left"}},IP=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),EP={style:{"text-align":"left"}},wP={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},HP=t("td",{style:{"text-align":"center"}},null,-1),zP={style:{"text-align":"left"}},OP=t("code",null,"树",-1),qP=t("code",null,"深度优先搜索",-1),jP=t("code",null,"二叉树",-1),NP={style:{"text-align":"left"}},LP=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),CP={style:{"text-align":"left"}},KP={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},PP=t("td",{style:{"text-align":"center"}},null,-1),BP={style:{"text-align":"left"}},VP=t("code",null,"树",-1),TP=t("code",null,"深度优先搜索",-1),UP=t("code",null,"二叉搜索树",-1),RP=t("code",null,"1+",-1),WP={style:{"text-align":"left"}},GP=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),YP={style:{"text-align":"left"}},QP={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},SP=t("td",{style:{"text-align":"center"}},null,-1),DP={style:{"text-align":"left"}},ZP=t("code",null,"树",-1),AP=t("code",null,"深度优先搜索",-1),FP=t("code",null,"二叉树",-1),JP={style:{"text-align":"left"}},XP=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),$P={style:{"text-align":"left"}},tB={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},eB=t("td",{style:{"text-align":"center"}},null,-1),lB={style:{"text-align":"left"}},oB=t("code",null,"树",-1),sB=t("code",null,"广度优先搜索",-1),nB=t("code",null,"设计",-1),dB=t("code",null,"1+",-1),_B={style:{"text-align":"left"}},cB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),rB={style:{"text-align":"left"}},aB={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},iB=t("td",{style:{"text-align":"center"}},null,-1),hB={style:{"text-align":"left"}},fB=t("code",null,"树",-1),uB=t("code",null,"深度优先搜索",-1),gB=t("code",null,"广度优先搜索",-1),mB=t("code",null,"1+",-1),yB={style:{"text-align":"left"}},xB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),bB={style:{"text-align":"left"}},pB={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},kB=t("td",{style:{"text-align":"center"}},null,-1),MB={style:{"text-align":"left"}},vB=t("code",null,"树",-1),IB=t("code",null,"深度优先搜索",-1),EB=t("code",null,"广度优先搜索",-1),wB=t("code",null,"1+",-1),HB={style:{"text-align":"left"}},zB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),OB={style:{"text-align":"left"}},qB={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},jB=t("td",{style:{"text-align":"center"}},null,-1),NB={style:{"text-align":"left"}},LB=t("code",null,"树",-1),CB=t("code",null,"深度优先搜索",-1),KB=t("code",null,"广度优先搜索",-1),PB=t("code",null,"1+",-1),BB={style:{"text-align":"left"}},VB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),TB={style:{"text-align":"left"}},UB={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},RB=t("td",{style:{"text-align":"center"}},null,-1),WB={style:{"text-align":"left"}},GB=t("code",null,"树",-1),YB=t("code",null,"深度优先搜索",-1),QB=t("code",null,"二叉树",-1),SB={style:{"text-align":"left"}},DB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),ZB={style:{"text-align":"left"}},AB={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},FB=t("td",{style:{"text-align":"center"}},null,-1),JB={style:{"text-align":"left"}},XB=t("code",null,"树",-1),$B=t("code",null,"深度优先搜索",-1),tV=t("code",null,"广度优先搜索",-1),eV=t("code",null,"3+",-1),lV={style:{"text-align":"left"}},oV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),sV={style:{"text-align":"left"}},nV={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},dV=t("td",{style:{"text-align":"center"}},null,-1),_V={style:{"text-align":"left"}},cV=t("code",null,"树",-1),rV=t("code",null,"深度优先搜索",-1),aV=t("code",null,"二叉树",-1),iV={style:{"text-align":"left"}},hV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),fV={style:{"text-align":"left"}},uV={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},gV=t("td",{style:{"text-align":"center"}},null,-1),mV={style:{"text-align":"left"}},yV=t("code",null,"树",-1),xV=t("code",null,"深度优先搜索",-1),bV=t("code",null,"二叉树",-1),pV={style:{"text-align":"left"}},kV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),MV={style:{"text-align":"left"}},vV={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},IV=t("td",{style:{"text-align":"center"}},null,-1),EV={style:{"text-align":"left"}},wV=t("code",null,"树",-1),HV=t("code",null,"深度优先搜索",-1),zV=t("code",null,"动态规划",-1),OV=t("code",null,"1+",-1),qV={style:{"text-align":"left"}},jV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),NV={style:{"text-align":"left"}},LV={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},CV=t("td",{style:{"text-align":"center"}},null,-1),KV={style:{"text-align":"left"}},PV=t("code",null,"栈",-1),BV=t("code",null,"树",-1),VV=t("code",null,"深度优先搜索",-1),TV=t("code",null,"2+",-1),UV={style:{"text-align":"left"}},RV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),WV={style:{"text-align":"left"}},GV={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},YV=t("td",{style:{"text-align":"center"}},null,-1),QV={style:{"text-align":"left"}},SV=t("code",null,"树",-1),DV=t("code",null,"深度优先搜索",-1),ZV=t("code",null,"二叉搜索树",-1),AV=t("code",null,"1+",-1),FV={style:{"text-align":"left"}},JV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),XV={style:{"text-align":"left"}},$V={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},tT=t("td",{style:{"text-align":"center"}},null,-1),eT={style:{"text-align":"left"}},lT=t("code",null,"树",-1),oT=t("code",null,"深度优先搜索",-1),sT=t("code",null,"二叉搜索树",-1),nT=t("code",null,"1+",-1),dT={style:{"text-align":"left"}},_T=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),cT={style:{"text-align":"left"}},rT={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},aT=t("td",{style:{"text-align":"center"}},null,-1),iT={style:{"text-align":"left"}},hT=t("code",null,"栈",-1),fT=t("code",null,"树",-1),uT=t("code",null,"设计",-1),gT=t("code",null,"3+",-1),mT={style:{"text-align":"left"}},yT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),xT={style:{"text-align":"left"}},bT={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},pT=t("td",{style:{"text-align":"center"}},null,-1),kT={style:{"text-align":"left"}},MT=t("code",null,"树",-1),vT=t("code",null,"设计",-1),IT=t("code",null,"二叉搜索树",-1),ET=t("code",null,"3+",-1),wT={style:{"text-align":"left"}},HT=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),zT={style:{"text-align":"left"}},OT={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},qT=t("td",{style:{"text-align":"center"}},null,-1),jT={style:{"text-align":"left"}},NT=t("code",null,"树",-1),LT=t("code",null,"二叉搜索树",-1),CT=t("code",null,"数组",-1),KT=t("code",null,"2+",-1),PT={style:{"text-align":"left"}},BT=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),VT={style:{"text-align":"left"}},TT={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},UT=t("td",{style:{"text-align":"center"}},null,-1),RT={style:{"text-align":"left"}},WT=t("code",null,"树",-1),GT=t("code",null,"广度优先搜索",-1),YT=t("code",null,"链表",-1),QT=t("code",null,"1+",-1),ST={style:{"text-align":"left"}},DT=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),ZT={style:{"text-align":"left"}},AT={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},FT=t("td",{style:{"text-align":"center"}},null,-1),JT={style:{"text-align":"left"}},XT=t("code",null,"树",-1),$T=t("code",null,"深度优先搜索",-1),tU=t("code",null,"二叉树",-1),eU={style:{"text-align":"left"}},lU=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),oU={style:{"text-align":"left"}},sU={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},nU=t("td",{style:{"text-align":"center"}},null,-1),dU={style:{"text-align":"left"}},_U=t("code",null,"树",-1),cU=t("code",null,"深度优先搜索",-1),rU=t("code",null,"二叉搜索树",-1),aU=t("code",null,"1+",-1),iU={style:{"text-align":"left"}},hU=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),fU={style:{"text-align":"left"}},uU={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},gU=t("td",{style:{"text-align":"center"}},null,-1),mU={style:{"text-align":"left"}},yU=t("code",null,"树",-1),xU=t("code",null,"深度优先搜索",-1),bU=t("code",null,"二叉搜索树",-1),pU=t("code",null,"1+",-1),kU={style:{"text-align":"left"}},MU=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),vU={style:{"text-align":"left"}},IU={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},EU=t("td",{style:{"text-align":"center"}},null,-1),wU={style:{"text-align":"left"}},HU=t("code",null,"树",-1),zU=t("code",null,"深度优先搜索",-1),OU=t("code",null,"二叉树",-1),qU={style:{"text-align":"left"}},jU=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),NU={style:{"text-align":"left"}},LU={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},CU=t("td",{style:{"text-align":"center"}},null,-1),KU={style:{"text-align":"left"}},PU=t("code",null,"树",-1),BU=t("code",null,"二叉搜索树",-1),VU=t("code",null,"回溯",-1),TU=t("code",null,"1+",-1),UU={style:{"text-align":"left"}},RU=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),WU={style:{"text-align":"left"}},GU={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},YU=t("td",{style:{"text-align":"center"}},null,-1),QU={style:{"text-align":"left"}},SU=t("code",null,"树",-1),DU=t("code",null,"深度优先搜索",-1),ZU=t("code",null,"二叉树",-1),AU=t("code",null,"2+",-1),FU={style:{"text-align":"left"}},JU=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),XU={style:{"text-align":"left"}},$U={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},tR=t("td",{style:{"text-align":"center"}},null,-1),eR={style:{"text-align":"left"}},lR=t("code",null,"树",-1),oR=t("code",null,"深度优先搜索",-1),sR=t("code",null,"二叉树",-1),nR={style:{"text-align":"left"}},dR=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),_R={style:{"text-align":"left"}},cR={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},rR=t("td",{style:{"text-align":"center"}},null,-1),aR={style:{"text-align":"left"}},iR=t("code",null,"栈",-1),hR=t("code",null,"树",-1),fR=t("code",null,"深度优先搜索",-1),uR=t("code",null,"3+",-1),gR={style:{"text-align":"left"}};function mR(yR,xR){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return r(),a("div",null,[f,t("details",null,[u,g,t("p",null,[e(s,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(s,{to:"/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[E]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/tag/string-matching.html"},{default:o(()=>[H]),_:1}),l(),z,l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[O]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[q]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/tag/ordered-set.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[C]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[T]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[U]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[W]),_:1}),l(),e(s,{to:"/tag/suffix-array.html"},{default:o(()=>[G]),_:1})]),Y,t("p",null,[e(s,{to:"/tag/enumeration.html"},{default:o(()=>[Q]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/tag/bucket-sort.html"},{default:o(()=>[X]),_:1}),l(),e(s,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/tag/counting.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/tag/sliding-window.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/tag/rolling-hash.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(s,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(s,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/tag/database.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/tag/data-stream.html"},{default:o(()=>[Ot]),_:1}),l(),e(s,{to:"/tag/brainteaser.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/tag/interactive.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/tag/iterator.html"},{default:o(()=>[Nt]),_:1}),l(),e(s,{to:"/tag/concurrency.html"},{default:o(()=>[Lt]),_:1})])]),Ct,i(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Pt,t("td",Bt,[t("a",Vt,[l("二叉树的中序遍历"),e(n)])]),t("td",Tt,[e(s,{to:"/problem/0094.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ut,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Rt]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Wt]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gt]),_:1}),l(),Yt]),t("td",Qt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[St,t("td",Dt,[t("a",Zt,[l("不同的二叉搜索树 II"),e(n)])]),t("td",At,[e(s,{to:"/problem/0095.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ft,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Jt]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Xt]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",se,[l("不同的二叉搜索树"),e(n)])]),t("td",ne,[e(s,{to:"/problem/0096.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",de,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_e]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ce]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[re]),_:1}),l(),ae]),t("td",ie,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[he,t("td",fe,[t("a",ue,[l("验证二叉搜索树"),e(n)])]),t("td",ge,[e(s,{to:"/problem/0098.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",me,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ye]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xe]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[be]),_:1}),l(),pe]),t("td",ke,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Me,t("td",ve,[t("a",Ie,[l("恢复二叉搜索树"),e(n)])]),t("td",Ee,[e(s,{to:"/problem/0099.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",we,[e(s,{to:"/tag/tree.html"},{default:o(()=>[He]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ze]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Oe]),_:1}),l(),qe]),t("td",je,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ne,t("td",Le,[t("a",Ce,[l("相同的树"),e(n)])]),t("td",Ke,[e(s,{to:"/problem/0100.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pe,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Be]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ve]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Te]),_:1}),l(),Ue]),t("td",Re,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[We,t("td",Ge,[t("a",Ye,[l("对称二叉树"),e(n)])]),t("td",Qe,[e(s,{to:"/problem/0101.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Se,[e(s,{to:"/tag/tree.html"},{default:o(()=>[De]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ze]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ae]),_:1}),l(),Fe]),t("td",Je,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xe,t("td",$e,[t("a",tl,[l("二叉树的层序遍历"),e(n)])]),t("td",el,[e(s,{to:"/problem/0102.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ll,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ol]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[sl]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[nl]),_:1})]),t("td",dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_l,t("td",cl,[t("a",rl,[l("二叉树的锯齿形层序遍历"),e(n)])]),t("td",al,[e(s,{to:"/problem/0103.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",il,[e(s,{to:"/tag/tree.html"},{default:o(()=>[hl]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ul]),_:1})]),t("td",gl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ml,t("td",yl,[t("a",xl,[l("二叉树的最大深度"),e(n)])]),t("td",bl,[e(s,{to:"/problem/0104.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",pl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ml]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[vl]),_:1}),l(),Il]),t("td",El,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wl,t("td",Hl,[t("a",zl,[l("从前序与中序遍历序列构造二叉树"),e(n)])]),t("td",Ol,[e(s,{to:"/problem/0105.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ql,[e(s,{to:"/tag/tree.html"},{default:o(()=>[jl]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Nl]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Ll]),_:1}),l(),Cl]),t("td",Kl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pl,t("td",Bl,[t("a",Vl,[l("从中序与后序遍历序列构造二叉树"),e(n)])]),t("td",Tl,[e(s,{to:"/problem/0106.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ul,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Rl]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Wl]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Gl]),_:1}),l(),Yl]),t("td",Ql,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Dl,[t("a",Zl,[l("二叉树的层序遍历 II"),e(n)])]),t("td",Al,[e(s,{to:"/problem/0107.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Jl]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Xl]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[$l]),_:1})]),t("td",to,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eo,t("td",lo,[t("a",oo,[l("将有序数组转换为二叉搜索树"),e(n)])]),t("td",so,[e(s,{to:"/problem/0108.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",no,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_o]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[co]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ro]),_:1}),l(),ao]),t("td",io,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ho,t("td",fo,[t("a",uo,[l("有序链表转换二叉搜索树"),e(n)])]),t("td",go,[e(s,{to:"/problem/0109.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mo,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yo]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[xo]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[bo]),_:1}),l(),po]),t("td",ko,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mo,t("td",vo,[t("a",Io,[l("平衡二叉树"),e(n)])]),t("td",Eo,[e(s,{to:"/problem/0110.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wo,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ho]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zo]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Oo]),_:1})]),t("td",qo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jo,t("td",No,[t("a",Lo,[l("二叉树的最小深度"),e(n)])]),t("td",Co,[e(s,{to:"/problem/0111.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ko,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Po]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Bo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Vo]),_:1}),l(),To]),t("td",Uo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ro,t("td",Wo,[t("a",Go,[l("路径总和"),e(n)])]),t("td",Yo,[e(s,{to:"/problem/0112.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qo,[e(s,{to:"/tag/tree.html"},{default:o(()=>[So]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Do]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Zo]),_:1}),l(),Ao]),t("td",Fo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Jo,t("td",Xo,[t("a",$o,[l("路径总和 II"),e(n)])]),t("td",ts,[e(s,{to:"/problem/0113.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",es,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ls]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[os]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[ss]),_:1}),l(),ns]),t("td",ds,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_s,t("td",cs,[t("a",rs,[l("二叉树展开为链表"),e(n)])]),t("td",as,[e(s,{to:"/problem/0114.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",is,[e(s,{to:"/tag/stack.html"},{default:o(()=>[hs]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[fs]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[us]),_:1}),l(),gs]),t("td",ms,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",bs,[l("填充每个节点的下一个右侧节点指针"),e(n)])]),t("td",ps,[e(s,{to:"/problem/0116.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ks,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ms]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vs]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Is]),_:1}),l(),Es]),t("td",ws,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hs,t("td",zs,[t("a",Os,[l("填充每个节点的下一个右侧节点指针 II"),e(n)])]),t("td",qs,[e(s,{to:"/problem/0117.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",js,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ns]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ls]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Cs]),_:1}),l(),Ks]),t("td",Ps,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bs,t("td",Vs,[t("a",Ts,[l("二叉树中的最大路径和"),e(n)])]),t("td",Us,[e(s,{to:"/problem/0124.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rs,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ws]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gs]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ys]),_:1}),l(),Qs]),t("td",Ss,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ds,t("td",Zs,[t("a",As,[l("求根节点到叶节点数字之和"),e(n)])]),t("td",Fs,[e(s,{to:"/problem/0129.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Js,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xs]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$s]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[tn]),_:1})]),t("td",en,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ln,t("td",on,[t("a",sn,[l("二叉树的前序遍历"),e(n)])]),t("td",nn,[e(s,{to:"/problem/0144.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",dn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[_n]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[cn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rn]),_:1}),l(),an]),t("td",hn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fn,t("td",un,[t("a",gn,[l("二叉树的后序遍历"),e(n)])]),t("td",mn,[e(s,{to:"/problem/0145.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[xn]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[bn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pn]),_:1}),l(),kn]),t("td",Mn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vn,t("td",In,[t("a",En,[l("上下翻转二叉树"),e(n)])]),t("td",wn,[e(s,{to:"/problem/0156.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[zn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[On]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[qn]),_:1})]),t("td",jn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nn,t("td",Ln,[t("a",Cn,[l("二叉搜索树迭代器"),e(n)])]),t("td",Kn,[e(s,{to:"/problem/0173.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Bn]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Vn]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Tn]),_:1}),l(),Un]),t("td",Rn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wn,t("td",Gn,[t("a",Yn,[l("二叉树的右视图"),e(n)])]),t("td",Qn,[e(s,{to:"/problem/0199.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zn]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[An]),_:1}),l(),Fn]),t("td",Jn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xn,t("td",$n,[t("a",td,[l("完全二叉树的节点个数"),e(n)])]),t("td",ed,[e(s,{to:"/problem/0222.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ld,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[od]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[sd]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[nd]),_:1}),l(),dd]),t("td",_d,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cd,t("td",rd,[t("a",ad,[l("翻转二叉树"),e(n)])]),t("td",id,[e(s,{to:"/problem/0226.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ud]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gd]),_:1}),l(),md]),t("td",yd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xd,t("td",bd,[t("a",pd,[l("二叉搜索树中第 K 小的元素"),e(n)])]),t("td",kd,[e(s,{to:"/problem/0230.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Md,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Id]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ed]),_:1}),l(),wd]),t("td",Hd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zd,t("td",Od,[t("a",qd,[l("二叉搜索树的最近公共祖先"),e(n)])]),t("td",jd,[e(s,{to:"/problem/0235.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Nd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ld]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cd]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Kd]),_:1}),l(),Pd]),t("td",Bd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vd,t("td",Td,[t("a",Ud,[l("二叉树的最近公共祖先"),e(n)])]),t("td",Rd,[e(s,{to:"/problem/0236.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Gd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yd]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Qd]),_:1})]),t("td",Sd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dd,t("td",Zd,[t("a",Ad,[l("统计同值子树"),e(n)])]),Fd,t("td",Jd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$d]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[t_]),_:1})]),t("td",e_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l_,t("td",o_,[t("a",s_,[l("验证二叉搜索树的前序遍历序列"),e(n)])]),n_,t("td",d_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[__]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[c_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[r_]),_:1}),l(),a_]),t("td",i_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h_,t("td",f_,[t("a",u_,[l("二叉树的所有路径"),e(n)])]),t("td",g_,[e(s,{to:"/problem/0257.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",m_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[y_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[x_]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[b_]),_:1}),l(),p_]),t("td",k_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[M_,t("td",v_,[t("a",I_,[l("最接近的二叉搜索树值"),e(n)])]),E_,t("td",w_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[H_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[z_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[O_]),_:1}),l(),q_]),t("td",j_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[N_,t("td",L_,[t("a",C_,[l("最接近的二叉搜索树值 II"),e(n)])]),K_,t("td",P_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[B_]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[V_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[T_]),_:1}),l(),U_]),t("td",R_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W_,t("td",G_,[t("a",Y_,[l("二叉搜索树中的中序后继"),e(n)])]),Q_,t("td",S_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[D_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Z_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[A_]),_:1}),l(),F_]),t("td",J_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X_,t("td",$_,[t("a",tc,[l("二叉树的序列化与反序列化"),e(n)])]),t("td",ec,[e(s,{to:"/problem/0297.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[oc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[nc]),_:1}),l(),dc]),t("td",_c,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cc,t("td",rc,[t("a",ac,[l("二叉树最长连续序列"),e(n)])]),ic,t("td",hc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[uc]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[gc]),_:1})]),t("td",mc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yc,t("td",xc,[t("a",bc,[l("二叉树的垂直遍历"),e(n)])]),pc,t("td",kc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Mc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ic]),_:1}),l(),Ec]),t("td",wc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hc,t("td",zc,[t("a",Oc,[l("验证二叉树的前序序列化"),e(n)])]),qc,t("td",jc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Nc]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Lc]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Cc]),_:1}),l(),Kc]),t("td",Pc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bc,t("td",Vc,[t("a",Tc,[l("最大二叉搜索子树"),e(n)])]),Uc,t("td",Rc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Wc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gc]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Yc]),_:1}),l(),Qc]),t("td",Sc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dc,t("td",Zc,[t("a",Ac,[l("打家劫舍 III"),e(n)])]),Fc,t("td",Jc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$c]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tr]),_:1}),l(),er]),t("td",lr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[or,t("td",sr,[t("a",nr,[l("扁平化嵌套列表迭代器"),e(n)])]),dr,t("td",_r,[e(s,{to:"/tag/stack.html"},{default:o(()=>[cr]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[rr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ar]),_:1}),l(),ir]),t("td",hr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fr,t("td",ur,[t("a",gr,[l("寻找二叉树的叶子节点"),e(n)])]),t("td",mr,[e(s,{to:"/problem/0366.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[br]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[pr]),_:1})]),t("td",kr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mr,t("td",vr,[t("a",Ir,[l("左叶子之和"),e(n)])]),Er,t("td",wr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Hr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zr]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Or]),_:1}),l(),qr]),t("td",jr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Nr,t("td",Lr,[t("a",Cr,[l("将二叉搜索树转化为排序的双向链表"),e(n)])]),t("td",Kr,[e(s,{to:"/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Br]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Vr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Tr]),_:1}),l(),Ur]),t("td",Rr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wr,t("td",Gr,[t("a",Yr,[l("建立四叉树"),e(n)])]),t("td",Qr,[e(s,{to:"/problem/0427.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Zr]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Ar]),_:1}),l(),Fr]),t("td",Jr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xr,t("td",$r,[t("a",ta,[l("序列化和反序列化 N 叉树"),e(n)])]),ea,t("td",la,[e(s,{to:"/tag/tree.html"},{default:o(()=>[oa]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sa]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[na]),_:1}),l(),da]),t("td",_a,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ca,t("td",ra,[t("a",aa,[l("N 叉树的层序遍历"),e(n)])]),ia,t("td",ha,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fa]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ua]),_:1})]),t("td",ga,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ma,t("td",ya,[t("a",xa,[l("将 N 叉树编码为二叉树"),e(n)])]),ba,t("td",pa,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ka]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ma]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[va]),_:1}),l(),Ia]),t("td",Ea,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wa,t("td",Ha,[t("a",za,[l("路径总和 III"),e(n)])]),t("td",Oa,[e(s,{to:"/problem/0437.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qa,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ja]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Na]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[La]),_:1})]),t("td",Ca,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ka,t("td",Pa,[t("a",Ba,[l("序列化和反序列化二叉搜索树"),e(n)])]),Va,t("td",Ta,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ua]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ra]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Wa]),_:1}),l(),Ga]),t("td",Ya,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qa,t("td",Sa,[t("a",Da,[l("删除二叉搜索树中的节点"),e(n)])]),t("td",Za,[e(s,{to:"/problem/0450.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Aa,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Fa]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ja]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Xa]),_:1})]),t("td",$a,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ti,t("td",ei,[t("a",li,[l("二叉搜索树中的众数"),e(n)])]),oi,t("td",si,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ni]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[di]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[_i]),_:1}),l(),ci]),t("td",ri,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ai,t("td",ii,[t("a",hi,[l("出现次数最多的子树元素和"),e(n)])]),fi,t("td",ui,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gi]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mi]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[yi]),_:1}),l(),xi]),t("td",bi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pi,t("td",ki,[t("a",Mi,[l("二叉搜索树中的中序后继 II"),e(n)])]),vi,t("td",Ii,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ei]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[wi]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Hi]),_:1})]),t("td",zi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oi,t("td",qi,[t("a",ji,[l("找树左下角的值"),e(n)])]),Ni,t("td",Li,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ci]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ki]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Pi]),_:1}),l(),Bi]),t("td",Vi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ti,t("td",Ui,[t("a",Ri,[l("在每个树行中找最大值"),e(n)])]),Wi,t("td",Gi,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Yi]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qi]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Si]),_:1}),l(),Di]),t("td",Zi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ai,t("td",Fi,[t("a",Ji,[l("二叉搜索树的最小绝对差"),e(n)])]),t("td",Xi,[e(s,{to:"/problem/0530.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$i,[e(s,{to:"/tag/tree.html"},{default:o(()=>[th]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[eh]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lh]),_:1}),l(),oh]),t("td",sh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[nh,t("td",dh,[t("a",_h,[l("从字符串生成二叉树"),e(n)])]),ch,t("td",rh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ah]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[ih]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hh]),_:1}),l(),fh]),t("td",uh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gh,t("td",mh,[t("a",yh,[l("把二叉搜索树转换为累加树"),e(n)])]),xh,t("td",bh,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ph]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kh]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Mh]),_:1}),l(),vh]),t("td",Ih,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Eh,t("td",wh,[t("a",Hh,[l("二叉树的直径"),e(n)])]),t("td",zh,[e(s,{to:"/problem/0543.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Oh,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qh]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jh]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Nh]),_:1})]),t("td",Lh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ch,t("td",Kh,[t("a",Ph,[l("二叉树的边界"),e(n)])]),Bh,t("td",Vh,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Th]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Uh]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Rh]),_:1})]),t("td",Wh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gh,t("td",Yh,[t("a",Qh,[l("二叉树最长连续序列 II"),e(n)])]),Sh,t("td",Dh,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Zh]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ah]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Fh]),_:1})]),t("td",Jh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xh,t("td",$h,[t("a",t1,[l("四叉树交集"),e(n)])]),e1,t("td",l1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[o1]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[s1]),_:1})]),t("td",n1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d1,t("td",_1,[t("a",c1,[l("N 叉树的最大深度"),e(n)])]),t("td",r1,[e(s,{to:"/problem/0559.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",a1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[i1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[h1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[f1]),_:1})]),t("td",u1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[g1,t("td",m1,[t("a",y1,[l("二叉树的坡度"),e(n)])]),x1,t("td",b1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[p1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[k1]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[M1]),_:1})]),t("td",v1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[I1,t("td",E1,[t("a",w1,[l("另一棵树的子树"),e(n)])]),t("td",H1,[e(s,{to:"/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",z1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[O1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q1]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[j1]),_:1}),l(),N1]),t("td",L1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[C1,t("td",K1,[t("a",P1,[l("杀掉进程"),e(n)])]),B1,t("td",V1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[T1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[U1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[R1]),_:1}),l(),W1]),t("td",G1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y1,t("td",Q1,[t("a",S1,[l("N 叉树的前序遍历"),e(n)])]),t("td",D1,[e(s,{to:"/problem/0589.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Z1,[e(s,{to:"/tag/stack.html"},{default:o(()=>[A1]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[F1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[J1]),_:1})]),t("td",X1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$1,t("td",tf,[t("a",ef,[l("N 叉树的后序遍历"),e(n)])]),t("td",lf,[e(s,{to:"/problem/0590.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",of,[e(s,{to:"/tag/stack.html"},{default:o(()=>[sf]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[nf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[df]),_:1})]),t("td",_f,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cf,t("td",rf,[t("a",af,[l("根据二叉树创建字符串"),e(n)])]),hf,t("td",ff,[e(s,{to:"/tag/tree.html"},{default:o(()=>[uf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gf]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[mf]),_:1}),l(),yf]),t("td",xf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bf,t("td",pf,[t("a",kf,[l("合并二叉树"),e(n)])]),t("td",Mf,[e(s,{to:"/problem/0617.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[If]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ef]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[wf]),_:1}),l(),Hf]),t("td",zf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Of,t("td",qf,[t("a",jf,[l("在二叉树中增加一行"),e(n)])]),Nf,t("td",Lf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Cf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Kf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Pf]),_:1}),l(),Bf]),t("td",Vf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tf,t("td",Uf,[t("a",Rf,[l("二叉树的层平均值"),e(n)])]),t("td",Wf,[e(s,{to:"/problem/0637.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Yf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Sf]),_:1}),l(),Df]),t("td",Zf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Af,t("td",Ff,[t("a",Jf,[l("寻找重复的子树"),e(n)])]),Xf,t("td",$f,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[eu]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[lu]),_:1}),l(),ou]),t("td",su,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nu,t("td",du,[t("a",_u,[l("两数之和 IV - 输入二叉搜索树"),e(n)])]),cu,t("td",ru,[e(s,{to:"/tag/tree.html"},{default:o(()=>[au]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[iu]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hu]),_:1}),l(),fu]),t("td",uu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[gu,t("td",mu,[t("a",yu,[l("最大二叉树"),e(n)])]),t("td",xu,[e(s,{to:"/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bu,[e(s,{to:"/tag/stack.html"},{default:o(()=>[pu]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[ku]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Mu]),_:1}),l(),vu]),t("td",Iu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Eu,t("td",wu,[t("a",Hu,[l("输出二叉树"),e(n)])]),zu,t("td",Ou,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ju]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Nu]),_:1}),l(),Lu]),t("td",Cu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ku,t("td",Pu,[t("a",Bu,[l("二叉树最大宽度"),e(n)])]),t("td",Vu,[e(s,{to:"/problem/0662.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Tu,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Uu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ru]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Wu]),_:1}),l(),Gu]),t("td",Yu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qu,t("td",Su,[t("a",Du,[l("均匀树划分"),e(n)])]),Zu,t("td",Au,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Fu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ju]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Xu]),_:1})]),t("td",$u,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tg,t("td",eg,[t("a",lg,[l("路径总和 IV"),e(n)])]),og,t("td",sg,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ng]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dg]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[_g]),_:1}),l(),cg]),t("td",rg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ag,t("td",ig,[t("a",hg,[l("修剪二叉搜索树"),e(n)])]),fg,t("td",ug,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mg]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[yg]),_:1}),l(),xg]),t("td",bg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pg,t("td",kg,[t("a",Mg,[l("二叉树中第二小的节点"),e(n)])]),vg,t("td",Ig,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Eg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wg]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Hg]),_:1})]),t("td",zg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Og,t("td",qg,[t("a",jg,[l("最长同值路径"),e(n)])]),Ng,t("td",Lg,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Cg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Kg]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Pg]),_:1})]),t("td",Bg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vg,t("td",Tg,[t("a",Ug,[l("员工的重要性"),e(n)])]),Rg,t("td",Wg,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Gg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yg]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Qg]),_:1}),l(),Sg]),t("td",Dg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zg,t("td",Ag,[t("a",Fg,[l("二叉搜索树中的搜索"),e(n)])]),t("td",Jg,[e(s,{to:"/problem/0700.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xg,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$g]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[tm]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[em]),_:1})]),t("td",lm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[om,t("td",sm,[t("a",nm,[l("二叉搜索树中的插入操作"),e(n)])]),t("td",dm,[e(s,{to:"/problem/0701.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_m,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cm]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[rm]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[am]),_:1})]),t("td",im,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hm,t("td",fm,[t("a",um,[l("数据流中的第 K 大元素"),e(n)])]),t("td",gm,[e(s,{to:"/problem/0703.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mm,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ym]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[xm]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[bm]),_:1}),l(),pm]),t("td",km,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mm,t("td",vm,[t("a",Im,[l("二叉树最近的叶节点"),e(n)])]),Em,t("td",wm,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Hm]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Om]),_:1}),l(),qm]),t("td",jm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nm,t("td",Lm,[t("a",Cm,[l("拆分二叉搜索树"),e(n)])]),Km,t("td",Pm,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Bm]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Vm]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[Tm]),_:1}),l(),Um]),t("td",Rm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wm,t("td",Gm,[t("a",Ym,[l("二叉搜索树节点最小距离"),e(n)])]),t("td",Qm,[e(s,{to:"/problem/0783.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sm,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dm]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Am]),_:1}),l(),Fm]),t("td",Jm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xm,t("td",$m,[t("a",t2,[l("二叉树剪枝"),e(n)])]),e2,t("td",l2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[o2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[s2]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[n2]),_:1})]),t("td",d2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_2,t("td",c2,[t("a",r2,[l("树中距离之和"),e(n)])]),a2,t("td",i2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[h2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[f2]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[u2]),_:1}),l(),g2]),t("td",m2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y2,t("td",x2,[t("a",b2,[l("二叉树中所有距离为 K 的结点"),e(n)])]),p2,t("td",k2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[M2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[v2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[I2]),_:1}),l(),E2]),t("td",w2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H2,t("td",z2,[t("a",O2,[l("具有所有最深节点的最小子树"),e(n)])]),q2,t("td",j2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[N2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[L2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[C2]),_:1}),l(),K2]),t("td",P2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B2,t("td",V2,[t("a",T2,[l("叶子相似的树"),e(n)])]),U2,t("td",R2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[W2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[G2]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Y2]),_:1})]),t("td",Q2,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[S2,t("td",D2,[t("a",Z2,[l("根据前序和后序遍历构造二叉树"),e(n)])]),t("td",A2,[e(s,{to:"/problem/0889.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",F2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[J2]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[X2]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[$2]),_:1}),l(),ty]),t("td",ey,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ly,t("td",oy,[t("a",sy,[l("所有可能的真二叉树"),e(n)])]),ny,t("td",dy,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_y]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[cy]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[ry]),_:1}),l(),ay]),t("td",iy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hy,t("td",fy,[t("a",uy,[l("递增顺序搜索树"),e(n)])]),gy,t("td",my,[e(s,{to:"/tag/stack.html"},{default:o(()=>[yy]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[xy]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[by]),_:1}),l(),py]),t("td",ky,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[My,t("td",vy,[t("a",Iy,[l("完全二叉树插入器"),e(n)])]),Ey,t("td",wy,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Hy]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[zy]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Oy]),_:1}),l(),qy]),t("td",jy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ny,t("td",Ly,[t("a",Cy,[l("二叉搜索树的范围和"),e(n)])]),Ky,t("td",Py,[e(s,{to:"/tag/tree.html"},{default:o(()=>[By]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vy]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ty]),_:1}),l(),Uy]),t("td",Ry,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Wy,t("td",Gy,[t("a",Yy,[l("翻转等价二叉树"),e(n)])]),Qy,t("td",Sy,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dy]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zy]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Ay]),_:1})]),t("td",Fy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jy,t("td",Xy,[t("a",$y,[l("二叉树的完全性检验"),e(n)])]),t("td",tx,[e(s,{to:"/problem/0958.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ex,[e(s,{to:"/tag/tree.html"},{default:o(()=>[lx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ox]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[sx]),_:1})]),t("td",nx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dx,t("td",_x,[t("a",cx,[l("单值二叉树"),e(n)])]),rx,t("td",ax,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ix]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fx]),_:1}),l(),ux]),t("td",gx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[mx,t("td",yx,[t("a",xx,[l("监控二叉树"),e(n)])]),bx,t("td",px,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kx]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Mx]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vx]),_:1}),l(),Ix]),t("td",Ex,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wx,t("td",Hx,[t("a",zx,[l("翻转二叉树以匹配先序遍历"),e(n)])]),Ox,t("td",qx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[jx]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Nx]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Lx]),_:1})]),t("td",Cx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kx,t("td",Px,[t("a",Bx,[l("在二叉树中分配硬币"),e(n)])]),Vx,t("td",Tx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ux]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Rx]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Wx]),_:1})]),t("td",Gx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yx,t("td",Qx,[t("a",Sx,[l("二叉树的垂序遍历"),e(n)])]),Dx,t("td",Zx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ax]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Fx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Jx]),_:1}),l(),Xx]),t("td",$x,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tb,t("td",eb,[t("a",lb,[l("从叶结点开始的最小字符串"),e(n)])]),ob,t("td",sb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nb]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[db]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[_b]),_:1}),l(),cb]),t("td",rb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ab,t("td",ib,[t("a",hb,[l("二叉树的堂兄弟节点"),e(n)])]),fb,t("td",ub,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gb]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mb]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[yb]),_:1}),l(),xb]),t("td",bb,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pb,t("td",kb,[t("a",Mb,[l("最大二叉树 II"),e(n)])]),vb,t("td",Ib,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Eb]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[wb]),_:1})]),t("td",Hb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zb,t("td",Ob,[t("a",qb,[l("前序遍历构造二叉搜索树"),e(n)])]),t("td",jb,[e(s,{to:"/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Nb,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Lb]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Cb]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Kb]),_:1}),l(),Pb]),t("td",Bb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vb,t("td",Tb,[t("a",Ub,[l("从根到叶的二进制数之和"),e(n)])]),Rb,t("td",Wb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Gb]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yb]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Qb]),_:1})]),t("td",Sb,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Db,t("td",Zb,[t("a",Ab,[l("节点与其祖先之间的最大差值"),e(n)])]),Fb,t("td",Jb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xb]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$b]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[tp]),_:1})]),t("td",ep,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lp,t("td",op,[t("a",sp,[l("从先序遍历还原二叉树"),e(n)])]),np,t("td",dp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_p]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cp]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[rp]),_:1}),l(),ap]),t("td",ip,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hp,t("td",fp,[t("a",up,[l("从二叉搜索树到更大和树"),e(n)])]),gp,t("td",mp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yp]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xp]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[bp]),_:1}),l(),pp]),t("td",kp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mp,t("td",vp,[t("a",Ip,[l("根到叶路径上的不足节点"),e(n)])]),Ep,t("td",wp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Hp]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zp]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Op]),_:1})]),t("td",qp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jp,t("td",Np,[t("a",Lp,[l("二叉树寻路"),e(n)])]),Cp,t("td",Kp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Pp]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Bp]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Vp]),_:1})]),t("td",Tp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Up,t("td",Rp,[t("a",Wp,[l("删点成林"),e(n)])]),Gp,t("td",Yp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Qp]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Sp]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Dp]),_:1}),l(),Zp]),t("td",Ap,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fp,t("td",Jp,[t("a",Xp,[l("子树的最大平均值"),e(n)])]),$p,t("td",t0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[e0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[l0]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[o0]),_:1})]),t("td",s0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n0,t("td",d0,[t("a",_0,[l("最深叶节点的最近公共祖先"),e(n)])]),c0,t("td",r0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[a0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[i0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[h0]),_:1}),l(),f0]),t("td",u0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g0,t("td",m0,[t("a",y0,[l("二叉树着色游戏"),e(n)])]),x0,t("td",b0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[p0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[k0]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[M0]),_:1})]),t("td",v0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I0,t("td",E0,[t("a",w0,[l("最大层内元素和"),e(n)])]),H0,t("td",z0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[O0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[j0]),_:1}),l(),N0]),t("td",L0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C0,t("td",K0,[t("a",P0,[l("查找两棵二叉搜索树之和"),e(n)])]),B0,t("td",V0,[e(s,{to:"/tag/stack.html"},{default:o(()=>[T0]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[U0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[R0]),_:1}),l(),W0]),t("td",G0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y0,t("td",Q0,[t("a",S0,[l("树的直径"),e(n)])]),D0,t("td",Z0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[A0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[F0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[J0]),_:1}),l(),X0]),t("td",$0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t3,t("td",e3,[t("a",l3,[l("最小公共区域"),e(n)])]),o3,t("td",s3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[n3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[d3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_3]),_:1}),l(),c3]),t("td",r3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a3,t("td",i3,[t("a",h3,[l("在受污染的二叉树中查找元素"),e(n)])]),f3,t("td",u3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[g3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[m3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[y3]),_:1}),l(),x3]),t("td",b3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p3,t("td",k3,[t("a",M3,[l("删除树节点"),e(n)])]),v3,t("td",I3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[E3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[w3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[H3]),_:1}),l(),z3]),t("td",O3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q3,t("td",j3,[t("a",N3,[l("层数最深叶子节点的和"),e(n)])]),L3,t("td",C3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[K3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[P3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[B3]),_:1}),l(),V3]),t("td",T3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U3,t("td",R3,[t("a",W3,[l("两棵二叉搜索树中的所有元素"),e(n)])]),G3,t("td",Y3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Q3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[S3]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[D3]),_:1}),l(),Z3]),t("td",A3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F3,t("td",J3,[t("a",X3,[l("祖父节点值为偶数的节点和"),e(n)])]),$3,t("td",t6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[e6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[l6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[o6]),_:1}),l(),s6]),t("td",n6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d6,t("td",_6,[t("a",c6,[l("删除给定值的叶子节点"),e(n)])]),r6,t("td",a6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[i6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[h6]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[f6]),_:1})]),t("td",u6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g6,t("td",m6,[t("a",y6,[l("分裂二叉树的最大乘积"),e(n)])]),x6,t("td",b6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[p6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[k6]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[M6]),_:1})]),t("td",v6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I6,t("td",E6,[t("a",w6,[l("验证二叉树"),e(n)])]),H6,t("td",z6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[O6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[j6]),_:1}),l(),N6]),t("td",L6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C6,t("td",K6,[t("a",P6,[l("二叉树中的链表"),e(n)])]),B6,t("td",V6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[T6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[U6]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[R6]),_:1}),l(),W6]),t("td",G6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y6,t("td",Q6,[t("a",S6,[l("二叉树中的最长交错路径"),e(n)])]),D6,t("td",Z6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[A6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[F6]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[J6]),_:1}),l(),X6]),t("td",$6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t4,t("td",e4,[t("a",l4,[l("二叉搜索子树的最大键值和"),e(n)])]),o4,t("td",s4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[n4]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[d4]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[_4]),_:1}),l(),c4]),t("td",r4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[a4,t("td",i4,[t("a",h4,[l("通知所有员工所需的时间"),e(n)])]),f4,t("td",u4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[g4]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[m4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[y4]),_:1})]),t("td",x4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b4,t("td",p4,[t("a",k4,[l("T 秒后青蛙的位置"),e(n)])]),M4,t("td",v4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[I4]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[E4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[w4]),_:1}),l(),H4]),t("td",z4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[O4,t("td",q4,[t("a",j4,[l("找出克隆二叉树中的相同节点"),e(n)])]),N4,t("td",L4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[C4]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[K4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[P4]),_:1}),l(),B4]),t("td",V4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[T4,t("td",U4,[t("a",R4,[l("将二叉搜索树变平衡"),e(n)])]),W4,t("td",G4,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[Y4]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Q4]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[S4]),_:1}),l(),D4]),t("td",Z4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A4,t("td",F4,[t("a",J4,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(n)])]),X4,t("td",$4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[t5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[e5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[l5]),_:1}),l(),o5]),t("td",s5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n5,t("td",d5,[t("a",_5,[l("收集树上所有苹果的最少时间"),e(n)])]),c5,t("td",r5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[a5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[i5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[h5]),_:1}),l(),f5]),t("td",u5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g5,t("td",m5,[t("a",y5,[l("统计二叉树中好节点的数目"),e(n)])]),x5,t("td",b5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[p5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[k5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[M5]),_:1}),l(),v5]),t("td",I5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E5,t("td",w5,[t("a",H5,[l("二叉树中的伪回文路径"),e(n)])]),z5,t("td",O5,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[q5]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[j5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[N5]),_:1}),l(),L5]),t("td",C5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K5,t("td",P5,[t("a",B5,[l("寻找所有的独生节点"),e(n)])]),V5,t("td",T5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[U5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[R5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[W5]),_:1}),l(),G5]),t("td",Y5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Q5,t("td",S5,[t("a",D5,[l("树节点的第 K 个祖先"),e(n)])]),Z5,t("td",A5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[F5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[J5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[X5]),_:1}),l(),$5]),t("td",t8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e8,t("td",l8,[t("a",o8,[l("克隆含随机指针的二叉树"),e(n)])]),s8,t("td",n8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[d8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[c8]),_:1}),l(),r8]),t("td",a8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i8,t("td",h8,[t("a",f8,[l("克隆 N 叉树"),e(n)])]),u8,t("td",g8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[m8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[y8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[x8]),_:1}),l(),b8]),t("td",p8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k8,t("td",M8,[t("a",v8,[l("找到 N 叉树的根节点"),e(n)])]),I8,t("td",E8,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[w8]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[H8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[z8]),_:1}),l(),O8]),t("td",q8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j8,t("td",N8,[t("a",L8,[l("移动 N 叉树的子树"),e(n)])]),C8,t("td",K8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[P8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[B8]),_:1})]),t("td",V8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T8,t("td",U8,[t("a",R8,[l("子树中标签相同的节点数"),e(n)])]),W8,t("td",G8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Y8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Q8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[S8]),_:1}),l(),D8]),t("td",Z8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A8,t("td",F8,[t("a",J8,[l("N 叉树的直径"),e(n)])]),t("td",X8,[e(s,{to:"/problem/1522.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[t7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[e7]),_:1})]),t("td",l7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o7,t("td",s7,[t("a",n7,[l("好叶子节点对的数量"),e(n)])]),d7,t("td",_7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[c7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[r7]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[a7]),_:1})]),t("td",i7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h7,t("td",f7,[t("a",u7,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(n)])]),g7,t("td",m7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[y7]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[x7]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[b7]),_:1}),l(),p7]),t("td",k7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[M7,t("td",v7,[t("a",I7,[l("二叉搜索树迭代器 II"),e(n)])]),E7,t("td",w7,[e(s,{to:"/tag/stack.html"},{default:o(()=>[H7]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[z7]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[O7]),_:1}),l(),q7]),t("td",j7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N7,t("td",L7,[t("a",C7,[l("根据中缀表达式构造二叉表达式树"),e(n)])]),K7,t("td",P7,[e(s,{to:"/tag/stack.html"},{default:o(()=>[B7]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[V7]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[T7]),_:1}),l(),U7]),t("td",R7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W7,t("td",G7,[t("a",Y7,[l("王位继承顺序"),e(n)])]),Q7,t("td",S7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[D7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Z7]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[A7]),_:1}),l(),F7]),t("td",J7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X7,t("td",$7,[t("a",t9,[l("找到二叉树中最近的右侧节点"),e(n)])]),e9,t("td",l9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[o9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[s9]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[n9]),_:1})]),t("td",d9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_9,t("td",c9,[t("a",r9,[l("奇偶树"),e(n)])]),a9,t("td",i9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[h9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[f9]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[u9]),_:1})]),t("td",g9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m9,t("td",y9,[t("a",x9,[l("检查两棵二叉表达式树是否等价"),e(n)])]),b9,t("td",p9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[k9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[M9]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[v9]),_:1}),l(),I9]),t("td",E9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w9,t("td",H9,[t("a",z9,[l("统计子树中城市之间最大距离"),e(n)])]),O9,t("td",q9,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[j9]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[N9]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[L9]),_:1}),l(),C9]),t("td",K9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[P9,t("td",B9,[t("a",V9,[l("设计带解析函数的表达式树"),e(n)])]),T9,t("td",U9,[e(s,{to:"/tag/stack.html"},{default:o(()=>[R9]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[W9]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[G9]),_:1}),l(),Y9]),t("td",Q9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S9,t("td",D9,[t("a",Z9,[l("二叉树的最近公共祖先 II"),e(n)])]),A9,t("td",F9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[J9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[X9]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[$9]),_:1})]),t("td",tk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ek,t("td",lk,[t("a",ok,[l("二叉树的最近公共祖先 III"),e(n)])]),sk,t("td",nk,[e(s,{to:"/tag/tree.html"},{default:o(()=>[dk]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[_k]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[ck]),_:1}),l(),rk]),t("td",ak,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ik,t("td",hk,[t("a",fk,[l("纠正二叉树"),e(n)])]),uk,t("td",gk,[e(s,{to:"/tag/tree.html"},{default:o(()=>[mk]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yk]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xk]),_:1}),l(),bk]),t("td",pk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kk,t("td",Mk,[t("a",vk,[l("改变二叉树的根节点"),e(n)])]),Ik,t("td",Ek,[e(s,{to:"/tag/tree.html"},{default:o(()=>[wk]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Hk]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[zk]),_:1})]),t("td",Ok,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qk,t("td",jk,[t("a",Nk,[l("二叉树的最近公共祖先 IV"),e(n)])]),Lk,t("td",Ck,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Kk]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pk]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Bk]),_:1}),l(),Vk]),t("td",Tk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uk,t("td",Rk,[t("a",Wk,[l("重构一棵树的方案数"),e(n)])]),Gk,t("td",Yk,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Qk]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Sk]),_:1})]),t("td",Dk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zk,t("td",Ak,[t("a",Fk,[l("找到二叉树中的距离"),e(n)])]),Jk,t("td",Xk,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$k]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[tM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[eM]),_:1}),l(),lM]),t("td",oM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sM,t("td",nM,[t("a",dM,[l("互质树"),e(n)])]),_M,t("td",cM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[rM]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[aM]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[iM]),_:1}),l(),hM]),t("td",fM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uM,t("td",gM,[t("a",mM,[l("给定二叉搜索树的插入顺序求深度"),e(n)])]),yM,t("td",xM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[bM]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[pM]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[kM]),_:1}),l(),MM]),t("td",vM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[IM,t("td",EM,[t("a",wM,[l("统计为蚁群构筑房间的不同顺序"),e(n)])]),HM,t("td",zM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[OM]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[qM]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[jM]),_:1}),l(),NM]),t("td",LM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[CM,t("td",KM,[t("a",PM,[l("合并多棵二叉搜索树"),e(n)])]),BM,t("td",VM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[TM]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[UM]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[RM]),_:1}),l(),WM]),t("td",GM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[YM,t("td",QM,[t("a",SM,[l("值等于子节点值之和的节点数量"),e(n)])]),DM,t("td",ZM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[AM]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[FM]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[JM]),_:1})]),t("td",XM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$M,t("td",tv,[t("a",ev,[l("树上的操作"),e(n)])]),lv,t("td",ov,[e(s,{to:"/tag/tree.html"},{default:o(()=>[sv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nv]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dv]),_:1}),l(),_v]),t("td",cv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rv,t("td",av,[t("a",iv,[l("每棵子树内缺失的最小基因值"),e(n)])]),hv,t("td",fv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[uv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gv]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[mv]),_:1}),l(),yv]),t("td",xv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bv,t("td",pv,[t("a",kv,[l("斐波那契树的移除子树游戏"),e(n)])]),Mv,t("td",vv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Iv]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Ev]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[wv]),_:1}),l(),Hv]),t("td",zv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ov,t("td",qv,[t("a",jv,[l("统计最高分的节点数目"),e(n)])]),Nv,t("td",Lv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Cv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Kv]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Pv]),_:1}),l(),Bv]),t("td",Vv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tv,t("td",Uv,[t("a",Rv,[l("从二叉树一个节点到另一个节点每一步的方向"),e(n)])]),Wv,t("td",Gv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Yv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qv]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Sv]),_:1}),l(),Dv]),t("td",Zv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Av,t("td",Fv,[t("a",Jv,[l("根据描述创建二叉树"),e(n)])]),t("td",Xv,[e(s,{to:"/problem/2196.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$v,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tI]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[eI]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[lI]),_:1}),l(),oI]),t("td",sI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nI,t("td",dI,[t("a",_I,[l("判断根结点是否等于子结点之和"),e(n)])]),cI,t("td",rI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[aI]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[iI]),_:1})]),t("td",hI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fI,t("td",uI,[t("a",gI,[l("相邻字符不同的最长路径"),e(n)])]),mI,t("td",yI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bI]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[pI]),_:1}),l(),kI]),t("td",MI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vI,t("td",II,[t("a",EI,[l("统计值等于子树平均值的节点数"),e(n)])]),wI,t("td",HI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[zI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[OI]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[qI]),_:1})]),t("td",jI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NI,t("td",LI,[t("a",CI,[l("树中最接近路径的节点"),e(n)])]),KI,t("td",PI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[BI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[VI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[TI]),_:1}),l(),UI]),t("td",RI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[WI,t("td",GI,[t("a",YI,[l("二叉树中得到结果所需的最少翻转次数"),e(n)])]),QI,t("td",SI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[DI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ZI]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[AI]),_:1}),l(),FI]),t("td",JI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XI,t("td",$I,[t("a",tE,[l("从树中删除边的最小分数"),e(n)])]),eE,t("td",lE,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[oE]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[sE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nE]),_:1}),l(),dE]),t("td",_E,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cE,t("td",rE,[t("a",aE,[l("计算布尔二叉树的值"),e(n)])]),iE,t("td",hE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[uE]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[gE]),_:1})]),t("td",mE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yE,t("td",xE,[t("a",bE,[l("受限条件下可到达节点的数目"),e(n)])]),pE,t("td",kE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ME]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[IE]),_:1}),l(),EE]),t("td",wE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HE,t("td",zE,[t("a",OE,[l("选择边来最大化树的得分"),e(n)])]),qE,t("td",jE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[NE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[LE]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[CE]),_:1})]),t("td",KE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PE,t("td",BE,[t("a",VE,[l("感染二叉树需要的总时间"),e(n)])]),TE,t("td",UE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[RE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[WE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[GE]),_:1}),l(),YE]),t("td",QE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SE,t("td",DE,[t("a",ZE,[l("反转二叉树的奇数层"),e(n)])]),AE,t("td",FE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[JE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[XE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$E]),_:1}),l(),tw]),t("td",ew,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lw,t("td",ow,[t("a",sw,[l("好路径的数目"),e(n)])]),nw,t("td",dw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_w]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[cw]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[rw]),_:1}),l(),aw]),t("td",iw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hw,t("td",fw,[t("a",uw,[l("创建价值相同的连通块"),e(n)])]),gw,t("td",mw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xw]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[bw]),_:1}),l(),pw]),t("td",kw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mw,t("td",vw,[t("a",Iw,[l("值为 1 的节点数"),e(n)])]),Ew,t("td",ww,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Hw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ow]),_:1}),l(),qw]),t("td",jw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nw,t("td",Lw,[t("a",Cw,[l("移除子树后的二叉树高度"),e(n)])]),Kw,t("td",Pw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Bw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Tw]),_:1}),l(),Uw]),t("td",Rw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ww,t("td",Gw,[t("a",Yw,[l("树上最大得分和路径"),e(n)])]),Qw,t("td",Sw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Aw]),_:1}),l(),Fw]),t("td",Jw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xw,t("td",$w,[t("a",tH,[l("逐层排序二叉树所需的最少操作数目"),e(n)])]),eH,t("td",lH,[e(s,{to:"/tag/tree.html"},{default:o(()=>[oH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[sH]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[nH]),_:1})]),t("td",dH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_H,t("td",cH,[t("a",rH,[l("二叉搜索树最近节点查询"),e(n)])]),aH,t("td",iH,[e(s,{to:"/tag/tree.html"},{default:o(()=>[hH]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fH]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[uH]),_:1}),l(),gH]),t("td",mH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yH,t("td",xH,[t("a",bH,[l("到达首都的最少油耗"),e(n)])]),pH,t("td",kH,[e(s,{to:"/tag/tree.html"},{default:o(()=>[MH]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[IH]),_:1}),l(),EH]),t("td",wH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HH,t("td",zH,[t("a",OH,[l("两个不重叠子树的最大异或值"),e(n)])]),qH,t("td",jH,[e(s,{to:"/tag/tree.html"},{default:o(()=>[NH]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[LH]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[CH]),_:1}),l(),KH]),t("td",PH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BH,t("td",VH,[t("a",TH,[l("查询树中环的长度"),e(n)])]),UH,t("td",RH,[e(s,{to:"/tag/tree.html"},{default:o(()=>[WH]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[GH]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[YH]),_:1})]),t("td",QH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[SH,t("td",DH,[t("a",ZH,[l("最大价值和与最小价值和的差值"),e(n)])]),AH,t("td",FH,[e(s,{to:"/tag/tree.html"},{default:o(()=>[JH]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[XH]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[$H]),_:1}),l(),tz]),t("td",ez,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lz,t("td",oz,[t("a",sz,[l("统计可能的树根数目"),e(n)])]),nz,t("td",dz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_z]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cz]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[rz]),_:1}),l(),az]),t("td",iz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hz,t("td",fz,[t("a",uz,[l("二叉树中的第 K 大层和"),e(n)])]),gz,t("td",mz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yz]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xz]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[bz]),_:1}),l(),pz]),t("td",kz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mz,t("td",vz,[t("a",Iz,[l("收集树中金币"),e(n)])]),Ez,t("td",wz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Hz]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[zz]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[Oz]),_:1}),l(),qz]),t("td",jz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nz,t("td",Lz,[t("a",Cz,[l("二叉树的堂兄弟节点 II"),e(n)])]),Kz,t("td",Pz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Bz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vz]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Tz]),_:1}),l(),Uz]),t("td",Rz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wz,t("td",Gz,[t("a",Yz,[l("最小化旅行的价格总和"),e(n)])]),Qz,t("td",Sz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zz]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Az]),_:1}),l(),Fz]),t("td",Jz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xz,t("td",$z,[t("a",tO,[l("使二叉树所有路径值相等的最小代价"),e(n)])]),eO,t("td",lO,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[oO]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[sO]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[nO]),_:1}),l(),dO]),t("td",_O,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cO,t("td",rO,[t("a",aO,[l("从 Rope 树中提取第 K 个字符"),e(n)])]),iO,t("td",hO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[uO]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[gO]),_:1})]),t("td",mO,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yO,t("td",xO,[t("a",bO,[l("数组是否表示某二叉树的前序遍历"),e(n)])]),pO,t("td",kO,[e(s,{to:"/tag/stack.html"},{default:o(()=>[MO]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[vO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[IO]),_:1}),l(),EO]),t("td",wO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HO,t("td",zO,[t("a",OO,[l("特殊二叉树的高度"),e(n)])]),qO,t("td",jO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[NO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[LO]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[CO]),_:1}),l(),KO]),t("td",PO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[BO,t("td",VO,[t("a",TO,[l("树中可以形成回文的路径数"),e(n)])]),UO,t("td",RO,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[WO]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[GO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[YO]),_:1}),l(),QO]),t("td",SO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DO,t("td",ZO,[t("a",AO,[l("计算足够大的节点数"),e(n)])]),FO,t("td",JO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[XO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$O]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[tq]),_:1}),l(),eq]),t("td",lq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oq,t("td",sq,[t("a",nq,[l("边权重均等查询"),e(n)])]),dq,t("td",_q,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cq]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[rq]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[aq]),_:1}),l(),iq]),t("td",hq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fq,t("td",uq,[t("a",gq,[l("统计树中的合法路径数目"),e(n)])]),mq,t("td",yq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xq]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bq]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[pq]),_:1}),l(),kq]),t("td",Mq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vq,t("td",Iq,[t("a",Eq,[l("可以被 K 整除连通块的最大数目"),e(n)])]),wq,t("td",Hq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[zq]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Oq]),_:1})]),t("td",qq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jq,t("td",Nq,[t("a",Lq,[l("收集所有金币可获得的最大积分"),e(n)])]),Cq,t("td",Kq,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Pq]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Bq]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vq]),_:1}),l(),Tq]),t("td",Uq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rq,t("td",Wq,[t("a",Gq,[l("在树上执行操作以后得到的最大分数"),e(n)])]),Yq,t("td",Qq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Sq]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Dq]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Zq]),_:1})]),t("td",Aq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fq,t("td",Jq,[t("a",Xq,[l("树中每个节点放置的金币数目"),e(n)])]),$q,t("td",tj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ej]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[lj]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[oj]),_:1}),l(),sj]),t("td",nj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dj,t("td",_j,[t("a",cj,[l("相同颜色的最大子树"),e(n)])]),rj,t("td",aj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ij]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hj]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[fj]),_:1}),l(),uj]),t("td",gj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mj,t("td",yj,[t("a",xj,[l("在带权树网络中统计可连接服务器对数目"),e(n)])]),bj,t("td",pj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Mj]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[vj]),_:1})]),t("td",Ij,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ej,t("td",wj,[t("a",Hj,[l("最大节点价值之和"),e(n)])]),zj,t("td",Oj,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[qj]),_:1}),l(),e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[jj]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Nj]),_:1}),l(),Lj]),t("td",Cj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kj,t("td",Pj,[t("a",Bj,[l("找到具有最小和的树的层数"),e(n)])]),Vj,t("td",Tj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Uj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Rj]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Wj]),_:1}),l(),Gj]),t("td",Yj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qj,t("td",Sj,[t("a",Dj,[l("合并两棵树后的最小直径"),e(n)])]),Zj,t("td",Aj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Fj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jj]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Xj]),_:1}),l(),$j]),t("td",tN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eN,t("td",lN,[t("a",oN,[l("标记所有节点需要的时间"),e(n)])]),sN,t("td",nN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[dN]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_N]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[cN]),_:1}),l(),rN]),t("td",aN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iN,t("td",hN,[t("a",fN,[l("统计好节点的数目"),e(n)])]),uN,t("td",gN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[mN]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yN]),_:1})]),t("td",xN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bN,t("td",pN,[t("a",kN,[l("查找树中最后标记的节点"),e(n)])]),MN,t("td",vN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[IN]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[EN]),_:1})]),t("td",wN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HN,t("td",zN,[t("a",ON,[l("第 K 大的完美二叉子树的大小"),e(n)])]),t("td",qN,[e(s,{to:"/problem/3319.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[NN]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[LN]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[CN]),_:1}),l(),KN]),t("td",PN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[BN,t("td",VN,[t("a",TN,[l("二叉树任务调度"),e(n)])]),UN,t("td",RN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[WN]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[GN]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[YN]),_:1}),l(),QN]),t("td",SN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DN,t("td",ZN,[t("a",AN,[l("导航装置"),e(n)])]),FN,t("td",JN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[XN]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$N]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[tL]),_:1})]),t("td",eL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lL,t("td",oL,[t("a",sL,[l("二叉树染色"),e(n)])]),nL,t("td",dL,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_L]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[cL]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[rL]),_:1})]),t("td",aL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iL,t("td",hL,[t("a",fL,[l("开幕式焰火"),e(n)])]),uL,t("td",gL,[e(s,{to:"/tag/tree.html"},{default:o(()=>[mL]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yL]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xL]),_:1}),l(),bL]),t("td",pL,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[kL,t("td",ML,[t("a",vL,[l("二叉搜索树染色"),e(n)])]),IL,t("td",EL,[e(s,{to:"/tag/tree.html"},{default:o(()=>[wL]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[HL]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[zL]),_:1}),l(),OL]),t("td",qL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jL,t("td",NL,[t("a",LL,[l("力扣泡泡龙"),e(n)])]),CL,t("td",KL,[e(s,{to:"/tag/tree.html"},{default:o(()=>[PL]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[BL]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[VL]),_:1})]),t("td",TL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[UL,t("td",RL,[t("a",WL,[l("二叉树灯饰"),e(n)])]),GL,t("td",YL,[e(s,{to:"/tag/tree.html"},{default:o(()=>[QL]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[SL]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[DL]),_:1}),l(),ZL]),t("td",AL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FL,t("td",JL,[t("a",XL,[l("装饰树"),e(n)])]),$L,t("td",tC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[eC]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[lC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[oC]),_:1}),l(),sC]),t("td",nC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dC,t("td",_C,[t("a",cC,[l("重建二叉树"),e(n)])]),t("td",rC,[e(s,{to:"/problem/jz_offer_07_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",aC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[iC]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[hC]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[fC]),_:1}),l(),uC]),t("td",gC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mC,t("td",yC,[t("a",xC,[l("树的子结构"),e(n)])]),t("td",bC,[e(s,{to:"/problem/jz_offer_26_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",pC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kC]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[MC]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[vC]),_:1})]),t("td",IC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EC,t("td",wC,[t("a",HC,[l("二叉树的镜像"),e(n)])]),t("td",zC,[e(s,{to:"/problem/jz_offer_27_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",OC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qC]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[NC]),_:1}),l(),LC]),t("td",CC,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[KC,t("td",PC,[t("a",BC,[l("对称的二叉树"),e(n)])]),t("td",VC,[e(s,{to:"/problem/jz_offer_28_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",TC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[UC]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[RC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[WC]),_:1}),l(),GC]),t("td",YC,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[QC,t("td",SC,[t("a",DC,[l("从上到下打印二叉树"),e(n)])]),t("td",ZC,[e(s,{to:"/problem/jz_offer_32_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",AC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[FC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[JC]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[XC]),_:1})]),t("td",$C,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tK,t("td",eK,[t("a",lK,[l("从上到下打印二叉树 II"),e(n)])]),t("td",oK,[e(s,{to:"/problem/jz_offer_32_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",sK,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nK]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dK]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[_K]),_:1})]),t("td",cK,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rK,t("td",aK,[t("a",iK,[l("从上到下打印二叉树 III"),e(n)])]),t("td",hK,[e(s,{to:"/problem/jz_offer_32_3.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fK,[e(s,{to:"/tag/tree.html"},{default:o(()=>[uK]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gK]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[mK]),_:1})]),t("td",yK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xK,t("td",bK,[t("a",pK,[l("二叉搜索树的后序遍历序列"),e(n)])]),t("td",kK,[e(s,{to:"/problem/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",MK,[e(s,{to:"/tag/stack.html"},{default:o(()=>[vK]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[IK]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[EK]),_:1}),l(),wK]),t("td",HK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zK,t("td",OK,[t("a",qK,[l("二叉树中和为某一值的路径"),e(n)])]),t("td",jK,[e(s,{to:"/problem/jz_offer_34_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",NK,[e(s,{to:"/tag/tree.html"},{default:o(()=>[LK]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[CK]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[KK]),_:1}),l(),PK]),t("td",BK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VK,t("td",TK,[t("a",UK,[l("二叉搜索树与双向链表"),e(n)])]),t("td",RK,[e(s,{to:"/problem/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",WK,[e(s,{to:"/tag/stack.html"},{default:o(()=>[GK]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[YK]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[QK]),_:1}),l(),SK]),t("td",DK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZK,t("td",AK,[t("a",FK,[l("序列化二叉树"),e(n)])]),t("td",JK,[e(s,{to:"/problem/jz_offer_37_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",XK,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$K]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[tP]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[eP]),_:1}),l(),lP]),t("td",oP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sP,t("td",nP,[t("a",dP,[l("二叉搜索树的第k大节点"),e(n)])]),t("td",_P,[e(s,{to:"/problem/jz_offer_54_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cP,[e(s,{to:"/tag/tree.html"},{default:o(()=>[rP]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[aP]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[iP]),_:1}),l(),hP]),t("td",fP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[uP,t("td",gP,[t("a",mP,[l("二叉树的深度"),e(n)])]),t("td",yP,[e(s,{to:"/problem/jz_offer_55_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xP,[e(s,{to:"/tag/tree.html"},{default:o(()=>[bP]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pP]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[kP]),_:1}),l(),MP]),t("td",vP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[IP,t("td",EP,[t("a",wP,[l("平衡二叉树"),e(n)])]),HP,t("td",zP,[e(s,{to:"/tag/tree.html"},{default:o(()=>[OP]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qP]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[jP]),_:1})]),t("td",NP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[LP,t("td",CP,[t("a",KP,[l("二叉搜索树的最近公共祖先"),e(n)])]),PP,t("td",BP,[e(s,{to:"/tag/tree.html"},{default:o(()=>[VP]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[TP]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[UP]),_:1}),l(),RP]),t("td",WP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[GP,t("td",YP,[t("a",QP,[l("二叉树的最近公共祖先"),e(n)])]),SP,t("td",DP,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ZP]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[AP]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[FP]),_:1})]),t("td",JP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[XP,t("td",$P,[t("a",tB,[l("往完全二叉树添加节点"),e(n)])]),eB,t("td",lB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[oB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[sB]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[nB]),_:1}),l(),dB]),t("td",_B,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cB,t("td",rB,[t("a",aB,[l("二叉树每层的最大值"),e(n)])]),iB,t("td",hB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fB]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[uB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gB]),_:1}),l(),mB]),t("td",yB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xB,t("td",bB,[t("a",pB,[l("二叉树最底层最左边的值"),e(n)])]),kB,t("td",MB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vB]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[IB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[EB]),_:1}),l(),wB]),t("td",HB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zB,t("td",OB,[t("a",qB,[l("二叉树的右侧视图"),e(n)])]),jB,t("td",NB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[LB]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[CB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[KB]),_:1}),l(),PB]),t("td",BB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VB,t("td",TB,[t("a",UB,[l("二叉树剪枝"),e(n)])]),RB,t("td",WB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[GB]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[YB]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[QB]),_:1})]),t("td",SB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DB,t("td",ZB,[t("a",AB,[l("序列化与反序列化二叉树"),e(n)])]),FB,t("td",JB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[XB]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$B]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[tV]),_:1}),l(),eV]),t("td",lV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oV,t("td",sV,[t("a",nV,[l("从根节点到叶节点的路径数字之和"),e(n)])]),dV,t("td",_V,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rV]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[aV]),_:1})]),t("td",iV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hV,t("td",fV,[t("a",uV,[l("向下的路径节点之和"),e(n)])]),gV,t("td",mV,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xV]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[bV]),_:1})]),t("td",pV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kV,t("td",MV,[t("a",vV,[l("节点之和最大的路径"),e(n)])]),IV,t("td",EV,[e(s,{to:"/tag/tree.html"},{default:o(()=>[wV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[HV]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[zV]),_:1}),l(),OV]),t("td",qV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jV,t("td",NV,[t("a",LV,[l("展平二叉搜索树"),e(n)])]),CV,t("td",KV,[e(s,{to:"/tag/stack.html"},{default:o(()=>[PV]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[BV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[VV]),_:1}),l(),TV]),t("td",UV,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[RV,t("td",WV,[t("a",GV,[l("二叉搜索树中的中序后继"),e(n)])]),YV,t("td",QV,[e(s,{to:"/tag/tree.html"},{default:o(()=>[SV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[DV]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ZV]),_:1}),l(),AV]),t("td",FV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JV,t("td",XV,[t("a",$V,[l("所有大于等于节点的值之和"),e(n)])]),tT,t("td",eT,[e(s,{to:"/tag/tree.html"},{default:o(()=>[lT]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[oT]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[sT]),_:1}),l(),nT]),t("td",dT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_T,t("td",cT,[t("a",rT,[l("二叉搜索树迭代器"),e(n)])]),aT,t("td",iT,[e(s,{to:"/tag/stack.html"},{default:o(()=>[hT]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[fT]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[uT]),_:1}),l(),gT]),t("td",mT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yT,t("td",xT,[t("a",bT,[l("数据流的第 K 大数值"),e(n)])]),pT,t("td",kT,[e(s,{to:"/tag/tree.html"},{default:o(()=>[MT]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[vT]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[IT]),_:1}),l(),ET]),t("td",wT,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[HT,t("td",zT,[t("a",OT,[l("最小高度树"),e(n)])]),qT,t("td",jT,[e(s,{to:"/tag/tree.html"},{default:o(()=>[NT]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[LT]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[CT]),_:1}),l(),KT]),t("td",PT,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[BT,t("td",VT,[t("a",TT,[l("特定深度节点链表"),e(n)])]),UT,t("td",RT,[e(s,{to:"/tag/tree.html"},{default:o(()=>[WT]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[GT]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[YT]),_:1}),l(),QT]),t("td",ST,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DT,t("td",ZT,[t("a",AT,[l("检查平衡性"),e(n)])]),FT,t("td",JT,[e(s,{to:"/tag/tree.html"},{default:o(()=>[XT]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$T]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[tU]),_:1})]),t("td",eU,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[lU,t("td",oU,[t("a",sU,[l("合法二叉搜索树"),e(n)])]),nU,t("td",dU,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_U]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cU]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[rU]),_:1}),l(),aU]),t("td",iU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hU,t("td",fU,[t("a",uU,[l("后继者"),e(n)])]),gU,t("td",mU,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yU]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xU]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[bU]),_:1}),l(),pU]),t("td",kU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MU,t("td",vU,[t("a",IU,[l("首个共同祖先"),e(n)])]),EU,t("td",wU,[e(s,{to:"/tag/tree.html"},{default:o(()=>[HU]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zU]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[OU]),_:1})]),t("td",qU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jU,t("td",NU,[t("a",LU,[l("二叉搜索树序列"),e(n)])]),CU,t("td",KU,[e(s,{to:"/tag/tree.html"},{default:o(()=>[PU]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[BU]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[VU]),_:1}),l(),TU]),t("td",UU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RU,t("td",WU,[t("a",GU,[l("检查子树"),e(n)])]),YU,t("td",QU,[e(s,{to:"/tag/tree.html"},{default:o(()=>[SU]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[DU]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ZU]),_:1}),l(),AU]),t("td",FU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JU,t("td",XU,[t("a",$U,[l("求和路径"),e(n)])]),tR,t("td",eR,[e(s,{to:"/tag/tree.html"},{default:o(()=>[lR]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[oR]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[sR]),_:1})]),t("td",nR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dR,t("td",_R,[t("a",cR,[l("BiNode"),e(n)])]),rR,t("td",aR,[e(s,{to:"/tag/stack.html"},{default:o(()=>[iR]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[hR]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fR]),_:1}),l(),uR]),t("td",gR,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const pR=c(h,[["render",mR],["__file","tree.html.vue"]]);export{pR as default};
