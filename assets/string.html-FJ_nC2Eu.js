import{_ as c,r as a,o as _,c as i,f as r,a as t,d as o,w as l,b as e,e as h}from"./app-JnDxddK3.js";const g="/leetcode-js/assets/2-9-1-4ntTgB4b.png",f={},u=h('<h1 id="_2-9-字符串" tabindex="-1"><a class="header-anchor" href="#_2-9-字符串" aria-hidden="true">#</a> 2.9 字符串</h1><h2 id="字符串的定义" tabindex="-1"><a class="header-anchor" href="#字符串的定义" aria-hidden="true">#</a> 字符串的定义</h2><div class="hint-container info"><p class="hint-container-title">定义</p><p><strong>字符串（String）</strong> ：是由零个或多个字符组成的有限序列。一般记为 <code>s = a1a2……an</code>（ <code>n</code> 大于 <code>0</code> 小于正无穷）。</p></div><p>字符串中任意个连续的字符组成的子序列称为该字符串的 <strong>子串（Substring）</strong>；</p><p>起始于位置为 <code>0</code>、长度为 <code>k</code> 的子串称为 <strong>前缀（Prefix）</strong>；</p><p>终止于位置 <code>n - 1</code>、长度为 <code>k</code> 的子串称为 <strong>后缀（Suffix）</strong>。</p><h2 id="字符编码" tabindex="-1"><a class="header-anchor" href="#字符编码" aria-hidden="true">#</a> 字符编码</h2><p>计算机中最常用的字符编码是 <code>ASCII</code> 编码。最早的时候，人们制定了一个包含 <code>127</code> 个字符的编码表 <code>ASCII</code> 到计算机系统中。<code>ASCII</code> 编码表中的字符包含了大小写的英文字母、数字和一些符号。每个字符对应一个编码，比如大写字母 <code>A</code> 的编码是 <code>65</code>，小写字母 <code>a</code> 的编码是 <code>97</code>。</p><p><code>ASCII</code> 编码可以解决以英语为主的语言，可是无法满足中文编码。为了解决中文编码，我国制定了 <code>GB2312</code>、<code>GBK</code>、<code>GB18030</code> 等中文编码标准，将中文编译进去。但是世界上有上百种语言和文字，各国有各国的标准，就会不可避免的产生冲突，于是就有了 <code>Unicode</code> 编码。<code>Unicode</code> 编码最常用的就是 <code>UTF-8</code> 编码，<code>UTF-8</code> 编码把一个 <code>Unicode</code> 字符根据不同的数字大小编码成 <code>1</code> ~ <code>6</code> 个字节，常用的英文字母被编码成 <code>1</code> 个字节，汉字通常是 <code>3</code> 个字节。</p><h2 id="字符串的存储结构" tabindex="-1"><a class="header-anchor" href="#字符串的存储结构" aria-hidden="true">#</a> 字符串的存储结构</h2><p>字符串的两种最基本的存储结构是：顺序存储结构 和 链接存储结构。</p><h3 id="顺序存储" tabindex="-1"><a class="header-anchor" href="#顺序存储" aria-hidden="true">#</a> 顺序存储</h3><p>与线性表的顺序存储结构相似，字符串的顺序存储结构也是使用一组地址连续的存储单元依次存放串中的各个字符。按照预定义的大小，为每个定义的字符串变量分配一个固定长度的存储区域。一般是用定长数组来定义。</p><p>字符串的顺序存储中每一个字符元素都有自己的下标索引，下标索引从 <code>0</code> 开始，到 <code>length - 1</code> 结束。字符串中每一个下标索引，都有一个与之对应的字符元素。</p><p>跟数组类似，字符串也支持随机访问。即字符串可以根据下标，直接定位到某一个字符元素存放的位置。</p><h3 id="链式存储" tabindex="-1"><a class="header-anchor" href="#链式存储" aria-hidden="true">#</a> 链式存储</h3><p>字符串的存储也可以采用链式存储结构，即采用一个线性链表来存储一个字符串。字符串的链节点包含一个用于存放字符的 <code>data</code> 变量，和指向下一个链节点的指针变量 <code>next</code>。这样，一个字符串就可以用一个线性链表来表示。</p><p>在字符串的链式存储结构中，每个链节点可以仅存放一个字符，也可以存放多个字符。通常情况下，链节点的字符长度为 <code>1</code> 或者 <code>4</code>，这是为了避免浪费空间。当链节点的字符长度为 <code>4</code> 时，由于字符串的长度不一定是 <code>4</code> 的倍数，因此字符串所占用的链节点中最后那个链节点的 <code>data</code> 变量可能没有占满，我们可以用 <code>#</code> 或其他不属于字符集的特殊字符将其补全。</p><h2 id="字符串匹配" tabindex="-1"><a class="header-anchor" href="#字符串匹配" aria-hidden="true">#</a> 字符串匹配</h2><div class="hint-container info"><p class="hint-container-title">定义</p><p><strong>字符串匹配（String Matching）</strong> ：又称模式匹配（pattern matching），可以概括为「给定字符串 <code>S</code> 和 <code>T</code>，在主串 <code>S</code> 中寻找子串 <code>T</code>」。子串 <code>T</code> 称为模式串 (pattern)。</p></div><p>其中，在主串 <code>S</code> 中找出 <strong>一个</strong> 模式串 <code>T</code>的所有位置，叫做<strong>单模式匹配（Single Pattern Matching）</strong>；</p><p>在主串 <code>S</code> 中找出 <strong>多个</strong> 模式串 <code>T1,T2,……,Tn</code>的所有位置，叫做<strong>多模式匹配（Multi Pattern Matching）</strong>。</p><p>两个字符串相等的充要条件是：长度相等，并且各个对应位置上的字符都相等。</p><h3 id="bf-算法" tabindex="-1"><a class="header-anchor" href="#bf-算法" aria-hidden="true">#</a> BF 算法</h3><p>BF 算法中的 BF 是 Brute Force 的缩写，中文叫作暴力匹配算法，也叫朴素匹配算法。从名字可以看出，这种算法的字符串匹配方式很“暴力”，也就比较简单、好懂，但相应的性能也不高。</p><p>BF 算法的思想可以用一句话来概括：在主串中检查起始位置分别是 <code>0、1、2…n-m</code> 且长度为 <code>m</code> 的 <code>n-m+1</code> 个子串，看有没有跟模式串匹配的。</p><p>这种算法的最坏情况时间复杂度是 <code>O(n*m)</code>。</p><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="实现代码" tabindex="-1"><a class="header-anchor" href="#实现代码" aria-hidden="true">#</a> 实现代码</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,30),m=t("h2",{id:"相关题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),e(" 相关题目")],-1),p=t("h4",{id:"字符串基础题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字符串基础题目","aria-hidden":"true"},"#"),e(" 字符串基础题目")],-1),x=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),y=t("td",{style:{"text-align":"center"}},"125",-1),b=t("td",{style:{"text-align":"left"}},"验证回文串",-1),k={style:{"text-align":"center"}},w={style:{"text-align":"left"}},v=t("code",null,"双指针",-1),T=t("code",null,"字符串",-1),E={style:{"text-align":"left"}},I={style:{"text-align":"center"}},S={href:"https://leetcode.cn/problems/valid-palindrome",target:"_blank",rel:"noopener noreferrer"},M={href:"https://leetcode.com/problems/valid-palindrome",target:"_blank",rel:"noopener noreferrer"},B=t("td",{style:{"text-align":"center"}},"5",-1),A=t("td",{style:{"text-align":"left"}},"最长回文子串",-1),N={style:{"text-align":"center"}},C={style:{"text-align":"left"}},F=t("code",null,"双指针",-1),H=t("code",null,"字符串",-1),U=t("code",null,"动态规划",-1),L={style:{"text-align":"left"}},P={style:{"text-align":"center"}},R={href:"https://leetcode.cn/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},V={href:"https://leetcode.com/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},j=t("td",{style:{"text-align":"center"}},"3",-1),D=t("td",{style:{"text-align":"left"}},"无重复字符的最长子串",-1),O={style:{"text-align":"center"}},G={style:{"text-align":"left"}},q=t("code",null,"哈希表",-1),K=t("code",null,"字符串",-1),z=t("code",null,"滑动窗口",-1),J={style:{"text-align":"left"}},Q={style:{"text-align":"center"}},W={href:"https://leetcode.cn/problems/longest-substring-without-repeating-characters",target:"_blank",rel:"noopener noreferrer"},X={href:"https://leetcode.com/problems/longest-substring-without-repeating-characters",target:"_blank",rel:"noopener noreferrer"},Y=t("td",{style:{"text-align":"center"}},"344",-1),Z=t("td",{style:{"text-align":"left"}},"反转字符串",-1),$={style:{"text-align":"center"}},tt={style:{"text-align":"left"}},et=t("code",null,"双指针",-1),ot=t("code",null,"字符串",-1),lt={style:{"text-align":"left"}},nt={style:{"text-align":"center"}},st={href:"https://leetcode.cn/problems/reverse-string",target:"_blank",rel:"noopener noreferrer"},dt={href:"https://leetcode.com/problems/reverse-string",target:"_blank",rel:"noopener noreferrer"},rt=t("td",{style:{"text-align":"center"}},"557",-1),at=t("td",{style:{"text-align":"left"}},"反转字符串中的单词 III",-1),ct={style:{"text-align":"center"}},_t={style:{"text-align":"left"}},it=t("code",null,"双指针",-1),ht=t("code",null,"字符串",-1),gt={style:{"text-align":"left"}},ft={style:{"text-align":"center"}},ut={href:"https://leetcode.cn/problems/reverse-words-in-a-string-iii",target:"_blank",rel:"noopener noreferrer"},mt={href:"https://leetcode.com/problems/reverse-words-in-a-string-iii",target:"_blank",rel:"noopener noreferrer"},pt=t("td",{style:{"text-align":"center"}},"49",-1),xt=t("td",{style:{"text-align":"left"}},"字母异位词分组",-1),yt={style:{"text-align":"center"}},bt={style:{"text-align":"left"}},kt=t("code",null,"数组",-1),wt=t("code",null,"哈希表",-1),vt=t("code",null,"字符串",-1),Tt=t("code",null,"1+",-1),Et={style:{"text-align":"left"}},It={style:{"text-align":"center"}},St={href:"https://leetcode.cn/problems/group-anagrams",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://leetcode.com/problems/group-anagrams",target:"_blank",rel:"noopener noreferrer"},Bt=t("td",{style:{"text-align":"center"}},"415",-1),At=t("td",{style:{"text-align":"left"}},"字符串相加",-1),Nt={style:{"text-align":"center"}},Ct={style:{"text-align":"left"}},Ft=t("code",null,"数学",-1),Ht=t("code",null,"字符串",-1),Ut=t("code",null,"模拟",-1),Lt={style:{"text-align":"left"}},Pt={style:{"text-align":"center"}},Rt={href:"https://leetcode.cn/problems/add-strings",target:"_blank",rel:"noopener noreferrer"},Vt={href:"https://leetcode.com/problems/add-strings",target:"_blank",rel:"noopener noreferrer"},jt=t("td",{style:{"text-align":"center"}},"151",-1),Dt=t("td",{style:{"text-align":"left"}},"反转字符串中的单词",-1),Ot={style:{"text-align":"center"}},Gt={style:{"text-align":"left"}},qt=t("code",null,"双指针",-1),Kt=t("code",null,"字符串",-1),zt={style:{"text-align":"left"}},Jt={style:{"text-align":"center"}},Qt={href:"https://leetcode.cn/problems/reverse-words-in-a-string",target:"_blank",rel:"noopener noreferrer"},Wt={href:"https://leetcode.com/problems/reverse-words-in-a-string",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},"43",-1),Yt=t("td",{style:{"text-align":"left"}},"字符串相乘",-1),Zt={style:{"text-align":"center"}},$t={style:{"text-align":"left"}},te=t("code",null,"数学",-1),ee=t("code",null,"字符串",-1),oe=t("code",null,"模拟",-1),le={style:{"text-align":"left"}},ne={style:{"text-align":"center"}},se={href:"https://leetcode.cn/problems/multiply-strings",target:"_blank",rel:"noopener noreferrer"},de={href:"https://leetcode.com/problems/multiply-strings",target:"_blank",rel:"noopener noreferrer"},re=t("td",{style:{"text-align":"center"}},"14",-1),ae=t("td",{style:{"text-align":"left"}},"最长公共前缀",-1),ce={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ie=t("code",null,"字典树",-1),he=t("code",null,"字符串",-1),ge={style:{"text-align":"left"}},fe={style:{"text-align":"center"}},ue={href:"https://leetcode.cn/problems/longest-common-prefix",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/longest-common-prefix",target:"_blank",rel:"noopener noreferrer"},pe=t("h4",{id:"单模式串匹配",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#单模式串匹配","aria-hidden":"true"},"#"),e(" 单模式串匹配")],-1),xe=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),ye=t("td",{style:{"text-align":"center"}},"28",-1),be=t("td",{style:{"text-align":"left"}},"找出字符串中第一个匹配项的下标",-1),ke={style:{"text-align":"center"}},we={style:{"text-align":"left"}},ve=t("code",null,"双指针",-1),Te=t("code",null,"字符串",-1),Ee=t("code",null,"字符串匹配",-1),Ie={style:{"text-align":"left"}},Se={style:{"text-align":"center"}},Me={href:"https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Ae=t("td",{style:{"text-align":"center"}},"459",-1),Ne=t("td",{style:{"text-align":"left"}},"重复的子字符串",-1),Ce={style:{"text-align":"center"}},Fe={style:{"text-align":"left"}},He=t("code",null,"字符串",-1),Ue=t("code",null,"字符串匹配",-1),Le={style:{"text-align":"left"}},Pe={style:{"text-align":"center"}},Re={href:"https://leetcode.cn/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://leetcode.com/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},je=t("td",{style:{"text-align":"center"}},"686",-1),De=t("td",{style:{"text-align":"left"}},"重复叠加字符串匹配",-1),Oe=t("td",{style:{"text-align":"center"}},null,-1),Ge={style:{"text-align":"left"}},qe=t("code",null,"字符串",-1),Ke=t("code",null,"字符串匹配",-1),ze={style:{"text-align":"left"}},Je={style:{"text-align":"center"}},Qe={href:"https://leetcode.cn/problems/repeated-string-match",target:"_blank",rel:"noopener noreferrer"},We={href:"https://leetcode.com/problems/repeated-string-match",target:"_blank",rel:"noopener noreferrer"},Xe=t("td",{style:{"text-align":"center"}},"1668",-1),Ye=t("td",{style:{"text-align":"left"}},"最大重复子字符串",-1),Ze=t("td",{style:{"text-align":"center"}},null,-1),$e={style:{"text-align":"left"}},to=t("code",null,"字符串",-1),eo=t("code",null,"动态规划",-1),oo=t("code",null,"字符串匹配",-1),lo={style:{"text-align":"left"}},no={style:{"text-align":"center"}},so={href:"https://leetcode.cn/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},ro={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},ao=t("td",{style:{"text-align":"center"}},"796",-1),co=t("td",{style:{"text-align":"left"}},"旋转字符串",-1),_o={style:{"text-align":"center"}},io={style:{"text-align":"left"}},ho=t("code",null,"字符串",-1),go=t("code",null,"字符串匹配",-1),fo={style:{"text-align":"left"}},uo={style:{"text-align":"center"}},mo={href:"https://leetcode.cn/problems/rotate-string",target:"_blank",rel:"noopener noreferrer"},po={href:"https://leetcode.com/problems/rotate-string",target:"_blank",rel:"noopener noreferrer"},xo=t("td",{style:{"text-align":"center"}},"1408",-1),yo=t("td",{style:{"text-align":"left"}},"数组中的字符串匹配",-1),bo=t("td",{style:{"text-align":"center"}},null,-1),ko={style:{"text-align":"left"}},wo=t("code",null,"数组",-1),vo=t("code",null,"字符串",-1),To=t("code",null,"字符串匹配",-1),Eo={style:{"text-align":"left"}},Io={style:{"text-align":"center"}},So={href:"https://leetcode.cn/problems/string-matching-in-an-array",target:"_blank",rel:"noopener noreferrer"},Mo={href:"https://leetcode.com/problems/string-matching-in-an-array",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},"2156",-1),Ao=t("td",{style:{"text-align":"left"}},"查找给定哈希值的子串",-1),No=t("td",{style:{"text-align":"center"}},null,-1),Co={style:{"text-align":"left"}},Fo=t("code",null,"字符串",-1),Ho=t("code",null,"滑动窗口",-1),Uo=t("code",null,"哈希函数",-1),Lo=t("code",null,"1+",-1),Po={style:{"text-align":"left"}},Ro={style:{"text-align":"center"}},Vo={href:"https://leetcode.cn/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},jo={href:"https://leetcode.com/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},Do=t("h4",{id:"字典树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字典树","aria-hidden":"true"},"#"),e(" 字典树")],-1),Oo=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Go=t("td",{style:{"text-align":"center"}},"208",-1),qo=t("td",{style:{"text-align":"left"}},"实现 Trie (前缀树)",-1),Ko={style:{"text-align":"center"}},zo={style:{"text-align":"left"}},Jo=t("code",null,"设计",-1),Qo=t("code",null,"字典树",-1),Wo=t("code",null,"哈希表",-1),Xo=t("code",null,"1+",-1),Yo={style:{"text-align":"left"}},Zo={style:{"text-align":"center"}},$o={href:"https://leetcode.cn/problems/implement-trie-prefix-tree",target:"_blank",rel:"noopener noreferrer"},tl={href:"https://leetcode.com/problems/implement-trie-prefix-tree",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},"677",-1),ol=t("td",{style:{"text-align":"left"}},"键值映射",-1),ll=t("td",{style:{"text-align":"center"}},null,-1),nl={style:{"text-align":"left"}},sl=t("code",null,"设计",-1),dl=t("code",null,"字典树",-1),rl=t("code",null,"哈希表",-1),al=t("code",null,"1+",-1),cl={style:{"text-align":"left"}},_l={style:{"text-align":"center"}},il={href:"https://leetcode.cn/problems/map-sum-pairs",target:"_blank",rel:"noopener noreferrer"},hl={href:"https://leetcode.com/problems/map-sum-pairs",target:"_blank",rel:"noopener noreferrer"},gl=t("td",{style:{"text-align":"center"}},"648",-1),fl=t("td",{style:{"text-align":"left"}},"单词替换",-1),ul=t("td",{style:{"text-align":"center"}},null,-1),ml={style:{"text-align":"left"}},pl=t("code",null,"字典树",-1),xl=t("code",null,"数组",-1),yl=t("code",null,"哈希表",-1),bl=t("code",null,"1+",-1),kl={style:{"text-align":"left"}},wl={style:{"text-align":"center"}},vl={href:"https://leetcode.cn/problems/replace-words",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://leetcode.com/problems/replace-words",target:"_blank",rel:"noopener noreferrer"},El=t("td",{style:{"text-align":"center"}},"642",-1),Il=t("td",{style:{"text-align":"left"}},"设计搜索自动补全系统 🔒",-1),Sl=t("td",{style:{"text-align":"center"}},null,-1),Ml={style:{"text-align":"left"}},Bl=t("code",null,"深度优先搜索",-1),Al=t("code",null,"设计",-1),Nl=t("code",null,"字典树",-1),Cl=t("code",null,"4+",-1),Fl={style:{"text-align":"left"}},Hl={style:{"text-align":"center"}},Ul={href:"https://leetcode.cn/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},Ll={href:"https://leetcode.com/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},Pl=t("td",{style:{"text-align":"center"}},"211",-1),Rl=t("td",{style:{"text-align":"left"}},"添加与搜索单词 - 数据结构设计",-1),Vl={style:{"text-align":"center"}},jl={style:{"text-align":"left"}},Dl=t("code",null,"深度优先搜索",-1),Ol=t("code",null,"设计",-1),Gl=t("code",null,"字典树",-1),ql=t("code",null,"1+",-1),Kl={style:{"text-align":"left"}},zl={style:{"text-align":"center"}},Jl={href:"https://leetcode.cn/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},Ql={href:"https://leetcode.com/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},"421",-1),Xl=t("td",{style:{"text-align":"left"}},"数组中两个数的最大异或值",-1),Yl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},$l=t("code",null,"位运算",-1),tn=t("code",null,"字典树",-1),en=t("code",null,"数组",-1),on=t("code",null,"1+",-1),ln={style:{"text-align":"left"}},nn={style:{"text-align":"center"}},sn={href:"https://leetcode.cn/problems/maximum-xor-of-two-numbers-in-an-array",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array",target:"_blank",rel:"noopener noreferrer"},rn=t("td",{style:{"text-align":"center"}},"212",-1),an=t("td",{style:{"text-align":"left"}},"单词搜索 II",-1),cn={style:{"text-align":"center"}},_n={style:{"text-align":"left"}},hn=t("code",null,"字典树",-1),gn=t("code",null,"数组",-1),fn=t("code",null,"字符串",-1),un=t("code",null,"2+",-1),mn={style:{"text-align":"left"}},pn={style:{"text-align":"center"}},xn={href:"https://leetcode.cn/problems/word-search-ii",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://leetcode.com/problems/word-search-ii",target:"_blank",rel:"noopener noreferrer"},bn=t("td",{style:{"text-align":"center"}},"425",-1),kn=t("td",{style:{"text-align":"left"}},"单词方块 🔒",-1),wn=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},Tn=t("code",null,"字典树",-1),En=t("code",null,"数组",-1),In=t("code",null,"字符串",-1),Sn=t("code",null,"1+",-1),Mn={style:{"text-align":"left"}},Bn={style:{"text-align":"center"}},An={href:"https://leetcode.cn/problems/word-squares",target:"_blank",rel:"noopener noreferrer"},Nn={href:"https://leetcode.com/problems/word-squares",target:"_blank",rel:"noopener noreferrer"},Cn=t("td",{style:{"text-align":"center"}},"336",-1),Fn=t("td",{style:{"text-align":"left"}},"回文对",-1),Hn=t("td",{style:{"text-align":"center"}},null,-1),Un={style:{"text-align":"left"}},Ln=t("code",null,"字典树",-1),Pn=t("code",null,"数组",-1),Rn=t("code",null,"哈希表",-1),Vn=t("code",null,"1+",-1),jn={style:{"text-align":"left"}},Dn={style:{"text-align":"center"}},On={href:"https://leetcode.cn/problems/palindrome-pairs",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://leetcode.com/problems/palindrome-pairs",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},"1023",-1),Kn=t("td",{style:{"text-align":"left"}},"驼峰式匹配",-1),zn=t("td",{style:{"text-align":"center"}},null,-1),Jn={style:{"text-align":"left"}},Qn=t("code",null,"字典树",-1),Wn=t("code",null,"数组",-1),Xn=t("code",null,"双指针",-1),Yn=t("code",null,"2+",-1),Zn={style:{"text-align":"left"}},$n={style:{"text-align":"center"}},ts={href:"https://leetcode.cn/problems/camelcase-matching",target:"_blank",rel:"noopener noreferrer"},es={href:"https://leetcode.com/problems/camelcase-matching",target:"_blank",rel:"noopener noreferrer"},os=t("td",{style:{"text-align":"center"}},"676",-1),ls=t("td",{style:{"text-align":"left"}},"实现一个魔法字典",-1),ns=t("td",{style:{"text-align":"center"}},null,-1),ss={style:{"text-align":"left"}},ds=t("code",null,"深度优先搜索",-1),rs=t("code",null,"设计",-1),as=t("code",null,"字典树",-1),cs=t("code",null,"2+",-1),_s={style:{"text-align":"left"}},is={style:{"text-align":"center"}},hs={href:"https://leetcode.cn/problems/implement-magic-dictionary",target:"_blank",rel:"noopener noreferrer"},gs={href:"https://leetcode.com/problems/implement-magic-dictionary",target:"_blank",rel:"noopener noreferrer"},fs=t("td",{style:{"text-align":"center"}},"440",-1),us=t("td",{style:{"text-align":"left"}},"字典序的第K小数字",-1),ms={style:{"text-align":"center"}},ps={style:{"text-align":"left"}},xs=t("code",null,"字典树",-1),ys={style:{"text-align":"left"}},bs={style:{"text-align":"center"}},ks={href:"https://leetcode.cn/problems/k-th-smallest-in-lexicographical-order",target:"_blank",rel:"noopener noreferrer"},ws={href:"https://leetcode.com/problems/k-th-smallest-in-lexicographical-order",target:"_blank",rel:"noopener noreferrer"};function vs(Ts,Es){const n=a("RouterLink"),d=a("font"),s=a("ExternalLinkIcon");return _(),i("div",null,[u,r(" START TABLE "),r(" Please keep comment here to allow auto update "),r(" DON'T EDIT THIS SECTION, INSTEAD RE-RUN `npm run lc` TO UPDATE "),m,p,r(" prettier-ignore "),t("table",null,[x,t("tbody",null,[t("tr",null,[y,b,t("td",k,[o(n,{to:"/problem/0125.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",w,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[v]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[T]),_:1})]),t("td",E,[o(d,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",I,[t("a",S,[e("🀄️"),o(s)]),e(),t("a",M,[e("🔗"),o(s)])])]),t("tr",null,[B,A,t("td",N,[o(n,{to:"/problem/0005.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",C,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[F]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[H]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[U]),_:1})]),t("td",L,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",P,[t("a",R,[e("🀄️"),o(s)]),e(),t("a",V,[e("🔗"),o(s)])])]),t("tr",null,[j,D,t("td",O,[o(n,{to:"/problem/0003.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",G,[o(n,{to:"/tag/hash-table.html"},{default:l(()=>[q]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[K]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[z]),_:1})]),t("td",J,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Q,[t("a",W,[e("🀄️"),o(s)]),e(),t("a",X,[e("🔗"),o(s)])])]),t("tr",null,[Y,Z,t("td",$,[o(n,{to:"/problem/0344.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",tt,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[et]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[ot]),_:1})]),t("td",lt,[o(d,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",nt,[t("a",st,[e("🀄️"),o(s)]),e(),t("a",dt,[e("🔗"),o(s)])])]),t("tr",null,[rt,at,t("td",ct,[o(n,{to:"/problem/0557.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",_t,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[it]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[ht]),_:1})]),t("td",gt,[o(d,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",ft,[t("a",ut,[e("🀄️"),o(s)]),e(),t("a",mt,[e("🔗"),o(s)])])]),t("tr",null,[pt,xt,t("td",yt,[o(n,{to:"/problem/0049.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",bt,[o(n,{to:"/tag/array.html"},{default:l(()=>[kt]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[wt]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[vt]),_:1}),e(),Tt]),t("td",Et,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",It,[t("a",St,[e("🀄️"),o(s)]),e(),t("a",Mt,[e("🔗"),o(s)])])]),t("tr",null,[Bt,At,t("td",Nt,[o(n,{to:"/problem/0415.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Ct,[o(n,{to:"/tag/math.html"},{default:l(()=>[Ft]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Ht]),_:1}),e(),o(n,{to:"/tag/simulation.html"},{default:l(()=>[Ut]),_:1})]),t("td",Lt,[o(d,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",Pt,[t("a",Rt,[e("🀄️"),o(s)]),e(),t("a",Vt,[e("🔗"),o(s)])])]),t("tr",null,[jt,Dt,t("td",Ot,[o(n,{to:"/problem/0151.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Gt,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[qt]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Kt]),_:1})]),t("td",zt,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Jt,[t("a",Qt,[e("🀄️"),o(s)]),e(),t("a",Wt,[e("🔗"),o(s)])])]),t("tr",null,[Xt,Yt,t("td",Zt,[o(n,{to:"/problem/0043.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",$t,[o(n,{to:"/tag/math.html"},{default:l(()=>[te]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[ee]),_:1}),e(),o(n,{to:"/tag/simulation.html"},{default:l(()=>[oe]),_:1})]),t("td",le,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",ne,[t("a",se,[e("🀄️"),o(s)]),e(),t("a",de,[e("🔗"),o(s)])])]),t("tr",null,[re,ae,t("td",ce,[o(n,{to:"/problem/0014.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",_e,[o(n,{to:"/tag/trie.html"},{default:l(()=>[ie]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[he]),_:1})]),t("td",ge,[o(d,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",fe,[t("a",ue,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])])])]),pe,r(" prettier-ignore "),t("table",null,[xe,t("tbody",null,[t("tr",null,[ye,be,t("td",ke,[o(n,{to:"/problem/0028.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",we,[o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[ve]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[Te]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Ee]),_:1})]),t("td",Ie,[o(d,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",Se,[t("a",Me,[e("🀄️"),o(s)]),e(),t("a",Be,[e("🔗"),o(s)])])]),t("tr",null,[Ae,Ne,t("td",Ce,[o(n,{to:"/problem/0459.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",Fe,[o(n,{to:"/tag/string.html"},{default:l(()=>[He]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Ue]),_:1})]),t("td",Le,[o(d,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",Pe,[t("a",Re,[e("🀄️"),o(s)]),e(),t("a",Ve,[e("🔗"),o(s)])])]),t("tr",null,[je,De,Oe,t("td",Ge,[o(n,{to:"/tag/string.html"},{default:l(()=>[qe]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[Ke]),_:1})]),t("td",ze,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Je,[t("a",Qe,[e("🀄️"),o(s)]),e(),t("a",We,[e("🔗"),o(s)])])]),t("tr",null,[Xe,Ye,Ze,t("td",$e,[o(n,{to:"/tag/string.html"},{default:l(()=>[to]),_:1}),e(),o(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[eo]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[oo]),_:1})]),t("td",lo,[o(d,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",no,[t("a",so,[e("🀄️"),o(s)]),e(),t("a",ro,[e("🔗"),o(s)])])]),t("tr",null,[ao,co,t("td",_o,[o(n,{to:"/problem/0796.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",io,[o(n,{to:"/tag/string.html"},{default:l(()=>[ho]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[go]),_:1})]),t("td",fo,[o(d,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",uo,[t("a",mo,[e("🀄️"),o(s)]),e(),t("a",po,[e("🔗"),o(s)])])]),t("tr",null,[xo,yo,bo,t("td",ko,[o(n,{to:"/tag/array.html"},{default:l(()=>[wo]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[vo]),_:1}),e(),o(n,{to:"/tag/string-matching.html"},{default:l(()=>[To]),_:1})]),t("td",Eo,[o(d,{color:"#15bd66"},{default:l(()=>[e("Easy")]),_:1})]),t("td",Io,[t("a",So,[e("🀄️"),o(s)]),e(),t("a",Mo,[e("🔗"),o(s)])])]),t("tr",null,[Bo,Ao,No,t("td",Co,[o(n,{to:"/tag/string.html"},{default:l(()=>[Fo]),_:1}),e(),o(n,{to:"/tag/sliding-window.html"},{default:l(()=>[Ho]),_:1}),e(),o(n,{to:"/tag/hash-function.html"},{default:l(()=>[Uo]),_:1}),e(),Lo]),t("td",Po,[o(d,{color:"#ff334b"},{default:l(()=>[e("Hard")]),_:1})]),t("td",Ro,[t("a",Vo,[e("🀄️"),o(s)]),e(),t("a",jo,[e("🔗"),o(s)])])])])]),Do,r(" prettier-ignore "),t("table",null,[Oo,t("tbody",null,[t("tr",null,[Go,qo,t("td",Ko,[o(n,{to:"/problem/0208.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",zo,[o(n,{to:"/tag/design.html"},{default:l(()=>[Jo]),_:1}),e(),o(n,{to:"/tag/trie.html"},{default:l(()=>[Qo]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[Wo]),_:1}),e(),Xo]),t("td",Yo,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",Zo,[t("a",$o,[e("🀄️"),o(s)]),e(),t("a",tl,[e("🔗"),o(s)])])]),t("tr",null,[el,ol,ll,t("td",nl,[o(n,{to:"/tag/design.html"},{default:l(()=>[sl]),_:1}),e(),o(n,{to:"/tag/trie.html"},{default:l(()=>[dl]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[rl]),_:1}),e(),al]),t("td",cl,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",_l,[t("a",il,[e("🀄️"),o(s)]),e(),t("a",hl,[e("🔗"),o(s)])])]),t("tr",null,[gl,fl,ul,t("td",ml,[o(n,{to:"/tag/trie.html"},{default:l(()=>[pl]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[xl]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[yl]),_:1}),e(),bl]),t("td",kl,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",wl,[t("a",vl,[e("🀄️"),o(s)]),e(),t("a",Tl,[e("🔗"),o(s)])])]),t("tr",null,[El,Il,Sl,t("td",Ml,[o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[Bl]),_:1}),e(),o(n,{to:"/tag/design.html"},{default:l(()=>[Al]),_:1}),e(),o(n,{to:"/tag/trie.html"},{default:l(()=>[Nl]),_:1}),e(),Cl]),t("td",Fl,[o(d,{color:"#ff334b"},{default:l(()=>[e("Hard")]),_:1})]),t("td",Hl,[t("a",Ul,[e("🀄️"),o(s)]),e(),t("a",Ll,[e("🔗"),o(s)])])]),t("tr",null,[Pl,Rl,t("td",Vl,[o(n,{to:"/problem/0211.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",jl,[o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[Dl]),_:1}),e(),o(n,{to:"/tag/design.html"},{default:l(()=>[Ol]),_:1}),e(),o(n,{to:"/tag/trie.html"},{default:l(()=>[Gl]),_:1}),e(),ql]),t("td",Kl,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",zl,[t("a",Jl,[e("🀄️"),o(s)]),e(),t("a",Ql,[e("🔗"),o(s)])])]),t("tr",null,[Wl,Xl,Yl,t("td",Zl,[o(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[$l]),_:1}),e(),o(n,{to:"/tag/trie.html"},{default:l(()=>[tn]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[en]),_:1}),e(),on]),t("td",ln,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",nn,[t("a",sn,[e("🀄️"),o(s)]),e(),t("a",dn,[e("🔗"),o(s)])])]),t("tr",null,[rn,an,t("td",cn,[o(n,{to:"/problem/0212.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",_n,[o(n,{to:"/tag/trie.html"},{default:l(()=>[hn]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[gn]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[fn]),_:1}),e(),un]),t("td",mn,[o(d,{color:"#ff334b"},{default:l(()=>[e("Hard")]),_:1})]),t("td",pn,[t("a",xn,[e("🀄️"),o(s)]),e(),t("a",yn,[e("🔗"),o(s)])])]),t("tr",null,[bn,kn,wn,t("td",vn,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Tn]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[En]),_:1}),e(),o(n,{to:"/tag/string.html"},{default:l(()=>[In]),_:1}),e(),Sn]),t("td",Mn,[o(d,{color:"#ff334b"},{default:l(()=>[e("Hard")]),_:1})]),t("td",Bn,[t("a",An,[e("🀄️"),o(s)]),e(),t("a",Nn,[e("🔗"),o(s)])])]),t("tr",null,[Cn,Fn,Hn,t("td",Un,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Ln]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Pn]),_:1}),e(),o(n,{to:"/tag/hash-table.html"},{default:l(()=>[Rn]),_:1}),e(),Vn]),t("td",jn,[o(d,{color:"#ff334b"},{default:l(()=>[e("Hard")]),_:1})]),t("td",Dn,[t("a",On,[e("🀄️"),o(s)]),e(),t("a",Gn,[e("🔗"),o(s)])])]),t("tr",null,[qn,Kn,zn,t("td",Jn,[o(n,{to:"/tag/trie.html"},{default:l(()=>[Qn]),_:1}),e(),o(n,{to:"/tag/array.html"},{default:l(()=>[Wn]),_:1}),e(),o(n,{to:"/tag/two-pointers.html"},{default:l(()=>[Xn]),_:1}),e(),Yn]),t("td",Zn,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",$n,[t("a",ts,[e("🀄️"),o(s)]),e(),t("a",es,[e("🔗"),o(s)])])]),t("tr",null,[os,ls,ns,t("td",ss,[o(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[ds]),_:1}),e(),o(n,{to:"/tag/design.html"},{default:l(()=>[rs]),_:1}),e(),o(n,{to:"/tag/trie.html"},{default:l(()=>[as]),_:1}),e(),cs]),t("td",_s,[o(d,{color:"#ffb800"},{default:l(()=>[e("Medium")]),_:1})]),t("td",is,[t("a",hs,[e("🀄️"),o(s)]),e(),t("a",gs,[e("🔗"),o(s)])])]),t("tr",null,[fs,us,t("td",ms,[o(n,{to:"/problem/0440.html"},{default:l(()=>[e("[✓]")]),_:1})]),t("td",ps,[o(n,{to:"/tag/trie.html"},{default:l(()=>[xs]),_:1})]),t("td",ys,[o(d,{color:"#ff334b"},{default:l(()=>[e("Hard")]),_:1})]),t("td",bs,[t("a",ks,[e("🀄️"),o(s)]),e(),t("a",ws,[e("🔗"),o(s)])])])])])])}const Ss=c(f,[["render",vs],["__file","string.html.vue"]]);export{Ss as default};
