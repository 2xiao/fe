import{_ as r,r as i,o as a,c,f as _,a as t,d as l,b as e,w as o,e as h}from"./app-ynO5B_DP.js";const u={},f=h('<h1 id="_3-6-动态规划" tabindex="-1"><a class="header-anchor" href="#_3-6-动态规划" aria-hidden="true">#</a> 3.6 动态规划</h1><p>动态规划（Dynamic Programming），简称 DP，将问题分解为互相重叠的子问题，通过反复求解子问题来解决原问题就是动态规划，如果某一问题有很多重叠子问题，使用动态规划来解是比较有效的。</p><h4 id="动态规划三要素" tabindex="-1"><a class="header-anchor" href="#动态规划三要素" aria-hidden="true">#</a> 动态规划三要素：</h4><ul><li>重叠子问题</li><li>最优子结构</li><li>状态转移方程</li></ul><p>求解动态规划的核心问题是穷举。</p><p>但是这类问题的特别之处在于，存在 <strong>「重叠子问题」</strong>，如果暴力穷举的话效率会极其低下。</p><p>动态规划问题一定会具备 <strong>「最优子结构」</strong>，才能通过子问题的最值得到原问题的最值。</p><p>另外问题千变万化，穷举所有可行解其实并不是一件容易的事，只有列出正确的 <strong>「状态转移方程」</strong> 才能正确地穷举。</p><h4 id="动态规划的解题方法" tabindex="-1"><a class="header-anchor" href="#动态规划的解题方法" aria-hidden="true">#</a> 动态规划的解题方法：</h4><ul><li>递归+记忆化（自顶向下）</li><li>动态规划（自底向上）</li></ul><h4 id="动态规划的解题步骤" tabindex="-1"><a class="header-anchor" href="#动态规划的解题步骤" aria-hidden="true">#</a> 动态规划的解题步骤：</h4><ul><li>根据重叠子问题定义状态</li><li>寻找最优子结构，推导状态转移方程</li><li>确定 dp 初始状态</li><li>确定输出值</li></ul>',12),g=t("h2",{id:"相关题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),l(" 相关题目")],-1),m=t("h4",{id:"动态规划基础题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#动态规划基础题目","aria-hidden":"true"},"#"),l(" 动态规划基础题目")],-1),y=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),x=t("td",{style:{"text-align":"center"}},"509",-1),p={style:{"text-align":"left"}},b={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},k={style:{"text-align":"center"}},M={href:"/problem/0509",target:"_blank",rel:"noopener noreferrer"},H={style:{"text-align":"left"}},I=t("code",null,"递归",-1),w=t("code",null,"记忆化搜索",-1),z=t("code",null,"数学",-1),q=t("code",null,"1+",-1),v={style:{"text-align":"left"}},E=t("td",{style:{"text-align":"center"}},"70",-1),D={style:{"text-align":"left"}},P={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},N={style:{"text-align":"center"}},T={href:"/problem/0070",target:"_blank",rel:"noopener noreferrer"},j={style:{"text-align":"left"}},S=t("code",null,"记忆化搜索",-1),V=t("code",null,"数学",-1),A=t("code",null,"动态规划",-1),C={style:{"text-align":"left"}},L=t("td",{style:{"text-align":"center"}},"62",-1),R={style:{"text-align":"left"}},B={href:"https://leetcode.com/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},O={style:{"text-align":"center"}},U={href:"/problem/0062",target:"_blank",rel:"noopener noreferrer"},K={style:{"text-align":"left"}},F=t("code",null,"数学",-1),G=t("code",null,"动态规划",-1),J=t("code",null,"组合数学",-1),Q={style:{"text-align":"left"}},W=t("h4",{id:"记忆化搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#记忆化搜索","aria-hidden":"true"},"#"),l(" 记忆化搜索")],-1),X=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Y=t("td",{style:{"text-align":"center"}},"1137",-1),Z={style:{"text-align":"left"}},$={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},tt={style:{"text-align":"center"}},et={href:"/problem/1137",target:"_blank",rel:"noopener noreferrer"},lt={style:{"text-align":"left"}},ot=t("code",null,"记忆化搜索",-1),nt=t("code",null,"数学",-1),st=t("code",null,"动态规划",-1),dt={style:{"text-align":"left"}},_t=t("td",{style:{"text-align":"center"}},"375",-1),it={style:{"text-align":"left"}},rt={href:"https://leetcode.com/problems/guess-number-higher-or-lower-ii",target:"_blank",rel:"noopener noreferrer"},at={style:{"text-align":"center"}},ct={href:"/problem/0375",target:"_blank",rel:"noopener noreferrer"},ht={style:{"text-align":"left"}},ut=t("code",null,"数学",-1),ft=t("code",null,"动态规划",-1),gt=t("code",null,"博弈",-1),mt={style:{"text-align":"left"}},yt=t("td",{style:{"text-align":"center"}},"494",-1),xt={style:{"text-align":"left"}},pt={href:"https://leetcode.com/problems/target-sum",target:"_blank",rel:"noopener noreferrer"},bt={style:{"text-align":"center"}},kt={href:"/problem/0494",target:"_blank",rel:"noopener noreferrer"},Mt={style:{"text-align":"left"}},Ht=t("code",null,"数组",-1),It=t("code",null,"动态规划",-1),wt=t("code",null,"回溯",-1),zt={style:{"text-align":"left"}},qt=t("td",{style:{"text-align":"center"}},"576",-1),vt={style:{"text-align":"left"}},Et={href:"https://leetcode.com/problems/out-of-boundary-paths",target:"_blank",rel:"noopener noreferrer"},Dt=t("td",{style:{"text-align":"center"}},null,-1),Pt={style:{"text-align":"left"}},Nt=t("code",null,"动态规划",-1),Tt={style:{"text-align":"left"}},jt=t("td",{style:{"text-align":"center"}},"87",-1),St={style:{"text-align":"left"}},Vt={href:"https://leetcode.com/problems/scramble-string",target:"_blank",rel:"noopener noreferrer"},At=t("td",{style:{"text-align":"center"}},null,-1),Ct={style:{"text-align":"left"}},Lt=t("code",null,"字符串",-1),Rt=t("code",null,"动态规划",-1),Bt={style:{"text-align":"left"}},Ot=t("td",{style:{"text-align":"center"}},"403",-1),Ut={style:{"text-align":"left"}},Kt={href:"https://leetcode.com/problems/frog-jump",target:"_blank",rel:"noopener noreferrer"},Ft=t("td",{style:{"text-align":"center"}},null,-1),Gt={style:{"text-align":"left"}},Jt=t("code",null,"数组",-1),Qt=t("code",null,"动态规划",-1),Wt={style:{"text-align":"left"}},Xt=t("td",{style:{"text-align":"center"}},"552",-1),Yt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/student-attendance-record-ii",target:"_blank",rel:"noopener noreferrer"},$t=t("td",{style:{"text-align":"center"}},null,-1),te={style:{"text-align":"left"}},ee=t("code",null,"动态规划",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"913",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),_e={style:{"text-align":"left"}},ie=t("code",null,"图",-1),re=t("code",null,"拓扑排序",-1),ae=t("code",null,"记忆化搜索",-1),ce=t("code",null,"3+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"329",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},xe=t("code",null,"深度优先搜索",-1),pe=t("code",null,"广度优先搜索",-1),be=t("code",null,"图",-1),ke=t("code",null,"5+",-1),Me={style:{"text-align":"left"}},He=t("h4",{id:"线性-dp",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#线性-dp","aria-hidden":"true"},"#"),l(" 线性 DP")],-1),Ie=t("ul",null,[t("li",null,"单串线性 DP 问题")],-1),we=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),ze=t("td",{style:{"text-align":"center"}},"300",-1),qe={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},Ee={style:{"text-align":"center"}},De={href:"/problem/0300",target:"_blank",rel:"noopener noreferrer"},Pe={style:{"text-align":"left"}},Ne=t("code",null,"数组",-1),Te=t("code",null,"二分查找",-1),je=t("code",null,"动态规划",-1),Se={style:{"text-align":"left"}},Ve=t("td",{style:{"text-align":"center"}},"673",-1),Ae={style:{"text-align":"left"}},Ce={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},Le=t("td",{style:{"text-align":"center"}},null,-1),Re={style:{"text-align":"left"}},Be=t("code",null,"树状数组",-1),Oe=t("code",null,"线段树",-1),Ue=t("code",null,"数组",-1),Ke=t("code",null,"1+",-1),Fe={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"354",-1),Je={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/russian-doll-envelopes",target:"_blank",rel:"noopener noreferrer"},We={style:{"text-align":"center"}},Xe={href:"/problem/0354",target:"_blank",rel:"noopener noreferrer"},Ye={style:{"text-align":"left"}},Ze=t("code",null,"数组",-1),$e=t("code",null,"二分查找",-1),tl=t("code",null,"动态规划",-1),el=t("code",null,"1+",-1),ll={style:{"text-align":"left"}},ol=t("td",{style:{"text-align":"center"}},"53",-1),nl={style:{"text-align":"left"}},sl={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},dl={style:{"text-align":"center"}},_l={href:"/problem/0053",target:"_blank",rel:"noopener noreferrer"},il={style:{"text-align":"left"}},rl=t("code",null,"数组",-1),al=t("code",null,"分治",-1),cl=t("code",null,"动态规划",-1),hl={style:{"text-align":"left"}},ul=t("td",{style:{"text-align":"center"}},"152",-1),fl={style:{"text-align":"left"}},gl={href:"https://leetcode.com/problems/maximum-product-subarray",target:"_blank",rel:"noopener noreferrer"},ml={style:{"text-align":"center"}},yl={href:"/problem/0152",target:"_blank",rel:"noopener noreferrer"},xl={style:{"text-align":"left"}},pl=t("code",null,"数组",-1),bl=t("code",null,"动态规划",-1),kl={style:{"text-align":"left"}},Ml=t("td",{style:{"text-align":"center"}},"918",-1),Hl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},wl={style:{"text-align":"center"}},zl={href:"/problem/0918",target:"_blank",rel:"noopener noreferrer"},ql={style:{"text-align":"left"}},vl=t("code",null,"队列",-1),El=t("code",null,"数组",-1),Dl=t("code",null,"分治",-1),Pl=t("code",null,"2+",-1),Nl={style:{"text-align":"left"}},Tl=t("td",{style:{"text-align":"center"}},"198",-1),jl={style:{"text-align":"left"}},Sl={href:"https://leetcode.com/problems/house-robber",target:"_blank",rel:"noopener noreferrer"},Vl={style:{"text-align":"center"}},Al={href:"/problem/0198",target:"_blank",rel:"noopener noreferrer"},Cl={style:{"text-align":"left"}},Ll=t("code",null,"数组",-1),Rl=t("code",null,"动态规划",-1),Bl={style:{"text-align":"left"}},Ol=t("td",{style:{"text-align":"center"}},"213",-1),Ul={style:{"text-align":"left"}},Kl={href:"https://leetcode.com/problems/house-robber-ii",target:"_blank",rel:"noopener noreferrer"},Fl=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Jl=t("code",null,"数组",-1),Ql=t("code",null,"动态规划",-1),Wl={style:{"text-align":"left"}},Xl=t("td",{style:{"text-align":"center"}},"740",-1),Yl={style:{"text-align":"left"}},Zl={href:"https://leetcode.com/problems/delete-and-earn",target:"_blank",rel:"noopener noreferrer"},$l=t("td",{style:{"text-align":"center"}},null,-1),to={style:{"text-align":"left"}},eo=t("code",null,"数组",-1),lo=t("code",null,"哈希表",-1),oo=t("code",null,"动态规划",-1),no={style:{"text-align":"left"}},so=t("td",{style:{"text-align":"center"}},"1388",-1),_o={style:{"text-align":"left"}},io={href:"https://leetcode.com/problems/pizza-with-3n-slices",target:"_blank",rel:"noopener noreferrer"},ro=t("td",{style:{"text-align":"center"}},null,-1),ao={style:{"text-align":"left"}},co=t("code",null,"贪心",-1),ho=t("code",null,"数组",-1),uo=t("code",null,"动态规划",-1),fo=t("code",null,"1+",-1),go={style:{"text-align":"left"}},mo=t("td",{style:{"text-align":"center"}},"873",-1),yo={style:{"text-align":"left"}},xo={href:"https://leetcode.com/problems/length-of-longest-fibonacci-subsequence",target:"_blank",rel:"noopener noreferrer"},po=t("td",{style:{"text-align":"center"}},null,-1),bo={style:{"text-align":"left"}},ko=t("code",null,"数组",-1),Mo=t("code",null,"哈希表",-1),Ho=t("code",null,"动态规划",-1),Io={style:{"text-align":"left"}},wo=t("td",{style:{"text-align":"center"}},"1027",-1),zo={style:{"text-align":"left"}},qo={href:"https://leetcode.com/problems/longest-arithmetic-subsequence",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},null,-1),Eo={style:{"text-align":"left"}},Do=t("code",null,"数组",-1),Po=t("code",null,"哈希表",-1),No=t("code",null,"二分查找",-1),To=t("code",null,"1+",-1),jo={style:{"text-align":"left"}},So=t("td",{style:{"text-align":"center"}},"1055",-1),Vo={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/shortest-way-to-form-string",target:"_blank",rel:"noopener noreferrer"},Co=t("td",{style:{"text-align":"center"}},null,-1),Lo={style:{"text-align":"left"}},Ro=t("code",null,"贪心",-1),Bo=t("code",null,"双指针",-1),Oo=t("code",null,"字符串",-1),Uo=t("code",null,"1+",-1),Ko={style:{"text-align":"left"}},Fo=t("td",{style:{"text-align":"center"}},"368",-1),Go={style:{"text-align":"left"}},Jo={href:"https://leetcode.com/problems/largest-divisible-subset",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},null,-1),Wo={style:{"text-align":"left"}},Xo=t("code",null,"数组",-1),Yo=t("code",null,"数学",-1),Zo=t("code",null,"动态规划",-1),$o=t("code",null,"1+",-1),tn={style:{"text-align":"left"}},en=t("td",{style:{"text-align":"center"}},"32",-1),ln={style:{"text-align":"left"}},on={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},nn={style:{"text-align":"center"}},sn={href:"/problem/0032",target:"_blank",rel:"noopener noreferrer"},dn={style:{"text-align":"left"}},_n=t("code",null,"栈",-1),rn=t("code",null,"字符串",-1),an=t("code",null,"动态规划",-1),cn={style:{"text-align":"left"}},hn=t("td",{style:{"text-align":"center"}},"413",-1),un={style:{"text-align":"left"}},fn={href:"https://leetcode.com/problems/arithmetic-slices",target:"_blank",rel:"noopener noreferrer"},gn=t("td",{style:{"text-align":"center"}},null,-1),mn={style:{"text-align":"left"}},yn=t("code",null,"数组",-1),xn=t("code",null,"动态规划",-1),pn=t("code",null,"滑动窗口",-1),bn={style:{"text-align":"left"}},kn=t("td",{style:{"text-align":"center"}},"91",-1),Mn={style:{"text-align":"left"}},Hn={href:"https://leetcode.com/problems/decode-ways",target:"_blank",rel:"noopener noreferrer"},In=t("td",{style:{"text-align":"center"}},null,-1),wn={style:{"text-align":"left"}},zn=t("code",null,"字符串",-1),qn=t("code",null,"动态规划",-1),vn={style:{"text-align":"left"}},En=t("td",{style:{"text-align":"center"}},"639",-1),Dn={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/decode-ways-ii",target:"_blank",rel:"noopener noreferrer"},Nn=t("td",{style:{"text-align":"center"}},null,-1),Tn={style:{"text-align":"left"}},jn=t("code",null,"字符串",-1),Sn=t("code",null,"动态规划",-1),Vn={style:{"text-align":"left"}},An=t("td",{style:{"text-align":"center"}},"132",-1),Cn={style:{"text-align":"left"}},Ln={href:"https://leetcode.com/problems/palindrome-partitioning-ii",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},null,-1),Bn={style:{"text-align":"left"}},On=t("code",null,"字符串",-1),Un=t("code",null,"动态规划",-1),Kn={style:{"text-align":"left"}},Fn=t("td",{style:{"text-align":"center"}},"1220",-1),Gn={style:{"text-align":"left"}},Jn={href:"https://leetcode.com/problems/count-vowels-permutation",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},null,-1),Wn={style:{"text-align":"left"}},Xn=t("code",null,"动态规划",-1),Yn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"338",-1),$n={style:{"text-align":"left"}},ts={href:"https://leetcode.com/problems/counting-bits",target:"_blank",rel:"noopener noreferrer"},es=t("td",{style:{"text-align":"center"}},null,-1),ls={style:{"text-align":"left"}},os=t("code",null,"位运算",-1),ns=t("code",null,"动态规划",-1),ss={style:{"text-align":"left"}},ds=t("td",{style:{"text-align":"center"}},"801",-1),_s={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing",target:"_blank",rel:"noopener noreferrer"},rs=t("td",{style:{"text-align":"center"}},null,-1),as={style:{"text-align":"left"}},cs=t("code",null,"数组",-1),hs=t("code",null,"动态规划",-1),us={style:{"text-align":"left"}},fs=t("td",{style:{"text-align":"center"}},"871",-1),gs={style:{"text-align":"left"}},ms={href:"https://leetcode.com/problems/minimum-number-of-refueling-stops",target:"_blank",rel:"noopener noreferrer"},ys=t("td",{style:{"text-align":"center"}},null,-1),xs={style:{"text-align":"left"}},ps=t("code",null,"贪心",-1),bs=t("code",null,"数组",-1),ks=t("code",null,"动态规划",-1),Ms=t("code",null,"1+",-1),Hs={style:{"text-align":"left"}},Is=t("td",{style:{"text-align":"center"}},"45",-1),ws={style:{"text-align":"left"}},zs={href:"https://leetcode.com/problems/jump-game-ii",target:"_blank",rel:"noopener noreferrer"},qs={style:{"text-align":"center"}},vs={href:"/problem/0045",target:"_blank",rel:"noopener noreferrer"},Es={style:{"text-align":"left"}},Ds=t("code",null,"贪心",-1),Ps=t("code",null,"数组",-1),Ns=t("code",null,"动态规划",-1),Ts={style:{"text-align":"left"}},js=t("td",{style:{"text-align":"center"}},"813",-1),Ss={style:{"text-align":"left"}},Vs={href:"https://leetcode.com/problems/largest-sum-of-averages",target:"_blank",rel:"noopener noreferrer"},As=t("td",{style:{"text-align":"center"}},null,-1),Cs={style:{"text-align":"left"}},Ls=t("code",null,"数组",-1),Rs=t("code",null,"动态规划",-1),Bs=t("code",null,"前缀和",-1),Os={style:{"text-align":"left"}},Us=t("td",{style:{"text-align":"center"}},"887",-1),Ks={style:{"text-align":"left"}},Fs={href:"https://leetcode.com/problems/super-egg-drop",target:"_blank",rel:"noopener noreferrer"},Gs=t("td",{style:{"text-align":"center"}},null,-1),Js={style:{"text-align":"left"}},Qs=t("code",null,"数学",-1),Ws=t("code",null,"二分查找",-1),Xs=t("code",null,"动态规划",-1),Ys={style:{"text-align":"left"}},Zs=t("td",{style:{"text-align":"center"}},"256",-1),$s={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/paint-house",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},null,-1),ld={style:{"text-align":"left"}},od=t("code",null,"数组",-1),nd=t("code",null,"动态规划",-1),sd={style:{"text-align":"left"}},dd=t("td",{style:{"text-align":"center"}},"265",-1),_d={style:{"text-align":"left"}},id={href:"https://leetcode.com/problems/paint-house-ii",target:"_blank",rel:"noopener noreferrer"},rd=t("td",{style:{"text-align":"center"}},null,-1),ad={style:{"text-align":"left"}},cd=t("code",null,"数组",-1),hd=t("code",null,"动态规划",-1),ud={style:{"text-align":"left"}},fd=t("td",{style:{"text-align":"center"}},"1473",-1),gd={style:{"text-align":"left"}},md={href:"https://leetcode.com/problems/paint-house-iii",target:"_blank",rel:"noopener noreferrer"},yd=t("td",{style:{"text-align":"center"}},null,-1),xd={style:{"text-align":"left"}},pd=t("code",null,"数组",-1),bd=t("code",null,"动态规划",-1),kd={style:{"text-align":"left"}},Md=t("td",{style:{"text-align":"center"}},"975",-1),Hd={style:{"text-align":"left"}},Id={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},wd=t("td",{style:{"text-align":"center"}},null,-1),zd={style:{"text-align":"left"}},qd=t("code",null,"栈",-1),vd=t("code",null,"数组",-1),Ed=t("code",null,"动态规划",-1),Dd=t("code",null,"2+",-1),Pd={style:{"text-align":"left"}},Nd=t("td",{style:{"text-align":"center"}},"403",-1),Td={style:{"text-align":"left"}},jd={href:"https://leetcode.com/problems/frog-jump",target:"_blank",rel:"noopener noreferrer"},Sd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Ad=t("code",null,"数组",-1),Cd=t("code",null,"动态规划",-1),Ld={style:{"text-align":"left"}},Rd=t("td",{style:{"text-align":"center"}},"1478",-1),Bd={style:{"text-align":"left"}},Od={href:"https://leetcode.com/problems/allocate-mailboxes",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},null,-1),Kd={style:{"text-align":"left"}},Fd=t("code",null,"数组",-1),Gd=t("code",null,"数学",-1),Jd=t("code",null,"动态规划",-1),Qd=t("code",null,"1+",-1),Wd={style:{"text-align":"left"}},Xd=t("td",{style:{"text-align":"center"}},"1230",-1),Yd={style:{"text-align":"left"}},Zd={href:"https://leetcode.com/problems/toss-strange-coins",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"数组",-1),l_=t("code",null,"数学",-1),o_=t("code",null,"动态规划",-1),n_=t("code",null,"1+",-1),s_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"410",-1),__={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/split-array-largest-sum",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},null,-1),a_={style:{"text-align":"left"}},c_=t("code",null,"贪心",-1),h_=t("code",null,"数组",-1),u_=t("code",null,"二分查找",-1),f_=t("code",null,"2+",-1),g_={style:{"text-align":"left"}},m_=t("td",{style:{"text-align":"center"}},"1751",-1),y_={style:{"text-align":"left"}},x_={href:"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),b_={style:{"text-align":"left"}},k_=t("code",null,"数组",-1),M_=t("code",null,"二分查找",-1),H_=t("code",null,"动态规划",-1),I_=t("code",null,"1+",-1),w_={style:{"text-align":"left"}},z_=t("td",{style:{"text-align":"center"}},"1787",-1),q_={style:{"text-align":"left"}},v_={href:"https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero",target:"_blank",rel:"noopener noreferrer"},E_=t("td",{style:{"text-align":"center"}},null,-1),D_={style:{"text-align":"left"}},P_=t("code",null,"位运算",-1),N_=t("code",null,"数组",-1),T_=t("code",null,"动态规划",-1),j_={style:{"text-align":"left"}},S_=t("td",{style:{"text-align":"center"}},"121",-1),V_={style:{"text-align":"left"}},A_={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock",target:"_blank",rel:"noopener noreferrer"},C_={style:{"text-align":"center"}},L_={href:"/problem/0121",target:"_blank",rel:"noopener noreferrer"},R_={style:{"text-align":"left"}},B_=t("code",null,"数组",-1),O_=t("code",null,"动态规划",-1),U_={style:{"text-align":"left"}},K_=t("td",{style:{"text-align":"center"}},"122",-1),F_={style:{"text-align":"left"}},G_={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",target:"_blank",rel:"noopener noreferrer"},J_={style:{"text-align":"center"}},Q_={href:"/problem/0122",target:"_blank",rel:"noopener noreferrer"},W_={style:{"text-align":"left"}},X_=t("code",null,"贪心",-1),Y_=t("code",null,"数组",-1),Z_=t("code",null,"动态规划",-1),$_={style:{"text-align":"left"}},ti=t("td",{style:{"text-align":"center"}},"123",-1),ei={style:{"text-align":"left"}},li={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",target:"_blank",rel:"noopener noreferrer"},oi={style:{"text-align":"center"}},ni={href:"/problem/0123",target:"_blank",rel:"noopener noreferrer"},si={style:{"text-align":"left"}},di=t("code",null,"数组",-1),_i=t("code",null,"动态规划",-1),ii={style:{"text-align":"left"}},ri=t("td",{style:{"text-align":"center"}},"188",-1),ai={style:{"text-align":"left"}},ci={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",target:"_blank",rel:"noopener noreferrer"},hi={style:{"text-align":"center"}},ui={href:"/problem/0188",target:"_blank",rel:"noopener noreferrer"},fi={style:{"text-align":"left"}},gi=t("code",null,"数组",-1),mi=t("code",null,"动态规划",-1),yi={style:{"text-align":"left"}},xi=t("td",{style:{"text-align":"center"}},"309",-1),pi={style:{"text-align":"left"}},bi={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",target:"_blank",rel:"noopener noreferrer"},ki={style:{"text-align":"center"}},Mi={href:"/problem/0309",target:"_blank",rel:"noopener noreferrer"},Hi={style:{"text-align":"left"}},Ii=t("code",null,"数组",-1),wi=t("code",null,"动态规划",-1),zi={style:{"text-align":"left"}},qi=t("td",{style:{"text-align":"center"}},"714",-1),vi={style:{"text-align":"left"}},Ei={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee",target:"_blank",rel:"noopener noreferrer"},Di={style:{"text-align":"center"}},Pi={href:"/problem/0714",target:"_blank",rel:"noopener noreferrer"},Ni={style:{"text-align":"left"}},Ti=t("code",null,"贪心",-1),ji=t("code",null,"数组",-1),Si=t("code",null,"动态规划",-1),Vi={style:{"text-align":"left"}},Ai=t("ul",null,[t("li",null,"双串线性 DP 问题")],-1),Ci=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Li=t("td",{style:{"text-align":"center"}},"1143",-1),Ri={style:{"text-align":"left"}},Bi={href:"https://leetcode.com/problems/longest-common-subsequence",target:"_blank",rel:"noopener noreferrer"},Oi={style:{"text-align":"center"}},Ui={href:"/problem/1143",target:"_blank",rel:"noopener noreferrer"},Ki={style:{"text-align":"left"}},Fi=t("code",null,"字符串",-1),Gi=t("code",null,"动态规划",-1),Ji={style:{"text-align":"left"}},Qi=t("td",{style:{"text-align":"center"}},"712",-1),Wi={style:{"text-align":"left"}},Xi={href:"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings",target:"_blank",rel:"noopener noreferrer"},Yi={style:{"text-align":"center"}},Zi={href:"/problem/0712",target:"_blank",rel:"noopener noreferrer"},$i={style:{"text-align":"left"}},tr=t("code",null,"字符串",-1),er=t("code",null,"动态规划",-1),lr={style:{"text-align":"left"}},or=t("td",{style:{"text-align":"center"}},"718",-1),nr={style:{"text-align":"left"}},sr={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},dr=t("td",{style:{"text-align":"center"}},null,-1),_r={style:{"text-align":"left"}},ir=t("code",null,"数组",-1),rr=t("code",null,"二分查找",-1),ar=t("code",null,"动态规划",-1),cr=t("code",null,"3+",-1),hr={style:{"text-align":"left"}},ur=t("td",{style:{"text-align":"center"}},"583",-1),fr={style:{"text-align":"left"}},gr={href:"https://leetcode.com/problems/delete-operation-for-two-strings",target:"_blank",rel:"noopener noreferrer"},mr={style:{"text-align":"center"}},yr={href:"/problem/0583",target:"_blank",rel:"noopener noreferrer"},xr={style:{"text-align":"left"}},pr=t("code",null,"字符串",-1),br=t("code",null,"动态规划",-1),kr={style:{"text-align":"left"}},Mr=t("td",{style:{"text-align":"center"}},"72",-1),Hr={style:{"text-align":"left"}},Ir={href:"https://leetcode.com/problems/edit-distance",target:"_blank",rel:"noopener noreferrer"},wr={style:{"text-align":"center"}},zr={href:"/problem/0072",target:"_blank",rel:"noopener noreferrer"},qr={style:{"text-align":"left"}},vr=t("code",null,"字符串",-1),Er=t("code",null,"动态规划",-1),Dr={style:{"text-align":"left"}},Pr=t("td",{style:{"text-align":"center"}},"44",-1),Nr={style:{"text-align":"left"}},Tr={href:"https://leetcode.com/problems/wildcard-matching",target:"_blank",rel:"noopener noreferrer"},jr={style:{"text-align":"center"}},Sr={href:"/problem/0044",target:"_blank",rel:"noopener noreferrer"},Vr={style:{"text-align":"left"}},Ar=t("code",null,"贪心",-1),Cr=t("code",null,"递归",-1),Lr=t("code",null,"字符串",-1),Rr=t("code",null,"1+",-1),Br={style:{"text-align":"left"}},Or=t("td",{style:{"text-align":"center"}},"10",-1),Ur={style:{"text-align":"left"}},Kr={href:"https://leetcode.com/problems/regular-expression-matching",target:"_blank",rel:"noopener noreferrer"},Fr={style:{"text-align":"center"}},Gr={href:"/problem/0010",target:"_blank",rel:"noopener noreferrer"},Jr={style:{"text-align":"left"}},Qr=t("code",null,"递归",-1),Wr=t("code",null,"字符串",-1),Xr=t("code",null,"动态规划",-1),Yr={style:{"text-align":"left"}},Zr=t("td",{style:{"text-align":"center"}},"97",-1),$r={style:{"text-align":"left"}},ta={href:"https://leetcode.com/problems/interleaving-string",target:"_blank",rel:"noopener noreferrer"},ea={style:{"text-align":"center"}},la={href:"/problem/0097",target:"_blank",rel:"noopener noreferrer"},oa={style:{"text-align":"left"}},na=t("code",null,"字符串",-1),sa=t("code",null,"动态规划",-1),da={style:{"text-align":"left"}},_a=t("td",{style:{"text-align":"center"}},"115",-1),ia={style:{"text-align":"left"}},ra={href:"https://leetcode.com/problems/distinct-subsequences",target:"_blank",rel:"noopener noreferrer"},aa=t("td",{style:{"text-align":"center"}},null,-1),ca={style:{"text-align":"left"}},ha=t("code",null,"字符串",-1),ua=t("code",null,"动态规划",-1),fa={style:{"text-align":"left"}},ga=t("td",{style:{"text-align":"center"}},"87",-1),ma={style:{"text-align":"left"}},ya={href:"https://leetcode.com/problems/scramble-string",target:"_blank",rel:"noopener noreferrer"},xa=t("td",{style:{"text-align":"center"}},null,-1),pa={style:{"text-align":"left"}},ba=t("code",null,"字符串",-1),ka=t("code",null,"动态规划",-1),Ma={style:{"text-align":"left"}},Ha=t("ul",null,[t("li",null,"矩阵线性 DP 问题")],-1),Ia=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),wa=t("td",{style:{"text-align":"center"}},"118",-1),za={style:{"text-align":"left"}},qa={href:"https://leetcode.com/problems/pascals-triangle",target:"_blank",rel:"noopener noreferrer"},va={style:{"text-align":"center"}},Ea={href:"/problem/0118",target:"_blank",rel:"noopener noreferrer"},Da={style:{"text-align":"left"}},Pa=t("code",null,"数组",-1),Na=t("code",null,"动态规划",-1),Ta={style:{"text-align":"left"}},ja=t("td",{style:{"text-align":"center"}},"119",-1),Sa={style:{"text-align":"left"}},Va={href:"https://leetcode.com/problems/pascals-triangle-ii",target:"_blank",rel:"noopener noreferrer"},Aa=t("td",{style:{"text-align":"center"}},null,-1),Ca={style:{"text-align":"left"}},La=t("code",null,"数组",-1),Ra=t("code",null,"动态规划",-1),Ba={style:{"text-align":"left"}},Oa=t("td",{style:{"text-align":"center"}},"120",-1),Ua={style:{"text-align":"left"}},Ka={href:"https://leetcode.com/problems/triangle",target:"_blank",rel:"noopener noreferrer"},Fa={style:{"text-align":"center"}},Ga={href:"/problem/0120",target:"_blank",rel:"noopener noreferrer"},Ja={style:{"text-align":"left"}},Qa=t("code",null,"数组",-1),Wa=t("code",null,"动态规划",-1),Xa={style:{"text-align":"left"}},Ya=t("td",{style:{"text-align":"center"}},"64",-1),Za={style:{"text-align":"left"}},$a={href:"https://leetcode.com/problems/minimum-path-sum",target:"_blank",rel:"noopener noreferrer"},tc={style:{"text-align":"center"}},ec={href:"/problem/0064",target:"_blank",rel:"noopener noreferrer"},lc={style:{"text-align":"left"}},oc=t("code",null,"数组",-1),nc=t("code",null,"动态规划",-1),sc=t("code",null,"矩阵",-1),dc={style:{"text-align":"left"}},_c=t("td",{style:{"text-align":"center"}},"174",-1),ic={style:{"text-align":"left"}},rc={href:"https://leetcode.com/problems/dungeon-game",target:"_blank",rel:"noopener noreferrer"},ac={style:{"text-align":"center"}},cc={href:"/problem/0174",target:"_blank",rel:"noopener noreferrer"},hc={style:{"text-align":"left"}},uc=t("code",null,"数组",-1),fc=t("code",null,"动态规划",-1),gc=t("code",null,"矩阵",-1),mc={style:{"text-align":"left"}},yc=t("td",{style:{"text-align":"center"}},"221",-1),xc={style:{"text-align":"left"}},pc={href:"https://leetcode.com/problems/maximal-square",target:"_blank",rel:"noopener noreferrer"},bc={style:{"text-align":"center"}},kc={href:"/problem/0221",target:"_blank",rel:"noopener noreferrer"},Mc={style:{"text-align":"left"}},Hc=t("code",null,"数组",-1),Ic=t("code",null,"动态规划",-1),wc=t("code",null,"矩阵",-1),zc={style:{"text-align":"left"}},qc=t("td",{style:{"text-align":"center"}},"931",-1),vc={style:{"text-align":"left"}},Ec={href:"https://leetcode.com/problems/minimum-falling-path-sum",target:"_blank",rel:"noopener noreferrer"},Dc={style:{"text-align":"center"}},Pc={href:"/problem/0931",target:"_blank",rel:"noopener noreferrer"},Nc={style:{"text-align":"left"}},Tc=t("code",null,"数组",-1),jc=t("code",null,"动态规划",-1),Sc=t("code",null,"矩阵",-1),Vc={style:{"text-align":"left"}},Ac=t("td",{style:{"text-align":"center"}},"576",-1),Cc={style:{"text-align":"left"}},Lc={href:"https://leetcode.com/problems/out-of-boundary-paths",target:"_blank",rel:"noopener noreferrer"},Rc=t("td",{style:{"text-align":"center"}},null,-1),Bc={style:{"text-align":"left"}},Oc=t("code",null,"动态规划",-1),Uc={style:{"text-align":"left"}},Kc=t("td",{style:{"text-align":"center"}},"85",-1),Fc={style:{"text-align":"left"}},Gc={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},Jc={style:{"text-align":"center"}},Qc={href:"/problem/0085",target:"_blank",rel:"noopener noreferrer"},Wc={style:{"text-align":"left"}},Xc=t("code",null,"栈",-1),Yc=t("code",null,"数组",-1),Zc=t("code",null,"动态规划",-1),$c=t("code",null,"2+",-1),t1={style:{"text-align":"left"}},e1=t("td",{style:{"text-align":"center"}},"363",-1),l1={style:{"text-align":"left"}},o1={href:"https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k",target:"_blank",rel:"noopener noreferrer"},n1=t("td",{style:{"text-align":"center"}},null,-1),s1={style:{"text-align":"left"}},d1=t("code",null,"数组",-1),_1=t("code",null,"二分查找",-1),i1=t("code",null,"矩阵",-1),r1=t("code",null,"2+",-1),a1={style:{"text-align":"left"}},c1=t("td",{style:{"text-align":"center"}},"面试题 17.24",-1),h1={style:{"text-align":"left"}},u1={href:"https://leetcode.cn/problems/max-submatrix-lcci",target:"_blank",rel:"noopener noreferrer"},f1=t("td",{style:{"text-align":"center"}},null,-1),g1={style:{"text-align":"left"}},m1=t("code",null,"数组",-1),y1=t("code",null,"动态规划",-1),x1=t("code",null,"矩阵",-1),p1=t("code",null,"1+",-1),b1={style:{"text-align":"left"}},k1=t("td",{style:{"text-align":"center"}},"1444",-1),M1={style:{"text-align":"left"}},H1={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},I1=t("td",{style:{"text-align":"center"}},null,-1),w1={style:{"text-align":"left"}},z1=t("code",null,"记忆化搜索",-1),q1=t("code",null,"数组",-1),v1=t("code",null,"动态规划",-1),E1=t("code",null,"1+",-1),D1={style:{"text-align":"left"}},P1=t("ul",null,[t("li",null,"无串线性 DP 问题")],-1),N1=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),T1=t("td",{style:{"text-align":"center"}},"1137",-1),j1={style:{"text-align":"left"}},S1={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},V1={style:{"text-align":"center"}},A1={href:"/problem/1137",target:"_blank",rel:"noopener noreferrer"},C1={style:{"text-align":"left"}},L1=t("code",null,"记忆化搜索",-1),R1=t("code",null,"数学",-1),B1=t("code",null,"动态规划",-1),O1={style:{"text-align":"left"}},U1=t("td",{style:{"text-align":"center"}},"650",-1),K1={style:{"text-align":"left"}},F1={href:"https://leetcode.com/problems/2-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},G1=t("td",{style:{"text-align":"center"}},null,-1),J1={style:{"text-align":"left"}},Q1=t("code",null,"数学",-1),W1=t("code",null,"动态规划",-1),X1={style:{"text-align":"left"}},Y1=t("td",{style:{"text-align":"center"}},"264",-1),Z1={style:{"text-align":"left"}},$1={href:"https://leetcode.com/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},th={style:{"text-align":"center"}},eh={href:"/problem/0264",target:"_blank",rel:"noopener noreferrer"},lh={style:{"text-align":"left"}},oh=t("code",null,"哈希表",-1),nh=t("code",null,"数学",-1),sh=t("code",null,"动态规划",-1),dh=t("code",null,"1+",-1),_h={style:{"text-align":"left"}},ih=t("td",{style:{"text-align":"center"}},"279",-1),rh={style:{"text-align":"left"}},ah={href:"https://leetcode.com/problems/perfect-squares",target:"_blank",rel:"noopener noreferrer"},ch={style:{"text-align":"center"}},hh={href:"/problem/0279",target:"_blank",rel:"noopener noreferrer"},uh={style:{"text-align":"left"}},fh=t("code",null,"广度优先搜索",-1),gh=t("code",null,"数学",-1),mh=t("code",null,"动态规划",-1),yh={style:{"text-align":"left"}},xh=t("td",{style:{"text-align":"center"}},"343",-1),ph={style:{"text-align":"left"}},bh={href:"https://leetcode.com/problems/integer-break",target:"_blank",rel:"noopener noreferrer"},kh={style:{"text-align":"center"}},Mh={href:"/problem/0343",target:"_blank",rel:"noopener noreferrer"},Hh={style:{"text-align":"left"}},Ih=t("code",null,"数学",-1),wh=t("code",null,"动态规划",-1),zh={style:{"text-align":"left"}},qh=t("h4",{id:"背包问题",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#背包问题","aria-hidden":"true"},"#"),l(" 背包问题")],-1),vh=t("ul",null,[t("li",null,"0-1 背包问题")],-1),Eh=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Dh=t("td",{style:{"text-align":"center"}},"416",-1),Ph={style:{"text-align":"left"}},Nh={href:"https://leetcode.com/problems/partition-equal-subset-sum",target:"_blank",rel:"noopener noreferrer"},Th={style:{"text-align":"center"}},jh={href:"/problem/0416",target:"_blank",rel:"noopener noreferrer"},Sh={style:{"text-align":"left"}},Vh=t("code",null,"数组",-1),Ah=t("code",null,"动态规划",-1),Ch={style:{"text-align":"left"}},Lh=t("td",{style:{"text-align":"center"}},"494",-1),Rh={style:{"text-align":"left"}},Bh={href:"https://leetcode.com/problems/target-sum",target:"_blank",rel:"noopener noreferrer"},Oh={style:{"text-align":"center"}},Uh={href:"/problem/0494",target:"_blank",rel:"noopener noreferrer"},Kh={style:{"text-align":"left"}},Fh=t("code",null,"数组",-1),Gh=t("code",null,"动态规划",-1),Jh=t("code",null,"回溯",-1),Qh={style:{"text-align":"left"}},Wh=t("td",{style:{"text-align":"center"}},"1049",-1),Xh={style:{"text-align":"left"}},Yh={href:"https://leetcode.com/problems/last-stone-weight-ii",target:"_blank",rel:"noopener noreferrer"},Zh={style:{"text-align":"center"}},$h={href:"/problem/1049",target:"_blank",rel:"noopener noreferrer"},tu={style:{"text-align":"left"}},eu=t("code",null,"数组",-1),lu=t("code",null,"动态规划",-1),ou={style:{"text-align":"left"}},nu=t("ul",null,[t("li",null,"完全背包问题")],-1),su=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),du=t("td",{style:{"text-align":"center"}},"279",-1),_u={style:{"text-align":"left"}},iu={href:"https://leetcode.com/problems/perfect-squares",target:"_blank",rel:"noopener noreferrer"},ru={style:{"text-align":"center"}},au={href:"/problem/0279",target:"_blank",rel:"noopener noreferrer"},cu={style:{"text-align":"left"}},hu=t("code",null,"广度优先搜索",-1),uu=t("code",null,"数学",-1),fu=t("code",null,"动态规划",-1),gu={style:{"text-align":"left"}},mu=t("td",{style:{"text-align":"center"}},"322",-1),yu={style:{"text-align":"left"}},xu={href:"https://leetcode.com/problems/coin-change",target:"_blank",rel:"noopener noreferrer"},pu={style:{"text-align":"center"}},bu={href:"/problem/0322",target:"_blank",rel:"noopener noreferrer"},ku={style:{"text-align":"left"}},Mu=t("code",null,"广度优先搜索",-1),Hu=t("code",null,"数组",-1),Iu=t("code",null,"动态规划",-1),wu={style:{"text-align":"left"}},zu=t("td",{style:{"text-align":"center"}},"518",-1),qu={style:{"text-align":"left"}},vu={href:"https://leetcode.com/problems/coin-change-ii",target:"_blank",rel:"noopener noreferrer"},Eu={style:{"text-align":"center"}},Du={href:"/problem/0518",target:"_blank",rel:"noopener noreferrer"},Pu={style:{"text-align":"left"}},Nu=t("code",null,"数组",-1),Tu=t("code",null,"动态规划",-1),ju={style:{"text-align":"left"}},Su=t("td",{style:{"text-align":"center"}},"139",-1),Vu={style:{"text-align":"left"}},Au={href:"https://leetcode.com/problems/word-break",target:"_blank",rel:"noopener noreferrer"},Cu={style:{"text-align":"center"}},Lu={href:"/problem/0139",target:"_blank",rel:"noopener noreferrer"},Ru={style:{"text-align":"left"}},Bu=t("code",null,"字典树",-1),Ou=t("code",null,"记忆化搜索",-1),Uu=t("code",null,"数组",-1),Ku=t("code",null,"3+",-1),Fu={style:{"text-align":"left"}},Gu=t("td",{style:{"text-align":"center"}},"377",-1),Ju={style:{"text-align":"left"}},Qu={href:"https://leetcode.com/problems/combination-sum-iv",target:"_blank",rel:"noopener noreferrer"},Wu=t("td",{style:{"text-align":"center"}},null,-1),Xu={style:{"text-align":"left"}},Yu=t("code",null,"数组",-1),Zu=t("code",null,"动态规划",-1),$u={style:{"text-align":"left"}},tf=t("td",{style:{"text-align":"center"}},"638",-1),ef={style:{"text-align":"left"}},lf={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},of=t("td",{style:{"text-align":"center"}},null,-1),nf={style:{"text-align":"left"}},sf=t("code",null,"位运算",-1),df=t("code",null,"记忆化搜索",-1),_f=t("code",null,"数组",-1),rf=t("code",null,"3+",-1),af={style:{"text-align":"left"}},cf=t("td",{style:{"text-align":"center"}},"1449",-1),hf={style:{"text-align":"left"}},uf={href:"https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target",target:"_blank",rel:"noopener noreferrer"},ff=t("td",{style:{"text-align":"center"}},null,-1),gf={style:{"text-align":"left"}},mf=t("code",null,"数组",-1),yf=t("code",null,"动态规划",-1),xf={style:{"text-align":"left"}},pf=t("ul",null,[t("li",null,[t("p",null,"多重背包问题")]),t("li",null,[t("p",null,"分组背包问题")])],-1),bf=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),kf=t("td",{style:{"text-align":"center"}},"1155",-1),Mf={style:{"text-align":"left"}},Hf={href:"https://leetcode.com/problems/number-of-dice-rolls-with-target-sum",target:"_blank",rel:"noopener noreferrer"},If=t("td",{style:{"text-align":"center"}},null,-1),wf={style:{"text-align":"left"}},zf=t("code",null,"动态规划",-1),qf={style:{"text-align":"left"}},vf=t("td",{style:{"text-align":"center"}},"2585",-1),Ef={style:{"text-align":"left"}},Df={href:"https://leetcode.com/problems/number-of-ways-to-earn-points",target:"_blank",rel:"noopener noreferrer"},Pf=t("td",{style:{"text-align":"center"}},null,-1),Nf={style:{"text-align":"left"}},Tf=t("code",null,"数组",-1),jf=t("code",null,"动态规划",-1),Sf={style:{"text-align":"left"}},Vf=t("ul",null,[t("li",null,"多维背包问题")],-1),Af=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Cf=t("td",{style:{"text-align":"center"}},"474",-1),Lf={style:{"text-align":"left"}},Rf={href:"https://leetcode.com/problems/ones-and-zeroes",target:"_blank",rel:"noopener noreferrer"},Bf={style:{"text-align":"center"}},Of={href:"/problem/0474",target:"_blank",rel:"noopener noreferrer"},Uf={style:{"text-align":"left"}},Kf=t("code",null,"数组",-1),Ff=t("code",null,"字符串",-1),Gf=t("code",null,"动态规划",-1),Jf={style:{"text-align":"left"}},Qf=t("td",{style:{"text-align":"center"}},"879",-1),Wf={style:{"text-align":"left"}},Xf={href:"https://leetcode.com/problems/profitable-schemes",target:"_blank",rel:"noopener noreferrer"},Yf=t("td",{style:{"text-align":"center"}},null,-1),Zf={style:{"text-align":"left"}},$f=t("code",null,"数组",-1),tg=t("code",null,"动态规划",-1),eg={style:{"text-align":"left"}},lg=t("td",{style:{"text-align":"center"}},"1995",-1),og={style:{"text-align":"left"}},ng={href:"https://leetcode.com/problems/count-special-quadruplets",target:"_blank",rel:"noopener noreferrer"},sg=t("td",{style:{"text-align":"center"}},null,-1),dg={style:{"text-align":"left"}},_g=t("code",null,"数组",-1),ig=t("code",null,"哈希表",-1),rg=t("code",null,"枚举",-1),ag={style:{"text-align":"left"}},cg=t("h4",{id:"区间-dp",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#区间-dp","aria-hidden":"true"},"#"),l(" 区间 DP")],-1),hg=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),ug=t("td",{style:{"text-align":"center"}},"486",-1),fg={style:{"text-align":"left"}},gg={href:"https://leetcode.com/problems/predict-the-winner",target:"_blank",rel:"noopener noreferrer"},mg=t("td",{style:{"text-align":"center"}},null,-1),yg={style:{"text-align":"left"}},xg=t("code",null,"递归",-1),pg=t("code",null,"数组",-1),bg=t("code",null,"数学",-1),kg=t("code",null,"2+",-1),Mg={style:{"text-align":"left"}},Hg=t("td",{style:{"text-align":"center"}},"312",-1),Ig={style:{"text-align":"left"}},wg={href:"https://leetcode.com/problems/burst-balloons",target:"_blank",rel:"noopener noreferrer"},zg=t("td",{style:{"text-align":"center"}},null,-1),qg={style:{"text-align":"left"}},vg=t("code",null,"数组",-1),Eg=t("code",null,"动态规划",-1),Dg={style:{"text-align":"left"}},Pg=t("td",{style:{"text-align":"center"}},"877",-1),Ng={style:{"text-align":"left"}},Tg={href:"https://leetcode.com/problems/stone-game",target:"_blank",rel:"noopener noreferrer"},jg=t("td",{style:{"text-align":"center"}},null,-1),Sg={style:{"text-align":"left"}},Vg=t("code",null,"数组",-1),Ag=t("code",null,"数学",-1),Cg=t("code",null,"动态规划",-1),Lg=t("code",null,"1+",-1),Rg={style:{"text-align":"left"}},Bg=t("td",{style:{"text-align":"center"}},"1000",-1),Og={style:{"text-align":"left"}},Ug={href:"https://leetcode.com/problems/minimum-cost-to-merge-stones",target:"_blank",rel:"noopener noreferrer"},Kg=t("td",{style:{"text-align":"center"}},null,-1),Fg={style:{"text-align":"left"}},Gg=t("code",null,"数组",-1),Jg=t("code",null,"动态规划",-1),Qg=t("code",null,"前缀和",-1),Wg={style:{"text-align":"left"}},Xg=t("td",{style:{"text-align":"center"}},"1547",-1),Yg={style:{"text-align":"left"}},Zg={href:"https://leetcode.com/problems/minimum-cost-to-cut-a-stick",target:"_blank",rel:"noopener noreferrer"},$g=t("td",{style:{"text-align":"center"}},null,-1),tm={style:{"text-align":"left"}},em=t("code",null,"数组",-1),lm=t("code",null,"动态规划",-1),om=t("code",null,"排序",-1),nm={style:{"text-align":"left"}},sm=t("td",{style:{"text-align":"center"}},"664",-1),dm={style:{"text-align":"left"}},_m={href:"https://leetcode.com/problems/strange-printer",target:"_blank",rel:"noopener noreferrer"},im=t("td",{style:{"text-align":"center"}},null,-1),rm={style:{"text-align":"left"}},am=t("code",null,"字符串",-1),cm=t("code",null,"动态规划",-1),hm={style:{"text-align":"left"}},um=t("td",{style:{"text-align":"center"}},"1039",-1),fm={style:{"text-align":"left"}},gm={href:"https://leetcode.com/problems/minimum-score-triangulation-of-polygon",target:"_blank",rel:"noopener noreferrer"},mm=t("td",{style:{"text-align":"center"}},null,-1),ym={style:{"text-align":"left"}},xm=t("code",null,"数组",-1),pm=t("code",null,"动态规划",-1),bm={style:{"text-align":"left"}},km=t("td",{style:{"text-align":"center"}},"546",-1),Mm={style:{"text-align":"left"}},Hm={href:"https://leetcode.com/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},Im=t("td",{style:{"text-align":"center"}},null,-1),wm={style:{"text-align":"left"}},zm=t("code",null,"记忆化搜索",-1),qm=t("code",null,"数组",-1),vm=t("code",null,"动态规划",-1),Em={style:{"text-align":"left"}},Dm=t("td",{style:{"text-align":"center"}},"375",-1),Pm={style:{"text-align":"left"}},Nm={href:"https://leetcode.com/problems/guess-number-higher-or-lower-ii",target:"_blank",rel:"noopener noreferrer"},Tm={style:{"text-align":"center"}},jm={href:"/problem/0375",target:"_blank",rel:"noopener noreferrer"},Sm={style:{"text-align":"left"}},Vm=t("code",null,"数学",-1),Am=t("code",null,"动态规划",-1),Cm=t("code",null,"博弈",-1),Lm={style:{"text-align":"left"}},Rm=t("td",{style:{"text-align":"center"}},"678",-1),Bm={style:{"text-align":"left"}},Om={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},Um={style:{"text-align":"center"}},Km={href:"/problem/0678",target:"_blank",rel:"noopener noreferrer"},Fm={style:{"text-align":"left"}},Gm=t("code",null,"栈",-1),Jm=t("code",null,"贪心",-1),Qm=t("code",null,"字符串",-1),Wm=t("code",null,"1+",-1),Xm={style:{"text-align":"left"}},Ym=t("td",{style:{"text-align":"center"}},"5",-1),Zm={style:{"text-align":"left"}},$m={href:"https://leetcode.com/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},ty={style:{"text-align":"center"}},ey={href:"/problem/0005",target:"_blank",rel:"noopener noreferrer"},ly={style:{"text-align":"left"}},oy=t("code",null,"双指针",-1),ny=t("code",null,"字符串",-1),sy=t("code",null,"动态规划",-1),dy={style:{"text-align":"left"}},_y=t("td",{style:{"text-align":"center"}},"516",-1),iy={style:{"text-align":"left"}},ry={href:"https://leetcode.com/problems/longest-palindromic-subsequence",target:"_blank",rel:"noopener noreferrer"},ay={style:{"text-align":"center"}},cy={href:"/problem/0516",target:"_blank",rel:"noopener noreferrer"},hy={style:{"text-align":"left"}},uy=t("code",null,"字符串",-1),fy=t("code",null,"动态规划",-1),gy={style:{"text-align":"left"}},my=t("td",{style:{"text-align":"center"}},"730",-1),yy={style:{"text-align":"left"}},xy={href:"https://leetcode.com/problems/count-different-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},py=t("td",{style:{"text-align":"center"}},null,-1),by={style:{"text-align":"left"}},ky=t("code",null,"字符串",-1),My=t("code",null,"动态规划",-1),Hy={style:{"text-align":"left"}},Iy=t("td",{style:{"text-align":"center"}},"2104",-1),wy={style:{"text-align":"left"}},zy={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},qy=t("td",{style:{"text-align":"center"}},null,-1),vy={style:{"text-align":"left"}},Ey=t("code",null,"栈",-1),Dy=t("code",null,"数组",-1),Py=t("code",null,"单调栈",-1),Ny={style:{"text-align":"left"}},Ty=t("h4",{id:"树形-dp",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#树形-dp","aria-hidden":"true"},"#"),l(" 树形 DP")],-1),jy=t("ul",null,[t("li",null,"固定根的树形 DP")],-1),Sy=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vy=t("td",{style:{"text-align":"center"}},"543",-1),Ay={style:{"text-align":"left"}},Cy={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ly={style:{"text-align":"center"}},Ry={href:"/problem/0543",target:"_blank",rel:"noopener noreferrer"},By={style:{"text-align":"left"}},Oy=t("code",null,"树",-1),Uy=t("code",null,"深度优先搜索",-1),Ky=t("code",null,"二叉树",-1),Fy={style:{"text-align":"left"}},Gy=t("td",{style:{"text-align":"center"}},"124",-1),Jy={style:{"text-align":"left"}},Qy={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Wy={style:{"text-align":"center"}},Xy={href:"/problem/0124",target:"_blank",rel:"noopener noreferrer"},Yy={style:{"text-align":"left"}},Zy=t("code",null,"树",-1),$y=t("code",null,"深度优先搜索",-1),tx=t("code",null,"动态规划",-1),ex=t("code",null,"1+",-1),lx={style:{"text-align":"left"}},ox=t("td",{style:{"text-align":"center"}},"1245",-1),nx={style:{"text-align":"left"}},sx={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},dx=t("td",{style:{"text-align":"center"}},null,-1),_x={style:{"text-align":"left"}},ix=t("code",null,"树",-1),rx=t("code",null,"深度优先搜索",-1),ax=t("code",null,"广度优先搜索",-1),cx=t("code",null,"2+",-1),hx={style:{"text-align":"left"}},ux=t("td",{style:{"text-align":"center"}},"2246",-1),fx={style:{"text-align":"left"}},gx={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},mx=t("td",{style:{"text-align":"center"}},null,-1),yx={style:{"text-align":"left"}},xx=t("code",null,"树",-1),px=t("code",null,"深度优先搜索",-1),bx=t("code",null,"图",-1),kx=t("code",null,"3+",-1),Mx={style:{"text-align":"left"}},Hx=t("td",{style:{"text-align":"center"}},"687",-1),Ix={style:{"text-align":"left"}},wx={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},zx=t("td",{style:{"text-align":"center"}},null,-1),qx={style:{"text-align":"left"}},vx=t("code",null,"树",-1),Ex=t("code",null,"深度优先搜索",-1),Dx=t("code",null,"二叉树",-1),Px={style:{"text-align":"left"}},Nx=t("td",{style:{"text-align":"center"}},"337",-1),Tx={style:{"text-align":"left"}},jx={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Sx=t("td",{style:{"text-align":"center"}},null,-1),Vx={style:{"text-align":"left"}},Ax=t("code",null,"树",-1),Cx=t("code",null,"深度优先搜索",-1),Lx=t("code",null,"动态规划",-1),Rx=t("code",null,"1+",-1),Bx={style:{"text-align":"left"}},Ox=t("td",{style:{"text-align":"center"}},"333",-1),Ux={style:{"text-align":"left"}},Kx={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Fx=t("td",{style:{"text-align":"center"}},null,-1),Gx={style:{"text-align":"left"}},Jx=t("code",null,"树",-1),Qx=t("code",null,"深度优先搜索",-1),Wx=t("code",null,"二叉搜索树",-1),Xx=t("code",null,"2+",-1),Yx={style:{"text-align":"left"}},Zx=t("td",{style:{"text-align":"center"}},"1617",-1),$x={style:{"text-align":"left"}},tp={href:"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},ep=t("td",{style:{"text-align":"center"}},null,-1),lp={style:{"text-align":"left"}},op=t("code",null,"位运算",-1),np=t("code",null,"树",-1),sp=t("code",null,"动态规划",-1),dp=t("code",null,"2+",-1),_p={style:{"text-align":"left"}},ip=t("td",{style:{"text-align":"center"}},"2538",-1),rp={style:{"text-align":"left"}},ap={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},cp=t("td",{style:{"text-align":"center"}},null,-1),hp={style:{"text-align":"left"}},up=t("code",null,"树",-1),fp=t("code",null,"深度优先搜索",-1),gp=t("code",null,"数组",-1),mp=t("code",null,"1+",-1),yp={style:{"text-align":"left"}},xp=t("td",{style:{"text-align":"center"}},"1569",-1),pp={style:{"text-align":"left"}},bp={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},kp=t("td",{style:{"text-align":"center"}},null,-1),Mp={style:{"text-align":"left"}},Hp=t("code",null,"树",-1),Ip=t("code",null,"并查集",-1),wp=t("code",null,"二叉搜索树",-1),zp=t("code",null,"7+",-1),qp={style:{"text-align":"left"}},vp=t("td",{style:{"text-align":"center"}},"1372",-1),Ep={style:{"text-align":"left"}},Dp={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Pp=t("td",{style:{"text-align":"center"}},null,-1),Np={style:{"text-align":"left"}},Tp=t("code",null,"树",-1),jp=t("code",null,"深度优先搜索",-1),Sp=t("code",null,"动态规划",-1),Vp=t("code",null,"1+",-1),Ap={style:{"text-align":"left"}},Cp=t("td",{style:{"text-align":"center"}},"1373",-1),Lp={style:{"text-align":"left"}},Rp={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Bp=t("td",{style:{"text-align":"center"}},null,-1),Op={style:{"text-align":"left"}},Up=t("code",null,"树",-1),Kp=t("code",null,"深度优先搜索",-1),Fp=t("code",null,"二叉搜索树",-1),Gp=t("code",null,"2+",-1),Jp={style:{"text-align":"left"}},Qp=t("td",{style:{"text-align":"center"}},"968",-1),Wp={style:{"text-align":"left"}},Xp={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},Yp=t("td",{style:{"text-align":"center"}},null,-1),Zp={style:{"text-align":"left"}},$p=t("code",null,"树",-1),tb=t("code",null,"深度优先搜索",-1),eb=t("code",null,"动态规划",-1),lb=t("code",null,"1+",-1),ob={style:{"text-align":"left"}},nb=t("td",{style:{"text-align":"center"}},"1273",-1),sb={style:{"text-align":"left"}},db={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},_b=t("td",{style:{"text-align":"center"}},null,-1),ib={style:{"text-align":"left"}},rb=t("code",null,"树",-1),ab=t("code",null,"深度优先搜索",-1),cb=t("code",null,"广度优先搜索",-1),hb=t("code",null,"1+",-1),ub={style:{"text-align":"left"}},fb=t("td",{style:{"text-align":"center"}},"1519",-1),gb={style:{"text-align":"left"}},mb={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},yb=t("td",{style:{"text-align":"center"}},null,-1),xb={style:{"text-align":"left"}},pb=t("code",null,"树",-1),bb=t("code",null,"深度优先搜索",-1),kb=t("code",null,"广度优先搜索",-1),Mb=t("code",null,"2+",-1),Hb={style:{"text-align":"left"}},Ib=t("ul",null,[t("li",null,"不定根的树形 DP")],-1),wb=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),zb=t("td",{style:{"text-align":"center"}},"310",-1),qb={style:{"text-align":"left"}},vb={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},Eb=t("td",{style:{"text-align":"center"}},null,-1),Db={style:{"text-align":"left"}},Pb=t("code",null,"深度优先搜索",-1),Nb=t("code",null,"广度优先搜索",-1),Tb=t("code",null,"图",-1),jb=t("code",null,"1+",-1),Sb={style:{"text-align":"left"}},Vb=t("td",{style:{"text-align":"center"}},"834",-1),Ab={style:{"text-align":"left"}},Cb={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},Lb=t("td",{style:{"text-align":"center"}},null,-1),Rb={style:{"text-align":"left"}},Bb=t("code",null,"树",-1),Ob=t("code",null,"深度优先搜索",-1),Ub=t("code",null,"图",-1),Kb=t("code",null,"1+",-1),Fb={style:{"text-align":"left"}},Gb=t("td",{style:{"text-align":"center"}},"2581",-1),Jb={style:{"text-align":"left"}},Qb={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},Wb=t("td",{style:{"text-align":"center"}},null,-1),Xb={style:{"text-align":"left"}},Yb=t("code",null,"树",-1),Zb=t("code",null,"深度优先搜索",-1),$b=t("code",null,"数组",-1),t3=t("code",null,"2+",-1),e3={style:{"text-align":"left"}},l3=t("h4",{id:"状态压缩-dp",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#状态压缩-dp","aria-hidden":"true"},"#"),l(" 状态压缩 DP")],-1),o3=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),n3=t("td",{style:{"text-align":"center"}},"1879",-1),s3={style:{"text-align":"left"}},d3={href:"https://leetcode.com/problems/minimum-xor-sum-of-two-arrays",target:"_blank",rel:"noopener noreferrer"},_3=t("td",{style:{"text-align":"center"}},null,-1),i3={style:{"text-align":"left"}},r3=t("code",null,"位运算",-1),a3=t("code",null,"数组",-1),c3=t("code",null,"动态规划",-1),h3=t("code",null,"1+",-1),u3={style:{"text-align":"left"}},f3=t("td",{style:{"text-align":"center"}},"2172",-1),g3={style:{"text-align":"left"}},m3={href:"https://leetcode.com/problems/maximum-and-sum-of-array",target:"_blank",rel:"noopener noreferrer"},y3=t("td",{style:{"text-align":"center"}},null,-1),x3={style:{"text-align":"left"}},p3=t("code",null,"位运算",-1),b3=t("code",null,"数组",-1),k3=t("code",null,"动态规划",-1),M3=t("code",null,"1+",-1),H3={style:{"text-align":"left"}},I3=t("td",{style:{"text-align":"center"}},"1947",-1),w3={style:{"text-align":"left"}},z3={href:"https://leetcode.com/problems/maximum-compatibility-score-sum",target:"_blank",rel:"noopener noreferrer"},q3=t("td",{style:{"text-align":"center"}},null,-1),v3={style:{"text-align":"left"}},E3=t("code",null,"位运算",-1),D3=t("code",null,"数组",-1),P3=t("code",null,"动态规划",-1),N3=t("code",null,"2+",-1),T3={style:{"text-align":"left"}},j3=t("td",{style:{"text-align":"center"}},"1595",-1),S3={style:{"text-align":"left"}},V3={href:"https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points",target:"_blank",rel:"noopener noreferrer"},A3=t("td",{style:{"text-align":"center"}},null,-1),C3={style:{"text-align":"left"}},L3=t("code",null,"位运算",-1),R3=t("code",null,"数组",-1),B3=t("code",null,"动态规划",-1),O3=t("code",null,"2+",-1),U3={style:{"text-align":"left"}},K3=t("td",{style:{"text-align":"center"}},"1494",-1),F3={style:{"text-align":"left"}},G3={href:"https://leetcode.com/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},J3=t("td",{style:{"text-align":"center"}},null,-1),Q3={style:{"text-align":"left"}},W3=t("code",null,"位运算",-1),X3=t("code",null,"图",-1),Y3=t("code",null,"动态规划",-1),Z3=t("code",null,"1+",-1),$3={style:{"text-align":"left"}},t0=t("td",{style:{"text-align":"center"}},"1655",-1),e0={style:{"text-align":"left"}},l0={href:"https://leetcode.com/problems/distribute-repeating-integers",target:"_blank",rel:"noopener noreferrer"},o0=t("td",{style:{"text-align":"center"}},null,-1),n0={style:{"text-align":"left"}},s0=t("code",null,"位运算",-1),d0=t("code",null,"数组",-1),_0=t("code",null,"动态规划",-1),i0=t("code",null,"2+",-1),r0={style:{"text-align":"left"}},a0=t("td",{style:{"text-align":"center"}},"1986",-1),c0={style:{"text-align":"left"}},h0={href:"https://leetcode.com/problems/minimum-number-of-work-sessions-to-finish-the-tasks",target:"_blank",rel:"noopener noreferrer"},u0=t("td",{style:{"text-align":"center"}},null,-1),f0={style:{"text-align":"left"}},g0=t("code",null,"位运算",-1),m0=t("code",null,"数组",-1),y0=t("code",null,"动态规划",-1),x0=t("code",null,"2+",-1),p0={style:{"text-align":"left"}},b0=t("td",{style:{"text-align":"center"}},"1434",-1),k0={style:{"text-align":"left"}},M0={href:"https://leetcode.com/problems/number-of-ways-to-wear-different-hats-to-each-other",target:"_blank",rel:"noopener noreferrer"},H0=t("td",{style:{"text-align":"center"}},null,-1),I0={style:{"text-align":"left"}},w0=t("code",null,"位运算",-1),z0=t("code",null,"数组",-1),q0=t("code",null,"动态规划",-1),v0=t("code",null,"1+",-1),E0={style:{"text-align":"left"}},D0=t("td",{style:{"text-align":"center"}},"1799",-1),P0={style:{"text-align":"left"}},N0={href:"https://leetcode.com/problems/maximize-score-after-n-operations",target:"_blank",rel:"noopener noreferrer"},T0=t("td",{style:{"text-align":"center"}},null,-1),j0={style:{"text-align":"left"}},S0=t("code",null,"位运算",-1),V0=t("code",null,"数组",-1),A0=t("code",null,"数学",-1),C0=t("code",null,"4+",-1),L0={style:{"text-align":"left"}},R0=t("td",{style:{"text-align":"center"}},"1681",-1),B0={style:{"text-align":"left"}},O0={href:"https://leetcode.com/problems/minimum-incompatibility",target:"_blank",rel:"noopener noreferrer"},U0=t("td",{style:{"text-align":"center"}},null,-1),K0={style:{"text-align":"left"}},F0=t("code",null,"位运算",-1),G0=t("code",null,"数组",-1),J0=t("code",null,"动态规划",-1),Q0=t("code",null,"1+",-1),W0={style:{"text-align":"left"}},X0=t("td",{style:{"text-align":"center"}},"526",-1),Y0={style:{"text-align":"left"}},Z0={href:"https://leetcode.com/problems/beautiful-arrangement",target:"_blank",rel:"noopener noreferrer"},$0=t("td",{style:{"text-align":"center"}},null,-1),t4={style:{"text-align":"left"}},e4=t("code",null,"位运算",-1),l4=t("code",null,"数组",-1),o4=t("code",null,"动态规划",-1),n4=t("code",null,"2+",-1),s4={style:{"text-align":"left"}},d4=t("td",{style:{"text-align":"center"}},"351",-1),_4={style:{"text-align":"left"}},i4={href:"https://leetcode.com/problems/android-unlock-patterns",target:"_blank",rel:"noopener noreferrer"},r4=t("td",{style:{"text-align":"center"}},null,-1),a4={style:{"text-align":"left"}},c4=t("code",null,"位运算",-1),h4=t("code",null,"动态规划",-1),u4=t("code",null,"回溯",-1),f4=t("code",null,"1+",-1),g4={style:{"text-align":"left"}},m4=t("td",{style:{"text-align":"center"}},"464",-1),y4={style:{"text-align":"left"}},x4={href:"https://leetcode.com/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},p4=t("td",{style:{"text-align":"center"}},null,-1),b4={style:{"text-align":"left"}},k4=t("code",null,"位运算",-1),M4=t("code",null,"记忆化搜索",-1),H4=t("code",null,"数学",-1),I4=t("code",null,"3+",-1),w4={style:{"text-align":"left"}},z4=t("td",{style:{"text-align":"center"}},"847",-1),q4={style:{"text-align":"left"}},v4={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},E4=t("td",{style:{"text-align":"center"}},null,-1),D4={style:{"text-align":"left"}},P4=t("code",null,"位运算",-1),N4=t("code",null,"广度优先搜索",-1),T4=t("code",null,"图",-1),j4=t("code",null,"2+",-1),S4={style:{"text-align":"left"}},V4=t("td",{style:{"text-align":"center"}},"638",-1),A4={style:{"text-align":"left"}},C4={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},L4=t("td",{style:{"text-align":"center"}},null,-1),R4={style:{"text-align":"left"}},B4=t("code",null,"位运算",-1),O4=t("code",null,"记忆化搜索",-1),U4=t("code",null,"数组",-1),K4=t("code",null,"3+",-1),F4={style:{"text-align":"left"}},G4=t("td",{style:{"text-align":"center"}},"1994",-1),J4={style:{"text-align":"left"}},Q4={href:"https://leetcode.com/problems/the-number-of-good-subsets",target:"_blank",rel:"noopener noreferrer"},W4=t("td",{style:{"text-align":"center"}},null,-1),X4={style:{"text-align":"left"}},Y4=t("code",null,"位运算",-1),Z4=t("code",null,"数组",-1),$4=t("code",null,"数学",-1),t2=t("code",null,"2+",-1),e2={style:{"text-align":"left"}},l2=t("td",{style:{"text-align":"center"}},"1349",-1),o2={style:{"text-align":"left"}},n2={href:"https://leetcode.com/problems/maximum-students-taking-exam",target:"_blank",rel:"noopener noreferrer"},s2=t("td",{style:{"text-align":"center"}},null,-1),d2={style:{"text-align":"left"}},_2=t("code",null,"位运算",-1),i2=t("code",null,"数组",-1),r2=t("code",null,"动态规划",-1),a2=t("code",null,"2+",-1),c2={style:{"text-align":"left"}},h2=t("td",{style:{"text-align":"center"}},"698",-1),u2={style:{"text-align":"left"}},f2={href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},g2=t("td",{style:{"text-align":"center"}},null,-1),m2={style:{"text-align":"left"}},y2=t("code",null,"位运算",-1),x2=t("code",null,"记忆化搜索",-1),p2=t("code",null,"数组",-1),b2=t("code",null,"3+",-1),k2={style:{"text-align":"left"}},M2=t("td",{style:{"text-align":"center"}},"943",-1),H2={style:{"text-align":"left"}},I2={href:"https://leetcode.com/problems/find-the-shortest-superstring",target:"_blank",rel:"noopener noreferrer"},w2=t("td",{style:{"text-align":"center"}},null,-1),z2={style:{"text-align":"left"}},q2=t("code",null,"位运算",-1),v2=t("code",null,"数组",-1),E2=t("code",null,"字符串",-1),D2=t("code",null,"2+",-1),P2={style:{"text-align":"left"}},N2=t("td",{style:{"text-align":"center"}},"691",-1),T2={style:{"text-align":"left"}},j2={href:"https://leetcode.com/problems/stickers-to-spell-word",target:"_blank",rel:"noopener noreferrer"},S2=t("td",{style:{"text-align":"center"}},null,-1),V2={style:{"text-align":"left"}},A2=t("code",null,"位运算",-1),C2=t("code",null,"数组",-1),L2=t("code",null,"字符串",-1),R2=t("code",null,"3+",-1),B2={style:{"text-align":"left"}},O2=t("td",{style:{"text-align":"center"}},"982",-1),U2={style:{"text-align":"left"}},K2={href:"https://leetcode.com/problems/triples-with-bitwise-and-equal-to-zero",target:"_blank",rel:"noopener noreferrer"},F2=t("td",{style:{"text-align":"center"}},null,-1),G2={style:{"text-align":"left"}},J2=t("code",null,"位运算",-1),Q2=t("code",null,"数组",-1),W2=t("code",null,"哈希表",-1),X2={style:{"text-align":"left"}},Y2=t("h4",{id:"计数-dp",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#计数-dp","aria-hidden":"true"},"#"),l(" 计数 DP")],-1),Z2=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),$2=t("td",{style:{"text-align":"center"}},"62",-1),t6={style:{"text-align":"left"}},e6={href:"https://leetcode.com/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},l6={style:{"text-align":"center"}},o6={href:"/problem/0062",target:"_blank",rel:"noopener noreferrer"},n6={style:{"text-align":"left"}},s6=t("code",null,"数学",-1),d6=t("code",null,"动态规划",-1),_6=t("code",null,"组合数学",-1),i6={style:{"text-align":"left"}},r6=t("td",{style:{"text-align":"center"}},"63",-1),a6={style:{"text-align":"left"}},c6={href:"https://leetcode.com/problems/unique-paths-ii",target:"_blank",rel:"noopener noreferrer"},h6={style:{"text-align":"center"}},u6={href:"/problem/0063",target:"_blank",rel:"noopener noreferrer"},f6={style:{"text-align":"left"}},g6=t("code",null,"数组",-1),m6=t("code",null,"动态规划",-1),y6=t("code",null,"矩阵",-1),x6={style:{"text-align":"left"}},p6=t("td",{style:{"text-align":"center"}},"343",-1),b6={style:{"text-align":"left"}},k6={href:"https://leetcode.com/problems/integer-break",target:"_blank",rel:"noopener noreferrer"},M6={style:{"text-align":"center"}},H6={href:"/problem/0343",target:"_blank",rel:"noopener noreferrer"},I6={style:{"text-align":"left"}},w6=t("code",null,"数学",-1),z6=t("code",null,"动态规划",-1),q6={style:{"text-align":"left"}},v6=t("td",{style:{"text-align":"center"}},"96",-1),E6={style:{"text-align":"left"}},D6={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},P6={style:{"text-align":"center"}},N6={href:"/problem/0096",target:"_blank",rel:"noopener noreferrer"},T6={style:{"text-align":"left"}},j6=t("code",null,"树",-1),S6=t("code",null,"二叉搜索树",-1),V6=t("code",null,"数学",-1),A6=t("code",null,"2+",-1),C6={style:{"text-align":"left"}},L6=t("td",{style:{"text-align":"center"}},"1259",-1),R6={style:{"text-align":"left"}},B6={href:"https://leetcode.com/problems/handshakes-that-dont-cross",target:"_blank",rel:"noopener noreferrer"},O6=t("td",{style:{"text-align":"center"}},null,-1),U6={style:{"text-align":"left"}},K6=t("code",null,"数学",-1),F6=t("code",null,"动态规划",-1),G6={style:{"text-align":"left"}},J6=t("td",{style:{"text-align":"center"}},"790",-1),Q6={style:{"text-align":"left"}},W6={href:"https://leetcode.com/problems/domino-and-tromino-tiling",target:"_blank",rel:"noopener noreferrer"},X6=t("td",{style:{"text-align":"center"}},null,-1),Y6={style:{"text-align":"left"}},Z6=t("code",null,"动态规划",-1),$6={style:{"text-align":"left"}},t5=t("td",{style:{"text-align":"center"}},"70",-1),e5={style:{"text-align":"left"}},l5={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},o5={style:{"text-align":"center"}},n5={href:"/problem/0070",target:"_blank",rel:"noopener noreferrer"},s5={style:{"text-align":"left"}},d5=t("code",null,"记忆化搜索",-1),_5=t("code",null,"数学",-1),i5=t("code",null,"动态规划",-1),r5={style:{"text-align":"left"}},a5=t("td",{style:{"text-align":"center"}},"746",-1),c5={style:{"text-align":"left"}},h5={href:"https://leetcode.com/problems/min-cost-climbing-stairs",target:"_blank",rel:"noopener noreferrer"},u5=t("td",{style:{"text-align":"center"}},null,-1),f5={style:{"text-align":"left"}},g5=t("code",null,"数组",-1),m5=t("code",null,"动态规划",-1),y5={style:{"text-align":"left"}},x5=t("td",{style:{"text-align":"center"}},"509",-1),p5={style:{"text-align":"left"}},b5={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},k5={style:{"text-align":"center"}},M5={href:"/problem/0509",target:"_blank",rel:"noopener noreferrer"},H5={style:{"text-align":"left"}},I5=t("code",null,"递归",-1),w5=t("code",null,"记忆化搜索",-1),z5=t("code",null,"数学",-1),q5=t("code",null,"1+",-1),v5={style:{"text-align":"left"}},E5=t("td",{style:{"text-align":"center"}},"1137",-1),D5={style:{"text-align":"left"}},P5={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},N5={style:{"text-align":"center"}},T5={href:"/problem/1137",target:"_blank",rel:"noopener noreferrer"},j5={style:{"text-align":"left"}},S5=t("code",null,"记忆化搜索",-1),V5=t("code",null,"数学",-1),A5=t("code",null,"动态规划",-1),C5={style:{"text-align":"left"}},L5=t("h4",{id:"数位-dp",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#数位-dp","aria-hidden":"true"},"#"),l(" 数位 DP")],-1),R5=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),B5=t("td",{style:{"text-align":"center"}},"2376",-1),O5={style:{"text-align":"left"}},U5={href:"https://leetcode.com/problems/count-special-integers",target:"_blank",rel:"noopener noreferrer"},K5=t("td",{style:{"text-align":"center"}},null,-1),F5={style:{"text-align":"left"}},G5=t("code",null,"数学",-1),J5=t("code",null,"动态规划",-1),Q5={style:{"text-align":"left"}},W5=t("td",{style:{"text-align":"center"}},"357",-1),X5={style:{"text-align":"left"}},Y5={href:"https://leetcode.com/problems/count-numbers-with-unique-digits",target:"_blank",rel:"noopener noreferrer"},Z5=t("td",{style:{"text-align":"center"}},null,-1),$5={style:{"text-align":"left"}},t8=t("code",null,"数学",-1),e8=t("code",null,"动态规划",-1),l8=t("code",null,"回溯",-1),o8={style:{"text-align":"left"}},n8=t("td",{style:{"text-align":"center"}},"1012",-1),s8={style:{"text-align":"left"}},d8={href:"https://leetcode.com/problems/numbers-with-repeated-digits",target:"_blank",rel:"noopener noreferrer"},_8=t("td",{style:{"text-align":"center"}},null,-1),i8={style:{"text-align":"left"}},r8=t("code",null,"数学",-1),a8=t("code",null,"动态规划",-1),c8={style:{"text-align":"left"}},h8=t("td",{style:{"text-align":"center"}},"902",-1),u8={style:{"text-align":"left"}},f8={href:"https://leetcode.com/problems/numbers-at-most-n-given-digit-set",target:"_blank",rel:"noopener noreferrer"},g8=t("td",{style:{"text-align":"center"}},null,-1),m8={style:{"text-align":"left"}},y8=t("code",null,"数组",-1),x8=t("code",null,"数学",-1),p8=t("code",null,"字符串",-1),b8=t("code",null,"2+",-1),k8={style:{"text-align":"left"}},M8=t("td",{style:{"text-align":"center"}},"788",-1),H8={style:{"text-align":"left"}},I8={href:"https://leetcode.com/problems/rotated-digits",target:"_blank",rel:"noopener noreferrer"},w8=t("td",{style:{"text-align":"center"}},null,-1),z8={style:{"text-align":"left"}},q8=t("code",null,"数学",-1),v8=t("code",null,"动态规划",-1),E8={style:{"text-align":"left"}},D8=t("td",{style:{"text-align":"center"}},"600",-1),P8={style:{"text-align":"left"}},N8={href:"https://leetcode.com/problems/non-negative-integers-without-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},T8=t("td",{style:{"text-align":"center"}},null,-1),j8={style:{"text-align":"left"}},S8=t("code",null,"动态规划",-1),V8={style:{"text-align":"left"}},A8=t("td",{style:{"text-align":"center"}},"233",-1),C8={style:{"text-align":"left"}},L8={href:"https://leetcode.com/problems/number-of-digit-one",target:"_blank",rel:"noopener noreferrer"},R8=t("td",{style:{"text-align":"center"}},null,-1),B8={style:{"text-align":"left"}},O8=t("code",null,"递归",-1),U8=t("code",null,"数学",-1),K8=t("code",null,"动态规划",-1),F8={style:{"text-align":"left"}},G8=t("td",{style:{"text-align":"center"}},"2719",-1),J8={style:{"text-align":"left"}},Q8={href:"https://leetcode.com/problems/count-of-integers",target:"_blank",rel:"noopener noreferrer"},W8=t("td",{style:{"text-align":"center"}},null,-1),X8={style:{"text-align":"left"}},Y8=t("code",null,"数学",-1),Z8=t("code",null,"字符串",-1),$8=t("code",null,"动态规划",-1),t7={style:{"text-align":"left"}},e7=t("td",{style:{"text-align":"center"}},"248",-1),l7={style:{"text-align":"left"}},o7={href:"https://leetcode.com/problems/strobogrammatic-number-iii",target:"_blank",rel:"noopener noreferrer"},n7=t("td",{style:{"text-align":"center"}},null,-1),s7={style:{"text-align":"left"}},d7=t("code",null,"递归",-1),_7=t("code",null,"数组",-1),i7=t("code",null,"字符串",-1),r7={style:{"text-align":"left"}},a7=t("td",{style:{"text-align":"center"}},"1088",-1),c7={style:{"text-align":"left"}},h7={href:"https://leetcode.com/problems/confusing-number-ii",target:"_blank",rel:"noopener noreferrer"},u7=t("td",{style:{"text-align":"center"}},null,-1),f7={style:{"text-align":"left"}},g7=t("code",null,"数学",-1),m7=t("code",null,"回溯",-1),y7={style:{"text-align":"left"}},x7=t("td",{style:{"text-align":"center"}},"1067",-1),p7={style:{"text-align":"left"}},b7={href:"https://leetcode.com/problems/digit-count-in-range",target:"_blank",rel:"noopener noreferrer"},k7=t("td",{style:{"text-align":"center"}},null,-1),M7={style:{"text-align":"left"}},H7=t("code",null,"数学",-1),I7=t("code",null,"动态规划",-1),w7={style:{"text-align":"left"}},z7=t("td",{style:{"text-align":"center"}},"1742",-1),q7={style:{"text-align":"left"}},v7={href:"https://leetcode.com/problems/maximum-number-of-balls-in-a-box",target:"_blank",rel:"noopener noreferrer"},E7=t("td",{style:{"text-align":"center"}},null,-1),D7={style:{"text-align":"left"}},P7=t("code",null,"哈希表",-1),N7=t("code",null,"数学",-1),T7=t("code",null,"计数",-1),j7={style:{"text-align":"left"}},S7=t("td",{style:{"text-align":"center"}},"面试题 17.06",-1),V7={style:{"text-align":"left"}},A7={href:"https://leetcode.cn/problems/number-of-2s-in-range-lcci",target:"_blank",rel:"noopener noreferrer"},C7=t("td",{style:{"text-align":"center"}},null,-1),L7={style:{"text-align":"left"}},R7=t("code",null,"递归",-1),B7=t("code",null,"数学",-1),O7=t("code",null,"动态规划",-1),U7={style:{"text-align":"left"}},K7=t("h4",{id:"概率-dp",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#概率-dp","aria-hidden":"true"},"#"),l(" 概率 DP")],-1),F7=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),G7=t("td",{style:{"text-align":"center"}},"688",-1),J7={style:{"text-align":"left"}},Q7={href:"https://leetcode.com/problems/knight-probability-in-chessboard",target:"_blank",rel:"noopener noreferrer"},W7=t("td",{style:{"text-align":"center"}},null,-1),X7={style:{"text-align":"left"}},Y7=t("code",null,"动态规划",-1),Z7={style:{"text-align":"left"}},$7=t("td",{style:{"text-align":"center"}},"808",-1),t9={style:{"text-align":"left"}},e9={href:"https://leetcode.com/problems/soup-servings",target:"_blank",rel:"noopener noreferrer"},l9=t("td",{style:{"text-align":"center"}},null,-1),o9={style:{"text-align":"left"}},n9=t("code",null,"数学",-1),s9=t("code",null,"动态规划",-1),d9=t("code",null,"概率与统计",-1),_9={style:{"text-align":"left"}},i9=t("td",{style:{"text-align":"center"}},"837",-1),r9={style:{"text-align":"left"}},a9={href:"https://leetcode.com/problems/new-21-game",target:"_blank",rel:"noopener noreferrer"},c9=t("td",{style:{"text-align":"center"}},null,-1),h9={style:{"text-align":"left"}},u9=t("code",null,"数学",-1),f9=t("code",null,"动态规划",-1),g9=t("code",null,"滑动窗口",-1),m9=t("code",null,"1+",-1),y9={style:{"text-align":"left"}},x9=t("td",{style:{"text-align":"center"}},"1230",-1),p9={style:{"text-align":"left"}},b9={href:"https://leetcode.com/problems/toss-strange-coins",target:"_blank",rel:"noopener noreferrer"},k9=t("td",{style:{"text-align":"center"}},null,-1),M9={style:{"text-align":"left"}},H9=t("code",null,"数组",-1),I9=t("code",null,"数学",-1),w9=t("code",null,"动态规划",-1),z9=t("code",null,"1+",-1),q9={style:{"text-align":"left"}},v9=t("td",{style:{"text-align":"center"}},"1467",-1),E9={style:{"text-align":"left"}},D9={href:"https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",target:"_blank",rel:"noopener noreferrer"},P9=t("td",{style:{"text-align":"center"}},null,-1),N9={style:{"text-align":"left"}},T9=t("code",null,"数组",-1),j9=t("code",null,"数学",-1),S9=t("code",null,"动态规划",-1),V9=t("code",null,"3+",-1),A9={style:{"text-align":"left"}},C9=t("td",{style:{"text-align":"center"}},"1227",-1),L9={style:{"text-align":"left"}},R9={href:"https://leetcode.com/problems/airplane-seat-assignment-probability",target:"_blank",rel:"noopener noreferrer"},B9=t("td",{style:{"text-align":"center"}},null,-1),O9={style:{"text-align":"left"}},U9=t("code",null,"脑筋急转弯",-1),K9=t("code",null,"数学",-1),F9=t("code",null,"动态规划",-1),G9=t("code",null,"1+",-1),J9={style:{"text-align":"left"}},Q9=t("td",{style:{"text-align":"center"}},"1377",-1),W9={style:{"text-align":"left"}},X9={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},Y9=t("td",{style:{"text-align":"center"}},null,-1),Z9={style:{"text-align":"left"}},$9=t("code",null,"树",-1),tk=t("code",null,"深度优先搜索",-1),ek=t("code",null,"广度优先搜索",-1),lk=t("code",null,"1+",-1),ok={style:{"text-align":"left"}},nk=t("td",{style:{"text-align":"center"}},"剑指 Offer 60",-1),sk={style:{"text-align":"left"}},dk={href:"https://leetcode.cn/problems/nge-tou-zi-de-dian-shu-lcof",target:"_blank",rel:"noopener noreferrer"},_k={style:{"text-align":"center"}},ik={href:"/problem/jz_offer_60_1",target:"_blank",rel:"noopener noreferrer"},rk={style:{"text-align":"left"}},ak=t("code",null,"数学",-1),ck=t("code",null,"动态规划",-1),hk=t("code",null,"概率与统计",-1),uk={style:{"text-align":"left"}};function fk(gk,mk){const s=i("ExternalLinkIcon"),n=i("RouterLink"),d=i("font");return a(),c("div",null,[f,_(" https://leetcode.cn/problems/last-stone-weight-ii/solutions/805162/yi-pian-wen-zhang-chi-tou-bei-bao-wen-ti-5lfv/ "),_(" START TABLE "),_(" Please keep comment here to allow auto update "),_(" DON'T EDIT THIS SECTION, INSTEAD RE-RUN `npm run lc` TO UPDATE "),g,m,_(" prettier-ignore "),t("table",null,[y,t("tbody",null,[t("tr",null,[x,t("td",p,[t("a",b,[l("斐波那契数"),e(s)])]),t("td",k,[t("a",M,[l("[✓]"),e(s)])]),t("td",H,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[z]),_:1}),l(),q]),t("td",v,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[E,t("td",D,[t("a",P,[l("爬楼梯"),e(s)])]),t("td",N,[t("a",T,[l("[✓]"),e(s)])]),t("td",j,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[A]),_:1})]),t("td",C,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[L,t("td",R,[t("a",B,[l("不同路径"),e(s)])]),t("td",O,[t("a",U,[l("[✓]"),e(s)])]),t("td",K,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[J]),_:1})]),t("td",Q,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])]),W,_(" prettier-ignore "),t("table",null,[X,t("tbody",null,[t("tr",null,[Y,t("td",Z,[t("a",$,[l("第 N 个泰波那契数"),e(s)])]),t("td",tt,[t("a",et,[l("[✓]"),e(s)])]),t("td",lt,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[st]),_:1})]),t("td",dt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[_t,t("td",it,[t("a",rt,[l("猜数字大小 II"),e(s)])]),t("td",at,[t("a",ct,[l("[✓]"),e(s)])]),t("td",ht,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[gt]),_:1})]),t("td",mt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yt,t("td",xt,[t("a",pt,[l("目标和"),e(s)])]),t("td",bt,[t("a",kt,[l("[✓]"),e(s)])]),t("td",Mt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[wt]),_:1})]),t("td",zt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qt,t("td",vt,[t("a",Et,[l("出界的路径数"),e(s)])]),Dt,t("td",Pt,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Nt]),_:1})]),t("td",Tt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jt,t("td",St,[t("a",Vt,[l("扰乱字符串"),e(s)])]),At,t("td",Ct,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Rt]),_:1})]),t("td",Bt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ot,t("td",Ut,[t("a",Kt,[l("青蛙过河"),e(s)])]),Ft,t("td",Gt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Jt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Qt]),_:1})]),t("td",Wt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xt,t("td",Yt,[t("a",Zt,[l("学生出勤记录 II"),e(s)])]),$t,t("td",te,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ee]),_:1})]),t("td",le,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("猫和老鼠"),e(s)])]),de,t("td",_e,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[re]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[ae]),_:1}),l(),ce]),t("td",he,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("矩阵中的最长递增路径"),e(s)])]),me,t("td",ye,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[pe]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[be]),_:1}),l(),ke]),t("td",Me,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])]),He,Ie,_(" prettier-ignore "),t("table",null,[we,t("tbody",null,[t("tr",null,[ze,t("td",qe,[t("a",ve,[l("最长递增子序列"),e(s)])]),t("td",Ee,[t("a",De,[l("[✓]"),e(s)])]),t("td",Pe,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Te]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[je]),_:1})]),t("td",Se,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ve,t("td",Ae,[t("a",Ce,[l("最长递增子序列的个数"),e(s)])]),Le,t("td",Re,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Be]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Oe]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ue]),_:1}),l(),Ke]),t("td",Fe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ge,t("td",Je,[t("a",Qe,[l("俄罗斯套娃信封问题"),e(s)])]),t("td",We,[t("a",Xe,[l("[✓]"),e(s)])]),t("td",Ye,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ze]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[$e]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[tl]),_:1}),l(),el]),t("td",ll,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ol,t("td",nl,[t("a",sl,[l("最大子数组和"),e(s)])]),t("td",dl,[t("a",_l,[l("[✓]"),e(s)])]),t("td",il,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rl]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[al]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[cl]),_:1})]),t("td",hl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ul,t("td",fl,[t("a",gl,[l("乘积最大子数组"),e(s)])]),t("td",ml,[t("a",yl,[l("[✓]"),e(s)])]),t("td",xl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pl]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[bl]),_:1})]),t("td",kl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ml,t("td",Hl,[t("a",Il,[l("环形子数组的最大和"),e(s)])]),t("td",wl,[t("a",zl,[l("[✓]"),e(s)])]),t("td",ql,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[El]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[Dl]),_:1}),l(),Pl]),t("td",Nl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tl,t("td",jl,[t("a",Sl,[l("打家劫舍"),e(s)])]),t("td",Vl,[t("a",Al,[l("[✓]"),e(s)])]),t("td",Cl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ll]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Rl]),_:1})]),t("td",Bl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ol,t("td",Ul,[t("a",Kl,[l("打家劫舍 II"),e(s)])]),Fl,t("td",Gl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ql]),_:1})]),t("td",Wl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xl,t("td",Yl,[t("a",Zl,[l("删除并获得点数"),e(s)])]),$l,t("td",to,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[lo]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[oo]),_:1})]),t("td",no,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[so,t("td",_o,[t("a",io,[l("3n 块披萨"),e(s)])]),ro,t("td",ao,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[co]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ho]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uo]),_:1}),l(),fo]),t("td",go,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mo,t("td",yo,[t("a",xo,[l("最长的斐波那契子序列的长度"),e(s)])]),po,t("td",bo,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ko]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Mo]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ho]),_:1})]),t("td",Io,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wo,t("td",zo,[t("a",qo,[l("最长等差数列"),e(s)])]),vo,t("td",Eo,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Po]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[No]),_:1}),l(),To]),t("td",jo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[So,t("td",Vo,[t("a",Ao,[l("形成字符串的最短路径"),e(s)])]),Co,t("td",Lo,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ro]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Bo]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Oo]),_:1}),l(),Uo]),t("td",Ko,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fo,t("td",Go,[t("a",Jo,[l("最大整除子集"),e(s)])]),Qo,t("td",Wo,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xo]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Yo]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Zo]),_:1}),l(),$o]),t("td",tn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[en,t("td",ln,[t("a",on,[l("最长有效括号"),e(s)])]),t("td",nn,[t("a",sn,[l("[✓]"),e(s)])]),t("td",dn,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[_n]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[rn]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[an]),_:1})]),t("td",cn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hn,t("td",un,[t("a",fn,[l("等差数列划分"),e(s)])]),gn,t("td",mn,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[xn]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[pn]),_:1})]),t("td",bn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kn,t("td",Mn,[t("a",Hn,[l("解码方法"),e(s)])]),In,t("td",wn,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[zn]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[qn]),_:1})]),t("td",vn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[En,t("td",Dn,[t("a",Pn,[l("解码方法 II"),e(s)])]),Nn,t("td",Tn,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Sn]),_:1})]),t("td",Vn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[An,t("td",Cn,[t("a",Ln,[l("分割回文串 II"),e(s)])]),Rn,t("td",Bn,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[On]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Un]),_:1})]),t("td",Kn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fn,t("td",Gn,[t("a",Jn,[l("统计元音字母序列的数目"),e(s)])]),Qn,t("td",Wn,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Xn]),_:1})]),t("td",Yn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zn,t("td",$n,[t("a",ts,[l("比特位计数"),e(s)])]),es,t("td",ls,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ns]),_:1})]),t("td",ss,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ds,t("td",_s,[t("a",is,[l("使序列递增的最小交换次数"),e(s)])]),rs,t("td",as,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[cs]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[hs]),_:1})]),t("td",us,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fs,t("td",gs,[t("a",ms,[l("最低加油次数"),e(s)])]),ys,t("td",xs,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[ps]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ks]),_:1}),l(),Ms]),t("td",Hs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Is,t("td",ws,[t("a",zs,[l("跳跃游戏 II"),e(s)])]),t("td",qs,[t("a",vs,[l("[✓]"),e(s)])]),t("td",Es,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ds]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ps]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ns]),_:1})]),t("td",Ts,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[js,t("td",Ss,[t("a",Vs,[l("最大平均值和的分组"),e(s)])]),As,t("td",Cs,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ls]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Rs]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[Bs]),_:1})]),t("td",Os,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Us,t("td",Ks,[t("a",Fs,[l("鸡蛋掉落"),e(s)])]),Gs,t("td",Js,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Qs]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Ws]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Xs]),_:1})]),t("td",Ys,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zs,t("td",$s,[t("a",td,[l("粉刷房子"),e(s)])]),ed,t("td",ld,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[od]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nd]),_:1})]),t("td",sd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dd,t("td",_d,[t("a",id,[l("粉刷房子 II"),e(s)])]),rd,t("td",ad,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[cd]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[hd]),_:1})]),t("td",ud,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fd,t("td",gd,[t("a",md,[l("粉刷房子 III"),e(s)])]),yd,t("td",xd,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pd]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[bd]),_:1})]),t("td",kd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Md,t("td",Hd,[t("a",Id,[l("奇偶跳"),e(s)])]),wd,t("td",zd,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[qd]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vd]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ed]),_:1}),l(),Dd]),t("td",Pd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nd,t("td",Td,[t("a",jd,[l("青蛙过河"),e(s)])]),Sd,t("td",Vd,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ad]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Cd]),_:1})]),t("td",Ld,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rd,t("td",Bd,[t("a",Od,[l("安排邮筒"),e(s)])]),Ud,t("td",Kd,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fd]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Gd]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Jd]),_:1}),l(),Qd]),t("td",Wd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xd,t("td",Yd,[t("a",Zd,[l("抛掷硬币"),e(s)])]),$d,t("td",t_,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[o_]),_:1}),l(),n_]),t("td",s_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d_,t("td",__,[t("a",i_,[l("分割数组的最大值"),e(s)])]),r_,t("td",a_,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[c_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[u_]),_:1}),l(),f_]),t("td",g_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m_,t("td",y_,[t("a",x_,[l("最多可以参加的会议数目 II"),e(s)])]),p_,t("td",b_,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k_]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[M_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[H_]),_:1}),l(),I_]),t("td",w_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z_,t("td",q_,[t("a",v_,[l("使所有区间的异或结果为零"),e(s)])]),E_,t("td",D_,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[P_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[N_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[T_]),_:1})]),t("td",j_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[S_,t("td",V_,[t("a",A_,[l("买卖股票的最佳时机"),e(s)])]),t("td",C_,[t("a",L_,[l("[✓]"),e(s)])]),t("td",R_,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[B_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[O_]),_:1})]),t("td",U_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[K_,t("td",F_,[t("a",G_,[l("买卖股票的最佳时机 II"),e(s)])]),t("td",J_,[t("a",Q_,[l("[✓]"),e(s)])]),t("td",W_,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Y_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Z_]),_:1})]),t("td",$_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ti,t("td",ei,[t("a",li,[l("买卖股票的最佳时机 III"),e(s)])]),t("td",oi,[t("a",ni,[l("[✓]"),e(s)])]),t("td",si,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[di]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_i]),_:1})]),t("td",ii,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ri,t("td",ai,[t("a",ci,[l("买卖股票的最佳时机 IV"),e(s)])]),t("td",hi,[t("a",ui,[l("[✓]"),e(s)])]),t("td",fi,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[gi]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[mi]),_:1})]),t("td",yi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xi,t("td",pi,[t("a",bi,[l("买卖股票的最佳时机含冷冻期"),e(s)])]),t("td",ki,[t("a",Mi,[l("[✓]"),e(s)])]),t("td",Hi,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ii]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wi]),_:1})]),t("td",zi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qi,t("td",vi,[t("a",Ei,[l("买卖股票的最佳时机含手续费"),e(s)])]),t("td",Di,[t("a",Pi,[l("[✓]"),e(s)])]),t("td",Ni,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ti]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ji]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Si]),_:1})]),t("td",Vi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])]),Ai,_(" prettier-ignore "),t("table",null,[Ci,t("tbody",null,[t("tr",null,[Li,t("td",Ri,[t("a",Bi,[l("最长公共子序列"),e(s)])]),t("td",Oi,[t("a",Ui,[l("[✓]"),e(s)])]),t("td",Ki,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Fi]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Gi]),_:1})]),t("td",Ji,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qi,t("td",Wi,[t("a",Xi,[l("两个字符串的最小ASCII删除和"),e(s)])]),t("td",Yi,[t("a",Zi,[l("[✓]"),e(s)])]),t("td",$i,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[tr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[er]),_:1})]),t("td",lr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[or,t("td",nr,[t("a",sr,[l("最长重复子数组"),e(s)])]),dr,t("td",_r,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ir]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[rr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ar]),_:1}),l(),cr]),t("td",hr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ur,t("td",fr,[t("a",gr,[l("两个字符串的删除操作"),e(s)])]),t("td",mr,[t("a",yr,[l("[✓]"),e(s)])]),t("td",xr,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[pr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[br]),_:1})]),t("td",kr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mr,t("td",Hr,[t("a",Ir,[l("编辑距离"),e(s)])]),t("td",wr,[t("a",zr,[l("[✓]"),e(s)])]),t("td",qr,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[vr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Er]),_:1})]),t("td",Dr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pr,t("td",Nr,[t("a",Tr,[l("通配符匹配"),e(s)])]),t("td",jr,[t("a",Sr,[l("[✓]"),e(s)])]),t("td",Vr,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ar]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Cr]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Lr]),_:1}),l(),Rr]),t("td",Br,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Or,t("td",Ur,[t("a",Kr,[l("正则表达式匹配"),e(s)])]),t("td",Fr,[t("a",Gr,[l("[✓]"),e(s)])]),t("td",Jr,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Qr]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Wr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Xr]),_:1})]),t("td",Yr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zr,t("td",$r,[t("a",ta,[l("交错字符串"),e(s)])]),t("td",ea,[t("a",la,[l("[✓]"),e(s)])]),t("td",oa,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[na]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sa]),_:1})]),t("td",da,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_a,t("td",ia,[t("a",ra,[l("不同的子序列"),e(s)])]),aa,t("td",ca,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ha]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ua]),_:1})]),t("td",fa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ga,t("td",ma,[t("a",ya,[l("扰乱字符串"),e(s)])]),xa,t("td",pa,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ba]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ka]),_:1})]),t("td",Ma,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])]),Ha,_(" prettier-ignore "),t("table",null,[Ia,t("tbody",null,[t("tr",null,[wa,t("td",za,[t("a",qa,[l("杨辉三角"),e(s)])]),t("td",va,[t("a",Ea,[l("[✓]"),e(s)])]),t("td",Da,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pa]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Na]),_:1})]),t("td",Ta,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ja,t("td",Sa,[t("a",Va,[l("杨辉三角 II"),e(s)])]),Aa,t("td",Ca,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[La]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ra]),_:1})]),t("td",Ba,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Oa,t("td",Ua,[t("a",Ka,[l("三角形最小路径和"),e(s)])]),t("td",Fa,[t("a",Ga,[l("[✓]"),e(s)])]),t("td",Ja,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qa]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Wa]),_:1})]),t("td",Xa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ya,t("td",Za,[t("a",$a,[l("最小路径和"),e(s)])]),t("td",tc,[t("a",ec,[l("[✓]"),e(s)])]),t("td",lc,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nc]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[sc]),_:1})]),t("td",dc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_c,t("td",ic,[t("a",rc,[l("地下城游戏"),e(s)])]),t("td",ac,[t("a",cc,[l("[✓]"),e(s)])]),t("td",hc,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fc]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[gc]),_:1})]),t("td",mc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yc,t("td",xc,[t("a",pc,[l("最大正方形"),e(s)])]),t("td",bc,[t("a",kc,[l("[✓]"),e(s)])]),t("td",Mc,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ic]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[wc]),_:1})]),t("td",zc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qc,t("td",vc,[t("a",Ec,[l("下降路径最小和"),e(s)])]),t("td",Dc,[t("a",Pc,[l("[✓]"),e(s)])]),t("td",Nc,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Tc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jc]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Sc]),_:1})]),t("td",Vc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ac,t("td",Cc,[t("a",Lc,[l("出界的路径数"),e(s)])]),Rc,t("td",Bc,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Oc]),_:1})]),t("td",Uc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kc,t("td",Fc,[t("a",Gc,[l("最大矩形"),e(s)])]),t("td",Jc,[t("a",Qc,[l("[✓]"),e(s)])]),t("td",Wc,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Xc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Zc]),_:1}),l(),$c]),t("td",t1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e1,t("td",l1,[t("a",o1,[l("矩形区域不超过 K 的最大数值和"),e(s)])]),n1,t("td",s1,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[d1]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[_1]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[i1]),_:1}),l(),r1]),t("td",a1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[c1,t("td",h1,[t("a",u1,[l("最大子矩阵"),e(s)])]),f1,t("td",g1,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[m1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[y1]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[x1]),_:1}),l(),p1]),t("td",b1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[k1,t("td",M1,[t("a",H1,[l("切披萨的方案数"),e(s)])]),I1,t("td",w1,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[z1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[q1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[v1]),_:1}),l(),E1]),t("td",D1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])]),P1,_(" prettier-ignore "),t("table",null,[N1,t("tbody",null,[t("tr",null,[T1,t("td",j1,[t("a",S1,[l("第 N 个泰波那契数"),e(s)])]),t("td",V1,[t("a",A1,[l("[✓]"),e(s)])]),t("td",C1,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[L1]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[R1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[B1]),_:1})]),t("td",O1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[U1,t("td",K1,[t("a",F1,[l("两个键的键盘"),e(s)])]),G1,t("td",J1,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Q1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[W1]),_:1})]),t("td",X1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y1,t("td",Z1,[t("a",$1,[l("丑数 II"),e(s)])]),t("td",th,[t("a",eh,[l("[✓]"),e(s)])]),t("td",lh,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[oh]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[nh]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sh]),_:1}),l(),dh]),t("td",_h,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ih,t("td",rh,[t("a",ah,[l("完全平方数"),e(s)])]),t("td",ch,[t("a",hh,[l("[✓]"),e(s)])]),t("td",uh,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[fh]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[gh]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[mh]),_:1})]),t("td",yh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xh,t("td",ph,[t("a",bh,[l("整数拆分"),e(s)])]),t("td",kh,[t("a",Mh,[l("[✓]"),e(s)])]),t("td",Hh,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Ih]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wh]),_:1})]),t("td",zh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])]),qh,vh,_(" prettier-ignore "),t("table",null,[Eh,t("tbody",null,[t("tr",null,[Dh,t("td",Ph,[t("a",Nh,[l("分割等和子集"),e(s)])]),t("td",Th,[t("a",jh,[l("[✓]"),e(s)])]),t("td",Sh,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Vh]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ah]),_:1})]),t("td",Ch,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lh,t("td",Rh,[t("a",Bh,[l("目标和"),e(s)])]),t("td",Oh,[t("a",Uh,[l("[✓]"),e(s)])]),t("td",Kh,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fh]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Gh]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Jh]),_:1})]),t("td",Qh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wh,t("td",Xh,[t("a",Yh,[l("最后一块石头的重量 II"),e(s)])]),t("td",Zh,[t("a",$h,[l("[✓]"),e(s)])]),t("td",tu,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[eu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[lu]),_:1})]),t("td",ou,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])]),nu,_(" prettier-ignore "),t("table",null,[su,t("tbody",null,[t("tr",null,[du,t("td",_u,[t("a",iu,[l("完全平方数"),e(s)])]),t("td",ru,[t("a",au,[l("[✓]"),e(s)])]),t("td",cu,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hu]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[uu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fu]),_:1})]),t("td",gu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mu,t("td",yu,[t("a",xu,[l("零钱兑换"),e(s)])]),t("td",pu,[t("a",bu,[l("[✓]"),e(s)])]),t("td",ku,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Mu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Iu]),_:1})]),t("td",wu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zu,t("td",qu,[t("a",vu,[l("零钱兑换 II"),e(s)])]),t("td",Eu,[t("a",Du,[l("[✓]"),e(s)])]),t("td",Pu,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Nu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Tu]),_:1})]),t("td",ju,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Su,t("td",Vu,[t("a",Au,[l("单词拆分"),e(s)])]),t("td",Cu,[t("a",Lu,[l("[✓]"),e(s)])]),t("td",Ru,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Bu]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Ou]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Uu]),_:1}),l(),Ku]),t("td",Fu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gu,t("td",Ju,[t("a",Qu,[l("组合总和 Ⅳ"),e(s)])]),Wu,t("td",Xu,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Zu]),_:1})]),t("td",$u,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tf,t("td",ef,[t("a",lf,[l("大礼包"),e(s)])]),of,t("td",nf,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[sf]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[df]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_f]),_:1}),l(),rf]),t("td",af,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cf,t("td",hf,[t("a",uf,[l("数位成本和为目标值的最大数字"),e(s)])]),ff,t("td",gf,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mf]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[yf]),_:1})]),t("td",xf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])]),pf,_(" prettier-ignore "),t("table",null,[bf,t("tbody",null,[t("tr",null,[kf,t("td",Mf,[t("a",Hf,[l("掷骰子等于目标和的方法数"),e(s)])]),If,t("td",wf,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zf]),_:1})]),t("td",qf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vf,t("td",Ef,[t("a",Df,[l("获得分数的方法数"),e(s)])]),Pf,t("td",Nf,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Tf]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jf]),_:1})]),t("td",Sf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])]),Vf,_(" prettier-ignore "),t("table",null,[Af,t("tbody",null,[t("tr",null,[Cf,t("td",Lf,[t("a",Rf,[l("一和零"),e(s)])]),t("td",Bf,[t("a",Of,[l("[✓]"),e(s)])]),t("td",Uf,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Kf]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ff]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Gf]),_:1})]),t("td",Jf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qf,t("td",Wf,[t("a",Xf,[l("盈利计划"),e(s)])]),Yf,t("td",Zf,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$f]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[tg]),_:1})]),t("td",eg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lg,t("td",og,[t("a",ng,[l("统计特殊四元组"),e(s)])]),sg,t("td",dg,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_g]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[ig]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[rg]),_:1})]),t("td",ag,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])]),cg,_(" prettier-ignore "),t("table",null,[hg,t("tbody",null,[t("tr",null,[ug,t("td",fg,[t("a",gg,[l("预测赢家"),e(s)])]),mg,t("td",yg,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[xg]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pg]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[bg]),_:1}),l(),kg]),t("td",Mg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hg,t("td",Ig,[t("a",wg,[l("戳气球"),e(s)])]),zg,t("td",qg,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vg]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Eg]),_:1})]),t("td",Dg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pg,t("td",Ng,[t("a",Tg,[l("石子游戏"),e(s)])]),jg,t("td",Sg,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Vg]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Ag]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Cg]),_:1}),l(),Lg]),t("td",Rg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bg,t("td",Og,[t("a",Ug,[l("合并石头的最低成本"),e(s)])]),Kg,t("td",Fg,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gg]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Jg]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[Qg]),_:1})]),t("td",Wg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xg,t("td",Yg,[t("a",Zg,[l("切棍子的最小成本"),e(s)])]),$g,t("td",tm,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[em]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[lm]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[om]),_:1})]),t("td",nm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sm,t("td",dm,[t("a",_m,[l("奇怪的打印机"),e(s)])]),im,t("td",rm,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[am]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[cm]),_:1})]),t("td",hm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[um,t("td",fm,[t("a",gm,[l("多边形三角剖分的最低得分"),e(s)])]),mm,t("td",ym,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xm]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[pm]),_:1})]),t("td",bm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[km,t("td",Mm,[t("a",Hm,[l("移除盒子"),e(s)])]),Im,t("td",wm,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[zm]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qm]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[vm]),_:1})]),t("td",Em,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dm,t("td",Pm,[t("a",Nm,[l("猜数字大小 II"),e(s)])]),t("td",Tm,[t("a",jm,[l("[✓]"),e(s)])]),t("td",Sm,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Vm]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Am]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[Cm]),_:1})]),t("td",Lm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rm,t("td",Bm,[t("a",Om,[l("有效的括号字符串"),e(s)])]),t("td",Um,[t("a",Km,[l("[✓]"),e(s)])]),t("td",Fm,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Gm]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Jm]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Qm]),_:1}),l(),Wm]),t("td",Xm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ym,t("td",Zm,[t("a",$m,[l("最长回文子串"),e(s)])]),t("td",ty,[t("a",ey,[l("[✓]"),e(s)])]),t("td",ly,[e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[oy]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ny]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sy]),_:1})]),t("td",dy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_y,t("td",iy,[t("a",ry,[l("最长回文子序列"),e(s)])]),t("td",ay,[t("a",cy,[l("[✓]"),e(s)])]),t("td",hy,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[uy]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fy]),_:1})]),t("td",gy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[my,t("td",yy,[t("a",xy,[l("统计不同回文子序列"),e(s)])]),py,t("td",by,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ky]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[My]),_:1})]),t("td",Hy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Iy,t("td",wy,[t("a",zy,[l("子数组范围和"),e(s)])]),qy,t("td",vy,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ey]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Dy]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[Py]),_:1})]),t("td",Ny,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])]),Ty,jy,_(" prettier-ignore "),t("table",null,[Sy,t("tbody",null,[t("tr",null,[Vy,t("td",Ay,[t("a",Cy,[l("二叉树的直径"),e(s)])]),t("td",Ly,[t("a",Ry,[l("[✓]"),e(s)])]),t("td",By,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Oy]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Uy]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Ky]),_:1})]),t("td",Fy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Gy,t("td",Jy,[t("a",Qy,[l("二叉树中的最大路径和"),e(s)])]),t("td",Wy,[t("a",Xy,[l("[✓]"),e(s)])]),t("td",Yy,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Zy]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$y]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[tx]),_:1}),l(),ex]),t("td",lx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ox,t("td",nx,[t("a",sx,[l("树的直径"),e(s)])]),dx,t("td",_x,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ix]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rx]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ax]),_:1}),l(),cx]),t("td",hx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ux,t("td",fx,[t("a",gx,[l("相邻字符不同的最长路径"),e(s)])]),mx,t("td",yx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[xx]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[px]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[bx]),_:1}),l(),kx]),t("td",Mx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hx,t("td",Ix,[t("a",wx,[l("最长同值路径"),e(s)])]),zx,t("td",qx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vx]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ex]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Dx]),_:1})]),t("td",Px,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nx,t("td",Tx,[t("a",jx,[l("打家劫舍 III"),e(s)])]),Sx,t("td",Vx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ax]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Cx]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Lx]),_:1}),l(),Rx]),t("td",Bx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ox,t("td",Ux,[t("a",Kx,[l("最大二叉搜索子树"),e(s)])]),Fx,t("td",Gx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Jx]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Qx]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Wx]),_:1}),l(),Xx]),t("td",Yx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zx,t("td",$x,[t("a",tp,[l("统计子树中城市之间最大距离"),e(s)])]),ep,t("td",lp,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[op]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[np]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sp]),_:1}),l(),dp]),t("td",_p,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ip,t("td",rp,[t("a",ap,[l("最大价值和与最小价值和的差值"),e(s)])]),cp,t("td",hp,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[up]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fp]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[gp]),_:1}),l(),mp]),t("td",yp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xp,t("td",pp,[t("a",bp,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),kp,t("td",Mp,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Hp]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ip]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[wp]),_:1}),l(),zp]),t("td",qp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vp,t("td",Ep,[t("a",Dp,[l("二叉树中的最长交错路径"),e(s)])]),Pp,t("td",Np,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Tp]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jp]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Sp]),_:1}),l(),Vp]),t("td",Ap,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cp,t("td",Lp,[t("a",Rp,[l("二叉搜索子树的最大键值和"),e(s)])]),Bp,t("td",Op,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Up]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Kp]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Fp]),_:1}),l(),Gp]),t("td",Jp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qp,t("td",Wp,[t("a",Xp,[l("监控二叉树"),e(s)])]),Yp,t("td",Zp,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$p]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tb]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[eb]),_:1}),l(),lb]),t("td",ob,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nb,t("td",sb,[t("a",db,[l("删除树节点"),e(s)])]),_b,t("td",ib,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[rb]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ab]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cb]),_:1}),l(),hb]),t("td",ub,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fb,t("td",gb,[t("a",mb,[l("子树中标签相同的节点数"),e(s)])]),yb,t("td",xb,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[pb]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[bb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kb]),_:1}),l(),Mb]),t("td",Hb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])]),Ib,_(" prettier-ignore "),t("table",null,[wb,t("tbody",null,[t("tr",null,[zb,t("td",qb,[t("a",vb,[l("最小高度树"),e(s)])]),Eb,t("td",Db,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Pb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Nb]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Tb]),_:1}),l(),jb]),t("td",Sb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vb,t("td",Ab,[t("a",Cb,[l("树中距离之和"),e(s)])]),Lb,t("td",Rb,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Bb]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ob]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ub]),_:1}),l(),Kb]),t("td",Fb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gb,t("td",Jb,[t("a",Qb,[l("统计可能的树根数目"),e(s)])]),Wb,t("td",Xb,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Yb]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Zb]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$b]),_:1}),l(),t3]),t("td",e3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])]),l3,_(" prettier-ignore "),t("table",null,[o3,t("tbody",null,[t("tr",null,[n3,t("td",s3,[t("a",d3,[l("两个数组最小的异或值之和"),e(s)])]),_3,t("td",i3,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[r3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[a3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[c3]),_:1}),l(),h3]),t("td",u3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f3,t("td",g3,[t("a",m3,[l("数组的最大与和"),e(s)])]),y3,t("td",x3,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[p3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[b3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[k3]),_:1}),l(),M3]),t("td",H3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[I3,t("td",w3,[t("a",z3,[l("最大兼容性评分和"),e(s)])]),q3,t("td",v3,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[E3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[D3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[P3]),_:1}),l(),N3]),t("td",T3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j3,t("td",S3,[t("a",V3,[l("连通两组点的最小成本"),e(s)])]),A3,t("td",C3,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[L3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[R3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[B3]),_:1}),l(),O3]),t("td",U3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K3,t("td",F3,[t("a",G3,[l("并行课程 II"),e(s)])]),J3,t("td",Q3,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[W3]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[X3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Y3]),_:1}),l(),Z3]),t("td",$3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t0,t("td",e0,[t("a",l0,[l("分配重复整数"),e(s)])]),o0,t("td",n0,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[s0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[d0]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_0]),_:1}),l(),i0]),t("td",r0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[a0,t("td",c0,[t("a",h0,[l("完成任务的最少工作时间段"),e(s)])]),u0,t("td",f0,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[g0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[m0]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[y0]),_:1}),l(),x0]),t("td",p0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b0,t("td",k0,[t("a",M0,[l("每个人戴不同帽子的方案数"),e(s)])]),H0,t("td",I0,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[w0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[z0]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[q0]),_:1}),l(),v0]),t("td",E0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D0,t("td",P0,[t("a",N0,[l("N 次操作后的最大分数和"),e(s)])]),T0,t("td",j0,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[S0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[V0]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[A0]),_:1}),l(),C0]),t("td",L0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R0,t("td",B0,[t("a",O0,[l("最小不兼容性"),e(s)])]),U0,t("td",K0,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[F0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[G0]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[J0]),_:1}),l(),Q0]),t("td",W0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[X0,t("td",Y0,[t("a",Z0,[l("优美的排列"),e(s)])]),$0,t("td",t4,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[e4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[l4]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[o4]),_:1}),l(),n4]),t("td",s4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d4,t("td",_4,[t("a",i4,[l("安卓系统手势解锁"),e(s)])]),r4,t("td",a4,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[c4]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[h4]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[u4]),_:1}),l(),f4]),t("td",g4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m4,t("td",y4,[t("a",x4,[l("我能赢吗"),e(s)])]),p4,t("td",b4,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[k4]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[M4]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[H4]),_:1}),l(),I4]),t("td",w4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z4,t("td",q4,[t("a",v4,[l("访问所有节点的最短路径"),e(s)])]),E4,t("td",D4,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[P4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[N4]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[T4]),_:1}),l(),j4]),t("td",S4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V4,t("td",A4,[t("a",C4,[l("大礼包"),e(s)])]),L4,t("td",R4,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[B4]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[O4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[U4]),_:1}),l(),K4]),t("td",F4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G4,t("td",J4,[t("a",Q4,[l("好子集的数目"),e(s)])]),W4,t("td",X4,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Y4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Z4]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[$4]),_:1}),l(),t2]),t("td",e2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l2,t("td",o2,[t("a",n2,[l("参加考试的最大学生数"),e(s)])]),s2,t("td",d2,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[_2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[i2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[r2]),_:1}),l(),a2]),t("td",c2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[h2,t("td",u2,[t("a",f2,[l("划分为k个相等的子集"),e(s)])]),g2,t("td",m2,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[y2]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[x2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[p2]),_:1}),l(),b2]),t("td",k2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M2,t("td",H2,[t("a",I2,[l("最短超级串"),e(s)])]),w2,t("td",z2,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[q2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[v2]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[E2]),_:1}),l(),D2]),t("td",P2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[N2,t("td",T2,[t("a",j2,[l("贴纸拼词"),e(s)])]),S2,t("td",V2,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[A2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[C2]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[L2]),_:1}),l(),R2]),t("td",B2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[O2,t("td",U2,[t("a",K2,[l("按位与为零的三元组"),e(s)])]),F2,t("td",G2,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[J2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Q2]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[W2]),_:1})]),t("td",X2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])]),Y2,_(" prettier-ignore "),t("table",null,[Z2,t("tbody",null,[t("tr",null,[$2,t("td",t6,[t("a",e6,[l("不同路径"),e(s)])]),t("td",l6,[t("a",o6,[l("[✓]"),e(s)])]),t("td",n6,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[s6]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[d6]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[_6]),_:1})]),t("td",i6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r6,t("td",a6,[t("a",c6,[l("不同路径 II"),e(s)])]),t("td",h6,[t("a",u6,[l("[✓]"),e(s)])]),t("td",f6,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[g6]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[m6]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[y6]),_:1})]),t("td",x6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p6,t("td",b6,[t("a",k6,[l("整数拆分"),e(s)])]),t("td",M6,[t("a",H6,[l("[✓]"),e(s)])]),t("td",I6,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[w6]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[z6]),_:1})]),t("td",q6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v6,t("td",E6,[t("a",D6,[l("不同的二叉搜索树"),e(s)])]),t("td",P6,[t("a",N6,[l("[✓]"),e(s)])]),t("td",T6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[j6]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[S6]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[V6]),_:1}),l(),A6]),t("td",C6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L6,t("td",R6,[t("a",B6,[l("不相交的握手"),e(s)])]),O6,t("td",U6,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[K6]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[F6]),_:1})]),t("td",G6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J6,t("td",Q6,[t("a",W6,[l("多米诺和托米诺平铺"),e(s)])]),X6,t("td",Y6,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Z6]),_:1})]),t("td",$6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t5,t("td",e5,[t("a",l5,[l("爬楼梯"),e(s)])]),t("td",o5,[t("a",n5,[l("[✓]"),e(s)])]),t("td",s5,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[d5]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[_5]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[i5]),_:1})]),t("td",r5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[a5,t("td",c5,[t("a",h5,[l("使用最小花费爬楼梯"),e(s)])]),u5,t("td",f5,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[g5]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[m5]),_:1})]),t("td",y5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[x5,t("td",p5,[t("a",b5,[l("斐波那契数"),e(s)])]),t("td",k5,[t("a",M5,[l("[✓]"),e(s)])]),t("td",H5,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[I5]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[w5]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[z5]),_:1}),l(),q5]),t("td",v5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[E5,t("td",D5,[t("a",P5,[l("第 N 个泰波那契数"),e(s)])]),t("td",N5,[t("a",T5,[l("[✓]"),e(s)])]),t("td",j5,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[S5]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[V5]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[A5]),_:1})]),t("td",C5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])]),L5,_(" prettier-ignore "),t("table",null,[R5,t("tbody",null,[t("tr",null,[B5,t("td",O5,[t("a",U5,[l("统计特殊整数"),e(s)])]),K5,t("td",F5,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[G5]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[J5]),_:1})]),t("td",Q5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W5,t("td",X5,[t("a",Y5,[l("统计各位数字都不同的数字个数"),e(s)])]),Z5,t("td",$5,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[t8]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[e8]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[l8]),_:1})]),t("td",o8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n8,t("td",s8,[t("a",d8,[l("至少有 1 位重复的数字"),e(s)])]),_8,t("td",i8,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[r8]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[a8]),_:1})]),t("td",c8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[h8,t("td",u8,[t("a",f8,[l("最大为 N 的数字组合"),e(s)])]),g8,t("td",m8,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y8]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[x8]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[p8]),_:1}),l(),b8]),t("td",k8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[M8,t("td",H8,[t("a",I8,[l("旋转数字"),e(s)])]),w8,t("td",z8,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[q8]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[v8]),_:1})]),t("td",E8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D8,t("td",P8,[t("a",N8,[l("不含连续1的非负整数"),e(s)])]),T8,t("td",j8,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[S8]),_:1})]),t("td",V8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A8,t("td",C8,[t("a",L8,[l("数字 1 的个数"),e(s)])]),R8,t("td",B8,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[O8]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[U8]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[K8]),_:1})]),t("td",F8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[G8,t("td",J8,[t("a",Q8,[l("统计整数数目"),e(s)])]),W8,t("td",X8,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Y8]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Z8]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$8]),_:1})]),t("td",t7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e7,t("td",l7,[t("a",o7,[l("中心对称数 III"),e(s)])]),n7,t("td",s7,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[d7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_7]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[i7]),_:1})]),t("td",r7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[a7,t("td",c7,[t("a",h7,[l("易混淆数 II"),e(s)])]),u7,t("td",f7,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[g7]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[m7]),_:1})]),t("td",y7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x7,t("td",p7,[t("a",b7,[l("范围内的数字计数"),e(s)])]),k7,t("td",M7,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[H7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[I7]),_:1})]),t("td",w7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z7,t("td",q7,[t("a",v7,[l("盒子中小球的最大数量"),e(s)])]),E7,t("td",D7,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[P7]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[N7]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[T7]),_:1})]),t("td",j7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[S7,t("td",V7,[t("a",A7,[l("2出现的次数"),e(s)])]),C7,t("td",L7,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[R7]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[B7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[O7]),_:1})]),t("td",U7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])]),K7,_(" prettier-ignore "),t("table",null,[F7,t("tbody",null,[t("tr",null,[G7,t("td",J7,[t("a",Q7,[l("骑士在棋盘上的概率"),e(s)])]),W7,t("td",X7,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Y7]),_:1})]),t("td",Z7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$7,t("td",t9,[t("a",e9,[l("分汤"),e(s)])]),l9,t("td",o9,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[n9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[s9]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[d9]),_:1})]),t("td",_9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i9,t("td",r9,[t("a",a9,[l("新 21 点"),e(s)])]),c9,t("td",h9,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[u9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[f9]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[g9]),_:1}),l(),m9]),t("td",y9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x9,t("td",p9,[t("a",b9,[l("抛掷硬币"),e(s)])]),k9,t("td",M9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[H9]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[I9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[w9]),_:1}),l(),z9]),t("td",q9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v9,t("td",E9,[t("a",D9,[l("两个盒子中球的颜色数相同的概率"),e(s)])]),P9,t("td",N9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[T9]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[j9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[S9]),_:1}),l(),V9]),t("td",A9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[C9,t("td",L9,[t("a",R9,[l("飞机座位分配概率"),e(s)])]),B9,t("td",O9,[e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[U9]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[K9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[F9]),_:1}),l(),G9]),t("td",J9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q9,t("td",W9,[t("a",X9,[l("T 秒后青蛙的位置"),e(s)])]),Y9,t("td",Z9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ek]),_:1}),l(),lk]),t("td",ok,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nk,t("td",sk,[t("a",dk,[l("n个骰子的点数"),e(s)])]),t("td",_k,[t("a",ik,[l("[✓]"),e(s)])]),t("td",rk,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[ak]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ck]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[hk]),_:1})]),t("td",uk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const xk=r(u,[["render",fk],["__file","dynamic_programming.html.vue"]]);export{xk as default};
