import{_ as c,r as _,o as a,c as r,a as t,d as e,w as o,b as l,f as i}from"./app-JnDxddK3.js";const h={},u=t("h1",{id:"二叉搜索树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#二叉搜索树","aria-hidden":"true"},"#"),l(" 二叉搜索树")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),x=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),E=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),q=t("span",{class:"blue"},"二叉搜索树",-1),B=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),L=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),H=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),P=t("code",null,"并查集",-1),Q=t("code",null,"字典树",-1),R=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),S=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),A=t("code",null,"枚举",-1),D=t("code",null,"递归",-1),F=t("code",null,"分治",-1),J=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),ct=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),it=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ut=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),xt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),Et=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),qt=t("code",null,"脑筋急转弯",-1),Bt=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Lt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ht=t("td",{style:{"text-align":"center"}},"95",-1),Kt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Pt={style:{"text-align":"center"}},Qt={style:{"text-align":"left"}},Rt=t("code",null,"树",-1),Gt=t("code",null,"二叉搜索树",-1),St=t("code",null,"动态规划",-1),Yt=t("code",null,"2+",-1),At={style:{"text-align":"left"}},Dt=t("td",{style:{"text-align":"center"}},"96",-1),Ft={style:{"text-align":"left"}},Jt={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Wt={style:{"text-align":"left"}},Xt=t("code",null,"树",-1),Zt=t("code",null,"二叉搜索树",-1),$t=t("code",null,"数学",-1),te=t("code",null,"2+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"98",-1),oe={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ne={style:{"text-align":"center"}},de={style:{"text-align":"left"}},_e=t("code",null,"树",-1),ce=t("code",null,"深度优先搜索",-1),ae=t("code",null,"二叉搜索树",-1),re=t("code",null,"1+",-1),ie={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"99",-1),ue={style:{"text-align":"left"}},fe={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ge={style:{"text-align":"center"}},me={style:{"text-align":"left"}},ye=t("code",null,"树",-1),be=t("code",null,"深度优先搜索",-1),xe=t("code",null,"二叉搜索树",-1),pe=t("code",null,"1+",-1),ke={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"108",-1),Ie={style:{"text-align":"left"}},Ee={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ve={style:{"text-align":"center"}},we={style:{"text-align":"left"}},ze=t("code",null,"树",-1),je=t("code",null,"二叉搜索树",-1),Oe=t("code",null,"数组",-1),qe=t("code",null,"2+",-1),Be={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"109",-1),Ce={style:{"text-align":"left"}},Le={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ve={style:{"text-align":"center"}},He={style:{"text-align":"left"}},Ke=t("code",null,"树",-1),Te=t("code",null,"二叉搜索树",-1),Pe=t("code",null,"链表",-1),Qe=t("code",null,"2+",-1),Re={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"173",-1),Se={style:{"text-align":"left"}},Ye={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Ae={style:{"text-align":"center"}},De={style:{"text-align":"left"}},Fe=t("code",null,"栈",-1),Je=t("code",null,"树",-1),Ue=t("code",null,"设计",-1),We=t("code",null,"3+",-1),Xe={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"230",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},el={style:{"text-align":"center"}},ll={style:{"text-align":"left"}},ol=t("code",null,"树",-1),sl=t("code",null,"深度优先搜索",-1),nl=t("code",null,"二叉搜索树",-1),dl=t("code",null,"1+",-1),_l={style:{"text-align":"left"}},cl=t("td",{style:{"text-align":"center"}},"235",-1),al={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},il={style:{"text-align":"center"}},hl={style:{"text-align":"left"}},ul=t("code",null,"树",-1),fl=t("code",null,"深度优先搜索",-1),gl=t("code",null,"二叉搜索树",-1),ml=t("code",null,"1+",-1),yl={style:{"text-align":"left"}},bl=t("td",{style:{"text-align":"center"}},"255",-1),xl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),Ml={style:{"text-align":"left"}},Il=t("code",null,"栈",-1),El=t("code",null,"树",-1),vl=t("code",null,"二叉搜索树",-1),wl=t("code",null,"4+",-1),zl={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"270",-1),Ol={style:{"text-align":"left"}},ql={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},Bl=t("td",{style:{"text-align":"center"}},null,-1),Nl={style:{"text-align":"left"}},Cl=t("code",null,"树",-1),Ll=t("code",null,"深度优先搜索",-1),Vl=t("code",null,"二叉搜索树",-1),Hl=t("code",null,"2+",-1),Kl={style:{"text-align":"left"}},Tl=t("td",{style:{"text-align":"center"}},"272",-1),Pl={style:{"text-align":"left"}},Ql={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},Rl=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Sl=t("code",null,"栈",-1),Yl=t("code",null,"树",-1),Al=t("code",null,"深度优先搜索",-1),Dl=t("code",null,"4+",-1),Fl={style:{"text-align":"left"}},Jl=t("td",{style:{"text-align":"center"}},"285",-1),Ul={style:{"text-align":"left"}},Wl={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},Xl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},$l=t("code",null,"树",-1),to=t("code",null,"深度优先搜索",-1),eo=t("code",null,"二叉搜索树",-1),lo=t("code",null,"1+",-1),oo={style:{"text-align":"left"}},so=t("td",{style:{"text-align":"center"}},"333",-1),no={style:{"text-align":"left"}},_o={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},co=t("td",{style:{"text-align":"center"}},null,-1),ao={style:{"text-align":"left"}},ro=t("code",null,"树",-1),io=t("code",null,"深度优先搜索",-1),ho=t("code",null,"二叉搜索树",-1),uo=t("code",null,"2+",-1),fo={style:{"text-align":"left"}},go=t("td",{style:{"text-align":"center"}},"426",-1),mo={style:{"text-align":"left"}},yo={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},bo={style:{"text-align":"center"}},xo={style:{"text-align":"left"}},po=t("code",null,"栈",-1),ko=t("code",null,"树",-1),Mo=t("code",null,"深度优先搜索",-1),Io=t("code",null,"4+",-1),Eo={style:{"text-align":"left"}},vo=t("td",{style:{"text-align":"center"}},"449",-1),wo={style:{"text-align":"left"}},zo={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},jo=t("td",{style:{"text-align":"center"}},null,-1),Oo={style:{"text-align":"left"}},qo=t("code",null,"树",-1),Bo=t("code",null,"深度优先搜索",-1),No=t("code",null,"广度优先搜索",-1),Co=t("code",null,"4+",-1),Lo={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"450",-1),Ho={style:{"text-align":"left"}},Ko={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},To={style:{"text-align":"center"}},Po={style:{"text-align":"left"}},Qo=t("code",null,"树",-1),Ro=t("code",null,"二叉搜索树",-1),Go=t("code",null,"二叉树",-1),So={style:{"text-align":"left"}},Yo=t("td",{style:{"text-align":"center"}},"501",-1),Ao={style:{"text-align":"left"}},Do={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Fo=t("td",{style:{"text-align":"center"}},null,-1),Jo={style:{"text-align":"left"}},Uo=t("code",null,"树",-1),Wo=t("code",null,"深度优先搜索",-1),Xo=t("code",null,"二叉搜索树",-1),Zo=t("code",null,"1+",-1),$o={style:{"text-align":"left"}},ts=t("td",{style:{"text-align":"center"}},"510",-1),es={style:{"text-align":"left"}},ls={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},os=t("td",{style:{"text-align":"center"}},null,-1),ss={style:{"text-align":"left"}},ns=t("code",null,"树",-1),ds=t("code",null,"二叉搜索树",-1),_s=t("code",null,"二叉树",-1),cs={style:{"text-align":"left"}},as=t("td",{style:{"text-align":"center"}},"530",-1),rs={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},hs={style:{"text-align":"center"}},us={style:{"text-align":"left"}},fs=t("code",null,"树",-1),gs=t("code",null,"深度优先搜索",-1),ms=t("code",null,"广度优先搜索",-1),ys=t("code",null,"2+",-1),bs={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"538",-1),ps={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Ms=t("td",{style:{"text-align":"center"}},null,-1),Is={style:{"text-align":"left"}},Es=t("code",null,"树",-1),vs=t("code",null,"深度优先搜索",-1),ws=t("code",null,"二叉搜索树",-1),zs=t("code",null,"1+",-1),js={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"653",-1),qs={style:{"text-align":"left"}},Bs={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),Cs={style:{"text-align":"left"}},Ls=t("code",null,"树",-1),Vs=t("code",null,"深度优先搜索",-1),Hs=t("code",null,"广度优先搜索",-1),Ks=t("code",null,"4+",-1),Ts={style:{"text-align":"left"}},Ps=t("td",{style:{"text-align":"center"}},"669",-1),Qs={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Gs=t("td",{style:{"text-align":"center"}},null,-1),Ss={style:{"text-align":"left"}},Ys=t("code",null,"树",-1),As=t("code",null,"深度优先搜索",-1),Ds=t("code",null,"二叉搜索树",-1),Fs=t("code",null,"1+",-1),Js={style:{"text-align":"left"}},Us=t("td",{style:{"text-align":"center"}},"700",-1),Ws={style:{"text-align":"left"}},Xs={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Zs={style:{"text-align":"center"}},$s={style:{"text-align":"left"}},tn=t("code",null,"树",-1),en=t("code",null,"二叉搜索树",-1),ln=t("code",null,"二叉树",-1),on={style:{"text-align":"left"}},sn=t("td",{style:{"text-align":"center"}},"701",-1),nn={style:{"text-align":"left"}},dn={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},_n={style:{"text-align":"center"}},cn={style:{"text-align":"left"}},an=t("code",null,"树",-1),rn=t("code",null,"二叉搜索树",-1),hn=t("code",null,"二叉树",-1),un={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"703",-1),gn={style:{"text-align":"left"}},mn={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},yn={style:{"text-align":"center"}},bn={style:{"text-align":"left"}},xn=t("code",null,"树",-1),pn=t("code",null,"设计",-1),kn=t("code",null,"二叉搜索树",-1),Mn=t("code",null,"3+",-1),In={style:{"text-align":"left"}},En=t("td",{style:{"text-align":"center"}},"776",-1),vn={style:{"text-align":"left"}},wn={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},zn=t("td",{style:{"text-align":"center"}},null,-1),jn={style:{"text-align":"left"}},On=t("code",null,"树",-1),qn=t("code",null,"二叉搜索树",-1),Bn=t("code",null,"递归",-1),Nn=t("code",null,"1+",-1),Cn={style:{"text-align":"left"}},Ln=t("td",{style:{"text-align":"center"}},"783",-1),Vn={style:{"text-align":"left"}},Hn={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},Kn={style:{"text-align":"center"}},Tn={style:{"text-align":"left"}},Pn=t("code",null,"树",-1),Qn=t("code",null,"深度优先搜索",-1),Rn=t("code",null,"广度优先搜索",-1),Gn=t("code",null,"2+",-1),Sn={style:{"text-align":"left"}},Yn=t("td",{style:{"text-align":"center"}},"897",-1),An={style:{"text-align":"left"}},Dn={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},Fn=t("td",{style:{"text-align":"center"}},null,-1),Jn={style:{"text-align":"left"}},Un=t("code",null,"栈",-1),Wn=t("code",null,"树",-1),Xn=t("code",null,"深度优先搜索",-1),Zn=t("code",null,"2+",-1),$n={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"938",-1),ed={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},od=t("td",{style:{"text-align":"center"}},null,-1),sd={style:{"text-align":"left"}},nd=t("code",null,"树",-1),dd=t("code",null,"深度优先搜索",-1),_d=t("code",null,"二叉搜索树",-1),cd=t("code",null,"1+",-1),ad={style:{"text-align":"left"}},rd=t("td",{style:{"text-align":"center"}},"1008",-1),id={style:{"text-align":"left"}},hd={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},ud={style:{"text-align":"center"}},fd={style:{"text-align":"left"}},gd=t("code",null,"栈",-1),md=t("code",null,"树",-1),yd=t("code",null,"二叉搜索树",-1),bd=t("code",null,"3+",-1),xd={style:{"text-align":"left"}},pd=t("td",{style:{"text-align":"center"}},"1038",-1),kd={style:{"text-align":"left"}},Md={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},Id=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},vd=t("code",null,"树",-1),wd=t("code",null,"深度优先搜索",-1),zd=t("code",null,"二叉搜索树",-1),jd=t("code",null,"1+",-1),Od={style:{"text-align":"left"}},qd=t("td",{style:{"text-align":"center"}},"1214",-1),Bd={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},Cd=t("td",{style:{"text-align":"center"}},null,-1),Ld={style:{"text-align":"left"}},Vd=t("code",null,"栈",-1),Hd=t("code",null,"树",-1),Kd=t("code",null,"深度优先搜索",-1),Td=t("code",null,"4+",-1),Pd={style:{"text-align":"left"}},Qd=t("td",{style:{"text-align":"center"}},"1305",-1),Rd={style:{"text-align":"left"}},Gd={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},Sd=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},Ad=t("code",null,"树",-1),Dd=t("code",null,"深度优先搜索",-1),Fd=t("code",null,"二叉搜索树",-1),Jd=t("code",null,"2+",-1),Ud={style:{"text-align":"left"}},Wd=t("td",{style:{"text-align":"center"}},"1373",-1),Xd={style:{"text-align":"left"}},Zd={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"树",-1),l_=t("code",null,"深度优先搜索",-1),o_=t("code",null,"二叉搜索树",-1),s_=t("code",null,"2+",-1),n_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"1382",-1),__={style:{"text-align":"left"}},c_={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},a_=t("td",{style:{"text-align":"center"}},null,-1),r_={style:{"text-align":"left"}},i_=t("code",null,"贪心",-1),h_=t("code",null,"树",-1),u_=t("code",null,"深度优先搜索",-1),f_=t("code",null,"3+",-1),g_={style:{"text-align":"left"}},m_=t("td",{style:{"text-align":"center"}},"1569",-1),y_={style:{"text-align":"left"}},b_={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},x_=t("td",{style:{"text-align":"center"}},null,-1),p_={style:{"text-align":"left"}},k_=t("code",null,"树",-1),M_=t("code",null,"并查集",-1),I_=t("code",null,"二叉搜索树",-1),E_=t("code",null,"7+",-1),v_={style:{"text-align":"left"}},w_=t("td",{style:{"text-align":"center"}},"1586",-1),z_={style:{"text-align":"left"}},j_={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},O_=t("td",{style:{"text-align":"center"}},null,-1),q_={style:{"text-align":"left"}},B_=t("code",null,"栈",-1),N_=t("code",null,"树",-1),C_=t("code",null,"设计",-1),L_=t("code",null,"3+",-1),V_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"1902",-1),K_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},P_=t("td",{style:{"text-align":"center"}},null,-1),Q_={style:{"text-align":"left"}},R_=t("code",null,"树",-1),G_=t("code",null,"二叉搜索树",-1),S_=t("code",null,"数组",-1),Y_=t("code",null,"2+",-1),A_={style:{"text-align":"left"}},D_=t("td",{style:{"text-align":"center"}},"2476",-1),F_={style:{"text-align":"left"}},J_={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},U_=t("td",{style:{"text-align":"center"}},null,-1),W_={style:{"text-align":"left"}},X_=t("code",null,"树",-1),Z_=t("code",null,"深度优先搜索",-1),$_=t("code",null,"二叉搜索树",-1),tc=t("code",null,"3+",-1),ec={style:{"text-align":"left"}},lc=t("td",{style:{"text-align":"center"}},"LCP 52",-1),oc={style:{"text-align":"left"}},sc={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},nc=t("td",{style:{"text-align":"center"}},null,-1),dc={style:{"text-align":"left"}},_c=t("code",null,"树",-1),cc=t("code",null,"线段树",-1),ac=t("code",null,"二叉搜索树",-1),rc=t("code",null,"4+",-1),ic={style:{"text-align":"left"}},hc=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),uc={style:{"text-align":"left"}},fc={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},gc={style:{"text-align":"center"}},mc={style:{"text-align":"left"}},yc=t("code",null,"栈",-1),bc=t("code",null,"树",-1),xc=t("code",null,"二叉搜索树",-1),pc=t("code",null,"4+",-1),kc={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),Ic={style:{"text-align":"left"}},Ec={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},vc={style:{"text-align":"center"}},wc={style:{"text-align":"left"}},zc=t("code",null,"栈",-1),jc=t("code",null,"树",-1),Oc=t("code",null,"深度优先搜索",-1),qc=t("code",null,"4+",-1),Bc={style:{"text-align":"left"}},Nc=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),Cc={style:{"text-align":"left"}},Lc={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},Vc={style:{"text-align":"center"}},Hc={style:{"text-align":"left"}},Kc=t("code",null,"树",-1),Tc=t("code",null,"深度优先搜索",-1),Pc=t("code",null,"二叉搜索树",-1),Qc=t("code",null,"1+",-1),Rc={style:{"text-align":"left"}},Gc=t("td",{style:{"text-align":"center"}},"剑指 Offer 68",-1),Sc={style:{"text-align":"left"}},Yc={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},Ac={style:{"text-align":"center"}},Dc={style:{"text-align":"left"}},Fc=t("code",null,"树",-1),Jc=t("code",null,"深度优先搜索",-1),Uc=t("code",null,"二叉搜索树",-1),Wc=t("code",null,"1+",-1),Xc={style:{"text-align":"left"}},Zc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),$c={style:{"text-align":"left"}},ta={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},ea=t("td",{style:{"text-align":"center"}},null,-1),la={style:{"text-align":"left"}},oa=t("code",null,"栈",-1),sa=t("code",null,"树",-1),na=t("code",null,"深度优先搜索",-1),da=t("code",null,"2+",-1),_a={style:{"text-align":"left"}},ca=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),aa={style:{"text-align":"left"}},ra={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},ia=t("td",{style:{"text-align":"center"}},null,-1),ha={style:{"text-align":"left"}},ua=t("code",null,"树",-1),fa=t("code",null,"深度优先搜索",-1),ga=t("code",null,"二叉搜索树",-1),ma=t("code",null,"1+",-1),ya={style:{"text-align":"left"}},ba=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),xa={style:{"text-align":"left"}},pa={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},ka=t("td",{style:{"text-align":"center"}},null,-1),Ma={style:{"text-align":"left"}},Ia=t("code",null,"树",-1),Ea=t("code",null,"深度优先搜索",-1),va=t("code",null,"二叉搜索树",-1),wa=t("code",null,"1+",-1),za={style:{"text-align":"left"}},ja=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),Oa={style:{"text-align":"left"}},qa={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},Ba={style:{"text-align":"center"}},Na={style:{"text-align":"left"}},Ca=t("code",null,"栈",-1),La=t("code",null,"树",-1),Va=t("code",null,"设计",-1),Ha=t("code",null,"3+",-1),Ka={style:{"text-align":"left"}},Ta=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),Pa={style:{"text-align":"left"}},Qa={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},Ra={style:{"text-align":"center"}},Ga={style:{"text-align":"left"}},Sa=t("code",null,"树",-1),Ya=t("code",null,"设计",-1),Aa=t("code",null,"二叉搜索树",-1),Da=t("code",null,"3+",-1),Fa={style:{"text-align":"left"}},Ja=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),Ua={style:{"text-align":"left"}},Wa={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},Xa=t("td",{style:{"text-align":"center"}},null,-1),Za={style:{"text-align":"left"}},$a=t("code",null,"树",-1),tr=t("code",null,"二叉搜索树",-1),er=t("code",null,"数组",-1),lr=t("code",null,"2+",-1),or={style:{"text-align":"left"}},sr=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),nr={style:{"text-align":"left"}},dr={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},_r=t("td",{style:{"text-align":"center"}},null,-1),cr={style:{"text-align":"left"}},ar=t("code",null,"树",-1),rr=t("code",null,"深度优先搜索",-1),ir=t("code",null,"二叉搜索树",-1),hr=t("code",null,"1+",-1),ur={style:{"text-align":"left"}},fr=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),gr={style:{"text-align":"left"}},mr={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},yr=t("td",{style:{"text-align":"center"}},null,-1),br={style:{"text-align":"left"}},xr=t("code",null,"树",-1),pr=t("code",null,"深度优先搜索",-1),kr=t("code",null,"二叉搜索树",-1),Mr=t("code",null,"1+",-1),Ir={style:{"text-align":"left"}},Er=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),vr={style:{"text-align":"left"}},wr={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},zr=t("td",{style:{"text-align":"center"}},null,-1),jr={style:{"text-align":"left"}},Or=t("code",null,"树",-1),qr=t("code",null,"二叉搜索树",-1),Br=t("code",null,"回溯",-1),Nr=t("code",null,"1+",-1),Cr={style:{"text-align":"left"}},Lr=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),Vr={style:{"text-align":"left"}},Hr={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},null,-1),Tr={style:{"text-align":"left"}},Pr=t("code",null,"栈",-1),Qr=t("code",null,"树",-1),Rr=t("code",null,"深度优先搜索",-1),Gr=t("code",null,"3+",-1),Sr={style:{"text-align":"left"}};function Yr(Ar,Dr){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return a(),r("div",null,[u,t("details",null,[f,g,t("p",null,[e(s,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(s,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[E]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/tag/string-matching.html"},{default:o(()=>[z]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[O]),_:1}),l(),q,l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[H]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[Q]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(s,{to:"/tag/suffix-array.html"},{default:o(()=>[S]),_:1})]),Y,t("p",null,[e(s,{to:"/tag/enumeration.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[U]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[W]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[X]),_:1}),l(),e(s,{to:"/tag/bucket-sort.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/tag/sliding-window.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/tag/hash-function.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/tag/rolling-hash.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(s,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(s,{to:"/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/tag/geometry.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/tag/database.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/tag/data-stream.html"},{default:o(()=>[Ot]),_:1}),l(),e(s,{to:"/tag/brainteaser.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/tag/interactive.html"},{default:o(()=>[Bt]),_:1}),l(),e(s,{to:"/tag/iterator.html"},{default:o(()=>[Nt]),_:1}),l(),e(s,{to:"/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),Lt,i(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Ht,t("td",Kt,[t("a",Tt,[l("不同的二叉搜索树 II"),e(n)])]),t("td",Pt,[e(s,{to:"/problem/0095.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qt,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Rt]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Gt]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[St]),_:1}),l(),Yt]),t("td",At,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dt,t("td",Ft,[t("a",Jt,[l("不同的二叉搜索树"),e(n)])]),t("td",Ut,[e(s,{to:"/problem/0096.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wt,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xt]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Zt]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",se,[l("验证二叉搜索树"),e(n)])]),t("td",ne,[e(s,{to:"/problem/0098.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",de,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_e]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ce]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ae]),_:1}),l(),re]),t("td",ie,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[he,t("td",ue,[t("a",fe,[l("恢复二叉搜索树"),e(n)])]),t("td",ge,[e(s,{to:"/problem/0099.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",me,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ye]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[be]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[xe]),_:1}),l(),pe]),t("td",ke,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Me,t("td",Ie,[t("a",Ee,[l("将有序数组转换为二叉搜索树"),e(n)])]),t("td",ve,[e(s,{to:"/problem/0108.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",we,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ze]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[je]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Oe]),_:1}),l(),qe]),t("td",Be,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ne,t("td",Ce,[t("a",Le,[l("有序链表转换二叉搜索树"),e(n)])]),t("td",Ve,[e(s,{to:"/problem/0109.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",He,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ke]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Te]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[Pe]),_:1}),l(),Qe]),t("td",Re,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ge,t("td",Se,[t("a",Ye,[l("二叉搜索树迭代器"),e(n)])]),t("td",Ae,[e(s,{to:"/problem/0173.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",De,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Fe]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Je]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Ue]),_:1}),l(),We]),t("td",Xe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ze,t("td",$e,[t("a",tl,[l("二叉搜索树中第 K 小的元素"),e(n)])]),t("td",el,[e(s,{to:"/problem/0230.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ll,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ol]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sl]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[nl]),_:1}),l(),dl]),t("td",_l,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cl,t("td",al,[t("a",rl,[l("二叉搜索树的最近公共祖先"),e(n)])]),t("td",il,[e(s,{to:"/problem/0235.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ul]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[gl]),_:1}),l(),ml]),t("td",yl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bl,t("td",xl,[t("a",pl,[l("验证二叉搜索树的前序遍历序列 🔒"),e(n)])]),kl,t("td",Ml,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Il]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[El]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[vl]),_:1}),l(),wl]),t("td",zl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jl,t("td",Ol,[t("a",ql,[l("最接近的二叉搜索树值 🔒"),e(n)])]),Bl,t("td",Nl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Cl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ll]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Vl]),_:1}),l(),Hl]),t("td",Kl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Tl,t("td",Pl,[t("a",Ql,[l("最接近的二叉搜索树值 II 🔒"),e(n)])]),Rl,t("td",Gl,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Sl]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Yl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Al]),_:1}),l(),Dl]),t("td",Fl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jl,t("td",Ul,[t("a",Wl,[l("二叉搜索树中的中序后继 🔒"),e(n)])]),Xl,t("td",Zl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$l]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[to]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[eo]),_:1}),l(),lo]),t("td",oo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[so,t("td",no,[t("a",_o,[l("最大二叉搜索子树 🔒"),e(n)])]),co,t("td",ao,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ro]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[io]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ho]),_:1}),l(),uo]),t("td",fo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[go,t("td",mo,[t("a",yo,[l("将二叉搜索树转化为排序的双向链表 🔒"),e(n)])]),t("td",bo,[e(s,{to:"/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xo,[e(s,{to:"/tag/stack.html"},{default:o(()=>[po]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[ko]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Mo]),_:1}),l(),Io]),t("td",Eo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vo,t("td",wo,[t("a",zo,[l("序列化和反序列化二叉搜索树"),e(n)])]),jo,t("td",Oo,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qo]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Bo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[No]),_:1}),l(),Co]),t("td",Lo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vo,t("td",Ho,[t("a",Ko,[l("删除二叉搜索树中的节点"),e(n)])]),t("td",To,[e(s,{to:"/problem/0450.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Po,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Qo]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ro]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Go]),_:1})]),t("td",So,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yo,t("td",Ao,[t("a",Do,[l("二叉搜索树中的众数"),e(n)])]),Fo,t("td",Jo,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Uo]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Wo]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Xo]),_:1}),l(),Zo]),t("td",$o,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ts,t("td",es,[t("a",ls,[l("二叉搜索树中的中序后继 II 🔒"),e(n)])]),os,t("td",ss,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ns]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ds]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[_s]),_:1})]),t("td",cs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[as,t("td",rs,[t("a",is,[l("二叉搜索树的最小绝对差"),e(n)])]),t("td",hs,[e(s,{to:"/problem/0530.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",us,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fs]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gs]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ms]),_:1}),l(),ys]),t("td",bs,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xs,t("td",ps,[t("a",ks,[l("把二叉搜索树转换为累加树"),e(n)])]),Ms,t("td",Is,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Es]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vs]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ws]),_:1}),l(),zs]),t("td",js,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Os,t("td",qs,[t("a",Bs,[l("两数之和 IV - 输入二叉搜索树"),e(n)])]),Ns,t("td",Cs,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ls]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vs]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Hs]),_:1}),l(),Ks]),t("td",Ts,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ps,t("td",Qs,[t("a",Rs,[l("修剪二叉搜索树"),e(n)])]),Gs,t("td",Ss,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ys]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[As]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ds]),_:1}),l(),Fs]),t("td",Js,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Us,t("td",Ws,[t("a",Xs,[l("二叉搜索树中的搜索"),e(n)])]),t("td",Zs,[e(s,{to:"/problem/0700.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$s,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tn]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[en]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ln]),_:1})]),t("td",on,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sn,t("td",nn,[t("a",dn,[l("二叉搜索树中的插入操作"),e(n)])]),t("td",_n,[e(s,{to:"/problem/0701.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[an]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[rn]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[hn]),_:1})]),t("td",un,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fn,t("td",gn,[t("a",mn,[l("数据流中的第 K 大元素"),e(n)])]),t("td",yn,[e(s,{to:"/problem/0703.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xn]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[pn]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[kn]),_:1}),l(),Mn]),t("td",In,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[En,t("td",vn,[t("a",wn,[l("拆分二叉搜索树 🔒"),e(n)])]),zn,t("td",jn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[On]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[qn]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[Bn]),_:1}),l(),Nn]),t("td",Cn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ln,t("td",Vn,[t("a",Hn,[l("二叉搜索树节点最小距离"),e(n)])]),t("td",Kn,[e(s,{to:"/problem/0783.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Tn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Pn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qn]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Rn]),_:1}),l(),Gn]),t("td",Sn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Yn,t("td",An,[t("a",Dn,[l("递增顺序搜索树"),e(n)])]),Fn,t("td",Jn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Un]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Wn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Xn]),_:1}),l(),Zn]),t("td",$n,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",ld,[l("二叉搜索树的范围和"),e(n)])]),od,t("td",sd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dd]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[_d]),_:1}),l(),cd]),t("td",ad,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rd,t("td",id,[t("a",hd,[l("前序遍历构造二叉搜索树"),e(n)])]),t("td",ud,[e(s,{to:"/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fd,[e(s,{to:"/tag/stack.html"},{default:o(()=>[gd]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[md]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[yd]),_:1}),l(),bd]),t("td",xd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pd,t("td",kd,[t("a",Md,[l("从二叉搜索树到更大和树"),e(n)])]),Id,t("td",Ed,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wd]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[zd]),_:1}),l(),jd]),t("td",Od,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qd,t("td",Bd,[t("a",Nd,[l("查找两棵二叉搜索树之和 🔒"),e(n)])]),Cd,t("td",Ld,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Vd]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Hd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Kd]),_:1}),l(),Td]),t("td",Pd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qd,t("td",Rd,[t("a",Gd,[l("两棵二叉搜索树中的所有元素"),e(n)])]),Sd,t("td",Yd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ad]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Dd]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Fd]),_:1}),l(),Jd]),t("td",Ud,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wd,t("td",Xd,[t("a",Zd,[l("二叉搜索子树的最大键值和"),e(n)])]),$d,t("td",t_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[e_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[l_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[o_]),_:1}),l(),s_]),t("td",n_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d_,t("td",__,[t("a",c_,[l("将二叉搜索树变平衡"),e(n)])]),a_,t("td",r_,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[i_]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[h_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[u_]),_:1}),l(),f_]),t("td",g_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m_,t("td",y_,[t("a",b_,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(n)])]),x_,t("td",p_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[k_]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[M_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[I_]),_:1}),l(),E_]),t("td",v_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[w_,t("td",z_,[t("a",j_,[l("二叉搜索树迭代器 II 🔒"),e(n)])]),O_,t("td",q_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[B_]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[N_]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[C_]),_:1}),l(),L_]),t("td",V_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H_,t("td",K_,[t("a",T_,[l("给定二叉搜索树的插入顺序求深度 🔒"),e(n)])]),P_,t("td",Q_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[R_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[G_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[S_]),_:1}),l(),Y_]),t("td",A_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D_,t("td",F_,[t("a",J_,[l("二叉搜索树最近节点查询"),e(n)])]),U_,t("td",W_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[X_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Z_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[$_]),_:1}),l(),tc]),t("td",ec,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lc,t("td",oc,[t("a",sc,[l("二叉搜索树染色"),e(n)])]),nc,t("td",dc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_c]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[cc]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ac]),_:1}),l(),rc]),t("td",ic,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hc,t("td",uc,[t("a",fc,[l("二叉搜索树的后序遍历序列"),e(n)])]),t("td",gc,[e(s,{to:"/offer/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[yc]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[bc]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[xc]),_:1}),l(),pc]),t("td",kc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mc,t("td",Ic,[t("a",Ec,[l("二叉搜索树与双向链表"),e(n)])]),t("td",vc,[e(s,{to:"/offer/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[zc]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[jc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Oc]),_:1}),l(),qc]),t("td",Bc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nc,t("td",Cc,[t("a",Lc,[l("二叉搜索树的第k大节点"),e(n)])]),t("td",Vc,[e(s,{to:"/offer/jz_offer_54_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Kc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Tc]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Pc]),_:1}),l(),Qc]),t("td",Rc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Gc,t("td",Sc,[t("a",Yc,[l("二叉搜索树的最近公共祖先"),e(n)])]),t("td",Ac,[e(s,{to:"/offer/jz_offer_68_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Dc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Fc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jc]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Uc]),_:1}),l(),Wc]),t("td",Xc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zc,t("td",$c,[t("a",ta,[l("展平二叉搜索树"),e(n)])]),ea,t("td",la,[e(s,{to:"/tag/stack.html"},{default:o(()=>[oa]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[sa]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[na]),_:1}),l(),da]),t("td",_a,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ca,t("td",aa,[t("a",ra,[l("二叉搜索树中的中序后继"),e(n)])]),ia,t("td",ha,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ua]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fa]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ga]),_:1}),l(),ma]),t("td",ya,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ba,t("td",xa,[t("a",pa,[l("所有大于等于节点的值之和"),e(n)])]),ka,t("td",Ma,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ia]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ea]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[va]),_:1}),l(),wa]),t("td",za,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ja,t("td",Oa,[t("a",qa,[l("二叉搜索树迭代器"),e(n)])]),t("td",Ba,[e(s,{to:"/offer2/jz_offer_II_055.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Na,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ca]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[La]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Va]),_:1}),l(),Ha]),t("td",Ka,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ta,t("td",Pa,[t("a",Qa,[l("数据流的第 K 大数值"),e(n)])]),t("td",Ra,[e(s,{to:"/offer2/jz_offer_II_059.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ga,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Sa]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Ya]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Aa]),_:1}),l(),Da]),t("td",Fa,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ja,t("td",Ua,[t("a",Wa,[l("最小高度树"),e(n)])]),Xa,t("td",Za,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$a]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[tr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[er]),_:1}),l(),lr]),t("td",or,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sr,t("td",nr,[t("a",dr,[l("合法二叉搜索树"),e(n)])]),_r,t("td",cr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ar]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rr]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ir]),_:1}),l(),hr]),t("td",ur,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fr,t("td",gr,[t("a",mr,[l("后继者"),e(n)])]),yr,t("td",br,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pr]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[kr]),_:1}),l(),Mr]),t("td",Ir,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Er,t("td",vr,[t("a",wr,[l("二叉搜索树序列"),e(n)])]),zr,t("td",jr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Or]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[qr]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[Br]),_:1}),l(),Nr]),t("td",Cr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lr,t("td",Vr,[t("a",Hr,[l("BiNode"),e(n)])]),Kr,t("td",Tr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Pr]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Qr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Rr]),_:1}),l(),Gr]),t("td",Sr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const Jr=c(h,[["render",Yr],["__file","binary-search-tree.html.vue"]]);export{Jr as default};
