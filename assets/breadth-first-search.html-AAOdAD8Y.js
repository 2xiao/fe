import{_ as c,r as _,o as a,c as r,a as t,d as e,w as o,b as l,f as i}from"./app-HYmO-yoP.js";const h={},f=t("h1",{id:"广度优先搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#广度优先搜索","aria-hidden":"true"},"#"),l(" 广度优先搜索")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),H=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),E=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),j=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),q=t("code",null,"拓扑排序",-1),N=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),A=t("code",null,"并查集",-1),B=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),J=t("code",null,"树状数组",-1),U=t("code",null,"后缀数组",-1),W=t("p",null,[t("strong",null,"算法")],-1),X=t("code",null,"枚举",-1),Y=t("code",null,"递归",-1),Z=t("code",null,"分治",-1),F=t("code",null,"回溯",-1),Q=t("code",null,"贪心",-1),R=t("code",null,"动态规划",-1),S=t("code",null,"排序",-1),G=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),dt=t("span",{class:"blue"},"广度优先搜索",-1),_t=t("code",null,"双指针",-1),ct=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),it=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),Ht=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Et=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),jt=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),qt=t("hr",null,null,-1),Nt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vt=t("td",{style:{"text-align":"center"}},"100",-1),Kt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},At={style:{"text-align":"center"}},Bt={style:{"text-align":"left"}},Dt=t("code",null,"树",-1),Jt=t("code",null,"深度优先搜索",-1),Ut=t("code",null,"广度优先搜索",-1),Wt=t("code",null,"1+",-1),Xt={style:{"text-align":"left"}},Yt=t("td",{style:{"text-align":"center"}},"101",-1),Zt={style:{"text-align":"left"}},Ft={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Qt={style:{"text-align":"center"}},Rt={style:{"text-align":"left"}},St=t("code",null,"树",-1),Gt=t("code",null,"深度优先搜索",-1),$t=t("code",null,"广度优先搜索",-1),te=t("code",null,"1+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"102",-1),oe={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},ne={style:{"text-align":"center"}},de={style:{"text-align":"left"}},_e=t("code",null,"树",-1),ce=t("code",null,"广度优先搜索",-1),ae=t("code",null,"二叉树",-1),re={style:{"text-align":"left"}},ie=t("td",{style:{"text-align":"center"}},"103",-1),he={style:{"text-align":"left"}},fe={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},ue={style:{"text-align":"center"}},ge={style:{"text-align":"left"}},me=t("code",null,"树",-1),ye=t("code",null,"广度优先搜索",-1),xe=t("code",null,"二叉树",-1),be={style:{"text-align":"left"}},pe=t("td",{style:{"text-align":"center"}},"104",-1),ke={style:{"text-align":"left"}},Me={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ie={style:{"text-align":"center"}},ve={style:{"text-align":"left"}},He=t("code",null,"树",-1),we=t("code",null,"深度优先搜索",-1),ze=t("code",null,"广度优先搜索",-1),Ee=t("code",null,"1+",-1),Oe={style:{"text-align":"left"}},Le=t("td",{style:{"text-align":"center"}},"107",-1),Ce={style:{"text-align":"left"}},je={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},Pe={style:{"text-align":"center"}},qe={style:{"text-align":"left"}},Ne=t("code",null,"树",-1),Ve=t("code",null,"广度优先搜索",-1),Ke=t("code",null,"二叉树",-1),Te={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"111",-1),Be={style:{"text-align":"left"}},De={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Je={style:{"text-align":"center"}},Ue={style:{"text-align":"left"}},We=t("code",null,"树",-1),Xe=t("code",null,"深度优先搜索",-1),Ye=t("code",null,"广度优先搜索",-1),Ze=t("code",null,"1+",-1),Fe={style:{"text-align":"left"}},Qe=t("td",{style:{"text-align":"center"}},"112",-1),Re={style:{"text-align":"left"}},Se={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Ge={style:{"text-align":"center"}},$e={style:{"text-align":"left"}},tl=t("code",null,"树",-1),el=t("code",null,"深度优先搜索",-1),ll=t("code",null,"广度优先搜索",-1),ol=t("code",null,"1+",-1),sl={style:{"text-align":"left"}},nl=t("td",{style:{"text-align":"center"}},"116",-1),dl={style:{"text-align":"left"}},_l={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},cl={style:{"text-align":"center"}},al={style:{"text-align":"left"}},rl=t("code",null,"树",-1),il=t("code",null,"深度优先搜索",-1),hl=t("code",null,"广度优先搜索",-1),fl=t("code",null,"2+",-1),ul={style:{"text-align":"left"}},gl=t("td",{style:{"text-align":"center"}},"117",-1),ml={style:{"text-align":"left"}},yl={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},xl={style:{"text-align":"center"}},bl={style:{"text-align":"left"}},pl=t("code",null,"树",-1),kl=t("code",null,"深度优先搜索",-1),Ml=t("code",null,"广度优先搜索",-1),Il=t("code",null,"2+",-1),vl={style:{"text-align":"left"}},Hl=t("td",{style:{"text-align":"center"}},"126",-1),wl={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/word-ladder-ii",target:"_blank",rel:"noopener noreferrer"},El=t("td",{style:{"text-align":"center"}},null,-1),Ol={style:{"text-align":"left"}},Ll=t("code",null,"广度优先搜索",-1),Cl=t("code",null,"哈希表",-1),jl=t("code",null,"字符串",-1),Pl=t("code",null,"1+",-1),ql={style:{"text-align":"left"}},Nl=t("td",{style:{"text-align":"center"}},"127",-1),Vl={style:{"text-align":"left"}},Kl={href:"https://leetcode.com/problems/word-ladder",target:"_blank",rel:"noopener noreferrer"},Tl={style:{"text-align":"center"}},Al={style:{"text-align":"left"}},Bl=t("code",null,"广度优先搜索",-1),Dl=t("code",null,"哈希表",-1),Jl=t("code",null,"字符串",-1),Ul={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"130",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},Zl={style:{"text-align":"center"}},Fl={style:{"text-align":"left"}},Ql=t("code",null,"深度优先搜索",-1),Rl=t("code",null,"广度优先搜索",-1),Sl=t("code",null,"并查集",-1),Gl=t("code",null,"2+",-1),$l={style:{"text-align":"left"}},to=t("td",{style:{"text-align":"center"}},"133",-1),eo={style:{"text-align":"left"}},lo={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},oo={style:{"text-align":"center"}},so={style:{"text-align":"left"}},no=t("code",null,"深度优先搜索",-1),_o=t("code",null,"广度优先搜索",-1),co=t("code",null,"图",-1),ao=t("code",null,"1+",-1),ro={style:{"text-align":"left"}},io=t("td",{style:{"text-align":"center"}},"199",-1),ho={style:{"text-align":"left"}},fo={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},uo={style:{"text-align":"center"}},go={style:{"text-align":"left"}},mo=t("code",null,"树",-1),yo=t("code",null,"深度优先搜索",-1),xo=t("code",null,"广度优先搜索",-1),bo=t("code",null,"1+",-1),po={style:{"text-align":"left"}},ko=t("td",{style:{"text-align":"center"}},"200",-1),Mo={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},vo={style:{"text-align":"center"}},Ho={style:{"text-align":"left"}},wo=t("code",null,"深度优先搜索",-1),zo=t("code",null,"广度优先搜索",-1),Eo=t("code",null,"并查集",-1),Oo=t("code",null,"2+",-1),Lo={style:{"text-align":"left"}},Co=t("td",{style:{"text-align":"center"}},"207",-1),jo={style:{"text-align":"left"}},Po={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},qo={style:{"text-align":"center"}},No={style:{"text-align":"left"}},Vo=t("code",null,"深度优先搜索",-1),Ko=t("code",null,"广度优先搜索",-1),To=t("code",null,"图",-1),Ao=t("code",null,"1+",-1),Bo={style:{"text-align":"left"}},Do=t("td",{style:{"text-align":"center"}},"210",-1),Jo={style:{"text-align":"left"}},Uo={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Wo={style:{"text-align":"center"}},Xo={style:{"text-align":"left"}},Yo=t("code",null,"深度优先搜索",-1),Zo=t("code",null,"广度优先搜索",-1),Fo=t("code",null,"图",-1),Qo=t("code",null,"1+",-1),Ro={style:{"text-align":"left"}},So=t("td",{style:{"text-align":"center"}},"226",-1),Go={style:{"text-align":"left"}},$o={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},ts={style:{"text-align":"center"}},es={style:{"text-align":"left"}},ls=t("code",null,"树",-1),os=t("code",null,"深度优先搜索",-1),ss=t("code",null,"广度优先搜索",-1),ns=t("code",null,"1+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"261",-1),cs={style:{"text-align":"left"}},as={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},rs=t("td",{style:{"text-align":"center"}},null,-1),is={style:{"text-align":"left"}},hs=t("code",null,"深度优先搜索",-1),fs=t("code",null,"广度优先搜索",-1),us=t("code",null,"并查集",-1),gs=t("code",null,"1+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"269",-1),xs={style:{"text-align":"left"}},bs={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},ps=t("td",{style:{"text-align":"center"}},null,-1),ks={style:{"text-align":"left"}},Ms=t("code",null,"深度优先搜索",-1),Is=t("code",null,"广度优先搜索",-1),vs=t("code",null,"图",-1),Hs=t("code",null,"3+",-1),ws={style:{"text-align":"left"}},zs=t("td",{style:{"text-align":"center"}},"279",-1),Es={style:{"text-align":"left"}},Os={href:"https://leetcode.com/problems/perfect-squares",target:"_blank",rel:"noopener noreferrer"},Ls={style:{"text-align":"center"}},Cs={style:{"text-align":"left"}},js=t("code",null,"广度优先搜索",-1),Ps=t("code",null,"数学",-1),qs=t("code",null,"动态规划",-1),Ns={style:{"text-align":"left"}},Vs=t("td",{style:{"text-align":"center"}},"286",-1),Ks={style:{"text-align":"left"}},Ts={href:"https://leetcode.com/problems/walls-and-gates",target:"_blank",rel:"noopener noreferrer"},As=t("td",{style:{"text-align":"center"}},null,-1),Bs={style:{"text-align":"left"}},Ds=t("code",null,"广度优先搜索",-1),Js=t("code",null,"数组",-1),Us=t("code",null,"矩阵",-1),Ws={style:{"text-align":"left"}},Xs=t("td",{style:{"text-align":"center"}},"297",-1),Ys={style:{"text-align":"left"}},Zs={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Fs={style:{"text-align":"center"}},Qs={style:{"text-align":"left"}},Rs=t("code",null,"树",-1),Ss=t("code",null,"深度优先搜索",-1),Gs=t("code",null,"广度优先搜索",-1),$s=t("code",null,"3+",-1),tn={style:{"text-align":"left"}},en=t("td",{style:{"text-align":"center"}},"301",-1),ln={style:{"text-align":"left"}},on={href:"https://leetcode.com/problems/remove-invalid-parentheses",target:"_blank",rel:"noopener noreferrer"},sn=t("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},dn=t("code",null,"广度优先搜索",-1),_n=t("code",null,"字符串",-1),cn=t("code",null,"回溯",-1),an={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"302",-1),hn={style:{"text-align":"left"}},fn={href:"https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},null,-1),gn={style:{"text-align":"left"}},mn=t("code",null,"深度优先搜索",-1),yn=t("code",null,"广度优先搜索",-1),xn=t("code",null,"数组",-1),bn=t("code",null,"2+",-1),pn={style:{"text-align":"left"}},kn=t("td",{style:{"text-align":"center"}},"310",-1),Mn={style:{"text-align":"left"}},In={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},vn=t("td",{style:{"text-align":"center"}},null,-1),Hn={style:{"text-align":"left"}},wn=t("code",null,"深度优先搜索",-1),zn=t("code",null,"广度优先搜索",-1),En=t("code",null,"图",-1),On=t("code",null,"1+",-1),Ln={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"314",-1),jn={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},null,-1),Nn={style:{"text-align":"left"}},Vn=t("code",null,"树",-1),Kn=t("code",null,"深度优先搜索",-1),Tn=t("code",null,"广度优先搜索",-1),An=t("code",null,"3+",-1),Bn={style:{"text-align":"left"}},Dn=t("td",{style:{"text-align":"center"}},"317",-1),Jn={style:{"text-align":"left"}},Un={href:"https://leetcode.com/problems/shortest-distance-from-all-buildings",target:"_blank",rel:"noopener noreferrer"},Wn=t("td",{style:{"text-align":"center"}},null,-1),Xn={style:{"text-align":"left"}},Yn=t("code",null,"广度优先搜索",-1),Zn=t("code",null,"数组",-1),Fn=t("code",null,"矩阵",-1),Qn={style:{"text-align":"left"}},Rn=t("td",{style:{"text-align":"center"}},"322",-1),Sn={style:{"text-align":"left"}},Gn={href:"https://leetcode.com/problems/coin-change",target:"_blank",rel:"noopener noreferrer"},$n={style:{"text-align":"center"}},td={style:{"text-align":"left"}},ed=t("code",null,"广度优先搜索",-1),ld=t("code",null,"数组",-1),od=t("code",null,"动态规划",-1),sd={style:{"text-align":"left"}},nd=t("td",{style:{"text-align":"center"}},"323",-1),dd={style:{"text-align":"left"}},_d={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},cd=t("td",{style:{"text-align":"center"}},null,-1),ad={style:{"text-align":"left"}},rd=t("code",null,"深度优先搜索",-1),id=t("code",null,"广度优先搜索",-1),hd=t("code",null,"并查集",-1),fd=t("code",null,"1+",-1),ud={style:{"text-align":"left"}},gd=t("td",{style:{"text-align":"center"}},"329",-1),md={style:{"text-align":"left"}},yd={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},xd=t("td",{style:{"text-align":"center"}},null,-1),bd={style:{"text-align":"left"}},pd=t("code",null,"深度优先搜索",-1),kd=t("code",null,"广度优先搜索",-1),Md=t("code",null,"图",-1),Id=t("code",null,"5+",-1),vd={style:{"text-align":"left"}},Hd=t("td",{style:{"text-align":"center"}},"339",-1),wd={style:{"text-align":"left"}},zd={href:"https://leetcode.com/problems/nested-list-weight-sum",target:"_blank",rel:"noopener noreferrer"},Ed=t("td",{style:{"text-align":"center"}},null,-1),Od={style:{"text-align":"left"}},Ld=t("code",null,"深度优先搜索",-1),Cd=t("code",null,"广度优先搜索",-1),jd={style:{"text-align":"left"}},Pd=t("td",{style:{"text-align":"center"}},"364",-1),qd={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},Vd=t("td",{style:{"text-align":"center"}},null,-1),Kd={style:{"text-align":"left"}},Td=t("code",null,"栈",-1),Ad=t("code",null,"深度优先搜索",-1),Bd=t("code",null,"广度优先搜索",-1),Dd={style:{"text-align":"left"}},Jd=t("td",{style:{"text-align":"center"}},"365",-1),Ud={style:{"text-align":"left"}},Wd={href:"https://leetcode.com/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},Xd=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},Zd=t("code",null,"深度优先搜索",-1),Fd=t("code",null,"广度优先搜索",-1),Qd=t("code",null,"数学",-1),Rd={style:{"text-align":"left"}},Sd=t("td",{style:{"text-align":"center"}},"399",-1),Gd={style:{"text-align":"left"}},$d={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},t_={style:{"text-align":"center"}},e_={style:{"text-align":"left"}},l_=t("code",null,"深度优先搜索",-1),o_=t("code",null,"广度优先搜索",-1),s_=t("code",null,"并查集",-1),n_=t("code",null,"4+",-1),d_={style:{"text-align":"left"}},__=t("td",{style:{"text-align":"center"}},"404",-1),c_={style:{"text-align":"left"}},a_={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},h_=t("code",null,"树",-1),f_=t("code",null,"深度优先搜索",-1),u_=t("code",null,"广度优先搜索",-1),g_=t("code",null,"1+",-1),m_={style:{"text-align":"left"}},y_=t("td",{style:{"text-align":"center"}},"407",-1),x_={style:{"text-align":"left"}},b_={href:"https://leetcode.com/problems/trapping-rain-water-ii",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),k_={style:{"text-align":"left"}},M_=t("code",null,"广度优先搜索",-1),I_=t("code",null,"数组",-1),v_=t("code",null,"矩阵",-1),H_=t("code",null,"1+",-1),w_={style:{"text-align":"left"}},z_=t("td",{style:{"text-align":"center"}},"417",-1),E_={style:{"text-align":"left"}},O_={href:"https://leetcode.com/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},L_=t("td",{style:{"text-align":"center"}},null,-1),C_={style:{"text-align":"left"}},j_=t("code",null,"深度优先搜索",-1),P_=t("code",null,"广度优先搜索",-1),q_=t("code",null,"数组",-1),N_=t("code",null,"1+",-1),V_={style:{"text-align":"left"}},K_=t("td",{style:{"text-align":"center"}},"428",-1),T_={style:{"text-align":"left"}},A_={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},null,-1),D_={style:{"text-align":"left"}},J_=t("code",null,"树",-1),U_=t("code",null,"深度优先搜索",-1),W_=t("code",null,"广度优先搜索",-1),X_=t("code",null,"1+",-1),Y_={style:{"text-align":"left"}},Z_=t("td",{style:{"text-align":"center"}},"429",-1),F_={style:{"text-align":"left"}},Q_={href:"https://leetcode.com/problems/n-ary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},R_=t("td",{style:{"text-align":"center"}},null,-1),S_={style:{"text-align":"left"}},G_=t("code",null,"树",-1),$_=t("code",null,"广度优先搜索",-1),tc={style:{"text-align":"left"}},ec=t("td",{style:{"text-align":"center"}},"431",-1),lc={style:{"text-align":"left"}},oc={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},sc=t("td",{style:{"text-align":"center"}},null,-1),nc={style:{"text-align":"left"}},dc=t("code",null,"树",-1),_c=t("code",null,"深度优先搜索",-1),cc=t("code",null,"广度优先搜索",-1),ac=t("code",null,"2+",-1),rc={style:{"text-align":"left"}},ic=t("td",{style:{"text-align":"center"}},"433",-1),hc={style:{"text-align":"left"}},fc={href:"https://leetcode.com/problems/minimum-genetic-mutation",target:"_blank",rel:"noopener noreferrer"},uc={style:{"text-align":"center"}},gc={style:{"text-align":"left"}},mc=t("code",null,"广度优先搜索",-1),yc=t("code",null,"哈希表",-1),xc=t("code",null,"字符串",-1),bc={style:{"text-align":"left"}},pc=t("td",{style:{"text-align":"center"}},"449",-1),kc={style:{"text-align":"left"}},Mc={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Ic=t("td",{style:{"text-align":"center"}},null,-1),vc={style:{"text-align":"left"}},Hc=t("code",null,"树",-1),wc=t("code",null,"深度优先搜索",-1),zc=t("code",null,"广度优先搜索",-1),Ec=t("code",null,"4+",-1),Oc={style:{"text-align":"left"}},Lc=t("td",{style:{"text-align":"center"}},"463",-1),Cc={style:{"text-align":"left"}},jc={href:"https://leetcode.com/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},Pc=t("td",{style:{"text-align":"center"}},null,-1),qc={style:{"text-align":"left"}},Nc=t("code",null,"深度优先搜索",-1),Vc=t("code",null,"广度优先搜索",-1),Kc=t("code",null,"数组",-1),Tc=t("code",null,"1+",-1),Ac={style:{"text-align":"left"}},Bc=t("td",{style:{"text-align":"center"}},"488",-1),Dc={style:{"text-align":"left"}},Jc={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},Uc=t("td",{style:{"text-align":"center"}},null,-1),Wc={style:{"text-align":"left"}},Xc=t("code",null,"栈",-1),Yc=t("code",null,"广度优先搜索",-1),Zc=t("code",null,"记忆化搜索",-1),Fc=t("code",null,"2+",-1),Qc={style:{"text-align":"left"}},Rc=t("td",{style:{"text-align":"center"}},"490",-1),Sc={style:{"text-align":"left"}},Gc={href:"https://leetcode.com/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},$c=t("td",{style:{"text-align":"center"}},null,-1),ta={style:{"text-align":"left"}},ea=t("code",null,"深度优先搜索",-1),la=t("code",null,"广度优先搜索",-1),oa=t("code",null,"数组",-1),sa=t("code",null,"1+",-1),na={style:{"text-align":"left"}},da=t("td",{style:{"text-align":"center"}},"499",-1),_a={style:{"text-align":"left"}},ca={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},aa=t("td",{style:{"text-align":"center"}},null,-1),ra={style:{"text-align":"left"}},ia=t("code",null,"深度优先搜索",-1),ha=t("code",null,"广度优先搜索",-1),fa=t("code",null,"图",-1),ua=t("code",null,"5+",-1),ga={style:{"text-align":"left"}},ma=t("td",{style:{"text-align":"center"}},"505",-1),ya={style:{"text-align":"left"}},xa={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},ba=t("td",{style:{"text-align":"center"}},null,-1),pa={style:{"text-align":"left"}},ka=t("code",null,"深度优先搜索",-1),Ma=t("code",null,"广度优先搜索",-1),Ia=t("code",null,"图",-1),va=t("code",null,"4+",-1),Ha={style:{"text-align":"left"}},wa=t("td",{style:{"text-align":"center"}},"513",-1),za={style:{"text-align":"left"}},Ea={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},null,-1),La={style:{"text-align":"left"}},Ca=t("code",null,"树",-1),ja=t("code",null,"深度优先搜索",-1),Pa=t("code",null,"广度优先搜索",-1),qa=t("code",null,"1+",-1),Na={style:{"text-align":"left"}},Va=t("td",{style:{"text-align":"center"}},"514",-1),Ka={style:{"text-align":"left"}},Ta={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},Aa={style:{"text-align":"center"}},Ba={style:{"text-align":"left"}},Da=t("code",null,"深度优先搜索",-1),Ja=t("code",null,"广度优先搜索",-1),Ua=t("code",null,"字符串",-1),Wa=t("code",null,"1+",-1),Xa={style:{"text-align":"left"}},Ya=t("td",{style:{"text-align":"center"}},"515",-1),Za={style:{"text-align":"left"}},Fa={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Qa=t("td",{style:{"text-align":"center"}},null,-1),Ra={style:{"text-align":"left"}},Sa=t("code",null,"树",-1),Ga=t("code",null,"深度优先搜索",-1),$a=t("code",null,"广度优先搜索",-1),tr=t("code",null,"1+",-1),er={style:{"text-align":"left"}},lr=t("td",{style:{"text-align":"center"}},"529",-1),or={style:{"text-align":"left"}},sr={href:"https://leetcode.com/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},nr=t("td",{style:{"text-align":"center"}},null,-1),dr={style:{"text-align":"left"}},_r=t("code",null,"深度优先搜索",-1),cr=t("code",null,"广度优先搜索",-1),ar=t("code",null,"数组",-1),rr=t("code",null,"1+",-1),ir={style:{"text-align":"left"}},hr=t("td",{style:{"text-align":"center"}},"530",-1),fr={style:{"text-align":"left"}},ur={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},gr={style:{"text-align":"center"}},mr={style:{"text-align":"left"}},yr=t("code",null,"树",-1),xr=t("code",null,"深度优先搜索",-1),br=t("code",null,"广度优先搜索",-1),pr=t("code",null,"2+",-1),kr={style:{"text-align":"left"}},Mr=t("td",{style:{"text-align":"center"}},"542",-1),Ir={style:{"text-align":"left"}},vr={href:"https://leetcode.com/problems/01-matrix",target:"_blank",rel:"noopener noreferrer"},Hr=t("td",{style:{"text-align":"center"}},null,-1),wr={style:{"text-align":"left"}},zr=t("code",null,"广度优先搜索",-1),Er=t("code",null,"数组",-1),Or=t("code",null,"动态规划",-1),Lr=t("code",null,"1+",-1),Cr={style:{"text-align":"left"}},jr=t("td",{style:{"text-align":"center"}},"547",-1),Pr={style:{"text-align":"left"}},qr={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},Nr=t("td",{style:{"text-align":"center"}},null,-1),Vr={style:{"text-align":"left"}},Kr=t("code",null,"深度优先搜索",-1),Tr=t("code",null,"广度优先搜索",-1),Ar=t("code",null,"并查集",-1),Br=t("code",null,"1+",-1),Dr={style:{"text-align":"left"}},Jr=t("td",{style:{"text-align":"center"}},"559",-1),Ur={style:{"text-align":"left"}},Wr={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Xr={style:{"text-align":"center"}},Yr={style:{"text-align":"left"}},Zr=t("code",null,"树",-1),Fr=t("code",null,"深度优先搜索",-1),Qr=t("code",null,"广度优先搜索",-1),Rr={style:{"text-align":"left"}},Sr=t("td",{style:{"text-align":"center"}},"582",-1),Gr={style:{"text-align":"left"}},$r={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},ti=t("td",{style:{"text-align":"center"}},null,-1),ei={style:{"text-align":"left"}},li=t("code",null,"树",-1),oi=t("code",null,"深度优先搜索",-1),si=t("code",null,"广度优先搜索",-1),ni=t("code",null,"2+",-1),di={style:{"text-align":"left"}},_i=t("td",{style:{"text-align":"center"}},"617",-1),ci={style:{"text-align":"left"}},ai={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},ri={style:{"text-align":"center"}},ii={style:{"text-align":"left"}},hi=t("code",null,"树",-1),fi=t("code",null,"深度优先搜索",-1),ui=t("code",null,"广度优先搜索",-1),gi=t("code",null,"1+",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"623",-1),xi={style:{"text-align":"left"}},bi={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},pi=t("td",{style:{"text-align":"center"}},null,-1),ki={style:{"text-align":"left"}},Mi=t("code",null,"树",-1),Ii=t("code",null,"深度优先搜索",-1),vi=t("code",null,"广度优先搜索",-1),Hi=t("code",null,"1+",-1),wi={style:{"text-align":"left"}},zi=t("td",{style:{"text-align":"center"}},"637",-1),Ei={style:{"text-align":"left"}},Oi={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Li={style:{"text-align":"center"}},Ci={style:{"text-align":"left"}},ji=t("code",null,"树",-1),Pi=t("code",null,"深度优先搜索",-1),qi=t("code",null,"广度优先搜索",-1),Ni=t("code",null,"1+",-1),Vi={style:{"text-align":"left"}},Ki=t("td",{style:{"text-align":"center"}},"653",-1),Ti={style:{"text-align":"left"}},Ai={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Bi=t("td",{style:{"text-align":"center"}},null,-1),Di={style:{"text-align":"left"}},Ji=t("code",null,"树",-1),Ui=t("code",null,"深度优先搜索",-1),Wi=t("code",null,"广度优先搜索",-1),Xi=t("code",null,"4+",-1),Yi={style:{"text-align":"left"}},Zi=t("td",{style:{"text-align":"center"}},"655",-1),Fi={style:{"text-align":"left"}},Qi={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ri=t("td",{style:{"text-align":"center"}},null,-1),Si={style:{"text-align":"left"}},Gi=t("code",null,"树",-1),$i=t("code",null,"深度优先搜索",-1),th=t("code",null,"广度优先搜索",-1),eh=t("code",null,"1+",-1),lh={style:{"text-align":"left"}},oh=t("td",{style:{"text-align":"center"}},"662",-1),sh={style:{"text-align":"left"}},nh={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},dh={style:{"text-align":"center"}},_h={style:{"text-align":"left"}},ch=t("code",null,"树",-1),ah=t("code",null,"深度优先搜索",-1),rh=t("code",null,"广度优先搜索",-1),ih=t("code",null,"1+",-1),hh={style:{"text-align":"left"}},fh=t("td",{style:{"text-align":"center"}},"672",-1),uh={style:{"text-align":"left"}},gh={href:"https://leetcode.com/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},mh=t("td",{style:{"text-align":"center"}},null,-1),yh={style:{"text-align":"left"}},xh=t("code",null,"位运算",-1),bh=t("code",null,"深度优先搜索",-1),ph=t("code",null,"广度优先搜索",-1),kh=t("code",null,"1+",-1),Mh={style:{"text-align":"left"}},Ih=t("td",{style:{"text-align":"center"}},"675",-1),vh={style:{"text-align":"left"}},Hh={href:"https://leetcode.com/problems/cut-off-trees-for-golf-event",target:"_blank",rel:"noopener noreferrer"},wh=t("td",{style:{"text-align":"center"}},null,-1),zh={style:{"text-align":"left"}},Eh=t("code",null,"广度优先搜索",-1),Oh=t("code",null,"数组",-1),Lh=t("code",null,"矩阵",-1),Ch=t("code",null,"1+",-1),jh={style:{"text-align":"left"}},Ph=t("td",{style:{"text-align":"center"}},"684",-1),qh={style:{"text-align":"left"}},Nh={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},Vh=t("td",{style:{"text-align":"center"}},null,-1),Kh={style:{"text-align":"left"}},Th=t("code",null,"深度优先搜索",-1),Ah=t("code",null,"广度优先搜索",-1),Bh=t("code",null,"并查集",-1),Dh=t("code",null,"1+",-1),Jh={style:{"text-align":"left"}},Uh=t("td",{style:{"text-align":"center"}},"685",-1),Wh={style:{"text-align":"left"}},Xh={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Yh=t("td",{style:{"text-align":"center"}},null,-1),Zh={style:{"text-align":"left"}},Fh=t("code",null,"深度优先搜索",-1),Qh=t("code",null,"广度优先搜索",-1),Rh=t("code",null,"并查集",-1),Sh=t("code",null,"1+",-1),Gh={style:{"text-align":"left"}},$h=t("td",{style:{"text-align":"center"}},"690",-1),t1={style:{"text-align":"left"}},e1={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},l1=t("td",{style:{"text-align":"center"}},null,-1),o1={style:{"text-align":"left"}},s1=t("code",null,"树",-1),n1=t("code",null,"深度优先搜索",-1),d1=t("code",null,"广度优先搜索",-1),_1=t("code",null,"2+",-1),c1={style:{"text-align":"left"}},a1=t("td",{style:{"text-align":"center"}},"694",-1),r1={style:{"text-align":"left"}},i1={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},h1=t("td",{style:{"text-align":"center"}},null,-1),f1={style:{"text-align":"left"}},u1=t("code",null,"深度优先搜索",-1),g1=t("code",null,"广度优先搜索",-1),m1=t("code",null,"并查集",-1),y1=t("code",null,"2+",-1),x1={style:{"text-align":"left"}},b1=t("td",{style:{"text-align":"center"}},"695",-1),p1={style:{"text-align":"left"}},k1={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},M1={style:{"text-align":"center"}},I1={style:{"text-align":"left"}},v1=t("code",null,"深度优先搜索",-1),H1=t("code",null,"广度优先搜索",-1),w1=t("code",null,"并查集",-1),z1=t("code",null,"2+",-1),E1={style:{"text-align":"left"}},O1=t("td",{style:{"text-align":"center"}},"711",-1),L1={style:{"text-align":"left"}},C1={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},j1=t("td",{style:{"text-align":"center"}},null,-1),P1={style:{"text-align":"left"}},q1=t("code",null,"深度优先搜索",-1),N1=t("code",null,"广度优先搜索",-1),V1=t("code",null,"并查集",-1),K1=t("code",null,"2+",-1),T1={style:{"text-align":"left"}},A1=t("td",{style:{"text-align":"center"}},"721",-1),B1={style:{"text-align":"left"}},D1={href:"https://leetcode.com/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},J1=t("td",{style:{"text-align":"center"}},null,-1),U1={style:{"text-align":"left"}},W1=t("code",null,"深度优先搜索",-1),X1=t("code",null,"广度优先搜索",-1),Y1=t("code",null,"并查集",-1),Z1=t("code",null,"4+",-1),F1={style:{"text-align":"left"}},Q1=t("td",{style:{"text-align":"center"}},"733",-1),R1={style:{"text-align":"left"}},S1={href:"https://leetcode.com/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},G1=t("td",{style:{"text-align":"center"}},null,-1),$1={style:{"text-align":"left"}},tf=t("code",null,"深度优先搜索",-1),ef=t("code",null,"广度优先搜索",-1),lf=t("code",null,"数组",-1),of=t("code",null,"1+",-1),sf={style:{"text-align":"left"}},nf=t("td",{style:{"text-align":"center"}},"737",-1),df={style:{"text-align":"left"}},_f={href:"https://leetcode.com/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},cf=t("td",{style:{"text-align":"center"}},null,-1),af={style:{"text-align":"left"}},rf=t("code",null,"深度优先搜索",-1),hf=t("code",null,"广度优先搜索",-1),ff=t("code",null,"并查集",-1),uf=t("code",null,"3+",-1),gf={style:{"text-align":"left"}},mf=t("td",{style:{"text-align":"center"}},"742",-1),yf={style:{"text-align":"left"}},xf={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},bf=t("td",{style:{"text-align":"center"}},null,-1),pf={style:{"text-align":"left"}},kf=t("code",null,"树",-1),Mf=t("code",null,"深度优先搜索",-1),If=t("code",null,"广度优先搜索",-1),vf=t("code",null,"1+",-1),Hf={style:{"text-align":"left"}},wf=t("td",{style:{"text-align":"center"}},"743",-1),zf={style:{"text-align":"left"}},Ef={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},Of=t("td",{style:{"text-align":"center"}},null,-1),Lf={style:{"text-align":"left"}},Cf=t("code",null,"深度优先搜索",-1),jf=t("code",null,"广度优先搜索",-1),Pf=t("code",null,"图",-1),qf=t("code",null,"2+",-1),Nf={style:{"text-align":"left"}},Vf=t("td",{style:{"text-align":"center"}},"749",-1),Kf={style:{"text-align":"left"}},Tf={href:"https://leetcode.com/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},Af=t("td",{style:{"text-align":"center"}},null,-1),Bf={style:{"text-align":"left"}},Df=t("code",null,"深度优先搜索",-1),Jf=t("code",null,"广度优先搜索",-1),Uf=t("code",null,"数组",-1),Wf=t("code",null,"2+",-1),Xf={style:{"text-align":"left"}},Yf=t("td",{style:{"text-align":"center"}},"752",-1),Zf={style:{"text-align":"left"}},Ff={href:"https://leetcode.com/problems/open-the-lock",target:"_blank",rel:"noopener noreferrer"},Qf=t("td",{style:{"text-align":"center"}},null,-1),Rf={style:{"text-align":"left"}},Sf=t("code",null,"广度优先搜索",-1),Gf=t("code",null,"数组",-1),$f=t("code",null,"哈希表",-1),tu=t("code",null,"1+",-1),eu={style:{"text-align":"left"}},lu=t("td",{style:{"text-align":"center"}},"756",-1),ou={style:{"text-align":"left"}},su={href:"https://leetcode.com/problems/pyramid-transition-matrix",target:"_blank",rel:"noopener noreferrer"},nu=t("td",{style:{"text-align":"center"}},null,-1),du={style:{"text-align":"left"}},_u=t("code",null,"位运算",-1),cu=t("code",null,"深度优先搜索",-1),au=t("code",null,"广度优先搜索",-1),ru={style:{"text-align":"left"}},iu=t("td",{style:{"text-align":"center"}},"765",-1),hu={style:{"text-align":"left"}},fu={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},uu=t("td",{style:{"text-align":"center"}},null,-1),gu={style:{"text-align":"left"}},mu=t("code",null,"贪心",-1),yu=t("code",null,"深度优先搜索",-1),xu=t("code",null,"广度优先搜索",-1),bu=t("code",null,"2+",-1),pu={style:{"text-align":"left"}},ku=t("td",{style:{"text-align":"center"}},"773",-1),Mu={style:{"text-align":"left"}},Iu={href:"https://leetcode.com/problems/sliding-puzzle",target:"_blank",rel:"noopener noreferrer"},vu=t("td",{style:{"text-align":"center"}},null,-1),Hu={style:{"text-align":"left"}},wu=t("code",null,"广度优先搜索",-1),zu=t("code",null,"数组",-1),Eu=t("code",null,"矩阵",-1),Ou={style:{"text-align":"left"}},Lu=t("td",{style:{"text-align":"center"}},"778",-1),Cu={style:{"text-align":"left"}},ju={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},Pu=t("td",{style:{"text-align":"center"}},null,-1),qu={style:{"text-align":"left"}},Nu=t("code",null,"深度优先搜索",-1),Vu=t("code",null,"广度优先搜索",-1),Ku=t("code",null,"并查集",-1),Tu=t("code",null,"4+",-1),Au={style:{"text-align":"left"}},Bu=t("td",{style:{"text-align":"center"}},"783",-1),Du={style:{"text-align":"left"}},Ju={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},Uu={style:{"text-align":"center"}},Wu={style:{"text-align":"left"}},Xu=t("code",null,"树",-1),Yu=t("code",null,"深度优先搜索",-1),Zu=t("code",null,"广度优先搜索",-1),Fu=t("code",null,"2+",-1),Qu={style:{"text-align":"left"}},Ru=t("td",{style:{"text-align":"center"}},"785",-1),Su={style:{"text-align":"left"}},Gu={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},$u=t("td",{style:{"text-align":"center"}},null,-1),tg={style:{"text-align":"left"}},eg=t("code",null,"深度优先搜索",-1),lg=t("code",null,"广度优先搜索",-1),og=t("code",null,"并查集",-1),sg=t("code",null,"1+",-1),ng={style:{"text-align":"left"}},dg=t("td",{style:{"text-align":"center"}},"787",-1),_g={style:{"text-align":"left"}},cg={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},ag=t("td",{style:{"text-align":"center"}},null,-1),rg={style:{"text-align":"left"}},ig=t("code",null,"深度优先搜索",-1),hg=t("code",null,"广度优先搜索",-1),fg=t("code",null,"图",-1),ug=t("code",null,"3+",-1),gg={style:{"text-align":"left"}},mg=t("td",{style:{"text-align":"center"}},"797",-1),yg={style:{"text-align":"left"}},xg={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},bg=t("td",{style:{"text-align":"center"}},null,-1),pg={style:{"text-align":"left"}},kg=t("code",null,"深度优先搜索",-1),Mg=t("code",null,"广度优先搜索",-1),Ig=t("code",null,"图",-1),vg=t("code",null,"1+",-1),Hg={style:{"text-align":"left"}},wg=t("td",{style:{"text-align":"center"}},"802",-1),zg={style:{"text-align":"left"}},Eg={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},Og=t("td",{style:{"text-align":"center"}},null,-1),Lg={style:{"text-align":"left"}},Cg=t("code",null,"深度优先搜索",-1),jg=t("code",null,"广度优先搜索",-1),Pg=t("code",null,"图",-1),qg=t("code",null,"1+",-1),Ng={style:{"text-align":"left"}},Vg=t("td",{style:{"text-align":"center"}},"815",-1),Kg={style:{"text-align":"left"}},Tg={href:"https://leetcode.com/problems/bus-routes",target:"_blank",rel:"noopener noreferrer"},Ag=t("td",{style:{"text-align":"center"}},null,-1),Bg={style:{"text-align":"left"}},Dg=t("code",null,"广度优先搜索",-1),Jg=t("code",null,"数组",-1),Ug=t("code",null,"哈希表",-1),Wg={style:{"text-align":"left"}},Xg=t("td",{style:{"text-align":"center"}},"827",-1),Yg={style:{"text-align":"left"}},Zg={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},Fg=t("td",{style:{"text-align":"center"}},null,-1),Qg={style:{"text-align":"left"}},Rg=t("code",null,"深度优先搜索",-1),Sg=t("code",null,"广度优先搜索",-1),Gg=t("code",null,"并查集",-1),$g=t("code",null,"2+",-1),tm={style:{"text-align":"left"}},em=t("td",{style:{"text-align":"center"}},"839",-1),lm={style:{"text-align":"left"}},om={href:"https://leetcode.com/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},sm=t("td",{style:{"text-align":"center"}},null,-1),nm={style:{"text-align":"left"}},dm=t("code",null,"深度优先搜索",-1),_m=t("code",null,"广度优先搜索",-1),cm=t("code",null,"并查集",-1),am=t("code",null,"3+",-1),rm={style:{"text-align":"left"}},im=t("td",{style:{"text-align":"center"}},"841",-1),hm={style:{"text-align":"left"}},fm={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},um=t("td",{style:{"text-align":"center"}},null,-1),gm={style:{"text-align":"left"}},mm=t("code",null,"深度优先搜索",-1),ym=t("code",null,"广度优先搜索",-1),xm=t("code",null,"图",-1),bm={style:{"text-align":"left"}},pm=t("td",{style:{"text-align":"center"}},"847",-1),km={style:{"text-align":"left"}},Mm={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},Im=t("td",{style:{"text-align":"center"}},null,-1),vm={style:{"text-align":"left"}},Hm=t("code",null,"位运算",-1),wm=t("code",null,"广度优先搜索",-1),zm=t("code",null,"图",-1),Em=t("code",null,"2+",-1),Om={style:{"text-align":"left"}},Lm=t("td",{style:{"text-align":"center"}},"854",-1),Cm={style:{"text-align":"left"}},jm={href:"https://leetcode.com/problems/k-similar-strings",target:"_blank",rel:"noopener noreferrer"},Pm=t("td",{style:{"text-align":"center"}},null,-1),qm={style:{"text-align":"left"}},Nm=t("code",null,"广度优先搜索",-1),Vm=t("code",null,"字符串",-1),Km={style:{"text-align":"left"}},Tm=t("td",{style:{"text-align":"center"}},"863",-1),Am={style:{"text-align":"left"}},Bm={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Dm=t("td",{style:{"text-align":"center"}},null,-1),Jm={style:{"text-align":"left"}},Um=t("code",null,"树",-1),Wm=t("code",null,"深度优先搜索",-1),Xm=t("code",null,"广度优先搜索",-1),Ym=t("code",null,"2+",-1),Zm={style:{"text-align":"left"}},Fm=t("td",{style:{"text-align":"center"}},"864",-1),Qm={style:{"text-align":"left"}},Rm={href:"https://leetcode.com/problems/shortest-path-to-get-all-keys",target:"_blank",rel:"noopener noreferrer"},Sm=t("td",{style:{"text-align":"center"}},null,-1),Gm={style:{"text-align":"left"}},$m=t("code",null,"位运算",-1),t2=t("code",null,"广度优先搜索",-1),e2=t("code",null,"数组",-1),l2=t("code",null,"1+",-1),o2={style:{"text-align":"left"}},s2=t("td",{style:{"text-align":"center"}},"865",-1),n2={style:{"text-align":"left"}},d2={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},_2=t("td",{style:{"text-align":"center"}},null,-1),c2={style:{"text-align":"left"}},a2=t("code",null,"树",-1),r2=t("code",null,"深度优先搜索",-1),i2=t("code",null,"广度优先搜索",-1),h2=t("code",null,"2+",-1),f2={style:{"text-align":"left"}},u2=t("td",{style:{"text-align":"center"}},"886",-1),g2={style:{"text-align":"left"}},m2={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},y2=t("td",{style:{"text-align":"center"}},null,-1),x2={style:{"text-align":"left"}},b2=t("code",null,"深度优先搜索",-1),p2=t("code",null,"广度优先搜索",-1),k2=t("code",null,"并查集",-1),M2=t("code",null,"1+",-1),I2={style:{"text-align":"left"}},v2=t("td",{style:{"text-align":"center"}},"909",-1),H2={style:{"text-align":"left"}},w2={href:"https://leetcode.com/problems/snakes-and-ladders",target:"_blank",rel:"noopener noreferrer"},z2={style:{"text-align":"center"}},E2={style:{"text-align":"left"}},O2=t("code",null,"广度优先搜索",-1),L2=t("code",null,"数组",-1),C2=t("code",null,"矩阵",-1),j2={style:{"text-align":"left"}},P2=t("td",{style:{"text-align":"center"}},"919",-1),q2={style:{"text-align":"left"}},N2={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},V2=t("td",{style:{"text-align":"center"}},null,-1),K2={style:{"text-align":"left"}},T2=t("code",null,"树",-1),A2=t("code",null,"广度优先搜索",-1),B2=t("code",null,"设计",-1),D2=t("code",null,"1+",-1),J2={style:{"text-align":"left"}},U2=t("td",{style:{"text-align":"center"}},"924",-1),W2={style:{"text-align":"left"}},X2={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},Y2=t("td",{style:{"text-align":"center"}},null,-1),Z2={style:{"text-align":"left"}},F2=t("code",null,"深度优先搜索",-1),Q2=t("code",null,"广度优先搜索",-1),R2=t("code",null,"并查集",-1),S2=t("code",null,"3+",-1),G2={style:{"text-align":"left"}},$2=t("td",{style:{"text-align":"center"}},"928",-1),ty={style:{"text-align":"left"}},ey={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},ly=t("td",{style:{"text-align":"center"}},null,-1),oy={style:{"text-align":"left"}},sy=t("code",null,"深度优先搜索",-1),ny=t("code",null,"广度优先搜索",-1),dy=t("code",null,"并查集",-1),_y=t("code",null,"3+",-1),cy={style:{"text-align":"left"}},ay=t("td",{style:{"text-align":"center"}},"934",-1),ry={style:{"text-align":"left"}},iy={href:"https://leetcode.com/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},hy=t("td",{style:{"text-align":"center"}},null,-1),fy={style:{"text-align":"left"}},uy=t("code",null,"深度优先搜索",-1),gy=t("code",null,"广度优先搜索",-1),my=t("code",null,"数组",-1),yy=t("code",null,"1+",-1),xy={style:{"text-align":"left"}},by=t("td",{style:{"text-align":"center"}},"958",-1),py={style:{"text-align":"left"}},ky={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},My={style:{"text-align":"center"}},Iy={style:{"text-align":"left"}},vy=t("code",null,"树",-1),Hy=t("code",null,"广度优先搜索",-1),wy=t("code",null,"二叉树",-1),zy={style:{"text-align":"left"}},Ey=t("td",{style:{"text-align":"center"}},"959",-1),Oy={style:{"text-align":"left"}},Ly={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},Cy=t("td",{style:{"text-align":"center"}},null,-1),jy={style:{"text-align":"left"}},Py=t("code",null,"深度优先搜索",-1),qy=t("code",null,"广度优先搜索",-1),Ny=t("code",null,"并查集",-1),Vy=t("code",null,"3+",-1),Ky={style:{"text-align":"left"}},Ty=t("td",{style:{"text-align":"center"}},"965",-1),Ay={style:{"text-align":"left"}},By={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},Dy=t("td",{style:{"text-align":"center"}},null,-1),Jy={style:{"text-align":"left"}},Uy=t("code",null,"树",-1),Wy=t("code",null,"深度优先搜索",-1),Xy=t("code",null,"广度优先搜索",-1),Yy=t("code",null,"1+",-1),Zy={style:{"text-align":"left"}},Fy=t("td",{style:{"text-align":"center"}},"967",-1),Qy={style:{"text-align":"left"}},Ry={href:"https://leetcode.com/problems/numbers-with-same-consecutive-differences",target:"_blank",rel:"noopener noreferrer"},Sy=t("td",{style:{"text-align":"center"}},null,-1),Gy={style:{"text-align":"left"}},$y=t("code",null,"广度优先搜索",-1),tx=t("code",null,"回溯",-1),ex={style:{"text-align":"left"}},lx=t("td",{style:{"text-align":"center"}},"987",-1),ox={style:{"text-align":"left"}},sx={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},nx=t("td",{style:{"text-align":"center"}},null,-1),dx={style:{"text-align":"left"}},_x=t("code",null,"树",-1),cx=t("code",null,"深度优先搜索",-1),ax=t("code",null,"广度优先搜索",-1),rx=t("code",null,"3+",-1),ix={style:{"text-align":"left"}},hx=t("td",{style:{"text-align":"center"}},"993",-1),fx={style:{"text-align":"left"}},ux={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},gx=t("td",{style:{"text-align":"center"}},null,-1),mx={style:{"text-align":"left"}},yx=t("code",null,"树",-1),xx=t("code",null,"深度优先搜索",-1),bx=t("code",null,"广度优先搜索",-1),px=t("code",null,"1+",-1),kx={style:{"text-align":"left"}},Mx=t("td",{style:{"text-align":"center"}},"994",-1),Ix={style:{"text-align":"left"}},vx={href:"https://leetcode.com/problems/rotting-oranges",target:"_blank",rel:"noopener noreferrer"},Hx={style:{"text-align":"center"}},wx={style:{"text-align":"left"}},zx=t("code",null,"广度优先搜索",-1),Ex=t("code",null,"数组",-1),Ox=t("code",null,"矩阵",-1),Lx={style:{"text-align":"left"}},Cx=t("td",{style:{"text-align":"center"}},"1020",-1),jx={style:{"text-align":"left"}},Px={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},qx=t("td",{style:{"text-align":"center"}},null,-1),Nx={style:{"text-align":"left"}},Vx=t("code",null,"深度优先搜索",-1),Kx=t("code",null,"广度优先搜索",-1),Tx=t("code",null,"并查集",-1),Ax=t("code",null,"2+",-1),Bx={style:{"text-align":"left"}},Dx=t("td",{style:{"text-align":"center"}},"1034",-1),Jx={style:{"text-align":"left"}},Ux={href:"https://leetcode.com/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},Wx=t("td",{style:{"text-align":"center"}},null,-1),Xx={style:{"text-align":"left"}},Yx=t("code",null,"深度优先搜索",-1),Zx=t("code",null,"广度优先搜索",-1),Fx=t("code",null,"数组",-1),Qx=t("code",null,"1+",-1),Rx={style:{"text-align":"left"}},Sx=t("td",{style:{"text-align":"center"}},"1036",-1),Gx={style:{"text-align":"left"}},$x={href:"https://leetcode.com/problems/escape-a-large-maze",target:"_blank",rel:"noopener noreferrer"},tb=t("td",{style:{"text-align":"center"}},null,-1),eb={style:{"text-align":"left"}},lb=t("code",null,"深度优先搜索",-1),ob=t("code",null,"广度优先搜索",-1),sb=t("code",null,"数组",-1),nb=t("code",null,"1+",-1),db={style:{"text-align":"left"}},_b=t("td",{style:{"text-align":"center"}},"1042",-1),cb={style:{"text-align":"left"}},ab={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},rb=t("td",{style:{"text-align":"center"}},null,-1),ib={style:{"text-align":"left"}},hb=t("code",null,"深度优先搜索",-1),fb=t("code",null,"广度优先搜索",-1),ub=t("code",null,"图",-1),gb={style:{"text-align":"left"}},mb=t("td",{style:{"text-align":"center"}},"1087",-1),yb={style:{"text-align":"left"}},xb={href:"https://leetcode.com/problems/brace-expansion",target:"_blank",rel:"noopener noreferrer"},bb=t("td",{style:{"text-align":"center"}},null,-1),pb={style:{"text-align":"left"}},kb=t("code",null,"广度优先搜索",-1),Mb=t("code",null,"字符串",-1),Ib=t("code",null,"回溯",-1),vb={style:{"text-align":"left"}},Hb=t("td",{style:{"text-align":"center"}},"1091",-1),wb={style:{"text-align":"left"}},zb={href:"https://leetcode.com/problems/shortest-path-in-binary-matrix",target:"_blank",rel:"noopener noreferrer"},Eb=t("td",{style:{"text-align":"center"}},null,-1),Ob={style:{"text-align":"left"}},Lb=t("code",null,"广度优先搜索",-1),Cb=t("code",null,"数组",-1),jb=t("code",null,"矩阵",-1),Pb={style:{"text-align":"left"}},qb=t("td",{style:{"text-align":"center"}},"1096",-1),Nb={style:{"text-align":"left"}},Vb={href:"https://leetcode.com/problems/brace-expansion-ii",target:"_blank",rel:"noopener noreferrer"},Kb=t("td",{style:{"text-align":"center"}},null,-1),Tb={style:{"text-align":"left"}},Ab=t("code",null,"栈",-1),Bb=t("code",null,"广度优先搜索",-1),Db=t("code",null,"字符串",-1),Jb=t("code",null,"1+",-1),Ub={style:{"text-align":"left"}},Wb=t("td",{style:{"text-align":"center"}},"1102",-1),Xb={style:{"text-align":"left"}},Yb={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},Zb=t("td",{style:{"text-align":"center"}},null,-1),Fb={style:{"text-align":"left"}},Qb=t("code",null,"深度优先搜索",-1),Rb=t("code",null,"广度优先搜索",-1),Sb=t("code",null,"并查集",-1),Gb=t("code",null,"4+",-1),$b={style:{"text-align":"left"}},tp=t("td",{style:{"text-align":"center"}},"1123",-1),ep={style:{"text-align":"left"}},lp={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},op=t("td",{style:{"text-align":"center"}},null,-1),sp={style:{"text-align":"left"}},np=t("code",null,"树",-1),dp=t("code",null,"深度优先搜索",-1),_p=t("code",null,"广度优先搜索",-1),cp=t("code",null,"2+",-1),ap={style:{"text-align":"left"}},rp=t("td",{style:{"text-align":"center"}},"1129",-1),ip={style:{"text-align":"left"}},hp={href:"https://leetcode.com/problems/shortest-path-with-alternating-colors",target:"_blank",rel:"noopener noreferrer"},fp=t("td",{style:{"text-align":"center"}},null,-1),up={style:{"text-align":"left"}},gp=t("code",null,"广度优先搜索",-1),mp=t("code",null,"图",-1),yp={style:{"text-align":"left"}},xp=t("td",{style:{"text-align":"center"}},"1161",-1),bp={style:{"text-align":"left"}},pp={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},kp=t("td",{style:{"text-align":"center"}},null,-1),Mp={style:{"text-align":"left"}},Ip=t("code",null,"树",-1),vp=t("code",null,"深度优先搜索",-1),Hp=t("code",null,"广度优先搜索",-1),wp=t("code",null,"1+",-1),zp={style:{"text-align":"left"}},Ep=t("td",{style:{"text-align":"center"}},"1162",-1),Op={style:{"text-align":"left"}},Lp={href:"https://leetcode.com/problems/as-far-from-land-as-possible",target:"_blank",rel:"noopener noreferrer"},Cp=t("td",{style:{"text-align":"center"}},null,-1),jp={style:{"text-align":"left"}},Pp=t("code",null,"广度优先搜索",-1),qp=t("code",null,"数组",-1),Np=t("code",null,"动态规划",-1),Vp=t("code",null,"1+",-1),Kp={style:{"text-align":"left"}},Tp=t("td",{style:{"text-align":"center"}},"1197",-1),Ap={style:{"text-align":"left"}},Bp={href:"https://leetcode.com/problems/minimum-knight-moves",target:"_blank",rel:"noopener noreferrer"},Dp=t("td",{style:{"text-align":"center"}},null,-1),Jp={style:{"text-align":"left"}},Up=t("code",null,"广度优先搜索",-1),Wp={style:{"text-align":"left"}},Xp=t("td",{style:{"text-align":"center"}},"1202",-1),Yp={style:{"text-align":"left"}},Zp={href:"https://leetcode.com/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},Fp=t("td",{style:{"text-align":"center"}},null,-1),Qp={style:{"text-align":"left"}},Rp=t("code",null,"深度优先搜索",-1),Sp=t("code",null,"广度优先搜索",-1),Gp=t("code",null,"并查集",-1),$p=t("code",null,"4+",-1),t0={style:{"text-align":"left"}},e0=t("td",{style:{"text-align":"center"}},"1203",-1),l0={style:{"text-align":"left"}},o0={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},s0=t("td",{style:{"text-align":"center"}},null,-1),n0={style:{"text-align":"left"}},d0=t("code",null,"深度优先搜索",-1),_0=t("code",null,"广度优先搜索",-1),c0=t("code",null,"图",-1),a0=t("code",null,"1+",-1),r0={style:{"text-align":"left"}},i0=t("td",{style:{"text-align":"center"}},"1210",-1),h0={style:{"text-align":"left"}},f0={href:"https://leetcode.com/problems/minimum-moves-to-reach-target-with-rotations",target:"_blank",rel:"noopener noreferrer"},u0=t("td",{style:{"text-align":"center"}},null,-1),g0={style:{"text-align":"left"}},m0=t("code",null,"广度优先搜索",-1),y0=t("code",null,"数组",-1),x0=t("code",null,"矩阵",-1),b0={style:{"text-align":"left"}},p0=t("td",{style:{"text-align":"center"}},"1215",-1),k0={style:{"text-align":"left"}},M0={href:"https://leetcode.com/problems/stepping-numbers",target:"_blank",rel:"noopener noreferrer"},I0=t("td",{style:{"text-align":"center"}},null,-1),v0={style:{"text-align":"left"}},H0=t("code",null,"广度优先搜索",-1),w0=t("code",null,"数学",-1),z0=t("code",null,"回溯",-1),E0={style:{"text-align":"left"}},O0=t("td",{style:{"text-align":"center"}},"1236",-1),L0={style:{"text-align":"left"}},C0={href:"https://leetcode.com/problems/web-crawler",target:"_blank",rel:"noopener noreferrer"},j0=t("td",{style:{"text-align":"center"}},null,-1),P0={style:{"text-align":"left"}},q0=t("code",null,"深度优先搜索",-1),N0=t("code",null,"广度优先搜索",-1),V0=t("code",null,"字符串",-1),K0=t("code",null,"1+",-1),T0={style:{"text-align":"left"}},A0=t("td",{style:{"text-align":"center"}},"1242",-1),B0={style:{"text-align":"left"}},D0={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},J0=t("td",{style:{"text-align":"center"}},null,-1),U0={style:{"text-align":"left"}},W0=t("code",null,"深度优先搜索",-1),X0=t("code",null,"广度优先搜索",-1),Y0=t("code",null,"多线程",-1),Z0={style:{"text-align":"left"}},F0=t("td",{style:{"text-align":"center"}},"1245",-1),Q0={style:{"text-align":"left"}},R0={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},S0=t("td",{style:{"text-align":"center"}},null,-1),G0={style:{"text-align":"left"}},$0=t("code",null,"树",-1),t3=t("code",null,"深度优先搜索",-1),e3=t("code",null,"广度优先搜索",-1),l3=t("code",null,"2+",-1),o3={style:{"text-align":"left"}},s3=t("td",{style:{"text-align":"center"}},"1254",-1),n3={style:{"text-align":"left"}},d3={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},_3=t("td",{style:{"text-align":"center"}},null,-1),c3={style:{"text-align":"left"}},a3=t("code",null,"深度优先搜索",-1),r3=t("code",null,"广度优先搜索",-1),i3=t("code",null,"并查集",-1),h3=t("code",null,"2+",-1),f3={style:{"text-align":"left"}},u3=t("td",{style:{"text-align":"center"}},"1257",-1),g3={style:{"text-align":"left"}},m3={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},y3=t("td",{style:{"text-align":"center"}},null,-1),x3={style:{"text-align":"left"}},b3=t("code",null,"树",-1),p3=t("code",null,"深度优先搜索",-1),k3=t("code",null,"广度优先搜索",-1),M3=t("code",null,"3+",-1),I3={style:{"text-align":"left"}},v3=t("td",{style:{"text-align":"center"}},"1261",-1),H3={style:{"text-align":"left"}},w3={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},z3=t("td",{style:{"text-align":"center"}},null,-1),E3={style:{"text-align":"left"}},O3=t("code",null,"树",-1),L3=t("code",null,"深度优先搜索",-1),C3=t("code",null,"广度优先搜索",-1),j3=t("code",null,"3+",-1),P3={style:{"text-align":"left"}},q3=t("td",{style:{"text-align":"center"}},"1263",-1),N3={style:{"text-align":"left"}},V3={href:"https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location",target:"_blank",rel:"noopener noreferrer"},K3=t("td",{style:{"text-align":"center"}},null,-1),T3={style:{"text-align":"left"}},A3=t("code",null,"广度优先搜索",-1),B3=t("code",null,"数组",-1),D3=t("code",null,"矩阵",-1),J3=t("code",null,"1+",-1),U3={style:{"text-align":"left"}},W3=t("td",{style:{"text-align":"center"}},"1267",-1),X3={style:{"text-align":"left"}},Y3={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},Z3=t("td",{style:{"text-align":"center"}},null,-1),F3={style:{"text-align":"left"}},Q3=t("code",null,"深度优先搜索",-1),R3=t("code",null,"广度优先搜索",-1),S3=t("code",null,"并查集",-1),G3=t("code",null,"3+",-1),$3={style:{"text-align":"left"}},t4=t("td",{style:{"text-align":"center"}},"1273",-1),e4={style:{"text-align":"left"}},l4={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},o4=t("td",{style:{"text-align":"center"}},null,-1),s4={style:{"text-align":"left"}},n4=t("code",null,"树",-1),d4=t("code",null,"深度优先搜索",-1),_4=t("code",null,"广度优先搜索",-1),c4=t("code",null,"1+",-1),a4={style:{"text-align":"left"}},r4=t("td",{style:{"text-align":"center"}},"1284",-1),i4={style:{"text-align":"left"}},h4={href:"https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",target:"_blank",rel:"noopener noreferrer"},f4=t("td",{style:{"text-align":"center"}},null,-1),u4={style:{"text-align":"left"}},g4=t("code",null,"位运算",-1),m4=t("code",null,"广度优先搜索",-1),y4=t("code",null,"数组",-1),x4=t("code",null,"2+",-1),b4={style:{"text-align":"left"}},p4=t("td",{style:{"text-align":"center"}},"1293",-1),k4={style:{"text-align":"left"}},M4={href:"https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination",target:"_blank",rel:"noopener noreferrer"},I4=t("td",{style:{"text-align":"center"}},null,-1),v4={style:{"text-align":"left"}},H4=t("code",null,"广度优先搜索",-1),w4=t("code",null,"数组",-1),z4=t("code",null,"矩阵",-1),E4={style:{"text-align":"left"}},O4=t("td",{style:{"text-align":"center"}},"1298",-1),L4={style:{"text-align":"left"}},C4={href:"https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes",target:"_blank",rel:"noopener noreferrer"},j4=t("td",{style:{"text-align":"center"}},null,-1),P4={style:{"text-align":"left"}},q4=t("code",null,"广度优先搜索",-1),N4=t("code",null,"图",-1),V4=t("code",null,"数组",-1),K4={style:{"text-align":"left"}},T4=t("td",{style:{"text-align":"center"}},"1302",-1),A4={style:{"text-align":"left"}},B4={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},D4=t("td",{style:{"text-align":"center"}},null,-1),J4={style:{"text-align":"left"}},U4=t("code",null,"树",-1),W4=t("code",null,"深度优先搜索",-1),X4=t("code",null,"广度优先搜索",-1),Y4=t("code",null,"1+",-1),Z4={style:{"text-align":"left"}},F4=t("td",{style:{"text-align":"center"}},"1306",-1),Q4={style:{"text-align":"left"}},R4={href:"https://leetcode.com/problems/jump-game-iii",target:"_blank",rel:"noopener noreferrer"},S4=t("td",{style:{"text-align":"center"}},null,-1),G4={style:{"text-align":"left"}},$4=t("code",null,"深度优先搜索",-1),t6=t("code",null,"广度优先搜索",-1),e6=t("code",null,"数组",-1),l6={style:{"text-align":"left"}},o6=t("td",{style:{"text-align":"center"}},"1311",-1),s6={style:{"text-align":"left"}},n6={href:"https://leetcode.com/problems/get-watched-videos-by-your-friends",target:"_blank",rel:"noopener noreferrer"},d6=t("td",{style:{"text-align":"center"}},null,-1),_6={style:{"text-align":"left"}},c6=t("code",null,"广度优先搜索",-1),a6=t("code",null,"图",-1),r6=t("code",null,"数组",-1),i6=t("code",null,"2+",-1),h6={style:{"text-align":"left"}},f6=t("td",{style:{"text-align":"center"}},"1315",-1),u6={style:{"text-align":"left"}},g6={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},m6=t("td",{style:{"text-align":"center"}},null,-1),y6={style:{"text-align":"left"}},x6=t("code",null,"树",-1),b6=t("code",null,"深度优先搜索",-1),p6=t("code",null,"广度优先搜索",-1),k6=t("code",null,"1+",-1),M6={style:{"text-align":"left"}},I6=t("td",{style:{"text-align":"center"}},"1319",-1),v6={style:{"text-align":"left"}},H6={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},w6=t("td",{style:{"text-align":"center"}},null,-1),z6={style:{"text-align":"left"}},E6=t("code",null,"深度优先搜索",-1),O6=t("code",null,"广度优先搜索",-1),L6=t("code",null,"并查集",-1),C6=t("code",null,"1+",-1),j6={style:{"text-align":"left"}},P6=t("td",{style:{"text-align":"center"}},"1345",-1),q6={style:{"text-align":"left"}},N6={href:"https://leetcode.com/problems/jump-game-iv",target:"_blank",rel:"noopener noreferrer"},V6=t("td",{style:{"text-align":"center"}},null,-1),K6={style:{"text-align":"left"}},T6=t("code",null,"广度优先搜索",-1),A6=t("code",null,"数组",-1),B6=t("code",null,"哈希表",-1),D6={style:{"text-align":"left"}},J6=t("td",{style:{"text-align":"center"}},"1361",-1),U6={style:{"text-align":"left"}},W6={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},X6=t("td",{style:{"text-align":"center"}},null,-1),Y6={style:{"text-align":"left"}},Z6=t("code",null,"树",-1),F6=t("code",null,"深度优先搜索",-1),Q6=t("code",null,"广度优先搜索",-1),R6=t("code",null,"3+",-1),S6={style:{"text-align":"left"}},G6=t("td",{style:{"text-align":"center"}},"1368",-1),$6={style:{"text-align":"left"}},t8={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},e8=t("td",{style:{"text-align":"center"}},null,-1),l8={style:{"text-align":"left"}},o8=t("code",null,"广度优先搜索",-1),s8=t("code",null,"图",-1),n8=t("code",null,"数组",-1),d8=t("code",null,"3+",-1),_8={style:{"text-align":"left"}},c8=t("td",{style:{"text-align":"center"}},"1376",-1),a8={style:{"text-align":"left"}},r8={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},i8=t("td",{style:{"text-align":"center"}},null,-1),h8={style:{"text-align":"left"}},f8=t("code",null,"树",-1),u8=t("code",null,"深度优先搜索",-1),g8=t("code",null,"广度优先搜索",-1),m8={style:{"text-align":"left"}},y8=t("td",{style:{"text-align":"center"}},"1377",-1),x8={style:{"text-align":"left"}},b8={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},p8=t("td",{style:{"text-align":"center"}},null,-1),k8={style:{"text-align":"left"}},M8=t("code",null,"树",-1),I8=t("code",null,"深度优先搜索",-1),v8=t("code",null,"广度优先搜索",-1),H8=t("code",null,"1+",-1),w8={style:{"text-align":"left"}},z8=t("td",{style:{"text-align":"center"}},"1379",-1),E8={style:{"text-align":"left"}},O8={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},L8=t("td",{style:{"text-align":"center"}},null,-1),C8={style:{"text-align":"left"}},j8=t("code",null,"树",-1),P8=t("code",null,"深度优先搜索",-1),q8=t("code",null,"广度优先搜索",-1),N8=t("code",null,"1+",-1),V8={style:{"text-align":"left"}},K8=t("td",{style:{"text-align":"center"}},"1391",-1),T8={style:{"text-align":"left"}},A8={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},B8=t("td",{style:{"text-align":"center"}},null,-1),D8={style:{"text-align":"left"}},J8=t("code",null,"深度优先搜索",-1),U8=t("code",null,"广度优先搜索",-1),W8=t("code",null,"并查集",-1),X8=t("code",null,"2+",-1),Y8={style:{"text-align":"left"}},Z8=t("td",{style:{"text-align":"center"}},"1430",-1),F8={style:{"text-align":"left"}},Q8={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},R8=t("td",{style:{"text-align":"center"}},null,-1),S8={style:{"text-align":"left"}},G8=t("code",null,"树",-1),$8=t("code",null,"深度优先搜索",-1),t5=t("code",null,"广度优先搜索",-1),e5=t("code",null,"1+",-1),l5={style:{"text-align":"left"}},o5=t("td",{style:{"text-align":"center"}},"1443",-1),s5={style:{"text-align":"left"}},n5={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},d5=t("td",{style:{"text-align":"center"}},null,-1),_5={style:{"text-align":"left"}},c5=t("code",null,"树",-1),a5=t("code",null,"深度优先搜索",-1),r5=t("code",null,"广度优先搜索",-1),i5=t("code",null,"1+",-1),h5={style:{"text-align":"left"}},f5=t("td",{style:{"text-align":"center"}},"1448",-1),u5={style:{"text-align":"left"}},g5={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},m5=t("td",{style:{"text-align":"center"}},null,-1),y5={style:{"text-align":"left"}},x5=t("code",null,"树",-1),b5=t("code",null,"深度优先搜索",-1),p5=t("code",null,"广度优先搜索",-1),k5=t("code",null,"1+",-1),M5={style:{"text-align":"left"}},I5=t("td",{style:{"text-align":"center"}},"1457",-1),v5={style:{"text-align":"left"}},H5={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},w5=t("td",{style:{"text-align":"center"}},null,-1),z5={style:{"text-align":"left"}},E5=t("code",null,"位运算",-1),O5=t("code",null,"树",-1),L5=t("code",null,"深度优先搜索",-1),C5=t("code",null,"2+",-1),j5={style:{"text-align":"left"}},P5=t("td",{style:{"text-align":"center"}},"1462",-1),q5={style:{"text-align":"left"}},N5={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},V5=t("td",{style:{"text-align":"center"}},null,-1),K5={style:{"text-align":"left"}},T5=t("code",null,"深度优先搜索",-1),A5=t("code",null,"广度优先搜索",-1),B5=t("code",null,"图",-1),D5=t("code",null,"1+",-1),J5={style:{"text-align":"left"}},U5=t("td",{style:{"text-align":"center"}},"1466",-1),W5={style:{"text-align":"left"}},X5={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},Y5=t("td",{style:{"text-align":"center"}},null,-1),Z5={style:{"text-align":"left"}},F5=t("code",null,"深度优先搜索",-1),Q5=t("code",null,"广度优先搜索",-1),R5=t("code",null,"图",-1),S5={style:{"text-align":"left"}},G5=t("td",{style:{"text-align":"center"}},"1469",-1),$5={style:{"text-align":"left"}},t7={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},e7=t("td",{style:{"text-align":"center"}},null,-1),l7={style:{"text-align":"left"}},o7=t("code",null,"树",-1),s7=t("code",null,"深度优先搜索",-1),n7=t("code",null,"广度优先搜索",-1),d7=t("code",null,"1+",-1),_7={style:{"text-align":"left"}},c7=t("td",{style:{"text-align":"center"}},"1483",-1),a7={style:{"text-align":"left"}},r7={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},i7=t("td",{style:{"text-align":"center"}},null,-1),h7={style:{"text-align":"left"}},f7=t("code",null,"树",-1),u7=t("code",null,"深度优先搜索",-1),g7=t("code",null,"广度优先搜索",-1),m7=t("code",null,"3+",-1),y7={style:{"text-align":"left"}},x7=t("td",{style:{"text-align":"center"}},"1485",-1),b7={style:{"text-align":"left"}},p7={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},k7=t("td",{style:{"text-align":"center"}},null,-1),M7={style:{"text-align":"left"}},I7=t("code",null,"树",-1),v7=t("code",null,"深度优先搜索",-1),H7=t("code",null,"广度优先搜索",-1),w7=t("code",null,"2+",-1),z7={style:{"text-align":"left"}},E7=t("td",{style:{"text-align":"center"}},"1490",-1),O7={style:{"text-align":"left"}},L7={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},C7=t("td",{style:{"text-align":"center"}},null,-1),j7={style:{"text-align":"left"}},P7=t("code",null,"树",-1),q7=t("code",null,"深度优先搜索",-1),N7=t("code",null,"广度优先搜索",-1),V7=t("code",null,"1+",-1),K7={style:{"text-align":"left"}},T7=t("td",{style:{"text-align":"center"}},"1519",-1),A7={style:{"text-align":"left"}},B7={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},D7=t("td",{style:{"text-align":"center"}},null,-1),J7={style:{"text-align":"left"}},U7=t("code",null,"树",-1),W7=t("code",null,"深度优先搜索",-1),X7=t("code",null,"广度优先搜索",-1),Y7=t("code",null,"2+",-1),Z7={style:{"text-align":"left"}},F7=t("td",{style:{"text-align":"center"}},"1559",-1),Q7={style:{"text-align":"left"}},R7={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},S7=t("td",{style:{"text-align":"center"}},null,-1),G7={style:{"text-align":"left"}},$7=t("code",null,"深度优先搜索",-1),t9=t("code",null,"广度优先搜索",-1),e9=t("code",null,"并查集",-1),l9=t("code",null,"2+",-1),o9={style:{"text-align":"left"}},s9=t("td",{style:{"text-align":"center"}},"1568",-1),n9={style:{"text-align":"left"}},d9={href:"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},_9=t("td",{style:{"text-align":"center"}},null,-1),c9={style:{"text-align":"left"}},a9=t("code",null,"深度优先搜索",-1),r9=t("code",null,"广度优先搜索",-1),i9=t("code",null,"数组",-1),h9=t("code",null,"2+",-1),f9={style:{"text-align":"left"}},u9=t("td",{style:{"text-align":"center"}},"1602",-1),g9={style:{"text-align":"left"}},m9={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},y9=t("td",{style:{"text-align":"center"}},null,-1),x9={style:{"text-align":"left"}},b9=t("code",null,"树",-1),p9=t("code",null,"广度优先搜索",-1),k9=t("code",null,"二叉树",-1),M9={style:{"text-align":"left"}},I9=t("td",{style:{"text-align":"center"}},"1609",-1),v9={style:{"text-align":"left"}},H9={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},w9=t("td",{style:{"text-align":"center"}},null,-1),z9={style:{"text-align":"left"}},E9=t("code",null,"树",-1),O9=t("code",null,"广度优先搜索",-1),L9=t("code",null,"二叉树",-1),C9={style:{"text-align":"left"}},j9=t("td",{style:{"text-align":"center"}},"1625",-1),P9={style:{"text-align":"left"}},q9={href:"https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations",target:"_blank",rel:"noopener noreferrer"},N9=t("td",{style:{"text-align":"center"}},null,-1),V9={style:{"text-align":"left"}},K9=t("code",null,"深度优先搜索",-1),T9=t("code",null,"广度优先搜索",-1),A9=t("code",null,"字符串",-1),B9=t("code",null,"1+",-1),D9={style:{"text-align":"left"}},J9=t("td",{style:{"text-align":"center"}},"1631",-1),U9={style:{"text-align":"left"}},W9={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},X9=t("td",{style:{"text-align":"center"}},null,-1),Y9={style:{"text-align":"left"}},Z9=t("code",null,"深度优先搜索",-1),F9=t("code",null,"广度优先搜索",-1),Q9=t("code",null,"并查集",-1),R9=t("code",null,"4+",-1),S9={style:{"text-align":"left"}},G9=t("td",{style:{"text-align":"center"}},"1654",-1),$9={style:{"text-align":"left"}},tk={href:"https://leetcode.com/problems/minimum-jumps-to-reach-home",target:"_blank",rel:"noopener noreferrer"},ek=t("td",{style:{"text-align":"center"}},null,-1),lk={style:{"text-align":"left"}},ok=t("code",null,"广度优先搜索",-1),sk=t("code",null,"数组",-1),nk=t("code",null,"动态规划",-1),dk={style:{"text-align":"left"}},_k=t("td",{style:{"text-align":"center"}},"1660",-1),ck={style:{"text-align":"left"}},ak={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},rk=t("td",{style:{"text-align":"center"}},null,-1),ik={style:{"text-align":"left"}},hk=t("code",null,"树",-1),fk=t("code",null,"深度优先搜索",-1),uk=t("code",null,"广度优先搜索",-1),gk=t("code",null,"2+",-1),mk={style:{"text-align":"left"}},yk=t("td",{style:{"text-align":"center"}},"1730",-1),xk={style:{"text-align":"left"}},bk={href:"https://leetcode.com/problems/shortest-path-to-get-food",target:"_blank",rel:"noopener noreferrer"},pk=t("td",{style:{"text-align":"center"}},null,-1),kk={style:{"text-align":"left"}},Mk=t("code",null,"广度优先搜索",-1),Ik=t("code",null,"数组",-1),vk=t("code",null,"矩阵",-1),Hk={style:{"text-align":"left"}},wk=t("td",{style:{"text-align":"center"}},"1740",-1),zk={style:{"text-align":"left"}},Ek={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ok=t("td",{style:{"text-align":"center"}},null,-1),Lk={style:{"text-align":"left"}},Ck=t("code",null,"树",-1),jk=t("code",null,"深度优先搜索",-1),Pk=t("code",null,"广度优先搜索",-1),qk=t("code",null,"2+",-1),Nk={style:{"text-align":"left"}},Vk=t("td",{style:{"text-align":"center"}},"1765",-1),Kk={style:{"text-align":"left"}},Tk={href:"https://leetcode.com/problems/map-of-highest-peak",target:"_blank",rel:"noopener noreferrer"},Ak=t("td",{style:{"text-align":"center"}},null,-1),Bk={style:{"text-align":"left"}},Dk=t("code",null,"广度优先搜索",-1),Jk=t("code",null,"数组",-1),Uk=t("code",null,"矩阵",-1),Wk={style:{"text-align":"left"}},Xk=t("td",{style:{"text-align":"center"}},"1778",-1),Yk={style:{"text-align":"left"}},Zk={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},Fk=t("td",{style:{"text-align":"center"}},null,-1),Qk={style:{"text-align":"left"}},Rk=t("code",null,"深度优先搜索",-1),Sk=t("code",null,"广度优先搜索",-1),Gk=t("code",null,"图",-1),$k=t("code",null,"1+",-1),tM={style:{"text-align":"left"}},eM=t("td",{style:{"text-align":"center"}},"1810",-1),lM={style:{"text-align":"left"}},oM={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},sM=t("td",{style:{"text-align":"center"}},null,-1),nM={style:{"text-align":"left"}},dM=t("code",null,"深度优先搜索",-1),_M=t("code",null,"广度优先搜索",-1),cM=t("code",null,"图",-1),aM=t("code",null,"2+",-1),rM={style:{"text-align":"left"}},iM=t("td",{style:{"text-align":"center"}},"1905",-1),hM={style:{"text-align":"left"}},fM={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},uM=t("td",{style:{"text-align":"center"}},null,-1),gM={style:{"text-align":"left"}},mM=t("code",null,"深度优先搜索",-1),yM=t("code",null,"广度优先搜索",-1),xM=t("code",null,"并查集",-1),bM=t("code",null,"2+",-1),pM={style:{"text-align":"left"}},kM=t("td",{style:{"text-align":"center"}},"1926",-1),MM={style:{"text-align":"left"}},IM={href:"https://leetcode.com/problems/nearest-exit-from-entrance-in-maze",target:"_blank",rel:"noopener noreferrer"},vM=t("td",{style:{"text-align":"center"}},null,-1),HM={style:{"text-align":"left"}},wM=t("code",null,"广度优先搜索",-1),zM=t("code",null,"数组",-1),EM=t("code",null,"矩阵",-1),OM={style:{"text-align":"left"}},LM=t("td",{style:{"text-align":"center"}},"1970",-1),CM={style:{"text-align":"left"}},jM={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},PM=t("td",{style:{"text-align":"center"}},null,-1),qM={style:{"text-align":"left"}},NM=t("code",null,"深度优先搜索",-1),VM=t("code",null,"广度优先搜索",-1),KM=t("code",null,"并查集",-1),TM=t("code",null,"3+",-1),AM={style:{"text-align":"left"}},BM=t("td",{style:{"text-align":"center"}},"1971",-1),DM={style:{"text-align":"left"}},JM={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},UM=t("td",{style:{"text-align":"center"}},null,-1),WM={style:{"text-align":"left"}},XM=t("code",null,"深度优先搜索",-1),YM=t("code",null,"广度优先搜索",-1),ZM=t("code",null,"并查集",-1),FM=t("code",null,"1+",-1),QM={style:{"text-align":"left"}},RM=t("td",{style:{"text-align":"center"}},"1992",-1),SM={style:{"text-align":"left"}},GM={href:"https://leetcode.com/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},$M=t("td",{style:{"text-align":"center"}},null,-1),tI={style:{"text-align":"left"}},eI=t("code",null,"深度优先搜索",-1),lI=t("code",null,"广度优先搜索",-1),oI=t("code",null,"数组",-1),sI=t("code",null,"1+",-1),nI={style:{"text-align":"left"}},dI=t("td",{style:{"text-align":"center"}},"1993",-1),_I={style:{"text-align":"left"}},cI={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},aI=t("td",{style:{"text-align":"center"}},null,-1),rI={style:{"text-align":"left"}},iI=t("code",null,"树",-1),hI=t("code",null,"深度优先搜索",-1),fI=t("code",null,"广度优先搜索",-1),uI=t("code",null,"3+",-1),gI={style:{"text-align":"left"}},mI=t("td",{style:{"text-align":"center"}},"2039",-1),yI={style:{"text-align":"left"}},xI={href:"https://leetcode.com/problems/the-time-when-the-network-becomes-idle",target:"_blank",rel:"noopener noreferrer"},bI=t("td",{style:{"text-align":"center"}},null,-1),pI={style:{"text-align":"left"}},kI=t("code",null,"广度优先搜索",-1),MI=t("code",null,"图",-1),II=t("code",null,"数组",-1),vI={style:{"text-align":"left"}},HI=t("td",{style:{"text-align":"center"}},"2045",-1),wI={style:{"text-align":"left"}},zI={href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},EI=t("td",{style:{"text-align":"center"}},null,-1),OI={style:{"text-align":"left"}},LI=t("code",null,"广度优先搜索",-1),CI=t("code",null,"图",-1),jI=t("code",null,"最短路",-1),PI={style:{"text-align":"left"}},qI=t("td",{style:{"text-align":"center"}},"2059",-1),NI={style:{"text-align":"left"}},VI={href:"https://leetcode.com/problems/minimum-operations-to-convert-number",target:"_blank",rel:"noopener noreferrer"},KI=t("td",{style:{"text-align":"center"}},null,-1),TI={style:{"text-align":"left"}},AI=t("code",null,"广度优先搜索",-1),BI=t("code",null,"数组",-1),DI={style:{"text-align":"left"}},JI=t("td",{style:{"text-align":"center"}},"2092",-1),UI={style:{"text-align":"left"}},WI={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},XI=t("td",{style:{"text-align":"center"}},null,-1),YI={style:{"text-align":"left"}},ZI=t("code",null,"深度优先搜索",-1),FI=t("code",null,"广度优先搜索",-1),QI=t("code",null,"并查集",-1),RI=t("code",null,"2+",-1),SI={style:{"text-align":"left"}},GI=t("td",{style:{"text-align":"center"}},"2101",-1),$I={style:{"text-align":"left"}},tv={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},ev=t("td",{style:{"text-align":"center"}},null,-1),lv={style:{"text-align":"left"}},ov=t("code",null,"深度优先搜索",-1),sv=t("code",null,"广度优先搜索",-1),nv=t("code",null,"图",-1),dv=t("code",null,"3+",-1),_v={style:{"text-align":"left"}},cv=t("td",{style:{"text-align":"center"}},"2146",-1),av={style:{"text-align":"left"}},rv={href:"https://leetcode.com/problems/k-highest-ranked-items-within-a-price-range",target:"_blank",rel:"noopener noreferrer"},iv=t("td",{style:{"text-align":"center"}},null,-1),hv={style:{"text-align":"left"}},fv=t("code",null,"广度优先搜索",-1),uv=t("code",null,"数组",-1),gv=t("code",null,"矩阵",-1),mv=t("code",null,"2+",-1),yv={style:{"text-align":"left"}},xv=t("td",{style:{"text-align":"center"}},"2174",-1),bv={style:{"text-align":"left"}},pv={href:"https://leetcode.com/problems/remove-all-ones-with-row-and-column-flips-ii",target:"_blank",rel:"noopener noreferrer"},kv=t("td",{style:{"text-align":"center"}},null,-1),Mv={style:{"text-align":"left"}},Iv=t("code",null,"位运算",-1),vv=t("code",null,"广度优先搜索",-1),Hv=t("code",null,"数组",-1),wv=t("code",null,"1+",-1),zv={style:{"text-align":"left"}},Ev=t("td",{style:{"text-align":"center"}},"2192",-1),Ov={style:{"text-align":"left"}},Lv={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},Cv=t("td",{style:{"text-align":"center"}},null,-1),jv={style:{"text-align":"left"}},Pv=t("code",null,"深度优先搜索",-1),qv=t("code",null,"广度优先搜索",-1),Nv=t("code",null,"图",-1),Vv=t("code",null,"1+",-1),Kv={style:{"text-align":"left"}},Tv=t("td",{style:{"text-align":"center"}},"2204",-1),Av={style:{"text-align":"left"}},Bv={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Dv=t("td",{style:{"text-align":"center"}},null,-1),Jv={style:{"text-align":"left"}},Uv=t("code",null,"深度优先搜索",-1),Wv=t("code",null,"广度优先搜索",-1),Xv=t("code",null,"并查集",-1),Yv=t("code",null,"1+",-1),Zv={style:{"text-align":"left"}},Fv=t("td",{style:{"text-align":"center"}},"2258",-1),Qv={style:{"text-align":"left"}},Rv={href:"https://leetcode.com/problems/escape-the-spreading-fire",target:"_blank",rel:"noopener noreferrer"},Sv=t("td",{style:{"text-align":"center"}},null,-1),Gv={style:{"text-align":"left"}},$v=t("code",null,"广度优先搜索",-1),tH=t("code",null,"数组",-1),eH=t("code",null,"二分查找",-1),lH=t("code",null,"1+",-1),oH={style:{"text-align":"left"}},sH=t("td",{style:{"text-align":"center"}},"2277",-1),nH={style:{"text-align":"left"}},dH={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},_H=t("td",{style:{"text-align":"center"}},null,-1),cH={style:{"text-align":"left"}},aH=t("code",null,"树",-1),rH=t("code",null,"深度优先搜索",-1),iH=t("code",null,"广度优先搜索",-1),hH=t("code",null,"1+",-1),fH={style:{"text-align":"left"}},uH=t("td",{style:{"text-align":"center"}},"2290",-1),gH={style:{"text-align":"left"}},mH={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},yH=t("td",{style:{"text-align":"center"}},null,-1),xH={style:{"text-align":"left"}},bH=t("code",null,"广度优先搜索",-1),pH=t("code",null,"图",-1),kH=t("code",null,"数组",-1),MH=t("code",null,"3+",-1),IH={style:{"text-align":"left"}},vH=t("td",{style:{"text-align":"center"}},"2316",-1),HH={style:{"text-align":"left"}},wH={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},zH=t("td",{style:{"text-align":"center"}},null,-1),EH={style:{"text-align":"left"}},OH=t("code",null,"深度优先搜索",-1),LH=t("code",null,"广度优先搜索",-1),CH=t("code",null,"并查集",-1),jH=t("code",null,"1+",-1),PH={style:{"text-align":"left"}},qH=t("td",{style:{"text-align":"center"}},"2328",-1),NH={style:{"text-align":"left"}},VH={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},KH=t("td",{style:{"text-align":"center"}},null,-1),TH={style:{"text-align":"left"}},AH=t("code",null,"深度优先搜索",-1),BH=t("code",null,"广度优先搜索",-1),DH=t("code",null,"图",-1),JH=t("code",null,"5+",-1),UH={style:{"text-align":"left"}},WH=t("td",{style:{"text-align":"center"}},"2368",-1),XH={style:{"text-align":"left"}},YH={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},ZH=t("td",{style:{"text-align":"center"}},null,-1),FH={style:{"text-align":"left"}},QH=t("code",null,"树",-1),RH=t("code",null,"深度优先搜索",-1),SH=t("code",null,"广度优先搜索",-1),GH=t("code",null,"4+",-1),$H={style:{"text-align":"left"}},tw=t("td",{style:{"text-align":"center"}},"2385",-1),ew={style:{"text-align":"left"}},lw={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},ow=t("td",{style:{"text-align":"center"}},null,-1),sw={style:{"text-align":"left"}},nw=t("code",null,"树",-1),dw=t("code",null,"深度优先搜索",-1),_w=t("code",null,"广度优先搜索",-1),cw=t("code",null,"2+",-1),aw={style:{"text-align":"left"}},rw=t("td",{style:{"text-align":"center"}},"2415",-1),iw={style:{"text-align":"left"}},hw={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},fw=t("td",{style:{"text-align":"center"}},null,-1),uw={style:{"text-align":"left"}},gw=t("code",null,"树",-1),mw=t("code",null,"深度优先搜索",-1),yw=t("code",null,"广度优先搜索",-1),xw=t("code",null,"1+",-1),bw={style:{"text-align":"left"}},pw=t("td",{style:{"text-align":"center"}},"2445",-1),kw={style:{"text-align":"left"}},Mw={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},Iw=t("td",{style:{"text-align":"center"}},null,-1),vw={style:{"text-align":"left"}},Hw=t("code",null,"树",-1),ww=t("code",null,"深度优先搜索",-1),zw=t("code",null,"广度优先搜索",-1),Ew=t("code",null,"1+",-1),Ow={style:{"text-align":"left"}},Lw=t("td",{style:{"text-align":"center"}},"2458",-1),Cw={style:{"text-align":"left"}},jw={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},Pw=t("td",{style:{"text-align":"center"}},null,-1),qw={style:{"text-align":"left"}},Nw=t("code",null,"树",-1),Vw=t("code",null,"深度优先搜索",-1),Kw=t("code",null,"广度优先搜索",-1),Tw=t("code",null,"2+",-1),Aw={style:{"text-align":"left"}},Bw=t("td",{style:{"text-align":"center"}},"2467",-1),Dw={style:{"text-align":"left"}},Jw={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Uw=t("td",{style:{"text-align":"center"}},null,-1),Ww={style:{"text-align":"left"}},Xw=t("code",null,"树",-1),Yw=t("code",null,"深度优先搜索",-1),Zw=t("code",null,"广度优先搜索",-1),Fw=t("code",null,"2+",-1),Qw={style:{"text-align":"left"}},Rw=t("td",{style:{"text-align":"center"}},"2471",-1),Sw={style:{"text-align":"left"}},Gw={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},$w=t("td",{style:{"text-align":"center"}},null,-1),tz={style:{"text-align":"left"}},ez=t("code",null,"树",-1),lz=t("code",null,"广度优先搜索",-1),oz=t("code",null,"二叉树",-1),sz={style:{"text-align":"left"}},nz=t("td",{style:{"text-align":"center"}},"2477",-1),dz={style:{"text-align":"left"}},_z={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},cz=t("td",{style:{"text-align":"center"}},null,-1),az={style:{"text-align":"left"}},rz=t("code",null,"树",-1),iz=t("code",null,"深度优先搜索",-1),hz=t("code",null,"广度优先搜索",-1),fz=t("code",null,"1+",-1),uz={style:{"text-align":"left"}},gz=t("td",{style:{"text-align":"center"}},"2492",-1),mz={style:{"text-align":"left"}},yz={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},xz=t("td",{style:{"text-align":"center"}},null,-1),bz={style:{"text-align":"left"}},pz=t("code",null,"深度优先搜索",-1),kz=t("code",null,"广度优先搜索",-1),Mz=t("code",null,"并查集",-1),Iz=t("code",null,"1+",-1),vz={style:{"text-align":"left"}},Hz=t("td",{style:{"text-align":"center"}},"2493",-1),wz={style:{"text-align":"left"}},zz={href:"https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups",target:"_blank",rel:"noopener noreferrer"},Ez=t("td",{style:{"text-align":"center"}},null,-1),Oz={style:{"text-align":"left"}},Lz=t("code",null,"广度优先搜索",-1),Cz=t("code",null,"并查集",-1),jz=t("code",null,"图",-1),Pz={style:{"text-align":"left"}},qz=t("td",{style:{"text-align":"center"}},"2503",-1),Nz={style:{"text-align":"left"}},Vz={href:"https://leetcode.com/problems/maximum-number-of-points-from-grid-queries",target:"_blank",rel:"noopener noreferrer"},Kz=t("td",{style:{"text-align":"center"}},null,-1),Tz={style:{"text-align":"left"}},Az=t("code",null,"广度优先搜索",-1),Bz=t("code",null,"并查集",-1),Dz=t("code",null,"数组",-1),Jz=t("code",null,"4+",-1),Uz={style:{"text-align":"left"}},Wz=t("td",{style:{"text-align":"center"}},"2556",-1),Xz={style:{"text-align":"left"}},Yz={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},Zz=t("td",{style:{"text-align":"center"}},null,-1),Fz={style:{"text-align":"left"}},Qz=t("code",null,"深度优先搜索",-1),Rz=t("code",null,"广度优先搜索",-1),Sz=t("code",null,"数组",-1),Gz=t("code",null,"2+",-1),$z={style:{"text-align":"left"}},tE=t("td",{style:{"text-align":"center"}},"2577",-1),eE={style:{"text-align":"left"}},lE={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},oE=t("td",{style:{"text-align":"center"}},null,-1),sE={style:{"text-align":"left"}},nE=t("code",null,"广度优先搜索",-1),dE=t("code",null,"图",-1),_E=t("code",null,"数组",-1),cE=t("code",null,"3+",-1),aE={style:{"text-align":"left"}},rE=t("td",{style:{"text-align":"center"}},"2583",-1),iE={style:{"text-align":"left"}},hE={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},fE=t("td",{style:{"text-align":"center"}},null,-1),uE={style:{"text-align":"left"}},gE=t("code",null,"树",-1),mE=t("code",null,"广度优先搜索",-1),yE=t("code",null,"二叉树",-1),xE=t("code",null,"1+",-1),bE={style:{"text-align":"left"}},pE=t("td",{style:{"text-align":"center"}},"2596",-1),kE={style:{"text-align":"left"}},ME={href:"https://leetcode.com/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},IE=t("td",{style:{"text-align":"center"}},null,-1),vE={style:{"text-align":"left"}},HE=t("code",null,"深度优先搜索",-1),wE=t("code",null,"广度优先搜索",-1),zE=t("code",null,"数组",-1),EE=t("code",null,"2+",-1),OE={style:{"text-align":"left"}},LE=t("td",{style:{"text-align":"center"}},"2608",-1),CE={style:{"text-align":"left"}},jE={href:"https://leetcode.com/problems/shortest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},PE=t("td",{style:{"text-align":"center"}},null,-1),qE={style:{"text-align":"left"}},NE=t("code",null,"广度优先搜索",-1),VE=t("code",null,"图",-1),KE={style:{"text-align":"left"}},TE=t("td",{style:{"text-align":"center"}},"2612",-1),AE={style:{"text-align":"left"}},BE={href:"https://leetcode.com/problems/minimum-reverse-operations",target:"_blank",rel:"noopener noreferrer"},DE=t("td",{style:{"text-align":"center"}},null,-1),JE={style:{"text-align":"left"}},UE=t("code",null,"广度优先搜索",-1),WE=t("code",null,"数组",-1),XE=t("code",null,"有序集合",-1),YE={style:{"text-align":"left"}},ZE=t("td",{style:{"text-align":"center"}},"2617",-1),FE={style:{"text-align":"left"}},QE={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},RE=t("td",{style:{"text-align":"center"}},null,-1),SE={style:{"text-align":"left"}},GE=t("code",null,"栈",-1),$E=t("code",null,"广度优先搜索",-1),tO=t("code",null,"并查集",-1),eO=t("code",null,"5+",-1),lO={style:{"text-align":"left"}},oO=t("td",{style:{"text-align":"center"}},"2641",-1),sO={style:{"text-align":"left"}},nO={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},dO=t("td",{style:{"text-align":"center"}},null,-1),_O={style:{"text-align":"left"}},cO=t("code",null,"树",-1),aO=t("code",null,"深度优先搜索",-1),rO=t("code",null,"广度优先搜索",-1),iO=t("code",null,"2+",-1),hO={style:{"text-align":"left"}},fO=t("td",{style:{"text-align":"center"}},"2658",-1),uO={style:{"text-align":"left"}},gO={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},mO=t("td",{style:{"text-align":"center"}},null,-1),yO={style:{"text-align":"left"}},xO=t("code",null,"深度优先搜索",-1),bO=t("code",null,"广度优先搜索",-1),pO=t("code",null,"并查集",-1),kO=t("code",null,"2+",-1),MO={style:{"text-align":"left"}},IO=t("td",{style:{"text-align":"center"}},"2685",-1),vO={style:{"text-align":"left"}},HO={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},wO=t("td",{style:{"text-align":"center"}},null,-1),zO={style:{"text-align":"left"}},EO=t("code",null,"深度优先搜索",-1),OO=t("code",null,"广度优先搜索",-1),LO=t("code",null,"图",-1),CO={style:{"text-align":"left"}},jO=t("td",{style:{"text-align":"center"}},"2773",-1),PO={style:{"text-align":"left"}},qO={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},NO=t("td",{style:{"text-align":"center"}},null,-1),VO={style:{"text-align":"left"}},KO=t("code",null,"树",-1),TO=t("code",null,"深度优先搜索",-1),AO=t("code",null,"广度优先搜索",-1),BO=t("code",null,"1+",-1),DO={style:{"text-align":"left"}},JO=t("td",{style:{"text-align":"center"}},"2812",-1),UO={style:{"text-align":"left"}},WO={href:"https://leetcode.com/problems/find-the-safest-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},XO=t("td",{style:{"text-align":"center"}},null,-1),YO={style:{"text-align":"left"}},ZO=t("code",null,"广度优先搜索",-1),FO=t("code",null,"并查集",-1),QO=t("code",null,"数组",-1),RO=t("code",null,"2+",-1),SO={style:{"text-align":"left"}},GO=t("td",{style:{"text-align":"center"}},"2814",-1),$O={style:{"text-align":"left"}},tL={href:"https://leetcode.com/problems/minimum-time-takes-to-reach-destination-without-drowning",target:"_blank",rel:"noopener noreferrer"},eL=t("td",{style:{"text-align":"center"}},null,-1),lL={style:{"text-align":"left"}},oL=t("code",null,"广度优先搜索",-1),sL=t("code",null,"数组",-1),nL=t("code",null,"矩阵",-1),dL={style:{"text-align":"left"}},_L=t("td",{style:{"text-align":"center"}},"2850",-1),cL={style:{"text-align":"left"}},aL={href:"https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid",target:"_blank",rel:"noopener noreferrer"},rL=t("td",{style:{"text-align":"center"}},null,-1),iL={style:{"text-align":"left"}},hL=t("code",null,"广度优先搜索",-1),fL=t("code",null,"数组",-1),uL=t("code",null,"动态规划",-1),gL=t("code",null,"1+",-1),mL={style:{"text-align":"left"}},yL=t("td",{style:{"text-align":"center"}},"2852",-1),xL={style:{"text-align":"left"}},bL={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},pL=t("td",{style:{"text-align":"center"}},null,-1),kL={style:{"text-align":"left"}},ML=t("code",null,"深度优先搜索",-1),IL=t("code",null,"广度优先搜索",-1),vL=t("code",null,"并查集",-1),HL=t("code",null,"3+",-1),wL={style:{"text-align":"left"}},zL=t("td",{style:{"text-align":"center"}},"2858",-1),EL={style:{"text-align":"left"}},OL={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},LL=t("td",{style:{"text-align":"center"}},null,-1),CL={style:{"text-align":"left"}},jL=t("code",null,"深度优先搜索",-1),PL=t("code",null,"广度优先搜索",-1),qL=t("code",null,"图",-1),NL=t("code",null,"1+",-1),VL={style:{"text-align":"left"}},KL=t("td",{style:{"text-align":"center"}},"2998",-1),TL={style:{"text-align":"left"}},AL={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},BL=t("td",{style:{"text-align":"center"}},null,-1),DL={style:{"text-align":"left"}},JL=t("code",null,"广度优先搜索",-1),UL=t("code",null,"记忆化搜索",-1),WL=t("code",null,"动态规划",-1),XL={style:{"text-align":"left"}},YL=t("td",{style:{"text-align":"center"}},"3015",-1),ZL={style:{"text-align":"left"}},FL={href:"https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-i",target:"_blank",rel:"noopener noreferrer"},QL=t("td",{style:{"text-align":"center"}},null,-1),RL={style:{"text-align":"left"}},SL=t("code",null,"广度优先搜索",-1),GL=t("code",null,"图",-1),$L=t("code",null,"前缀和",-1),tC={style:{"text-align":"left"}},eC=t("td",{style:{"text-align":"center"}},"3123",-1),lC={style:{"text-align":"left"}},oC={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},sC=t("td",{style:{"text-align":"center"}},null,-1),nC={style:{"text-align":"left"}},dC=t("code",null,"深度优先搜索",-1),_C=t("code",null,"广度优先搜索",-1),cC=t("code",null,"图",-1),aC=t("code",null,"2+",-1),rC={style:{"text-align":"left"}},iC=t("td",{style:{"text-align":"center"}},"3141",-1),hC={style:{"text-align":"left"}},fC={href:"https://leetcode.com/problems/maximum-hamming-distances",target:"_blank",rel:"noopener noreferrer"},uC=t("td",{style:{"text-align":"center"}},null,-1),gC={style:{"text-align":"left"}},mC=t("code",null,"位运算",-1),yC=t("code",null,"广度优先搜索",-1),xC=t("code",null,"数组",-1),bC={style:{"text-align":"left"}},pC=t("td",{style:{"text-align":"center"}},"3157",-1),kC={style:{"text-align":"left"}},MC={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},IC=t("td",{style:{"text-align":"center"}},null,-1),vC={style:{"text-align":"left"}},HC=t("code",null,"树",-1),wC=t("code",null,"深度优先搜索",-1),zC=t("code",null,"广度优先搜索",-1),EC=t("code",null,"1+",-1),OC={style:{"text-align":"left"}},LC=t("td",{style:{"text-align":"center"}},"3203",-1),CC={style:{"text-align":"left"}},jC={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},PC=t("td",{style:{"text-align":"center"}},null,-1),qC={style:{"text-align":"left"}},NC=t("code",null,"树",-1),VC=t("code",null,"深度优先搜索",-1),KC=t("code",null,"广度优先搜索",-1),TC=t("code",null,"1+",-1),AC={style:{"text-align":"left"}},BC=t("td",{style:{"text-align":"center"}},"3235",-1),DC={style:{"text-align":"left"}},JC={href:"https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},UC=t("td",{style:{"text-align":"center"}},null,-1),WC={style:{"text-align":"left"}},XC=t("code",null,"深度优先搜索",-1),YC=t("code",null,"广度优先搜索",-1),ZC=t("code",null,"并查集",-1),FC=t("code",null,"3+",-1),QC={style:{"text-align":"left"}},RC=t("td",{style:{"text-align":"center"}},"3243",-1),SC={style:{"text-align":"left"}},GC={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-i",target:"_blank",rel:"noopener noreferrer"},$C=t("td",{style:{"text-align":"center"}},null,-1),tj={style:{"text-align":"left"}},ej=t("code",null,"广度优先搜索",-1),lj=t("code",null,"图",-1),oj=t("code",null,"数组",-1),sj={style:{"text-align":"left"}},nj=t("td",{style:{"text-align":"center"}},"3283",-1),dj={style:{"text-align":"left"}},_j={href:"https://leetcode.com/problems/maximum-number-of-moves-to-kill-all-pawns",target:"_blank",rel:"noopener noreferrer"},cj=t("td",{style:{"text-align":"center"}},null,-1),aj={style:{"text-align":"left"}},rj=t("code",null,"位运算",-1),ij=t("code",null,"广度优先搜索",-1),hj=t("code",null,"数组",-1),fj=t("code",null,"3+",-1),uj={style:{"text-align":"left"}},gj=t("td",{style:{"text-align":"center"}},"3286",-1),mj={style:{"text-align":"left"}},yj={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},xj=t("td",{style:{"text-align":"center"}},null,-1),bj={style:{"text-align":"left"}},pj=t("code",null,"广度优先搜索",-1),kj=t("code",null,"图",-1),Mj=t("code",null,"数组",-1),Ij=t("code",null,"3+",-1),vj={style:{"text-align":"left"}},Hj=t("td",{style:{"text-align":"center"}},"3310",-1),wj={style:{"text-align":"left"}},zj={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},Ej=t("td",{style:{"text-align":"center"}},null,-1),Oj={style:{"text-align":"left"}},Lj=t("code",null,"深度优先搜索",-1),Cj=t("code",null,"广度优先搜索",-1),jj=t("code",null,"图",-1),Pj={style:{"text-align":"left"}},qj=t("td",{style:{"text-align":"center"}},"LCP 07",-1),Nj={style:{"text-align":"left"}},Vj={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},Kj=t("td",{style:{"text-align":"center"}},null,-1),Tj={style:{"text-align":"left"}},Aj=t("code",null,"深度优先搜索",-1),Bj=t("code",null,"广度优先搜索",-1),Dj=t("code",null,"图",-1),Jj=t("code",null,"1+",-1),Uj={style:{"text-align":"left"}},Wj=t("td",{style:{"text-align":"center"}},"LCP 09",-1),Xj={style:{"text-align":"left"}},Yj={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},Zj=t("td",{style:{"text-align":"center"}},null,-1),Fj={style:{"text-align":"left"}},Qj=t("code",null,"广度优先搜索",-1),Rj=t("code",null,"线段树",-1),Sj=t("code",null,"数组",-1),Gj=t("code",null,"1+",-1),$j={style:{"text-align":"left"}},tP=t("td",{style:{"text-align":"center"}},"LCP 13",-1),eP={style:{"text-align":"left"}},lP={href:"https://leetcode.cn/problems/xun-bao",target:"_blank",rel:"noopener noreferrer"},oP=t("td",{style:{"text-align":"center"}},null,-1),sP={style:{"text-align":"left"}},nP=t("code",null,"位运算",-1),dP=t("code",null,"广度优先搜索",-1),_P=t("code",null,"数组",-1),cP=t("code",null,"3+",-1),aP={style:{"text-align":"left"}},rP=t("td",{style:{"text-align":"center"}},"LCP 21",-1),iP={style:{"text-align":"left"}},hP={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},fP=t("td",{style:{"text-align":"center"}},null,-1),uP={style:{"text-align":"left"}},gP=t("code",null,"深度优先搜索",-1),mP=t("code",null,"广度优先搜索",-1),yP=t("code",null,"图",-1),xP=t("code",null,"1+",-1),bP={style:{"text-align":"left"}},pP=t("td",{style:{"text-align":"center"}},"LCP 31",-1),kP={style:{"text-align":"left"}},MP={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},IP=t("td",{style:{"text-align":"center"}},null,-1),vP={style:{"text-align":"left"}},HP=t("code",null,"深度优先搜索",-1),wP=t("code",null,"广度优先搜索",-1),zP=t("code",null,"数组",-1),EP=t("code",null,"2+",-1),OP={style:{"text-align":"left"}},LP=t("td",{style:{"text-align":"center"}},"LCP 41",-1),CP={style:{"text-align":"left"}},jP={href:"https://leetcode.cn/problems/fHi6rV",target:"_blank",rel:"noopener noreferrer"},PP=t("td",{style:{"text-align":"center"}},null,-1),qP={style:{"text-align":"left"}},NP=t("code",null,"广度优先搜索",-1),VP=t("code",null,"数组",-1),KP=t("code",null,"矩阵",-1),TP={style:{"text-align":"left"}},AP=t("td",{style:{"text-align":"center"}},"LCP 44",-1),BP={style:{"text-align":"left"}},DP={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},JP=t("td",{style:{"text-align":"center"}},null,-1),UP={style:{"text-align":"left"}},WP=t("code",null,"树",-1),XP=t("code",null,"深度优先搜索",-1),YP=t("code",null,"广度优先搜索",-1),ZP=t("code",null,"2+",-1),FP={style:{"text-align":"left"}},QP=t("td",{style:{"text-align":"center"}},"LCP 45",-1),RP={style:{"text-align":"left"}},SP={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},GP=t("td",{style:{"text-align":"center"}},null,-1),$P={style:{"text-align":"left"}},tq=t("code",null,"深度优先搜索",-1),eq=t("code",null,"广度优先搜索",-1),lq=t("code",null,"记忆化搜索",-1),oq=t("code",null,"3+",-1),sq={style:{"text-align":"left"}},nq=t("td",{style:{"text-align":"center"}},"LCP 56",-1),dq={style:{"text-align":"left"}},_q={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},cq=t("td",{style:{"text-align":"center"}},null,-1),aq={style:{"text-align":"left"}},rq=t("code",null,"广度优先搜索",-1),iq=t("code",null,"图",-1),hq=t("code",null,"数组",-1),fq=t("code",null,"3+",-1),uq={style:{"text-align":"left"}},gq=t("td",{style:{"text-align":"center"}},"LCP 63",-1),mq={style:{"text-align":"left"}},yq={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},xq=t("td",{style:{"text-align":"center"}},null,-1),bq={style:{"text-align":"left"}},pq=t("code",null,"深度优先搜索",-1),kq=t("code",null,"广度优先搜索",-1),Mq=t("code",null,"图",-1),Iq=t("code",null,"5+",-1),vq={style:{"text-align":"left"}},Hq=t("td",{style:{"text-align":"center"}},"LCP 67",-1),wq={style:{"text-align":"left"}},zq={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},Eq=t("td",{style:{"text-align":"center"}},null,-1),Oq={style:{"text-align":"left"}},Lq=t("code",null,"树",-1),Cq=t("code",null,"深度优先搜索",-1),jq=t("code",null,"广度优先搜索",-1),Pq=t("code",null,"1+",-1),qq={style:{"text-align":"left"}},Nq=t("td",{style:{"text-align":"center"}},"LCS 03",-1),Vq={style:{"text-align":"left"}},Kq={href:"https://leetcode.cn/problems/YesdPw",target:"_blank",rel:"noopener noreferrer"},Tq=t("td",{style:{"text-align":"center"}},null,-1),Aq={style:{"text-align":"left"}},Bq=t("code",null,"深度优先搜索",-1),Dq=t("code",null,"广度优先搜索",-1),Jq=t("code",null,"并查集",-1),Uq=t("code",null,"2+",-1),Wq={style:{"text-align":"left"}},Xq=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),Yq={style:{"text-align":"left"}},Zq={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},Fq={style:{"text-align":"center"}},Qq={style:{"text-align":"left"}},Rq=t("code",null,"深度优先搜索",-1),Sq=t("code",null,"广度优先搜索",-1),Gq=t("code",null,"动态规划",-1),$q={style:{"text-align":"left"}},tN=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),eN={style:{"text-align":"left"}},lN={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},oN={style:{"text-align":"center"}},sN={style:{"text-align":"left"}},nN=t("code",null,"树",-1),dN=t("code",null,"深度优先搜索",-1),_N=t("code",null,"广度优先搜索",-1),cN=t("code",null,"1+",-1),aN={style:{"text-align":"left"}},rN=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),iN={style:{"text-align":"left"}},hN={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},fN={style:{"text-align":"center"}},uN={style:{"text-align":"left"}},gN=t("code",null,"树",-1),mN=t("code",null,"深度优先搜索",-1),yN=t("code",null,"广度优先搜索",-1),xN=t("code",null,"1+",-1),bN={style:{"text-align":"left"}},pN=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - I",-1),kN={style:{"text-align":"left"}},MN={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},IN={style:{"text-align":"center"}},vN={style:{"text-align":"left"}},HN=t("code",null,"树",-1),wN=t("code",null,"广度优先搜索",-1),zN=t("code",null,"二叉树",-1),EN={style:{"text-align":"left"}},ON=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - II",-1),LN={style:{"text-align":"left"}},CN={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},jN={style:{"text-align":"center"}},PN={style:{"text-align":"left"}},qN=t("code",null,"树",-1),NN=t("code",null,"广度优先搜索",-1),VN=t("code",null,"二叉树",-1),KN={style:{"text-align":"left"}},TN=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - III",-1),AN={style:{"text-align":"left"}},BN={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},DN={style:{"text-align":"center"}},JN={style:{"text-align":"left"}},UN=t("code",null,"树",-1),WN=t("code",null,"广度优先搜索",-1),XN=t("code",null,"二叉树",-1),YN={style:{"text-align":"left"}},ZN=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),FN={style:{"text-align":"left"}},QN={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},RN={style:{"text-align":"center"}},SN={style:{"text-align":"left"}},GN=t("code",null,"树",-1),$N=t("code",null,"深度优先搜索",-1),tV=t("code",null,"广度优先搜索",-1),eV=t("code",null,"3+",-1),lV={style:{"text-align":"left"}},oV=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),sV={style:{"text-align":"left"}},nV={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},dV={style:{"text-align":"center"}},_V={style:{"text-align":"left"}},cV=t("code",null,"树",-1),aV=t("code",null,"深度优先搜索",-1),rV=t("code",null,"广度优先搜索",-1),iV=t("code",null,"1+",-1),hV={style:{"text-align":"left"}},fV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 103",-1),uV={style:{"text-align":"left"}},gV={href:"https://leetcode.cn/problems/gaM7Ch",target:"_blank",rel:"noopener noreferrer"},mV=t("td",{style:{"text-align":"center"}},null,-1),yV={style:{"text-align":"left"}},xV=t("code",null,"广度优先搜索",-1),bV=t("code",null,"数组",-1),pV=t("code",null,"动态规划",-1),kV={style:{"text-align":"left"}},MV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 105",-1),IV={style:{"text-align":"left"}},vV={href:"https://leetcode.cn/problems/ZL6zAn",target:"_blank",rel:"noopener noreferrer"},HV=t("td",{style:{"text-align":"center"}},null,-1),wV={style:{"text-align":"left"}},zV=t("code",null,"深度优先搜索",-1),EV=t("code",null,"广度优先搜索",-1),OV=t("code",null,"并查集",-1),LV=t("code",null,"2+",-1),CV={style:{"text-align":"left"}},jV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),PV={style:{"text-align":"left"}},qV={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},NV=t("td",{style:{"text-align":"center"}},null,-1),VV={style:{"text-align":"left"}},KV=t("code",null,"深度优先搜索",-1),TV=t("code",null,"广度优先搜索",-1),AV=t("code",null,"并查集",-1),BV=t("code",null,"1+",-1),DV={style:{"text-align":"left"}},JV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 107",-1),UV={style:{"text-align":"left"}},WV={href:"https://leetcode.cn/problems/2bCMpM",target:"_blank",rel:"noopener noreferrer"},XV=t("td",{style:{"text-align":"center"}},null,-1),YV={style:{"text-align":"left"}},ZV=t("code",null,"广度优先搜索",-1),FV=t("code",null,"数组",-1),QV=t("code",null,"动态规划",-1),RV=t("code",null,"1+",-1),SV={style:{"text-align":"left"}},GV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 108",-1),$V={style:{"text-align":"left"}},tK={href:"https://leetcode.cn/problems/om3reC",target:"_blank",rel:"noopener noreferrer"},eK=t("td",{style:{"text-align":"center"}},null,-1),lK={style:{"text-align":"left"}},oK=t("code",null,"广度优先搜索",-1),sK=t("code",null,"哈希表",-1),nK=t("code",null,"字符串",-1),dK={style:{"text-align":"left"}},_K=t("td",{style:{"text-align":"center"}},"剑指 Offer II 109",-1),cK={style:{"text-align":"left"}},aK={href:"https://leetcode.cn/problems/zlDJc7",target:"_blank",rel:"noopener noreferrer"},rK=t("td",{style:{"text-align":"center"}},null,-1),iK={style:{"text-align":"left"}},hK=t("code",null,"广度优先搜索",-1),fK=t("code",null,"数组",-1),uK=t("code",null,"哈希表",-1),gK=t("code",null,"1+",-1),mK={style:{"text-align":"left"}},yK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),xK={style:{"text-align":"left"}},bK={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},pK=t("td",{style:{"text-align":"center"}},null,-1),kK={style:{"text-align":"left"}},MK=t("code",null,"深度优先搜索",-1),IK=t("code",null,"广度优先搜索",-1),vK=t("code",null,"图",-1),HK=t("code",null,"1+",-1),wK={style:{"text-align":"left"}},zK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),EK={style:{"text-align":"left"}},OK={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},LK=t("td",{style:{"text-align":"center"}},null,-1),CK={style:{"text-align":"left"}},jK=t("code",null,"深度优先搜索",-1),PK=t("code",null,"广度优先搜索",-1),qK=t("code",null,"并查集",-1),NK=t("code",null,"3+",-1),VK={style:{"text-align":"left"}},KK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),TK={style:{"text-align":"left"}},AK={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},BK=t("td",{style:{"text-align":"center"}},null,-1),DK={style:{"text-align":"left"}},JK=t("code",null,"深度优先搜索",-1),UK=t("code",null,"广度优先搜索",-1),WK=t("code",null,"图",-1),XK=t("code",null,"5+",-1),YK={style:{"text-align":"left"}},ZK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),FK={style:{"text-align":"left"}},QK={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},RK=t("td",{style:{"text-align":"center"}},null,-1),SK={style:{"text-align":"left"}},GK=t("code",null,"深度优先搜索",-1),$K=t("code",null,"广度优先搜索",-1),tT=t("code",null,"图",-1),eT=t("code",null,"1+",-1),lT={style:{"text-align":"left"}},oT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),sT={style:{"text-align":"left"}},nT={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},dT=t("td",{style:{"text-align":"center"}},null,-1),_T={style:{"text-align":"left"}},cT=t("code",null,"深度优先搜索",-1),aT=t("code",null,"广度优先搜索",-1),rT=t("code",null,"图",-1),iT=t("code",null,"3+",-1),hT={style:{"text-align":"left"}},fT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),uT={style:{"text-align":"left"}},gT={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},mT=t("td",{style:{"text-align":"center"}},null,-1),yT={style:{"text-align":"left"}},xT=t("code",null,"深度优先搜索",-1),bT=t("code",null,"广度优先搜索",-1),pT=t("code",null,"并查集",-1),kT=t("code",null,"1+",-1),MT={style:{"text-align":"left"}},IT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 117",-1),vT={style:{"text-align":"left"}},HT={href:"https://leetcode.cn/problems/H6lPxb",target:"_blank",rel:"noopener noreferrer"},wT=t("td",{style:{"text-align":"center"}},null,-1),zT={style:{"text-align":"left"}},ET=t("code",null,"深度优先搜索",-1),OT=t("code",null,"广度优先搜索",-1),LT=t("code",null,"并查集",-1),CT=t("code",null,"3+",-1),jT={style:{"text-align":"left"}},PT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),qT={style:{"text-align":"left"}},NT={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},VT=t("td",{style:{"text-align":"center"}},null,-1),KT={style:{"text-align":"left"}},TT=t("code",null,"深度优先搜索",-1),AT=t("code",null,"广度优先搜索",-1),BT=t("code",null,"并查集",-1),DT=t("code",null,"1+",-1),JT={style:{"text-align":"left"}},UT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),WT={style:{"text-align":"left"}},XT={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},YT=t("td",{style:{"text-align":"center"}},null,-1),ZT={style:{"text-align":"left"}},FT=t("code",null,"树",-1),QT=t("code",null,"广度优先搜索",-1),RT=t("code",null,"设计",-1),ST=t("code",null,"1+",-1),GT={style:{"text-align":"left"}},$T=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),tA={style:{"text-align":"left"}},eA={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},lA=t("td",{style:{"text-align":"center"}},null,-1),oA={style:{"text-align":"left"}},sA=t("code",null,"树",-1),nA=t("code",null,"深度优先搜索",-1),dA=t("code",null,"广度优先搜索",-1),_A=t("code",null,"1+",-1),cA={style:{"text-align":"left"}},aA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),rA={style:{"text-align":"left"}},iA={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},hA=t("td",{style:{"text-align":"center"}},null,-1),fA={style:{"text-align":"left"}},uA=t("code",null,"树",-1),gA=t("code",null,"深度优先搜索",-1),mA=t("code",null,"广度优先搜索",-1),yA=t("code",null,"1+",-1),xA={style:{"text-align":"left"}},bA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),pA={style:{"text-align":"left"}},kA={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},MA=t("td",{style:{"text-align":"center"}},null,-1),IA={style:{"text-align":"left"}},vA=t("code",null,"树",-1),HA=t("code",null,"深度优先搜索",-1),wA=t("code",null,"广度优先搜索",-1),zA=t("code",null,"1+",-1),EA={style:{"text-align":"left"}},OA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),LA={style:{"text-align":"left"}},CA={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},jA=t("td",{style:{"text-align":"center"}},null,-1),PA={style:{"text-align":"left"}},qA=t("code",null,"树",-1),NA=t("code",null,"深度优先搜索",-1),VA=t("code",null,"广度优先搜索",-1),KA=t("code",null,"3+",-1),TA={style:{"text-align":"left"}},AA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),BA={style:{"text-align":"left"}},DA={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},JA=t("td",{style:{"text-align":"center"}},null,-1),UA={style:{"text-align":"left"}},WA=t("code",null,"深度优先搜索",-1),XA=t("code",null,"广度优先搜索",-1),YA=t("code",null,"图",-1),ZA=t("code",null,"1+",-1),FA={style:{"text-align":"left"}},QA=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),RA={style:{"text-align":"left"}},SA={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},GA=t("td",{style:{"text-align":"center"}},null,-1),$A={style:{"text-align":"left"}},tB=t("code",null,"深度优先搜索",-1),eB=t("code",null,"广度优先搜索",-1),lB=t("code",null,"图",-1),oB={style:{"text-align":"left"}},sB=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),nB={style:{"text-align":"left"}},dB={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},_B=t("td",{style:{"text-align":"center"}},null,-1),cB={style:{"text-align":"left"}},aB=t("code",null,"树",-1),rB=t("code",null,"广度优先搜索",-1),iB=t("code",null,"链表",-1),hB=t("code",null,"1+",-1),fB={style:{"text-align":"left"}},uB=t("td",{style:{"text-align":"center"}},"面试题 08.10",-1),gB={style:{"text-align":"left"}},mB={href:"https://leetcode.cn/problems/color-fill-lcci",target:"_blank",rel:"noopener noreferrer"},yB=t("td",{style:{"text-align":"center"}},null,-1),xB={style:{"text-align":"left"}},bB=t("code",null,"深度优先搜索",-1),pB=t("code",null,"广度优先搜索",-1),kB=t("code",null,"数组",-1),MB=t("code",null,"1+",-1),IB={style:{"text-align":"left"}},vB=t("td",{style:{"text-align":"center"}},"面试题 16.19",-1),HB={style:{"text-align":"left"}},wB={href:"https://leetcode.cn/problems/pond-sizes-lcci",target:"_blank",rel:"noopener noreferrer"},zB=t("td",{style:{"text-align":"center"}},null,-1),EB={style:{"text-align":"left"}},OB=t("code",null,"深度优先搜索",-1),LB=t("code",null,"广度优先搜索",-1),CB=t("code",null,"并查集",-1),jB=t("code",null,"2+",-1),PB={style:{"text-align":"left"}},qB=t("td",{style:{"text-align":"center"}},"面试题 17.07",-1),NB={style:{"text-align":"left"}},VB={href:"https://leetcode.cn/problems/baby-names-lcci",target:"_blank",rel:"noopener noreferrer"},KB=t("td",{style:{"text-align":"center"}},null,-1),TB={style:{"text-align":"left"}},AB=t("code",null,"深度优先搜索",-1),BB=t("code",null,"广度优先搜索",-1),DB=t("code",null,"并查集",-1),JB=t("code",null,"4+",-1),UB={style:{"text-align":"left"}},WB=t("td",{style:{"text-align":"center"}},"面试题 17.22",-1),XB={style:{"text-align":"left"}},YB={href:"https://leetcode.cn/problems/word-transformer-lcci",target:"_blank",rel:"noopener noreferrer"},ZB=t("td",{style:{"text-align":"center"}},null,-1),FB={style:{"text-align":"left"}},QB=t("code",null,"广度优先搜索",-1),RB=t("code",null,"哈希表",-1),SB=t("code",null,"字符串",-1),GB=t("code",null,"1+",-1),$B={style:{"text-align":"left"}};function tD(eD,lD){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return a(),r("div",null,[f,t("details",null,[u,g,t("p",null,[e(s,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(s,{to:"/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[H]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/tag/string-matching.html"},{default:o(()=>[z]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[E]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[O]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[C]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/tag/ordered-set.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[q]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/tag/suffix-array.html"},{default:o(()=>[U]),_:1})]),W,t("p",null,[e(s,{to:"/tag/enumeration.html"},{default:o(()=>[X]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[Y]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Q]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/tag/bucket-sort.html"},{default:o(()=>[G]),_:1}),l(),e(s,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nt]),_:1}),l(),dt,l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/tag/sliding-window.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/tag/rolling-hash.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(s,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(s,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/tag/database.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/tag/data-stream.html"},{default:o(()=>[Ot]),_:1}),l(),e(s,{to:"/tag/brainteaser.html"},{default:o(()=>[Lt]),_:1}),l(),e(s,{to:"/tag/interactive.html"},{default:o(()=>[Ct]),_:1}),l(),e(s,{to:"/tag/iterator.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/tag/concurrency.html"},{default:o(()=>[Pt]),_:1})])]),qt,i(" prettier-ignore "),t("table",null,[Nt,t("tbody",null,[t("tr",null,[Vt,t("td",Kt,[t("a",Tt,[l("相同的树"),e(n)])]),t("td",At,[e(s,{to:"/problem/0100.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bt,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dt]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ut]),_:1}),l(),Wt]),t("td",Xt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Yt,t("td",Zt,[t("a",Ft,[l("对称二叉树"),e(n)])]),t("td",Qt,[e(s,{to:"/problem/0101.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rt,[e(s,{to:"/tag/tree.html"},{default:o(()=>[St]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",se,[l("二叉树的层序遍历"),e(n)])]),t("td",ne,[e(s,{to:"/problem/0102.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",de,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_e]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ce]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ae]),_:1})]),t("td",re,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ie,t("td",he,[t("a",fe,[l("二叉树的锯齿形层序遍历"),e(n)])]),t("td",ue,[e(s,{to:"/problem/0103.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ge,[e(s,{to:"/tag/tree.html"},{default:o(()=>[me]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ye]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[xe]),_:1})]),t("td",be,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pe,t("td",ke,[t("a",Me,[l("二叉树的最大深度"),e(n)])]),t("td",Ie,[e(s,{to:"/problem/0104.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ve,[e(s,{to:"/tag/tree.html"},{default:o(()=>[He]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[we]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ze]),_:1}),l(),Ee]),t("td",Oe,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Le,t("td",Ce,[t("a",je,[l("二叉树的层序遍历 II"),e(n)])]),t("td",Pe,[e(s,{to:"/problem/0107.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qe,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ne]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ve]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Ke]),_:1})]),t("td",Te,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ae,t("td",Be,[t("a",De,[l("二叉树的最小深度"),e(n)])]),t("td",Je,[e(s,{to:"/problem/0111.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ue,[e(s,{to:"/tag/tree.html"},{default:o(()=>[We]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Xe]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ye]),_:1}),l(),Ze]),t("td",Fe,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qe,t("td",Re,[t("a",Se,[l("路径总和"),e(n)])]),t("td",Ge,[e(s,{to:"/problem/0112.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$e,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[el]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ll]),_:1}),l(),ol]),t("td",sl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[nl,t("td",dl,[t("a",_l,[l("填充每个节点的下一个右侧节点指针"),e(n)])]),t("td",cl,[e(s,{to:"/problem/0116.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",al,[e(s,{to:"/tag/tree.html"},{default:o(()=>[rl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[il]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hl]),_:1}),l(),fl]),t("td",ul,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gl,t("td",ml,[t("a",yl,[l("填充每个节点的下一个右侧节点指针 II"),e(n)])]),t("td",xl,[e(s,{to:"/problem/0117.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[pl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kl]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ml]),_:1}),l(),Il]),t("td",vl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hl,t("td",wl,[t("a",zl,[l("单词接龙 II"),e(n)])]),El,t("td",Ol,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ll]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Cl]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[jl]),_:1}),l(),Pl]),t("td",ql,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nl,t("td",Vl,[t("a",Kl,[l("单词接龙"),e(n)])]),t("td",Tl,[e(s,{to:"/problem/0127.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Al,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Bl]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Dl]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Jl]),_:1})]),t("td",Ul,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wl,t("td",Xl,[t("a",Yl,[l("被围绕的区域"),e(n)])]),t("td",Zl,[e(s,{to:"/problem/0130.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fl,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ql]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Rl]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Sl]),_:1}),l(),Gl]),t("td",$l,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[to,t("td",eo,[t("a",lo,[l("克隆图"),e(n)])]),t("td",oo,[e(s,{to:"/problem/0133.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",so,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[no]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_o]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[co]),_:1}),l(),ao]),t("td",ro,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[io,t("td",ho,[t("a",fo,[l("二叉树的右视图"),e(n)])]),t("td",uo,[e(s,{to:"/problem/0199.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",go,[e(s,{to:"/tag/tree.html"},{default:o(()=>[mo]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xo]),_:1}),l(),bo]),t("td",po,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ko,t("td",Mo,[t("a",Io,[l("岛屿数量"),e(n)])]),t("td",vo,[e(s,{to:"/problem/0200.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ho,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[zo]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Eo]),_:1}),l(),Oo]),t("td",Lo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Co,t("td",jo,[t("a",Po,[l("课程表"),e(n)])]),t("td",qo,[e(s,{to:"/problem/0207.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",No,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ko]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[To]),_:1}),l(),Ao]),t("td",Bo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Do,t("td",Jo,[t("a",Uo,[l("课程表 II"),e(n)])]),t("td",Wo,[e(s,{to:"/problem/0210.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xo,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Zo]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Fo]),_:1}),l(),Qo]),t("td",Ro,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[So,t("td",Go,[t("a",$o,[l("翻转二叉树"),e(n)])]),t("td",ts,[e(s,{to:"/problem/0226.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",es,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ls]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[os]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ss]),_:1}),l(),ns]),t("td",ds,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[_s,t("td",cs,[t("a",as,[l("以图判树"),e(n)])]),rs,t("td",is,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hs]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fs]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[us]),_:1}),l(),gs]),t("td",ms,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",bs,[l("火星词典"),e(n)])]),ps,t("td",ks,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ms]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Is]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[vs]),_:1}),l(),Hs]),t("td",ws,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zs,t("td",Es,[t("a",Os,[l("完全平方数"),e(n)])]),t("td",Ls,[e(s,{to:"/problem/0279.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cs,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[js]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Ps]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qs]),_:1})]),t("td",Ns,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vs,t("td",Ks,[t("a",Ts,[l("墙与门"),e(n)])]),As,t("td",Bs,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ds]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Js]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[Us]),_:1})]),t("td",Ws,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xs,t("td",Ys,[t("a",Zs,[l("二叉树的序列化与反序列化"),e(n)])]),t("td",Fs,[e(s,{to:"/problem/0297.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qs,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Rs]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ss]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Gs]),_:1}),l(),$s]),t("td",tn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[en,t("td",ln,[t("a",on,[l("删除无效的括号"),e(n)])]),sn,t("td",nn,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dn]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[_n]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[cn]),_:1})]),t("td",an,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rn,t("td",hn,[t("a",fn,[l("包含全部黑色像素的最小矩形"),e(n)])]),un,t("td",gn,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mn]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[yn]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[xn]),_:1}),l(),bn]),t("td",pn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kn,t("td",Mn,[t("a",In,[l("最小高度树"),e(n)])]),vn,t("td",Hn,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wn]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[zn]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[En]),_:1}),l(),On]),t("td",Ln,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cn,t("td",jn,[t("a",Pn,[l("二叉树的垂直遍历"),e(n)])]),qn,t("td",Nn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Vn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Kn]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Tn]),_:1}),l(),An]),t("td",Bn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dn,t("td",Jn,[t("a",Un,[l("离建筑物最近的距离"),e(n)])]),Wn,t("td",Xn,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Yn]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Zn]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[Fn]),_:1})]),t("td",Qn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rn,t("td",Sn,[t("a",Gn,[l("零钱兑换"),e(n)])]),t("td",$n,[e(s,{to:"/problem/0322.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",td,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ed]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ld]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[od]),_:1})]),t("td",sd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nd,t("td",dd,[t("a",_d,[l("无向图中连通分量的数目"),e(n)])]),cd,t("td",ad,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rd]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[id]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[hd]),_:1}),l(),fd]),t("td",ud,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gd,t("td",md,[t("a",yd,[l("矩阵中的最长递增路径"),e(n)])]),xd,t("td",bd,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pd]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[kd]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Md]),_:1}),l(),Id]),t("td",vd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hd,t("td",wd,[t("a",zd,[l("嵌套列表加权和"),e(n)])]),Ed,t("td",Od,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ld]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Cd]),_:1})]),t("td",jd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pd,t("td",qd,[t("a",Nd,[l("嵌套列表加权和 II"),e(n)])]),Vd,t("td",Kd,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Td]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ad]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Bd]),_:1})]),t("td",Dd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jd,t("td",Ud,[t("a",Wd,[l("水壶问题"),e(n)])]),Xd,t("td",Yd,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zd]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Fd]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Qd]),_:1})]),t("td",Rd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sd,t("td",Gd,[t("a",$d,[l("除法求值"),e(n)])]),t("td",t_,[e(s,{to:"/problem/0399.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",e_,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[l_]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[o_]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[s_]),_:1}),l(),n_]),t("td",d_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[__,t("td",c_,[t("a",a_,[l("左叶子之和"),e(n)])]),r_,t("td",i_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[h_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[f_]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[u_]),_:1}),l(),g_]),t("td",m_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[y_,t("td",x_,[t("a",b_,[l("接雨水 II"),e(n)])]),p_,t("td",k_,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[M_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[I_]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[v_]),_:1}),l(),H_]),t("td",w_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z_,t("td",E_,[t("a",O_,[l("太平洋大西洋水流问题"),e(n)])]),L_,t("td",C_,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[j_]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[P_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[q_]),_:1}),l(),N_]),t("td",V_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K_,t("td",T_,[t("a",A_,[l("序列化和反序列化 N 叉树"),e(n)])]),B_,t("td",D_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[J_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[U_]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[W_]),_:1}),l(),X_]),t("td",Y_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Z_,t("td",F_,[t("a",Q_,[l("N 叉树的层序遍历"),e(n)])]),R_,t("td",S_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[G_]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$_]),_:1})]),t("td",tc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ec,t("td",lc,[t("a",oc,[l("将 N 叉树编码为二叉树"),e(n)])]),sc,t("td",nc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[dc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_c]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[cc]),_:1}),l(),ac]),t("td",rc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ic,t("td",hc,[t("a",fc,[l("最小基因变化"),e(n)])]),t("td",uc,[e(s,{to:"/problem/0433.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",gc,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mc]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[yc]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[xc]),_:1})]),t("td",bc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pc,t("td",kc,[t("a",Mc,[l("序列化和反序列化二叉搜索树"),e(n)])]),Ic,t("td",vc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Hc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[zc]),_:1}),l(),Ec]),t("td",Oc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lc,t("td",Cc,[t("a",jc,[l("岛屿的周长"),e(n)])]),Pc,t("td",qc,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Nc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Vc]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Kc]),_:1}),l(),Tc]),t("td",Ac,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Bc,t("td",Dc,[t("a",Jc,[l("祖玛游戏"),e(n)])]),Uc,t("td",Wc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Xc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Yc]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[Zc]),_:1}),l(),Fc]),t("td",Qc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rc,t("td",Sc,[t("a",Gc,[l("迷宫"),e(n)])]),$c,t("td",ta,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ea]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[la]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[oa]),_:1}),l(),sa]),t("td",na,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[da,t("td",_a,[t("a",ca,[l("迷宫 III"),e(n)])]),aa,t("td",ra,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ia]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ha]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[fa]),_:1}),l(),ua]),t("td",ga,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ma,t("td",ya,[t("a",xa,[l("迷宫 II"),e(n)])]),ba,t("td",pa,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ka]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ma]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Ia]),_:1}),l(),va]),t("td",Ha,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wa,t("td",za,[t("a",Ea,[l("找树左下角的值"),e(n)])]),Oa,t("td",La,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ca]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ja]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Pa]),_:1}),l(),qa]),t("td",Na,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Va,t("td",Ka,[t("a",Ta,[l("自由之路"),e(n)])]),t("td",Aa,[e(s,{to:"/problem/0514.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ba,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Da]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ja]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Ua]),_:1}),l(),Wa]),t("td",Xa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ya,t("td",Za,[t("a",Fa,[l("在每个树行中找最大值"),e(n)])]),Qa,t("td",Ra,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Sa]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ga]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$a]),_:1}),l(),tr]),t("td",er,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lr,t("td",or,[t("a",sr,[l("扫雷游戏"),e(n)])]),nr,t("td",dr,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_r]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[cr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ar]),_:1}),l(),rr]),t("td",ir,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hr,t("td",fr,[t("a",ur,[l("二叉搜索树的最小绝对差"),e(n)])]),t("td",gr,[e(s,{to:"/problem/0530.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xr]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[br]),_:1}),l(),pr]),t("td",kr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mr,t("td",Ir,[t("a",vr,[l("01 矩阵"),e(n)])]),Hr,t("td",wr,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[zr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Er]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Or]),_:1}),l(),Lr]),t("td",Cr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jr,t("td",Pr,[t("a",qr,[l("省份数量"),e(n)])]),Nr,t("td",Vr,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Kr]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Tr]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Ar]),_:1}),l(),Br]),t("td",Dr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jr,t("td",Ur,[t("a",Wr,[l("N 叉树的最大深度"),e(n)])]),t("td",Xr,[e(s,{to:"/problem/0559.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Zr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Fr]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Qr]),_:1})]),t("td",Rr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Sr,t("td",Gr,[t("a",$r,[l("杀掉进程"),e(n)])]),ti,t("td",ei,[e(s,{to:"/tag/tree.html"},{default:o(()=>[li]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[oi]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[si]),_:1}),l(),ni]),t("td",di,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_i,t("td",ci,[t("a",ai,[l("合并二叉树"),e(n)])]),t("td",ri,[e(s,{to:"/problem/0617.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ii,[e(s,{to:"/tag/tree.html"},{default:o(()=>[hi]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fi]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ui]),_:1}),l(),gi]),t("td",mi,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yi,t("td",xi,[t("a",bi,[l("在二叉树中增加一行"),e(n)])]),pi,t("td",ki,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Mi]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ii]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[vi]),_:1}),l(),Hi]),t("td",wi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zi,t("td",Ei,[t("a",Oi,[l("二叉树的层平均值"),e(n)])]),t("td",Li,[e(s,{to:"/problem/0637.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ci,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ji]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pi]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[qi]),_:1}),l(),Ni]),t("td",Vi,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ki,t("td",Ti,[t("a",Ai,[l("两数之和 IV - 输入二叉搜索树"),e(n)])]),Bi,t("td",Di,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ji]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ui]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Wi]),_:1}),l(),Xi]),t("td",Yi,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zi,t("td",Fi,[t("a",Qi,[l("输出二叉树"),e(n)])]),Ri,t("td",Si,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Gi]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$i]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[th]),_:1}),l(),eh]),t("td",lh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oh,t("td",sh,[t("a",nh,[l("二叉树最大宽度"),e(n)])]),t("td",dh,[e(s,{to:"/problem/0662.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_h,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ch]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ah]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[rh]),_:1}),l(),ih]),t("td",hh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fh,t("td",uh,[t("a",gh,[l("灯泡开关 Ⅱ"),e(n)])]),mh,t("td",yh,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[xh]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bh]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ph]),_:1}),l(),kh]),t("td",Mh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ih,t("td",vh,[t("a",Hh,[l("为高尔夫比赛砍树"),e(n)])]),wh,t("td",zh,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Eh]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Oh]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[Lh]),_:1}),l(),Ch]),t("td",jh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ph,t("td",qh,[t("a",Nh,[l("冗余连接"),e(n)])]),Vh,t("td",Kh,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Th]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ah]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Bh]),_:1}),l(),Dh]),t("td",Jh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uh,t("td",Wh,[t("a",Xh,[l("冗余连接 II"),e(n)])]),Yh,t("td",Zh,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Fh]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Qh]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Rh]),_:1}),l(),Sh]),t("td",Gh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$h,t("td",t1,[t("a",e1,[l("员工的重要性"),e(n)])]),l1,t("td",o1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[s1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[n1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[d1]),_:1}),l(),_1]),t("td",c1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a1,t("td",r1,[t("a",i1,[l("不同岛屿的数量"),e(n)])]),h1,t("td",f1,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[u1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[g1]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[m1]),_:1}),l(),y1]),t("td",x1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b1,t("td",p1,[t("a",k1,[l("岛屿的最大面积"),e(n)])]),t("td",M1,[e(s,{to:"/problem/0695.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",I1,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[v1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[H1]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[w1]),_:1}),l(),z1]),t("td",E1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O1,t("td",L1,[t("a",C1,[l("不同岛屿的数量 II"),e(n)])]),j1,t("td",P1,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[N1]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[V1]),_:1}),l(),K1]),t("td",T1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A1,t("td",B1,[t("a",D1,[l("账户合并"),e(n)])]),J1,t("td",U1,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[W1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[X1]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Y1]),_:1}),l(),Z1]),t("td",F1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q1,t("td",R1,[t("a",S1,[l("图像渲染"),e(n)])]),G1,t("td",$1,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[tf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ef]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[lf]),_:1}),l(),of]),t("td",sf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[nf,t("td",df,[t("a",_f,[l("句子相似性 II"),e(n)])]),cf,t("td",af,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hf]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[ff]),_:1}),l(),uf]),t("td",gf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mf,t("td",yf,[t("a",xf,[l("二叉树最近的叶节点"),e(n)])]),bf,t("td",pf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Mf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[If]),_:1}),l(),vf]),t("td",Hf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wf,t("td",zf,[t("a",Ef,[l("网络延迟时间"),e(n)])]),Of,t("td",Lf,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[jf]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Pf]),_:1}),l(),qf]),t("td",Nf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vf,t("td",Kf,[t("a",Tf,[l("隔离病毒"),e(n)])]),Af,t("td",Bf,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Df]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Jf]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Uf]),_:1}),l(),Wf]),t("td",Xf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yf,t("td",Zf,[t("a",Ff,[l("打开转盘锁"),e(n)])]),Qf,t("td",Rf,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Sf]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Gf]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[$f]),_:1}),l(),tu]),t("td",eu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lu,t("td",ou,[t("a",su,[l("金字塔转换矩阵"),e(n)])]),nu,t("td",du,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[_u]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cu]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[au]),_:1})]),t("td",ru,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iu,t("td",hu,[t("a",fu,[l("情侣牵手"),e(n)])]),uu,t("td",gu,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[mu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yu]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xu]),_:1}),l(),bu]),t("td",pu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ku,t("td",Mu,[t("a",Iu,[l("滑动谜题"),e(n)])]),vu,t("td",Hu,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[wu]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[zu]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[Eu]),_:1})]),t("td",Ou,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lu,t("td",Cu,[t("a",ju,[l("水位上升的泳池中游泳"),e(n)])]),Pu,t("td",qu,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Nu]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Vu]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Ku]),_:1}),l(),Tu]),t("td",Au,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bu,t("td",Du,[t("a",Ju,[l("二叉搜索树节点最小距离"),e(n)])]),t("td",Uu,[e(s,{to:"/problem/0783.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wu,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yu]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Zu]),_:1}),l(),Fu]),t("td",Qu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ru,t("td",Su,[t("a",Gu,[l("判断二分图"),e(n)])]),$u,t("td",tg,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[eg]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lg]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[og]),_:1}),l(),sg]),t("td",ng,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dg,t("td",_g,[t("a",cg,[l("K 站中转内最便宜的航班"),e(n)])]),ag,t("td",rg,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ig]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hg]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[fg]),_:1}),l(),ug]),t("td",gg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mg,t("td",yg,[t("a",xg,[l("所有可能的路径"),e(n)])]),bg,t("td",pg,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kg]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Mg]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Ig]),_:1}),l(),vg]),t("td",Hg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wg,t("td",zg,[t("a",Eg,[l("找到最终的安全状态"),e(n)])]),Og,t("td",Lg,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cg]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[jg]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Pg]),_:1}),l(),qg]),t("td",Ng,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vg,t("td",Kg,[t("a",Tg,[l("公交路线"),e(n)])]),Ag,t("td",Bg,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Dg]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Jg]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Ug]),_:1})]),t("td",Wg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xg,t("td",Yg,[t("a",Zg,[l("最大人工岛"),e(n)])]),Fg,t("td",Qg,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Rg]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Sg]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Gg]),_:1}),l(),$g]),t("td",tm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[em,t("td",lm,[t("a",om,[l("相似字符串组"),e(n)])]),sm,t("td",nm,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_m]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[cm]),_:1}),l(),am]),t("td",rm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[im,t("td",hm,[t("a",fm,[l("钥匙和房间"),e(n)])]),um,t("td",gm,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ym]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[xm]),_:1})]),t("td",bm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pm,t("td",km,[t("a",Mm,[l("访问所有节点的最短路径"),e(n)])]),Im,t("td",vm,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Hm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[wm]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[zm]),_:1}),l(),Em]),t("td",Om,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lm,t("td",Cm,[t("a",jm,[l("相似度为 K 的字符串"),e(n)])]),Pm,t("td",qm,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Nm]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Vm]),_:1})]),t("td",Km,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tm,t("td",Am,[t("a",Bm,[l("二叉树中所有距离为 K 的结点"),e(n)])]),Dm,t("td",Jm,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Um]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Wm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Xm]),_:1}),l(),Ym]),t("td",Zm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fm,t("td",Qm,[t("a",Rm,[l("获取所有钥匙的最短路径"),e(n)])]),Sm,t("td",Gm,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[$m]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[t2]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[e2]),_:1}),l(),l2]),t("td",o2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[s2,t("td",n2,[t("a",d2,[l("具有所有最深节点的最小子树"),e(n)])]),_2,t("td",c2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[a2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[r2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[i2]),_:1}),l(),h2]),t("td",f2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u2,t("td",g2,[t("a",m2,[l("可能的二分法"),e(n)])]),y2,t("td",x2,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[b2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[p2]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[k2]),_:1}),l(),M2]),t("td",I2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v2,t("td",H2,[t("a",w2,[l("蛇梯棋"),e(n)])]),t("td",z2,[e(s,{to:"/problem/0909.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",E2,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[O2]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[L2]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[C2]),_:1})]),t("td",j2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P2,t("td",q2,[t("a",N2,[l("完全二叉树插入器"),e(n)])]),V2,t("td",K2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[T2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[A2]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[B2]),_:1}),l(),D2]),t("td",J2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U2,t("td",W2,[t("a",X2,[l("尽量减少恶意软件的传播"),e(n)])]),Y2,t("td",Z2,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[F2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Q2]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[R2]),_:1}),l(),S2]),t("td",G2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$2,t("td",ty,[t("a",ey,[l("尽量减少恶意软件的传播 II"),e(n)])]),ly,t("td",oy,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sy]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ny]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[dy]),_:1}),l(),_y]),t("td",cy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ay,t("td",ry,[t("a",iy,[l("最短的桥"),e(n)])]),hy,t("td",fy,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[uy]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gy]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[my]),_:1}),l(),yy]),t("td",xy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[by,t("td",py,[t("a",ky,[l("二叉树的完全性检验"),e(n)])]),t("td",My,[e(s,{to:"/problem/0958.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Iy,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vy]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Hy]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[wy]),_:1})]),t("td",zy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ey,t("td",Oy,[t("a",Ly,[l("由斜杠划分区域"),e(n)])]),Cy,t("td",jy,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Py]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[qy]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Ny]),_:1}),l(),Vy]),t("td",Ky,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ty,t("td",Ay,[t("a",By,[l("单值二叉树"),e(n)])]),Dy,t("td",Jy,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Uy]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Wy]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Xy]),_:1}),l(),Yy]),t("td",Zy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fy,t("td",Qy,[t("a",Ry,[l("连续差相同的数字"),e(n)])]),Sy,t("td",Gy,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$y]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[tx]),_:1})]),t("td",ex,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lx,t("td",ox,[t("a",sx,[l("二叉树的垂序遍历"),e(n)])]),nx,t("td",dx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_x]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ax]),_:1}),l(),rx]),t("td",ix,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hx,t("td",fx,[t("a",ux,[l("二叉树的堂兄弟节点"),e(n)])]),gx,t("td",mx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yx]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[bx]),_:1}),l(),px]),t("td",kx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mx,t("td",Ix,[t("a",vx,[l("腐烂的橘子"),e(n)])]),t("td",Hx,[e(s,{to:"/problem/0994.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wx,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[zx]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ex]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[Ox]),_:1})]),t("td",Lx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cx,t("td",jx,[t("a",Px,[l("飞地的数量"),e(n)])]),qx,t("td",Nx,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Kx]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Tx]),_:1}),l(),Ax]),t("td",Bx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dx,t("td",Jx,[t("a",Ux,[l("边界着色"),e(n)])]),Wx,t("td",Xx,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Zx]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Fx]),_:1}),l(),Qx]),t("td",Rx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sx,t("td",Gx,[t("a",$x,[l("逃离大迷宫"),e(n)])]),tb,t("td",eb,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[lb]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ob]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[sb]),_:1}),l(),nb]),t("td",db,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_b,t("td",cb,[t("a",ab,[l("不邻接植花"),e(n)])]),rb,t("td",ib,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hb]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fb]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ub]),_:1})]),t("td",gb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mb,t("td",yb,[t("a",xb,[l("花括号展开"),e(n)])]),bb,t("td",pb,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[kb]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Mb]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[Ib]),_:1})]),t("td",vb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hb,t("td",wb,[t("a",zb,[l("二进制矩阵中的最短路径"),e(n)])]),Eb,t("td",Ob,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Lb]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Cb]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[jb]),_:1})]),t("td",Pb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qb,t("td",Nb,[t("a",Vb,[l("花括号展开 II"),e(n)])]),Kb,t("td",Tb,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ab]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Bb]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Db]),_:1}),l(),Jb]),t("td",Ub,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wb,t("td",Xb,[t("a",Yb,[l("得分最高的路径"),e(n)])]),Zb,t("td",Fb,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qb]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Rb]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Sb]),_:1}),l(),Gb]),t("td",$b,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tp,t("td",ep,[t("a",lp,[l("最深叶节点的最近公共祖先"),e(n)])]),op,t("td",sp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[np]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dp]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_p]),_:1}),l(),cp]),t("td",ap,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rp,t("td",ip,[t("a",hp,[l("颜色交替的最短路径"),e(n)])]),fp,t("td",up,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gp]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[mp]),_:1})]),t("td",yp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xp,t("td",bp,[t("a",pp,[l("最大层内元素和"),e(n)])]),kp,t("td",Mp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ip]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vp]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Hp]),_:1}),l(),wp]),t("td",zp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ep,t("td",Op,[t("a",Lp,[l("地图分析"),e(n)])]),Cp,t("td",jp,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Pp]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[qp]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Np]),_:1}),l(),Vp]),t("td",Kp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tp,t("td",Ap,[t("a",Bp,[l("进击的骑士"),e(n)])]),Dp,t("td",Jp,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Up]),_:1})]),t("td",Wp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xp,t("td",Yp,[t("a",Zp,[l("交换字符串中的元素"),e(n)])]),Fp,t("td",Qp,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Rp]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Sp]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Gp]),_:1}),l(),$p]),t("td",t0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e0,t("td",l0,[t("a",o0,[l("项目管理"),e(n)])]),s0,t("td",n0,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[d0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_0]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[c0]),_:1}),l(),a0]),t("td",r0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i0,t("td",h0,[t("a",f0,[l("穿过迷宫的最少移动次数"),e(n)])]),u0,t("td",g0,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[m0]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[y0]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[x0]),_:1})]),t("td",b0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p0,t("td",k0,[t("a",M0,[l("步进数"),e(n)])]),I0,t("td",v0,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[H0]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[w0]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[z0]),_:1})]),t("td",E0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O0,t("td",L0,[t("a",C0,[l("网络爬虫"),e(n)])]),j0,t("td",P0,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[N0]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[V0]),_:1}),l(),K0]),t("td",T0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A0,t("td",B0,[t("a",D0,[l("多线程网页爬虫"),e(n)])]),J0,t("td",U0,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[W0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[X0]),_:1}),l(),e(s,{to:"/tag/concurrency.html"},{default:o(()=>[Y0]),_:1})]),t("td",Z0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F0,t("td",Q0,[t("a",R0,[l("树的直径"),e(n)])]),S0,t("td",G0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[t3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[e3]),_:1}),l(),l3]),t("td",o3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s3,t("td",n3,[t("a",d3,[l("统计封闭岛屿的数目"),e(n)])]),_3,t("td",c3,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[a3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[r3]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[i3]),_:1}),l(),h3]),t("td",f3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u3,t("td",g3,[t("a",m3,[l("最小公共区域"),e(n)])]),y3,t("td",x3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[b3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[p3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[k3]),_:1}),l(),M3]),t("td",I3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v3,t("td",H3,[t("a",w3,[l("在受污染的二叉树中查找元素"),e(n)])]),z3,t("td",E3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[O3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[L3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[C3]),_:1}),l(),j3]),t("td",P3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q3,t("td",N3,[t("a",V3,[l("推箱子"),e(n)])]),K3,t("td",T3,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[A3]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[B3]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[D3]),_:1}),l(),J3]),t("td",U3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W3,t("td",X3,[t("a",Y3,[l("统计参与通信的服务器"),e(n)])]),Z3,t("td",F3,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Q3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[R3]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[S3]),_:1}),l(),G3]),t("td",$3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t4,t("td",e4,[t("a",l4,[l("删除树节点"),e(n)])]),o4,t("td",s4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[n4]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[d4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_4]),_:1}),l(),c4]),t("td",a4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r4,t("td",i4,[t("a",h4,[l("转化为全零矩阵的最少反转次数"),e(n)])]),f4,t("td",u4,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[g4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[m4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[y4]),_:1}),l(),x4]),t("td",b4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p4,t("td",k4,[t("a",M4,[l("网格中的最短路径"),e(n)])]),I4,t("td",v4,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[H4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[w4]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[z4]),_:1})]),t("td",E4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[O4,t("td",L4,[t("a",C4,[l("你能从盒子里获得的最大糖果数"),e(n)])]),j4,t("td",P4,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[q4]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[N4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[V4]),_:1})]),t("td",K4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T4,t("td",A4,[t("a",B4,[l("层数最深叶子节点的和"),e(n)])]),D4,t("td",J4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[U4]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[W4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[X4]),_:1}),l(),Y4]),t("td",Z4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F4,t("td",Q4,[t("a",R4,[l("跳跃游戏 III"),e(n)])]),S4,t("td",G4,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[t6]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[e6]),_:1})]),t("td",l6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o6,t("td",s6,[t("a",n6,[l("获取你好友已观看的视频"),e(n)])]),d6,t("td",_6,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[c6]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[a6]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[r6]),_:1}),l(),i6]),t("td",h6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f6,t("td",u6,[t("a",g6,[l("祖父节点值为偶数的节点和"),e(n)])]),m6,t("td",y6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[x6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[b6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[p6]),_:1}),l(),k6]),t("td",M6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I6,t("td",v6,[t("a",H6,[l("连通网络的操作次数"),e(n)])]),w6,t("td",z6,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[E6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[O6]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[L6]),_:1}),l(),C6]),t("td",j6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P6,t("td",q6,[t("a",N6,[l("跳跃游戏 IV"),e(n)])]),V6,t("td",K6,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[T6]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[A6]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[B6]),_:1})]),t("td",D6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J6,t("td",U6,[t("a",W6,[l("验证二叉树"),e(n)])]),X6,t("td",Y6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Z6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[F6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Q6]),_:1}),l(),R6]),t("td",S6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G6,t("td",$6,[t("a",t8,[l("使网格图至少有一条有效路径的最小代价"),e(n)])]),e8,t("td",l8,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[o8]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[s8]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[n8]),_:1}),l(),d8]),t("td",_8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[c8,t("td",a8,[t("a",r8,[l("通知所有员工所需的时间"),e(n)])]),i8,t("td",h8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[f8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[u8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[g8]),_:1})]),t("td",m8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y8,t("td",x8,[t("a",b8,[l("T 秒后青蛙的位置"),e(n)])]),p8,t("td",k8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[M8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[I8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[v8]),_:1}),l(),H8]),t("td",w8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z8,t("td",E8,[t("a",O8,[l("找出克隆二叉树中的相同节点"),e(n)])]),L8,t("td",C8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[j8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[P8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[q8]),_:1}),l(),N8]),t("td",V8,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[K8,t("td",T8,[t("a",A8,[l("检查网格中是否存在有效路径"),e(n)])]),B8,t("td",D8,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[J8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[U8]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[W8]),_:1}),l(),X8]),t("td",Y8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z8,t("td",F8,[t("a",Q8,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(n)])]),R8,t("td",S8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[G8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[t5]),_:1}),l(),e5]),t("td",l5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o5,t("td",s5,[t("a",n5,[l("收集树上所有苹果的最少时间"),e(n)])]),d5,t("td",_5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[c5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[a5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[r5]),_:1}),l(),i5]),t("td",h5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f5,t("td",u5,[t("a",g5,[l("统计二叉树中好节点的数目"),e(n)])]),m5,t("td",y5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[x5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[b5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[p5]),_:1}),l(),k5]),t("td",M5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I5,t("td",v5,[t("a",H5,[l("二叉树中的伪回文路径"),e(n)])]),w5,t("td",z5,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[E5]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[O5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[L5]),_:1}),l(),C5]),t("td",j5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P5,t("td",q5,[t("a",N5,[l("课程表 IV"),e(n)])]),V5,t("td",K5,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[T5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[A5]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[B5]),_:1}),l(),D5]),t("td",J5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U5,t("td",W5,[t("a",X5,[l("重新规划路线"),e(n)])]),Y5,t("td",Z5,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[F5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Q5]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[R5]),_:1})]),t("td",S5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G5,t("td",$5,[t("a",t7,[l("寻找所有的独生节点"),e(n)])]),e7,t("td",l7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[o7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[s7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[n7]),_:1}),l(),d7]),t("td",_7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[c7,t("td",a7,[t("a",r7,[l("树节点的第 K 个祖先"),e(n)])]),i7,t("td",h7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[f7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[u7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[g7]),_:1}),l(),m7]),t("td",y7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x7,t("td",b7,[t("a",p7,[l("克隆含随机指针的二叉树"),e(n)])]),k7,t("td",M7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[I7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[v7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[H7]),_:1}),l(),w7]),t("td",z7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E7,t("td",O7,[t("a",L7,[l("克隆 N 叉树"),e(n)])]),C7,t("td",j7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[P7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[N7]),_:1}),l(),V7]),t("td",K7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T7,t("td",A7,[t("a",B7,[l("子树中标签相同的节点数"),e(n)])]),D7,t("td",J7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[U7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[W7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[X7]),_:1}),l(),Y7]),t("td",Z7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F7,t("td",Q7,[t("a",R7,[l("二维网格图中探测环"),e(n)])]),S7,t("td",G7,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[t9]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[e9]),_:1}),l(),l9]),t("td",o9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s9,t("td",n9,[t("a",d9,[l("使陆地分离的最少天数"),e(n)])]),_9,t("td",c9,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[a9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[r9]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[i9]),_:1}),l(),h9]),t("td",f9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[u9,t("td",g9,[t("a",m9,[l("找到二叉树中最近的右侧节点"),e(n)])]),y9,t("td",x9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[b9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[p9]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[k9]),_:1})]),t("td",M9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I9,t("td",v9,[t("a",H9,[l("奇偶树"),e(n)])]),w9,t("td",z9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[E9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[O9]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[L9]),_:1})]),t("td",C9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j9,t("td",P9,[t("a",q9,[l("执行操作后字典序最小的字符串"),e(n)])]),N9,t("td",V9,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[K9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[T9]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[A9]),_:1}),l(),B9]),t("td",D9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J9,t("td",U9,[t("a",W9,[l("最小体力消耗路径"),e(n)])]),X9,t("td",Y9,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Z9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[F9]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Q9]),_:1}),l(),R9]),t("td",S9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G9,t("td",$9,[t("a",tk,[l("到家的最少跳跃次数"),e(n)])]),ek,t("td",lk,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ok]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[sk]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[nk]),_:1})]),t("td",dk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_k,t("td",ck,[t("a",ak,[l("纠正二叉树"),e(n)])]),rk,t("td",ik,[e(s,{to:"/tag/tree.html"},{default:o(()=>[hk]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fk]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[uk]),_:1}),l(),gk]),t("td",mk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yk,t("td",xk,[t("a",bk,[l("获取食物的最短路径"),e(n)])]),pk,t("td",kk,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Mk]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ik]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[vk]),_:1})]),t("td",Hk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wk,t("td",zk,[t("a",Ek,[l("找到二叉树中的距离"),e(n)])]),Ok,t("td",Lk,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ck]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jk]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Pk]),_:1}),l(),qk]),t("td",Nk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vk,t("td",Kk,[t("a",Tk,[l("地图中的最高点"),e(n)])]),Ak,t("td",Bk,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Dk]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Jk]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[Uk]),_:1})]),t("td",Wk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xk,t("td",Yk,[t("a",Zk,[l("未知网格中的最短路径"),e(n)])]),Fk,t("td",Qk,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Rk]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Sk]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Gk]),_:1}),l(),$k]),t("td",tM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eM,t("td",lM,[t("a",oM,[l("隐藏网格下的最小消耗路径"),e(n)])]),sM,t("td",nM,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_M]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[cM]),_:1}),l(),aM]),t("td",rM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iM,t("td",hM,[t("a",fM,[l("统计子岛屿"),e(n)])]),uM,t("td",gM,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[yM]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[xM]),_:1}),l(),bM]),t("td",pM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kM,t("td",MM,[t("a",IM,[l("迷宫中离入口最近的出口"),e(n)])]),vM,t("td",HM,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[wM]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[zM]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[EM]),_:1})]),t("td",OM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LM,t("td",CM,[t("a",jM,[l("你能穿过矩阵的最后一天"),e(n)])]),PM,t("td",qM,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[NM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[VM]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[KM]),_:1}),l(),TM]),t("td",AM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BM,t("td",DM,[t("a",JM,[l("寻找图中是否存在路径"),e(n)])]),UM,t("td",WM,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[XM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[YM]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[ZM]),_:1}),l(),FM]),t("td",QM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[RM,t("td",SM,[t("a",GM,[l("找到所有的农场组"),e(n)])]),$M,t("td",tI,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[eI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lI]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[oI]),_:1}),l(),sI]),t("td",nI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dI,t("td",_I,[t("a",cI,[l("树上的操作"),e(n)])]),aI,t("td",rI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[iI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fI]),_:1}),l(),uI]),t("td",gI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mI,t("td",yI,[t("a",xI,[l("网络空闲的时刻"),e(n)])]),bI,t("td",pI,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[kI]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[MI]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[II]),_:1})]),t("td",vI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HI,t("td",wI,[t("a",zI,[l("到达目的地的第二短时间"),e(n)])]),EI,t("td",OI,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[LI]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[CI]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[jI]),_:1})]),t("td",PI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qI,t("td",NI,[t("a",VI,[l("转化数字的最小运算数"),e(n)])]),KI,t("td",TI,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[AI]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[BI]),_:1})]),t("td",DI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JI,t("td",UI,[t("a",WI,[l("找出知晓秘密的所有专家"),e(n)])]),XI,t("td",YI,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ZI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[FI]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[QI]),_:1}),l(),RI]),t("td",SI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[GI,t("td",$I,[t("a",tv,[l("引爆最多的炸弹"),e(n)])]),ev,t("td",lv,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ov]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[sv]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[nv]),_:1}),l(),dv]),t("td",_v,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cv,t("td",av,[t("a",rv,[l("价格范围内最高排名的 K 样物品"),e(n)])]),iv,t("td",hv,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fv]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[uv]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[gv]),_:1}),l(),mv]),t("td",yv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xv,t("td",bv,[t("a",pv,[l("通过翻转行或列来去除所有的 1 II"),e(n)])]),kv,t("td",Mv,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Iv]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[vv]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Hv]),_:1}),l(),wv]),t("td",zv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ev,t("td",Ov,[t("a",Lv,[l("有向无环图中一个节点的所有祖先"),e(n)])]),Cv,t("td",jv,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pv]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[qv]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Nv]),_:1}),l(),Vv]),t("td",Kv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tv,t("td",Av,[t("a",Bv,[l("无向图中到环的距离"),e(n)])]),Dv,t("td",Jv,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Uv]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Wv]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Xv]),_:1}),l(),Yv]),t("td",Zv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fv,t("td",Qv,[t("a",Rv,[l("逃离火灾"),e(n)])]),Sv,t("td",Gv,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$v]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[tH]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[eH]),_:1}),l(),lH]),t("td",oH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sH,t("td",nH,[t("a",dH,[l("树中最接近路径的节点"),e(n)])]),_H,t("td",cH,[e(s,{to:"/tag/tree.html"},{default:o(()=>[aH]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[iH]),_:1}),l(),hH]),t("td",fH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uH,t("td",gH,[t("a",mH,[l("到达角落需要移除障碍物的最小数目"),e(n)])]),yH,t("td",xH,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[bH]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[pH]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[kH]),_:1}),l(),MH]),t("td",IH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vH,t("td",HH,[t("a",wH,[l("统计无向图中无法互相到达点对数"),e(n)])]),zH,t("td",EH,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[OH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[LH]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[CH]),_:1}),l(),jH]),t("td",PH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qH,t("td",NH,[t("a",VH,[l("网格图中递增路径的数目"),e(n)])]),KH,t("td",TH,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[AH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[BH]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[DH]),_:1}),l(),JH]),t("td",UH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[WH,t("td",XH,[t("a",YH,[l("受限条件下可到达节点的数目"),e(n)])]),ZH,t("td",FH,[e(s,{to:"/tag/tree.html"},{default:o(()=>[QH]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[RH]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[SH]),_:1}),l(),GH]),t("td",$H,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tw,t("td",ew,[t("a",lw,[l("感染二叉树需要的总时间"),e(n)])]),ow,t("td",sw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_w]),_:1}),l(),cw]),t("td",aw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rw,t("td",iw,[t("a",hw,[l("反转二叉树的奇数层"),e(n)])]),fw,t("td",uw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[yw]),_:1}),l(),xw]),t("td",bw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pw,t("td",kw,[t("a",Mw,[l("值为 1 的节点数"),e(n)])]),Iw,t("td",vw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Hw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ww]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[zw]),_:1}),l(),Ew]),t("td",Ow,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lw,t("td",Cw,[t("a",jw,[l("移除子树后的二叉树高度"),e(n)])]),Pw,t("td",qw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Nw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Kw]),_:1}),l(),Tw]),t("td",Aw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bw,t("td",Dw,[t("a",Jw,[l("树上最大得分和路径"),e(n)])]),Uw,t("td",Ww,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Zw]),_:1}),l(),Fw]),t("td",Qw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rw,t("td",Sw,[t("a",Gw,[l("逐层排序二叉树所需的最少操作数目"),e(n)])]),$w,t("td",tz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ez]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lz]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[oz]),_:1})]),t("td",sz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nz,t("td",dz,[t("a",_z,[l("到达首都的最少油耗"),e(n)])]),cz,t("td",az,[e(s,{to:"/tag/tree.html"},{default:o(()=>[rz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[iz]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hz]),_:1}),l(),fz]),t("td",uz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gz,t("td",mz,[t("a",yz,[l("两个城市间路径的最小分数"),e(n)])]),xz,t("td",bz,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pz]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[kz]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Mz]),_:1}),l(),Iz]),t("td",vz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hz,t("td",wz,[t("a",zz,[l("将节点分成尽可能多的组"),e(n)])]),Ez,t("td",Oz,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Lz]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Cz]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[jz]),_:1})]),t("td",Pz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qz,t("td",Nz,[t("a",Vz,[l("矩阵查询可获得的最大分数"),e(n)])]),Kz,t("td",Tz,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Az]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Bz]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Dz]),_:1}),l(),Jz]),t("td",Uz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wz,t("td",Xz,[t("a",Yz,[l("二进制矩阵中翻转最多一次使路径不连通"),e(n)])]),Zz,t("td",Fz,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qz]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Rz]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Sz]),_:1}),l(),Gz]),t("td",$z,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tE,t("td",eE,[t("a",lE,[l("在网格图中访问一个格子的最少时间"),e(n)])]),oE,t("td",sE,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[nE]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[dE]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[_E]),_:1}),l(),cE]),t("td",aE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rE,t("td",iE,[t("a",hE,[l("二叉树中的第 K 大层和"),e(n)])]),fE,t("td",uE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mE]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[yE]),_:1}),l(),xE]),t("td",bE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pE,t("td",kE,[t("a",ME,[l("检查骑士巡视方案"),e(n)])]),IE,t("td",vE,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[HE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[wE]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[zE]),_:1}),l(),EE]),t("td",OE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LE,t("td",CE,[t("a",jE,[l("图中的最短环"),e(n)])]),PE,t("td",qE,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[NE]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[VE]),_:1})]),t("td",KE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TE,t("td",AE,[t("a",BE,[l("最少翻转操作数"),e(n)])]),DE,t("td",JE,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[UE]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[WE]),_:1}),l(),e(s,{to:"/tag/ordered-set.html"},{default:o(()=>[XE]),_:1})]),t("td",YE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZE,t("td",FE,[t("a",QE,[l("网格图中最少访问的格子数"),e(n)])]),RE,t("td",SE,[e(s,{to:"/tag/stack.html"},{default:o(()=>[GE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$E]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[tO]),_:1}),l(),eO]),t("td",lO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oO,t("td",sO,[t("a",nO,[l("二叉树的堂兄弟节点 II"),e(n)])]),dO,t("td",_O,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[aO]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[rO]),_:1}),l(),iO]),t("td",hO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fO,t("td",uO,[t("a",gO,[l("网格图中鱼的最大数目"),e(n)])]),mO,t("td",yO,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xO]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[bO]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[pO]),_:1}),l(),kO]),t("td",MO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[IO,t("td",vO,[t("a",HO,[l("统计完全连通分量的数量"),e(n)])]),wO,t("td",zO,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[EO]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[OO]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[LO]),_:1})]),t("td",CO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jO,t("td",PO,[t("a",qO,[l("特殊二叉树的高度"),e(n)])]),NO,t("td",VO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[KO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[TO]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[AO]),_:1}),l(),BO]),t("td",DO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JO,t("td",UO,[t("a",WO,[l("找出最安全路径"),e(n)])]),XO,t("td",YO,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ZO]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[FO]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[QO]),_:1}),l(),RO]),t("td",SO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GO,t("td",$O,[t("a",tL,[l("避免淹死并到达目的地的最短时间"),e(n)])]),eL,t("td",lL,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[oL]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[sL]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[nL]),_:1})]),t("td",dL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_L,t("td",cL,[t("a",aL,[l("将石头分散到网格图的最少移动次数"),e(n)])]),rL,t("td",iL,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hL]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[fL]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[uL]),_:1}),l(),gL]),t("td",mL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yL,t("td",xL,[t("a",bL,[l("所有单元格的远离程度之和"),e(n)])]),pL,t("td",kL,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ML]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[IL]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[vL]),_:1}),l(),HL]),t("td",wL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zL,t("td",EL,[t("a",OL,[l("可以到达每一个节点的最少边反转次数"),e(n)])]),LL,t("td",CL,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jL]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[PL]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[qL]),_:1}),l(),NL]),t("td",VL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[KL,t("td",TL,[t("a",AL,[l("使 X 和 Y 相等的最少操作次数"),e(n)])]),BL,t("td",DL,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[JL]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[UL]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[WL]),_:1})]),t("td",XL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YL,t("td",ZL,[t("a",FL,[l("按距离统计房屋对数目 I"),e(n)])]),QL,t("td",RL,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[SL]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[GL]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[$L]),_:1})]),t("td",tC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eC,t("td",lC,[t("a",oC,[l("最短路径中的边"),e(n)])]),sC,t("td",nC,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_C]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[cC]),_:1}),l(),aC]),t("td",rC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iC,t("td",hC,[t("a",fC,[l("最大汉明距离"),e(n)])]),uC,t("td",gC,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[mC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[yC]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[xC]),_:1})]),t("td",bC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pC,t("td",kC,[t("a",MC,[l("找到具有最小和的树的层数"),e(n)])]),IC,t("td",vC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[HC]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[zC]),_:1}),l(),EC]),t("td",OC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LC,t("td",CC,[t("a",jC,[l("合并两棵树后的最小直径"),e(n)])]),PC,t("td",qC,[e(s,{to:"/tag/tree.html"},{default:o(()=>[NC]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[VC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[KC]),_:1}),l(),TC]),t("td",AC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BC,t("td",DC,[t("a",JC,[l("判断矩形的两个角落是否可达"),e(n)])]),UC,t("td",WC,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[XC]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[YC]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[ZC]),_:1}),l(),FC]),t("td",QC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RC,t("td",SC,[t("a",GC,[l("新增道路查询后的最短距离 I"),e(n)])]),$C,t("td",tj,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ej]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[lj]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[oj]),_:1})]),t("td",sj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nj,t("td",dj,[t("a",_j,[l("吃掉所有兵需要的最多移动次数"),e(n)])]),cj,t("td",aj,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[rj]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ij]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[hj]),_:1}),l(),fj]),t("td",uj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gj,t("td",mj,[t("a",yj,[l("穿越网格图的安全路径"),e(n)])]),xj,t("td",bj,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[pj]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[kj]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Mj]),_:1}),l(),Ij]),t("td",vj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hj,t("td",wj,[t("a",zj,[l("移除可疑的方法"),e(n)])]),Ej,t("td",Oj,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Lj]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Cj]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[jj]),_:1})]),t("td",Pj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qj,t("td",Nj,[t("a",Vj,[l("传递信息"),e(n)])]),Kj,t("td",Tj,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Aj]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Bj]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Dj]),_:1}),l(),Jj]),t("td",Uj,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Wj,t("td",Xj,[t("a",Yj,[l("最小跳跃次数"),e(n)])]),Zj,t("td",Fj,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Qj]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[Rj]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Sj]),_:1}),l(),Gj]),t("td",$j,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tP,t("td",eP,[t("a",lP,[l("寻宝"),e(n)])]),oP,t("td",sP,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[nP]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dP]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[_P]),_:1}),l(),cP]),t("td",aP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rP,t("td",iP,[t("a",hP,[l("追逐游戏"),e(n)])]),fP,t("td",uP,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gP]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mP]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[yP]),_:1}),l(),xP]),t("td",bP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pP,t("td",kP,[t("a",MP,[l("变换的迷宫"),e(n)])]),IP,t("td",vP,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[HP]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[wP]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[zP]),_:1}),l(),EP]),t("td",OP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[LP,t("td",CP,[t("a",jP,[l("黑白翻转棋"),e(n)])]),PP,t("td",qP,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[NP]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[VP]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[KP]),_:1})]),t("td",TP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AP,t("td",BP,[t("a",DP,[l("开幕式焰火"),e(n)])]),JP,t("td",UP,[e(s,{to:"/tag/tree.html"},{default:o(()=>[WP]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[XP]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[YP]),_:1}),l(),ZP]),t("td",FP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[QP,t("td",RP,[t("a",SP,[l("自行车炫技赛场"),e(n)])]),GP,t("td",$P,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[tq]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[eq]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[lq]),_:1}),l(),oq]),t("td",sq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nq,t("td",dq,[t("a",_q,[l("信物传送"),e(n)])]),cq,t("td",aq,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[rq]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[iq]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[hq]),_:1}),l(),fq]),t("td",uq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gq,t("td",mq,[t("a",yq,[l("弹珠游戏"),e(n)])]),xq,t("td",bq,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pq]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[kq]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Mq]),_:1}),l(),Iq]),t("td",vq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hq,t("td",wq,[t("a",zq,[l("装饰树"),e(n)])]),Eq,t("td",Oq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Lq]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cq]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[jq]),_:1}),l(),Pq]),t("td",qq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nq,t("td",Vq,[t("a",Kq,[l("主题空间"),e(n)])]),Tq,t("td",Aq,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Bq]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Dq]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Jq]),_:1}),l(),Uq]),t("td",Wq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xq,t("td",Yq,[t("a",Zq,[l("机器人的运动范围"),e(n)])]),t("td",Fq,[e(s,{to:"/offer/jz_offer_13_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qq,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Rq]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Sq]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Gq]),_:1})]),t("td",$q,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tN,t("td",eN,[t("a",lN,[l("二叉树的镜像"),e(n)])]),t("td",oN,[e(s,{to:"/offer/jz_offer_27_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",sN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nN]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dN]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_N]),_:1}),l(),cN]),t("td",aN,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rN,t("td",iN,[t("a",hN,[l("对称的二叉树"),e(n)])]),t("td",fN,[e(s,{to:"/offer/jz_offer_28_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",uN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gN]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mN]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[yN]),_:1}),l(),xN]),t("td",bN,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pN,t("td",kN,[t("a",MN,[l("从上到下打印二叉树"),e(n)])]),t("td",IN,[e(s,{to:"/offer/jz_offer_32_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[HN]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[wN]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[zN]),_:1})]),t("td",EN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ON,t("td",LN,[t("a",CN,[l("从上到下打印二叉树 II"),e(n)])]),t("td",jN,[e(s,{to:"/offer/jz_offer_32_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",PN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qN]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[NN]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[VN]),_:1})]),t("td",KN,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[TN,t("td",AN,[t("a",BN,[l("从上到下打印二叉树 III"),e(n)])]),t("td",DN,[e(s,{to:"/offer/jz_offer_32_3.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",JN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[UN]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[WN]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[XN]),_:1})]),t("td",YN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZN,t("td",FN,[t("a",QN,[l("序列化二叉树"),e(n)])]),t("td",RN,[e(s,{to:"/offer/jz_offer_37_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",SN,[e(s,{to:"/tag/tree.html"},{default:o(()=>[GN]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$N]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[tV]),_:1}),l(),eV]),t("td",lV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oV,t("td",sV,[t("a",nV,[l("二叉树的深度"),e(n)])]),t("td",dV,[e(s,{to:"/offer/jz_offer_55_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_V,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cV]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[aV]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[rV]),_:1}),l(),iV]),t("td",hV,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fV,t("td",uV,[t("a",gV,[l("最少的硬币数目"),e(n)])]),mV,t("td",yV,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xV]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[bV]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[pV]),_:1})]),t("td",kV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MV,t("td",IV,[t("a",vV,[l("岛屿的最大面积"),e(n)])]),HV,t("td",wV,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zV]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[EV]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[OV]),_:1}),l(),LV]),t("td",CV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jV,t("td",PV,[t("a",qV,[l("二分图"),e(n)])]),NV,t("td",VV,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[KV]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[TV]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[AV]),_:1}),l(),BV]),t("td",DV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JV,t("td",UV,[t("a",WV,[l("矩阵中的距离"),e(n)])]),XV,t("td",YV,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ZV]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[FV]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[QV]),_:1}),l(),RV]),t("td",SV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GV,t("td",$V,[t("a",tK,[l("单词演变"),e(n)])]),eK,t("td",lK,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[oK]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[sK]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[nK]),_:1})]),t("td",dK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_K,t("td",cK,[t("a",aK,[l("开密码锁"),e(n)])]),rK,t("td",iK,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hK]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[fK]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[uK]),_:1}),l(),gK]),t("td",mK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yK,t("td",xK,[t("a",bK,[l("所有路径"),e(n)])]),pK,t("td",kK,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[MK]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[IK]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[vK]),_:1}),l(),HK]),t("td",wK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zK,t("td",EK,[t("a",OK,[l("计算除法"),e(n)])]),LK,t("td",CK,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jK]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[PK]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[qK]),_:1}),l(),NK]),t("td",VK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KK,t("td",TK,[t("a",AK,[l("最长递增路径"),e(n)])]),BK,t("td",DK,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[JK]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[UK]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[WK]),_:1}),l(),XK]),t("td",YK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZK,t("td",FK,[t("a",QK,[l("课程顺序"),e(n)])]),RK,t("td",SK,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[GK]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$K]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[tT]),_:1}),l(),eT]),t("td",lT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oT,t("td",sT,[t("a",nT,[l("外星文字典"),e(n)])]),dT,t("td",_T,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[cT]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[aT]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[rT]),_:1}),l(),iT]),t("td",hT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fT,t("td",uT,[t("a",gT,[l("省份数量"),e(n)])]),mT,t("td",yT,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xT]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[bT]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[pT]),_:1}),l(),kT]),t("td",MT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[IT,t("td",vT,[t("a",HT,[l("相似的字符串"),e(n)])]),wT,t("td",zT,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ET]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[OT]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[LT]),_:1}),l(),CT]),t("td",jT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PT,t("td",qT,[t("a",NT,[l("多余的边"),e(n)])]),VT,t("td",KT,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[TT]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[AT]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[BT]),_:1}),l(),DT]),t("td",JT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UT,t("td",WT,[t("a",XT,[l("往完全二叉树添加节点"),e(n)])]),YT,t("td",ZT,[e(s,{to:"/tag/tree.html"},{default:o(()=>[FT]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[QT]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[RT]),_:1}),l(),ST]),t("td",GT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$T,t("td",tA,[t("a",eA,[l("二叉树每层的最大值"),e(n)])]),lA,t("td",oA,[e(s,{to:"/tag/tree.html"},{default:o(()=>[sA]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nA]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dA]),_:1}),l(),_A]),t("td",cA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aA,t("td",rA,[t("a",iA,[l("二叉树最底层最左边的值"),e(n)])]),hA,t("td",fA,[e(s,{to:"/tag/tree.html"},{default:o(()=>[uA]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gA]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mA]),_:1}),l(),yA]),t("td",xA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bA,t("td",pA,[t("a",kA,[l("二叉树的右侧视图"),e(n)])]),MA,t("td",IA,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vA]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[HA]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[wA]),_:1}),l(),zA]),t("td",EA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OA,t("td",LA,[t("a",CA,[l("序列化与反序列化二叉树"),e(n)])]),jA,t("td",PA,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qA]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[NA]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[VA]),_:1}),l(),KA]),t("td",TA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[AA,t("td",BA,[t("a",DA,[l("分割回文子字符串"),e(n)])]),JA,t("td",UA,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[WA]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[XA]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[YA]),_:1}),l(),ZA]),t("td",FA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QA,t("td",RA,[t("a",SA,[l("节点间通路"),e(n)])]),GA,t("td",$A,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[tB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[eB]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[lB]),_:1})]),t("td",oB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sB,t("td",nB,[t("a",dB,[l("特定深度节点链表"),e(n)])]),_B,t("td",cB,[e(s,{to:"/tag/tree.html"},{default:o(()=>[aB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[rB]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[iB]),_:1}),l(),hB]),t("td",fB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uB,t("td",gB,[t("a",mB,[l("颜色填充"),e(n)])]),yB,t("td",xB,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[pB]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[kB]),_:1}),l(),MB]),t("td",IB,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vB,t("td",HB,[t("a",wB,[l("水域大小"),e(n)])]),zB,t("td",EB,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[OB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[LB]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[CB]),_:1}),l(),jB]),t("td",PB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qB,t("td",NB,[t("a",VB,[l("婴儿名字"),e(n)])]),KB,t("td",TB,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[AB]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[BB]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[DB]),_:1}),l(),JB]),t("td",UB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WB,t("td",XB,[t("a",YB,[l("单词转换"),e(n)])]),ZB,t("td",FB,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[QB]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[RB]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[SB]),_:1}),l(),GB]),t("td",$B,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const sD=c(h,[["render",tD],["__file","breadth-first-search.html.vue"]]);export{sD as default};
