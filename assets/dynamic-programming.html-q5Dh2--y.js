import{_ as a,r as _,o as i,c,a as t,d as e,w as o,b as l,f as r}from"./app-PpWft8bW.js";const h={},f=t("h1",{id:"动态规划",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#动态规划","aria-hidden":"true"},"#"),l(" 动态规划")],-1),g=t("summary",null,"全部标签",-1),u=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),v=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),j=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),O=t("code",null,"最小生成树",-1),L=t("code",null,"图",-1),E=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),N=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),B=t("code",null,"并查集",-1),Y=t("code",null,"字典树",-1),A=t("code",null,"线段树",-1),J=t("code",null,"树状数组",-1),R=t("code",null,"后缀数组",-1),S=t("p",null,[t("strong",null,"算法")],-1),U=t("code",null,"枚举",-1),W=t("code",null,"递归",-1),X=t("code",null,"分治",-1),F=t("code",null,"回溯",-1),G=t("code",null,"贪心",-1),T=t("span",{class:"blue"},"动态规划",-1),Q=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),it=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ut=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),vt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),jt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Ot=t("code",null,"交互",-1),Lt=t("code",null,"迭代器",-1),Et=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vt=t("td",{style:{"text-align":"center"}},"5",-1),Nt={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},Bt={style:{"text-align":"center"}},Yt={style:{"text-align":"left"}},At=t("code",null,"双指针",-1),Jt=t("code",null,"字符串",-1),Rt=t("code",null,"动态规划",-1),St={style:{"text-align":"left"}},Ut=t("td",{style:{"text-align":"center"}},"10",-1),Wt={style:{"text-align":"left"}},Xt={href:"https://leetcode.com/problems/regular-expression-matching",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"center"}},Gt={style:{"text-align":"left"}},Tt=t("code",null,"递归",-1),Qt=t("code",null,"字符串",-1),Zt=t("code",null,"动态规划",-1),$t={style:{"text-align":"left"}},te=t("td",{style:{"text-align":"center"}},"22",-1),ee={style:{"text-align":"left"}},le={href:"https://leetcode.com/problems/generate-parentheses",target:"_blank",rel:"noopener noreferrer"},oe={style:{"text-align":"center"}},ne={style:{"text-align":"left"}},se=t("code",null,"字符串",-1),de=t("code",null,"动态规划",-1),_e=t("code",null,"回溯",-1),ae={style:{"text-align":"left"}},ie=t("td",{style:{"text-align":"center"}},"32",-1),ce={style:{"text-align":"left"}},re={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},he={style:{"text-align":"center"}},fe={style:{"text-align":"left"}},ge=t("code",null,"栈",-1),ue=t("code",null,"字符串",-1),me=t("code",null,"动态规划",-1),ye={style:{"text-align":"left"}},xe=t("td",{style:{"text-align":"center"}},"42",-1),pe={style:{"text-align":"left"}},be={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},ke={style:{"text-align":"center"}},Me={style:{"text-align":"left"}},He=t("code",null,"栈",-1),Ie=t("code",null,"数组",-1),we=t("code",null,"双指针",-1),ve=t("code",null,"2+",-1),qe={style:{"text-align":"left"}},ze=t("td",{style:{"text-align":"center"}},"44",-1),je={style:{"text-align":"left"}},Ce={href:"https://leetcode.com/problems/wildcard-matching",target:"_blank",rel:"noopener noreferrer"},Oe={style:{"text-align":"center"}},Le={style:{"text-align":"left"}},Ee=t("code",null,"贪心",-1),Pe=t("code",null,"递归",-1),Ke=t("code",null,"字符串",-1),Ve=t("code",null,"1+",-1),Ne={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"45",-1),Be={style:{"text-align":"left"}},Ye={href:"https://leetcode.com/problems/jump-game-ii",target:"_blank",rel:"noopener noreferrer"},Ae={style:{"text-align":"center"}},Je={style:{"text-align":"left"}},Re=t("code",null,"贪心",-1),Se=t("code",null,"数组",-1),Ue=t("code",null,"动态规划",-1),We={style:{"text-align":"left"}},Xe=t("td",{style:{"text-align":"center"}},"53",-1),Fe={style:{"text-align":"left"}},Ge={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},Te={style:{"text-align":"center"}},Qe={style:{"text-align":"left"}},Ze=t("code",null,"数组",-1),$e=t("code",null,"分治",-1),tl=t("code",null,"动态规划",-1),el={style:{"text-align":"left"}},ll=t("td",{style:{"text-align":"center"}},"55",-1),ol={style:{"text-align":"left"}},nl={href:"https://leetcode.com/problems/jump-game",target:"_blank",rel:"noopener noreferrer"},sl={style:{"text-align":"center"}},dl={style:{"text-align":"left"}},_l=t("code",null,"贪心",-1),al=t("code",null,"数组",-1),il=t("code",null,"动态规划",-1),cl={style:{"text-align":"left"}},rl=t("td",{style:{"text-align":"center"}},"62",-1),hl={style:{"text-align":"left"}},fl={href:"https://leetcode.com/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},gl={style:{"text-align":"center"}},ul={style:{"text-align":"left"}},ml=t("code",null,"数学",-1),yl=t("code",null,"动态规划",-1),xl=t("code",null,"组合数学",-1),pl={style:{"text-align":"left"}},bl=t("td",{style:{"text-align":"center"}},"63",-1),kl={style:{"text-align":"left"}},Ml={href:"https://leetcode.com/problems/unique-paths-ii",target:"_blank",rel:"noopener noreferrer"},Hl={style:{"text-align":"center"}},Il={style:{"text-align":"left"}},wl=t("code",null,"数组",-1),vl=t("code",null,"动态规划",-1),ql=t("code",null,"矩阵",-1),zl={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"64",-1),Cl={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/minimum-path-sum",target:"_blank",rel:"noopener noreferrer"},Ll={style:{"text-align":"center"}},El={style:{"text-align":"left"}},Pl=t("code",null,"数组",-1),Kl=t("code",null,"动态规划",-1),Vl=t("code",null,"矩阵",-1),Nl={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"70",-1),Bl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"center"}},Jl={style:{"text-align":"left"}},Rl=t("code",null,"记忆化搜索",-1),Sl=t("code",null,"数学",-1),Ul=t("code",null,"动态规划",-1),Wl={style:{"text-align":"left"}},Xl=t("td",{style:{"text-align":"center"}},"72",-1),Fl={style:{"text-align":"left"}},Gl={href:"https://leetcode.com/problems/edit-distance",target:"_blank",rel:"noopener noreferrer"},Tl={style:{"text-align":"center"}},Ql={style:{"text-align":"left"}},Zl=t("code",null,"字符串",-1),$l=t("code",null,"动态规划",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"85",-1),lo={style:{"text-align":"left"}},oo={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},no={style:{"text-align":"center"}},so={style:{"text-align":"left"}},_o=t("code",null,"栈",-1),ao=t("code",null,"数组",-1),io=t("code",null,"动态规划",-1),co=t("code",null,"2+",-1),ro={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"87",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/scramble-string",target:"_blank",rel:"noopener noreferrer"},uo=t("td",{style:{"text-align":"center"}},null,-1),mo={style:{"text-align":"left"}},yo=t("code",null,"字符串",-1),xo=t("code",null,"动态规划",-1),po={style:{"text-align":"left"}},bo=t("td",{style:{"text-align":"center"}},"91",-1),ko={style:{"text-align":"left"}},Mo={href:"https://leetcode.com/problems/decode-ways",target:"_blank",rel:"noopener noreferrer"},Ho=t("td",{style:{"text-align":"center"}},null,-1),Io={style:{"text-align":"left"}},wo=t("code",null,"字符串",-1),vo=t("code",null,"动态规划",-1),qo={style:{"text-align":"left"}},zo=t("td",{style:{"text-align":"center"}},"95",-1),jo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Oo={style:{"text-align":"center"}},Lo={style:{"text-align":"left"}},Eo=t("code",null,"树",-1),Po=t("code",null,"二叉搜索树",-1),Ko=t("code",null,"动态规划",-1),Vo=t("code",null,"2+",-1),No={style:{"text-align":"left"}},Do=t("td",{style:{"text-align":"center"}},"96",-1),Bo={style:{"text-align":"left"}},Yo={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},Ao={style:{"text-align":"center"}},Jo={style:{"text-align":"left"}},Ro=t("code",null,"树",-1),So=t("code",null,"二叉搜索树",-1),Uo=t("code",null,"数学",-1),Wo=t("code",null,"2+",-1),Xo={style:{"text-align":"left"}},Fo=t("td",{style:{"text-align":"center"}},"97",-1),Go={style:{"text-align":"left"}},To={href:"https://leetcode.com/problems/interleaving-string",target:"_blank",rel:"noopener noreferrer"},Qo={style:{"text-align":"center"}},Zo={style:{"text-align":"left"}},$o=t("code",null,"字符串",-1),tn=t("code",null,"动态规划",-1),en={style:{"text-align":"left"}},ln=t("td",{style:{"text-align":"center"}},"115",-1),on={style:{"text-align":"left"}},nn={href:"https://leetcode.com/problems/distinct-subsequences",target:"_blank",rel:"noopener noreferrer"},sn=t("td",{style:{"text-align":"center"}},null,-1),dn={style:{"text-align":"left"}},_n=t("code",null,"字符串",-1),an=t("code",null,"动态规划",-1),cn={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"118",-1),hn={style:{"text-align":"left"}},fn={href:"https://leetcode.com/problems/pascals-triangle",target:"_blank",rel:"noopener noreferrer"},gn={style:{"text-align":"center"}},un={style:{"text-align":"left"}},mn=t("code",null,"数组",-1),yn=t("code",null,"动态规划",-1),xn={style:{"text-align":"left"}},pn=t("td",{style:{"text-align":"center"}},"119",-1),bn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/pascals-triangle-ii",target:"_blank",rel:"noopener noreferrer"},Mn=t("td",{style:{"text-align":"center"}},null,-1),Hn={style:{"text-align":"left"}},In=t("code",null,"数组",-1),wn=t("code",null,"动态规划",-1),vn={style:{"text-align":"left"}},qn=t("td",{style:{"text-align":"center"}},"120",-1),zn={style:{"text-align":"left"}},jn={href:"https://leetcode.com/problems/triangle",target:"_blank",rel:"noopener noreferrer"},Cn={style:{"text-align":"center"}},On={style:{"text-align":"left"}},Ln=t("code",null,"数组",-1),En=t("code",null,"动态规划",-1),Pn={style:{"text-align":"left"}},Kn=t("td",{style:{"text-align":"center"}},"121",-1),Vn={style:{"text-align":"left"}},Nn={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock",target:"_blank",rel:"noopener noreferrer"},Dn={style:{"text-align":"center"}},Bn={style:{"text-align":"left"}},Yn=t("code",null,"数组",-1),An=t("code",null,"动态规划",-1),Jn={style:{"text-align":"left"}},Rn=t("td",{style:{"text-align":"center"}},"122",-1),Sn={style:{"text-align":"left"}},Un={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",target:"_blank",rel:"noopener noreferrer"},Wn={style:{"text-align":"center"}},Xn={style:{"text-align":"left"}},Fn=t("code",null,"贪心",-1),Gn=t("code",null,"数组",-1),Tn=t("code",null,"动态规划",-1),Qn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"123",-1),$n={style:{"text-align":"left"}},ts={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",target:"_blank",rel:"noopener noreferrer"},es={style:{"text-align":"center"}},ls={style:{"text-align":"left"}},os=t("code",null,"数组",-1),ns=t("code",null,"动态规划",-1),ss={style:{"text-align":"left"}},ds=t("td",{style:{"text-align":"center"}},"124",-1),_s={style:{"text-align":"left"}},as={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},is={style:{"text-align":"center"}},cs={style:{"text-align":"left"}},rs=t("code",null,"树",-1),hs=t("code",null,"深度优先搜索",-1),fs=t("code",null,"动态规划",-1),gs=t("code",null,"1+",-1),us={style:{"text-align":"left"}},ms=t("td",{style:{"text-align":"center"}},"131",-1),ys={style:{"text-align":"left"}},xs={href:"https://leetcode.com/problems/palindrome-partitioning",target:"_blank",rel:"noopener noreferrer"},ps={style:{"text-align":"center"}},bs={style:{"text-align":"left"}},ks=t("code",null,"字符串",-1),Ms=t("code",null,"动态规划",-1),Hs=t("code",null,"回溯",-1),Is={style:{"text-align":"left"}},ws=t("td",{style:{"text-align":"center"}},"132",-1),vs={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/palindrome-partitioning-ii",target:"_blank",rel:"noopener noreferrer"},zs=t("td",{style:{"text-align":"center"}},null,-1),js={style:{"text-align":"left"}},Cs=t("code",null,"字符串",-1),Os=t("code",null,"动态规划",-1),Ls={style:{"text-align":"left"}},Es=t("td",{style:{"text-align":"center"}},"139",-1),Ps={style:{"text-align":"left"}},Ks={href:"https://leetcode.com/problems/word-break",target:"_blank",rel:"noopener noreferrer"},Vs={style:{"text-align":"center"}},Ns={style:{"text-align":"left"}},Ds=t("code",null,"字典树",-1),Bs=t("code",null,"记忆化搜索",-1),Ys=t("code",null,"数组",-1),As=t("code",null,"3+",-1),Js={style:{"text-align":"left"}},Rs=t("td",{style:{"text-align":"center"}},"140",-1),Ss={style:{"text-align":"left"}},Us={href:"https://leetcode.com/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},Ws=t("td",{style:{"text-align":"center"}},null,-1),Xs={style:{"text-align":"left"}},Fs=t("code",null,"字典树",-1),Gs=t("code",null,"记忆化搜索",-1),Ts=t("code",null,"数组",-1),Qs=t("code",null,"4+",-1),Zs={style:{"text-align":"left"}},$s=t("td",{style:{"text-align":"center"}},"152",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/maximum-product-subarray",target:"_blank",rel:"noopener noreferrer"},ld={style:{"text-align":"center"}},od={style:{"text-align":"left"}},nd=t("code",null,"数组",-1),sd=t("code",null,"动态规划",-1),dd={style:{"text-align":"left"}},_d=t("td",{style:{"text-align":"center"}},"174",-1),ad={style:{"text-align":"left"}},id={href:"https://leetcode.com/problems/dungeon-game",target:"_blank",rel:"noopener noreferrer"},cd={style:{"text-align":"center"}},rd={style:{"text-align":"left"}},hd=t("code",null,"数组",-1),fd=t("code",null,"动态规划",-1),gd=t("code",null,"矩阵",-1),ud={style:{"text-align":"left"}},md=t("td",{style:{"text-align":"center"}},"188",-1),yd={style:{"text-align":"left"}},xd={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",target:"_blank",rel:"noopener noreferrer"},pd={style:{"text-align":"center"}},bd={style:{"text-align":"left"}},kd=t("code",null,"数组",-1),Md=t("code",null,"动态规划",-1),Hd={style:{"text-align":"left"}},Id=t("td",{style:{"text-align":"center"}},"198",-1),wd={style:{"text-align":"left"}},vd={href:"https://leetcode.com/problems/house-robber",target:"_blank",rel:"noopener noreferrer"},qd={style:{"text-align":"center"}},zd={style:{"text-align":"left"}},jd=t("code",null,"数组",-1),Cd=t("code",null,"动态规划",-1),Od={style:{"text-align":"left"}},Ld=t("td",{style:{"text-align":"center"}},"213",-1),Ed={style:{"text-align":"left"}},Pd={href:"https://leetcode.com/problems/house-robber-ii",target:"_blank",rel:"noopener noreferrer"},Kd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Nd=t("code",null,"数组",-1),Dd=t("code",null,"动态规划",-1),Bd={style:{"text-align":"left"}},Yd=t("td",{style:{"text-align":"center"}},"221",-1),Ad={style:{"text-align":"left"}},Jd={href:"https://leetcode.com/problems/maximal-square",target:"_blank",rel:"noopener noreferrer"},Rd={style:{"text-align":"center"}},Sd={style:{"text-align":"left"}},Ud=t("code",null,"数组",-1),Wd=t("code",null,"动态规划",-1),Xd=t("code",null,"矩阵",-1),Fd={style:{"text-align":"left"}},Gd=t("td",{style:{"text-align":"center"}},"233",-1),Td={style:{"text-align":"left"}},Qd={href:"https://leetcode.com/problems/number-of-digit-one",target:"_blank",rel:"noopener noreferrer"},Zd={style:{"text-align":"center"}},$d={style:{"text-align":"left"}},t_=t("code",null,"递归",-1),e_=t("code",null,"数学",-1),l_=t("code",null,"动态规划",-1),o_={style:{"text-align":"left"}},n_=t("td",{style:{"text-align":"center"}},"241",-1),s_={style:{"text-align":"left"}},d_={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},null,-1),a_={style:{"text-align":"left"}},i_=t("code",null,"递归",-1),c_=t("code",null,"记忆化搜索",-1),r_=t("code",null,"数学",-1),h_=t("code",null,"2+",-1),f_={style:{"text-align":"left"}},g_=t("td",{style:{"text-align":"center"}},"256",-1),u_={style:{"text-align":"left"}},m_={href:"https://leetcode.com/problems/paint-house",target:"_blank",rel:"noopener noreferrer"},y_=t("td",{style:{"text-align":"center"}},null,-1),x_={style:{"text-align":"left"}},p_=t("code",null,"数组",-1),b_=t("code",null,"动态规划",-1),k_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"264",-1),H_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},w_={style:{"text-align":"center"}},v_={style:{"text-align":"left"}},q_=t("code",null,"哈希表",-1),z_=t("code",null,"数学",-1),j_=t("code",null,"动态规划",-1),C_=t("code",null,"1+",-1),O_={style:{"text-align":"left"}},L_=t("td",{style:{"text-align":"center"}},"265",-1),E_={style:{"text-align":"left"}},P_={href:"https://leetcode.com/problems/paint-house-ii",target:"_blank",rel:"noopener noreferrer"},K_=t("td",{style:{"text-align":"center"}},null,-1),V_={style:{"text-align":"left"}},N_=t("code",null,"数组",-1),D_=t("code",null,"动态规划",-1),B_={style:{"text-align":"left"}},Y_=t("td",{style:{"text-align":"center"}},"276",-1),A_={style:{"text-align":"left"}},J_={href:"https://leetcode.com/problems/paint-fence",target:"_blank",rel:"noopener noreferrer"},R_=t("td",{style:{"text-align":"center"}},null,-1),S_={style:{"text-align":"left"}},U_=t("code",null,"动态规划",-1),W_={style:{"text-align":"left"}},X_=t("td",{style:{"text-align":"center"}},"279",-1),F_={style:{"text-align":"left"}},G_={href:"https://leetcode.com/problems/perfect-squares",target:"_blank",rel:"noopener noreferrer"},T_={style:{"text-align":"center"}},Q_={style:{"text-align":"left"}},Z_=t("code",null,"广度优先搜索",-1),$_=t("code",null,"数学",-1),ta=t("code",null,"动态规划",-1),ea={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"294",-1),oa={style:{"text-align":"left"}},na={href:"https://leetcode.com/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},sa=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"记忆化搜索",-1),aa=t("code",null,"数学",-1),ia=t("code",null,"动态规划",-1),ca=t("code",null,"2+",-1),ra={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"300",-1),fa={style:{"text-align":"left"}},ga={href:"https://leetcode.com/problems/longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},ua={style:{"text-align":"center"}},ma={style:{"text-align":"left"}},ya=t("code",null,"数组",-1),xa=t("code",null,"二分查找",-1),pa=t("code",null,"动态规划",-1),ba={style:{"text-align":"left"}},ka=t("td",{style:{"text-align":"center"}},"309",-1),Ma={style:{"text-align":"left"}},Ha={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",target:"_blank",rel:"noopener noreferrer"},Ia={style:{"text-align":"center"}},wa={style:{"text-align":"left"}},va=t("code",null,"数组",-1),qa=t("code",null,"动态规划",-1),za={style:{"text-align":"left"}},ja=t("td",{style:{"text-align":"center"}},"312",-1),Ca={style:{"text-align":"left"}},Oa={href:"https://leetcode.com/problems/burst-balloons",target:"_blank",rel:"noopener noreferrer"},La=t("td",{style:{"text-align":"center"}},null,-1),Ea={style:{"text-align":"left"}},Pa=t("code",null,"数组",-1),Ka=t("code",null,"动态规划",-1),Va={style:{"text-align":"left"}},Na=t("td",{style:{"text-align":"center"}},"313",-1),Da={style:{"text-align":"left"}},Ba={href:"https://leetcode.com/problems/super-ugly-number",target:"_blank",rel:"noopener noreferrer"},Ya=t("td",{style:{"text-align":"center"}},null,-1),Aa={style:{"text-align":"left"}},Ja=t("code",null,"数组",-1),Ra=t("code",null,"数学",-1),Sa=t("code",null,"动态规划",-1),Ua={style:{"text-align":"left"}},Wa=t("td",{style:{"text-align":"center"}},"322",-1),Xa={style:{"text-align":"left"}},Fa={href:"https://leetcode.com/problems/coin-change",target:"_blank",rel:"noopener noreferrer"},Ga={style:{"text-align":"center"}},Ta={style:{"text-align":"left"}},Qa=t("code",null,"广度优先搜索",-1),Za=t("code",null,"数组",-1),$a=t("code",null,"动态规划",-1),ti={style:{"text-align":"left"}},ei=t("td",{style:{"text-align":"center"}},"329",-1),li={style:{"text-align":"left"}},oi={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},ni=t("td",{style:{"text-align":"center"}},null,-1),si={style:{"text-align":"left"}},di=t("code",null,"深度优先搜索",-1),_i=t("code",null,"广度优先搜索",-1),ai=t("code",null,"图",-1),ii=t("code",null,"5+",-1),ci={style:{"text-align":"left"}},ri=t("td",{style:{"text-align":"center"}},"333",-1),hi={style:{"text-align":"left"}},fi={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},gi=t("td",{style:{"text-align":"center"}},null,-1),ui={style:{"text-align":"left"}},mi=t("code",null,"树",-1),yi=t("code",null,"深度优先搜索",-1),xi=t("code",null,"二叉搜索树",-1),pi=t("code",null,"2+",-1),bi={style:{"text-align":"left"}},ki=t("td",{style:{"text-align":"center"}},"337",-1),Mi={style:{"text-align":"left"}},Hi={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Ii=t("td",{style:{"text-align":"center"}},null,-1),wi={style:{"text-align":"left"}},vi=t("code",null,"树",-1),qi=t("code",null,"深度优先搜索",-1),zi=t("code",null,"动态规划",-1),ji=t("code",null,"1+",-1),Ci={style:{"text-align":"left"}},Oi=t("td",{style:{"text-align":"center"}},"338",-1),Li={style:{"text-align":"left"}},Ei={href:"https://leetcode.com/problems/counting-bits",target:"_blank",rel:"noopener noreferrer"},Pi=t("td",{style:{"text-align":"center"}},null,-1),Ki={style:{"text-align":"left"}},Vi=t("code",null,"位运算",-1),Ni=t("code",null,"动态规划",-1),Di={style:{"text-align":"left"}},Bi=t("td",{style:{"text-align":"center"}},"343",-1),Yi={style:{"text-align":"left"}},Ai={href:"https://leetcode.com/problems/integer-break",target:"_blank",rel:"noopener noreferrer"},Ji={style:{"text-align":"center"}},Ri={style:{"text-align":"left"}},Si=t("code",null,"数学",-1),Ui=t("code",null,"动态规划",-1),Wi={style:{"text-align":"left"}},Xi=t("td",{style:{"text-align":"center"}},"351",-1),Fi={style:{"text-align":"left"}},Gi={href:"https://leetcode.com/problems/android-unlock-patterns",target:"_blank",rel:"noopener noreferrer"},Ti=t("td",{style:{"text-align":"center"}},null,-1),Qi={style:{"text-align":"left"}},Zi=t("code",null,"位运算",-1),$i=t("code",null,"动态规划",-1),tc=t("code",null,"回溯",-1),ec=t("code",null,"1+",-1),lc={style:{"text-align":"left"}},oc=t("td",{style:{"text-align":"center"}},"354",-1),nc={style:{"text-align":"left"}},sc={href:"https://leetcode.com/problems/russian-doll-envelopes",target:"_blank",rel:"noopener noreferrer"},dc={style:{"text-align":"center"}},_c={style:{"text-align":"left"}},ac=t("code",null,"数组",-1),ic=t("code",null,"二分查找",-1),cc=t("code",null,"动态规划",-1),rc=t("code",null,"1+",-1),hc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"357",-1),gc={style:{"text-align":"left"}},uc={href:"https://leetcode.com/problems/count-numbers-with-unique-digits",target:"_blank",rel:"noopener noreferrer"},mc=t("td",{style:{"text-align":"center"}},null,-1),yc={style:{"text-align":"left"}},xc=t("code",null,"数学",-1),pc=t("code",null,"动态规划",-1),bc=t("code",null,"回溯",-1),kc={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"361",-1),Hc={style:{"text-align":"left"}},Ic={href:"https://leetcode.com/problems/bomb-enemy",target:"_blank",rel:"noopener noreferrer"},wc=t("td",{style:{"text-align":"center"}},null,-1),vc={style:{"text-align":"left"}},qc=t("code",null,"数组",-1),zc=t("code",null,"动态规划",-1),jc=t("code",null,"矩阵",-1),Cc={style:{"text-align":"left"}},Oc=t("td",{style:{"text-align":"center"}},"368",-1),Lc={style:{"text-align":"left"}},Ec={href:"https://leetcode.com/problems/largest-divisible-subset",target:"_blank",rel:"noopener noreferrer"},Pc=t("td",{style:{"text-align":"center"}},null,-1),Kc={style:{"text-align":"left"}},Vc=t("code",null,"数组",-1),Nc=t("code",null,"数学",-1),Dc=t("code",null,"动态规划",-1),Bc=t("code",null,"1+",-1),Yc={style:{"text-align":"left"}},Ac=t("td",{style:{"text-align":"center"}},"375",-1),Jc={style:{"text-align":"left"}},Rc={href:"https://leetcode.com/problems/guess-number-higher-or-lower-ii",target:"_blank",rel:"noopener noreferrer"},Sc={style:{"text-align":"center"}},Uc={style:{"text-align":"left"}},Wc=t("code",null,"数学",-1),Xc=t("code",null,"动态规划",-1),Fc=t("code",null,"博弈",-1),Gc={style:{"text-align":"left"}},Tc=t("td",{style:{"text-align":"center"}},"376",-1),Qc={style:{"text-align":"left"}},Zc={href:"https://leetcode.com/problems/wiggle-subsequence",target:"_blank",rel:"noopener noreferrer"},$c=t("td",{style:{"text-align":"center"}},null,-1),tr={style:{"text-align":"left"}},er=t("code",null,"贪心",-1),lr=t("code",null,"数组",-1),or=t("code",null,"动态规划",-1),nr={style:{"text-align":"left"}},sr=t("td",{style:{"text-align":"center"}},"377",-1),dr={style:{"text-align":"left"}},_r={href:"https://leetcode.com/problems/combination-sum-iv",target:"_blank",rel:"noopener noreferrer"},ar=t("td",{style:{"text-align":"center"}},null,-1),ir={style:{"text-align":"left"}},cr=t("code",null,"数组",-1),rr=t("code",null,"动态规划",-1),hr={style:{"text-align":"left"}},fr=t("td",{style:{"text-align":"center"}},"392",-1),gr={style:{"text-align":"left"}},ur={href:"https://leetcode.com/problems/is-subsequence",target:"_blank",rel:"noopener noreferrer"},mr={style:{"text-align":"center"}},yr={style:{"text-align":"left"}},xr=t("code",null,"双指针",-1),pr=t("code",null,"字符串",-1),br=t("code",null,"动态规划",-1),kr={style:{"text-align":"left"}},Mr=t("td",{style:{"text-align":"center"}},"396",-1),Hr={style:{"text-align":"left"}},Ir={href:"https://leetcode.com/problems/rotate-function",target:"_blank",rel:"noopener noreferrer"},wr=t("td",{style:{"text-align":"center"}},null,-1),vr={style:{"text-align":"left"}},qr=t("code",null,"数组",-1),zr=t("code",null,"数学",-1),jr=t("code",null,"动态规划",-1),Cr={style:{"text-align":"left"}},Or=t("td",{style:{"text-align":"center"}},"397",-1),Lr={style:{"text-align":"left"}},Er={href:"https://leetcode.com/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},Pr=t("td",{style:{"text-align":"center"}},null,-1),Kr={style:{"text-align":"left"}},Vr=t("code",null,"贪心",-1),Nr=t("code",null,"位运算",-1),Dr=t("code",null,"记忆化搜索",-1),Br=t("code",null,"1+",-1),Yr={style:{"text-align":"left"}},Ar=t("td",{style:{"text-align":"center"}},"403",-1),Jr={style:{"text-align":"left"}},Rr={href:"https://leetcode.com/problems/frog-jump",target:"_blank",rel:"noopener noreferrer"},Sr=t("td",{style:{"text-align":"center"}},null,-1),Ur={style:{"text-align":"left"}},Wr=t("code",null,"数组",-1),Xr=t("code",null,"动态规划",-1),Fr={style:{"text-align":"left"}},Gr=t("td",{style:{"text-align":"center"}},"410",-1),Tr={style:{"text-align":"left"}},Qr={href:"https://leetcode.com/problems/split-array-largest-sum",target:"_blank",rel:"noopener noreferrer"},Zr=t("td",{style:{"text-align":"center"}},null,-1),$r={style:{"text-align":"left"}},th=t("code",null,"贪心",-1),eh=t("code",null,"数组",-1),lh=t("code",null,"二分查找",-1),oh=t("code",null,"2+",-1),nh={style:{"text-align":"left"}},sh=t("td",{style:{"text-align":"center"}},"413",-1),dh={style:{"text-align":"left"}},_h={href:"https://leetcode.com/problems/arithmetic-slices",target:"_blank",rel:"noopener noreferrer"},ah=t("td",{style:{"text-align":"center"}},null,-1),ih={style:{"text-align":"left"}},ch=t("code",null,"数组",-1),rh=t("code",null,"动态规划",-1),hh=t("code",null,"滑动窗口",-1),fh={style:{"text-align":"left"}},gh=t("td",{style:{"text-align":"center"}},"416",-1),uh={style:{"text-align":"left"}},mh={href:"https://leetcode.com/problems/partition-equal-subset-sum",target:"_blank",rel:"noopener noreferrer"},yh={style:{"text-align":"center"}},xh={style:{"text-align":"left"}},ph=t("code",null,"数组",-1),bh=t("code",null,"动态规划",-1),kh={style:{"text-align":"left"}},Mh=t("td",{style:{"text-align":"center"}},"418",-1),Hh={style:{"text-align":"left"}},Ih={href:"https://leetcode.com/problems/sentence-screen-fitting",target:"_blank",rel:"noopener noreferrer"},wh=t("td",{style:{"text-align":"center"}},null,-1),vh={style:{"text-align":"left"}},qh=t("code",null,"数组",-1),zh=t("code",null,"字符串",-1),jh=t("code",null,"动态规划",-1),Ch={style:{"text-align":"left"}},Oh=t("td",{style:{"text-align":"center"}},"435",-1),Lh={style:{"text-align":"left"}},Eh={href:"https://leetcode.com/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},Ph=t("td",{style:{"text-align":"center"}},null,-1),Kh={style:{"text-align":"left"}},Vh=t("code",null,"贪心",-1),Nh=t("code",null,"数组",-1),Dh=t("code",null,"动态规划",-1),Bh=t("code",null,"1+",-1),Yh={style:{"text-align":"left"}},Ah=t("td",{style:{"text-align":"center"}},"446",-1),Jh={style:{"text-align":"left"}},Rh={href:"https://leetcode.com/problems/arithmetic-slices-ii-subsequence",target:"_blank",rel:"noopener noreferrer"},Sh=t("td",{style:{"text-align":"center"}},null,-1),Uh={style:{"text-align":"left"}},Wh=t("code",null,"数组",-1),Xh=t("code",null,"动态规划",-1),Fh={style:{"text-align":"left"}},Gh=t("td",{style:{"text-align":"center"}},"458",-1),Th={style:{"text-align":"left"}},Qh={href:"https://leetcode.com/problems/poor-pigs",target:"_blank",rel:"noopener noreferrer"},Zh=t("td",{style:{"text-align":"center"}},null,-1),$h={style:{"text-align":"left"}},t1=t("code",null,"数学",-1),e1=t("code",null,"动态规划",-1),l1=t("code",null,"组合数学",-1),o1={style:{"text-align":"left"}},n1=t("td",{style:{"text-align":"center"}},"464",-1),s1={style:{"text-align":"left"}},d1={href:"https://leetcode.com/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},_1=t("td",{style:{"text-align":"center"}},null,-1),a1={style:{"text-align":"left"}},i1=t("code",null,"位运算",-1),c1=t("code",null,"记忆化搜索",-1),r1=t("code",null,"数学",-1),h1=t("code",null,"3+",-1),f1={style:{"text-align":"left"}},g1=t("td",{style:{"text-align":"center"}},"465",-1),u1={style:{"text-align":"left"}},m1={href:"https://leetcode.com/problems/optimal-account-balancing",target:"_blank",rel:"noopener noreferrer"},y1=t("td",{style:{"text-align":"center"}},null,-1),x1={style:{"text-align":"left"}},p1=t("code",null,"位运算",-1),b1=t("code",null,"数组",-1),k1=t("code",null,"动态规划",-1),M1=t("code",null,"2+",-1),H1={style:{"text-align":"left"}},I1=t("td",{style:{"text-align":"center"}},"466",-1),w1={style:{"text-align":"left"}},v1={href:"https://leetcode.com/problems/count-the-repetitions",target:"_blank",rel:"noopener noreferrer"},q1=t("td",{style:{"text-align":"center"}},null,-1),z1={style:{"text-align":"left"}},j1=t("code",null,"字符串",-1),C1=t("code",null,"动态规划",-1),O1={style:{"text-align":"left"}},L1=t("td",{style:{"text-align":"center"}},"467",-1),E1={style:{"text-align":"left"}},P1={href:"https://leetcode.com/problems/unique-substrings-in-wraparound-string",target:"_blank",rel:"noopener noreferrer"},K1=t("td",{style:{"text-align":"center"}},null,-1),V1={style:{"text-align":"left"}},N1=t("code",null,"字符串",-1),D1=t("code",null,"动态规划",-1),B1={style:{"text-align":"left"}},Y1=t("td",{style:{"text-align":"center"}},"471",-1),A1={style:{"text-align":"left"}},J1={href:"https://leetcode.com/problems/encode-string-with-shortest-length",target:"_blank",rel:"noopener noreferrer"},R1=t("td",{style:{"text-align":"center"}},null,-1),S1={style:{"text-align":"left"}},U1=t("code",null,"字符串",-1),W1=t("code",null,"动态规划",-1),X1={style:{"text-align":"left"}},F1=t("td",{style:{"text-align":"center"}},"472",-1),G1={style:{"text-align":"left"}},T1={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},Q1=t("td",{style:{"text-align":"center"}},null,-1),Z1={style:{"text-align":"left"}},$1=t("code",null,"深度优先搜索",-1),tf=t("code",null,"字典树",-1),ef=t("code",null,"数组",-1),lf=t("code",null,"2+",-1),of={style:{"text-align":"left"}},nf=t("td",{style:{"text-align":"center"}},"473",-1),sf={style:{"text-align":"left"}},df={href:"https://leetcode.com/problems/matchsticks-to-square",target:"_blank",rel:"noopener noreferrer"},_f=t("td",{style:{"text-align":"center"}},null,-1),af={style:{"text-align":"left"}},cf=t("code",null,"位运算",-1),rf=t("code",null,"数组",-1),hf=t("code",null,"动态规划",-1),ff=t("code",null,"2+",-1),gf={style:{"text-align":"left"}},uf=t("td",{style:{"text-align":"center"}},"474",-1),mf={style:{"text-align":"left"}},yf={href:"https://leetcode.com/problems/ones-and-zeroes",target:"_blank",rel:"noopener noreferrer"},xf={style:{"text-align":"center"}},pf={style:{"text-align":"left"}},bf=t("code",null,"数组",-1),kf=t("code",null,"字符串",-1),Mf=t("code",null,"动态规划",-1),Hf={style:{"text-align":"left"}},If=t("td",{style:{"text-align":"center"}},"486",-1),wf={style:{"text-align":"left"}},vf={href:"https://leetcode.com/problems/predict-the-winner",target:"_blank",rel:"noopener noreferrer"},qf=t("td",{style:{"text-align":"center"}},null,-1),zf={style:{"text-align":"left"}},jf=t("code",null,"递归",-1),Cf=t("code",null,"数组",-1),Of=t("code",null,"数学",-1),Lf=t("code",null,"2+",-1),Ef={style:{"text-align":"left"}},Pf=t("td",{style:{"text-align":"center"}},"487",-1),Kf={style:{"text-align":"left"}},Vf={href:"https://leetcode.com/problems/max-consecutive-ones-ii",target:"_blank",rel:"noopener noreferrer"},Nf=t("td",{style:{"text-align":"center"}},null,-1),Df={style:{"text-align":"left"}},Bf=t("code",null,"数组",-1),Yf=t("code",null,"动态规划",-1),Af=t("code",null,"滑动窗口",-1),Jf={style:{"text-align":"left"}},Rf=t("td",{style:{"text-align":"center"}},"488",-1),Sf={style:{"text-align":"left"}},Uf={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},Wf=t("td",{style:{"text-align":"center"}},null,-1),Xf={style:{"text-align":"left"}},Ff=t("code",null,"栈",-1),Gf=t("code",null,"广度优先搜索",-1),Tf=t("code",null,"记忆化搜索",-1),Qf=t("code",null,"2+",-1),Zf={style:{"text-align":"left"}},$f=t("td",{style:{"text-align":"center"}},"494",-1),tg={style:{"text-align":"left"}},eg={href:"https://leetcode.com/problems/target-sum",target:"_blank",rel:"noopener noreferrer"},lg={style:{"text-align":"center"}},og={style:{"text-align":"left"}},ng=t("code",null,"数组",-1),sg=t("code",null,"动态规划",-1),dg=t("code",null,"回溯",-1),_g={style:{"text-align":"left"}},ag=t("td",{style:{"text-align":"center"}},"509",-1),ig={style:{"text-align":"left"}},cg={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},rg={style:{"text-align":"center"}},hg={style:{"text-align":"left"}},fg=t("code",null,"递归",-1),gg=t("code",null,"记忆化搜索",-1),ug=t("code",null,"数学",-1),mg=t("code",null,"1+",-1),yg={style:{"text-align":"left"}},xg=t("td",{style:{"text-align":"center"}},"514",-1),pg={style:{"text-align":"left"}},bg={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},kg={style:{"text-align":"center"}},Mg={style:{"text-align":"left"}},Hg=t("code",null,"深度优先搜索",-1),Ig=t("code",null,"广度优先搜索",-1),wg=t("code",null,"字符串",-1),vg=t("code",null,"1+",-1),qg={style:{"text-align":"left"}},zg=t("td",{style:{"text-align":"center"}},"516",-1),jg={style:{"text-align":"left"}},Cg={href:"https://leetcode.com/problems/longest-palindromic-subsequence",target:"_blank",rel:"noopener noreferrer"},Og={style:{"text-align":"center"}},Lg={style:{"text-align":"left"}},Eg=t("code",null,"字符串",-1),Pg=t("code",null,"动态规划",-1),Kg={style:{"text-align":"left"}},Vg=t("td",{style:{"text-align":"center"}},"518",-1),Ng={style:{"text-align":"left"}},Dg={href:"https://leetcode.com/problems/coin-change-ii",target:"_blank",rel:"noopener noreferrer"},Bg={style:{"text-align":"center"}},Yg={style:{"text-align":"left"}},Ag=t("code",null,"数组",-1),Jg=t("code",null,"动态规划",-1),Rg={style:{"text-align":"left"}},Sg=t("td",{style:{"text-align":"center"}},"526",-1),Ug={style:{"text-align":"left"}},Wg={href:"https://leetcode.com/problems/beautiful-arrangement",target:"_blank",rel:"noopener noreferrer"},Xg=t("td",{style:{"text-align":"center"}},null,-1),Fg={style:{"text-align":"left"}},Gg=t("code",null,"位运算",-1),Tg=t("code",null,"数组",-1),Qg=t("code",null,"动态规划",-1),Zg=t("code",null,"2+",-1),$g={style:{"text-align":"left"}},tu=t("td",{style:{"text-align":"center"}},"542",-1),eu={style:{"text-align":"left"}},lu={href:"https://leetcode.com/problems/01-matrix",target:"_blank",rel:"noopener noreferrer"},ou=t("td",{style:{"text-align":"center"}},null,-1),nu={style:{"text-align":"left"}},su=t("code",null,"广度优先搜索",-1),du=t("code",null,"数组",-1),_u=t("code",null,"动态规划",-1),au=t("code",null,"1+",-1),iu={style:{"text-align":"left"}},cu=t("td",{style:{"text-align":"center"}},"546",-1),ru={style:{"text-align":"left"}},hu={href:"https://leetcode.com/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},fu=t("td",{style:{"text-align":"center"}},null,-1),gu={style:{"text-align":"left"}},uu=t("code",null,"记忆化搜索",-1),mu=t("code",null,"数组",-1),yu=t("code",null,"动态规划",-1),xu={style:{"text-align":"left"}},pu=t("td",{style:{"text-align":"center"}},"552",-1),bu={style:{"text-align":"left"}},ku={href:"https://leetcode.com/problems/student-attendance-record-ii",target:"_blank",rel:"noopener noreferrer"},Mu=t("td",{style:{"text-align":"center"}},null,-1),Hu={style:{"text-align":"left"}},Iu=t("code",null,"动态规划",-1),wu={style:{"text-align":"left"}},vu=t("td",{style:{"text-align":"center"}},"553",-1),qu={style:{"text-align":"left"}},zu={href:"https://leetcode.com/problems/optimal-division",target:"_blank",rel:"noopener noreferrer"},ju=t("td",{style:{"text-align":"center"}},null,-1),Cu={style:{"text-align":"left"}},Ou=t("code",null,"数组",-1),Lu=t("code",null,"数学",-1),Eu=t("code",null,"动态规划",-1),Pu={style:{"text-align":"left"}},Ku=t("td",{style:{"text-align":"center"}},"562",-1),Vu={style:{"text-align":"left"}},Nu={href:"https://leetcode.com/problems/longest-line-of-consecutive-one-in-matrix",target:"_blank",rel:"noopener noreferrer"},Du=t("td",{style:{"text-align":"center"}},null,-1),Bu={style:{"text-align":"left"}},Yu=t("code",null,"数组",-1),Au=t("code",null,"动态规划",-1),Ju=t("code",null,"矩阵",-1),Ru={style:{"text-align":"left"}},Su=t("td",{style:{"text-align":"center"}},"568",-1),Uu={style:{"text-align":"left"}},Wu={href:"https://leetcode.com/problems/maximum-vacation-days",target:"_blank",rel:"noopener noreferrer"},Xu=t("td",{style:{"text-align":"center"}},null,-1),Fu={style:{"text-align":"left"}},Gu=t("code",null,"数组",-1),Tu=t("code",null,"动态规划",-1),Qu=t("code",null,"矩阵",-1),Zu={style:{"text-align":"left"}},$u=t("td",{style:{"text-align":"center"}},"576",-1),tm={style:{"text-align":"left"}},em={href:"https://leetcode.com/problems/out-of-boundary-paths",target:"_blank",rel:"noopener noreferrer"},lm=t("td",{style:{"text-align":"center"}},null,-1),om={style:{"text-align":"left"}},nm=t("code",null,"动态规划",-1),sm={style:{"text-align":"left"}},dm=t("td",{style:{"text-align":"center"}},"583",-1),_m={style:{"text-align":"left"}},am={href:"https://leetcode.com/problems/delete-operation-for-two-strings",target:"_blank",rel:"noopener noreferrer"},im={style:{"text-align":"center"}},cm={style:{"text-align":"left"}},rm=t("code",null,"字符串",-1),hm=t("code",null,"动态规划",-1),fm={style:{"text-align":"left"}},gm=t("td",{style:{"text-align":"center"}},"600",-1),um={style:{"text-align":"left"}},mm={href:"https://leetcode.com/problems/non-negative-integers-without-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},ym=t("td",{style:{"text-align":"center"}},null,-1),xm={style:{"text-align":"left"}},pm=t("code",null,"动态规划",-1),bm={style:{"text-align":"left"}},km=t("td",{style:{"text-align":"center"}},"629",-1),Mm={style:{"text-align":"left"}},Hm={href:"https://leetcode.com/problems/k-inverse-pairs-array",target:"_blank",rel:"noopener noreferrer"},Im=t("td",{style:{"text-align":"center"}},null,-1),wm={style:{"text-align":"left"}},vm=t("code",null,"动态规划",-1),qm={style:{"text-align":"left"}},zm=t("td",{style:{"text-align":"center"}},"634",-1),jm={style:{"text-align":"left"}},Cm={href:"https://leetcode.com/problems/find-the-derangement-of-an-array",target:"_blank",rel:"noopener noreferrer"},Om=t("td",{style:{"text-align":"center"}},null,-1),Lm={style:{"text-align":"left"}},Em=t("code",null,"数学",-1),Pm=t("code",null,"动态规划",-1),Km={style:{"text-align":"left"}},Vm=t("td",{style:{"text-align":"center"}},"638",-1),Nm={style:{"text-align":"left"}},Dm={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},Bm=t("td",{style:{"text-align":"center"}},null,-1),Ym={style:{"text-align":"left"}},Am=t("code",null,"位运算",-1),Jm=t("code",null,"记忆化搜索",-1),Rm=t("code",null,"数组",-1),Sm=t("code",null,"3+",-1),Um={style:{"text-align":"left"}},Wm=t("td",{style:{"text-align":"center"}},"639",-1),Xm={style:{"text-align":"left"}},Fm={href:"https://leetcode.com/problems/decode-ways-ii",target:"_blank",rel:"noopener noreferrer"},Gm=t("td",{style:{"text-align":"center"}},null,-1),Tm={style:{"text-align":"left"}},Qm=t("code",null,"字符串",-1),Zm=t("code",null,"动态规划",-1),$m={style:{"text-align":"left"}},ty=t("td",{style:{"text-align":"center"}},"646",-1),ey={style:{"text-align":"left"}},ly={href:"https://leetcode.com/problems/maximum-length-of-pair-chain",target:"_blank",rel:"noopener noreferrer"},oy=t("td",{style:{"text-align":"center"}},null,-1),ny={style:{"text-align":"left"}},sy=t("code",null,"贪心",-1),dy=t("code",null,"数组",-1),_y=t("code",null,"动态规划",-1),ay=t("code",null,"1+",-1),iy={style:{"text-align":"left"}},cy=t("td",{style:{"text-align":"center"}},"647",-1),ry={style:{"text-align":"left"}},hy={href:"https://leetcode.com/problems/palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},fy=t("td",{style:{"text-align":"center"}},null,-1),gy={style:{"text-align":"left"}},uy=t("code",null,"双指针",-1),my=t("code",null,"字符串",-1),yy=t("code",null,"动态规划",-1),xy={style:{"text-align":"left"}},py=t("td",{style:{"text-align":"center"}},"650",-1),by={style:{"text-align":"left"}},ky={href:"https://leetcode.com/problems/2-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},My=t("td",{style:{"text-align":"center"}},null,-1),Hy={style:{"text-align":"left"}},Iy=t("code",null,"数学",-1),wy=t("code",null,"动态规划",-1),vy={style:{"text-align":"left"}},qy=t("td",{style:{"text-align":"center"}},"651",-1),zy={style:{"text-align":"left"}},jy={href:"https://leetcode.com/problems/4-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},Cy=t("td",{style:{"text-align":"center"}},null,-1),Oy={style:{"text-align":"left"}},Ly=t("code",null,"数学",-1),Ey=t("code",null,"动态规划",-1),Py={style:{"text-align":"left"}},Ky=t("td",{style:{"text-align":"center"}},"656",-1),Vy={style:{"text-align":"left"}},Ny={href:"https://leetcode.com/problems/coin-path",target:"_blank",rel:"noopener noreferrer"},Dy=t("td",{style:{"text-align":"center"}},null,-1),By={style:{"text-align":"left"}},Yy=t("code",null,"数组",-1),Ay=t("code",null,"动态规划",-1),Jy={style:{"text-align":"left"}},Ry=t("td",{style:{"text-align":"center"}},"664",-1),Sy={style:{"text-align":"left"}},Uy={href:"https://leetcode.com/problems/strange-printer",target:"_blank",rel:"noopener noreferrer"},Wy=t("td",{style:{"text-align":"center"}},null,-1),Xy={style:{"text-align":"left"}},Fy=t("code",null,"字符串",-1),Gy=t("code",null,"动态规划",-1),Ty={style:{"text-align":"left"}},Qy=t("td",{style:{"text-align":"center"}},"673",-1),Zy={style:{"text-align":"left"}},$y={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},t3=t("td",{style:{"text-align":"center"}},null,-1),e3={style:{"text-align":"left"}},l3=t("code",null,"树状数组",-1),o3=t("code",null,"线段树",-1),n3=t("code",null,"数组",-1),s3=t("code",null,"1+",-1),d3={style:{"text-align":"left"}},_3=t("td",{style:{"text-align":"center"}},"678",-1),a3={style:{"text-align":"left"}},i3={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},c3={style:{"text-align":"center"}},r3={style:{"text-align":"left"}},h3=t("code",null,"栈",-1),f3=t("code",null,"贪心",-1),g3=t("code",null,"字符串",-1),u3=t("code",null,"1+",-1),m3={style:{"text-align":"left"}},y3=t("td",{style:{"text-align":"center"}},"688",-1),x3={style:{"text-align":"left"}},p3={href:"https://leetcode.com/problems/knight-probability-in-chessboard",target:"_blank",rel:"noopener noreferrer"},b3=t("td",{style:{"text-align":"center"}},null,-1),k3={style:{"text-align":"left"}},M3=t("code",null,"动态规划",-1),H3={style:{"text-align":"left"}},I3=t("td",{style:{"text-align":"center"}},"689",-1),w3={style:{"text-align":"left"}},v3={href:"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},q3=t("td",{style:{"text-align":"center"}},null,-1),z3={style:{"text-align":"left"}},j3=t("code",null,"数组",-1),C3=t("code",null,"动态规划",-1),O3={style:{"text-align":"left"}},L3=t("td",{style:{"text-align":"center"}},"691",-1),E3={style:{"text-align":"left"}},P3={href:"https://leetcode.com/problems/stickers-to-spell-word",target:"_blank",rel:"noopener noreferrer"},K3=t("td",{style:{"text-align":"center"}},null,-1),V3={style:{"text-align":"left"}},N3=t("code",null,"位运算",-1),D3=t("code",null,"数组",-1),B3=t("code",null,"字符串",-1),Y3=t("code",null,"3+",-1),A3={style:{"text-align":"left"}},J3=t("td",{style:{"text-align":"center"}},"698",-1),R3={style:{"text-align":"left"}},S3={href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},U3=t("td",{style:{"text-align":"center"}},null,-1),W3={style:{"text-align":"left"}},X3=t("code",null,"位运算",-1),F3=t("code",null,"记忆化搜索",-1),G3=t("code",null,"数组",-1),T3=t("code",null,"3+",-1),Q3={style:{"text-align":"left"}},Z3=t("td",{style:{"text-align":"center"}},"712",-1),$3={style:{"text-align":"left"}},tx={href:"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings",target:"_blank",rel:"noopener noreferrer"},ex={style:{"text-align":"center"}},lx={style:{"text-align":"left"}},ox=t("code",null,"字符串",-1),nx=t("code",null,"动态规划",-1),sx={style:{"text-align":"left"}},dx=t("td",{style:{"text-align":"center"}},"714",-1),_x={style:{"text-align":"left"}},ax={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee",target:"_blank",rel:"noopener noreferrer"},ix={style:{"text-align":"center"}},cx={style:{"text-align":"left"}},rx=t("code",null,"贪心",-1),hx=t("code",null,"数组",-1),fx=t("code",null,"动态规划",-1),gx={style:{"text-align":"left"}},ux=t("td",{style:{"text-align":"center"}},"718",-1),mx={style:{"text-align":"left"}},yx={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},xx=t("td",{style:{"text-align":"center"}},null,-1),px={style:{"text-align":"left"}},bx=t("code",null,"数组",-1),kx=t("code",null,"二分查找",-1),Mx=t("code",null,"动态规划",-1),Hx=t("code",null,"3+",-1),Ix={style:{"text-align":"left"}},wx=t("td",{style:{"text-align":"center"}},"727",-1),vx={style:{"text-align":"left"}},qx={href:"https://leetcode.com/problems/minimum-window-subsequence",target:"_blank",rel:"noopener noreferrer"},zx=t("td",{style:{"text-align":"center"}},null,-1),jx={style:{"text-align":"left"}},Cx=t("code",null,"字符串",-1),Ox=t("code",null,"动态规划",-1),Lx=t("code",null,"滑动窗口",-1),Ex={style:{"text-align":"left"}},Px=t("td",{style:{"text-align":"center"}},"730",-1),Kx={style:{"text-align":"left"}},Vx={href:"https://leetcode.com/problems/count-different-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},Nx=t("td",{style:{"text-align":"center"}},null,-1),Dx={style:{"text-align":"left"}},Bx=t("code",null,"字符串",-1),Yx=t("code",null,"动态规划",-1),Ax={style:{"text-align":"left"}},Jx=t("td",{style:{"text-align":"center"}},"740",-1),Rx={style:{"text-align":"left"}},Sx={href:"https://leetcode.com/problems/delete-and-earn",target:"_blank",rel:"noopener noreferrer"},Ux=t("td",{style:{"text-align":"center"}},null,-1),Wx={style:{"text-align":"left"}},Xx=t("code",null,"数组",-1),Fx=t("code",null,"哈希表",-1),Gx=t("code",null,"动态规划",-1),Tx={style:{"text-align":"left"}},Qx=t("td",{style:{"text-align":"center"}},"741",-1),Zx={style:{"text-align":"left"}},$x={href:"https://leetcode.com/problems/cherry-pickup",target:"_blank",rel:"noopener noreferrer"},t4=t("td",{style:{"text-align":"center"}},null,-1),e4={style:{"text-align":"left"}},l4=t("code",null,"数组",-1),o4=t("code",null,"动态规划",-1),n4=t("code",null,"矩阵",-1),s4={style:{"text-align":"left"}},d4=t("td",{style:{"text-align":"center"}},"746",-1),_4={style:{"text-align":"left"}},a4={href:"https://leetcode.com/problems/min-cost-climbing-stairs",target:"_blank",rel:"noopener noreferrer"},i4=t("td",{style:{"text-align":"center"}},null,-1),c4={style:{"text-align":"left"}},r4=t("code",null,"数组",-1),h4=t("code",null,"动态规划",-1),f4={style:{"text-align":"left"}},g4=t("td",{style:{"text-align":"center"}},"750",-1),u4={style:{"text-align":"left"}},m4={href:"https://leetcode.com/problems/number-of-corner-rectangles",target:"_blank",rel:"noopener noreferrer"},y4=t("td",{style:{"text-align":"center"}},null,-1),x4={style:{"text-align":"left"}},p4=t("code",null,"数组",-1),b4=t("code",null,"数学",-1),k4=t("code",null,"动态规划",-1),M4=t("code",null,"1+",-1),H4={style:{"text-align":"left"}},I4=t("td",{style:{"text-align":"center"}},"764",-1),w4={style:{"text-align":"left"}},v4={href:"https://leetcode.com/problems/largest-plus-sign",target:"_blank",rel:"noopener noreferrer"},q4=t("td",{style:{"text-align":"center"}},null,-1),z4={style:{"text-align":"left"}},j4=t("code",null,"数组",-1),C4=t("code",null,"动态规划",-1),O4={style:{"text-align":"left"}},L4=t("td",{style:{"text-align":"center"}},"787",-1),E4={style:{"text-align":"left"}},P4={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},K4=t("td",{style:{"text-align":"center"}},null,-1),V4={style:{"text-align":"left"}},N4=t("code",null,"深度优先搜索",-1),D4=t("code",null,"广度优先搜索",-1),B4=t("code",null,"图",-1),Y4=t("code",null,"3+",-1),A4={style:{"text-align":"left"}},J4=t("td",{style:{"text-align":"center"}},"788",-1),R4={style:{"text-align":"left"}},S4={href:"https://leetcode.com/problems/rotated-digits",target:"_blank",rel:"noopener noreferrer"},U4=t("td",{style:{"text-align":"center"}},null,-1),W4={style:{"text-align":"left"}},X4=t("code",null,"数学",-1),F4=t("code",null,"动态规划",-1),G4={style:{"text-align":"left"}},T4=t("td",{style:{"text-align":"center"}},"790",-1),Q4={style:{"text-align":"left"}},Z4={href:"https://leetcode.com/problems/domino-and-tromino-tiling",target:"_blank",rel:"noopener noreferrer"},$4=t("td",{style:{"text-align":"center"}},null,-1),t2={style:{"text-align":"left"}},e2=t("code",null,"动态规划",-1),l2={style:{"text-align":"left"}},o2=t("td",{style:{"text-align":"center"}},"792",-1),n2={style:{"text-align":"left"}},s2={href:"https://leetcode.com/problems/number-of-matching-subsequences",target:"_blank",rel:"noopener noreferrer"},d2=t("td",{style:{"text-align":"center"}},null,-1),_2={style:{"text-align":"left"}},a2=t("code",null,"字典树",-1),i2=t("code",null,"数组",-1),c2=t("code",null,"哈希表",-1),r2=t("code",null,"4+",-1),h2={style:{"text-align":"left"}},f2=t("td",{style:{"text-align":"center"}},"799",-1),g2={style:{"text-align":"left"}},u2={href:"https://leetcode.com/problems/champagne-tower",target:"_blank",rel:"noopener noreferrer"},m2=t("td",{style:{"text-align":"center"}},null,-1),y2={style:{"text-align":"left"}},x2=t("code",null,"动态规划",-1),p2={style:{"text-align":"left"}},b2=t("td",{style:{"text-align":"center"}},"801",-1),k2={style:{"text-align":"left"}},M2={href:"https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing",target:"_blank",rel:"noopener noreferrer"},H2=t("td",{style:{"text-align":"center"}},null,-1),I2={style:{"text-align":"left"}},w2=t("code",null,"数组",-1),v2=t("code",null,"动态规划",-1),q2={style:{"text-align":"left"}},z2=t("td",{style:{"text-align":"center"}},"805",-1),j2={style:{"text-align":"left"}},C2={href:"https://leetcode.com/problems/split-array-with-same-average",target:"_blank",rel:"noopener noreferrer"},O2=t("td",{style:{"text-align":"center"}},null,-1),L2={style:{"text-align":"left"}},E2=t("code",null,"位运算",-1),P2=t("code",null,"数组",-1),K2=t("code",null,"数学",-1),V2=t("code",null,"2+",-1),N2={style:{"text-align":"left"}},D2=t("td",{style:{"text-align":"center"}},"808",-1),B2={style:{"text-align":"left"}},Y2={href:"https://leetcode.com/problems/soup-servings",target:"_blank",rel:"noopener noreferrer"},A2=t("td",{style:{"text-align":"center"}},null,-1),J2={style:{"text-align":"left"}},R2=t("code",null,"数学",-1),S2=t("code",null,"动态规划",-1),U2=t("code",null,"概率与统计",-1),W2={style:{"text-align":"left"}},X2=t("td",{style:{"text-align":"center"}},"813",-1),F2={style:{"text-align":"left"}},G2={href:"https://leetcode.com/problems/largest-sum-of-averages",target:"_blank",rel:"noopener noreferrer"},T2=t("td",{style:{"text-align":"center"}},null,-1),Q2={style:{"text-align":"left"}},Z2=t("code",null,"数组",-1),$2=t("code",null,"动态规划",-1),tp=t("code",null,"前缀和",-1),ep={style:{"text-align":"left"}},lp=t("td",{style:{"text-align":"center"}},"818",-1),op={style:{"text-align":"left"}},np={href:"https://leetcode.com/problems/race-car",target:"_blank",rel:"noopener noreferrer"},sp=t("td",{style:{"text-align":"center"}},null,-1),dp={style:{"text-align":"left"}},_p=t("code",null,"动态规划",-1),ap={style:{"text-align":"left"}},ip=t("td",{style:{"text-align":"center"}},"823",-1),cp={style:{"text-align":"left"}},rp={href:"https://leetcode.com/problems/binary-trees-with-factors",target:"_blank",rel:"noopener noreferrer"},hp=t("td",{style:{"text-align":"center"}},null,-1),fp={style:{"text-align":"left"}},gp=t("code",null,"数组",-1),up=t("code",null,"哈希表",-1),mp=t("code",null,"动态规划",-1),yp=t("code",null,"1+",-1),xp={style:{"text-align":"left"}},pp=t("td",{style:{"text-align":"center"}},"828",-1),bp={style:{"text-align":"left"}},kp={href:"https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string",target:"_blank",rel:"noopener noreferrer"},Mp=t("td",{style:{"text-align":"center"}},null,-1),Hp={style:{"text-align":"left"}},Ip=t("code",null,"哈希表",-1),wp=t("code",null,"字符串",-1),vp=t("code",null,"动态规划",-1),qp={style:{"text-align":"left"}},zp=t("td",{style:{"text-align":"center"}},"834",-1),jp={style:{"text-align":"left"}},Cp={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},Op=t("td",{style:{"text-align":"center"}},null,-1),Lp={style:{"text-align":"left"}},Ep=t("code",null,"树",-1),Pp=t("code",null,"深度优先搜索",-1),Kp=t("code",null,"图",-1),Vp=t("code",null,"1+",-1),Np={style:{"text-align":"left"}},Dp=t("td",{style:{"text-align":"center"}},"837",-1),Bp={style:{"text-align":"left"}},Yp={href:"https://leetcode.com/problems/new-21-game",target:"_blank",rel:"noopener noreferrer"},Ap=t("td",{style:{"text-align":"center"}},null,-1),Jp={style:{"text-align":"left"}},Rp=t("code",null,"数学",-1),Sp=t("code",null,"动态规划",-1),Up=t("code",null,"滑动窗口",-1),Wp=t("code",null,"1+",-1),Xp={style:{"text-align":"left"}},Fp=t("td",{style:{"text-align":"center"}},"838",-1),Gp={style:{"text-align":"left"}},Tp={href:"https://leetcode.com/problems/push-dominoes",target:"_blank",rel:"noopener noreferrer"},Qp=t("td",{style:{"text-align":"center"}},null,-1),Zp={style:{"text-align":"left"}},$p=t("code",null,"双指针",-1),t5=t("code",null,"字符串",-1),e5=t("code",null,"动态规划",-1),l5={style:{"text-align":"left"}},o5=t("td",{style:{"text-align":"center"}},"845",-1),n5={style:{"text-align":"left"}},s5={href:"https://leetcode.com/problems/longest-mountain-in-array",target:"_blank",rel:"noopener noreferrer"},d5={style:{"text-align":"center"}},_5={style:{"text-align":"left"}},a5=t("code",null,"数组",-1),i5=t("code",null,"双指针",-1),c5=t("code",null,"动态规划",-1),r5=t("code",null,"1+",-1),h5={style:{"text-align":"left"}},f5=t("td",{style:{"text-align":"center"}},"847",-1),g5={style:{"text-align":"left"}},u5={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},m5=t("td",{style:{"text-align":"center"}},null,-1),y5={style:{"text-align":"left"}},x5=t("code",null,"位运算",-1),p5=t("code",null,"广度优先搜索",-1),b5=t("code",null,"图",-1),k5=t("code",null,"2+",-1),M5={style:{"text-align":"left"}},H5=t("td",{style:{"text-align":"center"}},"871",-1),I5={style:{"text-align":"left"}},w5={href:"https://leetcode.com/problems/minimum-number-of-refueling-stops",target:"_blank",rel:"noopener noreferrer"},v5=t("td",{style:{"text-align":"center"}},null,-1),q5={style:{"text-align":"left"}},z5=t("code",null,"贪心",-1),j5=t("code",null,"数组",-1),C5=t("code",null,"动态规划",-1),O5=t("code",null,"1+",-1),L5={style:{"text-align":"left"}},E5=t("td",{style:{"text-align":"center"}},"873",-1),P5={style:{"text-align":"left"}},K5={href:"https://leetcode.com/problems/length-of-longest-fibonacci-subsequence",target:"_blank",rel:"noopener noreferrer"},V5=t("td",{style:{"text-align":"center"}},null,-1),N5={style:{"text-align":"left"}},D5=t("code",null,"数组",-1),B5=t("code",null,"哈希表",-1),Y5=t("code",null,"动态规划",-1),A5={style:{"text-align":"left"}},J5=t("td",{style:{"text-align":"center"}},"877",-1),R5={style:{"text-align":"left"}},S5={href:"https://leetcode.com/problems/stone-game",target:"_blank",rel:"noopener noreferrer"},U5=t("td",{style:{"text-align":"center"}},null,-1),W5={style:{"text-align":"left"}},X5=t("code",null,"数组",-1),F5=t("code",null,"数学",-1),G5=t("code",null,"动态规划",-1),T5=t("code",null,"1+",-1),Q5={style:{"text-align":"left"}},Z5=t("td",{style:{"text-align":"center"}},"879",-1),$5={style:{"text-align":"left"}},t0={href:"https://leetcode.com/problems/profitable-schemes",target:"_blank",rel:"noopener noreferrer"},e0=t("td",{style:{"text-align":"center"}},null,-1),l0={style:{"text-align":"left"}},o0=t("code",null,"数组",-1),n0=t("code",null,"动态规划",-1),s0={style:{"text-align":"left"}},d0=t("td",{style:{"text-align":"center"}},"887",-1),_0={style:{"text-align":"left"}},a0={href:"https://leetcode.com/problems/super-egg-drop",target:"_blank",rel:"noopener noreferrer"},i0=t("td",{style:{"text-align":"center"}},null,-1),c0={style:{"text-align":"left"}},r0=t("code",null,"数学",-1),h0=t("code",null,"二分查找",-1),f0=t("code",null,"动态规划",-1),g0={style:{"text-align":"left"}},u0=t("td",{style:{"text-align":"center"}},"894",-1),m0={style:{"text-align":"left"}},y0={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},x0=t("td",{style:{"text-align":"center"}},null,-1),p0={style:{"text-align":"left"}},b0=t("code",null,"树",-1),k0=t("code",null,"递归",-1),M0=t("code",null,"记忆化搜索",-1),H0=t("code",null,"2+",-1),I0={style:{"text-align":"left"}},w0=t("td",{style:{"text-align":"center"}},"898",-1),v0={style:{"text-align":"left"}},q0={href:"https://leetcode.com/problems/bitwise-ors-of-subarrays",target:"_blank",rel:"noopener noreferrer"},z0=t("td",{style:{"text-align":"center"}},null,-1),j0={style:{"text-align":"left"}},C0=t("code",null,"位运算",-1),O0=t("code",null,"数组",-1),L0=t("code",null,"动态规划",-1),E0={style:{"text-align":"left"}},P0=t("td",{style:{"text-align":"center"}},"902",-1),K0={style:{"text-align":"left"}},V0={href:"https://leetcode.com/problems/numbers-at-most-n-given-digit-set",target:"_blank",rel:"noopener noreferrer"},N0=t("td",{style:{"text-align":"center"}},null,-1),D0={style:{"text-align":"left"}},B0=t("code",null,"数组",-1),Y0=t("code",null,"数学",-1),A0=t("code",null,"字符串",-1),J0=t("code",null,"2+",-1),R0={style:{"text-align":"left"}},S0=t("td",{style:{"text-align":"center"}},"903",-1),U0={style:{"text-align":"left"}},W0={href:"https://leetcode.com/problems/valid-permutations-for-di-sequence",target:"_blank",rel:"noopener noreferrer"},X0=t("td",{style:{"text-align":"center"}},null,-1),F0={style:{"text-align":"left"}},G0=t("code",null,"字符串",-1),T0=t("code",null,"动态规划",-1),Q0=t("code",null,"前缀和",-1),Z0={style:{"text-align":"left"}},$0=t("td",{style:{"text-align":"center"}},"907",-1),tb={style:{"text-align":"left"}},eb={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},lb=t("td",{style:{"text-align":"center"}},null,-1),ob={style:{"text-align":"left"}},nb=t("code",null,"栈",-1),sb=t("code",null,"数组",-1),db=t("code",null,"动态规划",-1),_b=t("code",null,"1+",-1),ab={style:{"text-align":"left"}},ib=t("td",{style:{"text-align":"center"}},"913",-1),cb={style:{"text-align":"left"}},rb={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},hb=t("td",{style:{"text-align":"center"}},null,-1),fb={style:{"text-align":"left"}},gb=t("code",null,"图",-1),ub=t("code",null,"拓扑排序",-1),mb=t("code",null,"记忆化搜索",-1),yb=t("code",null,"3+",-1),xb={style:{"text-align":"left"}},pb=t("td",{style:{"text-align":"center"}},"918",-1),bb={style:{"text-align":"left"}},kb={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},Mb={style:{"text-align":"center"}},Hb={style:{"text-align":"left"}},Ib=t("code",null,"队列",-1),wb=t("code",null,"数组",-1),vb=t("code",null,"分治",-1),qb=t("code",null,"2+",-1),zb={style:{"text-align":"left"}},jb=t("td",{style:{"text-align":"center"}},"920",-1),Cb={style:{"text-align":"left"}},Ob={href:"https://leetcode.com/problems/number-of-music-playlists",target:"_blank",rel:"noopener noreferrer"},Lb=t("td",{style:{"text-align":"center"}},null,-1),Eb={style:{"text-align":"left"}},Pb=t("code",null,"数学",-1),Kb=t("code",null,"动态规划",-1),Vb=t("code",null,"组合数学",-1),Nb={style:{"text-align":"left"}},Db=t("td",{style:{"text-align":"center"}},"926",-1),Bb={style:{"text-align":"left"}},Yb={href:"https://leetcode.com/problems/flip-string-to-monotone-increasing",target:"_blank",rel:"noopener noreferrer"},Ab=t("td",{style:{"text-align":"center"}},null,-1),Jb={style:{"text-align":"left"}},Rb=t("code",null,"字符串",-1),Sb=t("code",null,"动态规划",-1),Ub={style:{"text-align":"left"}},Wb=t("td",{style:{"text-align":"center"}},"931",-1),Xb={style:{"text-align":"left"}},Fb={href:"https://leetcode.com/problems/minimum-falling-path-sum",target:"_blank",rel:"noopener noreferrer"},Gb={style:{"text-align":"center"}},Tb={style:{"text-align":"left"}},Qb=t("code",null,"数组",-1),Zb=t("code",null,"动态规划",-1),$b=t("code",null,"矩阵",-1),t8={style:{"text-align":"left"}},e8=t("td",{style:{"text-align":"center"}},"935",-1),l8={style:{"text-align":"left"}},o8={href:"https://leetcode.com/problems/knight-dialer",target:"_blank",rel:"noopener noreferrer"},n8=t("td",{style:{"text-align":"center"}},null,-1),s8={style:{"text-align":"left"}},d8=t("code",null,"动态规划",-1),_8={style:{"text-align":"left"}},a8=t("td",{style:{"text-align":"center"}},"940",-1),i8={style:{"text-align":"left"}},c8={href:"https://leetcode.com/problems/distinct-subsequences-ii",target:"_blank",rel:"noopener noreferrer"},r8=t("td",{style:{"text-align":"center"}},null,-1),h8={style:{"text-align":"left"}},f8=t("code",null,"字符串",-1),g8=t("code",null,"动态规划",-1),u8={style:{"text-align":"left"}},m8=t("td",{style:{"text-align":"center"}},"943",-1),y8={style:{"text-align":"left"}},x8={href:"https://leetcode.com/problems/find-the-shortest-superstring",target:"_blank",rel:"noopener noreferrer"},p8=t("td",{style:{"text-align":"center"}},null,-1),b8={style:{"text-align":"left"}},k8=t("code",null,"位运算",-1),M8=t("code",null,"数组",-1),H8=t("code",null,"字符串",-1),I8=t("code",null,"2+",-1),w8={style:{"text-align":"left"}},v8=t("td",{style:{"text-align":"center"}},"956",-1),q8={style:{"text-align":"left"}},z8={href:"https://leetcode.com/problems/tallest-billboard",target:"_blank",rel:"noopener noreferrer"},j8=t("td",{style:{"text-align":"center"}},null,-1),C8={style:{"text-align":"left"}},O8=t("code",null,"数组",-1),L8=t("code",null,"动态规划",-1),E8={style:{"text-align":"left"}},P8=t("td",{style:{"text-align":"center"}},"960",-1),K8={style:{"text-align":"left"}},V8={href:"https://leetcode.com/problems/delete-columns-to-make-sorted-iii",target:"_blank",rel:"noopener noreferrer"},N8=t("td",{style:{"text-align":"center"}},null,-1),D8={style:{"text-align":"left"}},B8=t("code",null,"数组",-1),Y8=t("code",null,"字符串",-1),A8=t("code",null,"动态规划",-1),J8={style:{"text-align":"left"}},R8=t("td",{style:{"text-align":"center"}},"964",-1),S8={style:{"text-align":"left"}},U8={href:"https://leetcode.com/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},W8=t("td",{style:{"text-align":"center"}},null,-1),X8={style:{"text-align":"left"}},F8=t("code",null,"记忆化搜索",-1),G8=t("code",null,"数学",-1),T8=t("code",null,"动态规划",-1),Q8={style:{"text-align":"left"}},Z8=t("td",{style:{"text-align":"center"}},"968",-1),$8={style:{"text-align":"left"}},t6={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},e6=t("td",{style:{"text-align":"center"}},null,-1),l6={style:{"text-align":"left"}},o6=t("code",null,"树",-1),n6=t("code",null,"深度优先搜索",-1),s6=t("code",null,"动态规划",-1),d6=t("code",null,"1+",-1),_6={style:{"text-align":"left"}},a6=t("td",{style:{"text-align":"center"}},"975",-1),i6={style:{"text-align":"left"}},c6={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},r6=t("td",{style:{"text-align":"center"}},null,-1),h6={style:{"text-align":"left"}},f6=t("code",null,"栈",-1),g6=t("code",null,"数组",-1),u6=t("code",null,"动态规划",-1),m6=t("code",null,"2+",-1),y6={style:{"text-align":"left"}},x6=t("td",{style:{"text-align":"center"}},"978",-1),p6={style:{"text-align":"left"}},b6={href:"https://leetcode.com/problems/longest-turbulent-subarray",target:"_blank",rel:"noopener noreferrer"},k6=t("td",{style:{"text-align":"center"}},null,-1),M6={style:{"text-align":"left"}},H6=t("code",null,"数组",-1),I6=t("code",null,"动态规划",-1),w6=t("code",null,"滑动窗口",-1),v6={style:{"text-align":"left"}},q6=t("td",{style:{"text-align":"center"}},"983",-1),z6={style:{"text-align":"left"}},j6={href:"https://leetcode.com/problems/minimum-cost-for-tickets",target:"_blank",rel:"noopener noreferrer"},C6=t("td",{style:{"text-align":"center"}},null,-1),O6={style:{"text-align":"left"}},L6=t("code",null,"数组",-1),E6=t("code",null,"动态规划",-1),P6={style:{"text-align":"left"}},K6=t("td",{style:{"text-align":"center"}},"996",-1),V6={style:{"text-align":"left"}},N6={href:"https://leetcode.com/problems/number-of-squareful-arrays",target:"_blank",rel:"noopener noreferrer"},D6=t("td",{style:{"text-align":"center"}},null,-1),B6={style:{"text-align":"left"}},Y6=t("code",null,"位运算",-1),A6=t("code",null,"数组",-1),J6=t("code",null,"哈希表",-1),R6=t("code",null,"4+",-1),S6={style:{"text-align":"left"}},U6=t("td",{style:{"text-align":"center"}},"1000",-1),W6={style:{"text-align":"left"}},X6={href:"https://leetcode.com/problems/minimum-cost-to-merge-stones",target:"_blank",rel:"noopener noreferrer"},F6=t("td",{style:{"text-align":"center"}},null,-1),G6={style:{"text-align":"left"}},T6=t("code",null,"数组",-1),Q6=t("code",null,"动态规划",-1),Z6=t("code",null,"前缀和",-1),$6={style:{"text-align":"left"}},t7=t("td",{style:{"text-align":"center"}},"1012",-1),e7={style:{"text-align":"left"}},l7={href:"https://leetcode.com/problems/numbers-with-repeated-digits",target:"_blank",rel:"noopener noreferrer"},o7=t("td",{style:{"text-align":"center"}},null,-1),n7={style:{"text-align":"left"}},s7=t("code",null,"数学",-1),d7=t("code",null,"动态规划",-1),_7={style:{"text-align":"left"}},a7=t("td",{style:{"text-align":"center"}},"1014",-1),i7={style:{"text-align":"left"}},c7={href:"https://leetcode.com/problems/best-sightseeing-pair",target:"_blank",rel:"noopener noreferrer"},r7=t("td",{style:{"text-align":"center"}},null,-1),h7={style:{"text-align":"left"}},f7=t("code",null,"数组",-1),g7=t("code",null,"动态规划",-1),u7={style:{"text-align":"left"}},m7=t("td",{style:{"text-align":"center"}},"1024",-1),y7={style:{"text-align":"left"}},x7={href:"https://leetcode.com/problems/video-stitching",target:"_blank",rel:"noopener noreferrer"},p7=t("td",{style:{"text-align":"center"}},null,-1),b7={style:{"text-align":"left"}},k7=t("code",null,"贪心",-1),M7=t("code",null,"数组",-1),H7=t("code",null,"动态规划",-1),I7={style:{"text-align":"left"}},w7=t("td",{style:{"text-align":"center"}},"1025",-1),v7={style:{"text-align":"left"}},q7={href:"https://leetcode.com/problems/divisor-game",target:"_blank",rel:"noopener noreferrer"},z7=t("td",{style:{"text-align":"center"}},null,-1),j7={style:{"text-align":"left"}},C7=t("code",null,"脑筋急转弯",-1),O7=t("code",null,"数学",-1),L7=t("code",null,"动态规划",-1),E7=t("code",null,"1+",-1),P7={style:{"text-align":"left"}},K7=t("td",{style:{"text-align":"center"}},"1027",-1),V7={style:{"text-align":"left"}},N7={href:"https://leetcode.com/problems/longest-arithmetic-subsequence",target:"_blank",rel:"noopener noreferrer"},D7=t("td",{style:{"text-align":"center"}},null,-1),B7={style:{"text-align":"left"}},Y7=t("code",null,"数组",-1),A7=t("code",null,"哈希表",-1),J7=t("code",null,"二分查找",-1),R7=t("code",null,"1+",-1),S7={style:{"text-align":"left"}},U7=t("td",{style:{"text-align":"center"}},"1031",-1),W7={style:{"text-align":"left"}},X7={href:"https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},F7=t("td",{style:{"text-align":"center"}},null,-1),G7={style:{"text-align":"left"}},T7=t("code",null,"数组",-1),Q7=t("code",null,"动态规划",-1),Z7=t("code",null,"滑动窗口",-1),$7={style:{"text-align":"left"}},t9=t("td",{style:{"text-align":"center"}},"1035",-1),e9={style:{"text-align":"left"}},l9={href:"https://leetcode.com/problems/uncrossed-lines",target:"_blank",rel:"noopener noreferrer"},o9=t("td",{style:{"text-align":"center"}},null,-1),n9={style:{"text-align":"left"}},s9=t("code",null,"数组",-1),d9=t("code",null,"动态规划",-1),_9={style:{"text-align":"left"}},a9=t("td",{style:{"text-align":"center"}},"1039",-1),i9={style:{"text-align":"left"}},c9={href:"https://leetcode.com/problems/minimum-score-triangulation-of-polygon",target:"_blank",rel:"noopener noreferrer"},r9=t("td",{style:{"text-align":"center"}},null,-1),h9={style:{"text-align":"left"}},f9=t("code",null,"数组",-1),g9=t("code",null,"动态规划",-1),u9={style:{"text-align":"left"}},m9=t("td",{style:{"text-align":"center"}},"1043",-1),y9={style:{"text-align":"left"}},x9={href:"https://leetcode.com/problems/partition-array-for-maximum-sum",target:"_blank",rel:"noopener noreferrer"},p9=t("td",{style:{"text-align":"center"}},null,-1),b9={style:{"text-align":"left"}},k9=t("code",null,"数组",-1),M9=t("code",null,"动态规划",-1),H9={style:{"text-align":"left"}},I9=t("td",{style:{"text-align":"center"}},"1048",-1),w9={style:{"text-align":"left"}},v9={href:"https://leetcode.com/problems/longest-string-chain",target:"_blank",rel:"noopener noreferrer"},q9=t("td",{style:{"text-align":"center"}},null,-1),z9={style:{"text-align":"left"}},j9=t("code",null,"数组",-1),C9=t("code",null,"哈希表",-1),O9=t("code",null,"双指针",-1),L9=t("code",null,"3+",-1),E9={style:{"text-align":"left"}},P9=t("td",{style:{"text-align":"center"}},"1049",-1),K9={style:{"text-align":"left"}},V9={href:"https://leetcode.com/problems/last-stone-weight-ii",target:"_blank",rel:"noopener noreferrer"},N9={style:{"text-align":"center"}},D9={style:{"text-align":"left"}},B9=t("code",null,"数组",-1),Y9=t("code",null,"动态规划",-1),A9={style:{"text-align":"left"}},J9=t("td",{style:{"text-align":"center"}},"1062",-1),R9={style:{"text-align":"left"}},S9={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},U9=t("td",{style:{"text-align":"center"}},null,-1),W9={style:{"text-align":"left"}},X9=t("code",null,"字符串",-1),F9=t("code",null,"二分查找",-1),G9=t("code",null,"动态规划",-1),T9=t("code",null,"3+",-1),Q9={style:{"text-align":"left"}},Z9=t("td",{style:{"text-align":"center"}},"1066",-1),$9={style:{"text-align":"left"}},tk={href:"https://leetcode.com/problems/campus-bikes-ii",target:"_blank",rel:"noopener noreferrer"},ek=t("td",{style:{"text-align":"center"}},null,-1),lk={style:{"text-align":"left"}},ok=t("code",null,"位运算",-1),nk=t("code",null,"数组",-1),sk=t("code",null,"动态规划",-1),dk=t("code",null,"2+",-1),_k={style:{"text-align":"left"}},ak=t("td",{style:{"text-align":"center"}},"1067",-1),ik={style:{"text-align":"left"}},ck={href:"https://leetcode.com/problems/digit-count-in-range",target:"_blank",rel:"noopener noreferrer"},rk=t("td",{style:{"text-align":"center"}},null,-1),hk={style:{"text-align":"left"}},fk=t("code",null,"数学",-1),gk=t("code",null,"动态规划",-1),uk={style:{"text-align":"left"}},mk=t("td",{style:{"text-align":"center"}},"1092",-1),yk={style:{"text-align":"left"}},xk={href:"https://leetcode.com/problems/shortest-common-supersequence",target:"_blank",rel:"noopener noreferrer"},pk=t("td",{style:{"text-align":"center"}},null,-1),bk={style:{"text-align":"left"}},kk=t("code",null,"字符串",-1),Mk=t("code",null,"动态规划",-1),Hk={style:{"text-align":"left"}},Ik=t("td",{style:{"text-align":"center"}},"1105",-1),wk={style:{"text-align":"left"}},vk={href:"https://leetcode.com/problems/filling-bookcase-shelves",target:"_blank",rel:"noopener noreferrer"},qk=t("td",{style:{"text-align":"center"}},null,-1),zk={style:{"text-align":"left"}},jk=t("code",null,"数组",-1),Ck=t("code",null,"动态规划",-1),Ok={style:{"text-align":"left"}},Lk=t("td",{style:{"text-align":"center"}},"1125",-1),Ek={style:{"text-align":"left"}},Pk={href:"https://leetcode.com/problems/smallest-sufficient-team",target:"_blank",rel:"noopener noreferrer"},Kk=t("td",{style:{"text-align":"center"}},null,-1),Vk={style:{"text-align":"left"}},Nk=t("code",null,"位运算",-1),Dk=t("code",null,"数组",-1),Bk=t("code",null,"动态规划",-1),Yk=t("code",null,"1+",-1),Ak={style:{"text-align":"left"}},Jk=t("td",{style:{"text-align":"center"}},"1130",-1),Rk={style:{"text-align":"left"}},Sk={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},Uk=t("td",{style:{"text-align":"center"}},null,-1),Wk={style:{"text-align":"left"}},Xk=t("code",null,"栈",-1),Fk=t("code",null,"贪心",-1),Gk=t("code",null,"数组",-1),Tk=t("code",null,"2+",-1),Qk={style:{"text-align":"left"}},Zk=t("td",{style:{"text-align":"center"}},"1137",-1),$k={style:{"text-align":"left"}},tM={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},eM={style:{"text-align":"center"}},lM={style:{"text-align":"left"}},oM=t("code",null,"记忆化搜索",-1),nM=t("code",null,"数学",-1),sM=t("code",null,"动态规划",-1),dM={style:{"text-align":"left"}},_M=t("td",{style:{"text-align":"center"}},"1139",-1),aM={style:{"text-align":"left"}},iM={href:"https://leetcode.com/problems/largest-1-bordered-square",target:"_blank",rel:"noopener noreferrer"},cM=t("td",{style:{"text-align":"center"}},null,-1),rM={style:{"text-align":"left"}},hM=t("code",null,"数组",-1),fM=t("code",null,"动态规划",-1),gM=t("code",null,"矩阵",-1),uM={style:{"text-align":"left"}},mM=t("td",{style:{"text-align":"center"}},"1140",-1),yM={style:{"text-align":"left"}},xM={href:"https://leetcode.com/problems/stone-game-ii",target:"_blank",rel:"noopener noreferrer"},pM=t("td",{style:{"text-align":"center"}},null,-1),bM={style:{"text-align":"left"}},kM=t("code",null,"数组",-1),MM=t("code",null,"数学",-1),HM=t("code",null,"动态规划",-1),IM=t("code",null,"2+",-1),wM={style:{"text-align":"left"}},vM=t("td",{style:{"text-align":"center"}},"1143",-1),qM={style:{"text-align":"left"}},zM={href:"https://leetcode.com/problems/longest-common-subsequence",target:"_blank",rel:"noopener noreferrer"},jM={style:{"text-align":"center"}},CM={style:{"text-align":"left"}},OM=t("code",null,"字符串",-1),LM=t("code",null,"动态规划",-1),EM={style:{"text-align":"left"}},PM=t("td",{style:{"text-align":"center"}},"1147",-1),KM={style:{"text-align":"left"}},VM={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},NM=t("td",{style:{"text-align":"center"}},null,-1),DM={style:{"text-align":"left"}},BM=t("code",null,"贪心",-1),YM=t("code",null,"双指针",-1),AM=t("code",null,"字符串",-1),JM=t("code",null,"3+",-1),RM={style:{"text-align":"left"}},SM=t("td",{style:{"text-align":"center"}},"1155",-1),UM={style:{"text-align":"left"}},WM={href:"https://leetcode.com/problems/number-of-dice-rolls-with-target-sum",target:"_blank",rel:"noopener noreferrer"},XM=t("td",{style:{"text-align":"center"}},null,-1),FM={style:{"text-align":"left"}},GM=t("code",null,"动态规划",-1),TM={style:{"text-align":"left"}},QM=t("td",{style:{"text-align":"center"}},"1162",-1),ZM={style:{"text-align":"left"}},$M={href:"https://leetcode.com/problems/as-far-from-land-as-possible",target:"_blank",rel:"noopener noreferrer"},tH=t("td",{style:{"text-align":"center"}},null,-1),eH={style:{"text-align":"left"}},lH=t("code",null,"广度优先搜索",-1),oH=t("code",null,"数组",-1),nH=t("code",null,"动态规划",-1),sH=t("code",null,"1+",-1),dH={style:{"text-align":"left"}},_H=t("td",{style:{"text-align":"center"}},"1182",-1),aH={style:{"text-align":"left"}},iH={href:"https://leetcode.com/problems/shortest-distance-to-target-color",target:"_blank",rel:"noopener noreferrer"},cH=t("td",{style:{"text-align":"center"}},null,-1),rH={style:{"text-align":"left"}},hH=t("code",null,"数组",-1),fH=t("code",null,"二分查找",-1),gH=t("code",null,"动态规划",-1),uH={style:{"text-align":"left"}},mH=t("td",{style:{"text-align":"center"}},"1186",-1),yH={style:{"text-align":"left"}},xH={href:"https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion",target:"_blank",rel:"noopener noreferrer"},pH=t("td",{style:{"text-align":"center"}},null,-1),bH={style:{"text-align":"left"}},kH=t("code",null,"数组",-1),MH=t("code",null,"动态规划",-1),HH={style:{"text-align":"left"}},IH=t("td",{style:{"text-align":"center"}},"1187",-1),wH={style:{"text-align":"left"}},vH={href:"https://leetcode.com/problems/make-array-strictly-increasing",target:"_blank",rel:"noopener noreferrer"},qH=t("td",{style:{"text-align":"center"}},null,-1),zH={style:{"text-align":"left"}},jH=t("code",null,"数组",-1),CH=t("code",null,"二分查找",-1),OH=t("code",null,"动态规划",-1),LH=t("code",null,"1+",-1),EH={style:{"text-align":"left"}},PH=t("td",{style:{"text-align":"center"}},"1191",-1),KH={style:{"text-align":"left"}},VH={href:"https://leetcode.com/problems/k-concatenation-maximum-sum",target:"_blank",rel:"noopener noreferrer"},NH=t("td",{style:{"text-align":"center"}},null,-1),DH={style:{"text-align":"left"}},BH=t("code",null,"数组",-1),YH=t("code",null,"动态规划",-1),AH={style:{"text-align":"left"}},JH=t("td",{style:{"text-align":"center"}},"1216",-1),RH={style:{"text-align":"left"}},SH={href:"https://leetcode.com/problems/valid-palindrome-iii",target:"_blank",rel:"noopener noreferrer"},UH=t("td",{style:{"text-align":"center"}},null,-1),WH={style:{"text-align":"left"}},XH=t("code",null,"字符串",-1),FH=t("code",null,"动态规划",-1),GH={style:{"text-align":"left"}},TH=t("td",{style:{"text-align":"center"}},"1218",-1),QH={style:{"text-align":"left"}},ZH={href:"https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference",target:"_blank",rel:"noopener noreferrer"},$H=t("td",{style:{"text-align":"center"}},null,-1),tI={style:{"text-align":"left"}},eI=t("code",null,"数组",-1),lI=t("code",null,"哈希表",-1),oI=t("code",null,"动态规划",-1),nI={style:{"text-align":"left"}},sI=t("td",{style:{"text-align":"center"}},"1220",-1),dI={style:{"text-align":"left"}},_I={href:"https://leetcode.com/problems/count-vowels-permutation",target:"_blank",rel:"noopener noreferrer"},aI=t("td",{style:{"text-align":"center"}},null,-1),iI={style:{"text-align":"left"}},cI=t("code",null,"动态规划",-1),rI={style:{"text-align":"left"}},hI=t("td",{style:{"text-align":"center"}},"1223",-1),fI={style:{"text-align":"left"}},gI={href:"https://leetcode.com/problems/dice-roll-simulation",target:"_blank",rel:"noopener noreferrer"},uI=t("td",{style:{"text-align":"center"}},null,-1),mI={style:{"text-align":"left"}},yI=t("code",null,"数组",-1),xI=t("code",null,"动态规划",-1),pI={style:{"text-align":"left"}},bI=t("td",{style:{"text-align":"center"}},"1227",-1),kI={style:{"text-align":"left"}},MI={href:"https://leetcode.com/problems/airplane-seat-assignment-probability",target:"_blank",rel:"noopener noreferrer"},HI=t("td",{style:{"text-align":"center"}},null,-1),II={style:{"text-align":"left"}},wI=t("code",null,"脑筋急转弯",-1),vI=t("code",null,"数学",-1),qI=t("code",null,"动态规划",-1),zI=t("code",null,"1+",-1),jI={style:{"text-align":"left"}},CI=t("td",{style:{"text-align":"center"}},"1230",-1),OI={style:{"text-align":"left"}},LI={href:"https://leetcode.com/problems/toss-strange-coins",target:"_blank",rel:"noopener noreferrer"},EI=t("td",{style:{"text-align":"center"}},null,-1),PI={style:{"text-align":"left"}},KI=t("code",null,"数组",-1),VI=t("code",null,"数学",-1),NI=t("code",null,"动态规划",-1),DI=t("code",null,"1+",-1),BI={style:{"text-align":"left"}},YI=t("td",{style:{"text-align":"center"}},"1235",-1),AI={style:{"text-align":"left"}},JI={href:"https://leetcode.com/problems/maximum-profit-in-job-scheduling",target:"_blank",rel:"noopener noreferrer"},RI=t("td",{style:{"text-align":"center"}},null,-1),SI={style:{"text-align":"left"}},UI=t("code",null,"数组",-1),WI=t("code",null,"二分查找",-1),XI=t("code",null,"动态规划",-1),FI=t("code",null,"1+",-1),GI={style:{"text-align":"left"}},TI=t("td",{style:{"text-align":"center"}},"1246",-1),QI={style:{"text-align":"left"}},ZI={href:"https://leetcode.com/problems/palindrome-removal",target:"_blank",rel:"noopener noreferrer"},$I=t("td",{style:{"text-align":"center"}},null,-1),tw={style:{"text-align":"left"}},ew=t("code",null,"数组",-1),lw=t("code",null,"动态规划",-1),ow={style:{"text-align":"left"}},nw=t("td",{style:{"text-align":"center"}},"1255",-1),sw={style:{"text-align":"left"}},dw={href:"https://leetcode.com/problems/maximum-score-words-formed-by-letters",target:"_blank",rel:"noopener noreferrer"},_w=t("td",{style:{"text-align":"center"}},null,-1),aw={style:{"text-align":"left"}},iw=t("code",null,"位运算",-1),cw=t("code",null,"数组",-1),rw=t("code",null,"字符串",-1),hw=t("code",null,"3+",-1),fw={style:{"text-align":"left"}},gw=t("td",{style:{"text-align":"center"}},"1259",-1),uw={style:{"text-align":"left"}},mw={href:"https://leetcode.com/problems/handshakes-that-dont-cross",target:"_blank",rel:"noopener noreferrer"},yw=t("td",{style:{"text-align":"center"}},null,-1),xw={style:{"text-align":"left"}},pw=t("code",null,"数学",-1),bw=t("code",null,"动态规划",-1),kw={style:{"text-align":"left"}},Mw=t("td",{style:{"text-align":"center"}},"1262",-1),Hw={style:{"text-align":"left"}},Iw={href:"https://leetcode.com/problems/greatest-sum-divisible-by-three",target:"_blank",rel:"noopener noreferrer"},ww=t("td",{style:{"text-align":"center"}},null,-1),vw={style:{"text-align":"left"}},qw=t("code",null,"贪心",-1),zw=t("code",null,"数组",-1),jw=t("code",null,"动态规划",-1),Cw=t("code",null,"1+",-1),Ow={style:{"text-align":"left"}},Lw=t("td",{style:{"text-align":"center"}},"1269",-1),Ew={style:{"text-align":"left"}},Pw={href:"https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps",target:"_blank",rel:"noopener noreferrer"},Kw=t("td",{style:{"text-align":"center"}},null,-1),Vw={style:{"text-align":"left"}},Nw=t("code",null,"动态规划",-1),Dw={style:{"text-align":"left"}},Bw=t("td",{style:{"text-align":"center"}},"1277",-1),Yw={style:{"text-align":"left"}},Aw={href:"https://leetcode.com/problems/count-square-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Jw={style:{"text-align":"center"}},Rw={style:{"text-align":"left"}},Sw=t("code",null,"数组",-1),Uw=t("code",null,"动态规划",-1),Ww=t("code",null,"矩阵",-1),Xw={style:{"text-align":"left"}},Fw=t("td",{style:{"text-align":"center"}},"1278",-1),Gw={style:{"text-align":"left"}},Tw={href:"https://leetcode.com/problems/palindrome-partitioning-iii",target:"_blank",rel:"noopener noreferrer"},Qw=t("td",{style:{"text-align":"center"}},null,-1),Zw={style:{"text-align":"left"}},$w=t("code",null,"字符串",-1),tv=t("code",null,"动态规划",-1),ev={style:{"text-align":"left"}},lv=t("td",{style:{"text-align":"center"}},"1289",-1),ov={style:{"text-align":"left"}},nv={href:"https://leetcode.com/problems/minimum-falling-path-sum-ii",target:"_blank",rel:"noopener noreferrer"},sv=t("td",{style:{"text-align":"center"}},null,-1),dv={style:{"text-align":"left"}},_v=t("code",null,"数组",-1),av=t("code",null,"动态规划",-1),iv=t("code",null,"矩阵",-1),cv={style:{"text-align":"left"}},rv=t("td",{style:{"text-align":"center"}},"1301",-1),hv={style:{"text-align":"left"}},fv={href:"https://leetcode.com/problems/number-of-paths-with-max-score",target:"_blank",rel:"noopener noreferrer"},gv=t("td",{style:{"text-align":"center"}},null,-1),uv={style:{"text-align":"left"}},mv=t("code",null,"数组",-1),yv=t("code",null,"动态规划",-1),xv=t("code",null,"矩阵",-1),pv={style:{"text-align":"left"}},bv=t("td",{style:{"text-align":"center"}},"1312",-1),kv={style:{"text-align":"left"}},Mv={href:"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome",target:"_blank",rel:"noopener noreferrer"},Hv={style:{"text-align":"center"}},Iv={style:{"text-align":"left"}},wv=t("code",null,"字符串",-1),vv=t("code",null,"动态规划",-1),qv={style:{"text-align":"left"}},zv=t("td",{style:{"text-align":"center"}},"1320",-1),jv={style:{"text-align":"left"}},Cv={href:"https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers",target:"_blank",rel:"noopener noreferrer"},Ov=t("td",{style:{"text-align":"center"}},null,-1),Lv={style:{"text-align":"left"}},Ev=t("code",null,"字符串",-1),Pv=t("code",null,"动态规划",-1),Kv={style:{"text-align":"left"}},Vv=t("td",{style:{"text-align":"center"}},"1326",-1),Nv={style:{"text-align":"left"}},Dv={href:"https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden",target:"_blank",rel:"noopener noreferrer"},Bv=t("td",{style:{"text-align":"center"}},null,-1),Yv={style:{"text-align":"left"}},Av=t("code",null,"贪心",-1),Jv=t("code",null,"数组",-1),Rv=t("code",null,"动态规划",-1),Sv={style:{"text-align":"left"}},Uv=t("td",{style:{"text-align":"center"}},"1334",-1),Wv={style:{"text-align":"left"}},Xv={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},Fv=t("td",{style:{"text-align":"center"}},null,-1),Gv={style:{"text-align":"left"}},Tv=t("code",null,"图",-1),Qv=t("code",null,"动态规划",-1),Zv=t("code",null,"最短路",-1),$v={style:{"text-align":"left"}},tq=t("td",{style:{"text-align":"center"}},"1335",-1),eq={style:{"text-align":"left"}},lq={href:"https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule",target:"_blank",rel:"noopener noreferrer"},oq=t("td",{style:{"text-align":"center"}},null,-1),nq={style:{"text-align":"left"}},sq=t("code",null,"数组",-1),dq=t("code",null,"动态规划",-1),_q={style:{"text-align":"left"}},aq=t("td",{style:{"text-align":"center"}},"1340",-1),iq={style:{"text-align":"left"}},cq={href:"https://leetcode.com/problems/jump-game-v",target:"_blank",rel:"noopener noreferrer"},rq=t("td",{style:{"text-align":"center"}},null,-1),hq={style:{"text-align":"left"}},fq=t("code",null,"数组",-1),gq=t("code",null,"动态规划",-1),uq=t("code",null,"排序",-1),mq={style:{"text-align":"left"}},yq=t("td",{style:{"text-align":"center"}},"1349",-1),xq={style:{"text-align":"left"}},pq={href:"https://leetcode.com/problems/maximum-students-taking-exam",target:"_blank",rel:"noopener noreferrer"},bq=t("td",{style:{"text-align":"center"}},null,-1),kq={style:{"text-align":"left"}},Mq=t("code",null,"位运算",-1),Hq=t("code",null,"数组",-1),Iq=t("code",null,"动态规划",-1),wq=t("code",null,"2+",-1),vq={style:{"text-align":"left"}},qq=t("td",{style:{"text-align":"center"}},"1359",-1),zq={style:{"text-align":"left"}},jq={href:"https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options",target:"_blank",rel:"noopener noreferrer"},Cq=t("td",{style:{"text-align":"center"}},null,-1),Oq={style:{"text-align":"left"}},Lq=t("code",null,"数学",-1),Eq=t("code",null,"动态规划",-1),Pq=t("code",null,"组合数学",-1),Kq={style:{"text-align":"left"}},Vq=t("td",{style:{"text-align":"center"}},"1363",-1),Nq={style:{"text-align":"left"}},Dq={href:"https://leetcode.com/problems/largest-multiple-of-three",target:"_blank",rel:"noopener noreferrer"},Bq=t("td",{style:{"text-align":"center"}},null,-1),Yq={style:{"text-align":"left"}},Aq=t("code",null,"贪心",-1),Jq=t("code",null,"数组",-1),Rq=t("code",null,"动态规划",-1),Sq={style:{"text-align":"left"}},Uq=t("td",{style:{"text-align":"center"}},"1372",-1),Wq={style:{"text-align":"left"}},Xq={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Fq=t("td",{style:{"text-align":"center"}},null,-1),Gq={style:{"text-align":"left"}},Tq=t("code",null,"树",-1),Qq=t("code",null,"深度优先搜索",-1),Zq=t("code",null,"动态规划",-1),$q=t("code",null,"1+",-1),tz={style:{"text-align":"left"}},ez=t("td",{style:{"text-align":"center"}},"1373",-1),lz={style:{"text-align":"left"}},oz={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},nz=t("td",{style:{"text-align":"center"}},null,-1),sz={style:{"text-align":"left"}},dz=t("code",null,"树",-1),_z=t("code",null,"深度优先搜索",-1),az=t("code",null,"二叉搜索树",-1),iz=t("code",null,"2+",-1),cz={style:{"text-align":"left"}},rz=t("td",{style:{"text-align":"center"}},"1387",-1),hz={style:{"text-align":"left"}},fz={href:"https://leetcode.com/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},gz=t("td",{style:{"text-align":"center"}},null,-1),uz={style:{"text-align":"left"}},mz=t("code",null,"记忆化搜索",-1),yz=t("code",null,"动态规划",-1),xz=t("code",null,"排序",-1),pz={style:{"text-align":"left"}},bz=t("td",{style:{"text-align":"center"}},"1388",-1),kz={style:{"text-align":"left"}},Mz={href:"https://leetcode.com/problems/pizza-with-3n-slices",target:"_blank",rel:"noopener noreferrer"},Hz=t("td",{style:{"text-align":"center"}},null,-1),Iz={style:{"text-align":"left"}},wz=t("code",null,"贪心",-1),vz=t("code",null,"数组",-1),qz=t("code",null,"动态规划",-1),zz=t("code",null,"1+",-1),jz={style:{"text-align":"left"}},Cz=t("td",{style:{"text-align":"center"}},"1395",-1),Oz={style:{"text-align":"left"}},Lz={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},Ez=t("td",{style:{"text-align":"center"}},null,-1),Pz={style:{"text-align":"left"}},Kz=t("code",null,"树状数组",-1),Vz=t("code",null,"线段树",-1),Nz=t("code",null,"数组",-1),Dz=t("code",null,"1+",-1),Bz={style:{"text-align":"left"}},Yz=t("td",{style:{"text-align":"center"}},"1397",-1),Az={style:{"text-align":"left"}},Jz={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},Rz=t("td",{style:{"text-align":"center"}},null,-1),Sz={style:{"text-align":"left"}},Uz=t("code",null,"字符串",-1),Wz=t("code",null,"动态规划",-1),Xz=t("code",null,"字符串匹配",-1),Fz={style:{"text-align":"left"}},Gz=t("td",{style:{"text-align":"center"}},"1402",-1),Tz={style:{"text-align":"left"}},Qz={href:"https://leetcode.com/problems/reducing-dishes",target:"_blank",rel:"noopener noreferrer"},Zz=t("td",{style:{"text-align":"center"}},null,-1),$z={style:{"text-align":"left"}},tj=t("code",null,"贪心",-1),ej=t("code",null,"数组",-1),lj=t("code",null,"动态规划",-1),oj=t("code",null,"1+",-1),nj={style:{"text-align":"left"}},sj=t("td",{style:{"text-align":"center"}},"1406",-1),dj={style:{"text-align":"left"}},_j={href:"https://leetcode.com/problems/stone-game-iii",target:"_blank",rel:"noopener noreferrer"},aj=t("td",{style:{"text-align":"center"}},null,-1),ij={style:{"text-align":"left"}},cj=t("code",null,"数组",-1),rj=t("code",null,"数学",-1),hj=t("code",null,"动态规划",-1),fj=t("code",null,"1+",-1),gj={style:{"text-align":"left"}},uj=t("td",{style:{"text-align":"center"}},"1411",-1),mj={style:{"text-align":"left"}},yj={href:"https://leetcode.com/problems/number-of-ways-to-paint-n-3-grid",target:"_blank",rel:"noopener noreferrer"},xj=t("td",{style:{"text-align":"center"}},null,-1),pj={style:{"text-align":"left"}},bj=t("code",null,"动态规划",-1),kj={style:{"text-align":"left"}},Mj=t("td",{style:{"text-align":"center"}},"1416",-1),Hj={style:{"text-align":"left"}},Ij={href:"https://leetcode.com/problems/restore-the-array",target:"_blank",rel:"noopener noreferrer"},wj=t("td",{style:{"text-align":"center"}},null,-1),vj={style:{"text-align":"left"}},qj=t("code",null,"字符串",-1),zj=t("code",null,"动态规划",-1),jj={style:{"text-align":"left"}},Cj=t("td",{style:{"text-align":"center"}},"1420",-1),Oj={style:{"text-align":"left"}},Lj={href:"https://leetcode.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons",target:"_blank",rel:"noopener noreferrer"},Ej=t("td",{style:{"text-align":"center"}},null,-1),Pj={style:{"text-align":"left"}},Kj=t("code",null,"动态规划",-1),Vj=t("code",null,"前缀和",-1),Nj={style:{"text-align":"left"}},Dj=t("td",{style:{"text-align":"center"}},"1425",-1),Bj={style:{"text-align":"left"}},Yj={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},Aj=t("td",{style:{"text-align":"center"}},null,-1),Jj={style:{"text-align":"left"}},Rj=t("code",null,"队列",-1),Sj=t("code",null,"数组",-1),Uj=t("code",null,"动态规划",-1),Wj=t("code",null,"3+",-1),Xj={style:{"text-align":"left"}},Fj=t("td",{style:{"text-align":"center"}},"1434",-1),Gj={style:{"text-align":"left"}},Tj={href:"https://leetcode.com/problems/number-of-ways-to-wear-different-hats-to-each-other",target:"_blank",rel:"noopener noreferrer"},Qj=t("td",{style:{"text-align":"center"}},null,-1),Zj={style:{"text-align":"left"}},$j=t("code",null,"位运算",-1),tC=t("code",null,"数组",-1),eC=t("code",null,"动态规划",-1),lC=t("code",null,"1+",-1),oC={style:{"text-align":"left"}},nC=t("td",{style:{"text-align":"center"}},"1444",-1),sC={style:{"text-align":"left"}},dC={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},_C=t("td",{style:{"text-align":"center"}},null,-1),aC={style:{"text-align":"left"}},iC=t("code",null,"记忆化搜索",-1),cC=t("code",null,"数组",-1),rC=t("code",null,"动态规划",-1),hC=t("code",null,"1+",-1),fC={style:{"text-align":"left"}},gC=t("td",{style:{"text-align":"center"}},"1449",-1),uC={style:{"text-align":"left"}},mC={href:"https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target",target:"_blank",rel:"noopener noreferrer"},yC=t("td",{style:{"text-align":"center"}},null,-1),xC={style:{"text-align":"left"}},pC=t("code",null,"数组",-1),bC=t("code",null,"动态规划",-1),kC={style:{"text-align":"left"}},MC=t("td",{style:{"text-align":"center"}},"1458",-1),HC={style:{"text-align":"left"}},IC={href:"https://leetcode.com/problems/max-dot-product-of-two-subsequences",target:"_blank",rel:"noopener noreferrer"},wC=t("td",{style:{"text-align":"center"}},null,-1),vC={style:{"text-align":"left"}},qC=t("code",null,"数组",-1),zC=t("code",null,"动态规划",-1),jC={style:{"text-align":"left"}},CC=t("td",{style:{"text-align":"center"}},"1463",-1),OC={style:{"text-align":"left"}},LC={href:"https://leetcode.com/problems/cherry-pickup-ii",target:"_blank",rel:"noopener noreferrer"},EC=t("td",{style:{"text-align":"center"}},null,-1),PC={style:{"text-align":"left"}},KC=t("code",null,"数组",-1),VC=t("code",null,"动态规划",-1),NC=t("code",null,"矩阵",-1),DC={style:{"text-align":"left"}},BC=t("td",{style:{"text-align":"center"}},"1467",-1),YC={style:{"text-align":"left"}},AC={href:"https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",target:"_blank",rel:"noopener noreferrer"},JC=t("td",{style:{"text-align":"center"}},null,-1),RC={style:{"text-align":"left"}},SC=t("code",null,"数组",-1),UC=t("code",null,"数学",-1),WC=t("code",null,"动态规划",-1),XC=t("code",null,"3+",-1),FC={style:{"text-align":"left"}},GC=t("td",{style:{"text-align":"center"}},"1473",-1),TC={style:{"text-align":"left"}},QC={href:"https://leetcode.com/problems/paint-house-iii",target:"_blank",rel:"noopener noreferrer"},ZC=t("td",{style:{"text-align":"center"}},null,-1),$C={style:{"text-align":"left"}},tO=t("code",null,"数组",-1),eO=t("code",null,"动态规划",-1),lO={style:{"text-align":"left"}},oO=t("td",{style:{"text-align":"center"}},"1477",-1),nO={style:{"text-align":"left"}},sO={href:"https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum",target:"_blank",rel:"noopener noreferrer"},dO=t("td",{style:{"text-align":"center"}},null,-1),_O={style:{"text-align":"left"}},aO=t("code",null,"数组",-1),iO=t("code",null,"哈希表",-1),cO=t("code",null,"二分查找",-1),rO=t("code",null,"2+",-1),hO={style:{"text-align":"left"}},fO=t("td",{style:{"text-align":"center"}},"1478",-1),gO={style:{"text-align":"left"}},uO={href:"https://leetcode.com/problems/allocate-mailboxes",target:"_blank",rel:"noopener noreferrer"},mO=t("td",{style:{"text-align":"center"}},null,-1),yO={style:{"text-align":"left"}},xO=t("code",null,"数组",-1),pO=t("code",null,"数学",-1),bO=t("code",null,"动态规划",-1),kO=t("code",null,"1+",-1),MO={style:{"text-align":"left"}},HO=t("td",{style:{"text-align":"center"}},"1483",-1),IO={style:{"text-align":"left"}},wO={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},vO=t("td",{style:{"text-align":"center"}},null,-1),qO={style:{"text-align":"left"}},zO=t("code",null,"树",-1),jO=t("code",null,"深度优先搜索",-1),CO=t("code",null,"广度优先搜索",-1),OO=t("code",null,"3+",-1),LO={style:{"text-align":"left"}},EO=t("td",{style:{"text-align":"center"}},"1493",-1),PO={style:{"text-align":"left"}},KO={href:"https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element",target:"_blank",rel:"noopener noreferrer"},VO=t("td",{style:{"text-align":"center"}},null,-1),NO={style:{"text-align":"left"}},DO=t("code",null,"数组",-1),BO=t("code",null,"动态规划",-1),YO=t("code",null,"滑动窗口",-1),AO={style:{"text-align":"left"}},JO=t("td",{style:{"text-align":"center"}},"1494",-1),RO={style:{"text-align":"left"}},SO={href:"https://leetcode.com/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},UO=t("td",{style:{"text-align":"center"}},null,-1),WO={style:{"text-align":"left"}},XO=t("code",null,"位运算",-1),FO=t("code",null,"图",-1),GO=t("code",null,"动态规划",-1),TO=t("code",null,"1+",-1),QO={style:{"text-align":"left"}},ZO=t("td",{style:{"text-align":"center"}},"1504",-1),$O={style:{"text-align":"left"}},tL={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},eL=t("td",{style:{"text-align":"center"}},null,-1),lL={style:{"text-align":"left"}},oL=t("code",null,"栈",-1),nL=t("code",null,"数组",-1),sL=t("code",null,"动态规划",-1),dL=t("code",null,"2+",-1),_L={style:{"text-align":"left"}},aL=t("td",{style:{"text-align":"center"}},"1510",-1),iL={style:{"text-align":"left"}},cL={href:"https://leetcode.com/problems/stone-game-iv",target:"_blank",rel:"noopener noreferrer"},rL=t("td",{style:{"text-align":"center"}},null,-1),hL={style:{"text-align":"left"}},fL=t("code",null,"数学",-1),gL=t("code",null,"动态规划",-1),uL=t("code",null,"博弈",-1),mL={style:{"text-align":"left"}},yL=t("td",{style:{"text-align":"center"}},"1524",-1),xL={style:{"text-align":"left"}},pL={href:"https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},bL=t("td",{style:{"text-align":"center"}},null,-1),kL={style:{"text-align":"left"}},ML=t("code",null,"数组",-1),HL=t("code",null,"数学",-1),IL=t("code",null,"动态规划",-1),wL=t("code",null,"1+",-1),vL={style:{"text-align":"left"}},qL=t("td",{style:{"text-align":"center"}},"1525",-1),zL={style:{"text-align":"left"}},jL={href:"https://leetcode.com/problems/number-of-good-ways-to-split-a-string",target:"_blank",rel:"noopener noreferrer"},CL=t("td",{style:{"text-align":"center"}},null,-1),OL={style:{"text-align":"left"}},LL=t("code",null,"位运算",-1),EL=t("code",null,"哈希表",-1),PL=t("code",null,"字符串",-1),KL=t("code",null,"1+",-1),VL={style:{"text-align":"left"}},NL=t("td",{style:{"text-align":"center"}},"1526",-1),DL={style:{"text-align":"left"}},BL={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},YL=t("td",{style:{"text-align":"center"}},null,-1),AL={style:{"text-align":"left"}},JL=t("code",null,"栈",-1),RL=t("code",null,"贪心",-1),SL=t("code",null,"数组",-1),UL=t("code",null,"2+",-1),WL={style:{"text-align":"left"}},XL=t("td",{style:{"text-align":"center"}},"1531",-1),FL={style:{"text-align":"left"}},GL={href:"https://leetcode.com/problems/string-compression-ii",target:"_blank",rel:"noopener noreferrer"},TL=t("td",{style:{"text-align":"center"}},null,-1),QL={style:{"text-align":"left"}},ZL=t("code",null,"字符串",-1),$L=t("code",null,"动态规划",-1),tE={style:{"text-align":"left"}},eE=t("td",{style:{"text-align":"center"}},"1537",-1),lE={style:{"text-align":"left"}},oE={href:"https://leetcode.com/problems/get-the-maximum-score",target:"_blank",rel:"noopener noreferrer"},nE=t("td",{style:{"text-align":"center"}},null,-1),sE={style:{"text-align":"left"}},dE=t("code",null,"贪心",-1),_E=t("code",null,"数组",-1),aE=t("code",null,"双指针",-1),iE=t("code",null,"1+",-1),cE={style:{"text-align":"left"}},rE=t("td",{style:{"text-align":"center"}},"1547",-1),hE={style:{"text-align":"left"}},fE={href:"https://leetcode.com/problems/minimum-cost-to-cut-a-stick",target:"_blank",rel:"noopener noreferrer"},gE=t("td",{style:{"text-align":"center"}},null,-1),uE={style:{"text-align":"left"}},mE=t("code",null,"数组",-1),yE=t("code",null,"动态规划",-1),xE=t("code",null,"排序",-1),pE={style:{"text-align":"left"}},bE=t("td",{style:{"text-align":"center"}},"1548",-1),kE={style:{"text-align":"left"}},ME={href:"https://leetcode.com/problems/the-most-similar-path-in-a-graph",target:"_blank",rel:"noopener noreferrer"},HE=t("td",{style:{"text-align":"center"}},null,-1),IE={style:{"text-align":"left"}},wE=t("code",null,"图",-1),vE=t("code",null,"动态规划",-1),qE={style:{"text-align":"left"}},zE=t("td",{style:{"text-align":"center"}},"1553",-1),jE={style:{"text-align":"left"}},CE={href:"https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},OE=t("td",{style:{"text-align":"center"}},null,-1),LE={style:{"text-align":"left"}},EE=t("code",null,"记忆化搜索",-1),PE=t("code",null,"动态规划",-1),KE={style:{"text-align":"left"}},VE=t("td",{style:{"text-align":"center"}},"1563",-1),NE={style:{"text-align":"left"}},DE={href:"https://leetcode.com/problems/stone-game-v",target:"_blank",rel:"noopener noreferrer"},BE=t("td",{style:{"text-align":"center"}},null,-1),YE={style:{"text-align":"left"}},AE=t("code",null,"数组",-1),JE=t("code",null,"数学",-1),RE=t("code",null,"动态规划",-1),SE=t("code",null,"1+",-1),UE={style:{"text-align":"left"}},WE=t("td",{style:{"text-align":"center"}},"1567",-1),XE={style:{"text-align":"left"}},FE={href:"https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product",target:"_blank",rel:"noopener noreferrer"},GE=t("td",{style:{"text-align":"center"}},null,-1),TE={style:{"text-align":"left"}},QE=t("code",null,"贪心",-1),ZE=t("code",null,"数组",-1),$E=t("code",null,"动态规划",-1),tP={style:{"text-align":"left"}},eP=t("td",{style:{"text-align":"center"}},"1569",-1),lP={style:{"text-align":"left"}},oP={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},nP=t("td",{style:{"text-align":"center"}},null,-1),sP={style:{"text-align":"left"}},dP=t("code",null,"树",-1),_P=t("code",null,"并查集",-1),aP=t("code",null,"二叉搜索树",-1),iP=t("code",null,"7+",-1),cP={style:{"text-align":"left"}},rP=t("td",{style:{"text-align":"center"}},"1575",-1),hP={style:{"text-align":"left"}},fP={href:"https://leetcode.com/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},gP=t("td",{style:{"text-align":"center"}},null,-1),uP={style:{"text-align":"left"}},mP=t("code",null,"记忆化搜索",-1),yP=t("code",null,"数组",-1),xP=t("code",null,"动态规划",-1),pP={style:{"text-align":"left"}},bP=t("td",{style:{"text-align":"center"}},"1578",-1),kP={style:{"text-align":"left"}},MP={href:"https://leetcode.com/problems/minimum-time-to-make-rope-colorful",target:"_blank",rel:"noopener noreferrer"},HP=t("td",{style:{"text-align":"center"}},null,-1),IP={style:{"text-align":"left"}},wP=t("code",null,"贪心",-1),vP=t("code",null,"数组",-1),qP=t("code",null,"字符串",-1),zP=t("code",null,"1+",-1),jP={style:{"text-align":"left"}},CP=t("td",{style:{"text-align":"center"}},"1594",-1),OP={style:{"text-align":"left"}},LP={href:"https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},EP=t("td",{style:{"text-align":"center"}},null,-1),PP={style:{"text-align":"left"}},KP=t("code",null,"数组",-1),VP=t("code",null,"动态规划",-1),NP=t("code",null,"矩阵",-1),DP={style:{"text-align":"left"}},BP=t("td",{style:{"text-align":"center"}},"1595",-1),YP={style:{"text-align":"left"}},AP={href:"https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points",target:"_blank",rel:"noopener noreferrer"},JP=t("td",{style:{"text-align":"center"}},null,-1),RP={style:{"text-align":"left"}},SP=t("code",null,"位运算",-1),UP=t("code",null,"数组",-1),WP=t("code",null,"动态规划",-1),XP=t("code",null,"2+",-1),FP={style:{"text-align":"left"}},GP=t("td",{style:{"text-align":"center"}},"1611",-1),TP={style:{"text-align":"left"}},QP={href:"https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},ZP=t("td",{style:{"text-align":"center"}},null,-1),$P={style:{"text-align":"left"}},tK=t("code",null,"位运算",-1),eK=t("code",null,"记忆化搜索",-1),lK=t("code",null,"动态规划",-1),oK={style:{"text-align":"left"}},nK=t("td",{style:{"text-align":"center"}},"1617",-1),sK={style:{"text-align":"left"}},dK={href:"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},_K=t("td",{style:{"text-align":"center"}},null,-1),aK={style:{"text-align":"left"}},iK=t("code",null,"位运算",-1),cK=t("code",null,"树",-1),rK=t("code",null,"动态规划",-1),hK=t("code",null,"2+",-1),fK={style:{"text-align":"left"}},gK=t("td",{style:{"text-align":"center"}},"1621",-1),uK={style:{"text-align":"left"}},mK={href:"https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments",target:"_blank",rel:"noopener noreferrer"},yK=t("td",{style:{"text-align":"center"}},null,-1),xK={style:{"text-align":"left"}},pK=t("code",null,"数学",-1),bK=t("code",null,"动态规划",-1),kK=t("code",null,"组合数学",-1),MK={style:{"text-align":"left"}},HK=t("td",{style:{"text-align":"center"}},"1626",-1),IK={style:{"text-align":"left"}},wK={href:"https://leetcode.com/problems/best-team-with-no-conflicts",target:"_blank",rel:"noopener noreferrer"},vK=t("td",{style:{"text-align":"center"}},null,-1),qK={style:{"text-align":"left"}},zK=t("code",null,"数组",-1),jK=t("code",null,"动态规划",-1),CK=t("code",null,"排序",-1),OK={style:{"text-align":"left"}},LK=t("td",{style:{"text-align":"center"}},"1638",-1),EK={style:{"text-align":"left"}},PK={href:"https://leetcode.com/problems/count-substrings-that-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},KK=t("td",{style:{"text-align":"center"}},null,-1),VK={style:{"text-align":"left"}},NK=t("code",null,"哈希表",-1),DK=t("code",null,"字符串",-1),BK=t("code",null,"动态规划",-1),YK=t("code",null,"1+",-1),AK={style:{"text-align":"left"}},JK=t("td",{style:{"text-align":"center"}},"1639",-1),RK={style:{"text-align":"left"}},SK={href:"https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary",target:"_blank",rel:"noopener noreferrer"},UK=t("td",{style:{"text-align":"center"}},null,-1),WK={style:{"text-align":"left"}},XK=t("code",null,"数组",-1),FK=t("code",null,"字符串",-1),GK=t("code",null,"动态规划",-1),TK={style:{"text-align":"left"}},QK=t("td",{style:{"text-align":"center"}},"1641",-1),ZK={style:{"text-align":"left"}},$K={href:"https://leetcode.com/problems/count-sorted-vowel-strings",target:"_blank",rel:"noopener noreferrer"},tV=t("td",{style:{"text-align":"center"}},null,-1),eV={style:{"text-align":"left"}},lV=t("code",null,"数学",-1),oV=t("code",null,"动态规划",-1),nV=t("code",null,"组合数学",-1),sV={style:{"text-align":"left"}},dV=t("td",{style:{"text-align":"center"}},"1643",-1),_V={style:{"text-align":"left"}},aV={href:"https://leetcode.com/problems/kth-smallest-instructions",target:"_blank",rel:"noopener noreferrer"},iV=t("td",{style:{"text-align":"center"}},null,-1),cV={style:{"text-align":"left"}},rV=t("code",null,"数组",-1),hV=t("code",null,"数学",-1),fV=t("code",null,"动态规划",-1),gV=t("code",null,"1+",-1),uV={style:{"text-align":"left"}},mV=t("td",{style:{"text-align":"center"}},"1653",-1),yV={style:{"text-align":"left"}},xV={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},pV=t("td",{style:{"text-align":"center"}},null,-1),bV={style:{"text-align":"left"}},kV=t("code",null,"栈",-1),MV=t("code",null,"字符串",-1),HV=t("code",null,"动态规划",-1),IV={style:{"text-align":"left"}},wV=t("td",{style:{"text-align":"center"}},"1654",-1),vV={style:{"text-align":"left"}},qV={href:"https://leetcode.com/problems/minimum-jumps-to-reach-home",target:"_blank",rel:"noopener noreferrer"},zV=t("td",{style:{"text-align":"center"}},null,-1),jV={style:{"text-align":"left"}},CV=t("code",null,"广度优先搜索",-1),OV=t("code",null,"数组",-1),LV=t("code",null,"动态规划",-1),EV={style:{"text-align":"left"}},PV=t("td",{style:{"text-align":"center"}},"1655",-1),KV={style:{"text-align":"left"}},VV={href:"https://leetcode.com/problems/distribute-repeating-integers",target:"_blank",rel:"noopener noreferrer"},NV=t("td",{style:{"text-align":"center"}},null,-1),DV={style:{"text-align":"left"}},BV=t("code",null,"位运算",-1),YV=t("code",null,"数组",-1),AV=t("code",null,"动态规划",-1),JV=t("code",null,"2+",-1),RV={style:{"text-align":"left"}},SV=t("td",{style:{"text-align":"center"}},"1659",-1),UV={style:{"text-align":"left"}},WV={href:"https://leetcode.com/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},XV=t("td",{style:{"text-align":"center"}},null,-1),FV={style:{"text-align":"left"}},GV=t("code",null,"位运算",-1),TV=t("code",null,"记忆化搜索",-1),QV=t("code",null,"动态规划",-1),ZV=t("code",null,"1+",-1),$V={style:{"text-align":"left"}},tN=t("td",{style:{"text-align":"center"}},"1668",-1),eN={style:{"text-align":"left"}},lN={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},oN=t("td",{style:{"text-align":"center"}},null,-1),nN={style:{"text-align":"left"}},sN=t("code",null,"字符串",-1),dN=t("code",null,"动态规划",-1),_N=t("code",null,"字符串匹配",-1),aN={style:{"text-align":"left"}},iN=t("td",{style:{"text-align":"center"}},"1671",-1),cN={style:{"text-align":"left"}},rN={href:"https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array",target:"_blank",rel:"noopener noreferrer"},hN={style:{"text-align":"center"}},fN={style:{"text-align":"left"}},gN=t("code",null,"贪心",-1),uN=t("code",null,"数组",-1),mN=t("code",null,"二分查找",-1),yN=t("code",null,"1+",-1),xN={style:{"text-align":"left"}},pN=t("td",{style:{"text-align":"center"}},"1681",-1),bN={style:{"text-align":"left"}},kN={href:"https://leetcode.com/problems/minimum-incompatibility",target:"_blank",rel:"noopener noreferrer"},MN=t("td",{style:{"text-align":"center"}},null,-1),HN={style:{"text-align":"left"}},IN=t("code",null,"位运算",-1),wN=t("code",null,"数组",-1),vN=t("code",null,"动态规划",-1),qN=t("code",null,"1+",-1),zN={style:{"text-align":"left"}},jN=t("td",{style:{"text-align":"center"}},"1682",-1),CN={style:{"text-align":"left"}},ON={href:"https://leetcode.com/problems/longest-palindromic-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},LN=t("td",{style:{"text-align":"center"}},null,-1),EN={style:{"text-align":"left"}},PN=t("code",null,"字符串",-1),KN=t("code",null,"动态规划",-1),VN={style:{"text-align":"left"}},NN=t("td",{style:{"text-align":"center"}},"1687",-1),DN={style:{"text-align":"left"}},BN={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},YN=t("td",{style:{"text-align":"center"}},null,-1),AN={style:{"text-align":"left"}},JN=t("code",null,"线段树",-1),RN=t("code",null,"队列",-1),SN=t("code",null,"数组",-1),UN=t("code",null,"4+",-1),WN={style:{"text-align":"left"}},XN=t("td",{style:{"text-align":"center"}},"1690",-1),FN={style:{"text-align":"left"}},GN={href:"https://leetcode.com/problems/stone-game-vii",target:"_blank",rel:"noopener noreferrer"},TN=t("td",{style:{"text-align":"center"}},null,-1),QN={style:{"text-align":"left"}},ZN=t("code",null,"数组",-1),$N=t("code",null,"数学",-1),tD=t("code",null,"动态规划",-1),eD=t("code",null,"1+",-1),lD={style:{"text-align":"left"}},oD=t("td",{style:{"text-align":"center"}},"1691",-1),nD={style:{"text-align":"left"}},sD={href:"https://leetcode.com/problems/maximum-height-by-stacking-cuboids",target:"_blank",rel:"noopener noreferrer"},dD=t("td",{style:{"text-align":"center"}},null,-1),_D={style:{"text-align":"left"}},aD=t("code",null,"数组",-1),iD=t("code",null,"动态规划",-1),cD=t("code",null,"排序",-1),rD={style:{"text-align":"left"}},hD=t("td",{style:{"text-align":"center"}},"1692",-1),fD={style:{"text-align":"left"}},gD={href:"https://leetcode.com/problems/count-ways-to-distribute-candies",target:"_blank",rel:"noopener noreferrer"},uD=t("td",{style:{"text-align":"center"}},null,-1),mD={style:{"text-align":"left"}},yD=t("code",null,"动态规划",-1),xD={style:{"text-align":"left"}},pD=t("td",{style:{"text-align":"center"}},"1696",-1),bD={style:{"text-align":"left"}},kD={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},MD=t("td",{style:{"text-align":"center"}},null,-1),HD={style:{"text-align":"left"}},ID=t("code",null,"队列",-1),wD=t("code",null,"数组",-1),vD=t("code",null,"动态规划",-1),qD=t("code",null,"2+",-1),zD={style:{"text-align":"left"}},jD=t("td",{style:{"text-align":"center"}},"1714",-1),CD={style:{"text-align":"left"}},OD={href:"https://leetcode.com/problems/sum-of-special-evenly-spaced-elements-in-array",target:"_blank",rel:"noopener noreferrer"},LD=t("td",{style:{"text-align":"center"}},null,-1),ED={style:{"text-align":"left"}},PD=t("code",null,"数组",-1),KD=t("code",null,"动态规划",-1),VD={style:{"text-align":"left"}},ND=t("td",{style:{"text-align":"center"}},"1723",-1),DD={style:{"text-align":"left"}},BD={href:"https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs",target:"_blank",rel:"noopener noreferrer"},YD=t("td",{style:{"text-align":"center"}},null,-1),AD={style:{"text-align":"left"}},JD=t("code",null,"位运算",-1),RD=t("code",null,"数组",-1),SD=t("code",null,"动态规划",-1),UD=t("code",null,"2+",-1),WD={style:{"text-align":"left"}},XD=t("td",{style:{"text-align":"center"}},"1728",-1),FD={style:{"text-align":"left"}},GD={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},TD=t("td",{style:{"text-align":"center"}},null,-1),QD={style:{"text-align":"left"}},ZD=t("code",null,"图",-1),$D=t("code",null,"拓扑排序",-1),tB=t("code",null,"记忆化搜索",-1),eB=t("code",null,"5+",-1),lB={style:{"text-align":"left"}},oB=t("td",{style:{"text-align":"center"}},"1735",-1),nB={style:{"text-align":"left"}},sB={href:"https://leetcode.com/problems/count-ways-to-make-array-with-product",target:"_blank",rel:"noopener noreferrer"},dB=t("td",{style:{"text-align":"center"}},null,-1),_B={style:{"text-align":"left"}},aB=t("code",null,"数组",-1),iB=t("code",null,"数学",-1),cB=t("code",null,"动态规划",-1),rB=t("code",null,"2+",-1),hB={style:{"text-align":"left"}},fB=t("td",{style:{"text-align":"center"}},"1745",-1),gB={style:{"text-align":"left"}},uB={href:"https://leetcode.com/problems/palindrome-partitioning-iv",target:"_blank",rel:"noopener noreferrer"},mB=t("td",{style:{"text-align":"center"}},null,-1),yB={style:{"text-align":"left"}},xB=t("code",null,"字符串",-1),pB=t("code",null,"动态规划",-1),bB={style:{"text-align":"left"}},kB=t("td",{style:{"text-align":"center"}},"1746",-1),MB={style:{"text-align":"left"}},HB={href:"https://leetcode.com/problems/maximum-subarray-sum-after-one-operation",target:"_blank",rel:"noopener noreferrer"},IB=t("td",{style:{"text-align":"center"}},null,-1),wB={style:{"text-align":"left"}},vB=t("code",null,"数组",-1),qB=t("code",null,"动态规划",-1),zB={style:{"text-align":"left"}},jB=t("td",{style:{"text-align":"center"}},"1749",-1),CB={style:{"text-align":"left"}},OB={href:"https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray",target:"_blank",rel:"noopener noreferrer"},LB=t("td",{style:{"text-align":"center"}},null,-1),EB={style:{"text-align":"left"}},PB=t("code",null,"数组",-1),KB=t("code",null,"动态规划",-1),VB={style:{"text-align":"left"}},NB=t("td",{style:{"text-align":"center"}},"1751",-1),DB={style:{"text-align":"left"}},BB={href:"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii",target:"_blank",rel:"noopener noreferrer"},YB=t("td",{style:{"text-align":"center"}},null,-1),AB={style:{"text-align":"left"}},JB=t("code",null,"数组",-1),RB=t("code",null,"二分查找",-1),SB=t("code",null,"动态规划",-1),UB=t("code",null,"1+",-1),WB={style:{"text-align":"left"}},XB=t("td",{style:{"text-align":"center"}},"1755",-1),FB={style:{"text-align":"left"}},GB={href:"https://leetcode.com/problems/closest-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},TB=t("td",{style:{"text-align":"center"}},null,-1),QB={style:{"text-align":"left"}},ZB=t("code",null,"位运算",-1),$B=t("code",null,"数组",-1),tY=t("code",null,"双指针",-1),eY=t("code",null,"2+",-1),lY={style:{"text-align":"left"}},oY=t("td",{style:{"text-align":"center"}},"1770",-1),nY={style:{"text-align":"left"}},sY={href:"https://leetcode.com/problems/maximum-score-from-performing-multiplication-operations",target:"_blank",rel:"noopener noreferrer"},dY=t("td",{style:{"text-align":"center"}},null,-1),_Y={style:{"text-align":"left"}},aY=t("code",null,"数组",-1),iY=t("code",null,"动态规划",-1),cY={style:{"text-align":"left"}},rY=t("td",{style:{"text-align":"center"}},"1771",-1),hY={style:{"text-align":"left"}},fY={href:"https://leetcode.com/problems/maximize-palindrome-length-from-subsequences",target:"_blank",rel:"noopener noreferrer"},gY=t("td",{style:{"text-align":"center"}},null,-1),uY={style:{"text-align":"left"}},mY=t("code",null,"字符串",-1),yY=t("code",null,"动态规划",-1),xY={style:{"text-align":"left"}},pY=t("td",{style:{"text-align":"center"}},"1774",-1),bY={style:{"text-align":"left"}},kY={href:"https://leetcode.com/problems/closest-dessert-cost",target:"_blank",rel:"noopener noreferrer"},MY=t("td",{style:{"text-align":"center"}},null,-1),HY={style:{"text-align":"left"}},IY=t("code",null,"数组",-1),wY=t("code",null,"动态规划",-1),vY=t("code",null,"回溯",-1),qY={style:{"text-align":"left"}},zY=t("td",{style:{"text-align":"center"}},"1786",-1),jY={style:{"text-align":"left"}},CY={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},OY=t("td",{style:{"text-align":"center"}},null,-1),LY={style:{"text-align":"left"}},EY=t("code",null,"图",-1),PY=t("code",null,"拓扑排序",-1),KY=t("code",null,"动态规划",-1),VY=t("code",null,"2+",-1),NY={style:{"text-align":"left"}},DY=t("td",{style:{"text-align":"center"}},"1787",-1),BY={style:{"text-align":"left"}},YY={href:"https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero",target:"_blank",rel:"noopener noreferrer"},AY=t("td",{style:{"text-align":"center"}},null,-1),JY={style:{"text-align":"left"}},RY=t("code",null,"位运算",-1),SY=t("code",null,"数组",-1),UY=t("code",null,"动态规划",-1),WY={style:{"text-align":"left"}},XY=t("td",{style:{"text-align":"center"}},"1799",-1),FY={style:{"text-align":"left"}},GY={href:"https://leetcode.com/problems/maximize-score-after-n-operations",target:"_blank",rel:"noopener noreferrer"},TY=t("td",{style:{"text-align":"center"}},null,-1),QY={style:{"text-align":"left"}},ZY=t("code",null,"位运算",-1),$Y=t("code",null,"数组",-1),tA=t("code",null,"数学",-1),eA=t("code",null,"4+",-1),lA={style:{"text-align":"left"}},oA=t("td",{style:{"text-align":"center"}},"1815",-1),nA={style:{"text-align":"left"}},sA={href:"https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},dA=t("td",{style:{"text-align":"center"}},null,-1),_A={style:{"text-align":"left"}},aA=t("code",null,"位运算",-1),iA=t("code",null,"记忆化搜索",-1),cA=t("code",null,"数组",-1),rA=t("code",null,"2+",-1),hA={style:{"text-align":"left"}},fA=t("td",{style:{"text-align":"center"}},"1824",-1),gA={style:{"text-align":"left"}},uA={href:"https://leetcode.com/problems/minimum-sideway-jumps",target:"_blank",rel:"noopener noreferrer"},mA=t("td",{style:{"text-align":"center"}},null,-1),yA={style:{"text-align":"left"}},xA=t("code",null,"贪心",-1),pA=t("code",null,"数组",-1),bA=t("code",null,"动态规划",-1),kA={style:{"text-align":"left"}},MA=t("td",{style:{"text-align":"center"}},"1857",-1),HA={style:{"text-align":"left"}},IA={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},wA=t("td",{style:{"text-align":"center"}},null,-1),vA={style:{"text-align":"left"}},qA=t("code",null,"图",-1),zA=t("code",null,"拓扑排序",-1),jA=t("code",null,"记忆化搜索",-1),CA=t("code",null,"3+",-1),OA={style:{"text-align":"left"}},LA=t("td",{style:{"text-align":"center"}},"1866",-1),EA={style:{"text-align":"left"}},PA={href:"https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible",target:"_blank",rel:"noopener noreferrer"},KA=t("td",{style:{"text-align":"center"}},null,-1),VA={style:{"text-align":"left"}},NA=t("code",null,"数学",-1),DA=t("code",null,"动态规划",-1),BA=t("code",null,"组合数学",-1),YA={style:{"text-align":"left"}},AA=t("td",{style:{"text-align":"center"}},"1871",-1),JA={style:{"text-align":"left"}},RA={href:"https://leetcode.com/problems/jump-game-vii",target:"_blank",rel:"noopener noreferrer"},SA=t("td",{style:{"text-align":"center"}},null,-1),UA={style:{"text-align":"left"}},WA=t("code",null,"字符串",-1),XA=t("code",null,"动态规划",-1),FA=t("code",null,"前缀和",-1),GA=t("code",null,"1+",-1),TA={style:{"text-align":"left"}},QA=t("td",{style:{"text-align":"center"}},"1872",-1),ZA={style:{"text-align":"left"}},$A={href:"https://leetcode.com/problems/stone-game-viii",target:"_blank",rel:"noopener noreferrer"},tJ=t("td",{style:{"text-align":"center"}},null,-1),eJ={style:{"text-align":"left"}},lJ=t("code",null,"数组",-1),oJ=t("code",null,"数学",-1),nJ=t("code",null,"动态规划",-1),sJ=t("code",null,"2+",-1),dJ={style:{"text-align":"left"}},_J=t("td",{style:{"text-align":"center"}},"1879",-1),aJ={style:{"text-align":"left"}},iJ={href:"https://leetcode.com/problems/minimum-xor-sum-of-two-arrays",target:"_blank",rel:"noopener noreferrer"},cJ=t("td",{style:{"text-align":"center"}},null,-1),rJ={style:{"text-align":"left"}},hJ=t("code",null,"位运算",-1),fJ=t("code",null,"数组",-1),gJ=t("code",null,"动态规划",-1),uJ=t("code",null,"1+",-1),mJ={style:{"text-align":"left"}},yJ=t("td",{style:{"text-align":"center"}},"1883",-1),xJ={style:{"text-align":"left"}},pJ={href:"https://leetcode.com/problems/minimum-skips-to-arrive-at-meeting-on-time",target:"_blank",rel:"noopener noreferrer"},bJ=t("td",{style:{"text-align":"center"}},null,-1),kJ={style:{"text-align":"left"}},MJ=t("code",null,"数组",-1),HJ=t("code",null,"动态规划",-1),IJ={style:{"text-align":"left"}},wJ=t("td",{style:{"text-align":"center"}},"1884",-1),vJ={style:{"text-align":"left"}},qJ={href:"https://leetcode.com/problems/egg-drop-with-2-eggs-and-n-floors",target:"_blank",rel:"noopener noreferrer"},zJ=t("td",{style:{"text-align":"center"}},null,-1),jJ={style:{"text-align":"left"}},CJ=t("code",null,"数学",-1),OJ=t("code",null,"动态规划",-1),LJ={style:{"text-align":"left"}},EJ=t("td",{style:{"text-align":"center"}},"1888",-1),PJ={style:{"text-align":"left"}},KJ={href:"https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating",target:"_blank",rel:"noopener noreferrer"},VJ=t("td",{style:{"text-align":"center"}},null,-1),NJ={style:{"text-align":"left"}},DJ=t("code",null,"贪心",-1),BJ=t("code",null,"字符串",-1),YJ=t("code",null,"动态规划",-1),AJ=t("code",null,"1+",-1),JJ={style:{"text-align":"left"}},RJ=t("td",{style:{"text-align":"center"}},"1896",-1),SJ={style:{"text-align":"left"}},UJ={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},WJ=t("td",{style:{"text-align":"center"}},null,-1),XJ={style:{"text-align":"left"}},FJ=t("code",null,"栈",-1),GJ=t("code",null,"数学",-1),TJ=t("code",null,"字符串",-1),QJ=t("code",null,"1+",-1),ZJ={style:{"text-align":"left"}},$J=t("td",{style:{"text-align":"center"}},"1900",-1),tR={style:{"text-align":"left"}},eR={href:"https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},lR=t("td",{style:{"text-align":"center"}},null,-1),oR={style:{"text-align":"left"}},nR=t("code",null,"记忆化搜索",-1),sR=t("code",null,"动态规划",-1),dR={style:{"text-align":"left"}},_R=t("td",{style:{"text-align":"center"}},"1908",-1),aR={style:{"text-align":"left"}},iR={href:"https://leetcode.com/problems/game-of-nim",target:"_blank",rel:"noopener noreferrer"},cR=t("td",{style:{"text-align":"center"}},null,-1),rR={style:{"text-align":"left"}},hR=t("code",null,"位运算",-1),fR=t("code",null,"脑筋急转弯",-1),gR=t("code",null,"数组",-1),uR=t("code",null,"3+",-1),mR={style:{"text-align":"left"}},yR=t("td",{style:{"text-align":"center"}},"1911",-1),xR={style:{"text-align":"left"}},pR={href:"https://leetcode.com/problems/maximum-alternating-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},bR=t("td",{style:{"text-align":"center"}},null,-1),kR={style:{"text-align":"left"}},MR=t("code",null,"数组",-1),HR=t("code",null,"动态规划",-1),IR={style:{"text-align":"left"}},wR=t("td",{style:{"text-align":"center"}},"1916",-1),vR={style:{"text-align":"left"}},qR={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},zR=t("td",{style:{"text-align":"center"}},null,-1),jR={style:{"text-align":"left"}},CR=t("code",null,"树",-1),OR=t("code",null,"图",-1),LR=t("code",null,"拓扑排序",-1),ER=t("code",null,"3+",-1),PR={style:{"text-align":"left"}},KR=t("td",{style:{"text-align":"center"}},"1928",-1),VR={style:{"text-align":"left"}},NR={href:"https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time",target:"_blank",rel:"noopener noreferrer"},DR=t("td",{style:{"text-align":"center"}},null,-1),BR={style:{"text-align":"left"}},YR=t("code",null,"图",-1),AR=t("code",null,"数组",-1),JR=t("code",null,"动态规划",-1),RR={style:{"text-align":"left"}},SR=t("td",{style:{"text-align":"center"}},"1931",-1),UR={style:{"text-align":"left"}},WR={href:"https://leetcode.com/problems/painting-a-grid-with-three-different-colors",target:"_blank",rel:"noopener noreferrer"},XR=t("td",{style:{"text-align":"center"}},null,-1),FR={style:{"text-align":"left"}},GR=t("code",null,"动态规划",-1),TR={style:{"text-align":"left"}},QR=t("td",{style:{"text-align":"center"}},"1937",-1),ZR={style:{"text-align":"left"}},$R={href:"https://leetcode.com/problems/maximum-number-of-points-with-cost",target:"_blank",rel:"noopener noreferrer"},tS=t("td",{style:{"text-align":"center"}},null,-1),eS={style:{"text-align":"left"}},lS=t("code",null,"数组",-1),oS=t("code",null,"动态规划",-1),nS=t("code",null,"矩阵",-1),sS={style:{"text-align":"left"}},dS=t("td",{style:{"text-align":"center"}},"1947",-1),_S={style:{"text-align":"left"}},aS={href:"https://leetcode.com/problems/maximum-compatibility-score-sum",target:"_blank",rel:"noopener noreferrer"},iS=t("td",{style:{"text-align":"center"}},null,-1),cS={style:{"text-align":"left"}},rS=t("code",null,"位运算",-1),hS=t("code",null,"数组",-1),fS=t("code",null,"动态规划",-1),gS=t("code",null,"2+",-1),uS={style:{"text-align":"left"}},mS=t("td",{style:{"text-align":"center"}},"1955",-1),yS={style:{"text-align":"left"}},xS={href:"https://leetcode.com/problems/count-number-of-special-subsequences",target:"_blank",rel:"noopener noreferrer"},pS=t("td",{style:{"text-align":"center"}},null,-1),bS={style:{"text-align":"left"}},kS=t("code",null,"数组",-1),MS=t("code",null,"动态规划",-1),HS={style:{"text-align":"left"}},IS=t("td",{style:{"text-align":"center"}},"1959",-1),wS={style:{"text-align":"left"}},vS={href:"https://leetcode.com/problems/minimum-total-space-wasted-with-k-resizing-operations",target:"_blank",rel:"noopener noreferrer"},qS=t("td",{style:{"text-align":"center"}},null,-1),zS={style:{"text-align":"left"}},jS=t("code",null,"数组",-1),CS=t("code",null,"动态规划",-1),OS={style:{"text-align":"left"}},LS=t("td",{style:{"text-align":"center"}},"1976",-1),ES={style:{"text-align":"left"}},PS={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},KS=t("td",{style:{"text-align":"center"}},null,-1),VS={style:{"text-align":"left"}},NS=t("code",null,"图",-1),DS=t("code",null,"拓扑排序",-1),BS=t("code",null,"动态规划",-1),YS=t("code",null,"1+",-1),AS={style:{"text-align":"left"}},JS=t("td",{style:{"text-align":"center"}},"1977",-1),RS={style:{"text-align":"left"}},SS={href:"https://leetcode.com/problems/number-of-ways-to-separate-numbers",target:"_blank",rel:"noopener noreferrer"},US=t("td",{style:{"text-align":"center"}},null,-1),WS={style:{"text-align":"left"}},XS=t("code",null,"字符串",-1),FS=t("code",null,"动态规划",-1),GS=t("code",null,"后缀数组",-1),TS={style:{"text-align":"left"}},QS=t("td",{style:{"text-align":"center"}},"1981",-1),ZS={style:{"text-align":"left"}},$S={href:"https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements",target:"_blank",rel:"noopener noreferrer"},tU=t("td",{style:{"text-align":"center"}},null,-1),eU={style:{"text-align":"left"}},lU=t("code",null,"数组",-1),oU=t("code",null,"动态规划",-1),nU=t("code",null,"矩阵",-1),sU={style:{"text-align":"left"}},dU=t("td",{style:{"text-align":"center"}},"1986",-1),_U={style:{"text-align":"left"}},aU={href:"https://leetcode.com/problems/minimum-number-of-work-sessions-to-finish-the-tasks",target:"_blank",rel:"noopener noreferrer"},iU=t("td",{style:{"text-align":"center"}},null,-1),cU={style:{"text-align":"left"}},rU=t("code",null,"位运算",-1),hU=t("code",null,"数组",-1),fU=t("code",null,"动态规划",-1),gU=t("code",null,"2+",-1),uU={style:{"text-align":"left"}},mU=t("td",{style:{"text-align":"center"}},"1987",-1),yU={style:{"text-align":"left"}},xU={href:"https://leetcode.com/problems/number-of-unique-good-subsequences",target:"_blank",rel:"noopener noreferrer"},pU=t("td",{style:{"text-align":"center"}},null,-1),bU={style:{"text-align":"left"}},kU=t("code",null,"字符串",-1),MU=t("code",null,"动态规划",-1),HU={style:{"text-align":"left"}},IU=t("td",{style:{"text-align":"center"}},"1994",-1),wU={style:{"text-align":"left"}},vU={href:"https://leetcode.com/problems/the-number-of-good-subsets",target:"_blank",rel:"noopener noreferrer"},qU=t("td",{style:{"text-align":"center"}},null,-1),zU={style:{"text-align":"left"}},jU=t("code",null,"位运算",-1),CU=t("code",null,"数组",-1),OU=t("code",null,"数学",-1),LU=t("code",null,"2+",-1),EU={style:{"text-align":"left"}},PU=t("td",{style:{"text-align":"center"}},"1997",-1),KU={style:{"text-align":"left"}},VU={href:"https://leetcode.com/problems/first-day-where-you-have-been-in-all-the-rooms",target:"_blank",rel:"noopener noreferrer"},NU=t("td",{style:{"text-align":"center"}},null,-1),DU={style:{"text-align":"left"}},BU=t("code",null,"数组",-1),YU=t("code",null,"动态规划",-1),AU={style:{"text-align":"left"}},JU=t("td",{style:{"text-align":"center"}},"2002",-1),RU={style:{"text-align":"left"}},SU={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},UU=t("td",{style:{"text-align":"center"}},null,-1),WU={style:{"text-align":"left"}},XU=t("code",null,"位运算",-1),FU=t("code",null,"字符串",-1),GU=t("code",null,"动态规划",-1),TU=t("code",null,"2+",-1),QU={style:{"text-align":"left"}},ZU=t("td",{style:{"text-align":"center"}},"2003",-1),$U={style:{"text-align":"left"}},tW={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},eW=t("td",{style:{"text-align":"center"}},null,-1),lW={style:{"text-align":"left"}},oW=t("code",null,"树",-1),nW=t("code",null,"深度优先搜索",-1),sW=t("code",null,"并查集",-1),dW=t("code",null,"1+",-1),_W={style:{"text-align":"left"}},aW=t("td",{style:{"text-align":"center"}},"2005",-1),iW={style:{"text-align":"left"}},cW={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},rW=t("td",{style:{"text-align":"center"}},null,-1),hW={style:{"text-align":"left"}},fW=t("code",null,"树",-1),gW=t("code",null,"数学",-1),uW=t("code",null,"动态规划",-1),mW=t("code",null,"2+",-1),yW={style:{"text-align":"left"}},xW=t("td",{style:{"text-align":"center"}},"2008",-1),pW={style:{"text-align":"left"}},bW={href:"https://leetcode.com/problems/maximum-earnings-from-taxi",target:"_blank",rel:"noopener noreferrer"},kW=t("td",{style:{"text-align":"center"}},null,-1),MW={style:{"text-align":"left"}},HW=t("code",null,"数组",-1),IW=t("code",null,"哈希表",-1),wW=t("code",null,"二分查找",-1),vW=t("code",null,"2+",-1),qW={style:{"text-align":"left"}},zW=t("td",{style:{"text-align":"center"}},"2019",-1),jW={style:{"text-align":"left"}},CW={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},OW=t("td",{style:{"text-align":"center"}},null,-1),LW={style:{"text-align":"left"}},EW=t("code",null,"栈",-1),PW=t("code",null,"记忆化搜索",-1),KW=t("code",null,"数组",-1),VW=t("code",null,"3+",-1),NW={style:{"text-align":"left"}},DW=t("td",{style:{"text-align":"center"}},"2035",-1),BW={style:{"text-align":"left"}},YW={href:"https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference",target:"_blank",rel:"noopener noreferrer"},AW=t("td",{style:{"text-align":"center"}},null,-1),JW={style:{"text-align":"left"}},RW=t("code",null,"位运算",-1),SW=t("code",null,"数组",-1),UW=t("code",null,"双指针",-1),WW=t("code",null,"4+",-1),XW={style:{"text-align":"left"}},FW=t("td",{style:{"text-align":"center"}},"2036",-1),GW={style:{"text-align":"left"}},TW={href:"https://leetcode.com/problems/maximum-alternating-subarray-sum",target:"_blank",rel:"noopener noreferrer"},QW=t("td",{style:{"text-align":"center"}},null,-1),ZW={style:{"text-align":"left"}},$W=t("code",null,"数组",-1),tX=t("code",null,"动态规划",-1),eX={style:{"text-align":"left"}},lX=t("td",{style:{"text-align":"center"}},"2050",-1),oX={style:{"text-align":"left"}},nX={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},sX=t("td",{style:{"text-align":"center"}},null,-1),dX={style:{"text-align":"left"}},_X=t("code",null,"图",-1),aX=t("code",null,"拓扑排序",-1),iX=t("code",null,"数组",-1),cX=t("code",null,"1+",-1),rX={style:{"text-align":"left"}},hX=t("td",{style:{"text-align":"center"}},"2052",-1),fX={style:{"text-align":"left"}},gX={href:"https://leetcode.com/problems/minimum-cost-to-separate-sentence-into-rows",target:"_blank",rel:"noopener noreferrer"},uX=t("td",{style:{"text-align":"center"}},null,-1),mX={style:{"text-align":"left"}},yX=t("code",null,"数组",-1),xX=t("code",null,"动态规划",-1),pX={style:{"text-align":"left"}},bX=t("td",{style:{"text-align":"center"}},"2054",-1),kX={style:{"text-align":"left"}},MX={href:"https://leetcode.com/problems/two-best-non-overlapping-events",target:"_blank",rel:"noopener noreferrer"},HX=t("td",{style:{"text-align":"center"}},null,-1),IX={style:{"text-align":"left"}},wX=t("code",null,"数组",-1),vX=t("code",null,"二分查找",-1),qX=t("code",null,"动态规划",-1),zX=t("code",null,"2+",-1),jX={style:{"text-align":"left"}},CX=t("td",{style:{"text-align":"center"}},"2060",-1),OX={style:{"text-align":"left"}},LX={href:"https://leetcode.com/problems/check-if-an-original-string-exists-given-two-encoded-strings",target:"_blank",rel:"noopener noreferrer"},EX=t("td",{style:{"text-align":"center"}},null,-1),PX={style:{"text-align":"left"}},KX=t("code",null,"字符串",-1),VX=t("code",null,"动态规划",-1),NX={style:{"text-align":"left"}},DX=t("td",{style:{"text-align":"center"}},"2063",-1),BX={style:{"text-align":"left"}},YX={href:"https://leetcode.com/problems/vowels-of-all-substrings",target:"_blank",rel:"noopener noreferrer"},AX=t("td",{style:{"text-align":"center"}},null,-1),JX={style:{"text-align":"left"}},RX=t("code",null,"数学",-1),SX=t("code",null,"字符串",-1),UX=t("code",null,"动态规划",-1),WX=t("code",null,"1+",-1),XX={style:{"text-align":"left"}},FX=t("td",{style:{"text-align":"center"}},"2086",-1),GX={style:{"text-align":"left"}},TX={href:"https://leetcode.com/problems/minimum-number-of-food-buckets-to-feed-the-hamsters",target:"_blank",rel:"noopener noreferrer"},QX=t("td",{style:{"text-align":"center"}},null,-1),ZX={style:{"text-align":"left"}},$X=t("code",null,"贪心",-1),tF=t("code",null,"字符串",-1),eF=t("code",null,"动态规划",-1),lF={style:{"text-align":"left"}},oF=t("td",{style:{"text-align":"center"}},"2088",-1),nF={style:{"text-align":"left"}},sF={href:"https://leetcode.com/problems/count-fertile-pyramids-in-a-land",target:"_blank",rel:"noopener noreferrer"},dF=t("td",{style:{"text-align":"center"}},null,-1),_F={style:{"text-align":"left"}},aF=t("code",null,"数组",-1),iF=t("code",null,"动态规划",-1),cF=t("code",null,"矩阵",-1),rF={style:{"text-align":"left"}},hF=t("td",{style:{"text-align":"center"}},"2100",-1),fF={style:{"text-align":"left"}},gF={href:"https://leetcode.com/problems/find-good-days-to-rob-the-bank",target:"_blank",rel:"noopener noreferrer"},uF=t("td",{style:{"text-align":"center"}},null,-1),mF={style:{"text-align":"left"}},yF=t("code",null,"数组",-1),xF=t("code",null,"动态规划",-1),pF=t("code",null,"前缀和",-1),bF={style:{"text-align":"left"}},kF=t("td",{style:{"text-align":"center"}},"2110",-1),MF={style:{"text-align":"left"}},HF={href:"https://leetcode.com/problems/number-of-smooth-descent-periods-of-a-stock",target:"_blank",rel:"noopener noreferrer"},IF=t("td",{style:{"text-align":"center"}},null,-1),wF={style:{"text-align":"left"}},vF=t("code",null,"数组",-1),qF=t("code",null,"数学",-1),zF=t("code",null,"动态规划",-1),jF={style:{"text-align":"left"}},CF=t("td",{style:{"text-align":"center"}},"2140",-1),OF={style:{"text-align":"left"}},LF={href:"https://leetcode.com/problems/solving-questions-with-brainpower",target:"_blank",rel:"noopener noreferrer"},EF=t("td",{style:{"text-align":"center"}},null,-1),PF={style:{"text-align":"left"}},KF=t("code",null,"数组",-1),VF=t("code",null,"动态规划",-1),NF={style:{"text-align":"left"}},DF=t("td",{style:{"text-align":"center"}},"2143",-1),BF={style:{"text-align":"left"}},YF={href:"https://leetcode.com/problems/choose-numbers-from-two-arrays-in-range",target:"_blank",rel:"noopener noreferrer"},AF=t("td",{style:{"text-align":"center"}},null,-1),JF={style:{"text-align":"left"}},RF=t("code",null,"数组",-1),SF=t("code",null,"动态规划",-1),UF={style:{"text-align":"left"}},WF=t("td",{style:{"text-align":"center"}},"2147",-1),XF={style:{"text-align":"left"}},FF={href:"https://leetcode.com/problems/number-of-ways-to-divide-a-long-corridor",target:"_blank",rel:"noopener noreferrer"},GF=t("td",{style:{"text-align":"center"}},null,-1),TF={style:{"text-align":"left"}},QF=t("code",null,"数学",-1),ZF=t("code",null,"字符串",-1),$F=t("code",null,"动态规划",-1),tG={style:{"text-align":"left"}},eG=t("td",{style:{"text-align":"center"}},"2152",-1),lG={style:{"text-align":"left"}},oG={href:"https://leetcode.com/problems/minimum-number-of-lines-to-cover-points",target:"_blank",rel:"noopener noreferrer"},nG=t("td",{style:{"text-align":"center"}},null,-1),sG={style:{"text-align":"left"}},dG=t("code",null,"位运算",-1),_G=t("code",null,"几何",-1),aG=t("code",null,"数组",-1),iG=t("code",null,"5+",-1),cG={style:{"text-align":"left"}},rG=t("td",{style:{"text-align":"center"}},"2163",-1),hG={style:{"text-align":"left"}},fG={href:"https://leetcode.com/problems/minimum-difference-in-sums-after-removal-of-elements",target:"_blank",rel:"noopener noreferrer"},gG=t("td",{style:{"text-align":"center"}},null,-1),uG={style:{"text-align":"left"}},mG=t("code",null,"数组",-1),yG=t("code",null,"动态规划",-1),xG=t("code",null,"堆（优先队列）",-1),pG={style:{"text-align":"left"}},bG=t("td",{style:{"text-align":"center"}},"2167",-1),kG={style:{"text-align":"left"}},MG={href:"https://leetcode.com/problems/minimum-time-to-remove-all-cars-containing-illegal-goods",target:"_blank",rel:"noopener noreferrer"},HG=t("td",{style:{"text-align":"center"}},null,-1),IG={style:{"text-align":"left"}},wG=t("code",null,"字符串",-1),vG=t("code",null,"动态规划",-1),qG={style:{"text-align":"left"}},zG=t("td",{style:{"text-align":"center"}},"2172",-1),jG={style:{"text-align":"left"}},CG={href:"https://leetcode.com/problems/maximum-and-sum-of-array",target:"_blank",rel:"noopener noreferrer"},OG=t("td",{style:{"text-align":"center"}},null,-1),LG={style:{"text-align":"left"}},EG=t("code",null,"位运算",-1),PG=t("code",null,"数组",-1),KG=t("code",null,"动态规划",-1),VG=t("code",null,"1+",-1),NG={style:{"text-align":"left"}},DG=t("td",{style:{"text-align":"center"}},"2184",-1),BG={style:{"text-align":"left"}},YG={href:"https://leetcode.com/problems/number-of-ways-to-build-sturdy-brick-wall",target:"_blank",rel:"noopener noreferrer"},AG=t("td",{style:{"text-align":"center"}},null,-1),JG={style:{"text-align":"left"}},RG=t("code",null,"位运算",-1),SG=t("code",null,"数组",-1),UG=t("code",null,"动态规划",-1),WG=t("code",null,"1+",-1),XG={style:{"text-align":"left"}},FG=t("td",{style:{"text-align":"center"}},"2188",-1),GG={style:{"text-align":"left"}},TG={href:"https://leetcode.com/problems/minimum-time-to-finish-the-race",target:"_blank",rel:"noopener noreferrer"},QG=t("td",{style:{"text-align":"center"}},null,-1),ZG={style:{"text-align":"left"}},$G=t("code",null,"数组",-1),tT=t("code",null,"动态规划",-1),eT={style:{"text-align":"left"}},lT=t("td",{style:{"text-align":"center"}},"2189",-1),oT={style:{"text-align":"left"}},nT={href:"https://leetcode.com/problems/number-of-ways-to-build-house-of-cards",target:"_blank",rel:"noopener noreferrer"},sT=t("td",{style:{"text-align":"center"}},null,-1),dT={style:{"text-align":"left"}},_T=t("code",null,"数学",-1),aT=t("code",null,"动态规划",-1),iT={style:{"text-align":"left"}},cT=t("td",{style:{"text-align":"center"}},"2209",-1),rT={style:{"text-align":"left"}},hT={href:"https://leetcode.com/problems/minimum-white-tiles-after-covering-with-carpets",target:"_blank",rel:"noopener noreferrer"},fT=t("td",{style:{"text-align":"center"}},null,-1),gT={style:{"text-align":"left"}},uT=t("code",null,"字符串",-1),mT=t("code",null,"动态规划",-1),yT=t("code",null,"前缀和",-1),xT={style:{"text-align":"left"}},pT=t("td",{style:{"text-align":"center"}},"2218",-1),bT={style:{"text-align":"left"}},kT={href:"https://leetcode.com/problems/maximum-value-of-k-coins-from-piles",target:"_blank",rel:"noopener noreferrer"},MT=t("td",{style:{"text-align":"center"}},null,-1),HT={style:{"text-align":"left"}},IT=t("code",null,"数组",-1),wT=t("code",null,"动态规划",-1),vT=t("code",null,"前缀和",-1),qT={style:{"text-align":"left"}},zT=t("td",{style:{"text-align":"center"}},"2222",-1),jT={style:{"text-align":"left"}},CT={href:"https://leetcode.com/problems/number-of-ways-to-select-buildings",target:"_blank",rel:"noopener noreferrer"},OT=t("td",{style:{"text-align":"center"}},null,-1),LT={style:{"text-align":"left"}},ET=t("code",null,"字符串",-1),PT=t("code",null,"动态规划",-1),KT=t("code",null,"前缀和",-1),VT={style:{"text-align":"left"}},NT=t("td",{style:{"text-align":"center"}},"2247",-1),DT={style:{"text-align":"left"}},BT={href:"https://leetcode.com/problems/maximum-cost-of-trip-with-k-highways",target:"_blank",rel:"noopener noreferrer"},YT=t("td",{style:{"text-align":"center"}},null,-1),AT={style:{"text-align":"left"}},JT=t("code",null,"位运算",-1),RT=t("code",null,"图",-1),ST=t("code",null,"动态规划",-1),UT=t("code",null,"1+",-1),WT={style:{"text-align":"left"}},XT=t("td",{style:{"text-align":"center"}},"2262",-1),FT={style:{"text-align":"left"}},GT={href:"https://leetcode.com/problems/total-appeal-of-a-string",target:"_blank",rel:"noopener noreferrer"},TT={style:{"text-align":"center"}},QT={style:{"text-align":"left"}},ZT=t("code",null,"哈希表",-1),$T=t("code",null,"字符串",-1),tQ=t("code",null,"动态规划",-1),eQ={style:{"text-align":"left"}},lQ=t("td",{style:{"text-align":"center"}},"2263",-1),oQ={style:{"text-align":"left"}},nQ={href:"https://leetcode.com/problems/make-array-non-decreasing-or-non-increasing",target:"_blank",rel:"noopener noreferrer"},sQ=t("td",{style:{"text-align":"center"}},null,-1),dQ={style:{"text-align":"left"}},_Q=t("code",null,"贪心",-1),aQ=t("code",null,"动态规划",-1),iQ={style:{"text-align":"left"}},cQ=t("td",{style:{"text-align":"center"}},"2266",-1),rQ={style:{"text-align":"left"}},hQ={href:"https://leetcode.com/problems/count-number-of-texts",target:"_blank",rel:"noopener noreferrer"},fQ=t("td",{style:{"text-align":"center"}},null,-1),gQ={style:{"text-align":"left"}},uQ=t("code",null,"哈希表",-1),mQ=t("code",null,"数学",-1),yQ=t("code",null,"字符串",-1),xQ=t("code",null,"1+",-1),pQ={style:{"text-align":"left"}},bQ=t("td",{style:{"text-align":"center"}},"2267",-1),kQ={style:{"text-align":"left"}},MQ={href:"https://leetcode.com/problems/check-if-there-is-a-valid-parentheses-string-path",target:"_blank",rel:"noopener noreferrer"},HQ=t("td",{style:{"text-align":"center"}},null,-1),IQ={style:{"text-align":"left"}},wQ=t("code",null,"数组",-1),vQ=t("code",null,"动态规划",-1),qQ=t("code",null,"矩阵",-1),zQ={style:{"text-align":"left"}},jQ=t("td",{style:{"text-align":"center"}},"2272",-1),CQ={style:{"text-align":"left"}},OQ={href:"https://leetcode.com/problems/substring-with-largest-variance",target:"_blank",rel:"noopener noreferrer"},LQ=t("td",{style:{"text-align":"center"}},null,-1),EQ={style:{"text-align":"left"}},PQ=t("code",null,"数组",-1),KQ=t("code",null,"动态规划",-1),VQ={style:{"text-align":"left"}},NQ=t("td",{style:{"text-align":"center"}},"2291",-1),DQ={style:{"text-align":"left"}},BQ={href:"https://leetcode.com/problems/maximum-profit-from-trading-stocks",target:"_blank",rel:"noopener noreferrer"},YQ=t("td",{style:{"text-align":"center"}},null,-1),AQ={style:{"text-align":"left"}},JQ=t("code",null,"数组",-1),RQ=t("code",null,"动态规划",-1),SQ={style:{"text-align":"left"}},UQ=t("td",{style:{"text-align":"center"}},"2297",-1),WQ={style:{"text-align":"left"}},XQ={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},FQ=t("td",{style:{"text-align":"center"}},null,-1),GQ={style:{"text-align":"left"}},TQ=t("code",null,"栈",-1),QQ=t("code",null,"图",-1),ZQ=t("code",null,"数组",-1),$Q=t("code",null,"3+",-1),tZ={style:{"text-align":"left"}},eZ=t("td",{style:{"text-align":"center"}},"2304",-1),lZ={style:{"text-align":"left"}},oZ={href:"https://leetcode.com/problems/minimum-path-cost-in-a-grid",target:"_blank",rel:"noopener noreferrer"},nZ=t("td",{style:{"text-align":"center"}},null,-1),sZ={style:{"text-align":"left"}},dZ=t("code",null,"数组",-1),_Z=t("code",null,"动态规划",-1),aZ=t("code",null,"矩阵",-1),iZ={style:{"text-align":"left"}},cZ=t("td",{style:{"text-align":"center"}},"2305",-1),rZ={style:{"text-align":"left"}},hZ={href:"https://leetcode.com/problems/fair-distribution-of-cookies",target:"_blank",rel:"noopener noreferrer"},fZ=t("td",{style:{"text-align":"center"}},null,-1),gZ={style:{"text-align":"left"}},uZ=t("code",null,"位运算",-1),mZ=t("code",null,"数组",-1),yZ=t("code",null,"动态规划",-1),xZ=t("code",null,"2+",-1),pZ={style:{"text-align":"left"}},bZ=t("td",{style:{"text-align":"center"}},"2310",-1),kZ={style:{"text-align":"left"}},MZ={href:"https://leetcode.com/problems/sum-of-numbers-with-units-digit-k",target:"_blank",rel:"noopener noreferrer"},HZ=t("td",{style:{"text-align":"center"}},null,-1),IZ={style:{"text-align":"left"}},wZ=t("code",null,"贪心",-1),vZ=t("code",null,"数学",-1),qZ=t("code",null,"动态规划",-1),zZ=t("code",null,"1+",-1),jZ={style:{"text-align":"left"}},CZ=t("td",{style:{"text-align":"center"}},"2311",-1),OZ={style:{"text-align":"left"}},LZ={href:"https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},EZ=t("td",{style:{"text-align":"center"}},null,-1),PZ={style:{"text-align":"left"}},KZ=t("code",null,"贪心",-1),VZ=t("code",null,"记忆化搜索",-1),NZ=t("code",null,"字符串",-1),DZ=t("code",null,"1+",-1),BZ={style:{"text-align":"left"}},YZ=t("td",{style:{"text-align":"center"}},"2312",-1),AZ={style:{"text-align":"left"}},JZ={href:"https://leetcode.com/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},RZ=t("td",{style:{"text-align":"center"}},null,-1),SZ={style:{"text-align":"left"}},UZ=t("code",null,"记忆化搜索",-1),WZ=t("code",null,"数组",-1),XZ=t("code",null,"动态规划",-1),FZ={style:{"text-align":"left"}},GZ=t("td",{style:{"text-align":"center"}},"2313",-1),TZ={style:{"text-align":"left"}},QZ={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},ZZ=t("td",{style:{"text-align":"center"}},null,-1),$Z={style:{"text-align":"left"}},t$=t("code",null,"树",-1),e$=t("code",null,"深度优先搜索",-1),l$=t("code",null,"动态规划",-1),o$=t("code",null,"1+",-1),n$={style:{"text-align":"left"}},s$=t("td",{style:{"text-align":"center"}},"2318",-1),d$={style:{"text-align":"left"}},_$={href:"https://leetcode.com/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},a$=t("td",{style:{"text-align":"center"}},null,-1),i$={style:{"text-align":"left"}},c$=t("code",null,"记忆化搜索",-1),r$=t("code",null,"动态规划",-1),h$={style:{"text-align":"left"}},f$=t("td",{style:{"text-align":"center"}},"2320",-1),g$={style:{"text-align":"left"}},u$={href:"https://leetcode.com/problems/count-number-of-ways-to-place-houses",target:"_blank",rel:"noopener noreferrer"},m$=t("td",{style:{"text-align":"center"}},null,-1),y$={style:{"text-align":"left"}},x$=t("code",null,"动态规划",-1),p$={style:{"text-align":"left"}},b$=t("td",{style:{"text-align":"center"}},"2321",-1),k$={style:{"text-align":"left"}},M$={href:"https://leetcode.com/problems/maximum-score-of-spliced-array",target:"_blank",rel:"noopener noreferrer"},H$=t("td",{style:{"text-align":"center"}},null,-1),I$={style:{"text-align":"left"}},w$=t("code",null,"数组",-1),v$=t("code",null,"动态规划",-1),q$={style:{"text-align":"left"}},z$=t("td",{style:{"text-align":"center"}},"2327",-1),j$={style:{"text-align":"left"}},C$={href:"https://leetcode.com/problems/number-of-people-aware-of-a-secret",target:"_blank",rel:"noopener noreferrer"},O$=t("td",{style:{"text-align":"center"}},null,-1),L$={style:{"text-align":"left"}},E$=t("code",null,"队列",-1),P$=t("code",null,"动态规划",-1),K$=t("code",null,"模拟",-1),V$={style:{"text-align":"left"}},N$=t("td",{style:{"text-align":"center"}},"2328",-1),D$={style:{"text-align":"left"}},B$={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Y$=t("td",{style:{"text-align":"center"}},null,-1),A$={style:{"text-align":"left"}},J$=t("code",null,"深度优先搜索",-1),R$=t("code",null,"广度优先搜索",-1),S$=t("code",null,"图",-1),U$=t("code",null,"5+",-1),W$={style:{"text-align":"left"}},X$=t("td",{style:{"text-align":"center"}},"2338",-1),F$={style:{"text-align":"left"}},G$={href:"https://leetcode.com/problems/count-the-number-of-ideal-arrays",target:"_blank",rel:"noopener noreferrer"},T$=t("td",{style:{"text-align":"center"}},null,-1),Q$={style:{"text-align":"left"}},Z$=t("code",null,"数学",-1),$$=t("code",null,"动态规划",-1),ttt=t("code",null,"组合数学",-1),ett=t("code",null,"1+",-1),ltt={style:{"text-align":"left"}},ott=t("td",{style:{"text-align":"center"}},"2355",-1),ntt={style:{"text-align":"left"}},stt={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},dtt=t("td",{style:{"text-align":"center"}},null,-1),_tt={style:{"text-align":"left"}},att=t("code",null,"栈",-1),itt=t("code",null,"数组",-1),ctt=t("code",null,"动态规划",-1),rtt=t("code",null,"1+",-1),htt={style:{"text-align":"left"}},ftt=t("td",{style:{"text-align":"center"}},"2361",-1),gtt={style:{"text-align":"left"}},utt={href:"https://leetcode.com/problems/minimum-costs-using-the-train-line",target:"_blank",rel:"noopener noreferrer"},mtt=t("td",{style:{"text-align":"center"}},null,-1),ytt={style:{"text-align":"left"}},xtt=t("code",null,"数组",-1),ptt=t("code",null,"动态规划",-1),btt={style:{"text-align":"left"}},ktt=t("td",{style:{"text-align":"center"}},"2369",-1),Mtt={style:{"text-align":"left"}},Htt={href:"https://leetcode.com/problems/check-if-there-is-a-valid-partition-for-the-array",target:"_blank",rel:"noopener noreferrer"},Itt=t("td",{style:{"text-align":"center"}},null,-1),wtt={style:{"text-align":"left"}},vtt=t("code",null,"数组",-1),qtt=t("code",null,"动态规划",-1),ztt={style:{"text-align":"left"}},jtt=t("td",{style:{"text-align":"center"}},"2370",-1),Ctt={style:{"text-align":"left"}},Ott={href:"https://leetcode.com/problems/longest-ideal-subsequence",target:"_blank",rel:"noopener noreferrer"},Ltt=t("td",{style:{"text-align":"center"}},null,-1),Ett={style:{"text-align":"left"}},Ptt=t("code",null,"哈希表",-1),Ktt=t("code",null,"字符串",-1),Vtt=t("code",null,"动态规划",-1),Ntt={style:{"text-align":"left"}},Dtt=t("td",{style:{"text-align":"center"}},"2376",-1),Btt={style:{"text-align":"left"}},Ytt={href:"https://leetcode.com/problems/count-special-integers",target:"_blank",rel:"noopener noreferrer"},Att=t("td",{style:{"text-align":"center"}},null,-1),Jtt={style:{"text-align":"left"}},Rtt=t("code",null,"数学",-1),Stt=t("code",null,"动态规划",-1),Utt={style:{"text-align":"left"}},Wtt=t("td",{style:{"text-align":"center"}},"2378",-1),Xtt={style:{"text-align":"left"}},Ftt={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Gtt=t("td",{style:{"text-align":"center"}},null,-1),Ttt={style:{"text-align":"left"}},Qtt=t("code",null,"树",-1),Ztt=t("code",null,"深度优先搜索",-1),$tt=t("code",null,"动态规划",-1),tet={style:{"text-align":"left"}},eet=t("td",{style:{"text-align":"center"}},"2380",-1),oet={style:{"text-align":"left"}},net={href:"https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string",target:"_blank",rel:"noopener noreferrer"},set=t("td",{style:{"text-align":"center"}},null,-1),det={style:{"text-align":"left"}},_et=t("code",null,"字符串",-1),aet=t("code",null,"动态规划",-1),iet=t("code",null,"模拟",-1),cet={style:{"text-align":"left"}},ret=t("td",{style:{"text-align":"center"}},"2393",-1),het={style:{"text-align":"left"}},fet={href:"https://leetcode.com/problems/count-strictly-increasing-subarrays",target:"_blank",rel:"noopener noreferrer"},get=t("td",{style:{"text-align":"center"}},null,-1),uet={style:{"text-align":"left"}},met=t("code",null,"数组",-1),yet=t("code",null,"数学",-1),xet=t("code",null,"动态规划",-1),pet={style:{"text-align":"left"}},bet=t("td",{style:{"text-align":"center"}},"2400",-1),ket={style:{"text-align":"left"}},Met={href:"https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},Het=t("td",{style:{"text-align":"center"}},null,-1),Iet={style:{"text-align":"left"}},wet=t("code",null,"数学",-1),vet=t("code",null,"动态规划",-1),qet=t("code",null,"组合数学",-1),zet={style:{"text-align":"left"}},jet=t("td",{style:{"text-align":"center"}},"2403",-1),Cet={style:{"text-align":"left"}},Oet={href:"https://leetcode.com/problems/minimum-time-to-kill-all-monsters",target:"_blank",rel:"noopener noreferrer"},Let=t("td",{style:{"text-align":"center"}},null,-1),Eet={style:{"text-align":"left"}},Pet=t("code",null,"位运算",-1),Ket=t("code",null,"数组",-1),Vet=t("code",null,"动态规划",-1),Net=t("code",null,"1+",-1),Det={style:{"text-align":"left"}},Bet=t("td",{style:{"text-align":"center"}},"2407",-1),Yet={style:{"text-align":"left"}},Aet={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Jet=t("td",{style:{"text-align":"center"}},null,-1),Ret={style:{"text-align":"left"}},Set=t("code",null,"树状数组",-1),Uet=t("code",null,"线段树",-1),Wet=t("code",null,"队列",-1),Xet=t("code",null,"4+",-1),Fet={style:{"text-align":"left"}},Get=t("td",{style:{"text-align":"center"}},"2420",-1),Tet={style:{"text-align":"left"}},Qet={href:"https://leetcode.com/problems/find-all-good-indices",target:"_blank",rel:"noopener noreferrer"},Zet=t("td",{style:{"text-align":"center"}},null,-1),$et={style:{"text-align":"left"}},tlt=t("code",null,"数组",-1),elt=t("code",null,"动态规划",-1),llt=t("code",null,"前缀和",-1),olt={style:{"text-align":"left"}},nlt=t("td",{style:{"text-align":"center"}},"2430",-1),slt={style:{"text-align":"left"}},dlt={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},_lt=t("td",{style:{"text-align":"center"}},null,-1),alt={style:{"text-align":"left"}},ilt=t("code",null,"字符串",-1),clt=t("code",null,"动态规划",-1),rlt=t("code",null,"字符串匹配",-1),hlt=t("code",null,"2+",-1),flt={style:{"text-align":"left"}},glt=t("td",{style:{"text-align":"center"}},"2431",-1),ult={style:{"text-align":"left"}},mlt={href:"https://leetcode.com/problems/maximize-total-tastiness-of-purchased-fruits",target:"_blank",rel:"noopener noreferrer"},ylt=t("td",{style:{"text-align":"center"}},null,-1),xlt={style:{"text-align":"left"}},plt=t("code",null,"数组",-1),blt=t("code",null,"动态规划",-1),klt={style:{"text-align":"left"}},Mlt=t("td",{style:{"text-align":"center"}},"2435",-1),Hlt={style:{"text-align":"left"}},Ilt={href:"https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},wlt=t("td",{style:{"text-align":"center"}},null,-1),vlt={style:{"text-align":"left"}},qlt=t("code",null,"数组",-1),zlt=t("code",null,"动态规划",-1),jlt=t("code",null,"矩阵",-1),Clt={style:{"text-align":"left"}},Olt=t("td",{style:{"text-align":"center"}},"2436",-1),Llt={style:{"text-align":"left"}},Elt={href:"https://leetcode.com/problems/minimum-split-into-subarrays-with-gcd-greater-than-one",target:"_blank",rel:"noopener noreferrer"},Plt=t("td",{style:{"text-align":"center"}},null,-1),Klt={style:{"text-align":"left"}},Vlt=t("code",null,"贪心",-1),Nlt=t("code",null,"数组",-1),Dlt=t("code",null,"数学",-1),Blt=t("code",null,"2+",-1),Ylt={style:{"text-align":"left"}},Alt=t("td",{style:{"text-align":"center"}},"2439",-1),Jlt={style:{"text-align":"left"}},Rlt={href:"https://leetcode.com/problems/minimize-maximum-of-array",target:"_blank",rel:"noopener noreferrer"},Slt=t("td",{style:{"text-align":"center"}},null,-1),Ult={style:{"text-align":"left"}},Wlt=t("code",null,"贪心",-1),Xlt=t("code",null,"数组",-1),Flt=t("code",null,"二分查找",-1),Glt=t("code",null,"2+",-1),Tlt={style:{"text-align":"left"}},Qlt=t("td",{style:{"text-align":"center"}},"2463",-1),Zlt={style:{"text-align":"left"}},$lt={href:"https://leetcode.com/problems/minimum-total-distance-traveled",target:"_blank",rel:"noopener noreferrer"},tot={style:{"text-align":"center"}},eot={style:{"text-align":"left"}},lot=t("code",null,"数组",-1),oot=t("code",null,"动态规划",-1),not=t("code",null,"排序",-1),sot={style:{"text-align":"left"}},dot=t("td",{style:{"text-align":"center"}},"2464",-1),_ot={style:{"text-align":"left"}},aot={href:"https://leetcode.com/problems/minimum-subarrays-in-a-valid-split",target:"_blank",rel:"noopener noreferrer"},iot=t("td",{style:{"text-align":"center"}},null,-1),cot={style:{"text-align":"left"}},rot=t("code",null,"数组",-1),hot=t("code",null,"数学",-1),fot=t("code",null,"动态规划",-1),got=t("code",null,"1+",-1),uot={style:{"text-align":"left"}},mot=t("td",{style:{"text-align":"center"}},"2466",-1),yot={style:{"text-align":"left"}},xot={href:"https://leetcode.com/problems/count-ways-to-build-good-strings",target:"_blank",rel:"noopener noreferrer"},pot=t("td",{style:{"text-align":"center"}},null,-1),bot={style:{"text-align":"left"}},kot=t("code",null,"动态规划",-1),Mot={style:{"text-align":"left"}},Hot=t("td",{style:{"text-align":"center"}},"2472",-1),Iot={style:{"text-align":"left"}},wot={href:"https://leetcode.com/problems/maximum-number-of-non-overlapping-palindrome-substrings",target:"_blank",rel:"noopener noreferrer"},vot=t("td",{style:{"text-align":"center"}},null,-1),qot={style:{"text-align":"left"}},zot=t("code",null,"贪心",-1),jot=t("code",null,"双指针",-1),Cot=t("code",null,"字符串",-1),Oot=t("code",null,"1+",-1),Lot={style:{"text-align":"left"}},Eot=t("td",{style:{"text-align":"center"}},"2478",-1),Pot={style:{"text-align":"left"}},Kot={href:"https://leetcode.com/problems/number-of-beautiful-partitions",target:"_blank",rel:"noopener noreferrer"},Vot=t("td",{style:{"text-align":"center"}},null,-1),Not={style:{"text-align":"left"}},Dot=t("code",null,"字符串",-1),Bot=t("code",null,"动态规划",-1),Yot={style:{"text-align":"left"}},Aot=t("td",{style:{"text-align":"center"}},"2484",-1),Jot={style:{"text-align":"left"}},Rot={href:"https://leetcode.com/problems/count-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},Sot=t("td",{style:{"text-align":"center"}},null,-1),Uot={style:{"text-align":"left"}},Wot=t("code",null,"字符串",-1),Xot=t("code",null,"动态规划",-1),Fot={style:{"text-align":"left"}},Got=t("td",{style:{"text-align":"center"}},"2495",-1),Tot={style:{"text-align":"left"}},Qot={href:"https://leetcode.com/problems/number-of-subarrays-having-even-product",target:"_blank",rel:"noopener noreferrer"},Zot=t("td",{style:{"text-align":"center"}},null,-1),$ot={style:{"text-align":"left"}},tnt=t("code",null,"数组",-1),ent=t("code",null,"数学",-1),lnt=t("code",null,"动态规划",-1),ont={style:{"text-align":"left"}},nnt=t("td",{style:{"text-align":"center"}},"2501",-1),snt={style:{"text-align":"left"}},dnt={href:"https://leetcode.com/problems/longest-square-streak-in-an-array",target:"_blank",rel:"noopener noreferrer"},_nt={style:{"text-align":"center"}},ant={style:{"text-align":"left"}},int=t("code",null,"数组",-1),cnt=t("code",null,"哈希表",-1),rnt=t("code",null,"二分查找",-1),hnt=t("code",null,"2+",-1),fnt={style:{"text-align":"left"}},gnt=t("td",{style:{"text-align":"center"}},"2510",-1),unt={style:{"text-align":"left"}},mnt={href:"https://leetcode.com/problems/check-if-there-is-a-path-with-equal-number-of-0s-and-1s",target:"_blank",rel:"noopener noreferrer"},ynt=t("td",{style:{"text-align":"center"}},null,-1),xnt={style:{"text-align":"left"}},pnt=t("code",null,"数组",-1),bnt=t("code",null,"动态规划",-1),knt=t("code",null,"矩阵",-1),Mnt={style:{"text-align":"left"}},Hnt=t("td",{style:{"text-align":"center"}},"2518",-1),Int={style:{"text-align":"left"}},wnt={href:"https://leetcode.com/problems/number-of-great-partitions",target:"_blank",rel:"noopener noreferrer"},vnt=t("td",{style:{"text-align":"center"}},null,-1),qnt={style:{"text-align":"left"}},znt=t("code",null,"数组",-1),jnt=t("code",null,"动态规划",-1),Cnt={style:{"text-align":"left"}},Ont=t("td",{style:{"text-align":"center"}},"2522",-1),Lnt={style:{"text-align":"left"}},Ent={href:"https://leetcode.com/problems/partition-string-into-substrings-with-values-at-most-k",target:"_blank",rel:"noopener noreferrer"},Pnt=t("td",{style:{"text-align":"center"}},null,-1),Knt={style:{"text-align":"left"}},Vnt=t("code",null,"贪心",-1),Nnt=t("code",null,"字符串",-1),Dnt=t("code",null,"动态规划",-1),Bnt={style:{"text-align":"left"}},Ynt=t("td",{style:{"text-align":"center"}},"2533",-1),Ant={style:{"text-align":"left"}},Jnt={href:"https://leetcode.com/problems/number-of-good-binary-strings",target:"_blank",rel:"noopener noreferrer"},Rnt=t("td",{style:{"text-align":"center"}},null,-1),Snt={style:{"text-align":"left"}},Unt=t("code",null,"动态规划",-1),Wnt={style:{"text-align":"left"}},Xnt=t("td",{style:{"text-align":"center"}},"2538",-1),Fnt={style:{"text-align":"left"}},Gnt={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},Tnt=t("td",{style:{"text-align":"center"}},null,-1),Qnt={style:{"text-align":"left"}},Znt=t("code",null,"树",-1),$nt=t("code",null,"深度优先搜索",-1),tst=t("code",null,"数组",-1),est=t("code",null,"1+",-1),lst={style:{"text-align":"left"}},ost=t("td",{style:{"text-align":"center"}},"2547",-1),nst={style:{"text-align":"left"}},sst={href:"https://leetcode.com/problems/minimum-cost-to-split-an-array",target:"_blank",rel:"noopener noreferrer"},dst=t("td",{style:{"text-align":"center"}},null,-1),_st={style:{"text-align":"left"}},ast=t("code",null,"数组",-1),ist=t("code",null,"哈希表",-1),cst=t("code",null,"动态规划",-1),rst=t("code",null,"1+",-1),hst={style:{"text-align":"left"}},fst=t("td",{style:{"text-align":"center"}},"2552",-1),gst={style:{"text-align":"left"}},ust={href:"https://leetcode.com/problems/count-increasing-quadruplets",target:"_blank",rel:"noopener noreferrer"},mst=t("td",{style:{"text-align":"center"}},null,-1),yst={style:{"text-align":"left"}},xst=t("code",null,"树状数组",-1),pst=t("code",null,"数组",-1),bst=t("code",null,"动态规划",-1),kst=t("code",null,"2+",-1),Mst={style:{"text-align":"left"}},Hst=t("td",{style:{"text-align":"center"}},"2556",-1),Ist={style:{"text-align":"left"}},wst={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},vst=t("td",{style:{"text-align":"center"}},null,-1),qst={style:{"text-align":"left"}},zst=t("code",null,"深度优先搜索",-1),jst=t("code",null,"广度优先搜索",-1),Cst=t("code",null,"数组",-1),Ost=t("code",null,"2+",-1),Lst={style:{"text-align":"left"}},Est=t("td",{style:{"text-align":"center"}},"2571",-1),Pst={style:{"text-align":"left"}},Kst={href:"https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0",target:"_blank",rel:"noopener noreferrer"},Vst=t("td",{style:{"text-align":"center"}},null,-1),Nst={style:{"text-align":"left"}},Dst=t("code",null,"贪心",-1),Bst=t("code",null,"位运算",-1),Yst=t("code",null,"动态规划",-1),Ast={style:{"text-align":"left"}},Jst=t("td",{style:{"text-align":"center"}},"2572",-1),Rst={style:{"text-align":"left"}},Sst={href:"https://leetcode.com/problems/count-the-number-of-square-free-subsets",target:"_blank",rel:"noopener noreferrer"},Ust=t("td",{style:{"text-align":"center"}},null,-1),Wst={style:{"text-align":"left"}},Xst=t("code",null,"位运算",-1),Fst=t("code",null,"数组",-1),Gst=t("code",null,"数学",-1),Tst=t("code",null,"2+",-1),Qst={style:{"text-align":"left"}},Zst=t("td",{style:{"text-align":"center"}},"2573",-1),$st={style:{"text-align":"left"}},tdt={href:"https://leetcode.com/problems/find-the-string-with-lcp",target:"_blank",rel:"noopener noreferrer"},edt=t("td",{style:{"text-align":"center"}},null,-1),ldt={style:{"text-align":"left"}},odt=t("code",null,"贪心",-1),ndt=t("code",null,"并查集",-1),sdt=t("code",null,"数组",-1),ddt=t("code",null,"3+",-1),_dt={style:{"text-align":"left"}},adt=t("td",{style:{"text-align":"center"}},"2581",-1),idt={style:{"text-align":"left"}},cdt={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},rdt=t("td",{style:{"text-align":"center"}},null,-1),hdt={style:{"text-align":"left"}},fdt=t("code",null,"树",-1),gdt=t("code",null,"深度优先搜索",-1),udt=t("code",null,"数组",-1),mdt=t("code",null,"2+",-1),ydt={style:{"text-align":"left"}},xdt=t("td",{style:{"text-align":"center"}},"2585",-1),pdt={style:{"text-align":"left"}},bdt={href:"https://leetcode.com/problems/number-of-ways-to-earn-points",target:"_blank",rel:"noopener noreferrer"},kdt=t("td",{style:{"text-align":"center"}},null,-1),Mdt={style:{"text-align":"left"}},Hdt=t("code",null,"数组",-1),Idt=t("code",null,"动态规划",-1),wdt={style:{"text-align":"left"}},vdt=t("td",{style:{"text-align":"center"}},"2597",-1),qdt={style:{"text-align":"left"}},zdt={href:"https://leetcode.com/problems/the-number-of-beautiful-subsets",target:"_blank",rel:"noopener noreferrer"},jdt=t("td",{style:{"text-align":"center"}},null,-1),Cdt={style:{"text-align":"left"}},Odt=t("code",null,"数组",-1),Ldt=t("code",null,"哈希表",-1),Edt=t("code",null,"数学",-1),Pdt=t("code",null,"4+",-1),Kdt={style:{"text-align":"left"}},Vdt=t("td",{style:{"text-align":"center"}},"2606",-1),Ndt={style:{"text-align":"left"}},Ddt={href:"https://leetcode.com/problems/find-the-substring-with-maximum-cost",target:"_blank",rel:"noopener noreferrer"},Bdt=t("td",{style:{"text-align":"center"}},null,-1),Ydt={style:{"text-align":"left"}},Adt=t("code",null,"数组",-1),Jdt=t("code",null,"哈希表",-1),Rdt=t("code",null,"字符串",-1),Sdt=t("code",null,"1+",-1),Udt={style:{"text-align":"left"}},Wdt=t("td",{style:{"text-align":"center"}},"2617",-1),Xdt={style:{"text-align":"left"}},Fdt={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Gdt=t("td",{style:{"text-align":"center"}},null,-1),Tdt={style:{"text-align":"left"}},Qdt=t("code",null,"栈",-1),Zdt=t("code",null,"广度优先搜索",-1),$dt=t("code",null,"并查集",-1),t_t=t("code",null,"5+",-1),e_t={style:{"text-align":"left"}},l_t=t("td",{style:{"text-align":"center"}},"2638",-1),o_t={style:{"text-align":"left"}},n_t={href:"https://leetcode.com/problems/count-the-number-of-k-free-subsets",target:"_blank",rel:"noopener noreferrer"},s_t=t("td",{style:{"text-align":"center"}},null,-1),d_t={style:{"text-align":"left"}},__t=t("code",null,"数组",-1),a_t=t("code",null,"数学",-1),i_t=t("code",null,"动态规划",-1),c_t=t("code",null,"2+",-1),r_t={style:{"text-align":"left"}},h_t=t("td",{style:{"text-align":"center"}},"2645",-1),f_t={style:{"text-align":"left"}},g_t={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},u_t=t("td",{style:{"text-align":"center"}},null,-1),m_t={style:{"text-align":"left"}},y_t=t("code",null,"栈",-1),x_t=t("code",null,"贪心",-1),p_t=t("code",null,"字符串",-1),b_t=t("code",null,"1+",-1),k_t={style:{"text-align":"left"}},M_t=t("td",{style:{"text-align":"center"}},"2646",-1),H_t={style:{"text-align":"left"}},I_t={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},w_t=t("td",{style:{"text-align":"center"}},null,-1),v_t={style:{"text-align":"left"}},q_t=t("code",null,"树",-1),z_t=t("code",null,"深度优先搜索",-1),j_t=t("code",null,"图",-1),C_t=t("code",null,"2+",-1),O_t={style:{"text-align":"left"}},L_t=t("td",{style:{"text-align":"center"}},"2673",-1),E_t={style:{"text-align":"left"}},P_t={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},K_t=t("td",{style:{"text-align":"center"}},null,-1),V_t={style:{"text-align":"left"}},N_t=t("code",null,"贪心",-1),D_t=t("code",null,"树",-1),B_t=t("code",null,"数组",-1),Y_t=t("code",null,"2+",-1),A_t={style:{"text-align":"left"}},J_t=t("td",{style:{"text-align":"center"}},"2681",-1),R_t={style:{"text-align":"left"}},S_t={href:"https://leetcode.com/problems/power-of-heroes",target:"_blank",rel:"noopener noreferrer"},U_t=t("td",{style:{"text-align":"center"}},null,-1),W_t={style:{"text-align":"left"}},X_t=t("code",null,"数组",-1),F_t=t("code",null,"数学",-1),G_t=t("code",null,"动态规划",-1),T_t=t("code",null,"2+",-1),Q_t={style:{"text-align":"left"}},Z_t=t("td",{style:{"text-align":"center"}},"2684",-1),$_t={style:{"text-align":"left"}},tat={href:"https://leetcode.com/problems/maximum-number-of-moves-in-a-grid",target:"_blank",rel:"noopener noreferrer"},eat={style:{"text-align":"center"}},lat={style:{"text-align":"left"}},oat=t("code",null,"数组",-1),nat=t("code",null,"动态规划",-1),sat=t("code",null,"矩阵",-1),dat={style:{"text-align":"left"}},_at=t("td",{style:{"text-align":"center"}},"2707",-1),aat={style:{"text-align":"left"}},iat={href:"https://leetcode.com/problems/extra-characters-in-a-string",target:"_blank",rel:"noopener noreferrer"},cat=t("td",{style:{"text-align":"center"}},null,-1),rat={style:{"text-align":"left"}},hat=t("code",null,"字典树",-1),fat=t("code",null,"数组",-1),gat=t("code",null,"哈希表",-1),uat=t("code",null,"2+",-1),mat={style:{"text-align":"left"}},yat=t("td",{style:{"text-align":"center"}},"2708",-1),xat={style:{"text-align":"left"}},pat={href:"https://leetcode.com/problems/maximum-strength-of-a-group",target:"_blank",rel:"noopener noreferrer"},bat=t("td",{style:{"text-align":"center"}},null,-1),kat={style:{"text-align":"left"}},Mat=t("code",null,"贪心",-1),Hat=t("code",null,"位运算",-1),Iat=t("code",null,"数组",-1),wat=t("code",null,"4+",-1),vat={style:{"text-align":"left"}},qat=t("td",{style:{"text-align":"center"}},"2712",-1),zat={style:{"text-align":"left"}},jat={href:"https://leetcode.com/problems/minimum-cost-to-make-all-characters-equal",target:"_blank",rel:"noopener noreferrer"},Cat=t("td",{style:{"text-align":"center"}},null,-1),Oat={style:{"text-align":"left"}},Lat=t("code",null,"贪心",-1),Eat=t("code",null,"字符串",-1),Pat=t("code",null,"动态规划",-1),Kat={style:{"text-align":"left"}},Vat=t("td",{style:{"text-align":"center"}},"2713",-1),Nat={style:{"text-align":"left"}},Dat={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Bat=t("td",{style:{"text-align":"center"}},null,-1),Yat={style:{"text-align":"left"}},Aat=t("code",null,"记忆化搜索",-1),Jat=t("code",null,"数组",-1),Rat=t("code",null,"哈希表",-1),Sat=t("code",null,"5+",-1),Uat={style:{"text-align":"left"}},Wat=t("td",{style:{"text-align":"center"}},"2719",-1),Xat={style:{"text-align":"left"}},Fat={href:"https://leetcode.com/problems/count-of-integers",target:"_blank",rel:"noopener noreferrer"},Gat=t("td",{style:{"text-align":"center"}},null,-1),Tat={style:{"text-align":"left"}},Qat=t("code",null,"数学",-1),Zat=t("code",null,"字符串",-1),$at=t("code",null,"动态规划",-1),tit={style:{"text-align":"left"}},eit=t("td",{style:{"text-align":"center"}},"2741",-1),lit={style:{"text-align":"left"}},oit={href:"https://leetcode.com/problems/special-permutations",target:"_blank",rel:"noopener noreferrer"},nit=t("td",{style:{"text-align":"center"}},null,-1),sit={style:{"text-align":"left"}},dit=t("code",null,"位运算",-1),_it=t("code",null,"数组",-1),ait=t("code",null,"动态规划",-1),iit=t("code",null,"1+",-1),cit={style:{"text-align":"left"}},rit=t("td",{style:{"text-align":"center"}},"2742",-1),hit={style:{"text-align":"left"}},fit={href:"https://leetcode.com/problems/painting-the-walls",target:"_blank",rel:"noopener noreferrer"},git=t("td",{style:{"text-align":"center"}},null,-1),uit={style:{"text-align":"left"}},mit=t("code",null,"数组",-1),yit=t("code",null,"动态规划",-1),xit={style:{"text-align":"left"}},pit=t("td",{style:{"text-align":"center"}},"2745",-1),bit={style:{"text-align":"left"}},kit={href:"https://leetcode.com/problems/construct-the-longest-new-string",target:"_blank",rel:"noopener noreferrer"},Mit=t("td",{style:{"text-align":"center"}},null,-1),Hit={style:{"text-align":"left"}},Iit=t("code",null,"贪心",-1),wit=t("code",null,"脑筋急转弯",-1),vit=t("code",null,"数学",-1),qit=t("code",null,"1+",-1),zit={style:{"text-align":"left"}},jit=t("td",{style:{"text-align":"center"}},"2746",-1),Cit={style:{"text-align":"left"}},Oit={href:"https://leetcode.com/problems/decremental-string-concatenation",target:"_blank",rel:"noopener noreferrer"},Lit=t("td",{style:{"text-align":"center"}},null,-1),Eit={style:{"text-align":"left"}},Pit=t("code",null,"数组",-1),Kit=t("code",null,"字符串",-1),Vit=t("code",null,"动态规划",-1),Nit={style:{"text-align":"left"}},Dit=t("td",{style:{"text-align":"center"}},"2750",-1),Bit={style:{"text-align":"left"}},Yit={href:"https://leetcode.com/problems/ways-to-split-array-into-good-subarrays",target:"_blank",rel:"noopener noreferrer"},Ait=t("td",{style:{"text-align":"center"}},null,-1),Jit={style:{"text-align":"left"}},Rit=t("code",null,"数组",-1),Sit=t("code",null,"数学",-1),Uit=t("code",null,"动态规划",-1),Wit={style:{"text-align":"left"}},Xit=t("td",{style:{"text-align":"center"}},"2767",-1),Fit={style:{"text-align":"left"}},Git={href:"https://leetcode.com/problems/partition-string-into-minimum-beautiful-substrings",target:"_blank",rel:"noopener noreferrer"},Tit=t("td",{style:{"text-align":"center"}},null,-1),Qit={style:{"text-align":"left"}},Zit=t("code",null,"哈希表",-1),$it=t("code",null,"字符串",-1),tct=t("code",null,"动态规划",-1),ect=t("code",null,"1+",-1),lct={style:{"text-align":"left"}},oct=t("td",{style:{"text-align":"center"}},"2770",-1),nct={style:{"text-align":"left"}},sct={href:"https://leetcode.com/problems/maximum-number-of-jumps-to-reach-the-last-index",target:"_blank",rel:"noopener noreferrer"},dct=t("td",{style:{"text-align":"center"}},null,-1),_ct={style:{"text-align":"left"}},act=t("code",null,"数组",-1),ict=t("code",null,"动态规划",-1),cct={style:{"text-align":"left"}},rct=t("td",{style:{"text-align":"center"}},"2771",-1),hct={style:{"text-align":"left"}},fct={href:"https://leetcode.com/problems/longest-non-decreasing-subarray-from-two-arrays",target:"_blank",rel:"noopener noreferrer"},gct=t("td",{style:{"text-align":"center"}},null,-1),uct={style:{"text-align":"left"}},mct=t("code",null,"数组",-1),yct=t("code",null,"动态规划",-1),xct={style:{"text-align":"left"}},pct=t("td",{style:{"text-align":"center"}},"2786",-1),bct={style:{"text-align":"left"}},kct={href:"https://leetcode.com/problems/visit-array-positions-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},Mct=t("td",{style:{"text-align":"center"}},null,-1),Hct={style:{"text-align":"left"}},Ict=t("code",null,"数组",-1),wct=t("code",null,"动态规划",-1),vct={style:{"text-align":"left"}},qct=t("td",{style:{"text-align":"center"}},"2787",-1),zct={style:{"text-align":"left"}},jct={href:"https://leetcode.com/problems/ways-to-express-an-integer-as-sum-of-powers",target:"_blank",rel:"noopener noreferrer"},Cct=t("td",{style:{"text-align":"center"}},null,-1),Oct={style:{"text-align":"left"}},Lct=t("code",null,"动态规划",-1),Ect={style:{"text-align":"left"}},Pct=t("td",{style:{"text-align":"center"}},"2791",-1),Kct={style:{"text-align":"left"}},Vct={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Nct=t("td",{style:{"text-align":"center"}},null,-1),Dct={style:{"text-align":"left"}},Bct=t("code",null,"位运算",-1),Yct=t("code",null,"树",-1),Act=t("code",null,"深度优先搜索",-1),Jct=t("code",null,"2+",-1),Rct={style:{"text-align":"left"}},Sct=t("td",{style:{"text-align":"center"}},"2801",-1),Uct={style:{"text-align":"left"}},Wct={href:"https://leetcode.com/problems/count-stepping-numbers-in-range",target:"_blank",rel:"noopener noreferrer"},Xct=t("td",{style:{"text-align":"center"}},null,-1),Fct={style:{"text-align":"left"}},Gct=t("code",null,"字符串",-1),Tct=t("code",null,"动态规划",-1),Qct={style:{"text-align":"left"}},Zct=t("td",{style:{"text-align":"center"}},"2809",-1),$ct={style:{"text-align":"left"}},trt={href:"https://leetcode.com/problems/minimum-time-to-make-array-sum-at-most-x",target:"_blank",rel:"noopener noreferrer"},ert=t("td",{style:{"text-align":"center"}},null,-1),lrt={style:{"text-align":"left"}},ort=t("code",null,"数组",-1),nrt=t("code",null,"动态规划",-1),srt=t("code",null,"排序",-1),drt={style:{"text-align":"left"}},_rt=t("td",{style:{"text-align":"center"}},"2811",-1),art={style:{"text-align":"left"}},irt={href:"https://leetcode.com/problems/check-if-it-is-possible-to-split-array",target:"_blank",rel:"noopener noreferrer"},crt=t("td",{style:{"text-align":"center"}},null,-1),rrt={style:{"text-align":"left"}},hrt=t("code",null,"贪心",-1),frt=t("code",null,"数组",-1),grt=t("code",null,"动态规划",-1),urt={style:{"text-align":"left"}},mrt=t("td",{style:{"text-align":"center"}},"2826",-1),yrt={style:{"text-align":"left"}},xrt={href:"https://leetcode.com/problems/sorting-three-groups",target:"_blank",rel:"noopener noreferrer"},prt=t("td",{style:{"text-align":"center"}},null,-1),brt={style:{"text-align":"left"}},krt=t("code",null,"数组",-1),Mrt=t("code",null,"二分查找",-1),Hrt=t("code",null,"动态规划",-1),Irt={style:{"text-align":"left"}},wrt=t("td",{style:{"text-align":"center"}},"2827",-1),vrt={style:{"text-align":"left"}},qrt={href:"https://leetcode.com/problems/number-of-beautiful-integers-in-the-range",target:"_blank",rel:"noopener noreferrer"},zrt=t("td",{style:{"text-align":"center"}},null,-1),jrt={style:{"text-align":"left"}},Crt=t("code",null,"数学",-1),Ort=t("code",null,"动态规划",-1),Lrt={style:{"text-align":"left"}},Ert=t("td",{style:{"text-align":"center"}},"2830",-1),Prt={style:{"text-align":"left"}},Krt={href:"https://leetcode.com/problems/maximize-the-profit-as-the-salesman",target:"_blank",rel:"noopener noreferrer"},Vrt=t("td",{style:{"text-align":"center"}},null,-1),Nrt={style:{"text-align":"left"}},Drt=t("code",null,"数组",-1),Brt=t("code",null,"哈希表",-1),Yrt=t("code",null,"二分查找",-1),Art=t("code",null,"2+",-1),Jrt={style:{"text-align":"left"}},Rrt=t("td",{style:{"text-align":"center"}},"2836",-1),Srt={style:{"text-align":"left"}},Urt={href:"https://leetcode.com/problems/maximize-value-of-function-in-a-ball-passing-game",target:"_blank",rel:"noopener noreferrer"},Wrt=t("td",{style:{"text-align":"center"}},null,-1),Xrt={style:{"text-align":"left"}},Frt=t("code",null,"位运算",-1),Grt=t("code",null,"数组",-1),Trt=t("code",null,"动态规划",-1),Qrt={style:{"text-align":"left"}},Zrt=t("td",{style:{"text-align":"center"}},"2850",-1),$rt={style:{"text-align":"left"}},tht={href:"https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid",target:"_blank",rel:"noopener noreferrer"},eht=t("td",{style:{"text-align":"center"}},null,-1),lht={style:{"text-align":"left"}},oht=t("code",null,"广度优先搜索",-1),nht=t("code",null,"数组",-1),sht=t("code",null,"动态规划",-1),dht=t("code",null,"1+",-1),_ht={style:{"text-align":"left"}},aht=t("td",{style:{"text-align":"center"}},"2851",-1),iht={style:{"text-align":"left"}},cht={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},rht=t("td",{style:{"text-align":"center"}},null,-1),hht={style:{"text-align":"left"}},fht=t("code",null,"数学",-1),ght=t("code",null,"字符串",-1),uht=t("code",null,"动态规划",-1),mht=t("code",null,"1+",-1),yht={style:{"text-align":"left"}},xht=t("td",{style:{"text-align":"center"}},"2858",-1),pht={style:{"text-align":"left"}},bht={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},kht=t("td",{style:{"text-align":"center"}},null,-1),Mht={style:{"text-align":"left"}},Hht=t("code",null,"深度优先搜索",-1),Iht=t("code",null,"广度优先搜索",-1),wht=t("code",null,"图",-1),vht=t("code",null,"1+",-1),qht={style:{"text-align":"left"}},zht=t("td",{style:{"text-align":"center"}},"2867",-1),jht={style:{"text-align":"left"}},Cht={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Oht=t("td",{style:{"text-align":"center"}},null,-1),Lht={style:{"text-align":"left"}},Eht=t("code",null,"树",-1),Pht=t("code",null,"深度优先搜索",-1),Kht=t("code",null,"数学",-1),Vht=t("code",null,"2+",-1),Nht={style:{"text-align":"left"}},Dht=t("td",{style:{"text-align":"center"}},"2876",-1),Bht={style:{"text-align":"left"}},Yht={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},Aht=t("td",{style:{"text-align":"center"}},null,-1),Jht={style:{"text-align":"left"}},Rht=t("code",null,"图",-1),Sht=t("code",null,"记忆化搜索",-1),Uht=t("code",null,"动态规划",-1),Wht={style:{"text-align":"left"}},Xht=t("td",{style:{"text-align":"center"}},"2892",-1),Fht={style:{"text-align":"left"}},Ght={href:"https://leetcode.com/problems/minimizing-array-after-replacing-pairs-with-their-product",target:"_blank",rel:"noopener noreferrer"},Tht=t("td",{style:{"text-align":"center"}},null,-1),Qht={style:{"text-align":"left"}},Zht=t("code",null,"贪心",-1),$ht=t("code",null,"数组",-1),t1t=t("code",null,"动态规划",-1),e1t={style:{"text-align":"left"}},l1t=t("td",{style:{"text-align":"center"}},"2896",-1),o1t={style:{"text-align":"left"}},n1t={href:"https://leetcode.com/problems/apply-operations-to-make-two-strings-equal",target:"_blank",rel:"noopener noreferrer"},s1t=t("td",{style:{"text-align":"center"}},null,-1),d1t={style:{"text-align":"left"}},_1t=t("code",null,"字符串",-1),a1t=t("code",null,"动态规划",-1),i1t={style:{"text-align":"left"}},c1t=t("td",{style:{"text-align":"center"}},"2900",-1),r1t={style:{"text-align":"left"}},h1t={href:"https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-i",target:"_blank",rel:"noopener noreferrer"},f1t=t("td",{style:{"text-align":"center"}},null,-1),g1t={style:{"text-align":"left"}},u1t=t("code",null,"贪心",-1),m1t=t("code",null,"数组",-1),y1t=t("code",null,"字符串",-1),x1t=t("code",null,"1+",-1),p1t={style:{"text-align":"left"}},b1t=t("td",{style:{"text-align":"center"}},"2901",-1),k1t={style:{"text-align":"left"}},M1t={href:"https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},H1t=t("td",{style:{"text-align":"center"}},null,-1),I1t={style:{"text-align":"left"}},w1t=t("code",null,"数组",-1),v1t=t("code",null,"字符串",-1),q1t=t("code",null,"动态规划",-1),z1t={style:{"text-align":"left"}},j1t=t("td",{style:{"text-align":"center"}},"2902",-1),C1t={style:{"text-align":"left"}},O1t={href:"https://leetcode.com/problems/count-of-sub-multisets-with-bounded-sum",target:"_blank",rel:"noopener noreferrer"},L1t=t("td",{style:{"text-align":"center"}},null,-1),E1t={style:{"text-align":"left"}},P1t=t("code",null,"数组",-1),K1t=t("code",null,"哈希表",-1),V1t=t("code",null,"动态规划",-1),N1t=t("code",null,"1+",-1),D1t={style:{"text-align":"left"}},B1t=t("td",{style:{"text-align":"center"}},"2911",-1),Y1t={style:{"text-align":"left"}},A1t={href:"https://leetcode.com/problems/minimum-changes-to-make-k-semi-palindromes",target:"_blank",rel:"noopener noreferrer"},J1t=t("td",{style:{"text-align":"center"}},null,-1),R1t={style:{"text-align":"left"}},S1t=t("code",null,"双指针",-1),U1t=t("code",null,"字符串",-1),W1t=t("code",null,"动态规划",-1),X1t={style:{"text-align":"left"}},F1t=t("td",{style:{"text-align":"center"}},"2912",-1),G1t={style:{"text-align":"left"}},T1t={href:"https://leetcode.com/problems/number-of-ways-to-reach-destination-in-the-grid",target:"_blank",rel:"noopener noreferrer"},Q1t=t("td",{style:{"text-align":"center"}},null,-1),Z1t={style:{"text-align":"left"}},$1t=t("code",null,"数学",-1),tft=t("code",null,"动态规划",-1),eft=t("code",null,"组合数学",-1),lft={style:{"text-align":"left"}},oft=t("td",{style:{"text-align":"center"}},"2915",-1),nft={style:{"text-align":"left"}},sft={href:"https://leetcode.com/problems/length-of-the-longest-subsequence-that-sums-to-target",target:"_blank",rel:"noopener noreferrer"},dft=t("td",{style:{"text-align":"center"}},null,-1),_ft={style:{"text-align":"left"}},aft=t("code",null,"数组",-1),ift=t("code",null,"动态规划",-1),cft={style:{"text-align":"left"}},rft=t("td",{style:{"text-align":"center"}},"2916",-1),hft={style:{"text-align":"left"}},fft={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},gft=t("td",{style:{"text-align":"center"}},null,-1),uft={style:{"text-align":"left"}},mft=t("code",null,"树状数组",-1),yft=t("code",null,"线段树",-1),xft=t("code",null,"数组",-1),pft=t("code",null,"1+",-1),bft={style:{"text-align":"left"}},kft=t("td",{style:{"text-align":"center"}},"2919",-1),Mft={style:{"text-align":"left"}},Hft={href:"https://leetcode.com/problems/minimum-increment-operations-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},Ift=t("td",{style:{"text-align":"center"}},null,-1),wft={style:{"text-align":"left"}},vft=t("code",null,"数组",-1),qft=t("code",null,"动态规划",-1),zft={style:{"text-align":"left"}},jft=t("td",{style:{"text-align":"center"}},"2920",-1),Cft={style:{"text-align":"left"}},Oft={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},Lft=t("td",{style:{"text-align":"center"}},null,-1),Eft={style:{"text-align":"left"}},Pft=t("code",null,"位运算",-1),Kft=t("code",null,"树",-1),Vft=t("code",null,"深度优先搜索",-1),Nft=t("code",null,"2+",-1),Dft={style:{"text-align":"left"}},Bft=t("td",{style:{"text-align":"center"}},"2925",-1),Yft={style:{"text-align":"left"}},Aft={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},Jft=t("td",{style:{"text-align":"center"}},null,-1),Rft={style:{"text-align":"left"}},Sft=t("code",null,"树",-1),Uft=t("code",null,"深度优先搜索",-1),Wft=t("code",null,"动态规划",-1),Xft={style:{"text-align":"left"}},Fft=t("td",{style:{"text-align":"center"}},"2926",-1),Gft={style:{"text-align":"left"}},Tft={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},Qft=t("td",{style:{"text-align":"center"}},null,-1),Zft={style:{"text-align":"left"}},$ft=t("code",null,"树状数组",-1),tgt=t("code",null,"线段树",-1),egt=t("code",null,"数组",-1),lgt=t("code",null,"2+",-1),ogt={style:{"text-align":"left"}},ngt=t("td",{style:{"text-align":"center"}},"2930",-1),sgt={style:{"text-align":"left"}},dgt={href:"https://leetcode.com/problems/number-of-strings-which-can-be-rearranged-to-contain-substring",target:"_blank",rel:"noopener noreferrer"},_gt=t("td",{style:{"text-align":"center"}},null,-1),agt={style:{"text-align":"left"}},igt=t("code",null,"数学",-1),cgt=t("code",null,"动态规划",-1),rgt=t("code",null,"组合数学",-1),hgt={style:{"text-align":"left"}},fgt=t("td",{style:{"text-align":"center"}},"2944",-1),ggt={style:{"text-align":"left"}},ugt={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},mgt=t("td",{style:{"text-align":"center"}},null,-1),ygt={style:{"text-align":"left"}},xgt=t("code",null,"队列",-1),pgt=t("code",null,"数组",-1),bgt=t("code",null,"动态规划",-1),kgt=t("code",null,"2+",-1),Mgt={style:{"text-align":"left"}},Hgt=t("td",{style:{"text-align":"center"}},"2945",-1),Igt={style:{"text-align":"left"}},wgt={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},vgt=t("td",{style:{"text-align":"center"}},null,-1),qgt={style:{"text-align":"left"}},zgt=t("code",null,"栈",-1),jgt=t("code",null,"队列",-1),Cgt=t("code",null,"数组",-1),Ogt=t("code",null,"4+",-1),Lgt={style:{"text-align":"left"}},Egt=t("td",{style:{"text-align":"center"}},"2957",-1),Pgt={style:{"text-align":"left"}},Kgt={href:"https://leetcode.com/problems/remove-adjacent-almost-equal-characters",target:"_blank",rel:"noopener noreferrer"},Vgt=t("td",{style:{"text-align":"center"}},null,-1),Ngt={style:{"text-align":"left"}},Dgt=t("code",null,"贪心",-1),Bgt=t("code",null,"字符串",-1),Ygt=t("code",null,"动态规划",-1),Agt={style:{"text-align":"left"}},Jgt=t("td",{style:{"text-align":"center"}},"2969",-1),Rgt={style:{"text-align":"left"}},Sgt={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},Ugt=t("td",{style:{"text-align":"center"}},null,-1),Wgt={style:{"text-align":"left"}},Xgt=t("code",null,"队列",-1),Fgt=t("code",null,"数组",-1),Ggt=t("code",null,"动态规划",-1),Tgt=t("code",null,"2+",-1),Qgt={style:{"text-align":"left"}},Zgt=t("td",{style:{"text-align":"center"}},"2973",-1),$gt={style:{"text-align":"left"}},tut={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},eut=t("td",{style:{"text-align":"center"}},null,-1),lut={style:{"text-align":"left"}},out=t("code",null,"树",-1),nut=t("code",null,"深度优先搜索",-1),sut=t("code",null,"动态规划",-1),dut=t("code",null,"2+",-1),_ut={style:{"text-align":"left"}},aut=t("td",{style:{"text-align":"center"}},"2977",-1),iut={style:{"text-align":"left"}},cut={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},rut=t("td",{style:{"text-align":"center"}},null,-1),hut={style:{"text-align":"left"}},fut=t("code",null,"图",-1),gut=t("code",null,"字典树",-1),uut=t("code",null,"数组",-1),mut=t("code",null,"3+",-1),yut={style:{"text-align":"left"}},xut=t("td",{style:{"text-align":"center"}},"2979",-1),put={style:{"text-align":"left"}},but={href:"https://leetcode.com/problems/most-expensive-item-that-can-not-be-bought",target:"_blank",rel:"noopener noreferrer"},kut=t("td",{style:{"text-align":"center"}},null,-1),Mut={style:{"text-align":"left"}},Hut=t("code",null,"数学",-1),Iut=t("code",null,"动态规划",-1),wut=t("code",null,"数论",-1),vut={style:{"text-align":"left"}},qut=t("td",{style:{"text-align":"center"}},"2992",-1),zut={style:{"text-align":"left"}},jut={href:"https://leetcode.com/problems/number-of-self-divisible-permutations",target:"_blank",rel:"noopener noreferrer"},Cut=t("td",{style:{"text-align":"center"}},null,-1),Out={style:{"text-align":"left"}},Lut=t("code",null,"位运算",-1),Eut=t("code",null,"数组",-1),Put=t("code",null,"动态规划",-1),Kut=t("code",null,"2+",-1),Vut={style:{"text-align":"left"}},Nut=t("td",{style:{"text-align":"center"}},"2998",-1),Dut={style:{"text-align":"left"}},But={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},Yut=t("td",{style:{"text-align":"center"}},null,-1),Aut={style:{"text-align":"left"}},Jut=t("code",null,"广度优先搜索",-1),Rut=t("code",null,"记忆化搜索",-1),Sut=t("code",null,"动态规划",-1),Uut={style:{"text-align":"left"}},Wut=t("td",{style:{"text-align":"center"}},"2999",-1),Xut={style:{"text-align":"left"}},Fut={href:"https://leetcode.com/problems/count-the-number-of-powerful-integers",target:"_blank",rel:"noopener noreferrer"},Gut=t("td",{style:{"text-align":"center"}},null,-1),Tut={style:{"text-align":"left"}},Qut=t("code",null,"数学",-1),Zut=t("code",null,"字符串",-1),$ut=t("code",null,"动态规划",-1),tmt={style:{"text-align":"left"}},emt=t("td",{style:{"text-align":"center"}},"3003",-1),lmt={style:{"text-align":"left"}},omt={href:"https://leetcode.com/problems/maximize-the-number-of-partitions-after-operations",target:"_blank",rel:"noopener noreferrer"},nmt=t("td",{style:{"text-align":"center"}},null,-1),smt={style:{"text-align":"left"}},dmt=t("code",null,"位运算",-1),_mt=t("code",null,"字符串",-1),amt=t("code",null,"动态规划",-1),imt=t("code",null,"1+",-1),cmt={style:{"text-align":"left"}},rmt=t("td",{style:{"text-align":"center"}},"3004",-1),hmt={style:{"text-align":"left"}},fmt={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},gmt=t("td",{style:{"text-align":"center"}},null,-1),umt={style:{"text-align":"left"}},mmt=t("code",null,"树",-1),ymt=t("code",null,"深度优先搜索",-1),xmt=t("code",null,"数组",-1),pmt=t("code",null,"1+",-1),bmt={style:{"text-align":"left"}},kmt=t("td",{style:{"text-align":"center"}},"3007",-1),Mmt={style:{"text-align":"left"}},Hmt={href:"https://leetcode.com/problems/maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},Imt=t("td",{style:{"text-align":"center"}},null,-1),wmt={style:{"text-align":"left"}},vmt=t("code",null,"位运算",-1),qmt=t("code",null,"二分查找",-1),zmt=t("code",null,"动态规划",-1),jmt={style:{"text-align":"left"}},Cmt=t("td",{style:{"text-align":"center"}},"3018",-1),Omt={style:{"text-align":"left"}},Lmt={href:"https://leetcode.com/problems/maximum-number-of-removal-queries-that-can-be-processed-i",target:"_blank",rel:"noopener noreferrer"},Emt=t("td",{style:{"text-align":"center"}},null,-1),Pmt={style:{"text-align":"left"}},Kmt=t("code",null,"数组",-1),Vmt=t("code",null,"动态规划",-1),Nmt={style:{"text-align":"left"}},Dmt=t("td",{style:{"text-align":"center"}},"3032",-1),Bmt={style:{"text-align":"left"}},Ymt={href:"https://leetcode.com/problems/count-numbers-with-unique-digits-ii",target:"_blank",rel:"noopener noreferrer"},Amt=t("td",{style:{"text-align":"center"}},null,-1),Jmt={style:{"text-align":"left"}},Rmt=t("code",null,"哈希表",-1),Smt=t("code",null,"数学",-1),Umt=t("code",null,"动态规划",-1),Wmt={style:{"text-align":"left"}},Xmt=t("td",{style:{"text-align":"center"}},"3040",-1),Fmt={style:{"text-align":"left"}},Gmt={href:"https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},Tmt=t("td",{style:{"text-align":"center"}},null,-1),Qmt={style:{"text-align":"left"}},Zmt=t("code",null,"记忆化搜索",-1),$mt=t("code",null,"数组",-1),tyt=t("code",null,"动态规划",-1),eyt={style:{"text-align":"left"}},lyt=t("td",{style:{"text-align":"center"}},"3041",-1),oyt={style:{"text-align":"left"}},nyt={href:"https://leetcode.com/problems/maximize-consecutive-elements-in-an-array-after-modification",target:"_blank",rel:"noopener noreferrer"},syt=t("td",{style:{"text-align":"center"}},null,-1),dyt={style:{"text-align":"left"}},_yt=t("code",null,"数组",-1),ayt=t("code",null,"动态规划",-1),iyt=t("code",null,"排序",-1),cyt={style:{"text-align":"left"}},ryt=t("td",{style:{"text-align":"center"}},"3068",-1),hyt={style:{"text-align":"left"}},fyt={href:"https://leetcode.com/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},gyt=t("td",{style:{"text-align":"center"}},null,-1),uyt={style:{"text-align":"left"}},myt=t("code",null,"贪心",-1),yyt=t("code",null,"位运算",-1),xyt=t("code",null,"树",-1),pyt=t("code",null,"3+",-1),byt={style:{"text-align":"left"}},kyt=t("td",{style:{"text-align":"center"}},"3077",-1),Myt={style:{"text-align":"left"}},Hyt={href:"https://leetcode.com/problems/maximum-strength-of-k-disjoint-subarrays",target:"_blank",rel:"noopener noreferrer"},Iyt=t("td",{style:{"text-align":"center"}},null,-1),wyt={style:{"text-align":"left"}},vyt=t("code",null,"数组",-1),qyt=t("code",null,"动态规划",-1),zyt=t("code",null,"前缀和",-1),jyt={style:{"text-align":"left"}},Cyt=t("td",{style:{"text-align":"center"}},"3082",-1),Oyt={style:{"text-align":"left"}},Lyt={href:"https://leetcode.com/problems/find-the-sum-of-the-power-of-all-subsequences",target:"_blank",rel:"noopener noreferrer"},Eyt=t("td",{style:{"text-align":"center"}},null,-1),Pyt={style:{"text-align":"left"}},Kyt=t("code",null,"数组",-1),Vyt=t("code",null,"动态规划",-1),Nyt={style:{"text-align":"left"}},Dyt=t("td",{style:{"text-align":"center"}},"3098",-1),Byt={style:{"text-align":"left"}},Yyt={href:"https://leetcode.com/problems/find-the-sum-of-subsequence-powers",target:"_blank",rel:"noopener noreferrer"},Ayt=t("td",{style:{"text-align":"center"}},null,-1),Jyt={style:{"text-align":"left"}},Ryt=t("code",null,"数组",-1),Syt=t("code",null,"动态规划",-1),Uyt=t("code",null,"排序",-1),Wyt={style:{"text-align":"left"}},Xyt=t("td",{style:{"text-align":"center"}},"3117",-1),Fyt={style:{"text-align":"left"}},Gyt={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},Tyt=t("td",{style:{"text-align":"center"}},null,-1),Qyt={style:{"text-align":"left"}},Zyt=t("code",null,"位运算",-1),$yt=t("code",null,"线段树",-1),t3t=t("code",null,"队列",-1),e3t=t("code",null,"3+",-1),l3t={style:{"text-align":"left"}},o3t=t("td",{style:{"text-align":"center"}},"3122",-1),n3t={style:{"text-align":"left"}},s3t={href:"https://leetcode.com/problems/minimum-number-of-operations-to-satisfy-conditions",target:"_blank",rel:"noopener noreferrer"},d3t=t("td",{style:{"text-align":"center"}},null,-1),_3t={style:{"text-align":"left"}},a3t=t("code",null,"数组",-1),i3t=t("code",null,"动态规划",-1),c3t=t("code",null,"矩阵",-1),r3t={style:{"text-align":"left"}},h3t=t("td",{style:{"text-align":"center"}},"3129",-1),f3t={style:{"text-align":"left"}},g3t={href:"https://leetcode.com/problems/find-all-possible-stable-binary-arrays-i",target:"_blank",rel:"noopener noreferrer"},u3t=t("td",{style:{"text-align":"center"}},null,-1),m3t={style:{"text-align":"left"}},y3t=t("code",null,"动态规划",-1),x3t=t("code",null,"前缀和",-1),p3t={style:{"text-align":"left"}},b3t=t("td",{style:{"text-align":"center"}},"3130",-1),k3t={style:{"text-align":"left"}},M3t={href:"https://leetcode.com/problems/find-all-possible-stable-binary-arrays-ii",target:"_blank",rel:"noopener noreferrer"},H3t=t("td",{style:{"text-align":"center"}},null,-1),I3t={style:{"text-align":"left"}},w3t=t("code",null,"动态规划",-1),v3t=t("code",null,"前缀和",-1),q3t={style:{"text-align":"left"}},z3t=t("td",{style:{"text-align":"center"}},"3135",-1),j3t={style:{"text-align":"left"}},C3t={href:"https://leetcode.com/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},O3t=t("td",{style:{"text-align":"center"}},null,-1),L3t={style:{"text-align":"left"}},E3t=t("code",null,"字符串",-1),P3t=t("code",null,"二分查找",-1),K3t=t("code",null,"动态规划",-1),V3t=t("code",null,"2+",-1),N3t={style:{"text-align":"left"}},D3t=t("td",{style:{"text-align":"center"}},"3144",-1),B3t={style:{"text-align":"left"}},Y3t={href:"https://leetcode.com/problems/minimum-substring-partition-of-equal-character-frequency",target:"_blank",rel:"noopener noreferrer"},A3t=t("td",{style:{"text-align":"center"}},null,-1),J3t={style:{"text-align":"left"}},R3t=t("code",null,"哈希表",-1),S3t=t("code",null,"字符串",-1),U3t=t("code",null,"动态规划",-1),W3t=t("code",null,"1+",-1),X3t={style:{"text-align":"left"}},F3t=t("td",{style:{"text-align":"center"}},"3148",-1),G3t={style:{"text-align":"left"}},T3t={href:"https://leetcode.com/problems/maximum-difference-score-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Q3t=t("td",{style:{"text-align":"center"}},null,-1),Z3t={style:{"text-align":"left"}},$3t=t("code",null,"数组",-1),txt=t("code",null,"动态规划",-1),ext=t("code",null,"矩阵",-1),lxt={style:{"text-align":"left"}},oxt=t("td",{style:{"text-align":"center"}},"3149",-1),nxt={style:{"text-align":"left"}},sxt={href:"https://leetcode.com/problems/find-the-minimum-cost-array-permutation",target:"_blank",rel:"noopener noreferrer"},dxt=t("td",{style:{"text-align":"center"}},null,-1),_xt={style:{"text-align":"left"}},axt=t("code",null,"位运算",-1),ixt=t("code",null,"数组",-1),cxt=t("code",null,"动态规划",-1),rxt=t("code",null,"1+",-1),hxt={style:{"text-align":"left"}},fxt=t("td",{style:{"text-align":"center"}},"3154",-1),gxt={style:{"text-align":"left"}},uxt={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},mxt=t("td",{style:{"text-align":"center"}},null,-1),yxt={style:{"text-align":"left"}},xxt=t("code",null,"位运算",-1),pxt=t("code",null,"记忆化搜索",-1),bxt=t("code",null,"数学",-1),kxt=t("code",null,"2+",-1),Mxt={style:{"text-align":"left"}},Hxt=t("td",{style:{"text-align":"center"}},"3165",-1),Ixt={style:{"text-align":"left"}},wxt={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},vxt=t("td",{style:{"text-align":"center"}},null,-1),qxt={style:{"text-align":"left"}},zxt=t("code",null,"线段树",-1),jxt=t("code",null,"数组",-1),Cxt=t("code",null,"分治",-1),Oxt=t("code",null,"1+",-1),Lxt={style:{"text-align":"left"}},Ext=t("td",{style:{"text-align":"center"}},"3176",-1),Pxt={style:{"text-align":"left"}},Kxt={href:"https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-i",target:"_blank",rel:"noopener noreferrer"},Vxt=t("td",{style:{"text-align":"center"}},null,-1),Nxt={style:{"text-align":"left"}},Dxt=t("code",null,"数组",-1),Bxt=t("code",null,"哈希表",-1),Yxt=t("code",null,"动态规划",-1),Axt={style:{"text-align":"left"}},Jxt=t("td",{style:{"text-align":"center"}},"3177",-1),Rxt={style:{"text-align":"left"}},Sxt={href:"https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Uxt=t("td",{style:{"text-align":"center"}},null,-1),Wxt={style:{"text-align":"left"}},Xxt=t("code",null,"数组",-1),Fxt=t("code",null,"哈希表",-1),Gxt=t("code",null,"动态规划",-1),Txt={style:{"text-align":"left"}},Qxt=t("td",{style:{"text-align":"center"}},"3180",-1),Zxt={style:{"text-align":"left"}},$xt={href:"https://leetcode.com/problems/maximum-total-reward-using-operations-i",target:"_blank",rel:"noopener noreferrer"},t4t=t("td",{style:{"text-align":"center"}},null,-1),e4t={style:{"text-align":"left"}},l4t=t("code",null,"数组",-1),o4t=t("code",null,"动态规划",-1),n4t={style:{"text-align":"left"}},s4t=t("td",{style:{"text-align":"center"}},"3181",-1),d4t={style:{"text-align":"left"}},_4t={href:"https://leetcode.com/problems/maximum-total-reward-using-operations-ii",target:"_blank",rel:"noopener noreferrer"},a4t=t("td",{style:{"text-align":"center"}},null,-1),i4t={style:{"text-align":"left"}},c4t=t("code",null,"位运算",-1),r4t=t("code",null,"数组",-1),h4t=t("code",null,"动态规划",-1),f4t={style:{"text-align":"left"}},g4t=t("td",{style:{"text-align":"center"}},"3183",-1),u4t={style:{"text-align":"left"}},m4t={href:"https://leetcode.com/problems/the-number-of-ways-to-make-the-sum",target:"_blank",rel:"noopener noreferrer"},y4t=t("td",{style:{"text-align":"center"}},null,-1),x4t={style:{"text-align":"left"}},p4t=t("code",null,"数组",-1),b4t=t("code",null,"动态规划",-1),k4t={style:{"text-align":"left"}},M4t=t("td",{style:{"text-align":"center"}},"3186",-1),H4t={style:{"text-align":"left"}},I4t={href:"https://leetcode.com/problems/maximum-total-damage-with-spell-casting",target:"_blank",rel:"noopener noreferrer"},w4t=t("td",{style:{"text-align":"center"}},null,-1),v4t={style:{"text-align":"left"}},q4t=t("code",null,"数组",-1),z4t=t("code",null,"哈希表",-1),j4t=t("code",null,"双指针",-1),C4t=t("code",null,"4+",-1),O4t={style:{"text-align":"left"}},L4t=t("td",{style:{"text-align":"center"}},"3192",-1),E4t={style:{"text-align":"left"}},P4t={href:"https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-ii",target:"_blank",rel:"noopener noreferrer"},K4t=t("td",{style:{"text-align":"center"}},null,-1),V4t={style:{"text-align":"left"}},N4t=t("code",null,"贪心",-1),D4t=t("code",null,"数组",-1),B4t=t("code",null,"动态规划",-1),Y4t={style:{"text-align":"left"}},A4t=t("td",{style:{"text-align":"center"}},"3193",-1),J4t={style:{"text-align":"left"}},R4t={href:"https://leetcode.com/problems/count-the-number-of-inversions",target:"_blank",rel:"noopener noreferrer"},S4t=t("td",{style:{"text-align":"center"}},null,-1),U4t={style:{"text-align":"left"}},W4t=t("code",null,"数组",-1),X4t=t("code",null,"动态规划",-1),F4t={style:{"text-align":"left"}},G4t=t("td",{style:{"text-align":"center"}},"3196",-1),T4t={style:{"text-align":"left"}},Q4t={href:"https://leetcode.com/problems/maximize-total-cost-of-alternating-subarrays",target:"_blank",rel:"noopener noreferrer"},Z4t=t("td",{style:{"text-align":"center"}},null,-1),$4t={style:{"text-align":"left"}},t2t=t("code",null,"数组",-1),e2t=t("code",null,"动态规划",-1),l2t={style:{"text-align":"left"}},o2t=t("td",{style:{"text-align":"center"}},"3201",-1),n2t={style:{"text-align":"left"}},s2t={href:"https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-i",target:"_blank",rel:"noopener noreferrer"},d2t=t("td",{style:{"text-align":"center"}},null,-1),_2t={style:{"text-align":"left"}},a2t=t("code",null,"数组",-1),i2t=t("code",null,"动态规划",-1),c2t={style:{"text-align":"left"}},r2t=t("td",{style:{"text-align":"center"}},"3202",-1),h2t={style:{"text-align":"left"}},f2t={href:"https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},g2t=t("td",{style:{"text-align":"center"}},null,-1),u2t={style:{"text-align":"left"}},m2t=t("code",null,"数组",-1),y2t=t("code",null,"动态规划",-1),x2t={style:{"text-align":"left"}},p2t=t("td",{style:{"text-align":"center"}},"3205",-1),b2t={style:{"text-align":"left"}},k2t={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},M2t=t("td",{style:{"text-align":"center"}},null,-1),H2t={style:{"text-align":"left"}},I2t=t("code",null,"栈",-1),w2t=t("code",null,"贪心",-1),v2t=t("code",null,"数组",-1),q2t=t("code",null,"2+",-1),z2t={style:{"text-align":"left"}},j2t=t("td",{style:{"text-align":"center"}},"3213",-1),C2t={style:{"text-align":"left"}},O2t={href:"https://leetcode.com/problems/construct-string-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},L2t=t("td",{style:{"text-align":"center"}},null,-1),E2t={style:{"text-align":"left"}},P2t=t("code",null,"数组",-1),K2t=t("code",null,"字符串",-1),V2t=t("code",null,"动态规划",-1),N2t=t("code",null,"1+",-1),D2t={style:{"text-align":"left"}},B2t=t("td",{style:{"text-align":"center"}},"3218",-1),Y2t={style:{"text-align":"left"}},A2t={href:"https://leetcode.com/problems/minimum-cost-for-cutting-cake-i",target:"_blank",rel:"noopener noreferrer"},J2t=t("td",{style:{"text-align":"center"}},null,-1),R2t={style:{"text-align":"left"}},S2t=t("code",null,"贪心",-1),U2t=t("code",null,"数组",-1),W2t=t("code",null,"动态规划",-1),X2t=t("code",null,"1+",-1),F2t={style:{"text-align":"left"}},G2t=t("td",{style:{"text-align":"center"}},"3225",-1),T2t={style:{"text-align":"left"}},Q2t={href:"https://leetcode.com/problems/maximum-score-from-grid-operations",target:"_blank",rel:"noopener noreferrer"},Z2t=t("td",{style:{"text-align":"center"}},null,-1),$2t={style:{"text-align":"left"}},tpt=t("code",null,"数组",-1),ept=t("code",null,"动态规划",-1),lpt=t("code",null,"矩阵",-1),opt=t("code",null,"1+",-1),npt={style:{"text-align":"left"}},spt=t("td",{style:{"text-align":"center"}},"3229",-1),dpt={style:{"text-align":"left"}},_pt={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},apt=t("td",{style:{"text-align":"center"}},null,-1),ipt={style:{"text-align":"left"}},cpt=t("code",null,"栈",-1),rpt=t("code",null,"贪心",-1),hpt=t("code",null,"数组",-1),fpt=t("code",null,"2+",-1),gpt={style:{"text-align":"left"}},upt=t("td",{style:{"text-align":"center"}},"3241",-1),mpt={style:{"text-align":"left"}},ypt={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},xpt=t("td",{style:{"text-align":"center"}},null,-1),ppt={style:{"text-align":"left"}},bpt=t("code",null,"树",-1),kpt=t("code",null,"深度优先搜索",-1),Mpt=t("code",null,"图",-1),Hpt=t("code",null,"1+",-1),Ipt={style:{"text-align":"left"}},wpt=t("td",{style:{"text-align":"center"}},"3247",-1),vpt={style:{"text-align":"left"}},qpt={href:"https://leetcode.com/problems/number-of-subsequences-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},zpt=t("td",{style:{"text-align":"center"}},null,-1),jpt={style:{"text-align":"left"}},Cpt=t("code",null,"数组",-1),Opt=t("code",null,"数学",-1),Lpt=t("code",null,"动态规划",-1),Ept=t("code",null,"1+",-1),Ppt={style:{"text-align":"left"}},Kpt=t("td",{style:{"text-align":"center"}},"3250",-1),Vpt={style:{"text-align":"left"}},Npt={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-i",target:"_blank",rel:"noopener noreferrer"},Dpt=t("td",{style:{"text-align":"center"}},null,-1),Bpt={style:{"text-align":"left"}},Ypt=t("code",null,"数组",-1),Apt=t("code",null,"数学",-1),Jpt=t("code",null,"动态规划",-1),Rpt=t("code",null,"2+",-1),Spt={style:{"text-align":"left"}},Upt=t("td",{style:{"text-align":"center"}},"3251",-1),Wpt={style:{"text-align":"left"}},Xpt={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-ii",target:"_blank",rel:"noopener noreferrer"},Fpt=t("td",{style:{"text-align":"center"}},null,-1),Gpt={style:{"text-align":"left"}},Tpt=t("code",null,"数组",-1),Qpt=t("code",null,"数学",-1),Zpt=t("code",null,"动态规划",-1),$pt=t("code",null,"2+",-1),t5t={style:{"text-align":"left"}},e5t=t("td",{style:{"text-align":"center"}},"3256",-1),l5t={style:{"text-align":"left"}},o5t={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-i",target:"_blank",rel:"noopener noreferrer"},n5t=t("td",{style:{"text-align":"center"}},null,-1),s5t={style:{"text-align":"left"}},d5t=t("code",null,"数组",-1),_5t=t("code",null,"动态规划",-1),a5t=t("code",null,"枚举",-1),i5t=t("code",null,"1+",-1),c5t={style:{"text-align":"left"}},r5t=t("td",{style:{"text-align":"center"}},"3257",-1),h5t={style:{"text-align":"left"}},f5t={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-ii",target:"_blank",rel:"noopener noreferrer"},g5t=t("td",{style:{"text-align":"center"}},null,-1),u5t={style:{"text-align":"left"}},m5t=t("code",null,"数组",-1),y5t=t("code",null,"动态规划",-1),x5t=t("code",null,"枚举",-1),p5t=t("code",null,"1+",-1),b5t={style:{"text-align":"left"}},k5t=t("td",{style:{"text-align":"center"}},"3259",-1),M5t={style:{"text-align":"left"}},H5t={href:"https://leetcode.com/problems/maximum-energy-boost-from-two-drinks",target:"_blank",rel:"noopener noreferrer"},I5t=t("td",{style:{"text-align":"center"}},null,-1),w5t={style:{"text-align":"left"}},v5t=t("code",null,"数组",-1),q5t=t("code",null,"动态规划",-1),z5t={style:{"text-align":"left"}},j5t=t("td",{style:{"text-align":"center"}},"3260",-1),C5t={style:{"text-align":"left"}},O5t={href:"https://leetcode.com/problems/find-the-largest-palindrome-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},L5t=t("td",{style:{"text-align":"center"}},null,-1),E5t={style:{"text-align":"left"}},P5t=t("code",null,"贪心",-1),K5t=t("code",null,"数学",-1),V5t=t("code",null,"字符串",-1),N5t=t("code",null,"2+",-1),D5t={style:{"text-align":"left"}},B5t=t("td",{style:{"text-align":"center"}},"3269",-1),Y5t={style:{"text-align":"left"}},A5t={href:"https://leetcode.com/problems/constructing-two-increasing-arrays",target:"_blank",rel:"noopener noreferrer"},J5t=t("td",{style:{"text-align":"center"}},null,-1),R5t={style:{"text-align":"left"}},S5t=t("code",null,"数组",-1),U5t=t("code",null,"动态规划",-1),W5t={style:{"text-align":"left"}},X5t=t("td",{style:{"text-align":"center"}},"3276",-1),F5t={style:{"text-align":"left"}},G5t={href:"https://leetcode.com/problems/select-cells-in-grid-with-maximum-score",target:"_blank",rel:"noopener noreferrer"},T5t=t("td",{style:{"text-align":"center"}},null,-1),Q5t={style:{"text-align":"left"}},Z5t=t("code",null,"位运算",-1),$5t=t("code",null,"数组",-1),t0t=t("code",null,"动态规划",-1),e0t=t("code",null,"2+",-1),l0t={style:{"text-align":"left"}},o0t=t("td",{style:{"text-align":"center"}},"3277",-1),n0t={style:{"text-align":"left"}},s0t={href:"https://leetcode.com/problems/maximum-xor-score-subarray-queries",target:"_blank",rel:"noopener noreferrer"},d0t=t("td",{style:{"text-align":"center"}},null,-1),_0t={style:{"text-align":"left"}},a0t=t("code",null,"数组",-1),i0t=t("code",null,"动态规划",-1),c0t={style:{"text-align":"left"}},r0t=t("td",{style:{"text-align":"center"}},"3284",-1),h0t={style:{"text-align":"left"}},f0t={href:"https://leetcode.com/problems/sum-of-consecutive-subarrays",target:"_blank",rel:"noopener noreferrer"},g0t=t("td",{style:{"text-align":"center"}},null,-1),u0t={style:{"text-align":"left"}},m0t=t("code",null,"数组",-1),y0t=t("code",null,"双指针",-1),x0t=t("code",null,"动态规划",-1),p0t={style:{"text-align":"left"}},b0t=t("td",{style:{"text-align":"center"}},"3287",-1),k0t={style:{"text-align":"left"}},M0t={href:"https://leetcode.com/problems/find-the-maximum-sequence-value-of-array",target:"_blank",rel:"noopener noreferrer"},H0t=t("td",{style:{"text-align":"center"}},null,-1),I0t={style:{"text-align":"left"}},w0t=t("code",null,"位运算",-1),v0t=t("code",null,"数组",-1),q0t=t("code",null,"动态规划",-1),z0t={style:{"text-align":"left"}},j0t=t("td",{style:{"text-align":"center"}},"3290",-1),C0t={style:{"text-align":"left"}},O0t={href:"https://leetcode.com/problems/maximum-multiplication-score",target:"_blank",rel:"noopener noreferrer"},L0t=t("td",{style:{"text-align":"center"}},null,-1),E0t={style:{"text-align":"left"}},P0t=t("code",null,"数组",-1),K0t=t("code",null,"动态规划",-1),V0t={style:{"text-align":"left"}},N0t=t("td",{style:{"text-align":"center"}},"3291",-1),D0t={style:{"text-align":"left"}},B0t={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Y0t=t("td",{style:{"text-align":"center"}},null,-1),A0t={style:{"text-align":"left"}},J0t=t("code",null,"字典树",-1),R0t=t("code",null,"线段树",-1),S0t=t("code",null,"数组",-1),U0t=t("code",null,"6+",-1),W0t={style:{"text-align":"left"}},X0t=t("td",{style:{"text-align":"center"}},"3292",-1),F0t={style:{"text-align":"left"}},G0t={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},T0t=t("td",{style:{"text-align":"center"}},null,-1),Q0t={style:{"text-align":"left"}},Z0t=t("code",null,"线段树",-1),$0t=t("code",null,"数组",-1),tbt=t("code",null,"字符串",-1),ebt=t("code",null,"5+",-1),lbt={style:{"text-align":"left"}},obt=t("td",{style:{"text-align":"center"}},"3299",-1),nbt={style:{"text-align":"left"}},sbt={href:"https://leetcode.com/problems/sum-of-consecutive-subsequences",target:"_blank",rel:"noopener noreferrer"},dbt=t("td",{style:{"text-align":"center"}},null,-1),_bt={style:{"text-align":"left"}},abt=t("code",null,"数组",-1),ibt=t("code",null,"哈希表",-1),cbt=t("code",null,"动态规划",-1),rbt={style:{"text-align":"left"}},hbt=t("td",{style:{"text-align":"center"}},"3302",-1),fbt={style:{"text-align":"left"}},gbt={href:"https://leetcode.com/problems/find-the-lexicographically-smallest-valid-sequence",target:"_blank",rel:"noopener noreferrer"},ubt=t("td",{style:{"text-align":"center"}},null,-1),mbt={style:{"text-align":"left"}},ybt=t("code",null,"贪心",-1),xbt=t("code",null,"双指针",-1),pbt=t("code",null,"字符串",-1),bbt=t("code",null,"1+",-1),kbt={style:{"text-align":"left"}},Mbt=t("td",{style:{"text-align":"center"}},"3316",-1),Hbt={style:{"text-align":"left"}},Ibt={href:"https://leetcode.com/problems/find-maximum-removals-from-source-string",target:"_blank",rel:"noopener noreferrer"},wbt=t("td",{style:{"text-align":"center"}},null,-1),vbt={style:{"text-align":"left"}},qbt=t("code",null,"数组",-1),zbt=t("code",null,"哈希表",-1),jbt=t("code",null,"双指针",-1),Cbt=t("code",null,"2+",-1),Obt={style:{"text-align":"left"}},Lbt=t("td",{style:{"text-align":"center"}},"3317",-1),Ebt={style:{"text-align":"left"}},Pbt={href:"https://leetcode.com/problems/find-the-number-of-possible-ways-for-an-event",target:"_blank",rel:"noopener noreferrer"},Kbt=t("td",{style:{"text-align":"center"}},null,-1),Vbt={style:{"text-align":"left"}},Nbt=t("code",null,"数学",-1),Dbt=t("code",null,"动态规划",-1),Bbt=t("code",null,"组合数学",-1),Ybt={style:{"text-align":"left"}},Abt=t("td",{style:{"text-align":"center"}},"3320",-1),Jbt={style:{"text-align":"left"}},Rbt={href:"https://leetcode.com/problems/count-the-number-of-winning-sequences",target:"_blank",rel:"noopener noreferrer"},Sbt=t("td",{style:{"text-align":"center"}},null,-1),Ubt={style:{"text-align":"left"}},Wbt=t("code",null,"字符串",-1),Xbt=t("code",null,"动态规划",-1),Fbt={style:{"text-align":"left"}},Gbt=t("td",{style:{"text-align":"center"}},"LCP 04",-1),Tbt={style:{"text-align":"left"}},Qbt={href:"https://leetcode.cn/problems/broken-board-dominoes",target:"_blank",rel:"noopener noreferrer"},Zbt=t("td",{style:{"text-align":"center"}},null,-1),$bt={style:{"text-align":"left"}},t8t=t("code",null,"位运算",-1),e8t=t("code",null,"图",-1),l8t=t("code",null,"数组",-1),o8t=t("code",null,"2+",-1),n8t={style:{"text-align":"left"}},s8t=t("td",{style:{"text-align":"center"}},"LCP 07",-1),d8t={style:{"text-align":"left"}},_8t={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},a8t=t("td",{style:{"text-align":"center"}},null,-1),i8t={style:{"text-align":"left"}},c8t=t("code",null,"深度优先搜索",-1),r8t=t("code",null,"广度优先搜索",-1),h8t=t("code",null,"图",-1),f8t=t("code",null,"1+",-1),g8t={style:{"text-align":"left"}},u8t=t("td",{style:{"text-align":"center"}},"LCP 09",-1),m8t={style:{"text-align":"left"}},y8t={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},x8t=t("td",{style:{"text-align":"center"}},null,-1),p8t={style:{"text-align":"left"}},b8t=t("code",null,"广度优先搜索",-1),k8t=t("code",null,"线段树",-1),M8t=t("code",null,"数组",-1),H8t=t("code",null,"1+",-1),I8t={style:{"text-align":"left"}},w8t=t("td",{style:{"text-align":"center"}},"LCP 10",-1),v8t={style:{"text-align":"left"}},q8t={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},z8t=t("td",{style:{"text-align":"center"}},null,-1),j8t={style:{"text-align":"left"}},C8t=t("code",null,"树",-1),O8t=t("code",null,"深度优先搜索",-1),L8t=t("code",null,"动态规划",-1),E8t=t("code",null,"1+",-1),P8t={style:{"text-align":"left"}},K8t=t("td",{style:{"text-align":"center"}},"LCP 13",-1),V8t={style:{"text-align":"left"}},N8t={href:"https://leetcode.cn/problems/xun-bao",target:"_blank",rel:"noopener noreferrer"},D8t=t("td",{style:{"text-align":"center"}},null,-1),B8t={style:{"text-align":"left"}},Y8t=t("code",null,"位运算",-1),A8t=t("code",null,"广度优先搜索",-1),J8t=t("code",null,"数组",-1),R8t=t("code",null,"3+",-1),S8t={style:{"text-align":"left"}},U8t=t("td",{style:{"text-align":"center"}},"LCP 14",-1),W8t={style:{"text-align":"left"}},X8t={href:"https://leetcode.cn/problems/qie-fen-shu-zu",target:"_blank",rel:"noopener noreferrer"},F8t=t("td",{style:{"text-align":"center"}},null,-1),G8t={style:{"text-align":"left"}},T8t=t("code",null,"数组",-1),Q8t=t("code",null,"数学",-1),Z8t=t("code",null,"动态规划",-1),$8t=t("code",null,"1+",-1),t6t={style:{"text-align":"left"}},e6t=t("td",{style:{"text-align":"center"}},"LCP 19",-1),l6t={style:{"text-align":"left"}},o6t={href:"https://leetcode.cn/problems/UlBDOe",target:"_blank",rel:"noopener noreferrer"},n6t=t("td",{style:{"text-align":"center"}},null,-1),s6t={style:{"text-align":"left"}},d6t=t("code",null,"字符串",-1),_6t=t("code",null,"动态规划",-1),a6t={style:{"text-align":"left"}},i6t=t("td",{style:{"text-align":"center"}},"LCP 20",-1),c6t={style:{"text-align":"left"}},r6t={href:"https://leetcode.cn/problems/meChtZ",target:"_blank",rel:"noopener noreferrer"},h6t=t("td",{style:{"text-align":"center"}},null,-1),f6t={style:{"text-align":"left"}},g6t=t("code",null,"记忆化搜索",-1),u6t=t("code",null,"数组",-1),m6t=t("code",null,"动态规划",-1),y6t={style:{"text-align":"left"}},x6t=t("td",{style:{"text-align":"center"}},"LCP 25",-1),p6t={style:{"text-align":"left"}},b6t={href:"https://leetcode.cn/problems/Uh984O",target:"_blank",rel:"noopener noreferrer"},k6t=t("td",{style:{"text-align":"center"}},null,-1),M6t={style:{"text-align":"left"}},H6t=t("code",null,"数学",-1),I6t=t("code",null,"动态规划",-1),w6t=t("code",null,"组合数学",-1),v6t={style:{"text-align":"left"}},q6t=t("td",{style:{"text-align":"center"}},"LCP 26",-1),z6t={style:{"text-align":"left"}},j6t={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},C6t=t("td",{style:{"text-align":"center"}},null,-1),O6t={style:{"text-align":"left"}},L6t=t("code",null,"树",-1),E6t=t("code",null,"动态规划",-1),P6t=t("code",null,"二叉树",-1),K6t={style:{"text-align":"left"}},V6t=t("td",{style:{"text-align":"center"}},"LCP 31",-1),N6t={style:{"text-align":"left"}},D6t={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},B6t=t("td",{style:{"text-align":"center"}},null,-1),Y6t={style:{"text-align":"left"}},A6t=t("code",null,"深度优先搜索",-1),J6t=t("code",null,"广度优先搜索",-1),R6t=t("code",null,"数组",-1),S6t=t("code",null,"2+",-1),U6t={style:{"text-align":"left"}},W6t=t("td",{style:{"text-align":"center"}},"LCP 34",-1),X6t={style:{"text-align":"left"}},F6t={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},G6t=t("td",{style:{"text-align":"center"}},null,-1),T6t={style:{"text-align":"left"}},Q6t=t("code",null,"树",-1),Z6t=t("code",null,"动态规划",-1),$6t=t("code",null,"二叉树",-1),t7t={style:{"text-align":"left"}},e7t=t("td",{style:{"text-align":"center"}},"LCP 36",-1),l7t={style:{"text-align":"left"}},o7t={href:"https://leetcode.cn/problems/Up5XYM",target:"_blank",rel:"noopener noreferrer"},n7t=t("td",{style:{"text-align":"center"}},null,-1),s7t={style:{"text-align":"left"}},d7t=t("code",null,"数组",-1),_7t=t("code",null,"动态规划",-1),a7t=t("code",null,"排序",-1),i7t={style:{"text-align":"left"}},c7t=t("td",{style:{"text-align":"center"}},"LCP 38",-1),r7t={style:{"text-align":"left"}},h7t={href:"https://leetcode.cn/problems/7rLGCR",target:"_blank",rel:"noopener noreferrer"},f7t=t("td",{style:{"text-align":"center"}},null,-1),g7t={style:{"text-align":"left"}},u7t=t("code",null,"数组",-1),m7t=t("code",null,"动态规划",-1),y7t=t("code",null,"矩阵",-1),x7t={style:{"text-align":"left"}},p7t=t("td",{style:{"text-align":"center"}},"LCP 43",-1),b7t={style:{"text-align":"left"}},k7t={href:"https://leetcode.cn/problems/Y1VbOX",target:"_blank",rel:"noopener noreferrer"},M7t=t("td",{style:{"text-align":"center"}},null,-1),H7t={style:{"text-align":"left"}},I7t=t("code",null,"数组",-1),w7t=t("code",null,"字符串",-1),v7t=t("code",null,"动态规划",-1),q7t={style:{"text-align":"left"}},z7t=t("td",{style:{"text-align":"center"}},"LCP 45",-1),j7t={style:{"text-align":"left"}},C7t={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},O7t=t("td",{style:{"text-align":"center"}},null,-1),L7t={style:{"text-align":"left"}},E7t=t("code",null,"深度优先搜索",-1),P7t=t("code",null,"广度优先搜索",-1),K7t=t("code",null,"记忆化搜索",-1),V7t=t("code",null,"3+",-1),N7t={style:{"text-align":"left"}},D7t=t("td",{style:{"text-align":"center"}},"LCP 47",-1),B7t={style:{"text-align":"left"}},Y7t={href:"https://leetcode.cn/problems/oPs9Bm",target:"_blank",rel:"noopener noreferrer"},A7t=t("td",{style:{"text-align":"center"}},null,-1),J7t={style:{"text-align":"left"}},R7t=t("code",null,"数组",-1),S7t=t("code",null,"动态规划",-1),U7t={style:{"text-align":"left"}},W7t=t("td",{style:{"text-align":"center"}},"LCP 53",-1),X7t={style:{"text-align":"left"}},F7t={href:"https://leetcode.cn/problems/EJvmW4",target:"_blank",rel:"noopener noreferrer"},G7t=t("td",{style:{"text-align":"center"}},null,-1),T7t={style:{"text-align":"left"}},Q7t=t("code",null,"位运算",-1),Z7t=t("code",null,"数组",-1),$7t=t("code",null,"动态规划",-1),t9t=t("code",null,"1+",-1),e9t={style:{"text-align":"left"}},l9t=t("td",{style:{"text-align":"center"}},"LCP 57",-1),o9t={style:{"text-align":"left"}},n9t={href:"https://leetcode.cn/problems/ZbAuEH",target:"_blank",rel:"noopener noreferrer"},s9t=t("td",{style:{"text-align":"center"}},null,-1),d9t={style:{"text-align":"left"}},_9t=t("code",null,"数组",-1),a9t=t("code",null,"动态规划",-1),i9t=t("code",null,"矩阵",-1),c9t=t("code",null,"1+",-1),r9t={style:{"text-align":"left"}},h9t=t("td",{style:{"text-align":"center"}},"LCP 59",-1),f9t={style:{"text-align":"left"}},g9t={href:"https://leetcode.cn/problems/NfY1m5",target:"_blank",rel:"noopener noreferrer"},u9t=t("td",{style:{"text-align":"center"}},null,-1),m9t={style:{"text-align":"left"}},y9t=t("code",null,"数组",-1),x9t=t("code",null,"动态规划",-1),p9t={style:{"text-align":"left"}},b9t=t("td",{style:{"text-align":"center"}},"LCP 60",-1),k9t={style:{"text-align":"left"}},M9t={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},H9t=t("td",{style:{"text-align":"center"}},null,-1),I9t={style:{"text-align":"left"}},w9t=t("code",null,"树",-1),v9t=t("code",null,"动态规划",-1),q9t=t("code",null,"二叉树",-1),z9t={style:{"text-align":"left"}},j9t=t("td",{style:{"text-align":"center"}},"LCP 63",-1),C9t={style:{"text-align":"left"}},O9t={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},L9t=t("td",{style:{"text-align":"center"}},null,-1),E9t={style:{"text-align":"left"}},P9t=t("code",null,"深度优先搜索",-1),K9t=t("code",null,"广度优先搜索",-1),V9t=t("code",null,"图",-1),N9t=t("code",null,"5+",-1),D9t={style:{"text-align":"left"}},B9t=t("td",{style:{"text-align":"center"}},"LCP 64",-1),Y9t={style:{"text-align":"left"}},A9t={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},J9t=t("td",{style:{"text-align":"center"}},null,-1),R9t={style:{"text-align":"left"}},S9t=t("code",null,"树",-1),U9t=t("code",null,"深度优先搜索",-1),W9t=t("code",null,"动态规划",-1),X9t=t("code",null,"1+",-1),F9t={style:{"text-align":"left"}},G9t=t("td",{style:{"text-align":"center"}},"LCP 65",-1),T9t={style:{"text-align":"left"}},Q9t={href:"https://leetcode.cn/problems/3aqs1c",target:"_blank",rel:"noopener noreferrer"},Z9t=t("td",{style:{"text-align":"center"}},null,-1),$9t={style:{"text-align":"left"}},tkt=t("code",null,"数组",-1),ekt=t("code",null,"动态规划",-1),lkt={style:{"text-align":"left"}},okt=t("td",{style:{"text-align":"center"}},"LCP 69",-1),nkt={style:{"text-align":"left"}},skt={href:"https://leetcode.cn/problems/rMeRt2",target:"_blank",rel:"noopener noreferrer"},dkt=t("td",{style:{"text-align":"center"}},null,-1),_kt={style:{"text-align":"left"}},akt=t("code",null,"位运算",-1),ikt=t("code",null,"数组",-1),ckt=t("code",null,"字符串",-1),rkt=t("code",null,"2+",-1),hkt={style:{"text-align":"left"}},fkt=t("td",{style:{"text-align":"center"}},"LCS 01",-1),gkt={style:{"text-align":"left"}},ukt={href:"https://leetcode.cn/problems/Ju9Xwi",target:"_blank",rel:"noopener noreferrer"},mkt=t("td",{style:{"text-align":"center"}},null,-1),ykt={style:{"text-align":"left"}},xkt=t("code",null,"贪心",-1),pkt=t("code",null,"数学",-1),bkt=t("code",null,"动态规划",-1),kkt={style:{"text-align":"left"}},Mkt=t("td",{style:{"text-align":"center"}},"剑指 Offer 10",-1),Hkt={style:{"text-align":"left"}},Ikt={href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},wkt={style:{"text-align":"center"}},vkt={style:{"text-align":"left"}},qkt=t("code",null,"记忆化搜索",-1),zkt=t("code",null,"数学",-1),jkt=t("code",null,"动态规划",-1),Ckt={style:{"text-align":"left"}},Okt=t("td",{style:{"text-align":"center"}},"剑指 Offer 10-II",-1),Lkt={style:{"text-align":"left"}},Ekt={href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof",target:"_blank",rel:"noopener noreferrer"},Pkt={style:{"text-align":"center"}},Kkt={style:{"text-align":"left"}},Vkt=t("code",null,"记忆化搜索",-1),Nkt=t("code",null,"数学",-1),Dkt=t("code",null,"动态规划",-1),Bkt={style:{"text-align":"left"}},Ykt=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),Akt={style:{"text-align":"left"}},Jkt={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},Rkt={style:{"text-align":"center"}},Skt={style:{"text-align":"left"}},Ukt=t("code",null,"深度优先搜索",-1),Wkt=t("code",null,"广度优先搜索",-1),Xkt=t("code",null,"动态规划",-1),Fkt={style:{"text-align":"left"}},Gkt=t("td",{style:{"text-align":"center"}},"剑指 Offer 14",-1),Tkt={style:{"text-align":"left"}},Qkt={href:"https://leetcode.cn/problems/jian-sheng-zi-lcof",target:"_blank",rel:"noopener noreferrer"},Zkt={style:{"text-align":"center"}},$kt={style:{"text-align":"left"}},tMt=t("code",null,"数学",-1),eMt=t("code",null,"动态规划",-1),lMt={style:{"text-align":"left"}},oMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 14-II",-1),nMt={style:{"text-align":"left"}},sMt={href:"https://leetcode.cn/problems/jian-sheng-zi-ii-lcof",target:"_blank",rel:"noopener noreferrer"},dMt={style:{"text-align":"center"}},_Mt={style:{"text-align":"left"}},aMt=t("code",null,"数学",-1),iMt=t("code",null,"动态规划",-1),cMt={style:{"text-align":"left"}},rMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 19",-1),hMt={style:{"text-align":"left"}},fMt={href:"https://leetcode.cn/problems/zheng-ze-biao-da-shi-pi-pei-lcof",target:"_blank",rel:"noopener noreferrer"},gMt={style:{"text-align":"center"}},uMt={style:{"text-align":"left"}},mMt=t("code",null,"递归",-1),yMt=t("code",null,"字符串",-1),xMt=t("code",null,"动态规划",-1),pMt={style:{"text-align":"left"}},bMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 42",-1),kMt={style:{"text-align":"left"}},MMt={href:"https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof",target:"_blank",rel:"noopener noreferrer"},HMt={style:{"text-align":"center"}},IMt={style:{"text-align":"left"}},wMt=t("code",null,"数组",-1),vMt=t("code",null,"分治",-1),qMt=t("code",null,"动态规划",-1),zMt={style:{"text-align":"left"}},jMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 43",-1),CMt={style:{"text-align":"left"}},OMt={href:"https://leetcode.cn/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof",target:"_blank",rel:"noopener noreferrer"},LMt={style:{"text-align":"center"}},EMt={style:{"text-align":"left"}},PMt=t("code",null,"递归",-1),KMt=t("code",null,"数学",-1),VMt=t("code",null,"动态规划",-1),NMt={style:{"text-align":"left"}},DMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 46",-1),BMt={style:{"text-align":"left"}},YMt={href:"https://leetcode.cn/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof",target:"_blank",rel:"noopener noreferrer"},AMt={style:{"text-align":"center"}},JMt={style:{"text-align":"left"}},RMt=t("code",null,"字符串",-1),SMt=t("code",null,"动态规划",-1),UMt={style:{"text-align":"left"}},WMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 47",-1),XMt={style:{"text-align":"left"}},FMt={href:"https://leetcode.cn/problems/li-wu-de-zui-da-jie-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},GMt={style:{"text-align":"center"}},TMt={style:{"text-align":"left"}},QMt=t("code",null,"数组",-1),ZMt=t("code",null,"动态规划",-1),$Mt=t("code",null,"矩阵",-1),tHt={style:{"text-align":"left"}},eHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 49",-1),lHt={style:{"text-align":"left"}},oHt={href:"https://leetcode.cn/problems/chou-shu-lcof",target:"_blank",rel:"noopener noreferrer"},nHt={style:{"text-align":"center"}},sHt={style:{"text-align":"left"}},dHt=t("code",null,"哈希表",-1),_Ht=t("code",null,"数学",-1),aHt=t("code",null,"动态规划",-1),iHt=t("code",null,"1+",-1),cHt={style:{"text-align":"left"}},rHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 60",-1),hHt={style:{"text-align":"left"}},fHt={href:"https://leetcode.cn/problems/nge-tou-zi-de-dian-shu-lcof",target:"_blank",rel:"noopener noreferrer"},gHt={style:{"text-align":"center"}},uHt={style:{"text-align":"left"}},mHt=t("code",null,"数学",-1),yHt=t("code",null,"动态规划",-1),xHt=t("code",null,"概率与统计",-1),pHt={style:{"text-align":"left"}},bHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 63",-1),kHt={style:{"text-align":"left"}},MHt={href:"https://leetcode.cn/problems/gu-piao-de-zui-da-li-run-lcof",target:"_blank",rel:"noopener noreferrer"},HHt={style:{"text-align":"center"}},IHt={style:{"text-align":"left"}},wHt=t("code",null,"数组",-1),vHt=t("code",null,"动态规划",-1),qHt={style:{"text-align":"left"}},zHt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 100",-1),jHt={style:{"text-align":"left"}},CHt={href:"https://leetcode.cn/problems/IlPe0q",target:"_blank",rel:"noopener noreferrer"},OHt={style:{"text-align":"center"}},LHt={style:{"text-align":"left"}},EHt=t("code",null,"数组",-1),PHt=t("code",null,"动态规划",-1),KHt={style:{"text-align":"left"}},VHt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 102",-1),NHt={style:{"text-align":"left"}},DHt={href:"https://leetcode.cn/problems/YaVDxD",target:"_blank",rel:"noopener noreferrer"},BHt={style:{"text-align":"center"}},YHt={style:{"text-align":"left"}},AHt=t("code",null,"数组",-1),JHt=t("code",null,"动态规划",-1),RHt=t("code",null,"回溯",-1),SHt={style:{"text-align":"left"}},UHt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 103",-1),WHt={style:{"text-align":"left"}},XHt={href:"https://leetcode.cn/problems/gaM7Ch",target:"_blank",rel:"noopener noreferrer"},FHt={style:{"text-align":"center"}},GHt={style:{"text-align":"left"}},THt=t("code",null,"广度优先搜索",-1),QHt=t("code",null,"数组",-1),ZHt=t("code",null,"动态规划",-1),$Ht={style:{"text-align":"left"}},tIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 104",-1),eIt={style:{"text-align":"left"}},lIt={href:"https://leetcode.cn/problems/D0F0SV",target:"_blank",rel:"noopener noreferrer"},oIt=t("td",{style:{"text-align":"center"}},null,-1),nIt={style:{"text-align":"left"}},sIt=t("code",null,"数组",-1),dIt=t("code",null,"动态规划",-1),_It={style:{"text-align":"left"}},aIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 107",-1),iIt={style:{"text-align":"left"}},cIt={href:"https://leetcode.cn/problems/2bCMpM",target:"_blank",rel:"noopener noreferrer"},rIt=t("td",{style:{"text-align":"center"}},null,-1),hIt={style:{"text-align":"left"}},fIt=t("code",null,"广度优先搜索",-1),gIt=t("code",null,"数组",-1),uIt=t("code",null,"动态规划",-1),mIt=t("code",null,"1+",-1),yIt={style:{"text-align":"left"}},xIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),pIt={style:{"text-align":"left"}},bIt={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},kIt=t("td",{style:{"text-align":"center"}},null,-1),MIt={style:{"text-align":"left"}},HIt=t("code",null,"深度优先搜索",-1),IIt=t("code",null,"广度优先搜索",-1),wIt=t("code",null,"图",-1),vIt=t("code",null,"5+",-1),qIt={style:{"text-align":"left"}},zIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 20",-1),jIt={style:{"text-align":"left"}},CIt={href:"https://leetcode.cn/problems/a7VOhD",target:"_blank",rel:"noopener noreferrer"},OIt=t("td",{style:{"text-align":"center"}},null,-1),LIt={style:{"text-align":"left"}},EIt=t("code",null,"字符串",-1),PIt=t("code",null,"动态规划",-1),KIt={style:{"text-align":"left"}},VIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 3",-1),NIt={style:{"text-align":"left"}},DIt={href:"https://leetcode.cn/problems/w3tCBm",target:"_blank",rel:"noopener noreferrer"},BIt=t("td",{style:{"text-align":"center"}},null,-1),YIt={style:{"text-align":"left"}},AIt=t("code",null,"位运算",-1),JIt=t("code",null,"动态规划",-1),RIt={style:{"text-align":"left"}},SIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),UIt={style:{"text-align":"left"}},WIt={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},XIt={style:{"text-align":"center"}},FIt={style:{"text-align":"left"}},GIt=t("code",null,"栈",-1),TIt=t("code",null,"数组",-1),QIt=t("code",null,"动态规划",-1),ZIt=t("code",null,"2+",-1),$It={style:{"text-align":"left"}},twt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),ewt={style:{"text-align":"left"}},lwt={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},owt={style:{"text-align":"center"}},nwt={style:{"text-align":"left"}},swt=t("code",null,"树",-1),dwt=t("code",null,"深度优先搜索",-1),_wt=t("code",null,"动态规划",-1),awt=t("code",null,"1+",-1),iwt={style:{"text-align":"left"}},cwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 85",-1),rwt={style:{"text-align":"left"}},hwt={href:"https://leetcode.cn/problems/IDBivT",target:"_blank",rel:"noopener noreferrer"},fwt={style:{"text-align":"center"}},gwt={style:{"text-align":"left"}},uwt=t("code",null,"字符串",-1),mwt=t("code",null,"动态规划",-1),ywt=t("code",null,"回溯",-1),xwt={style:{"text-align":"left"}},pwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 88",-1),bwt={style:{"text-align":"left"}},kwt={href:"https://leetcode.cn/problems/GzCJIP",target:"_blank",rel:"noopener noreferrer"},Mwt=t("td",{style:{"text-align":"center"}},null,-1),Hwt={style:{"text-align":"left"}},Iwt=t("code",null,"数组",-1),wwt=t("code",null,"动态规划",-1),vwt={style:{"text-align":"left"}},qwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 89",-1),zwt={style:{"text-align":"left"}},jwt={href:"https://leetcode.cn/problems/Gu0c2T",target:"_blank",rel:"noopener noreferrer"},Cwt={style:{"text-align":"center"}},Owt={style:{"text-align":"left"}},Lwt=t("code",null,"数组",-1),Ewt=t("code",null,"动态规划",-1),Pwt={style:{"text-align":"left"}},Kwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 90",-1),Vwt={style:{"text-align":"left"}},Nwt={href:"https://leetcode.cn/problems/PzWKhm",target:"_blank",rel:"noopener noreferrer"},Dwt=t("td",{style:{"text-align":"center"}},null,-1),Bwt={style:{"text-align":"left"}},Ywt=t("code",null,"数组",-1),Awt=t("code",null,"动态规划",-1),Jwt={style:{"text-align":"left"}},Rwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 91",-1),Swt={style:{"text-align":"left"}},Uwt={href:"https://leetcode.cn/problems/JEj789",target:"_blank",rel:"noopener noreferrer"},Wwt=t("td",{style:{"text-align":"center"}},null,-1),Xwt={style:{"text-align":"left"}},Fwt=t("code",null,"数组",-1),Gwt=t("code",null,"动态规划",-1),Twt={style:{"text-align":"left"}},Qwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 92",-1),Zwt={style:{"text-align":"left"}},$wt={href:"https://leetcode.cn/problems/cyJERH",target:"_blank",rel:"noopener noreferrer"},tvt=t("td",{style:{"text-align":"center"}},null,-1),evt={style:{"text-align":"left"}},lvt=t("code",null,"字符串",-1),ovt=t("code",null,"动态规划",-1),nvt={style:{"text-align":"left"}},svt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 93",-1),dvt={style:{"text-align":"left"}},_vt={href:"https://leetcode.cn/problems/Q91FMA",target:"_blank",rel:"noopener noreferrer"},avt=t("td",{style:{"text-align":"center"}},null,-1),ivt={style:{"text-align":"left"}},cvt=t("code",null,"数组",-1),rvt=t("code",null,"哈希表",-1),hvt=t("code",null,"动态规划",-1),fvt={style:{"text-align":"left"}},gvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 94",-1),uvt={style:{"text-align":"left"}},mvt={href:"https://leetcode.cn/problems/omKAoA",target:"_blank",rel:"noopener noreferrer"},yvt=t("td",{style:{"text-align":"center"}},null,-1),xvt={style:{"text-align":"left"}},pvt=t("code",null,"字符串",-1),bvt=t("code",null,"动态规划",-1),kvt={style:{"text-align":"left"}},Mvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 95",-1),Hvt={style:{"text-align":"left"}},Ivt={href:"https://leetcode.cn/problems/qJnOS7",target:"_blank",rel:"noopener noreferrer"},wvt={style:{"text-align":"center"}},vvt={style:{"text-align":"left"}},qvt=t("code",null,"字符串",-1),zvt=t("code",null,"动态规划",-1),jvt={style:{"text-align":"left"}},Cvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 96",-1),Ovt={style:{"text-align":"left"}},Lvt={href:"https://leetcode.cn/problems/IY6buf",target:"_blank",rel:"noopener noreferrer"},Evt={style:{"text-align":"center"}},Pvt={style:{"text-align":"left"}},Kvt=t("code",null,"字符串",-1),Vvt=t("code",null,"动态规划",-1),Nvt={style:{"text-align":"left"}},Dvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 97",-1),Bvt={style:{"text-align":"left"}},Yvt={href:"https://leetcode.cn/problems/21dk04",target:"_blank",rel:"noopener noreferrer"},Avt=t("td",{style:{"text-align":"center"}},null,-1),Jvt={style:{"text-align":"left"}},Rvt=t("code",null,"字符串",-1),Svt=t("code",null,"动态规划",-1),Uvt={style:{"text-align":"left"}},Wvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 98",-1),Xvt={style:{"text-align":"left"}},Fvt={href:"https://leetcode.cn/problems/2AoeFn",target:"_blank",rel:"noopener noreferrer"},Gvt={style:{"text-align":"center"}},Tvt={style:{"text-align":"left"}},Qvt=t("code",null,"数学",-1),Zvt=t("code",null,"动态规划",-1),$vt=t("code",null,"组合数学",-1),tqt={style:{"text-align":"left"}},eqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 99",-1),lqt={style:{"text-align":"left"}},oqt={href:"https://leetcode.cn/problems/0i0mDW",target:"_blank",rel:"noopener noreferrer"},nqt={style:{"text-align":"center"}},sqt={style:{"text-align":"left"}},dqt=t("code",null,"数组",-1),_qt=t("code",null,"动态规划",-1),aqt=t("code",null,"矩阵",-1),iqt={style:{"text-align":"left"}},cqt=t("td",{style:{"text-align":"center"}},"面试题 05.03",-1),rqt={style:{"text-align":"left"}},hqt={href:"https://leetcode.cn/problems/reverse-bits-lcci",target:"_blank",rel:"noopener noreferrer"},fqt=t("td",{style:{"text-align":"center"}},null,-1),gqt={style:{"text-align":"left"}},uqt=t("code",null,"位运算",-1),mqt=t("code",null,"动态规划",-1),yqt={style:{"text-align":"left"}},xqt=t("td",{style:{"text-align":"center"}},"面试题 08.01",-1),pqt={style:{"text-align":"left"}},bqt={href:"https://leetcode.cn/problems/three-steps-problem-lcci",target:"_blank",rel:"noopener noreferrer"},kqt=t("td",{style:{"text-align":"center"}},null,-1),Mqt={style:{"text-align":"left"}},Hqt=t("code",null,"记忆化搜索",-1),Iqt=t("code",null,"数学",-1),wqt=t("code",null,"动态规划",-1),vqt={style:{"text-align":"left"}},qqt=t("td",{style:{"text-align":"center"}},"面试题 08.02",-1),zqt={style:{"text-align":"left"}},jqt={href:"https://leetcode.cn/problems/robot-in-a-grid-lcci",target:"_blank",rel:"noopener noreferrer"},Cqt=t("td",{style:{"text-align":"center"}},null,-1),Oqt={style:{"text-align":"left"}},Lqt=t("code",null,"数组",-1),Eqt=t("code",null,"动态规划",-1),Pqt=t("code",null,"回溯",-1),Kqt=t("code",null,"1+",-1),Vqt={style:{"text-align":"left"}},Nqt=t("td",{style:{"text-align":"center"}},"面试题 08.09",-1),Dqt={style:{"text-align":"left"}},Bqt={href:"https://leetcode.cn/problems/bracket-lcci",target:"_blank",rel:"noopener noreferrer"},Yqt=t("td",{style:{"text-align":"center"}},null,-1),Aqt={style:{"text-align":"left"}},Jqt=t("code",null,"字符串",-1),Rqt=t("code",null,"动态规划",-1),Sqt=t("code",null,"回溯",-1),Uqt={style:{"text-align":"left"}},Wqt=t("td",{style:{"text-align":"center"}},"面试题 08.11",-1),Xqt={style:{"text-align":"left"}},Fqt={href:"https://leetcode.cn/problems/coin-lcci",target:"_blank",rel:"noopener noreferrer"},Gqt=t("td",{style:{"text-align":"center"}},null,-1),Tqt={style:{"text-align":"left"}},Qqt=t("code",null,"数组",-1),Zqt=t("code",null,"数学",-1),$qt=t("code",null,"动态规划",-1),tzt={style:{"text-align":"left"}},ezt=t("td",{style:{"text-align":"center"}},"面试题 08.13",-1),lzt={style:{"text-align":"left"}},ozt={href:"https://leetcode.cn/problems/pile-box-lcci",target:"_blank",rel:"noopener noreferrer"},nzt=t("td",{style:{"text-align":"center"}},null,-1),szt={style:{"text-align":"left"}},dzt=t("code",null,"数组",-1),_zt=t("code",null,"动态规划",-1),azt=t("code",null,"排序",-1),izt={style:{"text-align":"left"}},czt=t("td",{style:{"text-align":"center"}},"面试题 08.14",-1),rzt={style:{"text-align":"left"}},hzt={href:"https://leetcode.cn/problems/boolean-evaluation-lcci",target:"_blank",rel:"noopener noreferrer"},fzt=t("td",{style:{"text-align":"center"}},null,-1),gzt={style:{"text-align":"left"}},uzt=t("code",null,"记忆化搜索",-1),mzt=t("code",null,"字符串",-1),yzt=t("code",null,"动态规划",-1),xzt={style:{"text-align":"left"}},pzt=t("td",{style:{"text-align":"center"}},"面试题 16.17",-1),bzt={style:{"text-align":"left"}},kzt={href:"https://leetcode.cn/problems/contiguous-sequence-lcci",target:"_blank",rel:"noopener noreferrer"},Mzt=t("td",{style:{"text-align":"center"}},null,-1),Hzt={style:{"text-align":"left"}},Izt=t("code",null,"数组",-1),wzt=t("code",null,"分治",-1),vzt=t("code",null,"动态规划",-1),qzt={style:{"text-align":"left"}},zzt=t("td",{style:{"text-align":"center"}},"面试题 17.06",-1),jzt={style:{"text-align":"left"}},Czt={href:"https://leetcode.cn/problems/number-of-2s-in-range-lcci",target:"_blank",rel:"noopener noreferrer"},Ozt=t("td",{style:{"text-align":"center"}},null,-1),Lzt={style:{"text-align":"left"}},Ezt=t("code",null,"递归",-1),Pzt=t("code",null,"数学",-1),Kzt=t("code",null,"动态规划",-1),Vzt={style:{"text-align":"left"}},Nzt=t("td",{style:{"text-align":"center"}},"面试题 17.08",-1),Dzt={style:{"text-align":"left"}},Bzt={href:"https://leetcode.cn/problems/circus-tower-lcci",target:"_blank",rel:"noopener noreferrer"},Yzt=t("td",{style:{"text-align":"center"}},null,-1),Azt={style:{"text-align":"left"}},Jzt=t("code",null,"数组",-1),Rzt=t("code",null,"二分查找",-1),Szt=t("code",null,"动态规划",-1),Uzt=t("code",null,"1+",-1),Wzt={style:{"text-align":"left"}},Xzt=t("td",{style:{"text-align":"center"}},"面试题 17.09",-1),Fzt={style:{"text-align":"left"}},Gzt={href:"https://leetcode.cn/problems/get-kth-magic-number-lcci",target:"_blank",rel:"noopener noreferrer"},Tzt=t("td",{style:{"text-align":"center"}},null,-1),Qzt={style:{"text-align":"left"}},Zzt=t("code",null,"哈希表",-1),$zt=t("code",null,"数学",-1),tjt=t("code",null,"动态规划",-1),ejt=t("code",null,"1+",-1),ljt={style:{"text-align":"left"}},ojt=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),njt={style:{"text-align":"left"}},sjt={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},djt=t("td",{style:{"text-align":"center"}},null,-1),_jt={style:{"text-align":"left"}},ajt=t("code",null,"字典树",-1),ijt=t("code",null,"数组",-1),cjt=t("code",null,"哈希表",-1),rjt=t("code",null,"4+",-1),hjt={style:{"text-align":"left"}},fjt=t("td",{style:{"text-align":"center"}},"面试题 17.16",-1),gjt={style:{"text-align":"left"}},ujt={href:"https://leetcode.cn/problems/the-masseuse-lcci",target:"_blank",rel:"noopener noreferrer"},mjt=t("td",{style:{"text-align":"center"}},null,-1),yjt={style:{"text-align":"left"}},xjt=t("code",null,"数组",-1),pjt=t("code",null,"动态规划",-1),bjt={style:{"text-align":"left"}},kjt=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),Mjt={style:{"text-align":"left"}},Hjt={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},Ijt=t("td",{style:{"text-align":"center"}},null,-1),wjt={style:{"text-align":"left"}},vjt=t("code",null,"栈",-1),qjt=t("code",null,"数组",-1),zjt=t("code",null,"双指针",-1),jjt=t("code",null,"2+",-1),Cjt={style:{"text-align":"left"}},Ojt=t("td",{style:{"text-align":"center"}},"面试题 17.23",-1),Ljt={style:{"text-align":"left"}},Ejt={href:"https://leetcode.cn/problems/max-black-square-lcci",target:"_blank",rel:"noopener noreferrer"},Pjt=t("td",{style:{"text-align":"center"}},null,-1),Kjt={style:{"text-align":"left"}},Vjt=t("code",null,"数组",-1),Njt=t("code",null,"动态规划",-1),Djt=t("code",null,"矩阵",-1),Bjt={style:{"text-align":"left"}},Yjt=t("td",{style:{"text-align":"center"}},"面试题 17.24",-1),Ajt={style:{"text-align":"left"}},Jjt={href:"https://leetcode.cn/problems/max-submatrix-lcci",target:"_blank",rel:"noopener noreferrer"},Rjt=t("td",{style:{"text-align":"center"}},null,-1),Sjt={style:{"text-align":"left"}},Ujt=t("code",null,"数组",-1),Wjt=t("code",null,"动态规划",-1),Xjt=t("code",null,"矩阵",-1),Fjt=t("code",null,"1+",-1),Gjt={style:{"text-align":"left"}};function Tjt(Qjt,Zjt){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),c("div",null,[f,t("details",null,[g,u,t("p",null,[e(n,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/tag/stack.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/tag/monotonic-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/tag/biconnected-component.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/tag/trie.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[R]),_:1})]),S,t("p",null,[e(n,{to:"/tag/enumeration.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/tag/recursion.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[G]),_:1}),l(),T,l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/tag/bucket-sort.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/tag/counting.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/tag/line-sweep.html"},{default:o(()=>[ut]),_:1})]),mt,t("p",null,[e(n,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(n,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/tag/game-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/tag/randomized.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/tag/rejection-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/tag/interactive.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/tag/iterator.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Et]),_:1})])]),Pt,r(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Vt,t("td",Nt,[t("a",Dt,[l("最长回文子串"),e(s)])]),t("td",Bt,[e(n,{to:"/problem/0005.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yt,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[At]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Jt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Rt]),_:1})]),t("td",St,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ut,t("td",Wt,[t("a",Xt,[l("正则表达式匹配"),e(s)])]),t("td",Ft,[e(n,{to:"/problem/0010.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gt,[e(n,{to:"/tag/recursion.html"},{default:o(()=>[Tt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Qt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Zt]),_:1})]),t("td",$t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[te,t("td",ee,[t("a",le,[l("括号生成"),e(s)])]),t("td",oe,[e(n,{to:"/problem/0022.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ne,[e(n,{to:"/tag/string.html"},{default:o(()=>[se]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[de]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[_e]),_:1})]),t("td",ae,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ie,t("td",ce,[t("a",re,[l("最长有效括号"),e(s)])]),t("td",he,[e(n,{to:"/problem/0032.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fe,[e(n,{to:"/tag/stack.html"},{default:o(()=>[ge]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[ue]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[me]),_:1})]),t("td",ye,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xe,t("td",pe,[t("a",be,[l("接雨水"),e(s)])]),t("td",ke,[e(n,{to:"/problem/0042.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Me,[e(n,{to:"/tag/stack.html"},{default:o(()=>[He]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ie]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[we]),_:1}),l(),ve]),t("td",qe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ze,t("td",je,[t("a",Ce,[l("通配符匹配"),e(s)])]),t("td",Oe,[e(n,{to:"/problem/0044.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Le,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Ee]),_:1}),l(),e(n,{to:"/tag/recursion.html"},{default:o(()=>[Pe]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Ke]),_:1}),l(),Ve]),t("td",Ne,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[De,t("td",Be,[t("a",Ye,[l("跳跃游戏 II"),e(s)])]),t("td",Ae,[e(n,{to:"/problem/0045.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Je,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Re]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ue]),_:1})]),t("td",We,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xe,t("td",Fe,[t("a",Ge,[l("最大子数组和"),e(s)])]),t("td",Te,[e(n,{to:"/problem/0053.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qe,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ze]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[$e]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tl]),_:1})]),t("td",el,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ll,t("td",ol,[t("a",nl,[l("跳跃游戏"),e(s)])]),t("td",sl,[e(n,{to:"/problem/0055.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",dl,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[_l]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[al]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[il]),_:1})]),t("td",cl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rl,t("td",hl,[t("a",fl,[l("不同路径"),e(s)])]),t("td",gl,[e(n,{to:"/problem/0062.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ul,[e(n,{to:"/tag/math.html"},{default:o(()=>[ml]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[xl]),_:1})]),t("td",pl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bl,t("td",kl,[t("a",Ml,[l("不同路径 II"),e(s)])]),t("td",Hl,[e(n,{to:"/problem/0063.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Il,[e(n,{to:"/tag/array.html"},{default:o(()=>[wl]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[ql]),_:1})]),t("td",zl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jl,t("td",Cl,[t("a",Ol,[l("最小路径和"),e(s)])]),t("td",Ll,[e(n,{to:"/problem/0064.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",El,[e(n,{to:"/tag/array.html"},{default:o(()=>[Pl]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Kl]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[Vl]),_:1})]),t("td",Nl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dl,t("td",Bl,[t("a",Yl,[l("爬楼梯"),e(s)])]),t("td",Al,[e(n,{to:"/problem/0070.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jl,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[Rl]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Sl]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ul]),_:1})]),t("td",Wl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xl,t("td",Fl,[t("a",Gl,[l("编辑距离"),e(s)])]),t("td",Tl,[e(n,{to:"/problem/0072.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ql,[e(n,{to:"/tag/string.html"},{default:o(()=>[Zl]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$l]),_:1})]),t("td",to,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eo,t("td",lo,[t("a",oo,[l("最大矩形"),e(s)])]),t("td",no,[e(n,{to:"/problem/0085.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",so,[e(n,{to:"/tag/stack.html"},{default:o(()=>[_o]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[io]),_:1}),l(),co]),t("td",ro,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ho,t("td",fo,[t("a",go,[l("扰乱字符串"),e(s)])]),uo,t("td",mo,[e(n,{to:"/tag/string.html"},{default:o(()=>[yo]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[xo]),_:1})]),t("td",po,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bo,t("td",ko,[t("a",Mo,[l("解码方法"),e(s)])]),Ho,t("td",Io,[e(n,{to:"/tag/string.html"},{default:o(()=>[wo]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vo]),_:1})]),t("td",qo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zo,t("td",jo,[t("a",Co,[l("不同的二叉搜索树 II"),e(s)])]),t("td",Oo,[e(n,{to:"/problem/0095.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Lo,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Eo]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Po]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ko]),_:1}),l(),Vo]),t("td",No,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Do,t("td",Bo,[t("a",Yo,[l("不同的二叉搜索树"),e(s)])]),t("td",Ao,[e(n,{to:"/problem/0096.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jo,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Ro]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[So]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Uo]),_:1}),l(),Wo]),t("td",Xo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fo,t("td",Go,[t("a",To,[l("交错字符串"),e(s)])]),t("td",Qo,[e(n,{to:"/problem/0097.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Zo,[e(n,{to:"/tag/string.html"},{default:o(()=>[$o]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tn]),_:1})]),t("td",en,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ln,t("td",on,[t("a",nn,[l("不同的子序列"),e(s)])]),sn,t("td",dn,[e(n,{to:"/tag/string.html"},{default:o(()=>[_n]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[an]),_:1})]),t("td",cn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rn,t("td",hn,[t("a",fn,[l("杨辉三角"),e(s)])]),t("td",gn,[e(n,{to:"/problem/0118.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",un,[e(n,{to:"/tag/array.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yn]),_:1})]),t("td",xn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pn,t("td",bn,[t("a",kn,[l("杨辉三角 II"),e(s)])]),Mn,t("td",Hn,[e(n,{to:"/tag/array.html"},{default:o(()=>[In]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[wn]),_:1})]),t("td",vn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qn,t("td",zn,[t("a",jn,[l("三角形最小路径和"),e(s)])]),t("td",Cn,[e(n,{to:"/problem/0120.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",On,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ln]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[En]),_:1})]),t("td",Pn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kn,t("td",Vn,[t("a",Nn,[l("买卖股票的最佳时机"),e(s)])]),t("td",Dn,[e(n,{to:"/problem/0121.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bn,[e(n,{to:"/tag/array.html"},{default:o(()=>[Yn]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[An]),_:1})]),t("td",Jn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Rn,t("td",Sn,[t("a",Un,[l("买卖股票的最佳时机 II"),e(s)])]),t("td",Wn,[e(n,{to:"/problem/0122.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xn,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Fn]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Gn]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Tn]),_:1})]),t("td",Qn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zn,t("td",$n,[t("a",ts,[l("买卖股票的最佳时机 III"),e(s)])]),t("td",es,[e(n,{to:"/problem/0123.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ls,[e(n,{to:"/tag/array.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ns]),_:1})]),t("td",ss,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ds,t("td",_s,[t("a",as,[l("二叉树中的最大路径和"),e(s)])]),t("td",is,[e(n,{to:"/problem/0124.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cs,[e(n,{to:"/tag/tree.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[hs]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[fs]),_:1}),l(),gs]),t("td",us,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ms,t("td",ys,[t("a",xs,[l("分割回文串"),e(s)])]),t("td",ps,[e(n,{to:"/problem/0131.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bs,[e(n,{to:"/tag/string.html"},{default:o(()=>[ks]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ms]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[Hs]),_:1})]),t("td",Is,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ws,t("td",vs,[t("a",qs,[l("分割回文串 II"),e(s)])]),zs,t("td",js,[e(n,{to:"/tag/string.html"},{default:o(()=>[Cs]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Os]),_:1})]),t("td",Ls,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Es,t("td",Ps,[t("a",Ks,[l("单词拆分"),e(s)])]),t("td",Vs,[e(n,{to:"/problem/0139.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ns,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Ds]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ys]),_:1}),l(),As]),t("td",Js,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rs,t("td",Ss,[t("a",Us,[l("单词拆分 II"),e(s)])]),Ws,t("td",Xs,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Fs]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ts]),_:1}),l(),Qs]),t("td",Zs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$s,t("td",td,[t("a",ed,[l("乘积最大子数组"),e(s)])]),t("td",ld,[e(n,{to:"/problem/0152.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",od,[e(n,{to:"/tag/array.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[sd]),_:1})]),t("td",dd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_d,t("td",ad,[t("a",id,[l("地下城游戏"),e(s)])]),t("td",cd,[e(n,{to:"/problem/0174.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",rd,[e(n,{to:"/tag/array.html"},{default:o(()=>[hd]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[gd]),_:1})]),t("td",ud,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[md,t("td",yd,[t("a",xd,[l("买卖股票的最佳时机 IV"),e(s)])]),t("td",pd,[e(n,{to:"/problem/0188.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bd,[e(n,{to:"/tag/array.html"},{default:o(()=>[kd]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Md]),_:1})]),t("td",Hd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Id,t("td",wd,[t("a",vd,[l("打家劫舍"),e(s)])]),t("td",qd,[e(n,{to:"/problem/0198.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",zd,[e(n,{to:"/tag/array.html"},{default:o(()=>[jd]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Cd]),_:1})]),t("td",Od,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ld,t("td",Ed,[t("a",Pd,[l("打家劫舍 II"),e(s)])]),Kd,t("td",Vd,[e(n,{to:"/tag/array.html"},{default:o(()=>[Nd]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Dd]),_:1})]),t("td",Bd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yd,t("td",Ad,[t("a",Jd,[l("最大正方形"),e(s)])]),t("td",Rd,[e(n,{to:"/problem/0221.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sd,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ud]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Wd]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[Xd]),_:1})]),t("td",Fd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gd,t("td",Td,[t("a",Qd,[l("数字 1 的个数"),e(s)])]),t("td",Zd,[e(n,{to:"/problem/0233.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$d,[e(n,{to:"/tag/recursion.html"},{default:o(()=>[t_]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[l_]),_:1})]),t("td",o_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n_,t("td",s_,[t("a",d_,[l("为运算表达式设计优先级"),e(s)])]),__,t("td",a_,[e(n,{to:"/tag/recursion.html"},{default:o(()=>[i_]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[c_]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[r_]),_:1}),l(),h_]),t("td",f_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g_,t("td",u_,[t("a",m_,[l("粉刷房子 🔒"),e(s)])]),y_,t("td",x_,[e(n,{to:"/tag/array.html"},{default:o(()=>[p_]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[b_]),_:1})]),t("td",k_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M_,t("td",H_,[t("a",I_,[l("丑数 II"),e(s)])]),t("td",w_,[e(n,{to:"/problem/0264.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",v_,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[z_]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[j_]),_:1}),l(),C_]),t("td",O_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L_,t("td",E_,[t("a",P_,[l("粉刷房子 II 🔒"),e(s)])]),K_,t("td",V_,[e(n,{to:"/tag/array.html"},{default:o(()=>[N_]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[D_]),_:1})]),t("td",B_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y_,t("td",A_,[t("a",J_,[l("栅栏涂色 🔒"),e(s)])]),R_,t("td",S_,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[U_]),_:1})]),t("td",W_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X_,t("td",F_,[t("a",G_,[l("完全平方数"),e(s)])]),t("td",T_,[e(n,{to:"/problem/0279.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Q_,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Z_]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[$_]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ta]),_:1})]),t("td",ea,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[la,t("td",oa,[t("a",na,[l("翻转游戏 II 🔒"),e(s)])]),sa,t("td",da,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[_a]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[aa]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ia]),_:1}),l(),ca]),t("td",ra,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ha,t("td",fa,[t("a",ga,[l("最长递增子序列"),e(s)])]),t("td",ua,[e(n,{to:"/problem/0300.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ma,[e(n,{to:"/tag/array.html"},{default:o(()=>[ya]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[xa]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[pa]),_:1})]),t("td",ba,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ka,t("td",Ma,[t("a",Ha,[l("买卖股票的最佳时机含冷冻期"),e(s)])]),t("td",Ia,[e(n,{to:"/problem/0309.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wa,[e(n,{to:"/tag/array.html"},{default:o(()=>[va]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qa]),_:1})]),t("td",za,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ja,t("td",Ca,[t("a",Oa,[l("戳气球"),e(s)])]),La,t("td",Ea,[e(n,{to:"/tag/array.html"},{default:o(()=>[Pa]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ka]),_:1})]),t("td",Va,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Na,t("td",Da,[t("a",Ba,[l("超级丑数"),e(s)])]),Ya,t("td",Aa,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ja]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Ra]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Sa]),_:1})]),t("td",Ua,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wa,t("td",Xa,[t("a",Fa,[l("零钱兑换"),e(s)])]),t("td",Ga,[e(n,{to:"/problem/0322.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ta,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Qa]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Za]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$a]),_:1})]),t("td",ti,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ei,t("td",li,[t("a",oi,[l("矩阵中的最长递增路径"),e(s)])]),ni,t("td",si,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[di]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_i]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[ai]),_:1}),l(),ii]),t("td",ci,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ri,t("td",hi,[t("a",fi,[l("最大二叉搜索子树 🔒"),e(s)])]),gi,t("td",ui,[e(n,{to:"/tag/tree.html"},{default:o(()=>[mi]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[yi]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[xi]),_:1}),l(),pi]),t("td",bi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ki,t("td",Mi,[t("a",Hi,[l("打家劫舍 III"),e(s)])]),Ii,t("td",wi,[e(n,{to:"/tag/tree.html"},{default:o(()=>[vi]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[qi]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[zi]),_:1}),l(),ji]),t("td",Ci,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oi,t("td",Li,[t("a",Ei,[l("比特位计数"),e(s)])]),Pi,t("td",Ki,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Vi]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ni]),_:1})]),t("td",Di,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Bi,t("td",Yi,[t("a",Ai,[l("整数拆分"),e(s)])]),t("td",Ji,[e(n,{to:"/problem/0343.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ri,[e(n,{to:"/tag/math.html"},{default:o(()=>[Si]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ui]),_:1})]),t("td",Wi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xi,t("td",Fi,[t("a",Gi,[l("安卓系统手势解锁 🔒"),e(s)])]),Ti,t("td",Qi,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Zi]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$i]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[tc]),_:1}),l(),ec]),t("td",lc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oc,t("td",nc,[t("a",sc,[l("俄罗斯套娃信封问题"),e(s)])]),t("td",dc,[e(n,{to:"/problem/0354.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_c,[e(n,{to:"/tag/array.html"},{default:o(()=>[ac]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[ic]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[cc]),_:1}),l(),rc]),t("td",hc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fc,t("td",gc,[t("a",uc,[l("统计各位数字都不同的数字个数"),e(s)])]),mc,t("td",yc,[e(n,{to:"/tag/math.html"},{default:o(()=>[xc]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[pc]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[bc]),_:1})]),t("td",kc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mc,t("td",Hc,[t("a",Ic,[l("轰炸敌人 🔒"),e(s)])]),wc,t("td",vc,[e(n,{to:"/tag/array.html"},{default:o(()=>[qc]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[zc]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[jc]),_:1})]),t("td",Cc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oc,t("td",Lc,[t("a",Ec,[l("最大整除子集"),e(s)])]),Pc,t("td",Kc,[e(n,{to:"/tag/array.html"},{default:o(()=>[Vc]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Nc]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Dc]),_:1}),l(),Bc]),t("td",Yc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ac,t("td",Jc,[t("a",Rc,[l("猜数字大小 II"),e(s)])]),t("td",Sc,[e(n,{to:"/problem/0375.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Uc,[e(n,{to:"/tag/math.html"},{default:o(()=>[Wc]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Xc]),_:1}),l(),e(n,{to:"/tag/game-theory.html"},{default:o(()=>[Fc]),_:1})]),t("td",Gc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tc,t("td",Qc,[t("a",Zc,[l("摆动序列"),e(s)])]),$c,t("td",tr,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[er]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[lr]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[or]),_:1})]),t("td",nr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sr,t("td",dr,[t("a",_r,[l("组合总和 Ⅳ"),e(s)])]),ar,t("td",ir,[e(n,{to:"/tag/array.html"},{default:o(()=>[cr]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[rr]),_:1})]),t("td",hr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fr,t("td",gr,[t("a",ur,[l("判断子序列"),e(s)])]),t("td",mr,[e(n,{to:"/problem/0392.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yr,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[xr]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[pr]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[br]),_:1})]),t("td",kr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mr,t("td",Hr,[t("a",Ir,[l("旋转函数"),e(s)])]),wr,t("td",vr,[e(n,{to:"/tag/array.html"},{default:o(()=>[qr]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[zr]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[jr]),_:1})]),t("td",Cr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Or,t("td",Lr,[t("a",Er,[l("整数替换"),e(s)])]),Pr,t("td",Kr,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Vr]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Nr]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[Dr]),_:1}),l(),Br]),t("td",Yr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ar,t("td",Jr,[t("a",Rr,[l("青蛙过河"),e(s)])]),Sr,t("td",Ur,[e(n,{to:"/tag/array.html"},{default:o(()=>[Wr]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Xr]),_:1})]),t("td",Fr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gr,t("td",Tr,[t("a",Qr,[l("分割数组的最大值"),e(s)])]),Zr,t("td",$r,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[th]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[eh]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[lh]),_:1}),l(),oh]),t("td",nh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sh,t("td",dh,[t("a",_h,[l("等差数列划分"),e(s)])]),ah,t("td",ih,[e(n,{to:"/tag/array.html"},{default:o(()=>[ch]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[rh]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[hh]),_:1})]),t("td",fh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gh,t("td",uh,[t("a",mh,[l("分割等和子集"),e(s)])]),t("td",yh,[e(n,{to:"/problem/0416.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xh,[e(n,{to:"/tag/array.html"},{default:o(()=>[ph]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bh]),_:1})]),t("td",kh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mh,t("td",Hh,[t("a",Ih,[l("屏幕可显示句子的数量 🔒"),e(s)])]),wh,t("td",vh,[e(n,{to:"/tag/array.html"},{default:o(()=>[qh]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[zh]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[jh]),_:1})]),t("td",Ch,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oh,t("td",Lh,[t("a",Eh,[l("无重叠区间"),e(s)])]),Ph,t("td",Kh,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Vh]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Nh]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Dh]),_:1}),l(),Bh]),t("td",Yh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ah,t("td",Jh,[t("a",Rh,[l("等差数列划分 II - 子序列"),e(s)])]),Sh,t("td",Uh,[e(n,{to:"/tag/array.html"},{default:o(()=>[Wh]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Xh]),_:1})]),t("td",Fh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gh,t("td",Th,[t("a",Qh,[l("可怜的小猪"),e(s)])]),Zh,t("td",$h,[e(n,{to:"/tag/math.html"},{default:o(()=>[t1]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[e1]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[l1]),_:1})]),t("td",o1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n1,t("td",s1,[t("a",d1,[l("我能赢吗"),e(s)])]),_1,t("td",a1,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[i1]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[c1]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[r1]),_:1}),l(),h1]),t("td",f1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g1,t("td",u1,[t("a",m1,[l("最优账单平衡 🔒"),e(s)])]),y1,t("td",x1,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[p1]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[b1]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[k1]),_:1}),l(),M1]),t("td",H1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[I1,t("td",w1,[t("a",v1,[l("统计重复个数"),e(s)])]),q1,t("td",z1,[e(n,{to:"/tag/string.html"},{default:o(()=>[j1]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[C1]),_:1})]),t("td",O1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L1,t("td",E1,[t("a",P1,[l("环绕字符串中唯一的子字符串"),e(s)])]),K1,t("td",V1,[e(n,{to:"/tag/string.html"},{default:o(()=>[N1]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[D1]),_:1})]),t("td",B1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y1,t("td",A1,[t("a",J1,[l("编码最短长度的字符串 🔒"),e(s)])]),R1,t("td",S1,[e(n,{to:"/tag/string.html"},{default:o(()=>[U1]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[W1]),_:1})]),t("td",X1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[F1,t("td",G1,[t("a",T1,[l("连接词"),e(s)])]),Q1,t("td",Z1,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[$1]),_:1}),l(),e(n,{to:"/tag/trie.html"},{default:o(()=>[tf]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ef]),_:1}),l(),lf]),t("td",of,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nf,t("td",sf,[t("a",df,[l("火柴拼正方形"),e(s)])]),_f,t("td",af,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[cf]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[rf]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[hf]),_:1}),l(),ff]),t("td",gf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uf,t("td",mf,[t("a",yf,[l("一和零"),e(s)])]),t("td",xf,[e(n,{to:"/problem/0474.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",pf,[e(n,{to:"/tag/array.html"},{default:o(()=>[bf]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[kf]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Mf]),_:1})]),t("td",Hf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[If,t("td",wf,[t("a",vf,[l("预测赢家"),e(s)])]),qf,t("td",zf,[e(n,{to:"/tag/recursion.html"},{default:o(()=>[jf]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Cf]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Of]),_:1}),l(),Lf]),t("td",Ef,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pf,t("td",Kf,[t("a",Vf,[l("最大连续1的个数 II 🔒"),e(s)])]),Nf,t("td",Df,[e(n,{to:"/tag/array.html"},{default:o(()=>[Bf]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Yf]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[Af]),_:1})]),t("td",Jf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rf,t("td",Sf,[t("a",Uf,[l("祖玛游戏"),e(s)])]),Wf,t("td",Xf,[e(n,{to:"/tag/stack.html"},{default:o(()=>[Ff]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Gf]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[Tf]),_:1}),l(),Qf]),t("td",Zf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$f,t("td",tg,[t("a",eg,[l("目标和"),e(s)])]),t("td",lg,[e(n,{to:"/problem/0494.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",og,[e(n,{to:"/tag/array.html"},{default:o(()=>[ng]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[sg]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[dg]),_:1})]),t("td",_g,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ag,t("td",ig,[t("a",cg,[l("斐波那契数"),e(s)])]),t("td",rg,[e(n,{to:"/problem/0509.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hg,[e(n,{to:"/tag/recursion.html"},{default:o(()=>[fg]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[gg]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[ug]),_:1}),l(),mg]),t("td",yg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xg,t("td",pg,[t("a",bg,[l("自由之路"),e(s)])]),t("td",kg,[e(n,{to:"/problem/0514.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Mg,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Hg]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ig]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[wg]),_:1}),l(),vg]),t("td",qg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zg,t("td",jg,[t("a",Cg,[l("最长回文子序列"),e(s)])]),t("td",Og,[e(n,{to:"/problem/0516.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Lg,[e(n,{to:"/tag/string.html"},{default:o(()=>[Eg]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Pg]),_:1})]),t("td",Kg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vg,t("td",Ng,[t("a",Dg,[l("零钱兑换 II"),e(s)])]),t("td",Bg,[e(n,{to:"/problem/0518.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yg,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ag]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Jg]),_:1})]),t("td",Rg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sg,t("td",Ug,[t("a",Wg,[l("优美的排列"),e(s)])]),Xg,t("td",Fg,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Gg]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Tg]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Qg]),_:1}),l(),Zg]),t("td",$g,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tu,t("td",eu,[t("a",lu,[l("01 矩阵"),e(s)])]),ou,t("td",nu,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[su]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[du]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_u]),_:1}),l(),au]),t("td",iu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cu,t("td",ru,[t("a",hu,[l("移除盒子"),e(s)])]),fu,t("td",gu,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[uu]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[mu]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yu]),_:1})]),t("td",xu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pu,t("td",bu,[t("a",ku,[l("学生出勤记录 II"),e(s)])]),Mu,t("td",Hu,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Iu]),_:1})]),t("td",wu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vu,t("td",qu,[t("a",zu,[l("最优除法"),e(s)])]),ju,t("td",Cu,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ou]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Lu]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Eu]),_:1})]),t("td",Pu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ku,t("td",Vu,[t("a",Nu,[l("矩阵中最长的连续1线段 🔒"),e(s)])]),Du,t("td",Bu,[e(n,{to:"/tag/array.html"},{default:o(()=>[Yu]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Au]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[Ju]),_:1})]),t("td",Ru,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Su,t("td",Uu,[t("a",Wu,[l("最大休假天数 🔒"),e(s)])]),Xu,t("td",Fu,[e(n,{to:"/tag/array.html"},{default:o(()=>[Gu]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Tu]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[Qu]),_:1})]),t("td",Zu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$u,t("td",tm,[t("a",em,[l("出界的路径数"),e(s)])]),lm,t("td",om,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[nm]),_:1})]),t("td",sm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dm,t("td",_m,[t("a",am,[l("两个字符串的删除操作"),e(s)])]),t("td",im,[e(n,{to:"/problem/0583.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cm,[e(n,{to:"/tag/string.html"},{default:o(()=>[rm]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[hm]),_:1})]),t("td",fm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gm,t("td",um,[t("a",mm,[l("不含连续1的非负整数"),e(s)])]),ym,t("td",xm,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[pm]),_:1})]),t("td",bm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[km,t("td",Mm,[t("a",Hm,[l("K 个逆序对数组"),e(s)])]),Im,t("td",wm,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vm]),_:1})]),t("td",qm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zm,t("td",jm,[t("a",Cm,[l("寻找数组的错位排列 🔒"),e(s)])]),Om,t("td",Lm,[e(n,{to:"/tag/math.html"},{default:o(()=>[Em]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Pm]),_:1})]),t("td",Km,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vm,t("td",Nm,[t("a",Dm,[l("大礼包"),e(s)])]),Bm,t("td",Ym,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Am]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[Jm]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Rm]),_:1}),l(),Sm]),t("td",Um,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wm,t("td",Xm,[t("a",Fm,[l("解码方法 II"),e(s)])]),Gm,t("td",Tm,[e(n,{to:"/tag/string.html"},{default:o(()=>[Qm]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Zm]),_:1})]),t("td",$m,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ty,t("td",ey,[t("a",ly,[l("最长数对链"),e(s)])]),oy,t("td",ny,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[sy]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[dy]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_y]),_:1}),l(),ay]),t("td",iy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cy,t("td",ry,[t("a",hy,[l("回文子串"),e(s)])]),fy,t("td",gy,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[uy]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[my]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yy]),_:1})]),t("td",xy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[py,t("td",by,[t("a",ky,[l("两个键的键盘"),e(s)])]),My,t("td",Hy,[e(n,{to:"/tag/math.html"},{default:o(()=>[Iy]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[wy]),_:1})]),t("td",vy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qy,t("td",zy,[t("a",jy,[l("四个键的键盘 🔒"),e(s)])]),Cy,t("td",Oy,[e(n,{to:"/tag/math.html"},{default:o(()=>[Ly]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ey]),_:1})]),t("td",Py,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ky,t("td",Vy,[t("a",Ny,[l("成本最小路径 🔒"),e(s)])]),Dy,t("td",By,[e(n,{to:"/tag/array.html"},{default:o(()=>[Yy]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ay]),_:1})]),t("td",Jy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ry,t("td",Sy,[t("a",Uy,[l("奇怪的打印机"),e(s)])]),Wy,t("td",Xy,[e(n,{to:"/tag/string.html"},{default:o(()=>[Fy]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Gy]),_:1})]),t("td",Ty,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qy,t("td",Zy,[t("a",$y,[l("最长递增子序列的个数"),e(s)])]),t3,t("td",e3,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[l3]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[o3]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[n3]),_:1}),l(),s3]),t("td",d3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_3,t("td",a3,[t("a",i3,[l("有效的括号字符串"),e(s)])]),t("td",c3,[e(n,{to:"/problem/0678.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",r3,[e(n,{to:"/tag/stack.html"},{default:o(()=>[h3]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[f3]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[g3]),_:1}),l(),u3]),t("td",m3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y3,t("td",x3,[t("a",p3,[l("骑士在棋盘上的概率"),e(s)])]),b3,t("td",k3,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[M3]),_:1})]),t("td",H3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I3,t("td",w3,[t("a",v3,[l("三个无重叠子数组的最大和"),e(s)])]),q3,t("td",z3,[e(n,{to:"/tag/array.html"},{default:o(()=>[j3]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[C3]),_:1})]),t("td",O3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L3,t("td",E3,[t("a",P3,[l("贴纸拼词"),e(s)])]),K3,t("td",V3,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[N3]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[D3]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[B3]),_:1}),l(),Y3]),t("td",A3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J3,t("td",R3,[t("a",S3,[l("划分为k个相等的子集"),e(s)])]),U3,t("td",W3,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[X3]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[F3]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[G3]),_:1}),l(),T3]),t("td",Q3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z3,t("td",$3,[t("a",tx,[l("两个字符串的最小ASCII删除和"),e(s)])]),t("td",ex,[e(n,{to:"/problem/0712.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lx,[e(n,{to:"/tag/string.html"},{default:o(()=>[ox]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[nx]),_:1})]),t("td",sx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dx,t("td",_x,[t("a",ax,[l("买卖股票的最佳时机含手续费"),e(s)])]),t("td",ix,[e(n,{to:"/problem/0714.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cx,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[rx]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[hx]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[fx]),_:1})]),t("td",gx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ux,t("td",mx,[t("a",yx,[l("最长重复子数组"),e(s)])]),xx,t("td",px,[e(n,{to:"/tag/array.html"},{default:o(()=>[bx]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[kx]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Mx]),_:1}),l(),Hx]),t("td",Ix,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wx,t("td",vx,[t("a",qx,[l("最小窗口子序列 🔒"),e(s)])]),zx,t("td",jx,[e(n,{to:"/tag/string.html"},{default:o(()=>[Cx]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ox]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[Lx]),_:1})]),t("td",Ex,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Px,t("td",Kx,[t("a",Vx,[l("统计不同回文子序列"),e(s)])]),Nx,t("td",Dx,[e(n,{to:"/tag/string.html"},{default:o(()=>[Bx]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Yx]),_:1})]),t("td",Ax,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jx,t("td",Rx,[t("a",Sx,[l("删除并获得点数"),e(s)])]),Ux,t("td",Wx,[e(n,{to:"/tag/array.html"},{default:o(()=>[Xx]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Fx]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Gx]),_:1})]),t("td",Tx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qx,t("td",Zx,[t("a",$x,[l("摘樱桃"),e(s)])]),t4,t("td",e4,[e(n,{to:"/tag/array.html"},{default:o(()=>[l4]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[o4]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[n4]),_:1})]),t("td",s4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d4,t("td",_4,[t("a",a4,[l("使用最小花费爬楼梯"),e(s)])]),i4,t("td",c4,[e(n,{to:"/tag/array.html"},{default:o(()=>[r4]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[h4]),_:1})]),t("td",f4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[g4,t("td",u4,[t("a",m4,[l("角矩形的数量 🔒"),e(s)])]),y4,t("td",x4,[e(n,{to:"/tag/array.html"},{default:o(()=>[p4]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[b4]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[k4]),_:1}),l(),M4]),t("td",H4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I4,t("td",w4,[t("a",v4,[l("最大加号标志"),e(s)])]),q4,t("td",z4,[e(n,{to:"/tag/array.html"},{default:o(()=>[j4]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[C4]),_:1})]),t("td",O4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L4,t("td",E4,[t("a",P4,[l("K 站中转内最便宜的航班"),e(s)])]),K4,t("td",V4,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[N4]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[D4]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[B4]),_:1}),l(),Y4]),t("td",A4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J4,t("td",R4,[t("a",S4,[l("旋转数字"),e(s)])]),U4,t("td",W4,[e(n,{to:"/tag/math.html"},{default:o(()=>[X4]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[F4]),_:1})]),t("td",G4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T4,t("td",Q4,[t("a",Z4,[l("多米诺和托米诺平铺"),e(s)])]),$4,t("td",t2,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[e2]),_:1})]),t("td",l2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o2,t("td",n2,[t("a",s2,[l("匹配子序列的单词数"),e(s)])]),d2,t("td",_2,[e(n,{to:"/tag/trie.html"},{default:o(()=>[a2]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[i2]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[c2]),_:1}),l(),r2]),t("td",h2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f2,t("td",g2,[t("a",u2,[l("香槟塔"),e(s)])]),m2,t("td",y2,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[x2]),_:1})]),t("td",p2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b2,t("td",k2,[t("a",M2,[l("使序列递增的最小交换次数"),e(s)])]),H2,t("td",I2,[e(n,{to:"/tag/array.html"},{default:o(()=>[w2]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[v2]),_:1})]),t("td",q2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z2,t("td",j2,[t("a",C2,[l("数组的均值分割"),e(s)])]),O2,t("td",L2,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[E2]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[P2]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[K2]),_:1}),l(),V2]),t("td",N2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D2,t("td",B2,[t("a",Y2,[l("分汤"),e(s)])]),A2,t("td",J2,[e(n,{to:"/tag/math.html"},{default:o(()=>[R2]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[S2]),_:1}),l(),e(n,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[U2]),_:1})]),t("td",W2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X2,t("td",F2,[t("a",G2,[l("最大平均值和的分组"),e(s)])]),T2,t("td",Q2,[e(n,{to:"/tag/array.html"},{default:o(()=>[Z2]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$2]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[tp]),_:1})]),t("td",ep,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lp,t("td",op,[t("a",np,[l("赛车"),e(s)])]),sp,t("td",dp,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_p]),_:1})]),t("td",ap,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ip,t("td",cp,[t("a",rp,[l("带因子的二叉树"),e(s)])]),hp,t("td",fp,[e(n,{to:"/tag/array.html"},{default:o(()=>[gp]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[up]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[mp]),_:1}),l(),yp]),t("td",xp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pp,t("td",bp,[t("a",kp,[l("统计子串中的唯一字符"),e(s)])]),Mp,t("td",Hp,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Ip]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[wp]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vp]),_:1})]),t("td",qp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zp,t("td",jp,[t("a",Cp,[l("树中距离之和"),e(s)])]),Op,t("td",Lp,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Ep]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pp]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[Kp]),_:1}),l(),Vp]),t("td",Np,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dp,t("td",Bp,[t("a",Yp,[l("新 21 点"),e(s)])]),Ap,t("td",Jp,[e(n,{to:"/tag/math.html"},{default:o(()=>[Rp]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Sp]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[Up]),_:1}),l(),Wp]),t("td",Xp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fp,t("td",Gp,[t("a",Tp,[l("推多米诺"),e(s)])]),Qp,t("td",Zp,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[$p]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[t5]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[e5]),_:1})]),t("td",l5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o5,t("td",n5,[t("a",s5,[l("数组中的最长山脉"),e(s)])]),t("td",d5,[e(n,{to:"/problem/0845.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_5,[e(n,{to:"/tag/array.html"},{default:o(()=>[a5]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[i5]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[c5]),_:1}),l(),r5]),t("td",h5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f5,t("td",g5,[t("a",u5,[l("访问所有节点的最短路径"),e(s)])]),m5,t("td",y5,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[x5]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[p5]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[b5]),_:1}),l(),k5]),t("td",M5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H5,t("td",I5,[t("a",w5,[l("最低加油次数"),e(s)])]),v5,t("td",q5,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[z5]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[j5]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[C5]),_:1}),l(),O5]),t("td",L5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E5,t("td",P5,[t("a",K5,[l("最长的斐波那契子序列的长度"),e(s)])]),V5,t("td",N5,[e(n,{to:"/tag/array.html"},{default:o(()=>[D5]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[B5]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Y5]),_:1})]),t("td",A5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J5,t("td",R5,[t("a",S5,[l("石子游戏"),e(s)])]),U5,t("td",W5,[e(n,{to:"/tag/array.html"},{default:o(()=>[X5]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[F5]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[G5]),_:1}),l(),T5]),t("td",Q5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z5,t("td",$5,[t("a",t0,[l("盈利计划"),e(s)])]),e0,t("td",l0,[e(n,{to:"/tag/array.html"},{default:o(()=>[o0]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[n0]),_:1})]),t("td",s0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d0,t("td",_0,[t("a",a0,[l("鸡蛋掉落"),e(s)])]),i0,t("td",c0,[e(n,{to:"/tag/math.html"},{default:o(()=>[r0]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[h0]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[f0]),_:1})]),t("td",g0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[u0,t("td",m0,[t("a",y0,[l("所有可能的真二叉树"),e(s)])]),x0,t("td",p0,[e(n,{to:"/tag/tree.html"},{default:o(()=>[b0]),_:1}),l(),e(n,{to:"/tag/recursion.html"},{default:o(()=>[k0]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[M0]),_:1}),l(),H0]),t("td",I0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w0,t("td",v0,[t("a",q0,[l("子数组按位或操作"),e(s)])]),z0,t("td",j0,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[C0]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[O0]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[L0]),_:1})]),t("td",E0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P0,t("td",K0,[t("a",V0,[l("最大为 N 的数字组合"),e(s)])]),N0,t("td",D0,[e(n,{to:"/tag/array.html"},{default:o(()=>[B0]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Y0]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[A0]),_:1}),l(),J0]),t("td",R0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[S0,t("td",U0,[t("a",W0,[l("DI 序列的有效排列"),e(s)])]),X0,t("td",F0,[e(n,{to:"/tag/string.html"},{default:o(()=>[G0]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[T0]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[Q0]),_:1})]),t("td",Z0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$0,t("td",tb,[t("a",eb,[l("子数组的最小值之和"),e(s)])]),lb,t("td",ob,[e(n,{to:"/tag/stack.html"},{default:o(()=>[nb]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[sb]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[db]),_:1}),l(),_b]),t("td",ab,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ib,t("td",cb,[t("a",rb,[l("猫和老鼠"),e(s)])]),hb,t("td",fb,[e(n,{to:"/tag/graph.html"},{default:o(()=>[gb]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[ub]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[mb]),_:1}),l(),yb]),t("td",xb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pb,t("td",bb,[t("a",kb,[l("环形子数组的最大和"),e(s)])]),t("td",Mb,[e(n,{to:"/problem/0918.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hb,[e(n,{to:"/tag/queue.html"},{default:o(()=>[Ib]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[wb]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[vb]),_:1}),l(),qb]),t("td",zb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jb,t("td",Cb,[t("a",Ob,[l("播放列表的数量"),e(s)])]),Lb,t("td",Eb,[e(n,{to:"/tag/math.html"},{default:o(()=>[Pb]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Kb]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[Vb]),_:1})]),t("td",Nb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Db,t("td",Bb,[t("a",Yb,[l("将字符串翻转到单调递增"),e(s)])]),Ab,t("td",Jb,[e(n,{to:"/tag/string.html"},{default:o(()=>[Rb]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Sb]),_:1})]),t("td",Ub,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wb,t("td",Xb,[t("a",Fb,[l("下降路径最小和"),e(s)])]),t("td",Gb,[e(n,{to:"/problem/0931.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Tb,[e(n,{to:"/tag/array.html"},{default:o(()=>[Qb]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Zb]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[$b]),_:1})]),t("td",t8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e8,t("td",l8,[t("a",o8,[l("骑士拨号器"),e(s)])]),n8,t("td",s8,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[d8]),_:1})]),t("td",_8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a8,t("td",i8,[t("a",c8,[l("不同的子序列 II"),e(s)])]),r8,t("td",h8,[e(n,{to:"/tag/string.html"},{default:o(()=>[f8]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[g8]),_:1})]),t("td",u8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m8,t("td",y8,[t("a",x8,[l("最短超级串"),e(s)])]),p8,t("td",b8,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[k8]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[M8]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[H8]),_:1}),l(),I8]),t("td",w8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[v8,t("td",q8,[t("a",z8,[l("最高的广告牌"),e(s)])]),j8,t("td",C8,[e(n,{to:"/tag/array.html"},{default:o(()=>[O8]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[L8]),_:1})]),t("td",E8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[P8,t("td",K8,[t("a",V8,[l("删列造序 III"),e(s)])]),N8,t("td",D8,[e(n,{to:"/tag/array.html"},{default:o(()=>[B8]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Y8]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[A8]),_:1})]),t("td",J8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R8,t("td",S8,[t("a",U8,[l("表示数字的最少运算符"),e(s)])]),W8,t("td",X8,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[F8]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[G8]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[T8]),_:1})]),t("td",Q8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Z8,t("td",$8,[t("a",t6,[l("监控二叉树"),e(s)])]),e6,t("td",l6,[e(n,{to:"/tag/tree.html"},{default:o(()=>[o6]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[n6]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[s6]),_:1}),l(),d6]),t("td",_6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[a6,t("td",i6,[t("a",c6,[l("奇偶跳"),e(s)])]),r6,t("td",h6,[e(n,{to:"/tag/stack.html"},{default:o(()=>[f6]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[g6]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[u6]),_:1}),l(),m6]),t("td",y6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x6,t("td",p6,[t("a",b6,[l("最长湍流子数组"),e(s)])]),k6,t("td",M6,[e(n,{to:"/tag/array.html"},{default:o(()=>[H6]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[I6]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[w6]),_:1})]),t("td",v6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q6,t("td",z6,[t("a",j6,[l("最低票价"),e(s)])]),C6,t("td",O6,[e(n,{to:"/tag/array.html"},{default:o(()=>[L6]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[E6]),_:1})]),t("td",P6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K6,t("td",V6,[t("a",N6,[l("平方数组的数目"),e(s)])]),D6,t("td",B6,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Y6]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[A6]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[J6]),_:1}),l(),R6]),t("td",S6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U6,t("td",W6,[t("a",X6,[l("合并石头的最低成本"),e(s)])]),F6,t("td",G6,[e(n,{to:"/tag/array.html"},{default:o(()=>[T6]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Q6]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[Z6]),_:1})]),t("td",$6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t7,t("td",e7,[t("a",l7,[l("至少有 1 位重复的数字"),e(s)])]),o7,t("td",n7,[e(n,{to:"/tag/math.html"},{default:o(()=>[s7]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[d7]),_:1})]),t("td",_7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[a7,t("td",i7,[t("a",c7,[l("最佳观光组合"),e(s)])]),r7,t("td",h7,[e(n,{to:"/tag/array.html"},{default:o(()=>[f7]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[g7]),_:1})]),t("td",u7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m7,t("td",y7,[t("a",x7,[l("视频拼接"),e(s)])]),p7,t("td",b7,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[k7]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[M7]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[H7]),_:1})]),t("td",I7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w7,t("td",v7,[t("a",q7,[l("除数博弈"),e(s)])]),z7,t("td",j7,[e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[C7]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[O7]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[L7]),_:1}),l(),E7]),t("td",P7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[K7,t("td",V7,[t("a",N7,[l("最长等差数列"),e(s)])]),D7,t("td",B7,[e(n,{to:"/tag/array.html"},{default:o(()=>[Y7]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[A7]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[J7]),_:1}),l(),R7]),t("td",S7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U7,t("td",W7,[t("a",X7,[l("两个非重叠子数组的最大和"),e(s)])]),F7,t("td",G7,[e(n,{to:"/tag/array.html"},{default:o(()=>[T7]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Q7]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[Z7]),_:1})]),t("td",$7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t9,t("td",e9,[t("a",l9,[l("不相交的线"),e(s)])]),o9,t("td",n9,[e(n,{to:"/tag/array.html"},{default:o(()=>[s9]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[d9]),_:1})]),t("td",_9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a9,t("td",i9,[t("a",c9,[l("多边形三角剖分的最低得分"),e(s)])]),r9,t("td",h9,[e(n,{to:"/tag/array.html"},{default:o(()=>[f9]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[g9]),_:1})]),t("td",u9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m9,t("td",y9,[t("a",x9,[l("分隔数组以得到最大和"),e(s)])]),p9,t("td",b9,[e(n,{to:"/tag/array.html"},{default:o(()=>[k9]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[M9]),_:1})]),t("td",H9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I9,t("td",w9,[t("a",v9,[l("最长字符串链"),e(s)])]),q9,t("td",z9,[e(n,{to:"/tag/array.html"},{default:o(()=>[j9]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[C9]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[O9]),_:1}),l(),L9]),t("td",E9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P9,t("td",K9,[t("a",V9,[l("最后一块石头的重量 II"),e(s)])]),t("td",N9,[e(n,{to:"/problem/1049.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",D9,[e(n,{to:"/tag/array.html"},{default:o(()=>[B9]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Y9]),_:1})]),t("td",A9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J9,t("td",R9,[t("a",S9,[l("最长重复子串 🔒"),e(s)])]),U9,t("td",W9,[e(n,{to:"/tag/string.html"},{default:o(()=>[X9]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[F9]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[G9]),_:1}),l(),T9]),t("td",Q9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z9,t("td",$9,[t("a",tk,[l("校园自行车分配 II 🔒"),e(s)])]),ek,t("td",lk,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ok]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[nk]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[sk]),_:1}),l(),dk]),t("td",_k,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ak,t("td",ik,[t("a",ck,[l("范围内的数字计数 🔒"),e(s)])]),rk,t("td",hk,[e(n,{to:"/tag/math.html"},{default:o(()=>[fk]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[gk]),_:1})]),t("td",uk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mk,t("td",yk,[t("a",xk,[l("最短公共超序列"),e(s)])]),pk,t("td",bk,[e(n,{to:"/tag/string.html"},{default:o(()=>[kk]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Mk]),_:1})]),t("td",Hk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ik,t("td",wk,[t("a",vk,[l("填充书架"),e(s)])]),qk,t("td",zk,[e(n,{to:"/tag/array.html"},{default:o(()=>[jk]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ck]),_:1})]),t("td",Ok,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lk,t("td",Ek,[t("a",Pk,[l("最小的必要团队"),e(s)])]),Kk,t("td",Vk,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Nk]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Dk]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Bk]),_:1}),l(),Yk]),t("td",Ak,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jk,t("td",Rk,[t("a",Sk,[l("叶值的最小代价生成树"),e(s)])]),Uk,t("td",Wk,[e(n,{to:"/tag/stack.html"},{default:o(()=>[Xk]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[Fk]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Gk]),_:1}),l(),Tk]),t("td",Qk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zk,t("td",$k,[t("a",tM,[l("第 N 个泰波那契数"),e(s)])]),t("td",eM,[e(n,{to:"/problem/1137.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lM,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[oM]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[nM]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[sM]),_:1})]),t("td",dM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[_M,t("td",aM,[t("a",iM,[l("最大的以 1 为边界的正方形"),e(s)])]),cM,t("td",rM,[e(n,{to:"/tag/array.html"},{default:o(()=>[hM]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[fM]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[gM]),_:1})]),t("td",uM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mM,t("td",yM,[t("a",xM,[l("石子游戏 II"),e(s)])]),pM,t("td",bM,[e(n,{to:"/tag/array.html"},{default:o(()=>[kM]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[MM]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[HM]),_:1}),l(),IM]),t("td",wM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vM,t("td",qM,[t("a",zM,[l("最长公共子序列"),e(s)])]),t("td",jM,[e(n,{to:"/problem/1143.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",CM,[e(n,{to:"/tag/string.html"},{default:o(()=>[OM]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[LM]),_:1})]),t("td",EM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PM,t("td",KM,[t("a",VM,[l("段式回文"),e(s)])]),NM,t("td",DM,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[BM]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[YM]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[AM]),_:1}),l(),JM]),t("td",RM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[SM,t("td",UM,[t("a",WM,[l("掷骰子等于目标和的方法数"),e(s)])]),XM,t("td",FM,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[GM]),_:1})]),t("td",TM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QM,t("td",ZM,[t("a",$M,[l("地图分析"),e(s)])]),tH,t("td",eH,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lH]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[oH]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[nH]),_:1}),l(),sH]),t("td",dH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_H,t("td",aH,[t("a",iH,[l("与目标颜色间的最短距离 🔒"),e(s)])]),cH,t("td",rH,[e(n,{to:"/tag/array.html"},{default:o(()=>[hH]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[fH]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[gH]),_:1})]),t("td",uH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mH,t("td",yH,[t("a",xH,[l("删除一次得到子数组最大和"),e(s)])]),pH,t("td",bH,[e(n,{to:"/tag/array.html"},{default:o(()=>[kH]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[MH]),_:1})]),t("td",HH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[IH,t("td",wH,[t("a",vH,[l("使数组严格递增"),e(s)])]),qH,t("td",zH,[e(n,{to:"/tag/array.html"},{default:o(()=>[jH]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[CH]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[OH]),_:1}),l(),LH]),t("td",EH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PH,t("td",KH,[t("a",VH,[l("K 次串联后最大子数组之和"),e(s)])]),NH,t("td",DH,[e(n,{to:"/tag/array.html"},{default:o(()=>[BH]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[YH]),_:1})]),t("td",AH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JH,t("td",RH,[t("a",SH,[l("验证回文串 III 🔒"),e(s)])]),UH,t("td",WH,[e(n,{to:"/tag/string.html"},{default:o(()=>[XH]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[FH]),_:1})]),t("td",GH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TH,t("td",QH,[t("a",ZH,[l("最长定差子序列"),e(s)])]),$H,t("td",tI,[e(n,{to:"/tag/array.html"},{default:o(()=>[eI]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[lI]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[oI]),_:1})]),t("td",nI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sI,t("td",dI,[t("a",_I,[l("统计元音字母序列的数目"),e(s)])]),aI,t("td",iI,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[cI]),_:1})]),t("td",rI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hI,t("td",fI,[t("a",gI,[l("掷骰子模拟"),e(s)])]),uI,t("td",mI,[e(n,{to:"/tag/array.html"},{default:o(()=>[yI]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[xI]),_:1})]),t("td",pI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bI,t("td",kI,[t("a",MI,[l("飞机座位分配概率"),e(s)])]),HI,t("td",II,[e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[wI]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[vI]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qI]),_:1}),l(),zI]),t("td",jI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CI,t("td",OI,[t("a",LI,[l("抛掷硬币 🔒"),e(s)])]),EI,t("td",PI,[e(n,{to:"/tag/array.html"},{default:o(()=>[KI]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[VI]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[NI]),_:1}),l(),DI]),t("td",BI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YI,t("td",AI,[t("a",JI,[l("规划兼职工作"),e(s)])]),RI,t("td",SI,[e(n,{to:"/tag/array.html"},{default:o(()=>[UI]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[WI]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[XI]),_:1}),l(),FI]),t("td",GI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TI,t("td",QI,[t("a",ZI,[l("删除回文子数组 🔒"),e(s)])]),$I,t("td",tw,[e(n,{to:"/tag/array.html"},{default:o(()=>[ew]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[lw]),_:1})]),t("td",ow,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nw,t("td",sw,[t("a",dw,[l("得分最高的单词集合"),e(s)])]),_w,t("td",aw,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[iw]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[cw]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[rw]),_:1}),l(),hw]),t("td",fw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gw,t("td",uw,[t("a",mw,[l("不相交的握手 🔒"),e(s)])]),yw,t("td",xw,[e(n,{to:"/tag/math.html"},{default:o(()=>[pw]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bw]),_:1})]),t("td",kw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mw,t("td",Hw,[t("a",Iw,[l("可被三整除的最大和"),e(s)])]),ww,t("td",vw,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[qw]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[zw]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[jw]),_:1}),l(),Cw]),t("td",Ow,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lw,t("td",Ew,[t("a",Pw,[l("停在原地的方案数"),e(s)])]),Kw,t("td",Vw,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Nw]),_:1})]),t("td",Dw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bw,t("td",Yw,[t("a",Aw,[l("统计全为 1 的正方形子矩阵"),e(s)])]),t("td",Jw,[e(n,{to:"/problem/1277.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rw,[e(n,{to:"/tag/array.html"},{default:o(()=>[Sw]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Uw]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[Ww]),_:1})]),t("td",Xw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fw,t("td",Gw,[t("a",Tw,[l("分割回文串 III"),e(s)])]),Qw,t("td",Zw,[e(n,{to:"/tag/string.html"},{default:o(()=>[$w]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tv]),_:1})]),t("td",ev,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lv,t("td",ov,[t("a",nv,[l("下降路径最小和 II"),e(s)])]),sv,t("td",dv,[e(n,{to:"/tag/array.html"},{default:o(()=>[_v]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[av]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[iv]),_:1})]),t("td",cv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rv,t("td",hv,[t("a",fv,[l("最大得分的路径数目"),e(s)])]),gv,t("td",uv,[e(n,{to:"/tag/array.html"},{default:o(()=>[mv]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yv]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[xv]),_:1})]),t("td",pv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bv,t("td",kv,[t("a",Mv,[l("让字符串成为回文串的最少插入次数"),e(s)])]),t("td",Hv,[e(n,{to:"/problem/1312.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Iv,[e(n,{to:"/tag/string.html"},{default:o(()=>[wv]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vv]),_:1})]),t("td",qv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zv,t("td",jv,[t("a",Cv,[l("二指输入的的最小距离"),e(s)])]),Ov,t("td",Lv,[e(n,{to:"/tag/string.html"},{default:o(()=>[Ev]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Pv]),_:1})]),t("td",Kv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vv,t("td",Nv,[t("a",Dv,[l("灌溉花园的最少水龙头数目"),e(s)])]),Bv,t("td",Yv,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Av]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Jv]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Rv]),_:1})]),t("td",Sv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uv,t("td",Wv,[t("a",Xv,[l("阈值距离内邻居最少的城市"),e(s)])]),Fv,t("td",Gv,[e(n,{to:"/tag/graph.html"},{default:o(()=>[Tv]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Qv]),_:1}),l(),e(n,{to:"/tag/shortest-path.html"},{default:o(()=>[Zv]),_:1})]),t("td",$v,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tq,t("td",eq,[t("a",lq,[l("工作计划的最低难度"),e(s)])]),oq,t("td",nq,[e(n,{to:"/tag/array.html"},{default:o(()=>[sq]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[dq]),_:1})]),t("td",_q,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[aq,t("td",iq,[t("a",cq,[l("跳跃游戏 V"),e(s)])]),rq,t("td",hq,[e(n,{to:"/tag/array.html"},{default:o(()=>[fq]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[gq]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[uq]),_:1})]),t("td",mq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yq,t("td",xq,[t("a",pq,[l("参加考试的最大学生数"),e(s)])]),bq,t("td",kq,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Mq]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Hq]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Iq]),_:1}),l(),wq]),t("td",vq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qq,t("td",zq,[t("a",jq,[l("有效的快递序列数目"),e(s)])]),Cq,t("td",Oq,[e(n,{to:"/tag/math.html"},{default:o(()=>[Lq]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Eq]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[Pq]),_:1})]),t("td",Kq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vq,t("td",Nq,[t("a",Dq,[l("形成三的最大倍数"),e(s)])]),Bq,t("td",Yq,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Aq]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Jq]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Rq]),_:1})]),t("td",Sq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uq,t("td",Wq,[t("a",Xq,[l("二叉树中的最长交错路径"),e(s)])]),Fq,t("td",Gq,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Tq]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qq]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Zq]),_:1}),l(),$q]),t("td",tz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ez,t("td",lz,[t("a",oz,[l("二叉搜索子树的最大键值和"),e(s)])]),nz,t("td",sz,[e(n,{to:"/tag/tree.html"},{default:o(()=>[dz]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[_z]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[az]),_:1}),l(),iz]),t("td",cz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rz,t("td",hz,[t("a",fz,[l("将整数按权重排序"),e(s)])]),gz,t("td",uz,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[mz]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yz]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[xz]),_:1})]),t("td",pz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bz,t("td",kz,[t("a",Mz,[l("3n 块披萨"),e(s)])]),Hz,t("td",Iz,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[wz]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[vz]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qz]),_:1}),l(),zz]),t("td",jz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cz,t("td",Oz,[t("a",Lz,[l("统计作战单位数"),e(s)])]),Ez,t("td",Pz,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Kz]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Vz]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Nz]),_:1}),l(),Dz]),t("td",Bz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yz,t("td",Az,[t("a",Jz,[l("找到所有好字符串"),e(s)])]),Rz,t("td",Sz,[e(n,{to:"/tag/string.html"},{default:o(()=>[Uz]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Wz]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[Xz]),_:1})]),t("td",Fz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gz,t("td",Tz,[t("a",Qz,[l("做菜顺序"),e(s)])]),Zz,t("td",$z,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[tj]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ej]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[lj]),_:1}),l(),oj]),t("td",nj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sj,t("td",dj,[t("a",_j,[l("石子游戏 III"),e(s)])]),aj,t("td",ij,[e(n,{to:"/tag/array.html"},{default:o(()=>[cj]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[rj]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[hj]),_:1}),l(),fj]),t("td",gj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uj,t("td",mj,[t("a",yj,[l("给 N x 3 网格图涂色的方案数"),e(s)])]),xj,t("td",pj,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bj]),_:1})]),t("td",kj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mj,t("td",Hj,[t("a",Ij,[l("恢复数组"),e(s)])]),wj,t("td",vj,[e(n,{to:"/tag/string.html"},{default:o(()=>[qj]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[zj]),_:1})]),t("td",jj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cj,t("td",Oj,[t("a",Lj,[l("生成数组"),e(s)])]),Ej,t("td",Pj,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Kj]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[Vj]),_:1})]),t("td",Nj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dj,t("td",Bj,[t("a",Yj,[l("带限制的子序列和"),e(s)])]),Aj,t("td",Jj,[e(n,{to:"/tag/queue.html"},{default:o(()=>[Rj]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Sj]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Uj]),_:1}),l(),Wj]),t("td",Xj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fj,t("td",Gj,[t("a",Tj,[l("每个人戴不同帽子的方案数"),e(s)])]),Qj,t("td",Zj,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[$j]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[tC]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[eC]),_:1}),l(),lC]),t("td",oC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nC,t("td",sC,[t("a",dC,[l("切披萨的方案数"),e(s)])]),_C,t("td",aC,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[iC]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[cC]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[rC]),_:1}),l(),hC]),t("td",fC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gC,t("td",uC,[t("a",mC,[l("数位成本和为目标值的最大数字"),e(s)])]),yC,t("td",xC,[e(n,{to:"/tag/array.html"},{default:o(()=>[pC]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bC]),_:1})]),t("td",kC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[MC,t("td",HC,[t("a",IC,[l("两个子序列的最大点积"),e(s)])]),wC,t("td",vC,[e(n,{to:"/tag/array.html"},{default:o(()=>[qC]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[zC]),_:1})]),t("td",jC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[CC,t("td",OC,[t("a",LC,[l("摘樱桃 II"),e(s)])]),EC,t("td",PC,[e(n,{to:"/tag/array.html"},{default:o(()=>[KC]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[VC]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[NC]),_:1})]),t("td",DC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BC,t("td",YC,[t("a",AC,[l("两个盒子中球的颜色数相同的概率"),e(s)])]),JC,t("td",RC,[e(n,{to:"/tag/array.html"},{default:o(()=>[SC]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[UC]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[WC]),_:1}),l(),XC]),t("td",FC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[GC,t("td",TC,[t("a",QC,[l("粉刷房子 III"),e(s)])]),ZC,t("td",$C,[e(n,{to:"/tag/array.html"},{default:o(()=>[tO]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[eO]),_:1})]),t("td",lO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oO,t("td",nO,[t("a",sO,[l("找两个和为目标值且不重叠的子数组"),e(s)])]),dO,t("td",_O,[e(n,{to:"/tag/array.html"},{default:o(()=>[aO]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[iO]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[cO]),_:1}),l(),rO]),t("td",hO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fO,t("td",gO,[t("a",uO,[l("安排邮筒"),e(s)])]),mO,t("td",yO,[e(n,{to:"/tag/array.html"},{default:o(()=>[xO]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[pO]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bO]),_:1}),l(),kO]),t("td",MO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HO,t("td",IO,[t("a",wO,[l("树节点的第 K 个祖先"),e(s)])]),vO,t("td",qO,[e(n,{to:"/tag/tree.html"},{default:o(()=>[zO]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[jO]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[CO]),_:1}),l(),OO]),t("td",LO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[EO,t("td",PO,[t("a",KO,[l("删掉一个元素以后全为 1 的最长子数组"),e(s)])]),VO,t("td",NO,[e(n,{to:"/tag/array.html"},{default:o(()=>[DO]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[BO]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[YO]),_:1})]),t("td",AO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JO,t("td",RO,[t("a",SO,[l("并行课程 II"),e(s)])]),UO,t("td",WO,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[XO]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[FO]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[GO]),_:1}),l(),TO]),t("td",QO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZO,t("td",$O,[t("a",tL,[l("统计全 1 子矩形"),e(s)])]),eL,t("td",lL,[e(n,{to:"/tag/stack.html"},{default:o(()=>[oL]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[nL]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[sL]),_:1}),l(),dL]),t("td",_L,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aL,t("td",iL,[t("a",cL,[l("石子游戏 IV"),e(s)])]),rL,t("td",hL,[e(n,{to:"/tag/math.html"},{default:o(()=>[fL]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[gL]),_:1}),l(),e(n,{to:"/tag/game-theory.html"},{default:o(()=>[uL]),_:1})]),t("td",mL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yL,t("td",xL,[t("a",pL,[l("和为奇数的子数组数目"),e(s)])]),bL,t("td",kL,[e(n,{to:"/tag/array.html"},{default:o(()=>[ML]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[HL]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[IL]),_:1}),l(),wL]),t("td",vL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qL,t("td",zL,[t("a",jL,[l("字符串的好分割数目"),e(s)])]),CL,t("td",OL,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[LL]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[EL]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[PL]),_:1}),l(),KL]),t("td",VL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NL,t("td",DL,[t("a",BL,[l("形成目标数组的子数组最少增加次数"),e(s)])]),YL,t("td",AL,[e(n,{to:"/tag/stack.html"},{default:o(()=>[JL]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[RL]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[SL]),_:1}),l(),UL]),t("td",WL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XL,t("td",FL,[t("a",GL,[l("压缩字符串 II"),e(s)])]),TL,t("td",QL,[e(n,{to:"/tag/string.html"},{default:o(()=>[ZL]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$L]),_:1})]),t("td",tE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eE,t("td",lE,[t("a",oE,[l("最大得分"),e(s)])]),nE,t("td",sE,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[dE]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[_E]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[aE]),_:1}),l(),iE]),t("td",cE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rE,t("td",hE,[t("a",fE,[l("切棍子的最小成本"),e(s)])]),gE,t("td",uE,[e(n,{to:"/tag/array.html"},{default:o(()=>[mE]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yE]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[xE]),_:1})]),t("td",pE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bE,t("td",kE,[t("a",ME,[l("图中最相似的路径 🔒"),e(s)])]),HE,t("td",IE,[e(n,{to:"/tag/graph.html"},{default:o(()=>[wE]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vE]),_:1})]),t("td",qE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zE,t("td",jE,[t("a",CE,[l("吃掉 N 个橘子的最少天数"),e(s)])]),OE,t("td",LE,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[EE]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[PE]),_:1})]),t("td",KE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[VE,t("td",NE,[t("a",DE,[l("石子游戏 V"),e(s)])]),BE,t("td",YE,[e(n,{to:"/tag/array.html"},{default:o(()=>[AE]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[JE]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[RE]),_:1}),l(),SE]),t("td",UE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[WE,t("td",XE,[t("a",FE,[l("乘积为正数的最长子数组长度"),e(s)])]),GE,t("td",TE,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[QE]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ZE]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$E]),_:1})]),t("td",tP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eP,t("td",lP,[t("a",oP,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),nP,t("td",sP,[e(n,{to:"/tag/tree.html"},{default:o(()=>[dP]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[_P]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[aP]),_:1}),l(),iP]),t("td",cP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rP,t("td",hP,[t("a",fP,[l("统计所有可行路径"),e(s)])]),gP,t("td",uP,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[mP]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[yP]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[xP]),_:1})]),t("td",pP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bP,t("td",kP,[t("a",MP,[l("使绳子变成彩色的最短时间"),e(s)])]),HP,t("td",IP,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[wP]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[vP]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[qP]),_:1}),l(),zP]),t("td",jP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CP,t("td",OP,[t("a",LP,[l("矩阵的最大非负积"),e(s)])]),EP,t("td",PP,[e(n,{to:"/tag/array.html"},{default:o(()=>[KP]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[VP]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[NP]),_:1})]),t("td",DP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[BP,t("td",YP,[t("a",AP,[l("连通两组点的最小成本"),e(s)])]),JP,t("td",RP,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[SP]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[UP]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[WP]),_:1}),l(),XP]),t("td",FP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[GP,t("td",TP,[t("a",QP,[l("使整数变为 0 的最少操作次数"),e(s)])]),ZP,t("td",$P,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[tK]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[eK]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[lK]),_:1})]),t("td",oK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nK,t("td",sK,[t("a",dK,[l("统计子树中城市之间最大距离"),e(s)])]),_K,t("td",aK,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[iK]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[cK]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[rK]),_:1}),l(),hK]),t("td",fK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gK,t("td",uK,[t("a",mK,[l("大小为 K 的不重叠线段的数目"),e(s)])]),yK,t("td",xK,[e(n,{to:"/tag/math.html"},{default:o(()=>[pK]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bK]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[kK]),_:1})]),t("td",MK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HK,t("td",IK,[t("a",wK,[l("无矛盾的最佳球队"),e(s)])]),vK,t("td",qK,[e(n,{to:"/tag/array.html"},{default:o(()=>[zK]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[jK]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[CK]),_:1})]),t("td",OK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LK,t("td",EK,[t("a",PK,[l("统计只差一个字符的子串数目"),e(s)])]),KK,t("td",VK,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[NK]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[DK]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[BK]),_:1}),l(),YK]),t("td",AK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JK,t("td",RK,[t("a",SK,[l("通过给定词典构造目标字符串的方案数"),e(s)])]),UK,t("td",WK,[e(n,{to:"/tag/array.html"},{default:o(()=>[XK]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[FK]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[GK]),_:1})]),t("td",TK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QK,t("td",ZK,[t("a",$K,[l("统计字典序元音字符串的数目"),e(s)])]),tV,t("td",eV,[e(n,{to:"/tag/math.html"},{default:o(()=>[lV]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[oV]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[nV]),_:1})]),t("td",sV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dV,t("td",_V,[t("a",aV,[l("第 K 条最小指令"),e(s)])]),iV,t("td",cV,[e(n,{to:"/tag/array.html"},{default:o(()=>[rV]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[hV]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[fV]),_:1}),l(),gV]),t("td",uV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mV,t("td",yV,[t("a",xV,[l("使字符串平衡的最少删除次数"),e(s)])]),pV,t("td",bV,[e(n,{to:"/tag/stack.html"},{default:o(()=>[kV]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[MV]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[HV]),_:1})]),t("td",IV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wV,t("td",vV,[t("a",qV,[l("到家的最少跳跃次数"),e(s)])]),zV,t("td",jV,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[CV]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[OV]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[LV]),_:1})]),t("td",EV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PV,t("td",KV,[t("a",VV,[l("分配重复整数"),e(s)])]),NV,t("td",DV,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[BV]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[YV]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[AV]),_:1}),l(),JV]),t("td",RV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[SV,t("td",UV,[t("a",WV,[l("最大化网格幸福感"),e(s)])]),XV,t("td",FV,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[GV]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[TV]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[QV]),_:1}),l(),ZV]),t("td",$V,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tN,t("td",eN,[t("a",lN,[l("最大重复子字符串"),e(s)])]),oN,t("td",nN,[e(n,{to:"/tag/string.html"},{default:o(()=>[sN]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[dN]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[_N]),_:1})]),t("td",aN,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[iN,t("td",cN,[t("a",rN,[l("得到山形数组的最少删除次数"),e(s)])]),t("td",hN,[e(n,{to:"/problem/1671.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fN,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[gN]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[uN]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[mN]),_:1}),l(),yN]),t("td",xN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pN,t("td",bN,[t("a",kN,[l("最小不兼容性"),e(s)])]),MN,t("td",HN,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[IN]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[wN]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vN]),_:1}),l(),qN]),t("td",zN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jN,t("td",CN,[t("a",ON,[l("最长回文子序列 II 🔒"),e(s)])]),LN,t("td",EN,[e(n,{to:"/tag/string.html"},{default:o(()=>[PN]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[KN]),_:1})]),t("td",VN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NN,t("td",DN,[t("a",BN,[l("从仓库到码头运输箱子"),e(s)])]),YN,t("td",AN,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[JN]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[RN]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[SN]),_:1}),l(),UN]),t("td",WN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XN,t("td",FN,[t("a",GN,[l("石子游戏 VII"),e(s)])]),TN,t("td",QN,[e(n,{to:"/tag/array.html"},{default:o(()=>[ZN]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[$N]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tD]),_:1}),l(),eD]),t("td",lD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oD,t("td",nD,[t("a",sD,[l("堆叠长方体的最大高度"),e(s)])]),dD,t("td",_D,[e(n,{to:"/tag/array.html"},{default:o(()=>[aD]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[iD]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[cD]),_:1})]),t("td",rD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hD,t("td",fD,[t("a",gD,[l("计算分配糖果的不同方式 🔒"),e(s)])]),uD,t("td",mD,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yD]),_:1})]),t("td",xD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pD,t("td",bD,[t("a",kD,[l("跳跃游戏 VI"),e(s)])]),MD,t("td",HD,[e(n,{to:"/tag/queue.html"},{default:o(()=>[ID]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[wD]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vD]),_:1}),l(),qD]),t("td",zD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jD,t("td",CD,[t("a",OD,[l("数组中特殊等间距元素的和 🔒"),e(s)])]),LD,t("td",ED,[e(n,{to:"/tag/array.html"},{default:o(()=>[PD]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[KD]),_:1})]),t("td",VD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ND,t("td",DD,[t("a",BD,[l("完成所有工作的最短时间"),e(s)])]),YD,t("td",AD,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[JD]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[RD]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[SD]),_:1}),l(),UD]),t("td",WD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XD,t("td",FD,[t("a",GD,[l("猫和老鼠 II"),e(s)])]),TD,t("td",QD,[e(n,{to:"/tag/graph.html"},{default:o(()=>[ZD]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[$D]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[tB]),_:1}),l(),eB]),t("td",lB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oB,t("td",nB,[t("a",sB,[l("生成乘积数组的方案数"),e(s)])]),dB,t("td",_B,[e(n,{to:"/tag/array.html"},{default:o(()=>[aB]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[iB]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[cB]),_:1}),l(),rB]),t("td",hB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fB,t("td",gB,[t("a",uB,[l("分割回文串 IV"),e(s)])]),mB,t("td",yB,[e(n,{to:"/tag/string.html"},{default:o(()=>[xB]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[pB]),_:1})]),t("td",bB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kB,t("td",MB,[t("a",HB,[l("经过一次操作后的最大子数组和 🔒"),e(s)])]),IB,t("td",wB,[e(n,{to:"/tag/array.html"},{default:o(()=>[vB]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qB]),_:1})]),t("td",zB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jB,t("td",CB,[t("a",OB,[l("任意子数组和的绝对值的最大值"),e(s)])]),LB,t("td",EB,[e(n,{to:"/tag/array.html"},{default:o(()=>[PB]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[KB]),_:1})]),t("td",VB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NB,t("td",DB,[t("a",BB,[l("最多可以参加的会议数目 II"),e(s)])]),YB,t("td",AB,[e(n,{to:"/tag/array.html"},{default:o(()=>[JB]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[RB]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[SB]),_:1}),l(),UB]),t("td",WB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XB,t("td",FB,[t("a",GB,[l("最接近目标值的子序列和"),e(s)])]),TB,t("td",QB,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ZB]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[$B]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[tY]),_:1}),l(),eY]),t("td",lY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oY,t("td",nY,[t("a",sY,[l("执行乘法运算的最大分数"),e(s)])]),dY,t("td",_Y,[e(n,{to:"/tag/array.html"},{default:o(()=>[aY]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[iY]),_:1})]),t("td",cY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rY,t("td",hY,[t("a",fY,[l("由子序列构造的最长回文串的长度"),e(s)])]),gY,t("td",uY,[e(n,{to:"/tag/string.html"},{default:o(()=>[mY]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yY]),_:1})]),t("td",xY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pY,t("td",bY,[t("a",kY,[l("最接近目标价格的甜点成本"),e(s)])]),MY,t("td",HY,[e(n,{to:"/tag/array.html"},{default:o(()=>[IY]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[wY]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[vY]),_:1})]),t("td",qY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zY,t("td",jY,[t("a",CY,[l("从第一个节点出发到最后一个节点的受限路径数"),e(s)])]),OY,t("td",LY,[e(n,{to:"/tag/graph.html"},{default:o(()=>[EY]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[PY]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[KY]),_:1}),l(),VY]),t("td",NY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DY,t("td",BY,[t("a",YY,[l("使所有区间的异或结果为零"),e(s)])]),AY,t("td",JY,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[RY]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[SY]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[UY]),_:1})]),t("td",WY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XY,t("td",FY,[t("a",GY,[l("N 次操作后的最大分数和"),e(s)])]),TY,t("td",QY,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ZY]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[$Y]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[tA]),_:1}),l(),eA]),t("td",lA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oA,t("td",nA,[t("a",sA,[l("得到新鲜甜甜圈的最多组数"),e(s)])]),dA,t("td",_A,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[aA]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[iA]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[cA]),_:1}),l(),rA]),t("td",hA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fA,t("td",gA,[t("a",uA,[l("最少侧跳次数"),e(s)])]),mA,t("td",yA,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[xA]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[pA]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bA]),_:1})]),t("td",kA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MA,t("td",HA,[t("a",IA,[l("有向图中最大颜色值"),e(s)])]),wA,t("td",vA,[e(n,{to:"/tag/graph.html"},{default:o(()=>[qA]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[zA]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[jA]),_:1}),l(),CA]),t("td",OA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[LA,t("td",EA,[t("a",PA,[l("恰有 K 根木棍可以看到的排列数目"),e(s)])]),KA,t("td",VA,[e(n,{to:"/tag/math.html"},{default:o(()=>[NA]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[DA]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[BA]),_:1})]),t("td",YA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[AA,t("td",JA,[t("a",RA,[l("跳跃游戏 VII"),e(s)])]),SA,t("td",UA,[e(n,{to:"/tag/string.html"},{default:o(()=>[WA]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[XA]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[FA]),_:1}),l(),GA]),t("td",TA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QA,t("td",ZA,[t("a",$A,[l("石子游戏 VIII"),e(s)])]),tJ,t("td",eJ,[e(n,{to:"/tag/array.html"},{default:o(()=>[lJ]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[oJ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[nJ]),_:1}),l(),sJ]),t("td",dJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_J,t("td",aJ,[t("a",iJ,[l("两个数组最小的异或值之和"),e(s)])]),cJ,t("td",rJ,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[hJ]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[fJ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[gJ]),_:1}),l(),uJ]),t("td",mJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yJ,t("td",xJ,[t("a",pJ,[l("准时抵达会议现场的最小跳过休息次数"),e(s)])]),bJ,t("td",kJ,[e(n,{to:"/tag/array.html"},{default:o(()=>[MJ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[HJ]),_:1})]),t("td",IJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wJ,t("td",vJ,[t("a",qJ,[l("鸡蛋掉落-两枚鸡蛋"),e(s)])]),zJ,t("td",jJ,[e(n,{to:"/tag/math.html"},{default:o(()=>[CJ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[OJ]),_:1})]),t("td",LJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EJ,t("td",PJ,[t("a",KJ,[l("使二进制字符串字符交替的最少反转次数"),e(s)])]),VJ,t("td",NJ,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[DJ]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[BJ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[YJ]),_:1}),l(),AJ]),t("td",JJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RJ,t("td",SJ,[t("a",UJ,[l("反转表达式值的最少操作次数"),e(s)])]),WJ,t("td",XJ,[e(n,{to:"/tag/stack.html"},{default:o(()=>[FJ]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[GJ]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[TJ]),_:1}),l(),QJ]),t("td",ZJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$J,t("td",tR,[t("a",eR,[l("最佳运动员的比拼回合"),e(s)])]),lR,t("td",oR,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[nR]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[sR]),_:1})]),t("td",dR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_R,t("td",aR,[t("a",iR,[l("Nim 游戏 II 🔒"),e(s)])]),cR,t("td",rR,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[hR]),_:1}),l(),e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[fR]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[gR]),_:1}),l(),uR]),t("td",mR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yR,t("td",xR,[t("a",pR,[l("最大子序列交替和"),e(s)])]),bR,t("td",kR,[e(n,{to:"/tag/array.html"},{default:o(()=>[MR]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[HR]),_:1})]),t("td",IR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wR,t("td",vR,[t("a",qR,[l("统计为蚁群构筑房间的不同顺序"),e(s)])]),zR,t("td",jR,[e(n,{to:"/tag/tree.html"},{default:o(()=>[CR]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[OR]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[LR]),_:1}),l(),ER]),t("td",PR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[KR,t("td",VR,[t("a",NR,[l("规定时间内到达终点的最小花费"),e(s)])]),DR,t("td",BR,[e(n,{to:"/tag/graph.html"},{default:o(()=>[YR]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[AR]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[JR]),_:1})]),t("td",RR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[SR,t("td",UR,[t("a",WR,[l("用三种不同颜色为网格涂色"),e(s)])]),XR,t("td",FR,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[GR]),_:1})]),t("td",TR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QR,t("td",ZR,[t("a",$R,[l("扣分后的最大得分"),e(s)])]),tS,t("td",eS,[e(n,{to:"/tag/array.html"},{default:o(()=>[lS]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[oS]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[nS]),_:1})]),t("td",sS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dS,t("td",_S,[t("a",aS,[l("最大兼容性评分和"),e(s)])]),iS,t("td",cS,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[rS]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[hS]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[fS]),_:1}),l(),gS]),t("td",uS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mS,t("td",yS,[t("a",xS,[l("统计特殊子序列的数目"),e(s)])]),pS,t("td",bS,[e(n,{to:"/tag/array.html"},{default:o(()=>[kS]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[MS]),_:1})]),t("td",HS,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IS,t("td",wS,[t("a",vS,[l("K 次调整数组大小浪费的最小总空间"),e(s)])]),qS,t("td",zS,[e(n,{to:"/tag/array.html"},{default:o(()=>[jS]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[CS]),_:1})]),t("td",OS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LS,t("td",ES,[t("a",PS,[l("到达目的地的方案数"),e(s)])]),KS,t("td",VS,[e(n,{to:"/tag/graph.html"},{default:o(()=>[NS]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[DS]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[BS]),_:1}),l(),YS]),t("td",AS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JS,t("td",RS,[t("a",SS,[l("划分数字的方案数"),e(s)])]),US,t("td",WS,[e(n,{to:"/tag/string.html"},{default:o(()=>[XS]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[FS]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[GS]),_:1})]),t("td",TS,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QS,t("td",ZS,[t("a",$S,[l("最小化目标值与所选元素的差"),e(s)])]),tU,t("td",eU,[e(n,{to:"/tag/array.html"},{default:o(()=>[lU]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[oU]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[nU]),_:1})]),t("td",sU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dU,t("td",_U,[t("a",aU,[l("完成任务的最少工作时间段"),e(s)])]),iU,t("td",cU,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[rU]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[hU]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[fU]),_:1}),l(),gU]),t("td",uU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mU,t("td",yU,[t("a",xU,[l("不同的好子序列数目"),e(s)])]),pU,t("td",bU,[e(n,{to:"/tag/string.html"},{default:o(()=>[kU]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[MU]),_:1})]),t("td",HU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IU,t("td",wU,[t("a",vU,[l("好子集的数目"),e(s)])]),qU,t("td",zU,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[jU]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[CU]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[OU]),_:1}),l(),LU]),t("td",EU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PU,t("td",KU,[t("a",VU,[l("访问完所有房间的第一天"),e(s)])]),NU,t("td",DU,[e(n,{to:"/tag/array.html"},{default:o(()=>[BU]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[YU]),_:1})]),t("td",AU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JU,t("td",RU,[t("a",SU,[l("两个回文子序列长度的最大乘积"),e(s)])]),UU,t("td",WU,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[XU]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[FU]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[GU]),_:1}),l(),TU]),t("td",QU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZU,t("td",$U,[t("a",tW,[l("每棵子树内缺失的最小基因值"),e(s)])]),eW,t("td",lW,[e(n,{to:"/tag/tree.html"},{default:o(()=>[oW]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[nW]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[sW]),_:1}),l(),dW]),t("td",_W,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[aW,t("td",iW,[t("a",cW,[l("斐波那契树的移除子树游戏 🔒"),e(s)])]),rW,t("td",hW,[e(n,{to:"/tag/tree.html"},{default:o(()=>[fW]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[gW]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[uW]),_:1}),l(),mW]),t("td",yW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xW,t("td",pW,[t("a",bW,[l("出租车的最大盈利"),e(s)])]),kW,t("td",MW,[e(n,{to:"/tag/array.html"},{default:o(()=>[HW]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[IW]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[wW]),_:1}),l(),vW]),t("td",qW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zW,t("td",jW,[t("a",CW,[l("解出数学表达式的学生分数"),e(s)])]),OW,t("td",LW,[e(n,{to:"/tag/stack.html"},{default:o(()=>[EW]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[PW]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[KW]),_:1}),l(),VW]),t("td",NW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DW,t("td",BW,[t("a",YW,[l("将数组分成两个数组并最小化数组和的差"),e(s)])]),AW,t("td",JW,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[RW]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[SW]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[UW]),_:1}),l(),WW]),t("td",XW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FW,t("td",GW,[t("a",TW,[l("最大交替子数组和 🔒"),e(s)])]),QW,t("td",ZW,[e(n,{to:"/tag/array.html"},{default:o(()=>[$W]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tX]),_:1})]),t("td",eX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lX,t("td",oX,[t("a",nX,[l("并行课程 III"),e(s)])]),sX,t("td",dX,[e(n,{to:"/tag/graph.html"},{default:o(()=>[_X]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[aX]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[iX]),_:1}),l(),cX]),t("td",rX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hX,t("td",fX,[t("a",gX,[l("将句子分隔成行的最低成本 🔒"),e(s)])]),uX,t("td",mX,[e(n,{to:"/tag/array.html"},{default:o(()=>[yX]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[xX]),_:1})]),t("td",pX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bX,t("td",kX,[t("a",MX,[l("两个最好的不重叠活动"),e(s)])]),HX,t("td",IX,[e(n,{to:"/tag/array.html"},{default:o(()=>[wX]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[vX]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qX]),_:1}),l(),zX]),t("td",jX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CX,t("td",OX,[t("a",LX,[l("同源字符串检测"),e(s)])]),EX,t("td",PX,[e(n,{to:"/tag/string.html"},{default:o(()=>[KX]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[VX]),_:1})]),t("td",NX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DX,t("td",BX,[t("a",YX,[l("所有子字符串中的元音"),e(s)])]),AX,t("td",JX,[e(n,{to:"/tag/math.html"},{default:o(()=>[RX]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[SX]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[UX]),_:1}),l(),WX]),t("td",XX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FX,t("td",GX,[t("a",TX,[l("喂食仓鼠的最小食物桶数"),e(s)])]),QX,t("td",ZX,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[$X]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[tF]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[eF]),_:1})]),t("td",lF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oF,t("td",nF,[t("a",sF,[l("统计农场中肥沃金字塔的数目"),e(s)])]),dF,t("td",_F,[e(n,{to:"/tag/array.html"},{default:o(()=>[aF]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[iF]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[cF]),_:1})]),t("td",rF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hF,t("td",fF,[t("a",gF,[l("适合野炊的日子"),e(s)])]),uF,t("td",mF,[e(n,{to:"/tag/array.html"},{default:o(()=>[yF]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[xF]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[pF]),_:1})]),t("td",bF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kF,t("td",MF,[t("a",HF,[l("股票平滑下跌阶段的数目"),e(s)])]),IF,t("td",wF,[e(n,{to:"/tag/array.html"},{default:o(()=>[vF]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[qF]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[zF]),_:1})]),t("td",jF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CF,t("td",OF,[t("a",LF,[l("解决智力问题"),e(s)])]),EF,t("td",PF,[e(n,{to:"/tag/array.html"},{default:o(()=>[KF]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[VF]),_:1})]),t("td",NF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DF,t("td",BF,[t("a",YF,[l("在两个数组的区间中选取数字 🔒"),e(s)])]),AF,t("td",JF,[e(n,{to:"/tag/array.html"},{default:o(()=>[RF]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[SF]),_:1})]),t("td",UF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[WF,t("td",XF,[t("a",FF,[l("分隔长廊的方案数"),e(s)])]),GF,t("td",TF,[e(n,{to:"/tag/math.html"},{default:o(()=>[QF]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[ZF]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$F]),_:1})]),t("td",tG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eG,t("td",lG,[t("a",oG,[l("穿过所有点的所需最少直线数量 🔒"),e(s)])]),nG,t("td",sG,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[dG]),_:1}),l(),e(n,{to:"/tag/geometry.html"},{default:o(()=>[_G]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[aG]),_:1}),l(),iG]),t("td",cG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rG,t("td",hG,[t("a",fG,[l("删除元素后和的最小差值"),e(s)])]),gG,t("td",uG,[e(n,{to:"/tag/array.html"},{default:o(()=>[mG]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yG]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[xG]),_:1})]),t("td",pG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bG,t("td",kG,[t("a",MG,[l("移除所有载有违禁货物车厢所需的最少时间"),e(s)])]),HG,t("td",IG,[e(n,{to:"/tag/string.html"},{default:o(()=>[wG]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vG]),_:1})]),t("td",qG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zG,t("td",jG,[t("a",CG,[l("数组的最大与和"),e(s)])]),OG,t("td",LG,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[EG]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[PG]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[KG]),_:1}),l(),VG]),t("td",NG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DG,t("td",BG,[t("a",YG,[l("建造坚实的砖墙的方法数 🔒"),e(s)])]),AG,t("td",JG,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[RG]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[SG]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[UG]),_:1}),l(),WG]),t("td",XG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FG,t("td",GG,[t("a",TG,[l("完成比赛的最少时间"),e(s)])]),QG,t("td",ZG,[e(n,{to:"/tag/array.html"},{default:o(()=>[$G]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tT]),_:1})]),t("td",eT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lT,t("td",oT,[t("a",nT,[l("建造纸牌屋的方法数 🔒"),e(s)])]),sT,t("td",dT,[e(n,{to:"/tag/math.html"},{default:o(()=>[_T]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[aT]),_:1})]),t("td",iT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cT,t("td",rT,[t("a",hT,[l("用地毯覆盖后的最少白色砖块"),e(s)])]),fT,t("td",gT,[e(n,{to:"/tag/string.html"},{default:o(()=>[uT]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[mT]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[yT]),_:1})]),t("td",xT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pT,t("td",bT,[t("a",kT,[l("从栈中取出 K 个硬币的最大面值和"),e(s)])]),MT,t("td",HT,[e(n,{to:"/tag/array.html"},{default:o(()=>[IT]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[wT]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[vT]),_:1})]),t("td",qT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zT,t("td",jT,[t("a",CT,[l("选择建筑的方案数"),e(s)])]),OT,t("td",LT,[e(n,{to:"/tag/string.html"},{default:o(()=>[ET]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[PT]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[KT]),_:1})]),t("td",VT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NT,t("td",DT,[t("a",BT,[l("K 条高速公路的最大旅行费用 🔒"),e(s)])]),YT,t("td",AT,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[JT]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[RT]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ST]),_:1}),l(),UT]),t("td",WT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XT,t("td",FT,[t("a",GT,[l("字符串的总引力"),e(s)])]),t("td",TT,[e(n,{to:"/problem/2262.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",QT,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[ZT]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[$T]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tQ]),_:1})]),t("td",eQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lQ,t("td",oQ,[t("a",nQ,[l("数组变为有序的最小操作次数 🔒"),e(s)])]),sQ,t("td",dQ,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[_Q]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[aQ]),_:1})]),t("td",iQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cQ,t("td",rQ,[t("a",hQ,[l("统计打字方案数"),e(s)])]),fQ,t("td",gQ,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[uQ]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[mQ]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[yQ]),_:1}),l(),xQ]),t("td",pQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bQ,t("td",kQ,[t("a",MQ,[l("检查是否有合法括号字符串路径"),e(s)])]),HQ,t("td",IQ,[e(n,{to:"/tag/array.html"},{default:o(()=>[wQ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vQ]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[qQ]),_:1})]),t("td",zQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jQ,t("td",CQ,[t("a",OQ,[l("最大波动的子字符串"),e(s)])]),LQ,t("td",EQ,[e(n,{to:"/tag/array.html"},{default:o(()=>[PQ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[KQ]),_:1})]),t("td",VQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[NQ,t("td",DQ,[t("a",BQ,[l("最大股票收益 🔒"),e(s)])]),YQ,t("td",AQ,[e(n,{to:"/tag/array.html"},{default:o(()=>[JQ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[RQ]),_:1})]),t("td",SQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UQ,t("td",WQ,[t("a",XQ,[l("跳跃游戏 VIII 🔒"),e(s)])]),FQ,t("td",GQ,[e(n,{to:"/tag/stack.html"},{default:o(()=>[TQ]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[QQ]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ZQ]),_:1}),l(),$Q]),t("td",tZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eZ,t("td",lZ,[t("a",oZ,[l("网格中的最小路径代价"),e(s)])]),nZ,t("td",sZ,[e(n,{to:"/tag/array.html"},{default:o(()=>[dZ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_Z]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[aZ]),_:1})]),t("td",iZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cZ,t("td",rZ,[t("a",hZ,[l("公平分发饼干"),e(s)])]),fZ,t("td",gZ,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[uZ]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[mZ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yZ]),_:1}),l(),xZ]),t("td",pZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bZ,t("td",kZ,[t("a",MZ,[l("个位数字为 K 的整数之和"),e(s)])]),HZ,t("td",IZ,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[wZ]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[vZ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qZ]),_:1}),l(),zZ]),t("td",jZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CZ,t("td",OZ,[t("a",LZ,[l("小于等于 K 的最长二进制子序列"),e(s)])]),EZ,t("td",PZ,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[KZ]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[VZ]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[NZ]),_:1}),l(),DZ]),t("td",BZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YZ,t("td",AZ,[t("a",JZ,[l("卖木头块"),e(s)])]),RZ,t("td",SZ,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[UZ]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[WZ]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[XZ]),_:1})]),t("td",FZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[GZ,t("td",TZ,[t("a",QZ,[l("二叉树中得到结果所需的最少翻转次数 🔒"),e(s)])]),ZZ,t("td",$Z,[e(n,{to:"/tag/tree.html"},{default:o(()=>[t$]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[e$]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[l$]),_:1}),l(),o$]),t("td",n$,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[s$,t("td",d$,[t("a",_$,[l("不同骰子序列的数目"),e(s)])]),a$,t("td",i$,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[c$]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[r$]),_:1})]),t("td",h$,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f$,t("td",g$,[t("a",u$,[l("统计放置房子的方式数"),e(s)])]),m$,t("td",y$,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[x$]),_:1})]),t("td",p$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b$,t("td",k$,[t("a",M$,[l("拼接数组的最大分数"),e(s)])]),H$,t("td",I$,[e(n,{to:"/tag/array.html"},{default:o(()=>[w$]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[v$]),_:1})]),t("td",q$,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z$,t("td",j$,[t("a",C$,[l("知道秘密的人数"),e(s)])]),O$,t("td",L$,[e(n,{to:"/tag/queue.html"},{default:o(()=>[E$]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[P$]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[K$]),_:1})]),t("td",V$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N$,t("td",D$,[t("a",B$,[l("网格图中递增路径的数目"),e(s)])]),Y$,t("td",A$,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[J$]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[R$]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[S$]),_:1}),l(),U$]),t("td",W$,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[X$,t("td",F$,[t("a",G$,[l("统计理想数组的数目"),e(s)])]),T$,t("td",Q$,[e(n,{to:"/tag/math.html"},{default:o(()=>[Z$]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$$]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[ttt]),_:1}),l(),ett]),t("td",ltt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ott,t("td",ntt,[t("a",stt,[l("你能拿走的最大图书数量 🔒"),e(s)])]),dtt,t("td",_tt,[e(n,{to:"/tag/stack.html"},{default:o(()=>[att]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[itt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ctt]),_:1}),l(),rtt]),t("td",htt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ftt,t("td",gtt,[t("a",utt,[l("乘坐火车路线的最少费用 🔒"),e(s)])]),mtt,t("td",ytt,[e(n,{to:"/tag/array.html"},{default:o(()=>[xtt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ptt]),_:1})]),t("td",btt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ktt,t("td",Mtt,[t("a",Htt,[l("检查数组是否存在有效划分"),e(s)])]),Itt,t("td",wtt,[e(n,{to:"/tag/array.html"},{default:o(()=>[vtt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qtt]),_:1})]),t("td",ztt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jtt,t("td",Ctt,[t("a",Ott,[l("最长理想子序列"),e(s)])]),Ltt,t("td",Ett,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Ptt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Ktt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Vtt]),_:1})]),t("td",Ntt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dtt,t("td",Btt,[t("a",Ytt,[l("统计特殊整数"),e(s)])]),Att,t("td",Jtt,[e(n,{to:"/tag/math.html"},{default:o(()=>[Rtt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Stt]),_:1})]),t("td",Utt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wtt,t("td",Xtt,[t("a",Ftt,[l("选择边来最大化树的得分 🔒"),e(s)])]),Gtt,t("td",Ttt,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Qtt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ztt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$tt]),_:1})]),t("td",tet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eet,t("td",oet,[t("a",net,[l("二进制字符串重新安排顺序需要的时间"),e(s)])]),set,t("td",det,[e(n,{to:"/tag/string.html"},{default:o(()=>[_et]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[aet]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[iet]),_:1})]),t("td",cet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ret,t("td",het,[t("a",fet,[l("严格递增的子数组个数 🔒"),e(s)])]),get,t("td",uet,[e(n,{to:"/tag/array.html"},{default:o(()=>[met]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[yet]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[xet]),_:1})]),t("td",pet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bet,t("td",ket,[t("a",Met,[l("恰好移动 k 步到达某一位置的方法数目"),e(s)])]),Het,t("td",Iet,[e(n,{to:"/tag/math.html"},{default:o(()=>[wet]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vet]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[qet]),_:1})]),t("td",zet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jet,t("td",Cet,[t("a",Oet,[l("杀死所有怪物的最短时间 🔒"),e(s)])]),Let,t("td",Eet,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Pet]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ket]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Vet]),_:1}),l(),Net]),t("td",Det,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bet,t("td",Yet,[t("a",Aet,[l("最长递增子序列 II"),e(s)])]),Jet,t("td",Ret,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Set]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Uet]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Wet]),_:1}),l(),Xet]),t("td",Fet,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Get,t("td",Tet,[t("a",Qet,[l("找到所有好下标"),e(s)])]),Zet,t("td",$et,[e(n,{to:"/tag/array.html"},{default:o(()=>[tlt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[elt]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[llt]),_:1})]),t("td",olt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nlt,t("td",slt,[t("a",dlt,[l("对字母串可执行的最大删除数"),e(s)])]),_lt,t("td",alt,[e(n,{to:"/tag/string.html"},{default:o(()=>[ilt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[clt]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[rlt]),_:1}),l(),hlt]),t("td",flt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[glt,t("td",ult,[t("a",mlt,[l("最大限度地提高购买水果的口味 🔒"),e(s)])]),ylt,t("td",xlt,[e(n,{to:"/tag/array.html"},{default:o(()=>[plt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[blt]),_:1})]),t("td",klt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mlt,t("td",Hlt,[t("a",Ilt,[l("矩阵中和能被 K 整除的路径"),e(s)])]),wlt,t("td",vlt,[e(n,{to:"/tag/array.html"},{default:o(()=>[qlt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[zlt]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[jlt]),_:1})]),t("td",Clt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Olt,t("td",Llt,[t("a",Elt,[l("使子数组最大公约数大于一的最小分割数 🔒"),e(s)])]),Plt,t("td",Klt,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Vlt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Nlt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Dlt]),_:1}),l(),Blt]),t("td",Ylt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Alt,t("td",Jlt,[t("a",Rlt,[l("最小化数组中的最大值"),e(s)])]),Slt,t("td",Ult,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Wlt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Xlt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[Flt]),_:1}),l(),Glt]),t("td",Tlt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qlt,t("td",Zlt,[t("a",$lt,[l("最小移动总距离"),e(s)])]),t("td",tot,[e(n,{to:"/problem/2463.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",eot,[e(n,{to:"/tag/array.html"},{default:o(()=>[lot]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[oot]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[not]),_:1})]),t("td",sot,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dot,t("td",_ot,[t("a",aot,[l("有效分割中的最少子数组数目 🔒"),e(s)])]),iot,t("td",cot,[e(n,{to:"/tag/array.html"},{default:o(()=>[rot]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[hot]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[fot]),_:1}),l(),got]),t("td",uot,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mot,t("td",yot,[t("a",xot,[l("统计构造好字符串的方案数"),e(s)])]),pot,t("td",bot,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[kot]),_:1})]),t("td",Mot,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hot,t("td",Iot,[t("a",wot,[l("不重叠回文子字符串的最大数目"),e(s)])]),vot,t("td",qot,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[zot]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[jot]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Cot]),_:1}),l(),Oot]),t("td",Lot,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Eot,t("td",Pot,[t("a",Kot,[l("完美分割的方案数"),e(s)])]),Vot,t("td",Not,[e(n,{to:"/tag/string.html"},{default:o(()=>[Dot]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Bot]),_:1})]),t("td",Yot,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Aot,t("td",Jot,[t("a",Rot,[l("统计回文子序列数目"),e(s)])]),Sot,t("td",Uot,[e(n,{to:"/tag/string.html"},{default:o(()=>[Wot]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Xot]),_:1})]),t("td",Fot,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Got,t("td",Tot,[t("a",Qot,[l("乘积为偶数的子数组数 🔒"),e(s)])]),Zot,t("td",$ot,[e(n,{to:"/tag/array.html"},{default:o(()=>[tnt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[ent]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[lnt]),_:1})]),t("td",ont,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nnt,t("td",snt,[t("a",dnt,[l("数组中最长的方波"),e(s)])]),t("td",_nt,[e(n,{to:"/problem/2501.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ant,[e(n,{to:"/tag/array.html"},{default:o(()=>[int]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[cnt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[rnt]),_:1}),l(),hnt]),t("td",fnt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gnt,t("td",unt,[t("a",mnt,[l("检查是否有路径经过相同数量的 0 和 1 🔒"),e(s)])]),ynt,t("td",xnt,[e(n,{to:"/tag/array.html"},{default:o(()=>[pnt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bnt]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[knt]),_:1})]),t("td",Mnt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hnt,t("td",Int,[t("a",wnt,[l("好分区的数目"),e(s)])]),vnt,t("td",qnt,[e(n,{to:"/tag/array.html"},{default:o(()=>[znt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[jnt]),_:1})]),t("td",Cnt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ont,t("td",Lnt,[t("a",Ent,[l("将字符串分割成值不超过 K 的子字符串"),e(s)])]),Pnt,t("td",Knt,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Vnt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Nnt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Dnt]),_:1})]),t("td",Bnt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ynt,t("td",Ant,[t("a",Jnt,[l("好二进制字符串的数量 🔒"),e(s)])]),Rnt,t("td",Snt,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Unt]),_:1})]),t("td",Wnt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xnt,t("td",Fnt,[t("a",Gnt,[l("最大价值和与最小价值和的差值"),e(s)])]),Tnt,t("td",Qnt,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Znt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[$nt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[tst]),_:1}),l(),est]),t("td",lst,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ost,t("td",nst,[t("a",sst,[l("拆分数组的最小代价"),e(s)])]),dst,t("td",_st,[e(n,{to:"/tag/array.html"},{default:o(()=>[ast]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[ist]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[cst]),_:1}),l(),rst]),t("td",hst,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fst,t("td",gst,[t("a",ust,[l("统计上升四元组"),e(s)])]),mst,t("td",yst,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[xst]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[pst]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bst]),_:1}),l(),kst]),t("td",Mst,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hst,t("td",Ist,[t("a",wst,[l("二进制矩阵中翻转最多一次使路径不连通"),e(s)])]),vst,t("td",qst,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[zst]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[jst]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Cst]),_:1}),l(),Ost]),t("td",Lst,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Est,t("td",Pst,[t("a",Kst,[l("将整数减少到零需要的最少操作数"),e(s)])]),Vst,t("td",Nst,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Dst]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Bst]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Yst]),_:1})]),t("td",Ast,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jst,t("td",Rst,[t("a",Sst,[l("无平方子集计数"),e(s)])]),Ust,t("td",Wst,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Xst]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Fst]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Gst]),_:1}),l(),Tst]),t("td",Qst,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zst,t("td",$st,[t("a",tdt,[l("找出对应 LCP 矩阵的字符串"),e(s)])]),edt,t("td",ldt,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[odt]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[ndt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[sdt]),_:1}),l(),ddt]),t("td",_dt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[adt,t("td",idt,[t("a",cdt,[l("统计可能的树根数目"),e(s)])]),rdt,t("td",hdt,[e(n,{to:"/tag/tree.html"},{default:o(()=>[fdt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[gdt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[udt]),_:1}),l(),mdt]),t("td",ydt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xdt,t("td",pdt,[t("a",bdt,[l("获得分数的方法数"),e(s)])]),kdt,t("td",Mdt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Hdt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Idt]),_:1})]),t("td",wdt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vdt,t("td",qdt,[t("a",zdt,[l("美丽子集的数目"),e(s)])]),jdt,t("td",Cdt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Odt]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Ldt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Edt]),_:1}),l(),Pdt]),t("td",Kdt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vdt,t("td",Ndt,[t("a",Ddt,[l("找到最大开销的子字符串"),e(s)])]),Bdt,t("td",Ydt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Adt]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Jdt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Rdt]),_:1}),l(),Sdt]),t("td",Udt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wdt,t("td",Xdt,[t("a",Fdt,[l("网格图中最少访问的格子数"),e(s)])]),Gdt,t("td",Tdt,[e(n,{to:"/tag/stack.html"},{default:o(()=>[Qdt]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Zdt]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[$dt]),_:1}),l(),t_t]),t("td",e_t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l_t,t("td",o_t,[t("a",n_t,[l("统计 K-Free 子集的总数 🔒"),e(s)])]),s_t,t("td",d_t,[e(n,{to:"/tag/array.html"},{default:o(()=>[__t]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[a_t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[i_t]),_:1}),l(),c_t]),t("td",r_t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h_t,t("td",f_t,[t("a",g_t,[l("构造有效字符串的最少插入数"),e(s)])]),u_t,t("td",m_t,[e(n,{to:"/tag/stack.html"},{default:o(()=>[y_t]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[x_t]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[p_t]),_:1}),l(),b_t]),t("td",k_t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M_t,t("td",H_t,[t("a",I_t,[l("最小化旅行的价格总和"),e(s)])]),w_t,t("td",v_t,[e(n,{to:"/tag/tree.html"},{default:o(()=>[q_t]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[z_t]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[j_t]),_:1}),l(),C_t]),t("td",O_t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L_t,t("td",E_t,[t("a",P_t,[l("使二叉树所有路径值相等的最小代价"),e(s)])]),K_t,t("td",V_t,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[N_t]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[D_t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[B_t]),_:1}),l(),Y_t]),t("td",A_t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J_t,t("td",R_t,[t("a",S_t,[l("英雄的力量"),e(s)])]),U_t,t("td",W_t,[e(n,{to:"/tag/array.html"},{default:o(()=>[X_t]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[F_t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[G_t]),_:1}),l(),T_t]),t("td",Q_t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Z_t,t("td",$_t,[t("a",tat,[l("矩阵中移动的最大次数"),e(s)])]),t("td",eat,[e(n,{to:"/problem/2684.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lat,[e(n,{to:"/tag/array.html"},{default:o(()=>[oat]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[nat]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[sat]),_:1})]),t("td",dat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_at,t("td",aat,[t("a",iat,[l("字符串中的额外字符"),e(s)])]),cat,t("td",rat,[e(n,{to:"/tag/trie.html"},{default:o(()=>[hat]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[fat]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[gat]),_:1}),l(),uat]),t("td",mat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yat,t("td",xat,[t("a",pat,[l("一个小组的最大实力值"),e(s)])]),bat,t("td",kat,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Mat]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Hat]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Iat]),_:1}),l(),wat]),t("td",vat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qat,t("td",zat,[t("a",jat,[l("使所有字符相等的最小成本"),e(s)])]),Cat,t("td",Oat,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Lat]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Eat]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Pat]),_:1})]),t("td",Kat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vat,t("td",Nat,[t("a",Dat,[l("矩阵中严格递增的单元格数"),e(s)])]),Bat,t("td",Yat,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[Aat]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Jat]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Rat]),_:1}),l(),Sat]),t("td",Uat,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wat,t("td",Xat,[t("a",Fat,[l("统计整数数目"),e(s)])]),Gat,t("td",Tat,[e(n,{to:"/tag/math.html"},{default:o(()=>[Qat]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Zat]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$at]),_:1})]),t("td",tit,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eit,t("td",lit,[t("a",oit,[l("特别的排列"),e(s)])]),nit,t("td",sit,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[dit]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[_it]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ait]),_:1}),l(),iit]),t("td",cit,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rit,t("td",hit,[t("a",fit,[l("给墙壁刷油漆"),e(s)])]),git,t("td",uit,[e(n,{to:"/tag/array.html"},{default:o(()=>[mit]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yit]),_:1})]),t("td",xit,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pit,t("td",bit,[t("a",kit,[l("构造最长的新字符串"),e(s)])]),Mit,t("td",Hit,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Iit]),_:1}),l(),e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[wit]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[vit]),_:1}),l(),qit]),t("td",zit,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jit,t("td",Cit,[t("a",Oit,[l("字符串连接删减字母"),e(s)])]),Lit,t("td",Eit,[e(n,{to:"/tag/array.html"},{default:o(()=>[Pit]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Kit]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Vit]),_:1})]),t("td",Nit,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dit,t("td",Bit,[t("a",Yit,[l("将数组划分成若干好子数组的方式"),e(s)])]),Ait,t("td",Jit,[e(n,{to:"/tag/array.html"},{default:o(()=>[Rit]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Sit]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Uit]),_:1})]),t("td",Wit,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xit,t("td",Fit,[t("a",Git,[l("将字符串分割为最少的美丽子字符串"),e(s)])]),Tit,t("td",Qit,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Zit]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[$it]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tct]),_:1}),l(),ect]),t("td",lct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oct,t("td",nct,[t("a",sct,[l("达到末尾下标所需的最大跳跃次数"),e(s)])]),dct,t("td",_ct,[e(n,{to:"/tag/array.html"},{default:o(()=>[act]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ict]),_:1})]),t("td",cct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rct,t("td",hct,[t("a",fct,[l("构造最长非递减子数组"),e(s)])]),gct,t("td",uct,[e(n,{to:"/tag/array.html"},{default:o(()=>[mct]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yct]),_:1})]),t("td",xct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pct,t("td",bct,[t("a",kct,[l("访问数组中的位置使分数最大"),e(s)])]),Mct,t("td",Hct,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ict]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[wct]),_:1})]),t("td",vct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qct,t("td",zct,[t("a",jct,[l("将一个数字表示成幂的和的方案数"),e(s)])]),Cct,t("td",Oct,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Lct]),_:1})]),t("td",Ect,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pct,t("td",Kct,[t("a",Vct,[l("树中可以形成回文的路径数"),e(s)])]),Nct,t("td",Dct,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Bct]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[Yct]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Act]),_:1}),l(),Jct]),t("td",Rct,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sct,t("td",Uct,[t("a",Wct,[l("统计范围内的步进数字数目"),e(s)])]),Xct,t("td",Fct,[e(n,{to:"/tag/string.html"},{default:o(()=>[Gct]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Tct]),_:1})]),t("td",Qct,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zct,t("td",$ct,[t("a",trt,[l("使数组和小于等于 x 的最少时间"),e(s)])]),ert,t("td",lrt,[e(n,{to:"/tag/array.html"},{default:o(()=>[ort]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[nrt]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[srt]),_:1})]),t("td",drt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_rt,t("td",art,[t("a",irt,[l("判断是否能拆分数组"),e(s)])]),crt,t("td",rrt,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[hrt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[frt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[grt]),_:1})]),t("td",urt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mrt,t("td",yrt,[t("a",xrt,[l("将三个组排序"),e(s)])]),prt,t("td",brt,[e(n,{to:"/tag/array.html"},{default:o(()=>[krt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[Mrt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Hrt]),_:1})]),t("td",Irt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wrt,t("td",vrt,[t("a",qrt,[l("范围中美丽整数的数目"),e(s)])]),zrt,t("td",jrt,[e(n,{to:"/tag/math.html"},{default:o(()=>[Crt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ort]),_:1})]),t("td",Lrt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ert,t("td",Prt,[t("a",Krt,[l("销售利润最大化"),e(s)])]),Vrt,t("td",Nrt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Drt]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Brt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[Yrt]),_:1}),l(),Art]),t("td",Jrt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rrt,t("td",Srt,[t("a",Urt,[l("在传球游戏中最大化函数值"),e(s)])]),Wrt,t("td",Xrt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Frt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Grt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Trt]),_:1})]),t("td",Qrt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zrt,t("td",$rt,[t("a",tht,[l("将石头分散到网格图的最少移动次数"),e(s)])]),eht,t("td",lht,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[oht]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[nht]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[sht]),_:1}),l(),dht]),t("td",_ht,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aht,t("td",iht,[t("a",cht,[l("字符串转换"),e(s)])]),rht,t("td",hht,[e(n,{to:"/tag/math.html"},{default:o(()=>[fht]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[ght]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[uht]),_:1}),l(),mht]),t("td",yht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xht,t("td",pht,[t("a",bht,[l("可以到达每一个节点的最少边反转次数"),e(s)])]),kht,t("td",Mht,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Hht]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Iht]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[wht]),_:1}),l(),vht]),t("td",qht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zht,t("td",jht,[t("a",Cht,[l("统计树中的合法路径数目"),e(s)])]),Oht,t("td",Lht,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Eht]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pht]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Kht]),_:1}),l(),Vht]),t("td",Nht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dht,t("td",Bht,[t("a",Yht,[l("有向图访问计数"),e(s)])]),Aht,t("td",Jht,[e(n,{to:"/tag/graph.html"},{default:o(()=>[Rht]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[Sht]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Uht]),_:1})]),t("td",Wht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xht,t("td",Fht,[t("a",Ght,[l("将相邻元素相乘后得到最小化数组 🔒"),e(s)])]),Tht,t("td",Qht,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Zht]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[$ht]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[t1t]),_:1})]),t("td",e1t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l1t,t("td",o1t,[t("a",n1t,[l("执行操作使两个字符串相等"),e(s)])]),s1t,t("td",d1t,[e(n,{to:"/tag/string.html"},{default:o(()=>[_1t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[a1t]),_:1})]),t("td",i1t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c1t,t("td",r1t,[t("a",h1t,[l("最长相邻不相等子序列 I"),e(s)])]),f1t,t("td",g1t,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[u1t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[m1t]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[y1t]),_:1}),l(),x1t]),t("td",p1t,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[b1t,t("td",k1t,[t("a",M1t,[l("最长相邻不相等子序列 II"),e(s)])]),H1t,t("td",I1t,[e(n,{to:"/tag/array.html"},{default:o(()=>[w1t]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[v1t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[q1t]),_:1})]),t("td",z1t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j1t,t("td",C1t,[t("a",O1t,[l("和带限制的子多重集合的数目"),e(s)])]),L1t,t("td",E1t,[e(n,{to:"/tag/array.html"},{default:o(()=>[P1t]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[K1t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[V1t]),_:1}),l(),N1t]),t("td",D1t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B1t,t("td",Y1t,[t("a",A1t,[l("得到 K 个半回文串的最少修改次数"),e(s)])]),J1t,t("td",R1t,[e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[S1t]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[U1t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[W1t]),_:1})]),t("td",X1t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[F1t,t("td",G1t,[t("a",T1t,[l("在网格上移动到目的地的方法数 🔒"),e(s)])]),Q1t,t("td",Z1t,[e(n,{to:"/tag/math.html"},{default:o(()=>[$1t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tft]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[eft]),_:1})]),t("td",lft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oft,t("td",nft,[t("a",sft,[l("和为目标值的最长子序列的长度"),e(s)])]),dft,t("td",_ft,[e(n,{to:"/tag/array.html"},{default:o(()=>[aft]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ift]),_:1})]),t("td",cft,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rft,t("td",hft,[t("a",fft,[l("子数组不同元素数目的平方和 II"),e(s)])]),gft,t("td",uft,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[mft]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[yft]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[xft]),_:1}),l(),pft]),t("td",bft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kft,t("td",Mft,[t("a",Hft,[l("使数组变美的最小增量运算数"),e(s)])]),Ift,t("td",wft,[e(n,{to:"/tag/array.html"},{default:o(()=>[vft]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qft]),_:1})]),t("td",zft,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jft,t("td",Cft,[t("a",Oft,[l("收集所有金币可获得的最大积分"),e(s)])]),Lft,t("td",Eft,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Pft]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[Kft]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vft]),_:1}),l(),Nft]),t("td",Dft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bft,t("td",Yft,[t("a",Aft,[l("在树上执行操作以后得到的最大分数"),e(s)])]),Jft,t("td",Rft,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Sft]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Uft]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Wft]),_:1})]),t("td",Xft,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fft,t("td",Gft,[t("a",Tft,[l("平衡子序列的最大和"),e(s)])]),Qft,t("td",Zft,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[$ft]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[tgt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[egt]),_:1}),l(),lgt]),t("td",ogt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ngt,t("td",sgt,[t("a",dgt,[l("重新排列后包含指定子字符串的字符串数目"),e(s)])]),_gt,t("td",agt,[e(n,{to:"/tag/math.html"},{default:o(()=>[igt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[cgt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[rgt]),_:1})]),t("td",hgt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fgt,t("td",ggt,[t("a",ugt,[l("购买水果需要的最少金币数"),e(s)])]),mgt,t("td",ygt,[e(n,{to:"/tag/queue.html"},{default:o(()=>[xgt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[pgt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bgt]),_:1}),l(),kgt]),t("td",Mgt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hgt,t("td",Igt,[t("a",wgt,[l("找到最大非递减数组的长度"),e(s)])]),vgt,t("td",qgt,[e(n,{to:"/tag/stack.html"},{default:o(()=>[zgt]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[jgt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Cgt]),_:1}),l(),Ogt]),t("td",Lgt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Egt,t("td",Pgt,[t("a",Kgt,[l("消除相邻近似相等字符"),e(s)])]),Vgt,t("td",Ngt,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Dgt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Bgt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ygt]),_:1})]),t("td",Agt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jgt,t("td",Rgt,[t("a",Sgt,[l("购买水果需要的最少金币数 II 🔒"),e(s)])]),Ugt,t("td",Wgt,[e(n,{to:"/tag/queue.html"},{default:o(()=>[Xgt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Fgt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ggt]),_:1}),l(),Tgt]),t("td",Qgt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zgt,t("td",$gt,[t("a",tut,[l("树中每个节点放置的金币数目"),e(s)])]),eut,t("td",lut,[e(n,{to:"/tag/tree.html"},{default:o(()=>[out]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[nut]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[sut]),_:1}),l(),dut]),t("td",_ut,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[aut,t("td",iut,[t("a",cut,[l("转换字符串的最小成本 II"),e(s)])]),rut,t("td",hut,[e(n,{to:"/tag/graph.html"},{default:o(()=>[fut]),_:1}),l(),e(n,{to:"/tag/trie.html"},{default:o(()=>[gut]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[uut]),_:1}),l(),mut]),t("td",yut,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xut,t("td",put,[t("a",but,[l("最贵的无法购买的商品 🔒"),e(s)])]),kut,t("td",Mut,[e(n,{to:"/tag/math.html"},{default:o(()=>[Hut]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Iut]),_:1}),l(),e(n,{to:"/tag/number-theory.html"},{default:o(()=>[wut]),_:1})]),t("td",vut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qut,t("td",zut,[t("a",jut,[l("自整除排列的数量 🔒"),e(s)])]),Cut,t("td",Out,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Lut]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Eut]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Put]),_:1}),l(),Kut]),t("td",Vut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nut,t("td",Dut,[t("a",But,[l("使 X 和 Y 相等的最少操作次数"),e(s)])]),Yut,t("td",Aut,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Jut]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[Rut]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Sut]),_:1})]),t("td",Uut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wut,t("td",Xut,[t("a",Fut,[l("统计强大整数的数目"),e(s)])]),Gut,t("td",Tut,[e(n,{to:"/tag/math.html"},{default:o(()=>[Qut]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Zut]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$ut]),_:1})]),t("td",tmt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[emt,t("td",lmt,[t("a",omt,[l("执行操作后的最大分割数量"),e(s)])]),nmt,t("td",smt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[dmt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[_mt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[amt]),_:1}),l(),imt]),t("td",cmt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rmt,t("td",hmt,[t("a",fmt,[l("相同颜色的最大子树 🔒"),e(s)])]),gmt,t("td",umt,[e(n,{to:"/tag/tree.html"},{default:o(()=>[mmt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[ymt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[xmt]),_:1}),l(),pmt]),t("td",bmt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kmt,t("td",Mmt,[t("a",Hmt,[l("价值和小于等于 K 的最大数字"),e(s)])]),Imt,t("td",wmt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[vmt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[qmt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[zmt]),_:1})]),t("td",jmt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cmt,t("td",Omt,[t("a",Lmt,[l("可处理的最大删除操作数 I 🔒"),e(s)])]),Emt,t("td",Pmt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Kmt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Vmt]),_:1})]),t("td",Nmt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dmt,t("td",Bmt,[t("a",Ymt,[l("统计各位数字都不同的数字个数 II 🔒"),e(s)])]),Amt,t("td",Jmt,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Rmt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Smt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Umt]),_:1})]),t("td",Wmt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xmt,t("td",Fmt,[t("a",Gmt,[l("相同分数的最大操作数目 II"),e(s)])]),Tmt,t("td",Qmt,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[Zmt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[$mt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tyt]),_:1})]),t("td",eyt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lyt,t("td",oyt,[t("a",nyt,[l("修改数组后最大化数组中的连续元素数目"),e(s)])]),syt,t("td",dyt,[e(n,{to:"/tag/array.html"},{default:o(()=>[_yt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ayt]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[iyt]),_:1})]),t("td",cyt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ryt,t("td",hyt,[t("a",fyt,[l("最大节点价值之和"),e(s)])]),gyt,t("td",uyt,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[myt]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[yyt]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[xyt]),_:1}),l(),pyt]),t("td",byt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kyt,t("td",Myt,[t("a",Hyt,[l("K 个不相交子数组的最大能量值"),e(s)])]),Iyt,t("td",wyt,[e(n,{to:"/tag/array.html"},{default:o(()=>[vyt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qyt]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[zyt]),_:1})]),t("td",jyt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cyt,t("td",Oyt,[t("a",Lyt,[l("求出所有子序列的能量和"),e(s)])]),Eyt,t("td",Pyt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Kyt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Vyt]),_:1})]),t("td",Nyt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dyt,t("td",Byt,[t("a",Yyt,[l("求出所有子序列的能量和"),e(s)])]),Ayt,t("td",Jyt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ryt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Syt]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[Uyt]),_:1})]),t("td",Wyt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xyt,t("td",Fyt,[t("a",Gyt,[l("划分数组得到最小的值之和"),e(s)])]),Tyt,t("td",Qyt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Zyt]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[$yt]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[t3t]),_:1}),l(),e3t]),t("td",l3t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o3t,t("td",n3t,[t("a",s3t,[l("使矩阵满足条件的最少操作次数"),e(s)])]),d3t,t("td",_3t,[e(n,{to:"/tag/array.html"},{default:o(()=>[a3t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[i3t]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[c3t]),_:1})]),t("td",r3t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h3t,t("td",f3t,[t("a",g3t,[l("找出所有稳定的二进制数组 I"),e(s)])]),u3t,t("td",m3t,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[y3t]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[x3t]),_:1})]),t("td",p3t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b3t,t("td",k3t,[t("a",M3t,[l("找出所有稳定的二进制数组 II"),e(s)])]),H3t,t("td",I3t,[e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[w3t]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[v3t]),_:1})]),t("td",q3t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z3t,t("td",j3t,[t("a",C3t,[l("通过添加或删除结尾字符来同化字符串 🔒"),e(s)])]),O3t,t("td",L3t,[e(n,{to:"/tag/string.html"},{default:o(()=>[E3t]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[P3t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[K3t]),_:1}),l(),V3t]),t("td",N3t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D3t,t("td",B3t,[t("a",Y3t,[l("分割字符频率相等的最少子字符串"),e(s)])]),A3t,t("td",J3t,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[R3t]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[S3t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[U3t]),_:1}),l(),W3t]),t("td",X3t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F3t,t("td",G3t,[t("a",T3t,[l("矩阵中的最大得分"),e(s)])]),Q3t,t("td",Z3t,[e(n,{to:"/tag/array.html"},{default:o(()=>[$3t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[txt]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[ext]),_:1})]),t("td",lxt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oxt,t("td",nxt,[t("a",sxt,[l("找出分数最低的排列"),e(s)])]),dxt,t("td",_xt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[axt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ixt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[cxt]),_:1}),l(),rxt]),t("td",hxt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fxt,t("td",gxt,[t("a",uxt,[l("到达第 K 级台阶的方案数"),e(s)])]),mxt,t("td",yxt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[xxt]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[pxt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[bxt]),_:1}),l(),kxt]),t("td",Mxt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hxt,t("td",Ixt,[t("a",wxt,[l("不包含相邻元素的子序列的最大和"),e(s)])]),vxt,t("td",qxt,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[zxt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[jxt]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Cxt]),_:1}),l(),Oxt]),t("td",Lxt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ext,t("td",Pxt,[t("a",Kxt,[l("求出最长好子序列 I"),e(s)])]),Vxt,t("td",Nxt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Dxt]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Bxt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Yxt]),_:1})]),t("td",Axt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jxt,t("td",Rxt,[t("a",Sxt,[l("求出最长好子序列 II"),e(s)])]),Uxt,t("td",Wxt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Xxt]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Fxt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Gxt]),_:1})]),t("td",Txt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qxt,t("td",Zxt,[t("a",$xt,[l("执行操作可获得的最大总奖励 I"),e(s)])]),t4t,t("td",e4t,[e(n,{to:"/tag/array.html"},{default:o(()=>[l4t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[o4t]),_:1})]),t("td",n4t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s4t,t("td",d4t,[t("a",_4t,[l("执行操作可获得的最大总奖励 II"),e(s)])]),a4t,t("td",i4t,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[c4t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[r4t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[h4t]),_:1})]),t("td",f4t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[g4t,t("td",u4t,[t("a",m4t,[l("达到总和的方法数量 🔒"),e(s)])]),y4t,t("td",x4t,[e(n,{to:"/tag/array.html"},{default:o(()=>[p4t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[b4t]),_:1})]),t("td",k4t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M4t,t("td",H4t,[t("a",I4t,[l("施咒的最大总伤害"),e(s)])]),w4t,t("td",v4t,[e(n,{to:"/tag/array.html"},{default:o(()=>[q4t]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[z4t]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[j4t]),_:1}),l(),C4t]),t("td",O4t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L4t,t("td",E4t,[t("a",P4t,[l("使二进制数组全部等于 1 的最少操作次数 II"),e(s)])]),K4t,t("td",V4t,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[N4t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[D4t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[B4t]),_:1})]),t("td",Y4t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A4t,t("td",J4t,[t("a",R4t,[l("统计逆序对的数目"),e(s)])]),S4t,t("td",U4t,[e(n,{to:"/tag/array.html"},{default:o(()=>[W4t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[X4t]),_:1})]),t("td",F4t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[G4t,t("td",T4t,[t("a",Q4t,[l("最大化子数组的总成本"),e(s)])]),Z4t,t("td",$4t,[e(n,{to:"/tag/array.html"},{default:o(()=>[t2t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[e2t]),_:1})]),t("td",l2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o2t,t("td",n2t,[t("a",s2t,[l("找出有效子序列的最大长度 I"),e(s)])]),d2t,t("td",_2t,[e(n,{to:"/tag/array.html"},{default:o(()=>[a2t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[i2t]),_:1})]),t("td",c2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r2t,t("td",h2t,[t("a",f2t,[l("找出有效子序列的最大长度 II"),e(s)])]),g2t,t("td",u2t,[e(n,{to:"/tag/array.html"},{default:o(()=>[m2t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[y2t]),_:1})]),t("td",x2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p2t,t("td",b2t,[t("a",k2t,[l("最大数组跳跃得分 I 🔒"),e(s)])]),M2t,t("td",H2t,[e(n,{to:"/tag/stack.html"},{default:o(()=>[I2t]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[w2t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[v2t]),_:1}),l(),q2t]),t("td",z2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j2t,t("td",C2t,[t("a",O2t,[l("最小代价构造字符串"),e(s)])]),L2t,t("td",E2t,[e(n,{to:"/tag/array.html"},{default:o(()=>[P2t]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[K2t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[V2t]),_:1}),l(),N2t]),t("td",D2t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B2t,t("td",Y2t,[t("a",A2t,[l("切蛋糕的最小总开销 I"),e(s)])]),J2t,t("td",R2t,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[S2t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[U2t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[W2t]),_:1}),l(),X2t]),t("td",F2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G2t,t("td",T2t,[t("a",Q2t,[l("网格图操作后的最大分数"),e(s)])]),Z2t,t("td",$2t,[e(n,{to:"/tag/array.html"},{default:o(()=>[tpt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ept]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[lpt]),_:1}),l(),opt]),t("td",npt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[spt,t("td",dpt,[t("a",_pt,[l("使数组等于目标数组所需的最少操作次数"),e(s)])]),apt,t("td",ipt,[e(n,{to:"/tag/stack.html"},{default:o(()=>[cpt]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[rpt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[hpt]),_:1}),l(),fpt]),t("td",gpt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[upt,t("td",mpt,[t("a",ypt,[l("标记所有节点需要的时间"),e(s)])]),xpt,t("td",ppt,[e(n,{to:"/tag/tree.html"},{default:o(()=>[bpt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[kpt]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[Mpt]),_:1}),l(),Hpt]),t("td",Ipt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wpt,t("td",vpt,[t("a",qpt,[l("奇数和子序列的数量 🔒"),e(s)])]),zpt,t("td",jpt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Cpt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Opt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Lpt]),_:1}),l(),Ept]),t("td",Ppt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kpt,t("td",Vpt,[t("a",Npt,[l("单调数组对的数目 I"),e(s)])]),Dpt,t("td",Bpt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ypt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Apt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Jpt]),_:1}),l(),Rpt]),t("td",Spt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Upt,t("td",Wpt,[t("a",Xpt,[l("单调数组对的数目 II"),e(s)])]),Fpt,t("td",Gpt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Tpt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Qpt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Zpt]),_:1}),l(),$pt]),t("td",t5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e5t,t("td",l5t,[t("a",o5t,[l("放三个车的价值之和最大 I"),e(s)])]),n5t,t("td",s5t,[e(n,{to:"/tag/array.html"},{default:o(()=>[d5t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_5t]),_:1}),l(),e(n,{to:"/tag/enumeration.html"},{default:o(()=>[a5t]),_:1}),l(),i5t]),t("td",c5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[r5t,t("td",h5t,[t("a",f5t,[l("放三个车的价值之和最大 II"),e(s)])]),g5t,t("td",u5t,[e(n,{to:"/tag/array.html"},{default:o(()=>[m5t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[y5t]),_:1}),l(),e(n,{to:"/tag/enumeration.html"},{default:o(()=>[x5t]),_:1}),l(),p5t]),t("td",b5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[k5t,t("td",M5t,[t("a",H5t,[l("超级饮料的最大强化能量"),e(s)])]),I5t,t("td",w5t,[e(n,{to:"/tag/array.html"},{default:o(()=>[v5t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[q5t]),_:1})]),t("td",z5t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j5t,t("td",C5t,[t("a",O5t,[l("找出最大的 N 位 K 回文数"),e(s)])]),L5t,t("td",E5t,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[P5t]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[K5t]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[V5t]),_:1}),l(),N5t]),t("td",D5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B5t,t("td",Y5t,[t("a",A5t,[l("构建两个递增数组 🔒"),e(s)])]),J5t,t("td",R5t,[e(n,{to:"/tag/array.html"},{default:o(()=>[S5t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[U5t]),_:1})]),t("td",W5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[X5t,t("td",F5t,[t("a",G5t,[l("选择矩阵中单元格的最大得分"),e(s)])]),T5t,t("td",Q5t,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Z5t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[$5t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[t0t]),_:1}),l(),e0t]),t("td",l0t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o0t,t("td",n0t,[t("a",s0t,[l("查询子数组最大异或值"),e(s)])]),d0t,t("td",_0t,[e(n,{to:"/tag/array.html"},{default:o(()=>[a0t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[i0t]),_:1})]),t("td",c0t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[r0t,t("td",h0t,[t("a",f0t,[l("连续子数组的和 🔒"),e(s)])]),g0t,t("td",u0t,[e(n,{to:"/tag/array.html"},{default:o(()=>[m0t]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[y0t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[x0t]),_:1})]),t("td",p0t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b0t,t("td",k0t,[t("a",M0t,[l("求出数组中最大序列值"),e(s)])]),H0t,t("td",I0t,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[w0t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[v0t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[q0t]),_:1})]),t("td",z0t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j0t,t("td",C0t,[t("a",O0t,[l("最高乘法得分"),e(s)])]),L0t,t("td",E0t,[e(n,{to:"/tag/array.html"},{default:o(()=>[P0t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[K0t]),_:1})]),t("td",V0t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N0t,t("td",D0t,[t("a",B0t,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),Y0t,t("td",A0t,[e(n,{to:"/tag/trie.html"},{default:o(()=>[J0t]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[R0t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[S0t]),_:1}),l(),U0t]),t("td",W0t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X0t,t("td",F0t,[t("a",G0t,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),T0t,t("td",Q0t,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Z0t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[$0t]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[tbt]),_:1}),l(),ebt]),t("td",lbt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[obt,t("td",nbt,[t("a",sbt,[l("连续子序列的和 🔒"),e(s)])]),dbt,t("td",_bt,[e(n,{to:"/tag/array.html"},{default:o(()=>[abt]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[ibt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[cbt]),_:1})]),t("td",rbt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hbt,t("td",fbt,[t("a",gbt,[l("字典序最小的合法序列"),e(s)])]),ubt,t("td",mbt,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[ybt]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[xbt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[pbt]),_:1}),l(),bbt]),t("td",kbt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mbt,t("td",Hbt,[t("a",Ibt,[l("从原字符串里进行删除操作的最多次数"),e(s)])]),wbt,t("td",vbt,[e(n,{to:"/tag/array.html"},{default:o(()=>[qbt]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[zbt]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[jbt]),_:1}),l(),Cbt]),t("td",Obt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lbt,t("td",Ebt,[t("a",Pbt,[l("安排活动的方案数"),e(s)])]),Kbt,t("td",Vbt,[e(n,{to:"/tag/math.html"},{default:o(()=>[Nbt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Dbt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[Bbt]),_:1})]),t("td",Ybt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Abt,t("td",Jbt,[t("a",Rbt,[l("统计能获胜的出招序列数"),e(s)])]),Sbt,t("td",Ubt,[e(n,{to:"/tag/string.html"},{default:o(()=>[Wbt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Xbt]),_:1})]),t("td",Fbt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gbt,t("td",Tbt,[t("a",Qbt,[l("覆盖"),e(s)])]),Zbt,t("td",$bt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[t8t]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[e8t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[l8t]),_:1}),l(),o8t]),t("td",n8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[s8t,t("td",d8t,[t("a",_8t,[l("传递信息"),e(s)])]),a8t,t("td",i8t,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[c8t]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[r8t]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[h8t]),_:1}),l(),f8t]),t("td",g8t,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[u8t,t("td",m8t,[t("a",y8t,[l("最小跳跃次数"),e(s)])]),x8t,t("td",p8t,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[b8t]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[k8t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[M8t]),_:1}),l(),H8t]),t("td",I8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[w8t,t("td",v8t,[t("a",q8t,[l("二叉树任务调度"),e(s)])]),z8t,t("td",j8t,[e(n,{to:"/tag/tree.html"},{default:o(()=>[C8t]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[O8t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[L8t]),_:1}),l(),E8t]),t("td",P8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K8t,t("td",V8t,[t("a",N8t,[l("寻宝"),e(s)])]),D8t,t("td",B8t,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Y8t]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[A8t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[J8t]),_:1}),l(),R8t]),t("td",S8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U8t,t("td",W8t,[t("a",X8t,[l("切分数组"),e(s)])]),F8t,t("td",G8t,[e(n,{to:"/tag/array.html"},{default:o(()=>[T8t]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Q8t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Z8t]),_:1}),l(),$8t]),t("td",t6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e6t,t("td",l6t,[t("a",o6t,[l("秋叶收藏集"),e(s)])]),n6t,t("td",s6t,[e(n,{to:"/tag/string.html"},{default:o(()=>[d6t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_6t]),_:1})]),t("td",a6t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i6t,t("td",c6t,[t("a",r6t,[l("快速公交"),e(s)])]),h6t,t("td",f6t,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[g6t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[u6t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[m6t]),_:1})]),t("td",y6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x6t,t("td",p6t,[t("a",b6t,[l("古董键盘"),e(s)])]),k6t,t("td",M6t,[e(n,{to:"/tag/math.html"},{default:o(()=>[H6t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[I6t]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[w6t]),_:1})]),t("td",v6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[q6t,t("td",z6t,[t("a",j6t,[l("导航装置"),e(s)])]),C6t,t("td",O6t,[e(n,{to:"/tag/tree.html"},{default:o(()=>[L6t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[E6t]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[P6t]),_:1})]),t("td",K6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V6t,t("td",N6t,[t("a",D6t,[l("变换的迷宫"),e(s)])]),B6t,t("td",Y6t,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[A6t]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[J6t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[R6t]),_:1}),l(),S6t]),t("td",U6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W6t,t("td",X6t,[t("a",F6t,[l("二叉树染色"),e(s)])]),G6t,t("td",T6t,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Q6t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Z6t]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[$6t]),_:1})]),t("td",t7t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e7t,t("td",l7t,[t("a",o7t,[l("最多牌组数"),e(s)])]),n7t,t("td",s7t,[e(n,{to:"/tag/array.html"},{default:o(()=>[d7t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_7t]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[a7t]),_:1})]),t("td",i7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[c7t,t("td",r7t,[t("a",h7t,[l("守卫城堡"),e(s)])]),f7t,t("td",g7t,[e(n,{to:"/tag/array.html"},{default:o(()=>[u7t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[m7t]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[y7t]),_:1})]),t("td",x7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p7t,t("td",b7t,[t("a",k7t,[l("十字路口的交通"),e(s)])]),M7t,t("td",H7t,[e(n,{to:"/tag/array.html"},{default:o(()=>[I7t]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[w7t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[v7t]),_:1})]),t("td",q7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z7t,t("td",j7t,[t("a",C7t,[l("自行车炫技赛场"),e(s)])]),O7t,t("td",L7t,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[E7t]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[P7t]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[K7t]),_:1}),l(),V7t]),t("td",N7t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D7t,t("td",B7t,[t("a",Y7t,[l("入场安检"),e(s)])]),A7t,t("td",J7t,[e(n,{to:"/tag/array.html"},{default:o(()=>[R7t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[S7t]),_:1})]),t("td",U7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W7t,t("td",X7t,[t("a",F7t,[l("守护太空城"),e(s)])]),G7t,t("td",T7t,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Q7t]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Z7t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$7t]),_:1}),l(),t9t]),t("td",e9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l9t,t("td",o9t,[t("a",n9t,[l("打地鼠"),e(s)])]),s9t,t("td",d9t,[e(n,{to:"/tag/array.html"},{default:o(()=>[_9t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[a9t]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[i9t]),_:1}),l(),c9t]),t("td",r9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[h9t,t("td",f9t,[t("a",g9t,[l("搭桥过河"),e(s)])]),u9t,t("td",m9t,[e(n,{to:"/tag/array.html"},{default:o(()=>[y9t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[x9t]),_:1})]),t("td",p9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b9t,t("td",k9t,[t("a",M9t,[l("力扣泡泡龙"),e(s)])]),H9t,t("td",I9t,[e(n,{to:"/tag/tree.html"},{default:o(()=>[w9t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[v9t]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[q9t]),_:1})]),t("td",z9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j9t,t("td",C9t,[t("a",O9t,[l("弹珠游戏"),e(s)])]),L9t,t("td",E9t,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[P9t]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[K9t]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[V9t]),_:1}),l(),N9t]),t("td",D9t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B9t,t("td",Y9t,[t("a",A9t,[l("二叉树灯饰"),e(s)])]),J9t,t("td",R9t,[e(n,{to:"/tag/tree.html"},{default:o(()=>[S9t]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[U9t]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[W9t]),_:1}),l(),X9t]),t("td",F9t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G9t,t("td",T9t,[t("a",Q9t,[l("舒适的湿度"),e(s)])]),Z9t,t("td",$9t,[e(n,{to:"/tag/array.html"},{default:o(()=>[tkt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ekt]),_:1})]),t("td",lkt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[okt,t("td",nkt,[t("a",skt,[l("Hello LeetCode!"),e(s)])]),dkt,t("td",_kt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[akt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ikt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[ckt]),_:1}),l(),rkt]),t("td",hkt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fkt,t("td",gkt,[t("a",ukt,[l("下载插件"),e(s)])]),mkt,t("td",ykt,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[xkt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[pkt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bkt]),_:1})]),t("td",kkt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mkt,t("td",Hkt,[t("a",Ikt,[l("斐波那契数列"),e(s)])]),t("td",wkt,[e(n,{to:"/offer/jz_offer_10_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vkt,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[qkt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[zkt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[jkt]),_:1})]),t("td",Ckt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Okt,t("td",Lkt,[t("a",Ekt,[l("青蛙跳台阶问题"),e(s)])]),t("td",Pkt,[e(n,{to:"/offer/jz_offer_10_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Kkt,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[Vkt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Nkt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Dkt]),_:1})]),t("td",Bkt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ykt,t("td",Akt,[t("a",Jkt,[l("机器人的运动范围"),e(s)])]),t("td",Rkt,[e(n,{to:"/offer/jz_offer_13_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Skt,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ukt]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Wkt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Xkt]),_:1})]),t("td",Fkt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gkt,t("td",Tkt,[t("a",Qkt,[l("剪绳子"),e(s)])]),t("td",Zkt,[e(n,{to:"/offer/jz_offer_14_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$kt,[e(n,{to:"/tag/math.html"},{default:o(()=>[tMt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[eMt]),_:1})]),t("td",lMt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oMt,t("td",nMt,[t("a",sMt,[l("剪绳子 II"),e(s)])]),t("td",dMt,[e(n,{to:"/offer/jz_offer_14_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_Mt,[e(n,{to:"/tag/math.html"},{default:o(()=>[aMt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[iMt]),_:1})]),t("td",cMt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rMt,t("td",hMt,[t("a",fMt,[l("正则表达式匹配"),e(s)])]),t("td",gMt,[e(n,{to:"/offer/jz_offer_19_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",uMt,[e(n,{to:"/tag/recursion.html"},{default:o(()=>[mMt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[yMt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[xMt]),_:1})]),t("td",pMt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bMt,t("td",kMt,[t("a",MMt,[l("连续子数组的最大和"),e(s)])]),t("td",HMt,[e(n,{to:"/offer/jz_offer_42_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",IMt,[e(n,{to:"/tag/array.html"},{default:o(()=>[wMt]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[vMt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[qMt]),_:1})]),t("td",zMt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jMt,t("td",CMt,[t("a",OMt,[l("1～n 整数中 1 出现的次数"),e(s)])]),t("td",LMt,[e(n,{to:"/offer/jz_offer_43_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",EMt,[e(n,{to:"/tag/recursion.html"},{default:o(()=>[PMt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[KMt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[VMt]),_:1})]),t("td",NMt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DMt,t("td",BMt,[t("a",YMt,[l("把数字翻译成字符串"),e(s)])]),t("td",AMt,[e(n,{to:"/offer/jz_offer_46_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",JMt,[e(n,{to:"/tag/string.html"},{default:o(()=>[RMt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[SMt]),_:1})]),t("td",UMt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WMt,t("td",XMt,[t("a",FMt,[l("礼物的最大价值"),e(s)])]),t("td",GMt,[e(n,{to:"/offer/jz_offer_47_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",TMt,[e(n,{to:"/tag/array.html"},{default:o(()=>[QMt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ZMt]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[$Mt]),_:1})]),t("td",tHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eHt,t("td",lHt,[t("a",oHt,[l("丑数"),e(s)])]),t("td",nHt,[e(n,{to:"/offer/jz_offer_49_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",sHt,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[dHt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[_Ht]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[aHt]),_:1}),l(),iHt]),t("td",cHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rHt,t("td",hHt,[t("a",fHt,[l("n个骰子的点数"),e(s)])]),t("td",gHt,[e(n,{to:"/offer/jz_offer_60_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",uHt,[e(n,{to:"/tag/math.html"},{default:o(()=>[mHt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yHt]),_:1}),l(),e(n,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[xHt]),_:1})]),t("td",pHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bHt,t("td",kHt,[t("a",MHt,[l("股票的最大利润"),e(s)])]),t("td",HHt,[e(n,{to:"/offer/jz_offer_63_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",IHt,[e(n,{to:"/tag/array.html"},{default:o(()=>[wHt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vHt]),_:1})]),t("td",qHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zHt,t("td",jHt,[t("a",CHt,[l("三角形中最小路径之和"),e(s)])]),t("td",OHt,[e(n,{to:"/offer2/jz_offer_II_100.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",LHt,[e(n,{to:"/tag/array.html"},{default:o(()=>[EHt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[PHt]),_:1})]),t("td",KHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VHt,t("td",NHt,[t("a",DHt,[l("加减的目标值"),e(s)])]),t("td",BHt,[e(n,{to:"/offer2/jz_offer_II_102.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",YHt,[e(n,{to:"/tag/array.html"},{default:o(()=>[AHt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[JHt]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[RHt]),_:1})]),t("td",SHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UHt,t("td",WHt,[t("a",XHt,[l("最少的硬币数目"),e(s)])]),t("td",FHt,[e(n,{to:"/offer2/jz_offer_II_103.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",GHt,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[THt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[QHt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ZHt]),_:1})]),t("td",$Ht,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tIt,t("td",eIt,[t("a",lIt,[l("排列的数目"),e(s)])]),oIt,t("td",nIt,[e(n,{to:"/tag/array.html"},{default:o(()=>[sIt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[dIt]),_:1})]),t("td",_It,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aIt,t("td",iIt,[t("a",cIt,[l("矩阵中的距离"),e(s)])]),rIt,t("td",hIt,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fIt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[gIt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[uIt]),_:1}),l(),mIt]),t("td",yIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xIt,t("td",pIt,[t("a",bIt,[l("最长递增路径"),e(s)])]),kIt,t("td",MIt,[e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[HIt]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[IIt]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[wIt]),_:1}),l(),vIt]),t("td",qIt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zIt,t("td",jIt,[t("a",CIt,[l("回文子字符串的个数"),e(s)])]),OIt,t("td",LIt,[e(n,{to:"/tag/string.html"},{default:o(()=>[EIt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[PIt]),_:1})]),t("td",KIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VIt,t("td",NIt,[t("a",DIt,[l("前 n 个数字二进制中 1 的个数"),e(s)])]),BIt,t("td",YIt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[AIt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[JIt]),_:1})]),t("td",RIt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[SIt,t("td",UIt,[t("a",WIt,[l("矩阵中最大的矩形"),e(s)])]),t("td",XIt,[e(n,{to:"/offer2/jz_offer_II_040.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",FIt,[e(n,{to:"/tag/stack.html"},{default:o(()=>[GIt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[TIt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[QIt]),_:1}),l(),ZIt]),t("td",$It,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[twt,t("td",ewt,[t("a",lwt,[l("节点之和最大的路径"),e(s)])]),t("td",owt,[e(n,{to:"/offer2/jz_offer_II_051.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",nwt,[e(n,{to:"/tag/tree.html"},{default:o(()=>[swt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[dwt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_wt]),_:1}),l(),awt]),t("td",iwt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cwt,t("td",rwt,[t("a",hwt,[l("生成匹配的括号"),e(s)])]),t("td",fwt,[e(n,{to:"/offer2/jz_offer_II_085.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",gwt,[e(n,{to:"/tag/string.html"},{default:o(()=>[uwt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[mwt]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[ywt]),_:1})]),t("td",xwt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pwt,t("td",bwt,[t("a",kwt,[l("爬楼梯的最少成本"),e(s)])]),Mwt,t("td",Hwt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Iwt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[wwt]),_:1})]),t("td",vwt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qwt,t("td",zwt,[t("a",jwt,[l("房屋偷盗"),e(s)])]),t("td",Cwt,[e(n,{to:"/offer2/jz_offer_II_089.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Owt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Lwt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ewt]),_:1})]),t("td",Pwt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kwt,t("td",Vwt,[t("a",Nwt,[l("环形房屋偷盗"),e(s)])]),Dwt,t("td",Bwt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ywt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Awt]),_:1})]),t("td",Jwt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rwt,t("td",Swt,[t("a",Uwt,[l("粉刷房子"),e(s)])]),Wwt,t("td",Xwt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Fwt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Gwt]),_:1})]),t("td",Twt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qwt,t("td",Zwt,[t("a",$wt,[l("翻转字符"),e(s)])]),tvt,t("td",evt,[e(n,{to:"/tag/string.html"},{default:o(()=>[lvt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ovt]),_:1})]),t("td",nvt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[svt,t("td",dvt,[t("a",_vt,[l("最长斐波那契数列"),e(s)])]),avt,t("td",ivt,[e(n,{to:"/tag/array.html"},{default:o(()=>[cvt]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[rvt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[hvt]),_:1})]),t("td",fvt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gvt,t("td",uvt,[t("a",mvt,[l("最少回文分割"),e(s)])]),yvt,t("td",xvt,[e(n,{to:"/tag/string.html"},{default:o(()=>[pvt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[bvt]),_:1})]),t("td",kvt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mvt,t("td",Hvt,[t("a",Ivt,[l("最长公共子序列"),e(s)])]),t("td",wvt,[e(n,{to:"/offer2/jz_offer_II_095.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vvt,[e(n,{to:"/tag/string.html"},{default:o(()=>[qvt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[zvt]),_:1})]),t("td",jvt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cvt,t("td",Ovt,[t("a",Lvt,[l("字符串交织"),e(s)])]),t("td",Evt,[e(n,{to:"/offer2/jz_offer_II_096.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pvt,[e(n,{to:"/tag/string.html"},{default:o(()=>[Kvt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Vvt]),_:1})]),t("td",Nvt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dvt,t("td",Bvt,[t("a",Yvt,[l("子序列的数目"),e(s)])]),Avt,t("td",Jvt,[e(n,{to:"/tag/string.html"},{default:o(()=>[Rvt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Svt]),_:1})]),t("td",Uvt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wvt,t("td",Xvt,[t("a",Fvt,[l("路径的数目"),e(s)])]),t("td",Gvt,[e(n,{to:"/offer2/jz_offer_II_098.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Tvt,[e(n,{to:"/tag/math.html"},{default:o(()=>[Qvt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Zvt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[$vt]),_:1})]),t("td",tqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eqt,t("td",lqt,[t("a",oqt,[l("最小路径之和"),e(s)])]),t("td",nqt,[e(n,{to:"/offer2/jz_offer_II_099.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",sqt,[e(n,{to:"/tag/array.html"},{default:o(()=>[dqt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_qt]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[aqt]),_:1})]),t("td",iqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cqt,t("td",rqt,[t("a",hqt,[l("翻转数位"),e(s)])]),fqt,t("td",gqt,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[uqt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[mqt]),_:1})]),t("td",yqt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xqt,t("td",pqt,[t("a",bqt,[l("三步问题"),e(s)])]),kqt,t("td",Mqt,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[Hqt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Iqt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[wqt]),_:1})]),t("td",vqt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qqt,t("td",zqt,[t("a",jqt,[l("迷路的机器人"),e(s)])]),Cqt,t("td",Oqt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Lqt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Eqt]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[Pqt]),_:1}),l(),Kqt]),t("td",Vqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nqt,t("td",Dqt,[t("a",Bqt,[l("括号"),e(s)])]),Yqt,t("td",Aqt,[e(n,{to:"/tag/string.html"},{default:o(()=>[Jqt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Rqt]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[Sqt]),_:1})]),t("td",Uqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wqt,t("td",Xqt,[t("a",Fqt,[l("硬币"),e(s)])]),Gqt,t("td",Tqt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Qqt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Zqt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$qt]),_:1})]),t("td",tzt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ezt,t("td",lzt,[t("a",ozt,[l("堆箱子"),e(s)])]),nzt,t("td",szt,[e(n,{to:"/tag/array.html"},{default:o(()=>[dzt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[_zt]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[azt]),_:1})]),t("td",izt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[czt,t("td",rzt,[t("a",hzt,[l("布尔运算"),e(s)])]),fzt,t("td",gzt,[e(n,{to:"/tag/memoization.html"},{default:o(()=>[uzt]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[mzt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[yzt]),_:1})]),t("td",xzt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pzt,t("td",bzt,[t("a",kzt,[l("连续数列"),e(s)])]),Mzt,t("td",Hzt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Izt]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[wzt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[vzt]),_:1})]),t("td",qzt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zzt,t("td",jzt,[t("a",Czt,[l("2出现的次数"),e(s)])]),Ozt,t("td",Lzt,[e(n,{to:"/tag/recursion.html"},{default:o(()=>[Ezt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[Pzt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Kzt]),_:1})]),t("td",Vzt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nzt,t("td",Dzt,[t("a",Bzt,[l("马戏团人塔"),e(s)])]),Yzt,t("td",Azt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Jzt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[Rzt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Szt]),_:1}),l(),Uzt]),t("td",Wzt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xzt,t("td",Fzt,[t("a",Gzt,[l("第 k 个数"),e(s)])]),Tzt,t("td",Qzt,[e(n,{to:"/tag/hash-table.html"},{default:o(()=>[Zzt]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[$zt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tjt]),_:1}),l(),ejt]),t("td",ljt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ojt,t("td",njt,[t("a",sjt,[l("恢复空格"),e(s)])]),djt,t("td",_jt,[e(n,{to:"/tag/trie.html"},{default:o(()=>[ajt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ijt]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[cjt]),_:1}),l(),rjt]),t("td",hjt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fjt,t("td",gjt,[t("a",ujt,[l("按摩师"),e(s)])]),mjt,t("td",yjt,[e(n,{to:"/tag/array.html"},{default:o(()=>[xjt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[pjt]),_:1})]),t("td",bjt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[kjt,t("td",Mjt,[t("a",Hjt,[l("直方图的水量"),e(s)])]),Ijt,t("td",wjt,[e(n,{to:"/tag/stack.html"},{default:o(()=>[vjt]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[qjt]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[zjt]),_:1}),l(),jjt]),t("td",Cjt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ojt,t("td",Ljt,[t("a",Ejt,[l("最大黑方阵"),e(s)])]),Pjt,t("td",Kjt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Vjt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Njt]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[Djt]),_:1})]),t("td",Bjt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yjt,t("td",Ajt,[t("a",Jjt,[l("最大子矩阵"),e(s)])]),Rjt,t("td",Sjt,[e(n,{to:"/tag/array.html"},{default:o(()=>[Ujt]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Wjt]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[Xjt]),_:1}),l(),Fjt]),t("td",Gjt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const tCt=a(h,[["render",Tjt],["__file","dynamic-programming.html.vue"]]);export{tCt as default};
