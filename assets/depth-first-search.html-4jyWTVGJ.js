import{_ as i,r as _,o as r,c,a as t,b as e,w as o,d as l,f as a}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"深度优先搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#深度优先搜索","aria-hidden":"true"},"#"),l(" 深度优先搜索")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),H=t("code",null,"哈希表",-1),E=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),O=t("code",null,"树",-1),j=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),q=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),B=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),D=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),J=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),R=t("code",null,"递归",-1),S=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),G=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("span",{class:"blue"},"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),rt=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),Ht=t("code",null,"水塘抽样",-1),Et=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Ot=t("code",null,"设计",-1),jt=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),qt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vt=t("td",{style:{"text-align":"center"}},"94",-1),Bt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},At={href:"/problem/0094",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"left"}},Dt=t("code",null,"栈",-1),Yt=t("code",null,"树",-1),Jt=t("code",null,"深度优先搜索",-1),Qt=t("code",null,"1+",-1),Rt={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"98",-1),Zt={style:{"text-align":"left"}},Ft={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"center"}},Xt={href:"/problem/0098",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"树",-1),ee=t("code",null,"深度优先搜索",-1),le=t("code",null,"二叉搜索树",-1),oe=t("code",null,"1+",-1),ne={style:{"text-align":"left"}},se=t("td",{style:{"text-align":"center"}},"99",-1),de={style:{"text-align":"left"}},_e={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ie={style:{"text-align":"center"}},re={href:"/problem/0099",target:"_blank",rel:"noopener noreferrer"},ce={style:{"text-align":"left"}},ae=t("code",null,"树",-1),he=t("code",null,"深度优先搜索",-1),ue=t("code",null,"二叉搜索树",-1),fe=t("code",null,"1+",-1),ge={style:{"text-align":"left"}},me=t("td",{style:{"text-align":"center"}},"100",-1),ye={style:{"text-align":"left"}},xe={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},pe={style:{"text-align":"center"}},be={href:"/problem/0100",target:"_blank",rel:"noopener noreferrer"},ke={style:{"text-align":"left"}},Me=t("code",null,"树",-1),Ie=t("code",null,"深度优先搜索",-1),ve=t("code",null,"广度优先搜索",-1),we=t("code",null,"1+",-1),He={style:{"text-align":"left"}},Ee=t("td",{style:{"text-align":"center"}},"101",-1),ze={style:{"text-align":"left"}},Oe={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},je={style:{"text-align":"center"}},Le={href:"/problem/0101",target:"_blank",rel:"noopener noreferrer"},qe={style:{"text-align":"left"}},Ce=t("code",null,"树",-1),Ne=t("code",null,"深度优先搜索",-1),Pe=t("code",null,"广度优先搜索",-1),Ke=t("code",null,"1+",-1),Ve={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"104",-1),Te={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ae={style:{"text-align":"center"}},We={href:"/problem/0104",target:"_blank",rel:"noopener noreferrer"},De={style:{"text-align":"left"}},Ye=t("code",null,"树",-1),Je=t("code",null,"深度优先搜索",-1),Qe=t("code",null,"广度优先搜索",-1),Re=t("code",null,"1+",-1),Se={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"110",-1),Fe={style:{"text-align":"left"}},Ge={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xe={style:{"text-align":"center"}},$e={href:"/problem/0110",target:"_blank",rel:"noopener noreferrer"},tl={style:{"text-align":"left"}},el=t("code",null,"树",-1),ll=t("code",null,"深度优先搜索",-1),ol=t("code",null,"二叉树",-1),nl={style:{"text-align":"left"}},sl=t("td",{style:{"text-align":"center"}},"111",-1),dl={style:{"text-align":"left"}},_l={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},il={style:{"text-align":"center"}},rl={href:"/problem/0111",target:"_blank",rel:"noopener noreferrer"},cl={style:{"text-align":"left"}},al=t("code",null,"树",-1),hl=t("code",null,"深度优先搜索",-1),ul=t("code",null,"广度优先搜索",-1),fl=t("code",null,"1+",-1),gl={style:{"text-align":"left"}},ml=t("td",{style:{"text-align":"center"}},"112",-1),yl={style:{"text-align":"left"}},xl={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},pl={style:{"text-align":"center"}},bl={href:"/problem/0112",target:"_blank",rel:"noopener noreferrer"},kl={style:{"text-align":"left"}},Ml=t("code",null,"树",-1),Il=t("code",null,"深度优先搜索",-1),vl=t("code",null,"广度优先搜索",-1),wl=t("code",null,"1+",-1),Hl={style:{"text-align":"left"}},El=t("td",{style:{"text-align":"center"}},"113",-1),zl={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},jl={style:{"text-align":"center"}},Ll={href:"/problem/0113",target:"_blank",rel:"noopener noreferrer"},ql={style:{"text-align":"left"}},Cl=t("code",null,"树",-1),Nl=t("code",null,"深度优先搜索",-1),Pl=t("code",null,"回溯",-1),Kl=t("code",null,"1+",-1),Vl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"114",-1),Tl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"center"}},Wl={href:"/problem/0114",target:"_blank",rel:"noopener noreferrer"},Dl={style:{"text-align":"left"}},Yl=t("code",null,"栈",-1),Jl=t("code",null,"树",-1),Ql=t("code",null,"深度优先搜索",-1),Rl=t("code",null,"2+",-1),Sl={style:{"text-align":"left"}},Zl=t("td",{style:{"text-align":"center"}},"116",-1),Fl={style:{"text-align":"left"}},Gl={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},Xl={style:{"text-align":"center"}},$l={href:"/problem/0116",target:"_blank",rel:"noopener noreferrer"},to={style:{"text-align":"left"}},eo=t("code",null,"树",-1),lo=t("code",null,"深度优先搜索",-1),oo=t("code",null,"广度优先搜索",-1),no=t("code",null,"2+",-1),so={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"117",-1),io={style:{"text-align":"left"}},ro={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},co={style:{"text-align":"center"}},ao={href:"/problem/0117",target:"_blank",rel:"noopener noreferrer"},ho={style:{"text-align":"left"}},uo=t("code",null,"树",-1),fo=t("code",null,"深度优先搜索",-1),go=t("code",null,"广度优先搜索",-1),mo=t("code",null,"2+",-1),yo={style:{"text-align":"left"}},xo=t("td",{style:{"text-align":"center"}},"124",-1),po={style:{"text-align":"left"}},bo={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},ko={style:{"text-align":"center"}},Mo={href:"/problem/0124",target:"_blank",rel:"noopener noreferrer"},Io={style:{"text-align":"left"}},vo=t("code",null,"树",-1),wo=t("code",null,"深度优先搜索",-1),Ho=t("code",null,"动态规划",-1),Eo=t("code",null,"1+",-1),zo={style:{"text-align":"left"}},Oo=t("td",{style:{"text-align":"center"}},"129",-1),jo={style:{"text-align":"left"}},Lo={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},qo={style:{"text-align":"center"}},Co={href:"/problem/0129",target:"_blank",rel:"noopener noreferrer"},No={style:{"text-align":"left"}},Po=t("code",null,"树",-1),Ko=t("code",null,"深度优先搜索",-1),Vo=t("code",null,"二叉树",-1),Bo={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"130",-1),Uo={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},Wo={style:{"text-align":"center"}},Do={href:"/problem/0130",target:"_blank",rel:"noopener noreferrer"},Yo={style:{"text-align":"left"}},Jo=t("code",null,"深度优先搜索",-1),Qo=t("code",null,"广度优先搜索",-1),Ro=t("code",null,"并查集",-1),So=t("code",null,"2+",-1),Zo={style:{"text-align":"left"}},Fo=t("td",{style:{"text-align":"center"}},"133",-1),Go={style:{"text-align":"left"}},Xo={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},$o={style:{"text-align":"center"}},tn={href:"/problem/0133",target:"_blank",rel:"noopener noreferrer"},en={style:{"text-align":"left"}},ln=t("code",null,"深度优先搜索",-1),on=t("code",null,"广度优先搜索",-1),nn=t("code",null,"图",-1),sn=t("code",null,"1+",-1),dn={style:{"text-align":"left"}},_n=t("td",{style:{"text-align":"center"}},"144",-1),rn={style:{"text-align":"left"}},cn={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},an={style:{"text-align":"center"}},hn={href:"/problem/0144",target:"_blank",rel:"noopener noreferrer"},un={style:{"text-align":"left"}},fn=t("code",null,"栈",-1),gn=t("code",null,"树",-1),mn=t("code",null,"深度优先搜索",-1),yn=t("code",null,"1+",-1),xn={style:{"text-align":"left"}},pn=t("td",{style:{"text-align":"center"}},"145",-1),bn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Mn={style:{"text-align":"center"}},In={href:"/problem/0145",target:"_blank",rel:"noopener noreferrer"},vn={style:{"text-align":"left"}},wn=t("code",null,"栈",-1),Hn=t("code",null,"树",-1),En=t("code",null,"深度优先搜索",-1),zn=t("code",null,"1+",-1),On={style:{"text-align":"left"}},jn=t("td",{style:{"text-align":"center"}},"156",-1),Ln={style:{"text-align":"left"}},qn={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},Cn={style:{"text-align":"center"}},Nn={href:"/problem/0156",target:"_blank",rel:"noopener noreferrer"},Pn={style:{"text-align":"left"}},Kn=t("code",null,"树",-1),Vn=t("code",null,"深度优先搜索",-1),Bn=t("code",null,"二叉树",-1),Tn={style:{"text-align":"left"}},Un=t("td",{style:{"text-align":"center"}},"199",-1),An={style:{"text-align":"left"}},Wn={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},Dn={style:{"text-align":"center"}},Yn={href:"/problem/0199",target:"_blank",rel:"noopener noreferrer"},Jn={style:{"text-align":"left"}},Qn=t("code",null,"树",-1),Rn=t("code",null,"深度优先搜索",-1),Sn=t("code",null,"广度优先搜索",-1),Zn=t("code",null,"1+",-1),Fn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"200",-1),Xn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},ts={style:{"text-align":"center"}},es={href:"/problem/0200",target:"_blank",rel:"noopener noreferrer"},ls={style:{"text-align":"left"}},os=t("code",null,"深度优先搜索",-1),ns=t("code",null,"广度优先搜索",-1),ss=t("code",null,"并查集",-1),ds=t("code",null,"2+",-1),_s={style:{"text-align":"left"}},is=t("td",{style:{"text-align":"center"}},"207",-1),rs={style:{"text-align":"left"}},cs={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},as={style:{"text-align":"center"}},hs={href:"/problem/0207",target:"_blank",rel:"noopener noreferrer"},us={style:{"text-align":"left"}},fs=t("code",null,"深度优先搜索",-1),gs=t("code",null,"广度优先搜索",-1),ms=t("code",null,"图",-1),ys=t("code",null,"1+",-1),xs={style:{"text-align":"left"}},ps=t("td",{style:{"text-align":"center"}},"210",-1),bs={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Ms={style:{"text-align":"center"}},Is={href:"/problem/0210",target:"_blank",rel:"noopener noreferrer"},vs={style:{"text-align":"left"}},ws=t("code",null,"深度优先搜索",-1),Hs=t("code",null,"广度优先搜索",-1),Es=t("code",null,"图",-1),zs=t("code",null,"1+",-1),Os={style:{"text-align":"left"}},js=t("td",{style:{"text-align":"center"}},"211",-1),Ls={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},Cs={style:{"text-align":"center"}},Ns={href:"/problem/0211",target:"_blank",rel:"noopener noreferrer"},Ps={style:{"text-align":"left"}},Ks=t("code",null,"深度优先搜索",-1),Vs=t("code",null,"设计",-1),Bs=t("code",null,"字典树",-1),Ts=t("code",null,"1+",-1),Us={style:{"text-align":"left"}},As=t("td",{style:{"text-align":"center"}},"226",-1),Ws={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ys={style:{"text-align":"center"}},Js={href:"/problem/0226",target:"_blank",rel:"noopener noreferrer"},Qs={style:{"text-align":"left"}},Rs=t("code",null,"树",-1),Ss=t("code",null,"深度优先搜索",-1),Zs=t("code",null,"广度优先搜索",-1),Fs=t("code",null,"1+",-1),Gs={style:{"text-align":"left"}},Xs=t("td",{style:{"text-align":"center"}},"230",-1),$s={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},ed={style:{"text-align":"center"}},ld={href:"/problem/0230",target:"_blank",rel:"noopener noreferrer"},od={style:{"text-align":"left"}},nd=t("code",null,"树",-1),sd=t("code",null,"深度优先搜索",-1),dd=t("code",null,"二叉搜索树",-1),_d=t("code",null,"1+",-1),id={style:{"text-align":"left"}},rd=t("td",{style:{"text-align":"center"}},"235",-1),cd={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},hd={style:{"text-align":"center"}},ud={href:"/problem/0235",target:"_blank",rel:"noopener noreferrer"},fd={style:{"text-align":"left"}},gd=t("code",null,"树",-1),md=t("code",null,"深度优先搜索",-1),yd=t("code",null,"二叉搜索树",-1),xd=t("code",null,"1+",-1),pd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"236",-1),kd={style:{"text-align":"left"}},Md={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Id={style:{"text-align":"center"}},vd={href:"/problem/0236",target:"_blank",rel:"noopener noreferrer"},wd={style:{"text-align":"left"}},Hd=t("code",null,"树",-1),Ed=t("code",null,"深度优先搜索",-1),zd=t("code",null,"二叉树",-1),Od={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"250",-1),Ld={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},Cd=t("td",{style:{"text-align":"center"}},null,-1),Nd={style:{"text-align":"left"}},Pd=t("code",null,"树",-1),Kd=t("code",null,"深度优先搜索",-1),Vd=t("code",null,"二叉树",-1),Bd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"257",-1),Ud={style:{"text-align":"left"}},Ad={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},Wd={style:{"text-align":"center"}},Dd={href:"/problem/0257",target:"_blank",rel:"noopener noreferrer"},Yd={style:{"text-align":"left"}},Jd=t("code",null,"树",-1),Qd=t("code",null,"深度优先搜索",-1),Rd=t("code",null,"字符串",-1),Sd=t("code",null,"2+",-1),Zd={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"261",-1),Gd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"深度优先搜索",-1),l_=t("code",null,"广度优先搜索",-1),o_=t("code",null,"并查集",-1),n_=t("code",null,"1+",-1),s_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"269",-1),__={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},null,-1),c_={style:{"text-align":"left"}},a_=t("code",null,"深度优先搜索",-1),h_=t("code",null,"广度优先搜索",-1),u_=t("code",null,"图",-1),f_=t("code",null,"3+",-1),g_={style:{"text-align":"left"}},m_=t("td",{style:{"text-align":"center"}},"270",-1),y_={style:{"text-align":"left"}},x_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),b_={style:{"text-align":"left"}},k_=t("code",null,"树",-1),M_=t("code",null,"深度优先搜索",-1),I_=t("code",null,"二叉搜索树",-1),v_=t("code",null,"2+",-1),w_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"272",-1),E_={style:{"text-align":"left"}},z_={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},O_=t("td",{style:{"text-align":"center"}},null,-1),j_={style:{"text-align":"left"}},L_=t("code",null,"栈",-1),q_=t("code",null,"树",-1),C_=t("code",null,"深度优先搜索",-1),N_=t("code",null,"4+",-1),P_={style:{"text-align":"left"}},K_=t("td",{style:{"text-align":"center"}},"285",-1),V_={style:{"text-align":"left"}},B_={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},T_=t("td",{style:{"text-align":"center"}},null,-1),U_={style:{"text-align":"left"}},A_=t("code",null,"树",-1),W_=t("code",null,"深度优先搜索",-1),D_=t("code",null,"二叉搜索树",-1),Y_=t("code",null,"1+",-1),J_={style:{"text-align":"left"}},Q_=t("td",{style:{"text-align":"center"}},"297",-1),R_={style:{"text-align":"left"}},S_={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Z_={style:{"text-align":"center"}},F_={href:"/problem/0297",target:"_blank",rel:"noopener noreferrer"},G_={style:{"text-align":"left"}},X_=t("code",null,"树",-1),$_=t("code",null,"深度优先搜索",-1),ti=t("code",null,"广度优先搜索",-1),ei=t("code",null,"3+",-1),li={style:{"text-align":"left"}},oi=t("td",{style:{"text-align":"center"}},"298",-1),ni={style:{"text-align":"left"}},si={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},di=t("td",{style:{"text-align":"center"}},null,-1),_i={style:{"text-align":"left"}},ii=t("code",null,"树",-1),ri=t("code",null,"深度优先搜索",-1),ci=t("code",null,"二叉树",-1),ai={style:{"text-align":"left"}},hi=t("td",{style:{"text-align":"center"}},"302",-1),ui={style:{"text-align":"left"}},fi={href:"https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},gi=t("td",{style:{"text-align":"center"}},null,-1),mi={style:{"text-align":"left"}},yi=t("code",null,"深度优先搜索",-1),xi=t("code",null,"广度优先搜索",-1),pi=t("code",null,"数组",-1),bi=t("code",null,"2+",-1),ki={style:{"text-align":"left"}},Mi=t("td",{style:{"text-align":"center"}},"310",-1),Ii={style:{"text-align":"left"}},vi={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},wi=t("td",{style:{"text-align":"center"}},null,-1),Hi={style:{"text-align":"left"}},Ei=t("code",null,"深度优先搜索",-1),zi=t("code",null,"广度优先搜索",-1),Oi=t("code",null,"图",-1),ji=t("code",null,"1+",-1),Li={style:{"text-align":"left"}},qi=t("td",{style:{"text-align":"center"}},"314",-1),Ci={style:{"text-align":"left"}},Ni={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},Pi=t("td",{style:{"text-align":"center"}},null,-1),Ki={style:{"text-align":"left"}},Vi=t("code",null,"树",-1),Bi=t("code",null,"深度优先搜索",-1),Ti=t("code",null,"广度优先搜索",-1),Ui=t("code",null,"3+",-1),Ai={style:{"text-align":"left"}},Wi=t("td",{style:{"text-align":"center"}},"323",-1),Di={style:{"text-align":"left"}},Yi={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Ji=t("td",{style:{"text-align":"center"}},null,-1),Qi={style:{"text-align":"left"}},Ri=t("code",null,"深度优先搜索",-1),Si=t("code",null,"广度优先搜索",-1),Zi=t("code",null,"并查集",-1),Fi=t("code",null,"1+",-1),Gi={style:{"text-align":"left"}},Xi=t("td",{style:{"text-align":"center"}},"329",-1),$i={style:{"text-align":"left"}},tr={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},er=t("td",{style:{"text-align":"center"}},null,-1),lr={style:{"text-align":"left"}},or=t("code",null,"深度优先搜索",-1),nr=t("code",null,"广度优先搜索",-1),sr=t("code",null,"图",-1),dr=t("code",null,"5+",-1),_r={style:{"text-align":"left"}},ir=t("td",{style:{"text-align":"center"}},"332",-1),rr={style:{"text-align":"left"}},cr={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},ar=t("td",{style:{"text-align":"center"}},null,-1),hr={style:{"text-align":"left"}},ur=t("code",null,"深度优先搜索",-1),fr=t("code",null,"图",-1),gr=t("code",null,"欧拉回路",-1),mr={style:{"text-align":"left"}},yr=t("td",{style:{"text-align":"center"}},"333",-1),xr={style:{"text-align":"left"}},pr={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},br=t("td",{style:{"text-align":"center"}},null,-1),kr={style:{"text-align":"left"}},Mr=t("code",null,"树",-1),Ir=t("code",null,"深度优先搜索",-1),vr=t("code",null,"二叉搜索树",-1),wr=t("code",null,"2+",-1),Hr={style:{"text-align":"left"}},Er=t("td",{style:{"text-align":"center"}},"337",-1),zr={style:{"text-align":"left"}},Or={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},jr=t("td",{style:{"text-align":"center"}},null,-1),Lr={style:{"text-align":"left"}},qr=t("code",null,"树",-1),Cr=t("code",null,"深度优先搜索",-1),Nr=t("code",null,"动态规划",-1),Pr=t("code",null,"1+",-1),Kr={style:{"text-align":"left"}},Vr=t("td",{style:{"text-align":"center"}},"339",-1),Br={style:{"text-align":"left"}},Tr={href:"https://leetcode.com/problems/nested-list-weight-sum",target:"_blank",rel:"noopener noreferrer"},Ur=t("td",{style:{"text-align":"center"}},null,-1),Ar={style:{"text-align":"left"}},Wr=t("code",null,"深度优先搜索",-1),Dr=t("code",null,"广度优先搜索",-1),Yr={style:{"text-align":"left"}},Jr=t("td",{style:{"text-align":"center"}},"341",-1),Qr={style:{"text-align":"left"}},Rr={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},Sr=t("td",{style:{"text-align":"center"}},null,-1),Zr={style:{"text-align":"left"}},Fr=t("code",null,"栈",-1),Gr=t("code",null,"树",-1),Xr=t("code",null,"深度优先搜索",-1),$r=t("code",null,"3+",-1),tc={style:{"text-align":"left"}},ec=t("td",{style:{"text-align":"center"}},"364",-1),lc={style:{"text-align":"left"}},oc={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},nc=t("td",{style:{"text-align":"center"}},null,-1),sc={style:{"text-align":"left"}},dc=t("code",null,"栈",-1),_c=t("code",null,"深度优先搜索",-1),ic=t("code",null,"广度优先搜索",-1),rc={style:{"text-align":"left"}},cc=t("td",{style:{"text-align":"center"}},"365",-1),ac={style:{"text-align":"left"}},hc={href:"https://leetcode.com/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},uc=t("td",{style:{"text-align":"center"}},null,-1),fc={style:{"text-align":"left"}},gc=t("code",null,"深度优先搜索",-1),mc=t("code",null,"广度优先搜索",-1),yc=t("code",null,"数学",-1),xc={style:{"text-align":"left"}},pc=t("td",{style:{"text-align":"center"}},"366",-1),bc={style:{"text-align":"left"}},kc={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Mc={style:{"text-align":"center"}},Ic={href:"/problem/0366",target:"_blank",rel:"noopener noreferrer"},vc={style:{"text-align":"left"}},wc=t("code",null,"树",-1),Hc=t("code",null,"深度优先搜索",-1),Ec=t("code",null,"二叉树",-1),zc={style:{"text-align":"left"}},Oc=t("td",{style:{"text-align":"center"}},"385",-1),jc={style:{"text-align":"left"}},Lc={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},qc=t("td",{style:{"text-align":"center"}},null,-1),Cc={style:{"text-align":"left"}},Nc=t("code",null,"栈",-1),Pc=t("code",null,"深度优先搜索",-1),Kc=t("code",null,"字符串",-1),Vc={style:{"text-align":"left"}},Bc=t("td",{style:{"text-align":"center"}},"386",-1),Tc={style:{"text-align":"left"}},Uc={href:"https://leetcode.com/problems/lexicographical-numbers",target:"_blank",rel:"noopener noreferrer"},Ac=t("td",{style:{"text-align":"center"}},null,-1),Wc={style:{"text-align":"left"}},Dc=t("code",null,"深度优先搜索",-1),Yc=t("code",null,"字典树",-1),Jc={style:{"text-align":"left"}},Qc=t("td",{style:{"text-align":"center"}},"388",-1),Rc={style:{"text-align":"left"}},Sc={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},Zc=t("td",{style:{"text-align":"center"}},null,-1),Fc={style:{"text-align":"left"}},Gc=t("code",null,"栈",-1),Xc=t("code",null,"深度优先搜索",-1),$c=t("code",null,"字符串",-1),ta={style:{"text-align":"left"}},ea=t("td",{style:{"text-align":"center"}},"399",-1),la={style:{"text-align":"left"}},oa={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},na={style:{"text-align":"center"}},sa={href:"/problem/0399",target:"_blank",rel:"noopener noreferrer"},da={style:{"text-align":"left"}},_a=t("code",null,"深度优先搜索",-1),ia=t("code",null,"广度优先搜索",-1),ra=t("code",null,"并查集",-1),ca=t("code",null,"4+",-1),aa={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"404",-1),ua={style:{"text-align":"left"}},fa={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},ga=t("td",{style:{"text-align":"center"}},null,-1),ma={style:{"text-align":"left"}},ya=t("code",null,"树",-1),xa=t("code",null,"深度优先搜索",-1),pa=t("code",null,"广度优先搜索",-1),ba=t("code",null,"1+",-1),ka={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"417",-1),Ia={style:{"text-align":"left"}},va={href:"https://leetcode.com/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},wa=t("td",{style:{"text-align":"center"}},null,-1),Ha={style:{"text-align":"left"}},Ea=t("code",null,"深度优先搜索",-1),za=t("code",null,"广度优先搜索",-1),Oa=t("code",null,"数组",-1),ja=t("code",null,"1+",-1),La={style:{"text-align":"left"}},qa=t("td",{style:{"text-align":"center"}},"419",-1),Ca={style:{"text-align":"left"}},Na={href:"https://leetcode.com/problems/battleships-in-a-board",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},Va=t("code",null,"深度优先搜索",-1),Ba=t("code",null,"数组",-1),Ta=t("code",null,"矩阵",-1),Ua={style:{"text-align":"left"}},Aa=t("td",{style:{"text-align":"center"}},"426",-1),Wa={style:{"text-align":"left"}},Da={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Ya={style:{"text-align":"center"}},Ja={href:"/problem/0426",target:"_blank",rel:"noopener noreferrer"},Qa={style:{"text-align":"left"}},Ra=t("code",null,"栈",-1),Sa=t("code",null,"树",-1),Za=t("code",null,"深度优先搜索",-1),Fa=t("code",null,"4+",-1),Ga={style:{"text-align":"left"}},Xa=t("td",{style:{"text-align":"center"}},"428",-1),$a={style:{"text-align":"left"}},th={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},eh=t("td",{style:{"text-align":"center"}},null,-1),lh={style:{"text-align":"left"}},oh=t("code",null,"树",-1),nh=t("code",null,"深度优先搜索",-1),sh=t("code",null,"广度优先搜索",-1),dh=t("code",null,"1+",-1),_h={style:{"text-align":"left"}},ih=t("td",{style:{"text-align":"center"}},"430",-1),rh={style:{"text-align":"left"}},ch={href:"https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ah={style:{"text-align":"center"}},hh={href:"/problem/0430",target:"_blank",rel:"noopener noreferrer"},uh={style:{"text-align":"left"}},fh=t("code",null,"深度优先搜索",-1),gh=t("code",null,"链表",-1),mh=t("code",null,"双向链表",-1),yh={style:{"text-align":"left"}},xh=t("td",{style:{"text-align":"center"}},"431",-1),ph={style:{"text-align":"left"}},bh={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},kh=t("td",{style:{"text-align":"center"}},null,-1),Mh={style:{"text-align":"left"}},Ih=t("code",null,"树",-1),vh=t("code",null,"深度优先搜索",-1),wh=t("code",null,"广度优先搜索",-1),Hh=t("code",null,"2+",-1),Eh={style:{"text-align":"left"}},zh=t("td",{style:{"text-align":"center"}},"437",-1),Oh={style:{"text-align":"left"}},jh={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Lh={style:{"text-align":"center"}},qh={href:"/problem/0437",target:"_blank",rel:"noopener noreferrer"},Ch={style:{"text-align":"left"}},Nh=t("code",null,"树",-1),Ph=t("code",null,"深度优先搜索",-1),Kh=t("code",null,"二叉树",-1),Vh={style:{"text-align":"left"}},Bh=t("td",{style:{"text-align":"center"}},"449",-1),Th={style:{"text-align":"left"}},Uh={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Ah=t("td",{style:{"text-align":"center"}},null,-1),Wh={style:{"text-align":"left"}},Dh=t("code",null,"树",-1),Yh=t("code",null,"深度优先搜索",-1),Jh=t("code",null,"广度优先搜索",-1),Qh=t("code",null,"4+",-1),Rh={style:{"text-align":"left"}},Sh=t("td",{style:{"text-align":"center"}},"463",-1),Zh={style:{"text-align":"left"}},Fh={href:"https://leetcode.com/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},Gh=t("td",{style:{"text-align":"center"}},null,-1),Xh={style:{"text-align":"left"}},$h=t("code",null,"深度优先搜索",-1),t1=t("code",null,"广度优先搜索",-1),e1=t("code",null,"数组",-1),l1=t("code",null,"1+",-1),o1={style:{"text-align":"left"}},n1=t("td",{style:{"text-align":"center"}},"472",-1),s1={style:{"text-align":"left"}},d1={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},_1=t("td",{style:{"text-align":"center"}},null,-1),i1={style:{"text-align":"left"}},r1=t("code",null,"深度优先搜索",-1),c1=t("code",null,"字典树",-1),a1=t("code",null,"数组",-1),h1=t("code",null,"2+",-1),u1={style:{"text-align":"left"}},f1=t("td",{style:{"text-align":"center"}},"490",-1),g1={style:{"text-align":"left"}},m1={href:"https://leetcode.com/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},y1=t("td",{style:{"text-align":"center"}},null,-1),x1={style:{"text-align":"left"}},p1=t("code",null,"深度优先搜索",-1),b1=t("code",null,"广度优先搜索",-1),k1=t("code",null,"数组",-1),M1=t("code",null,"1+",-1),I1={style:{"text-align":"left"}},v1=t("td",{style:{"text-align":"center"}},"499",-1),w1={style:{"text-align":"left"}},H1={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},E1=t("td",{style:{"text-align":"center"}},null,-1),z1={style:{"text-align":"left"}},O1=t("code",null,"深度优先搜索",-1),j1=t("code",null,"广度优先搜索",-1),L1=t("code",null,"图",-1),q1=t("code",null,"5+",-1),C1={style:{"text-align":"left"}},N1=t("td",{style:{"text-align":"center"}},"501",-1),P1={style:{"text-align":"left"}},K1={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},V1=t("td",{style:{"text-align":"center"}},null,-1),B1={style:{"text-align":"left"}},T1=t("code",null,"树",-1),U1=t("code",null,"深度优先搜索",-1),A1=t("code",null,"二叉搜索树",-1),W1=t("code",null,"1+",-1),D1={style:{"text-align":"left"}},Y1=t("td",{style:{"text-align":"center"}},"505",-1),J1={style:{"text-align":"left"}},Q1={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},R1=t("td",{style:{"text-align":"center"}},null,-1),S1={style:{"text-align":"left"}},Z1=t("code",null,"深度优先搜索",-1),F1=t("code",null,"广度优先搜索",-1),G1=t("code",null,"图",-1),X1=t("code",null,"4+",-1),$1={style:{"text-align":"left"}},tu=t("td",{style:{"text-align":"center"}},"508",-1),eu={style:{"text-align":"left"}},lu={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},ou=t("td",{style:{"text-align":"center"}},null,-1),nu={style:{"text-align":"left"}},su=t("code",null,"树",-1),du=t("code",null,"深度优先搜索",-1),_u=t("code",null,"哈希表",-1),iu=t("code",null,"1+",-1),ru={style:{"text-align":"left"}},cu=t("td",{style:{"text-align":"center"}},"513",-1),au={style:{"text-align":"left"}},hu={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},uu=t("td",{style:{"text-align":"center"}},null,-1),fu={style:{"text-align":"left"}},gu=t("code",null,"树",-1),mu=t("code",null,"深度优先搜索",-1),yu=t("code",null,"广度优先搜索",-1),xu=t("code",null,"1+",-1),pu={style:{"text-align":"left"}},bu=t("td",{style:{"text-align":"center"}},"514",-1),ku={style:{"text-align":"left"}},Mu={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},Iu={style:{"text-align":"center"}},vu={href:"/problem/0514",target:"_blank",rel:"noopener noreferrer"},wu={style:{"text-align":"left"}},Hu=t("code",null,"深度优先搜索",-1),Eu=t("code",null,"广度优先搜索",-1),zu=t("code",null,"字符串",-1),Ou=t("code",null,"1+",-1),ju={style:{"text-align":"left"}},Lu=t("td",{style:{"text-align":"center"}},"515",-1),qu={style:{"text-align":"left"}},Cu={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Nu=t("td",{style:{"text-align":"center"}},null,-1),Pu={style:{"text-align":"left"}},Ku=t("code",null,"树",-1),Vu=t("code",null,"深度优先搜索",-1),Bu=t("code",null,"广度优先搜索",-1),Tu=t("code",null,"1+",-1),Uu={style:{"text-align":"left"}},Au=t("td",{style:{"text-align":"center"}},"529",-1),Wu={style:{"text-align":"left"}},Du={href:"https://leetcode.com/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},Yu=t("td",{style:{"text-align":"center"}},null,-1),Ju={style:{"text-align":"left"}},Qu=t("code",null,"深度优先搜索",-1),Ru=t("code",null,"广度优先搜索",-1),Su=t("code",null,"数组",-1),Zu=t("code",null,"1+",-1),Fu={style:{"text-align":"left"}},Gu=t("td",{style:{"text-align":"center"}},"530",-1),Xu={style:{"text-align":"left"}},$u={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},tf={style:{"text-align":"center"}},ef={href:"/problem/0530",target:"_blank",rel:"noopener noreferrer"},lf={style:{"text-align":"left"}},of=t("code",null,"树",-1),nf=t("code",null,"深度优先搜索",-1),sf=t("code",null,"广度优先搜索",-1),df=t("code",null,"2+",-1),_f={style:{"text-align":"left"}},rf=t("td",{style:{"text-align":"center"}},"536",-1),cf={style:{"text-align":"left"}},af={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},hf=t("td",{style:{"text-align":"center"}},null,-1),uf={style:{"text-align":"left"}},ff=t("code",null,"栈",-1),gf=t("code",null,"树",-1),mf=t("code",null,"深度优先搜索",-1),yf=t("code",null,"2+",-1),xf={style:{"text-align":"left"}},pf=t("td",{style:{"text-align":"center"}},"538",-1),bf={style:{"text-align":"left"}},kf={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Mf=t("td",{style:{"text-align":"center"}},null,-1),If={style:{"text-align":"left"}},vf=t("code",null,"树",-1),wf=t("code",null,"深度优先搜索",-1),Hf=t("code",null,"二叉搜索树",-1),Ef=t("code",null,"1+",-1),zf={style:{"text-align":"left"}},Of=t("td",{style:{"text-align":"center"}},"543",-1),jf={style:{"text-align":"left"}},Lf={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},qf={style:{"text-align":"center"}},Cf={href:"/problem/0543",target:"_blank",rel:"noopener noreferrer"},Nf={style:{"text-align":"left"}},Pf=t("code",null,"树",-1),Kf=t("code",null,"深度优先搜索",-1),Vf=t("code",null,"二叉树",-1),Bf={style:{"text-align":"left"}},Tf=t("td",{style:{"text-align":"center"}},"545",-1),Uf={style:{"text-align":"left"}},Af={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wf=t("td",{style:{"text-align":"center"}},null,-1),Df={style:{"text-align":"left"}},Yf=t("code",null,"树",-1),Jf=t("code",null,"深度优先搜索",-1),Qf=t("code",null,"二叉树",-1),Rf={style:{"text-align":"left"}},Sf=t("td",{style:{"text-align":"center"}},"547",-1),Zf={style:{"text-align":"left"}},Ff={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},Gf=t("td",{style:{"text-align":"center"}},null,-1),Xf={style:{"text-align":"left"}},$f=t("code",null,"深度优先搜索",-1),tg=t("code",null,"广度优先搜索",-1),eg=t("code",null,"并查集",-1),lg=t("code",null,"1+",-1),og={style:{"text-align":"left"}},ng=t("td",{style:{"text-align":"center"}},"549",-1),sg={style:{"text-align":"left"}},dg={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},_g=t("td",{style:{"text-align":"center"}},null,-1),ig={style:{"text-align":"left"}},rg=t("code",null,"树",-1),cg=t("code",null,"深度优先搜索",-1),ag=t("code",null,"二叉树",-1),hg={style:{"text-align":"left"}},ug=t("td",{style:{"text-align":"center"}},"559",-1),fg={style:{"text-align":"left"}},gg={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},mg={style:{"text-align":"center"}},yg={href:"/problem/0559",target:"_blank",rel:"noopener noreferrer"},xg={style:{"text-align":"left"}},pg=t("code",null,"树",-1),bg=t("code",null,"深度优先搜索",-1),kg=t("code",null,"广度优先搜索",-1),Mg={style:{"text-align":"left"}},Ig=t("td",{style:{"text-align":"center"}},"563",-1),vg={style:{"text-align":"left"}},wg={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Hg=t("td",{style:{"text-align":"center"}},null,-1),Eg={style:{"text-align":"left"}},zg=t("code",null,"树",-1),Og=t("code",null,"深度优先搜索",-1),jg=t("code",null,"二叉树",-1),Lg={style:{"text-align":"left"}},qg=t("td",{style:{"text-align":"center"}},"565",-1),Cg={style:{"text-align":"left"}},Ng={href:"https://leetcode.com/problems/array-nesting",target:"_blank",rel:"noopener noreferrer"},Pg=t("td",{style:{"text-align":"center"}},null,-1),Kg={style:{"text-align":"left"}},Vg=t("code",null,"深度优先搜索",-1),Bg=t("code",null,"数组",-1),Tg={style:{"text-align":"left"}},Ug=t("td",{style:{"text-align":"center"}},"572",-1),Ag={style:{"text-align":"left"}},Wg={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},Dg={style:{"text-align":"center"}},Yg={href:"/problem/0572",target:"_blank",rel:"noopener noreferrer"},Jg={style:{"text-align":"left"}},Qg=t("code",null,"树",-1),Rg=t("code",null,"深度优先搜索",-1),Sg=t("code",null,"二叉树",-1),Zg=t("code",null,"2+",-1),Fg={style:{"text-align":"left"}},Gg=t("td",{style:{"text-align":"center"}},"582",-1),Xg={style:{"text-align":"left"}},$g={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},tm=t("td",{style:{"text-align":"center"}},null,-1),em={style:{"text-align":"left"}},lm=t("code",null,"树",-1),om=t("code",null,"深度优先搜索",-1),nm=t("code",null,"广度优先搜索",-1),sm=t("code",null,"2+",-1),dm={style:{"text-align":"left"}},_m=t("td",{style:{"text-align":"center"}},"589",-1),im={style:{"text-align":"left"}},rm={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},cm={style:{"text-align":"center"}},am={href:"/problem/0589",target:"_blank",rel:"noopener noreferrer"},hm={style:{"text-align":"left"}},um=t("code",null,"栈",-1),fm=t("code",null,"树",-1),gm=t("code",null,"深度优先搜索",-1),mm={style:{"text-align":"left"}},ym=t("td",{style:{"text-align":"center"}},"590",-1),xm={style:{"text-align":"left"}},pm={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},bm={style:{"text-align":"center"}},km={href:"/problem/0590",target:"_blank",rel:"noopener noreferrer"},Mm={style:{"text-align":"left"}},Im=t("code",null,"栈",-1),vm=t("code",null,"树",-1),wm=t("code",null,"深度优先搜索",-1),Hm={style:{"text-align":"left"}},Em=t("td",{style:{"text-align":"center"}},"606",-1),zm={style:{"text-align":"left"}},Om={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},jm=t("td",{style:{"text-align":"center"}},null,-1),Lm={style:{"text-align":"left"}},qm=t("code",null,"树",-1),Cm=t("code",null,"深度优先搜索",-1),Nm=t("code",null,"字符串",-1),Pm=t("code",null,"1+",-1),Km={style:{"text-align":"left"}},Vm=t("td",{style:{"text-align":"center"}},"617",-1),Bm={style:{"text-align":"left"}},Tm={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},Um={style:{"text-align":"center"}},Am={href:"/problem/0617",target:"_blank",rel:"noopener noreferrer"},Wm={style:{"text-align":"left"}},Dm=t("code",null,"树",-1),Ym=t("code",null,"深度优先搜索",-1),Jm=t("code",null,"广度优先搜索",-1),Qm=t("code",null,"1+",-1),Rm={style:{"text-align":"left"}},Sm=t("td",{style:{"text-align":"center"}},"623",-1),Zm={style:{"text-align":"left"}},Fm={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Gm=t("td",{style:{"text-align":"center"}},null,-1),Xm={style:{"text-align":"left"}},$m=t("code",null,"树",-1),t2=t("code",null,"深度优先搜索",-1),e2=t("code",null,"广度优先搜索",-1),l2=t("code",null,"1+",-1),o2={style:{"text-align":"left"}},n2=t("td",{style:{"text-align":"center"}},"637",-1),s2={style:{"text-align":"left"}},d2={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},_2={style:{"text-align":"center"}},i2={href:"/problem/0637",target:"_blank",rel:"noopener noreferrer"},r2={style:{"text-align":"left"}},c2=t("code",null,"树",-1),a2=t("code",null,"深度优先搜索",-1),h2=t("code",null,"广度优先搜索",-1),u2=t("code",null,"1+",-1),f2={style:{"text-align":"left"}},g2=t("td",{style:{"text-align":"center"}},"642",-1),m2={style:{"text-align":"left"}},y2={href:"https://leetcode.com/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},x2=t("td",{style:{"text-align":"center"}},null,-1),p2={style:{"text-align":"left"}},b2=t("code",null,"深度优先搜索",-1),k2=t("code",null,"设计",-1),M2=t("code",null,"字典树",-1),I2=t("code",null,"4+",-1),v2={style:{"text-align":"left"}},w2=t("td",{style:{"text-align":"center"}},"652",-1),H2={style:{"text-align":"left"}},E2={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},z2=t("td",{style:{"text-align":"center"}},null,-1),O2={style:{"text-align":"left"}},j2=t("code",null,"树",-1),L2=t("code",null,"深度优先搜索",-1),q2=t("code",null,"哈希表",-1),C2=t("code",null,"1+",-1),N2={style:{"text-align":"left"}},P2=t("td",{style:{"text-align":"center"}},"653",-1),K2={style:{"text-align":"left"}},V2={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},B2=t("td",{style:{"text-align":"center"}},null,-1),T2={style:{"text-align":"left"}},U2=t("code",null,"树",-1),A2=t("code",null,"深度优先搜索",-1),W2=t("code",null,"广度优先搜索",-1),D2=t("code",null,"4+",-1),Y2={style:{"text-align":"left"}},J2=t("td",{style:{"text-align":"center"}},"655",-1),Q2={style:{"text-align":"left"}},R2={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},S2=t("td",{style:{"text-align":"center"}},null,-1),Z2={style:{"text-align":"left"}},F2=t("code",null,"树",-1),G2=t("code",null,"深度优先搜索",-1),X2=t("code",null,"广度优先搜索",-1),$2=t("code",null,"1+",-1),ty={style:{"text-align":"left"}},ey=t("td",{style:{"text-align":"center"}},"662",-1),ly={style:{"text-align":"left"}},oy={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},ny={style:{"text-align":"center"}},sy={href:"/problem/0662",target:"_blank",rel:"noopener noreferrer"},dy={style:{"text-align":"left"}},_y=t("code",null,"树",-1),iy=t("code",null,"深度优先搜索",-1),ry=t("code",null,"广度优先搜索",-1),cy=t("code",null,"1+",-1),ay={style:{"text-align":"left"}},hy=t("td",{style:{"text-align":"center"}},"663",-1),uy={style:{"text-align":"left"}},fy={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},gy=t("td",{style:{"text-align":"center"}},null,-1),my={style:{"text-align":"left"}},yy=t("code",null,"树",-1),xy=t("code",null,"深度优先搜索",-1),py=t("code",null,"二叉树",-1),by={style:{"text-align":"left"}},ky=t("td",{style:{"text-align":"center"}},"666",-1),My={style:{"text-align":"left"}},Iy={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},vy=t("td",{style:{"text-align":"center"}},null,-1),wy={style:{"text-align":"left"}},Hy=t("code",null,"树",-1),Ey=t("code",null,"深度优先搜索",-1),zy=t("code",null,"数组",-1),Oy=t("code",null,"2+",-1),jy={style:{"text-align":"left"}},Ly=t("td",{style:{"text-align":"center"}},"669",-1),qy={style:{"text-align":"left"}},Cy={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ny=t("td",{style:{"text-align":"center"}},null,-1),Py={style:{"text-align":"left"}},Ky=t("code",null,"树",-1),Vy=t("code",null,"深度优先搜索",-1),By=t("code",null,"二叉搜索树",-1),Ty=t("code",null,"1+",-1),Uy={style:{"text-align":"left"}},Ay=t("td",{style:{"text-align":"center"}},"671",-1),Wy={style:{"text-align":"left"}},Dy={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yy=t("td",{style:{"text-align":"center"}},null,-1),Jy={style:{"text-align":"left"}},Qy=t("code",null,"树",-1),Ry=t("code",null,"深度优先搜索",-1),Sy=t("code",null,"二叉树",-1),Zy={style:{"text-align":"left"}},Fy=t("td",{style:{"text-align":"center"}},"672",-1),Gy={style:{"text-align":"left"}},Xy={href:"https://leetcode.com/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},$y=t("td",{style:{"text-align":"center"}},null,-1),t3={style:{"text-align":"left"}},e3=t("code",null,"位运算",-1),l3=t("code",null,"深度优先搜索",-1),o3=t("code",null,"广度优先搜索",-1),n3=t("code",null,"1+",-1),s3={style:{"text-align":"left"}},d3=t("td",{style:{"text-align":"center"}},"676",-1),_3={style:{"text-align":"left"}},i3={href:"https://leetcode.com/problems/implement-magic-dictionary",target:"_blank",rel:"noopener noreferrer"},r3=t("td",{style:{"text-align":"center"}},null,-1),c3={style:{"text-align":"left"}},a3=t("code",null,"深度优先搜索",-1),h3=t("code",null,"设计",-1),u3=t("code",null,"字典树",-1),f3=t("code",null,"2+",-1),g3={style:{"text-align":"left"}},m3=t("td",{style:{"text-align":"center"}},"684",-1),y3={style:{"text-align":"left"}},x3={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},p3=t("td",{style:{"text-align":"center"}},null,-1),b3={style:{"text-align":"left"}},k3=t("code",null,"深度优先搜索",-1),M3=t("code",null,"广度优先搜索",-1),I3=t("code",null,"并查集",-1),v3=t("code",null,"1+",-1),w3={style:{"text-align":"left"}},H3=t("td",{style:{"text-align":"center"}},"685",-1),E3={style:{"text-align":"left"}},z3={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},O3=t("td",{style:{"text-align":"center"}},null,-1),j3={style:{"text-align":"left"}},L3=t("code",null,"深度优先搜索",-1),q3=t("code",null,"广度优先搜索",-1),C3=t("code",null,"并查集",-1),N3=t("code",null,"1+",-1),P3={style:{"text-align":"left"}},K3=t("td",{style:{"text-align":"center"}},"687",-1),V3={style:{"text-align":"left"}},B3={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},T3=t("td",{style:{"text-align":"center"}},null,-1),U3={style:{"text-align":"left"}},A3=t("code",null,"树",-1),W3=t("code",null,"深度优先搜索",-1),D3=t("code",null,"二叉树",-1),Y3={style:{"text-align":"left"}},J3=t("td",{style:{"text-align":"center"}},"690",-1),Q3={style:{"text-align":"left"}},R3={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},S3=t("td",{style:{"text-align":"center"}},null,-1),Z3={style:{"text-align":"left"}},F3=t("code",null,"树",-1),G3=t("code",null,"深度优先搜索",-1),X3=t("code",null,"广度优先搜索",-1),$3=t("code",null,"2+",-1),tx={style:{"text-align":"left"}},ex=t("td",{style:{"text-align":"center"}},"694",-1),lx={style:{"text-align":"left"}},ox={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},nx=t("td",{style:{"text-align":"center"}},null,-1),sx={style:{"text-align":"left"}},dx=t("code",null,"深度优先搜索",-1),_x=t("code",null,"广度优先搜索",-1),ix=t("code",null,"并查集",-1),rx=t("code",null,"2+",-1),cx={style:{"text-align":"left"}},ax=t("td",{style:{"text-align":"center"}},"695",-1),hx={style:{"text-align":"left"}},ux={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},fx={style:{"text-align":"center"}},gx={href:"/problem/0695",target:"_blank",rel:"noopener noreferrer"},mx={style:{"text-align":"left"}},yx=t("code",null,"深度优先搜索",-1),xx=t("code",null,"广度优先搜索",-1),px=t("code",null,"并查集",-1),bx=t("code",null,"2+",-1),kx={style:{"text-align":"left"}},Mx=t("td",{style:{"text-align":"center"}},"711",-1),Ix={style:{"text-align":"left"}},vx={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},wx=t("td",{style:{"text-align":"center"}},null,-1),Hx={style:{"text-align":"left"}},Ex=t("code",null,"深度优先搜索",-1),zx=t("code",null,"广度优先搜索",-1),Ox=t("code",null,"并查集",-1),jx=t("code",null,"2+",-1),Lx={style:{"text-align":"left"}},qx=t("td",{style:{"text-align":"center"}},"721",-1),Cx={style:{"text-align":"left"}},Nx={href:"https://leetcode.com/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},Px=t("td",{style:{"text-align":"center"}},null,-1),Kx={style:{"text-align":"left"}},Vx=t("code",null,"深度优先搜索",-1),Bx=t("code",null,"广度优先搜索",-1),Tx=t("code",null,"并查集",-1),Ux=t("code",null,"4+",-1),Ax={style:{"text-align":"left"}},Wx=t("td",{style:{"text-align":"center"}},"733",-1),Dx={style:{"text-align":"left"}},Yx={href:"https://leetcode.com/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},Jx=t("td",{style:{"text-align":"center"}},null,-1),Qx={style:{"text-align":"left"}},Rx=t("code",null,"深度优先搜索",-1),Sx=t("code",null,"广度优先搜索",-1),Zx=t("code",null,"数组",-1),Fx=t("code",null,"1+",-1),Gx={style:{"text-align":"left"}},Xx=t("td",{style:{"text-align":"center"}},"737",-1),$x={style:{"text-align":"left"}},tp={href:"https://leetcode.com/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},ep=t("td",{style:{"text-align":"center"}},null,-1),lp={style:{"text-align":"left"}},op=t("code",null,"深度优先搜索",-1),np=t("code",null,"广度优先搜索",-1),sp=t("code",null,"并查集",-1),dp=t("code",null,"3+",-1),_p={style:{"text-align":"left"}},ip=t("td",{style:{"text-align":"center"}},"742",-1),rp={style:{"text-align":"left"}},cp={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ap=t("td",{style:{"text-align":"center"}},null,-1),hp={style:{"text-align":"left"}},up=t("code",null,"树",-1),fp=t("code",null,"深度优先搜索",-1),gp=t("code",null,"广度优先搜索",-1),mp=t("code",null,"1+",-1),yp={style:{"text-align":"left"}},xp=t("td",{style:{"text-align":"center"}},"743",-1),pp={style:{"text-align":"left"}},bp={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},kp=t("td",{style:{"text-align":"center"}},null,-1),Mp={style:{"text-align":"left"}},Ip=t("code",null,"深度优先搜索",-1),vp=t("code",null,"广度优先搜索",-1),wp=t("code",null,"图",-1),Hp=t("code",null,"2+",-1),Ep={style:{"text-align":"left"}},zp=t("td",{style:{"text-align":"center"}},"749",-1),Op={style:{"text-align":"left"}},jp={href:"https://leetcode.com/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},Lp=t("td",{style:{"text-align":"center"}},null,-1),qp={style:{"text-align":"left"}},Cp=t("code",null,"深度优先搜索",-1),Np=t("code",null,"广度优先搜索",-1),Pp=t("code",null,"数组",-1),Kp=t("code",null,"2+",-1),Vp={style:{"text-align":"left"}},Bp=t("td",{style:{"text-align":"center"}},"753",-1),Tp={style:{"text-align":"left"}},Up={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},Ap=t("td",{style:{"text-align":"center"}},null,-1),Wp={style:{"text-align":"left"}},Dp=t("code",null,"深度优先搜索",-1),Yp=t("code",null,"图",-1),Jp=t("code",null,"欧拉回路",-1),Qp={style:{"text-align":"left"}},Rp=t("td",{style:{"text-align":"center"}},"756",-1),Sp={style:{"text-align":"left"}},Zp={href:"https://leetcode.com/problems/pyramid-transition-matrix",target:"_blank",rel:"noopener noreferrer"},Fp=t("td",{style:{"text-align":"center"}},null,-1),Gp={style:{"text-align":"left"}},Xp=t("code",null,"位运算",-1),$p=t("code",null,"深度优先搜索",-1),tb=t("code",null,"广度优先搜索",-1),eb={style:{"text-align":"left"}},lb=t("td",{style:{"text-align":"center"}},"765",-1),ob={style:{"text-align":"left"}},nb={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},sb=t("td",{style:{"text-align":"center"}},null,-1),db={style:{"text-align":"left"}},_b=t("code",null,"贪心",-1),ib=t("code",null,"深度优先搜索",-1),rb=t("code",null,"广度优先搜索",-1),cb=t("code",null,"2+",-1),ab={style:{"text-align":"left"}},hb=t("td",{style:{"text-align":"center"}},"778",-1),ub={style:{"text-align":"left"}},fb={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},gb=t("td",{style:{"text-align":"center"}},null,-1),mb={style:{"text-align":"left"}},yb=t("code",null,"深度优先搜索",-1),xb=t("code",null,"广度优先搜索",-1),pb=t("code",null,"并查集",-1),bb=t("code",null,"4+",-1),kb={style:{"text-align":"left"}},Mb=t("td",{style:{"text-align":"center"}},"783",-1),Ib={style:{"text-align":"left"}},vb={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},wb={style:{"text-align":"center"}},Hb={href:"/problem/0783",target:"_blank",rel:"noopener noreferrer"},Eb={style:{"text-align":"left"}},zb=t("code",null,"树",-1),Ob=t("code",null,"深度优先搜索",-1),jb=t("code",null,"广度优先搜索",-1),Lb=t("code",null,"2+",-1),qb={style:{"text-align":"left"}},Cb=t("td",{style:{"text-align":"center"}},"785",-1),Nb={style:{"text-align":"left"}},Pb={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},Kb=t("td",{style:{"text-align":"center"}},null,-1),Vb={style:{"text-align":"left"}},Bb=t("code",null,"深度优先搜索",-1),Tb=t("code",null,"广度优先搜索",-1),Ub=t("code",null,"并查集",-1),Ab=t("code",null,"1+",-1),Wb={style:{"text-align":"left"}},Db=t("td",{style:{"text-align":"center"}},"787",-1),Yb={style:{"text-align":"left"}},Jb={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Qb=t("td",{style:{"text-align":"center"}},null,-1),Rb={style:{"text-align":"left"}},Sb=t("code",null,"深度优先搜索",-1),Zb=t("code",null,"广度优先搜索",-1),Fb=t("code",null,"图",-1),Gb=t("code",null,"3+",-1),Xb={style:{"text-align":"left"}},$b=t("td",{style:{"text-align":"center"}},"797",-1),t0={style:{"text-align":"left"}},e0={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},l0=t("td",{style:{"text-align":"center"}},null,-1),o0={style:{"text-align":"left"}},n0=t("code",null,"深度优先搜索",-1),s0=t("code",null,"广度优先搜索",-1),d0=t("code",null,"图",-1),_0=t("code",null,"1+",-1),i0={style:{"text-align":"left"}},r0=t("td",{style:{"text-align":"center"}},"802",-1),c0={style:{"text-align":"left"}},a0={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},h0=t("td",{style:{"text-align":"center"}},null,-1),u0={style:{"text-align":"left"}},f0=t("code",null,"深度优先搜索",-1),g0=t("code",null,"广度优先搜索",-1),m0=t("code",null,"图",-1),y0=t("code",null,"1+",-1),x0={style:{"text-align":"left"}},p0=t("td",{style:{"text-align":"center"}},"814",-1),b0={style:{"text-align":"left"}},k0={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},M0=t("td",{style:{"text-align":"center"}},null,-1),I0={style:{"text-align":"left"}},v0=t("code",null,"树",-1),w0=t("code",null,"深度优先搜索",-1),H0=t("code",null,"二叉树",-1),E0={style:{"text-align":"left"}},z0=t("td",{style:{"text-align":"center"}},"827",-1),O0={style:{"text-align":"left"}},j0={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},L0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},C0=t("code",null,"深度优先搜索",-1),N0=t("code",null,"广度优先搜索",-1),P0=t("code",null,"并查集",-1),K0=t("code",null,"2+",-1),V0={style:{"text-align":"left"}},B0=t("td",{style:{"text-align":"center"}},"834",-1),T0={style:{"text-align":"left"}},U0={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},A0=t("td",{style:{"text-align":"center"}},null,-1),W0={style:{"text-align":"left"}},D0=t("code",null,"树",-1),Y0=t("code",null,"深度优先搜索",-1),J0=t("code",null,"图",-1),Q0=t("code",null,"1+",-1),R0={style:{"text-align":"left"}},S0=t("td",{style:{"text-align":"center"}},"839",-1),Z0={style:{"text-align":"left"}},F0={href:"https://leetcode.com/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},G0=t("td",{style:{"text-align":"center"}},null,-1),X0={style:{"text-align":"left"}},$0=t("code",null,"深度优先搜索",-1),t4=t("code",null,"广度优先搜索",-1),e4=t("code",null,"并查集",-1),l4=t("code",null,"3+",-1),o4={style:{"text-align":"left"}},n4=t("td",{style:{"text-align":"center"}},"841",-1),s4={style:{"text-align":"left"}},d4={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},_4=t("td",{style:{"text-align":"center"}},null,-1),i4={style:{"text-align":"left"}},r4=t("code",null,"深度优先搜索",-1),c4=t("code",null,"广度优先搜索",-1),a4=t("code",null,"图",-1),h4={style:{"text-align":"left"}},u4=t("td",{style:{"text-align":"center"}},"851",-1),f4={style:{"text-align":"left"}},g4={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},m4=t("td",{style:{"text-align":"center"}},null,-1),y4={style:{"text-align":"left"}},x4=t("code",null,"深度优先搜索",-1),p4=t("code",null,"图",-1),b4=t("code",null,"拓扑排序",-1),k4=t("code",null,"1+",-1),M4={style:{"text-align":"left"}},I4=t("td",{style:{"text-align":"center"}},"863",-1),v4={style:{"text-align":"left"}},w4={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},H4=t("td",{style:{"text-align":"center"}},null,-1),E4={style:{"text-align":"left"}},z4=t("code",null,"树",-1),O4=t("code",null,"深度优先搜索",-1),j4=t("code",null,"广度优先搜索",-1),L4=t("code",null,"2+",-1),q4={style:{"text-align":"left"}},C4=t("td",{style:{"text-align":"center"}},"865",-1),N4={style:{"text-align":"left"}},P4={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},K4=t("td",{style:{"text-align":"center"}},null,-1),V4={style:{"text-align":"left"}},B4=t("code",null,"树",-1),T4=t("code",null,"深度优先搜索",-1),U4=t("code",null,"广度优先搜索",-1),A4=t("code",null,"2+",-1),W4={style:{"text-align":"left"}},D4=t("td",{style:{"text-align":"center"}},"872",-1),Y4={style:{"text-align":"left"}},J4={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},Q4=t("td",{style:{"text-align":"center"}},null,-1),R4={style:{"text-align":"left"}},S4=t("code",null,"树",-1),Z4=t("code",null,"深度优先搜索",-1),F4=t("code",null,"二叉树",-1),G4={style:{"text-align":"left"}},X4=t("td",{style:{"text-align":"center"}},"886",-1),$4={style:{"text-align":"left"}},t8={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},e8=t("td",{style:{"text-align":"center"}},null,-1),l8={style:{"text-align":"left"}},o8=t("code",null,"深度优先搜索",-1),n8=t("code",null,"广度优先搜索",-1),s8=t("code",null,"并查集",-1),d8=t("code",null,"1+",-1),_8={style:{"text-align":"left"}},i8=t("td",{style:{"text-align":"center"}},"897",-1),r8={style:{"text-align":"left"}},c8={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},a8=t("td",{style:{"text-align":"center"}},null,-1),h8={style:{"text-align":"left"}},u8=t("code",null,"栈",-1),f8=t("code",null,"树",-1),g8=t("code",null,"深度优先搜索",-1),m8=t("code",null,"2+",-1),y8={style:{"text-align":"left"}},x8=t("td",{style:{"text-align":"center"}},"924",-1),p8={style:{"text-align":"left"}},b8={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},k8=t("td",{style:{"text-align":"center"}},null,-1),M8={style:{"text-align":"left"}},I8=t("code",null,"深度优先搜索",-1),v8=t("code",null,"广度优先搜索",-1),w8=t("code",null,"并查集",-1),H8=t("code",null,"3+",-1),E8={style:{"text-align":"left"}},z8=t("td",{style:{"text-align":"center"}},"928",-1),O8={style:{"text-align":"left"}},j8={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},L8=t("td",{style:{"text-align":"center"}},null,-1),q8={style:{"text-align":"left"}},C8=t("code",null,"深度优先搜索",-1),N8=t("code",null,"广度优先搜索",-1),P8=t("code",null,"并查集",-1),K8=t("code",null,"3+",-1),V8={style:{"text-align":"left"}},B8=t("td",{style:{"text-align":"center"}},"934",-1),T8={style:{"text-align":"left"}},U8={href:"https://leetcode.com/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},A8=t("td",{style:{"text-align":"center"}},null,-1),W8={style:{"text-align":"left"}},D8=t("code",null,"深度优先搜索",-1),Y8=t("code",null,"广度优先搜索",-1),J8=t("code",null,"数组",-1),Q8=t("code",null,"1+",-1),R8={style:{"text-align":"left"}},S8=t("td",{style:{"text-align":"center"}},"938",-1),Z8={style:{"text-align":"left"}},F8={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},G8=t("td",{style:{"text-align":"center"}},null,-1),X8={style:{"text-align":"left"}},$8=t("code",null,"树",-1),t5=t("code",null,"深度优先搜索",-1),e5=t("code",null,"二叉搜索树",-1),l5=t("code",null,"1+",-1),o5={style:{"text-align":"left"}},n5=t("td",{style:{"text-align":"center"}},"947",-1),s5={style:{"text-align":"left"}},d5={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},_5=t("td",{style:{"text-align":"center"}},null,-1),i5={style:{"text-align":"left"}},r5=t("code",null,"深度优先搜索",-1),c5=t("code",null,"并查集",-1),a5=t("code",null,"图",-1),h5=t("code",null,"1+",-1),u5={style:{"text-align":"left"}},f5=t("td",{style:{"text-align":"center"}},"951",-1),g5={style:{"text-align":"left"}},m5={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},y5=t("td",{style:{"text-align":"center"}},null,-1),x5={style:{"text-align":"left"}},p5=t("code",null,"树",-1),b5=t("code",null,"深度优先搜索",-1),k5=t("code",null,"二叉树",-1),M5={style:{"text-align":"left"}},I5=t("td",{style:{"text-align":"center"}},"959",-1),v5={style:{"text-align":"left"}},w5={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},H5=t("td",{style:{"text-align":"center"}},null,-1),E5={style:{"text-align":"left"}},z5=t("code",null,"深度优先搜索",-1),O5=t("code",null,"广度优先搜索",-1),j5=t("code",null,"并查集",-1),L5=t("code",null,"3+",-1),q5={style:{"text-align":"left"}},C5=t("td",{style:{"text-align":"center"}},"965",-1),N5={style:{"text-align":"left"}},P5={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},K5=t("td",{style:{"text-align":"center"}},null,-1),V5={style:{"text-align":"left"}},B5=t("code",null,"树",-1),T5=t("code",null,"深度优先搜索",-1),U5=t("code",null,"广度优先搜索",-1),A5=t("code",null,"1+",-1),W5={style:{"text-align":"left"}},D5=t("td",{style:{"text-align":"center"}},"968",-1),Y5={style:{"text-align":"left"}},J5={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},Q5=t("td",{style:{"text-align":"center"}},null,-1),R5={style:{"text-align":"left"}},S5=t("code",null,"树",-1),Z5=t("code",null,"深度优先搜索",-1),F5=t("code",null,"动态规划",-1),G5=t("code",null,"1+",-1),X5={style:{"text-align":"left"}},$5=t("td",{style:{"text-align":"center"}},"971",-1),t6={style:{"text-align":"left"}},e6={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},l6=t("td",{style:{"text-align":"center"}},null,-1),o6={style:{"text-align":"left"}},n6=t("code",null,"树",-1),s6=t("code",null,"深度优先搜索",-1),d6=t("code",null,"二叉树",-1),_6={style:{"text-align":"left"}},i6=t("td",{style:{"text-align":"center"}},"979",-1),r6={style:{"text-align":"left"}},c6={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},a6=t("td",{style:{"text-align":"center"}},null,-1),h6={style:{"text-align":"left"}},u6=t("code",null,"树",-1),f6=t("code",null,"深度优先搜索",-1),g6=t("code",null,"二叉树",-1),m6={style:{"text-align":"left"}},y6=t("td",{style:{"text-align":"center"}},"987",-1),x6={style:{"text-align":"left"}},p6={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},b6=t("td",{style:{"text-align":"center"}},null,-1),k6={style:{"text-align":"left"}},M6=t("code",null,"树",-1),I6=t("code",null,"深度优先搜索",-1),v6=t("code",null,"广度优先搜索",-1),w6=t("code",null,"3+",-1),H6={style:{"text-align":"left"}},E6=t("td",{style:{"text-align":"center"}},"988",-1),z6={style:{"text-align":"left"}},O6={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},j6=t("td",{style:{"text-align":"center"}},null,-1),L6={style:{"text-align":"left"}},q6=t("code",null,"树",-1),C6=t("code",null,"深度优先搜索",-1),N6=t("code",null,"字符串",-1),P6=t("code",null,"2+",-1),K6={style:{"text-align":"left"}},V6=t("td",{style:{"text-align":"center"}},"993",-1),B6={style:{"text-align":"left"}},T6={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},U6=t("td",{style:{"text-align":"center"}},null,-1),A6={style:{"text-align":"left"}},W6=t("code",null,"树",-1),D6=t("code",null,"深度优先搜索",-1),Y6=t("code",null,"广度优先搜索",-1),J6=t("code",null,"1+",-1),Q6={style:{"text-align":"left"}},R6=t("td",{style:{"text-align":"center"}},"1020",-1),S6={style:{"text-align":"left"}},Z6={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},F6=t("td",{style:{"text-align":"center"}},null,-1),G6={style:{"text-align":"left"}},X6=t("code",null,"深度优先搜索",-1),$6=t("code",null,"广度优先搜索",-1),t7=t("code",null,"并查集",-1),e7=t("code",null,"2+",-1),l7={style:{"text-align":"left"}},o7=t("td",{style:{"text-align":"center"}},"1022",-1),n7={style:{"text-align":"left"}},s7={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},d7=t("td",{style:{"text-align":"center"}},null,-1),_7={style:{"text-align":"left"}},i7=t("code",null,"树",-1),r7=t("code",null,"深度优先搜索",-1),c7=t("code",null,"二叉树",-1),a7={style:{"text-align":"left"}},h7=t("td",{style:{"text-align":"center"}},"1026",-1),u7={style:{"text-align":"left"}},f7={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},g7=t("td",{style:{"text-align":"center"}},null,-1),m7={style:{"text-align":"left"}},y7=t("code",null,"树",-1),x7=t("code",null,"深度优先搜索",-1),p7=t("code",null,"二叉树",-1),b7={style:{"text-align":"left"}},k7=t("td",{style:{"text-align":"center"}},"1028",-1),M7={style:{"text-align":"left"}},I7={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},v7=t("td",{style:{"text-align":"center"}},null,-1),w7={style:{"text-align":"left"}},H7=t("code",null,"树",-1),E7=t("code",null,"深度优先搜索",-1),z7=t("code",null,"字符串",-1),O7=t("code",null,"1+",-1),j7={style:{"text-align":"left"}},L7=t("td",{style:{"text-align":"center"}},"1034",-1),q7={style:{"text-align":"left"}},C7={href:"https://leetcode.com/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},N7=t("td",{style:{"text-align":"center"}},null,-1),P7={style:{"text-align":"left"}},K7=t("code",null,"深度优先搜索",-1),V7=t("code",null,"广度优先搜索",-1),B7=t("code",null,"数组",-1),T7=t("code",null,"1+",-1),U7={style:{"text-align":"left"}},A7=t("td",{style:{"text-align":"center"}},"1036",-1),W7={style:{"text-align":"left"}},D7={href:"https://leetcode.com/problems/escape-a-large-maze",target:"_blank",rel:"noopener noreferrer"},Y7=t("td",{style:{"text-align":"center"}},null,-1),J7={style:{"text-align":"left"}},Q7=t("code",null,"深度优先搜索",-1),R7=t("code",null,"广度优先搜索",-1),S7=t("code",null,"数组",-1),Z7=t("code",null,"1+",-1),F7={style:{"text-align":"left"}},G7=t("td",{style:{"text-align":"center"}},"1038",-1),X7={style:{"text-align":"left"}},$7={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},t9=t("td",{style:{"text-align":"center"}},null,-1),e9={style:{"text-align":"left"}},l9=t("code",null,"树",-1),o9=t("code",null,"深度优先搜索",-1),n9=t("code",null,"二叉搜索树",-1),s9=t("code",null,"1+",-1),d9={style:{"text-align":"left"}},_9=t("td",{style:{"text-align":"center"}},"1042",-1),i9={style:{"text-align":"left"}},r9={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},c9=t("td",{style:{"text-align":"center"}},null,-1),a9={style:{"text-align":"left"}},h9=t("code",null,"深度优先搜索",-1),u9=t("code",null,"广度优先搜索",-1),f9=t("code",null,"图",-1),g9={style:{"text-align":"left"}},m9=t("td",{style:{"text-align":"center"}},"1080",-1),y9={style:{"text-align":"left"}},x9={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},p9=t("td",{style:{"text-align":"center"}},null,-1),b9={style:{"text-align":"left"}},k9=t("code",null,"树",-1),M9=t("code",null,"深度优先搜索",-1),I9=t("code",null,"二叉树",-1),v9={style:{"text-align":"left"}},w9=t("td",{style:{"text-align":"center"}},"1102",-1),H9={style:{"text-align":"left"}},E9={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},z9=t("td",{style:{"text-align":"center"}},null,-1),O9={style:{"text-align":"left"}},j9=t("code",null,"深度优先搜索",-1),L9=t("code",null,"广度优先搜索",-1),q9=t("code",null,"并查集",-1),C9=t("code",null,"4+",-1),N9={style:{"text-align":"left"}},P9=t("td",{style:{"text-align":"center"}},"1110",-1),K9={style:{"text-align":"left"}},V9={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},B9=t("td",{style:{"text-align":"center"}},null,-1),T9={style:{"text-align":"left"}},U9=t("code",null,"树",-1),A9=t("code",null,"深度优先搜索",-1),W9=t("code",null,"数组",-1),D9=t("code",null,"2+",-1),Y9={style:{"text-align":"left"}},J9=t("td",{style:{"text-align":"center"}},"1120",-1),Q9={style:{"text-align":"left"}},R9={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},S9=t("td",{style:{"text-align":"center"}},null,-1),Z9={style:{"text-align":"left"}},F9=t("code",null,"树",-1),G9=t("code",null,"深度优先搜索",-1),X9=t("code",null,"二叉树",-1),$9={style:{"text-align":"left"}},tk=t("td",{style:{"text-align":"center"}},"1123",-1),ek={style:{"text-align":"left"}},lk={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},ok=t("td",{style:{"text-align":"center"}},null,-1),nk={style:{"text-align":"left"}},sk=t("code",null,"树",-1),dk=t("code",null,"深度优先搜索",-1),_k=t("code",null,"广度优先搜索",-1),ik=t("code",null,"2+",-1),rk={style:{"text-align":"left"}},ck=t("td",{style:{"text-align":"center"}},"1145",-1),ak={style:{"text-align":"left"}},hk={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},uk=t("td",{style:{"text-align":"center"}},null,-1),fk={style:{"text-align":"left"}},gk=t("code",null,"树",-1),mk=t("code",null,"深度优先搜索",-1),yk=t("code",null,"二叉树",-1),xk={style:{"text-align":"left"}},pk=t("td",{style:{"text-align":"center"}},"1161",-1),bk={style:{"text-align":"left"}},kk={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Mk=t("td",{style:{"text-align":"center"}},null,-1),Ik={style:{"text-align":"left"}},vk=t("code",null,"树",-1),wk=t("code",null,"深度优先搜索",-1),Hk=t("code",null,"广度优先搜索",-1),Ek=t("code",null,"1+",-1),zk={style:{"text-align":"left"}},Ok=t("td",{style:{"text-align":"center"}},"1192",-1),jk={style:{"text-align":"left"}},Lk={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},qk=t("td",{style:{"text-align":"center"}},null,-1),Ck={style:{"text-align":"left"}},Nk=t("code",null,"深度优先搜索",-1),Pk=t("code",null,"图",-1),Kk=t("code",null,"双连通分量",-1),Vk={style:{"text-align":"left"}},Bk=t("td",{style:{"text-align":"center"}},"1202",-1),Tk={style:{"text-align":"left"}},Uk={href:"https://leetcode.com/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},Ak=t("td",{style:{"text-align":"center"}},null,-1),Wk={style:{"text-align":"left"}},Dk=t("code",null,"深度优先搜索",-1),Yk=t("code",null,"广度优先搜索",-1),Jk=t("code",null,"并查集",-1),Qk=t("code",null,"4+",-1),Rk={style:{"text-align":"left"}},Sk=t("td",{style:{"text-align":"center"}},"1203",-1),Zk={style:{"text-align":"left"}},Fk={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},Gk=t("td",{style:{"text-align":"center"}},null,-1),Xk={style:{"text-align":"left"}},$k=t("code",null,"深度优先搜索",-1),tM=t("code",null,"广度优先搜索",-1),eM=t("code",null,"图",-1),lM=t("code",null,"1+",-1),oM={style:{"text-align":"left"}},nM=t("td",{style:{"text-align":"center"}},"1214",-1),sM={style:{"text-align":"left"}},dM={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},_M=t("td",{style:{"text-align":"center"}},null,-1),iM={style:{"text-align":"left"}},rM=t("code",null,"栈",-1),cM=t("code",null,"树",-1),aM=t("code",null,"深度优先搜索",-1),hM=t("code",null,"4+",-1),uM={style:{"text-align":"left"}},fM=t("td",{style:{"text-align":"center"}},"1233",-1),gM={style:{"text-align":"left"}},mM={href:"https://leetcode.com/problems/remove-sub-folders-from-the-filesystem",target:"_blank",rel:"noopener noreferrer"},yM=t("td",{style:{"text-align":"center"}},null,-1),xM={style:{"text-align":"left"}},pM=t("code",null,"深度优先搜索",-1),bM=t("code",null,"字典树",-1),kM=t("code",null,"数组",-1),MM=t("code",null,"1+",-1),IM={style:{"text-align":"left"}},vM=t("td",{style:{"text-align":"center"}},"1236",-1),wM={style:{"text-align":"left"}},HM={href:"https://leetcode.com/problems/web-crawler",target:"_blank",rel:"noopener noreferrer"},EM=t("td",{style:{"text-align":"center"}},null,-1),zM={style:{"text-align":"left"}},OM=t("code",null,"深度优先搜索",-1),jM=t("code",null,"广度优先搜索",-1),LM=t("code",null,"字符串",-1),qM=t("code",null,"1+",-1),CM={style:{"text-align":"left"}},NM=t("td",{style:{"text-align":"center"}},"1242",-1),PM={style:{"text-align":"left"}},KM={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},VM=t("td",{style:{"text-align":"center"}},null,-1),BM={style:{"text-align":"left"}},TM=t("code",null,"深度优先搜索",-1),UM=t("code",null,"广度优先搜索",-1),AM=t("code",null,"多线程",-1),WM={style:{"text-align":"left"}},DM=t("td",{style:{"text-align":"center"}},"1245",-1),YM={style:{"text-align":"left"}},JM={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},QM=t("td",{style:{"text-align":"center"}},null,-1),RM={style:{"text-align":"left"}},SM=t("code",null,"树",-1),ZM=t("code",null,"深度优先搜索",-1),FM=t("code",null,"广度优先搜索",-1),GM=t("code",null,"2+",-1),XM={style:{"text-align":"left"}},$M=t("td",{style:{"text-align":"center"}},"1254",-1),tI={style:{"text-align":"left"}},eI={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},lI=t("td",{style:{"text-align":"center"}},null,-1),oI={style:{"text-align":"left"}},nI=t("code",null,"深度优先搜索",-1),sI=t("code",null,"广度优先搜索",-1),dI=t("code",null,"并查集",-1),_I=t("code",null,"2+",-1),iI={style:{"text-align":"left"}},rI=t("td",{style:{"text-align":"center"}},"1257",-1),cI={style:{"text-align":"left"}},aI={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},hI=t("td",{style:{"text-align":"center"}},null,-1),uI={style:{"text-align":"left"}},fI=t("code",null,"树",-1),gI=t("code",null,"深度优先搜索",-1),mI=t("code",null,"广度优先搜索",-1),yI=t("code",null,"3+",-1),xI={style:{"text-align":"left"}},pI=t("td",{style:{"text-align":"center"}},"1261",-1),bI={style:{"text-align":"left"}},kI={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},MI=t("td",{style:{"text-align":"center"}},null,-1),II={style:{"text-align":"left"}},vI=t("code",null,"树",-1),wI=t("code",null,"深度优先搜索",-1),HI=t("code",null,"广度优先搜索",-1),EI=t("code",null,"3+",-1),zI={style:{"text-align":"left"}},OI=t("td",{style:{"text-align":"center"}},"1267",-1),jI={style:{"text-align":"left"}},LI={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},qI=t("td",{style:{"text-align":"center"}},null,-1),CI={style:{"text-align":"left"}},NI=t("code",null,"深度优先搜索",-1),PI=t("code",null,"广度优先搜索",-1),KI=t("code",null,"并查集",-1),VI=t("code",null,"3+",-1),BI={style:{"text-align":"left"}},TI=t("td",{style:{"text-align":"center"}},"1273",-1),UI={style:{"text-align":"left"}},AI={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},WI=t("td",{style:{"text-align":"center"}},null,-1),DI={style:{"text-align":"left"}},YI=t("code",null,"树",-1),JI=t("code",null,"深度优先搜索",-1),QI=t("code",null,"广度优先搜索",-1),RI=t("code",null,"1+",-1),SI={style:{"text-align":"left"}},ZI=t("td",{style:{"text-align":"center"}},"1302",-1),FI={style:{"text-align":"left"}},GI={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},XI=t("td",{style:{"text-align":"center"}},null,-1),$I={style:{"text-align":"left"}},tv=t("code",null,"树",-1),ev=t("code",null,"深度优先搜索",-1),lv=t("code",null,"广度优先搜索",-1),ov=t("code",null,"1+",-1),nv={style:{"text-align":"left"}},sv=t("td",{style:{"text-align":"center"}},"1305",-1),dv={style:{"text-align":"left"}},_v={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},iv=t("td",{style:{"text-align":"center"}},null,-1),rv={style:{"text-align":"left"}},cv=t("code",null,"树",-1),av=t("code",null,"深度优先搜索",-1),hv=t("code",null,"二叉搜索树",-1),uv=t("code",null,"2+",-1),fv={style:{"text-align":"left"}},gv=t("td",{style:{"text-align":"center"}},"1306",-1),mv={style:{"text-align":"left"}},yv={href:"https://leetcode.com/problems/jump-game-iii",target:"_blank",rel:"noopener noreferrer"},xv=t("td",{style:{"text-align":"center"}},null,-1),pv={style:{"text-align":"left"}},bv=t("code",null,"深度优先搜索",-1),kv=t("code",null,"广度优先搜索",-1),Mv=t("code",null,"数组",-1),Iv={style:{"text-align":"left"}},vv=t("td",{style:{"text-align":"center"}},"1315",-1),wv={style:{"text-align":"left"}},Hv={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},Ev=t("td",{style:{"text-align":"center"}},null,-1),zv={style:{"text-align":"left"}},Ov=t("code",null,"树",-1),jv=t("code",null,"深度优先搜索",-1),Lv=t("code",null,"广度优先搜索",-1),qv=t("code",null,"1+",-1),Cv={style:{"text-align":"left"}},Nv=t("td",{style:{"text-align":"center"}},"1319",-1),Pv={style:{"text-align":"left"}},Kv={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},Vv=t("td",{style:{"text-align":"center"}},null,-1),Bv={style:{"text-align":"left"}},Tv=t("code",null,"深度优先搜索",-1),Uv=t("code",null,"广度优先搜索",-1),Av=t("code",null,"并查集",-1),Wv=t("code",null,"1+",-1),Dv={style:{"text-align":"left"}},Yv=t("td",{style:{"text-align":"center"}},"1325",-1),Jv={style:{"text-align":"left"}},Qv={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},Rv=t("td",{style:{"text-align":"center"}},null,-1),Sv={style:{"text-align":"left"}},Zv=t("code",null,"树",-1),Fv=t("code",null,"深度优先搜索",-1),Gv=t("code",null,"二叉树",-1),Xv={style:{"text-align":"left"}},$v=t("td",{style:{"text-align":"center"}},"1339",-1),tw={style:{"text-align":"left"}},ew={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},lw=t("td",{style:{"text-align":"center"}},null,-1),ow={style:{"text-align":"left"}},nw=t("code",null,"树",-1),sw=t("code",null,"深度优先搜索",-1),dw=t("code",null,"二叉树",-1),_w={style:{"text-align":"left"}},iw=t("td",{style:{"text-align":"center"}},"1361",-1),rw={style:{"text-align":"left"}},cw={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},aw=t("td",{style:{"text-align":"center"}},null,-1),hw={style:{"text-align":"left"}},uw=t("code",null,"树",-1),fw=t("code",null,"深度优先搜索",-1),gw=t("code",null,"广度优先搜索",-1),mw=t("code",null,"3+",-1),yw={style:{"text-align":"left"}},xw=t("td",{style:{"text-align":"center"}},"1367",-1),pw={style:{"text-align":"left"}},bw={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},kw=t("td",{style:{"text-align":"center"}},null,-1),Mw={style:{"text-align":"left"}},Iw=t("code",null,"树",-1),vw=t("code",null,"深度优先搜索",-1),ww=t("code",null,"链表",-1),Hw=t("code",null,"1+",-1),Ew={style:{"text-align":"left"}},zw=t("td",{style:{"text-align":"center"}},"1372",-1),Ow={style:{"text-align":"left"}},jw={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Lw=t("td",{style:{"text-align":"center"}},null,-1),qw={style:{"text-align":"left"}},Cw=t("code",null,"树",-1),Nw=t("code",null,"深度优先搜索",-1),Pw=t("code",null,"动态规划",-1),Kw=t("code",null,"1+",-1),Vw={style:{"text-align":"left"}},Bw=t("td",{style:{"text-align":"center"}},"1373",-1),Tw={style:{"text-align":"left"}},Uw={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Aw=t("td",{style:{"text-align":"center"}},null,-1),Ww={style:{"text-align":"left"}},Dw=t("code",null,"树",-1),Yw=t("code",null,"深度优先搜索",-1),Jw=t("code",null,"二叉搜索树",-1),Qw=t("code",null,"2+",-1),Rw={style:{"text-align":"left"}},Sw=t("td",{style:{"text-align":"center"}},"1376",-1),Zw={style:{"text-align":"left"}},Fw={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},Gw=t("td",{style:{"text-align":"center"}},null,-1),Xw={style:{"text-align":"left"}},$w=t("code",null,"树",-1),tH=t("code",null,"深度优先搜索",-1),eH=t("code",null,"广度优先搜索",-1),lH={style:{"text-align":"left"}},oH=t("td",{style:{"text-align":"center"}},"1377",-1),nH={style:{"text-align":"left"}},sH={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},dH=t("td",{style:{"text-align":"center"}},null,-1),_H={style:{"text-align":"left"}},iH=t("code",null,"树",-1),rH=t("code",null,"深度优先搜索",-1),cH=t("code",null,"广度优先搜索",-1),aH=t("code",null,"1+",-1),hH={style:{"text-align":"left"}},uH=t("td",{style:{"text-align":"center"}},"1379",-1),fH={style:{"text-align":"left"}},gH={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},mH=t("td",{style:{"text-align":"center"}},null,-1),yH={style:{"text-align":"left"}},xH=t("code",null,"树",-1),pH=t("code",null,"深度优先搜索",-1),bH=t("code",null,"广度优先搜索",-1),kH=t("code",null,"1+",-1),MH={style:{"text-align":"left"}},IH=t("td",{style:{"text-align":"center"}},"1382",-1),vH={style:{"text-align":"left"}},wH={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},HH=t("td",{style:{"text-align":"center"}},null,-1),EH={style:{"text-align":"left"}},zH=t("code",null,"贪心",-1),OH=t("code",null,"树",-1),jH=t("code",null,"深度优先搜索",-1),LH=t("code",null,"3+",-1),qH={style:{"text-align":"left"}},CH=t("td",{style:{"text-align":"center"}},"1391",-1),NH={style:{"text-align":"left"}},PH={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},KH=t("td",{style:{"text-align":"center"}},null,-1),VH={style:{"text-align":"left"}},BH=t("code",null,"深度优先搜索",-1),TH=t("code",null,"广度优先搜索",-1),UH=t("code",null,"并查集",-1),AH=t("code",null,"2+",-1),WH={style:{"text-align":"left"}},DH=t("td",{style:{"text-align":"center"}},"1430",-1),YH={style:{"text-align":"left"}},JH={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},QH=t("td",{style:{"text-align":"center"}},null,-1),RH={style:{"text-align":"left"}},SH=t("code",null,"树",-1),ZH=t("code",null,"深度优先搜索",-1),FH=t("code",null,"广度优先搜索",-1),GH=t("code",null,"1+",-1),XH={style:{"text-align":"left"}},$H=t("td",{style:{"text-align":"center"}},"1443",-1),tE={style:{"text-align":"left"}},eE={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},lE=t("td",{style:{"text-align":"center"}},null,-1),oE={style:{"text-align":"left"}},nE=t("code",null,"树",-1),sE=t("code",null,"深度优先搜索",-1),dE=t("code",null,"广度优先搜索",-1),_E=t("code",null,"1+",-1),iE={style:{"text-align":"left"}},rE=t("td",{style:{"text-align":"center"}},"1448",-1),cE={style:{"text-align":"left"}},aE={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},hE=t("td",{style:{"text-align":"center"}},null,-1),uE={style:{"text-align":"left"}},fE=t("code",null,"树",-1),gE=t("code",null,"深度优先搜索",-1),mE=t("code",null,"广度优先搜索",-1),yE=t("code",null,"1+",-1),xE={style:{"text-align":"left"}},pE=t("td",{style:{"text-align":"center"}},"1457",-1),bE={style:{"text-align":"left"}},kE={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ME=t("td",{style:{"text-align":"center"}},null,-1),IE={style:{"text-align":"left"}},vE=t("code",null,"位运算",-1),wE=t("code",null,"树",-1),HE=t("code",null,"深度优先搜索",-1),EE=t("code",null,"2+",-1),zE={style:{"text-align":"left"}},OE=t("td",{style:{"text-align":"center"}},"1462",-1),jE={style:{"text-align":"left"}},LE={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},qE=t("td",{style:{"text-align":"center"}},null,-1),CE={style:{"text-align":"left"}},NE=t("code",null,"深度优先搜索",-1),PE=t("code",null,"广度优先搜索",-1),KE=t("code",null,"图",-1),VE=t("code",null,"1+",-1),BE={style:{"text-align":"left"}},TE=t("td",{style:{"text-align":"center"}},"1466",-1),UE={style:{"text-align":"left"}},AE={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},WE=t("td",{style:{"text-align":"center"}},null,-1),DE={style:{"text-align":"left"}},YE=t("code",null,"深度优先搜索",-1),JE=t("code",null,"广度优先搜索",-1),QE=t("code",null,"图",-1),RE={style:{"text-align":"left"}},SE=t("td",{style:{"text-align":"center"}},"1469",-1),ZE={style:{"text-align":"left"}},FE={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},GE=t("td",{style:{"text-align":"center"}},null,-1),XE={style:{"text-align":"left"}},$E=t("code",null,"树",-1),tz=t("code",null,"深度优先搜索",-1),ez=t("code",null,"广度优先搜索",-1),lz=t("code",null,"1+",-1),oz={style:{"text-align":"left"}},nz=t("td",{style:{"text-align":"center"}},"1483",-1),sz={style:{"text-align":"left"}},dz={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},_z=t("td",{style:{"text-align":"center"}},null,-1),iz={style:{"text-align":"left"}},rz=t("code",null,"树",-1),cz=t("code",null,"深度优先搜索",-1),az=t("code",null,"广度优先搜索",-1),hz=t("code",null,"3+",-1),uz={style:{"text-align":"left"}},fz=t("td",{style:{"text-align":"center"}},"1485",-1),gz={style:{"text-align":"left"}},mz={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},yz=t("td",{style:{"text-align":"center"}},null,-1),xz={style:{"text-align":"left"}},pz=t("code",null,"树",-1),bz=t("code",null,"深度优先搜索",-1),kz=t("code",null,"广度优先搜索",-1),Mz=t("code",null,"2+",-1),Iz={style:{"text-align":"left"}},vz=t("td",{style:{"text-align":"center"}},"1490",-1),wz={style:{"text-align":"left"}},Hz={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Ez=t("td",{style:{"text-align":"center"}},null,-1),zz={style:{"text-align":"left"}},Oz=t("code",null,"树",-1),jz=t("code",null,"深度优先搜索",-1),Lz=t("code",null,"广度优先搜索",-1),qz=t("code",null,"1+",-1),Cz={style:{"text-align":"left"}},Nz=t("td",{style:{"text-align":"center"}},"1506",-1),Pz={style:{"text-align":"left"}},Kz={href:"https://leetcode.com/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Vz=t("td",{style:{"text-align":"center"}},null,-1),Bz={style:{"text-align":"left"}},Tz=t("code",null,"位运算",-1),Uz=t("code",null,"树",-1),Az=t("code",null,"深度优先搜索",-1),Wz=t("code",null,"1+",-1),Dz={style:{"text-align":"left"}},Yz=t("td",{style:{"text-align":"center"}},"1516",-1),Jz={style:{"text-align":"left"}},Qz={href:"https://leetcode.com/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Rz=t("td",{style:{"text-align":"center"}},null,-1),Sz={style:{"text-align":"left"}},Zz=t("code",null,"树",-1),Fz=t("code",null,"深度优先搜索",-1),Gz={style:{"text-align":"left"}},Xz=t("td",{style:{"text-align":"center"}},"1519",-1),$z={style:{"text-align":"left"}},tO={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},eO=t("td",{style:{"text-align":"center"}},null,-1),lO={style:{"text-align":"left"}},oO=t("code",null,"树",-1),nO=t("code",null,"深度优先搜索",-1),sO=t("code",null,"广度优先搜索",-1),dO=t("code",null,"2+",-1),_O={style:{"text-align":"left"}},iO=t("td",{style:{"text-align":"center"}},"1522",-1),rO={style:{"text-align":"left"}},cO={href:"https://leetcode.com/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},aO={style:{"text-align":"center"}},hO={href:"/problem/1522",target:"_blank",rel:"noopener noreferrer"},uO={style:{"text-align":"left"}},fO=t("code",null,"树",-1),gO=t("code",null,"深度优先搜索",-1),mO={style:{"text-align":"left"}},yO=t("td",{style:{"text-align":"center"}},"1530",-1),xO={style:{"text-align":"left"}},pO={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},bO=t("td",{style:{"text-align":"center"}},null,-1),kO={style:{"text-align":"left"}},MO=t("code",null,"树",-1),IO=t("code",null,"深度优先搜索",-1),vO=t("code",null,"二叉树",-1),wO={style:{"text-align":"left"}},HO=t("td",{style:{"text-align":"center"}},"1559",-1),EO={style:{"text-align":"left"}},zO={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},OO=t("td",{style:{"text-align":"center"}},null,-1),jO={style:{"text-align":"left"}},LO=t("code",null,"深度优先搜索",-1),qO=t("code",null,"广度优先搜索",-1),CO=t("code",null,"并查集",-1),NO=t("code",null,"2+",-1),PO={style:{"text-align":"left"}},KO=t("td",{style:{"text-align":"center"}},"1568",-1),VO={style:{"text-align":"left"}},BO={href:"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},TO=t("td",{style:{"text-align":"center"}},null,-1),UO={style:{"text-align":"left"}},AO=t("code",null,"深度优先搜索",-1),WO=t("code",null,"广度优先搜索",-1),DO=t("code",null,"数组",-1),YO=t("code",null,"2+",-1),JO={style:{"text-align":"left"}},QO=t("td",{style:{"text-align":"center"}},"1600",-1),RO={style:{"text-align":"left"}},SO={href:"https://leetcode.com/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},ZO=t("td",{style:{"text-align":"center"}},null,-1),FO={style:{"text-align":"left"}},GO=t("code",null,"树",-1),XO=t("code",null,"深度优先搜索",-1),$O=t("code",null,"设计",-1),tj=t("code",null,"1+",-1),ej={style:{"text-align":"left"}},lj=t("td",{style:{"text-align":"center"}},"1612",-1),oj={style:{"text-align":"left"}},nj={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},sj=t("td",{style:{"text-align":"center"}},null,-1),dj={style:{"text-align":"left"}},_j=t("code",null,"树",-1),ij=t("code",null,"深度优先搜索",-1),rj=t("code",null,"哈希表",-1),cj=t("code",null,"2+",-1),aj={style:{"text-align":"left"}},hj=t("td",{style:{"text-align":"center"}},"1625",-1),uj={style:{"text-align":"left"}},fj={href:"https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations",target:"_blank",rel:"noopener noreferrer"},gj=t("td",{style:{"text-align":"center"}},null,-1),mj={style:{"text-align":"left"}},yj=t("code",null,"深度优先搜索",-1),xj=t("code",null,"广度优先搜索",-1),pj=t("code",null,"字符串",-1),bj=t("code",null,"1+",-1),kj={style:{"text-align":"left"}},Mj=t("td",{style:{"text-align":"center"}},"1631",-1),Ij={style:{"text-align":"left"}},vj={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},wj=t("td",{style:{"text-align":"center"}},null,-1),Hj={style:{"text-align":"left"}},Ej=t("code",null,"深度优先搜索",-1),zj=t("code",null,"广度优先搜索",-1),Oj=t("code",null,"并查集",-1),jj=t("code",null,"4+",-1),Lj={style:{"text-align":"left"}},qj=t("td",{style:{"text-align":"center"}},"1644",-1),Cj={style:{"text-align":"left"}},Nj={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Pj=t("td",{style:{"text-align":"center"}},null,-1),Kj={style:{"text-align":"left"}},Vj=t("code",null,"树",-1),Bj=t("code",null,"深度优先搜索",-1),Tj=t("code",null,"二叉树",-1),Uj={style:{"text-align":"left"}},Aj=t("td",{style:{"text-align":"center"}},"1660",-1),Wj={style:{"text-align":"left"}},Dj={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yj=t("td",{style:{"text-align":"center"}},null,-1),Jj={style:{"text-align":"left"}},Qj=t("code",null,"树",-1),Rj=t("code",null,"深度优先搜索",-1),Sj=t("code",null,"广度优先搜索",-1),Zj=t("code",null,"2+",-1),Fj={style:{"text-align":"left"}},Gj=t("td",{style:{"text-align":"center"}},"1666",-1),Xj={style:{"text-align":"left"}},$j={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},tL=t("td",{style:{"text-align":"center"}},null,-1),eL={style:{"text-align":"left"}},lL=t("code",null,"树",-1),oL=t("code",null,"深度优先搜索",-1),nL=t("code",null,"二叉树",-1),sL={style:{"text-align":"left"}},dL=t("td",{style:{"text-align":"center"}},"1676",-1),_L={style:{"text-align":"left"}},iL={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},rL=t("td",{style:{"text-align":"center"}},null,-1),cL={style:{"text-align":"left"}},aL=t("code",null,"树",-1),hL=t("code",null,"深度优先搜索",-1),uL=t("code",null,"哈希表",-1),fL=t("code",null,"1+",-1),gL={style:{"text-align":"left"}},mL=t("td",{style:{"text-align":"center"}},"1722",-1),yL={style:{"text-align":"left"}},xL={href:"https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations",target:"_blank",rel:"noopener noreferrer"},pL=t("td",{style:{"text-align":"center"}},null,-1),bL={style:{"text-align":"left"}},kL=t("code",null,"深度优先搜索",-1),ML=t("code",null,"并查集",-1),IL=t("code",null,"数组",-1),vL={style:{"text-align":"left"}},wL=t("td",{style:{"text-align":"center"}},"1740",-1),HL={style:{"text-align":"left"}},EL={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},zL=t("td",{style:{"text-align":"center"}},null,-1),OL={style:{"text-align":"left"}},jL=t("code",null,"树",-1),LL=t("code",null,"深度优先搜索",-1),qL=t("code",null,"广度优先搜索",-1),CL=t("code",null,"2+",-1),NL={style:{"text-align":"left"}},PL=t("td",{style:{"text-align":"center"}},"1743",-1),KL={style:{"text-align":"left"}},VL={href:"https://leetcode.com/problems/restore-the-array-from-adjacent-pairs",target:"_blank",rel:"noopener noreferrer"},BL=t("td",{style:{"text-align":"center"}},null,-1),TL={style:{"text-align":"left"}},UL=t("code",null,"深度优先搜索",-1),AL=t("code",null,"数组",-1),WL=t("code",null,"哈希表",-1),DL={style:{"text-align":"left"}},YL=t("td",{style:{"text-align":"center"}},"1766",-1),JL={style:{"text-align":"left"}},QL={href:"https://leetcode.com/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},RL=t("td",{style:{"text-align":"center"}},null,-1),SL={style:{"text-align":"left"}},ZL=t("code",null,"树",-1),FL=t("code",null,"深度优先搜索",-1),GL=t("code",null,"数组",-1),XL=t("code",null,"2+",-1),$L={style:{"text-align":"left"}},tq=t("td",{style:{"text-align":"center"}},"1778",-1),eq={style:{"text-align":"left"}},lq={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},oq=t("td",{style:{"text-align":"center"}},null,-1),nq={style:{"text-align":"left"}},sq=t("code",null,"深度优先搜索",-1),dq=t("code",null,"广度优先搜索",-1),_q=t("code",null,"图",-1),iq=t("code",null,"1+",-1),rq={style:{"text-align":"left"}},cq=t("td",{style:{"text-align":"center"}},"1810",-1),aq={style:{"text-align":"left"}},hq={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},uq=t("td",{style:{"text-align":"center"}},null,-1),fq={style:{"text-align":"left"}},gq=t("code",null,"深度优先搜索",-1),mq=t("code",null,"广度优先搜索",-1),yq=t("code",null,"图",-1),xq=t("code",null,"2+",-1),pq={style:{"text-align":"left"}},bq=t("td",{style:{"text-align":"center"}},"1820",-1),kq={style:{"text-align":"left"}},Mq={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},Iq=t("td",{style:{"text-align":"center"}},null,-1),vq={style:{"text-align":"left"}},wq=t("code",null,"深度优先搜索",-1),Hq=t("code",null,"图",-1),Eq=t("code",null,"数组",-1),zq=t("code",null,"1+",-1),Oq={style:{"text-align":"left"}},jq=t("td",{style:{"text-align":"center"}},"1858",-1),Lq={style:{"text-align":"left"}},qq={href:"https://leetcode.com/problems/longest-word-with-all-prefixes",target:"_blank",rel:"noopener noreferrer"},Cq=t("td",{style:{"text-align":"center"}},null,-1),Nq={style:{"text-align":"left"}},Pq=t("code",null,"深度优先搜索",-1),Kq=t("code",null,"字典树",-1),Vq={style:{"text-align":"left"}},Bq=t("td",{style:{"text-align":"center"}},"1905",-1),Tq={style:{"text-align":"left"}},Uq={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},Aq=t("td",{style:{"text-align":"center"}},null,-1),Wq={style:{"text-align":"left"}},Dq=t("code",null,"深度优先搜索",-1),Yq=t("code",null,"广度优先搜索",-1),Jq=t("code",null,"并查集",-1),Qq=t("code",null,"2+",-1),Rq={style:{"text-align":"left"}},Sq=t("td",{style:{"text-align":"center"}},"1932",-1),Zq={style:{"text-align":"left"}},Fq={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},Gq=t("td",{style:{"text-align":"center"}},null,-1),Xq={style:{"text-align":"left"}},$q=t("code",null,"树",-1),tC=t("code",null,"深度优先搜索",-1),eC=t("code",null,"哈希表",-1),lC=t("code",null,"2+",-1),oC={style:{"text-align":"left"}},nC=t("td",{style:{"text-align":"center"}},"1938",-1),sC={style:{"text-align":"left"}},dC={href:"https://leetcode.com/problems/maximum-genetic-difference-query",target:"_blank",rel:"noopener noreferrer"},_C=t("td",{style:{"text-align":"center"}},null,-1),iC={style:{"text-align":"left"}},rC=t("code",null,"位运算",-1),cC=t("code",null,"深度优先搜索",-1),aC=t("code",null,"字典树",-1),hC=t("code",null,"2+",-1),uC={style:{"text-align":"left"}},fC=t("td",{style:{"text-align":"center"}},"1970",-1),gC={style:{"text-align":"left"}},mC={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},yC=t("td",{style:{"text-align":"center"}},null,-1),xC={style:{"text-align":"left"}},pC=t("code",null,"深度优先搜索",-1),bC=t("code",null,"广度优先搜索",-1),kC=t("code",null,"并查集",-1),MC=t("code",null,"3+",-1),IC={style:{"text-align":"left"}},vC=t("td",{style:{"text-align":"center"}},"1971",-1),wC={style:{"text-align":"left"}},HC={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},EC=t("td",{style:{"text-align":"center"}},null,-1),zC={style:{"text-align":"left"}},OC=t("code",null,"深度优先搜索",-1),jC=t("code",null,"广度优先搜索",-1),LC=t("code",null,"并查集",-1),qC=t("code",null,"1+",-1),CC={style:{"text-align":"left"}},NC=t("td",{style:{"text-align":"center"}},"1973",-1),PC={style:{"text-align":"left"}},KC={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},VC=t("td",{style:{"text-align":"center"}},null,-1),BC={style:{"text-align":"left"}},TC=t("code",null,"树",-1),UC=t("code",null,"深度优先搜索",-1),AC=t("code",null,"二叉树",-1),WC={style:{"text-align":"left"}},DC=t("td",{style:{"text-align":"center"}},"1992",-1),YC={style:{"text-align":"left"}},JC={href:"https://leetcode.com/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},QC=t("td",{style:{"text-align":"center"}},null,-1),RC={style:{"text-align":"left"}},SC=t("code",null,"深度优先搜索",-1),ZC=t("code",null,"广度优先搜索",-1),FC=t("code",null,"数组",-1),GC=t("code",null,"1+",-1),XC={style:{"text-align":"left"}},$C=t("td",{style:{"text-align":"center"}},"1993",-1),tN={style:{"text-align":"left"}},eN={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},lN=t("td",{style:{"text-align":"center"}},null,-1),oN={style:{"text-align":"left"}},nN=t("code",null,"树",-1),sN=t("code",null,"深度优先搜索",-1),dN=t("code",null,"广度优先搜索",-1),_N=t("code",null,"3+",-1),iN={style:{"text-align":"left"}},rN=t("td",{style:{"text-align":"center"}},"2003",-1),cN={style:{"text-align":"left"}},aN={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},hN=t("td",{style:{"text-align":"center"}},null,-1),uN={style:{"text-align":"left"}},fN=t("code",null,"树",-1),gN=t("code",null,"深度优先搜索",-1),mN=t("code",null,"并查集",-1),yN=t("code",null,"1+",-1),xN={style:{"text-align":"left"}},pN=t("td",{style:{"text-align":"center"}},"2049",-1),bN={style:{"text-align":"left"}},kN={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},MN=t("td",{style:{"text-align":"center"}},null,-1),IN={style:{"text-align":"left"}},vN=t("code",null,"树",-1),wN=t("code",null,"深度优先搜索",-1),HN=t("code",null,"数组",-1),EN=t("code",null,"1+",-1),zN={style:{"text-align":"left"}},ON=t("td",{style:{"text-align":"center"}},"2092",-1),jN={style:{"text-align":"left"}},LN={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},qN=t("td",{style:{"text-align":"center"}},null,-1),CN={style:{"text-align":"left"}},NN=t("code",null,"深度优先搜索",-1),PN=t("code",null,"广度优先搜索",-1),KN=t("code",null,"并查集",-1),VN=t("code",null,"2+",-1),BN={style:{"text-align":"left"}},TN=t("td",{style:{"text-align":"center"}},"2096",-1),UN={style:{"text-align":"left"}},AN={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},WN=t("td",{style:{"text-align":"center"}},null,-1),DN={style:{"text-align":"left"}},YN=t("code",null,"树",-1),JN=t("code",null,"深度优先搜索",-1),QN=t("code",null,"字符串",-1),RN=t("code",null,"1+",-1),SN={style:{"text-align":"left"}},ZN=t("td",{style:{"text-align":"center"}},"2097",-1),FN={style:{"text-align":"left"}},GN={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},XN=t("td",{style:{"text-align":"center"}},null,-1),$N={style:{"text-align":"left"}},tP=t("code",null,"深度优先搜索",-1),eP=t("code",null,"图",-1),lP=t("code",null,"欧拉回路",-1),oP={style:{"text-align":"left"}},nP=t("td",{style:{"text-align":"center"}},"2101",-1),sP={style:{"text-align":"left"}},dP={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},_P=t("td",{style:{"text-align":"center"}},null,-1),iP={style:{"text-align":"left"}},rP=t("code",null,"深度优先搜索",-1),cP=t("code",null,"广度优先搜索",-1),aP=t("code",null,"图",-1),hP=t("code",null,"3+",-1),uP={style:{"text-align":"left"}},fP=t("td",{style:{"text-align":"center"}},"2127",-1),gP={style:{"text-align":"left"}},mP={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},yP=t("td",{style:{"text-align":"center"}},null,-1),xP={style:{"text-align":"left"}},pP=t("code",null,"深度优先搜索",-1),bP=t("code",null,"图",-1),kP=t("code",null,"拓扑排序",-1),MP={style:{"text-align":"left"}},IP=t("td",{style:{"text-align":"center"}},"2192",-1),vP={style:{"text-align":"left"}},wP={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},HP=t("td",{style:{"text-align":"center"}},null,-1),EP={style:{"text-align":"left"}},zP=t("code",null,"深度优先搜索",-1),OP=t("code",null,"广度优先搜索",-1),jP=t("code",null,"图",-1),LP=t("code",null,"1+",-1),qP={style:{"text-align":"left"}},CP=t("td",{style:{"text-align":"center"}},"2204",-1),NP={style:{"text-align":"left"}},PP={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},KP=t("td",{style:{"text-align":"center"}},null,-1),VP={style:{"text-align":"left"}},BP=t("code",null,"深度优先搜索",-1),TP=t("code",null,"广度优先搜索",-1),UP=t("code",null,"并查集",-1),AP=t("code",null,"1+",-1),WP={style:{"text-align":"left"}},DP=t("td",{style:{"text-align":"center"}},"2246",-1),YP={style:{"text-align":"left"}},JP={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},QP=t("td",{style:{"text-align":"center"}},null,-1),RP={style:{"text-align":"left"}},SP=t("code",null,"树",-1),ZP=t("code",null,"深度优先搜索",-1),FP=t("code",null,"图",-1),GP=t("code",null,"3+",-1),XP={style:{"text-align":"left"}},$P=t("td",{style:{"text-align":"center"}},"2265",-1),tK={style:{"text-align":"left"}},eK={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},lK=t("td",{style:{"text-align":"center"}},null,-1),oK={style:{"text-align":"left"}},nK=t("code",null,"树",-1),sK=t("code",null,"深度优先搜索",-1),dK=t("code",null,"二叉树",-1),_K={style:{"text-align":"left"}},iK=t("td",{style:{"text-align":"center"}},"2277",-1),rK={style:{"text-align":"left"}},cK={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},aK=t("td",{style:{"text-align":"center"}},null,-1),hK={style:{"text-align":"left"}},uK=t("code",null,"树",-1),fK=t("code",null,"深度优先搜索",-1),gK=t("code",null,"广度优先搜索",-1),mK=t("code",null,"1+",-1),yK={style:{"text-align":"left"}},xK=t("td",{style:{"text-align":"center"}},"2307",-1),pK={style:{"text-align":"left"}},bK={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},kK=t("td",{style:{"text-align":"center"}},null,-1),MK={style:{"text-align":"left"}},IK=t("code",null,"深度优先搜索",-1),vK=t("code",null,"并查集",-1),wK=t("code",null,"图",-1),HK=t("code",null,"1+",-1),EK={style:{"text-align":"left"}},zK=t("td",{style:{"text-align":"center"}},"2313",-1),OK={style:{"text-align":"left"}},jK={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},LK=t("td",{style:{"text-align":"center"}},null,-1),qK={style:{"text-align":"left"}},CK=t("code",null,"树",-1),NK=t("code",null,"深度优先搜索",-1),PK=t("code",null,"动态规划",-1),KK=t("code",null,"1+",-1),VK={style:{"text-align":"left"}},BK=t("td",{style:{"text-align":"center"}},"2316",-1),TK={style:{"text-align":"left"}},UK={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},AK=t("td",{style:{"text-align":"center"}},null,-1),WK={style:{"text-align":"left"}},DK=t("code",null,"深度优先搜索",-1),YK=t("code",null,"广度优先搜索",-1),JK=t("code",null,"并查集",-1),QK=t("code",null,"1+",-1),RK={style:{"text-align":"left"}},SK=t("td",{style:{"text-align":"center"}},"2322",-1),ZK={style:{"text-align":"left"}},FK={href:"https://leetcode.com/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},GK=t("td",{style:{"text-align":"center"}},null,-1),XK={style:{"text-align":"left"}},$K=t("code",null,"位运算",-1),tV=t("code",null,"树",-1),eV=t("code",null,"深度优先搜索",-1),lV=t("code",null,"1+",-1),oV={style:{"text-align":"left"}},nV=t("td",{style:{"text-align":"center"}},"2328",-1),sV={style:{"text-align":"left"}},dV={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},_V=t("td",{style:{"text-align":"center"}},null,-1),iV={style:{"text-align":"left"}},rV=t("code",null,"深度优先搜索",-1),cV=t("code",null,"广度优先搜索",-1),aV=t("code",null,"图",-1),hV=t("code",null,"5+",-1),uV={style:{"text-align":"left"}},fV=t("td",{style:{"text-align":"center"}},"2331",-1),gV={style:{"text-align":"left"}},mV={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},yV=t("td",{style:{"text-align":"center"}},null,-1),xV={style:{"text-align":"left"}},pV=t("code",null,"树",-1),bV=t("code",null,"深度优先搜索",-1),kV=t("code",null,"二叉树",-1),MV={style:{"text-align":"left"}},IV=t("td",{style:{"text-align":"center"}},"2359",-1),vV={style:{"text-align":"left"}},wV={href:"https://leetcode.com/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},HV=t("td",{style:{"text-align":"center"}},null,-1),EV={style:{"text-align":"left"}},zV=t("code",null,"深度优先搜索",-1),OV=t("code",null,"图",-1),jV={style:{"text-align":"left"}},LV=t("td",{style:{"text-align":"center"}},"2360",-1),qV={style:{"text-align":"left"}},CV={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},NV=t("td",{style:{"text-align":"center"}},null,-1),PV={style:{"text-align":"left"}},KV=t("code",null,"深度优先搜索",-1),VV=t("code",null,"图",-1),BV=t("code",null,"拓扑排序",-1),TV={style:{"text-align":"left"}},UV=t("td",{style:{"text-align":"center"}},"2368",-1),AV={style:{"text-align":"left"}},WV={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},DV=t("td",{style:{"text-align":"center"}},null,-1),YV={style:{"text-align":"left"}},JV=t("code",null,"树",-1),QV=t("code",null,"深度优先搜索",-1),RV=t("code",null,"广度优先搜索",-1),SV=t("code",null,"4+",-1),ZV={style:{"text-align":"left"}},FV=t("td",{style:{"text-align":"center"}},"2378",-1),GV={style:{"text-align":"left"}},XV={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},$V=t("td",{style:{"text-align":"center"}},null,-1),tB={style:{"text-align":"left"}},eB=t("code",null,"树",-1),lB=t("code",null,"深度优先搜索",-1),oB=t("code",null,"动态规划",-1),nB={style:{"text-align":"left"}},sB=t("td",{style:{"text-align":"center"}},"2385",-1),dB={style:{"text-align":"left"}},_B={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},iB=t("td",{style:{"text-align":"center"}},null,-1),rB={style:{"text-align":"left"}},cB=t("code",null,"树",-1),aB=t("code",null,"深度优先搜索",-1),hB=t("code",null,"广度优先搜索",-1),uB=t("code",null,"2+",-1),fB={style:{"text-align":"left"}},gB=t("td",{style:{"text-align":"center"}},"2415",-1),mB={style:{"text-align":"left"}},yB={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},xB=t("td",{style:{"text-align":"center"}},null,-1),pB={style:{"text-align":"left"}},bB=t("code",null,"树",-1),kB=t("code",null,"深度优先搜索",-1),MB=t("code",null,"广度优先搜索",-1),IB=t("code",null,"1+",-1),vB={style:{"text-align":"left"}},wB=t("td",{style:{"text-align":"center"}},"2440",-1),HB={style:{"text-align":"left"}},EB={href:"https://leetcode.com/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},zB=t("td",{style:{"text-align":"center"}},null,-1),OB={style:{"text-align":"left"}},jB=t("code",null,"树",-1),LB=t("code",null,"深度优先搜索",-1),qB=t("code",null,"数组",-1),CB=t("code",null,"2+",-1),NB={style:{"text-align":"left"}},PB=t("td",{style:{"text-align":"center"}},"2445",-1),KB={style:{"text-align":"left"}},VB={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},BB=t("td",{style:{"text-align":"center"}},null,-1),TB={style:{"text-align":"left"}},UB=t("code",null,"树",-1),AB=t("code",null,"深度优先搜索",-1),WB=t("code",null,"广度优先搜索",-1),DB=t("code",null,"1+",-1),YB={style:{"text-align":"left"}},JB=t("td",{style:{"text-align":"center"}},"2458",-1),QB={style:{"text-align":"left"}},RB={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},SB=t("td",{style:{"text-align":"center"}},null,-1),ZB={style:{"text-align":"left"}},FB=t("code",null,"树",-1),GB=t("code",null,"深度优先搜索",-1),XB=t("code",null,"广度优先搜索",-1),$B=t("code",null,"2+",-1),tT={style:{"text-align":"left"}},eT=t("td",{style:{"text-align":"center"}},"2467",-1),lT={style:{"text-align":"left"}},oT={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},nT=t("td",{style:{"text-align":"center"}},null,-1),sT={style:{"text-align":"left"}},dT=t("code",null,"树",-1),_T=t("code",null,"深度优先搜索",-1),iT=t("code",null,"广度优先搜索",-1),rT=t("code",null,"2+",-1),cT={style:{"text-align":"left"}},aT=t("td",{style:{"text-align":"center"}},"2476",-1),hT={style:{"text-align":"left"}},uT={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},fT=t("td",{style:{"text-align":"center"}},null,-1),gT={style:{"text-align":"left"}},mT=t("code",null,"树",-1),yT=t("code",null,"深度优先搜索",-1),xT=t("code",null,"二叉搜索树",-1),pT=t("code",null,"3+",-1),bT={style:{"text-align":"left"}},kT=t("td",{style:{"text-align":"center"}},"2477",-1),MT={style:{"text-align":"left"}},IT={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},vT=t("td",{style:{"text-align":"center"}},null,-1),wT={style:{"text-align":"left"}},HT=t("code",null,"树",-1),ET=t("code",null,"深度优先搜索",-1),zT=t("code",null,"广度优先搜索",-1),OT=t("code",null,"1+",-1),jT={style:{"text-align":"left"}},LT=t("td",{style:{"text-align":"center"}},"2479",-1),qT={style:{"text-align":"left"}},CT={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},NT=t("td",{style:{"text-align":"center"}},null,-1),PT={style:{"text-align":"left"}},KT=t("code",null,"树",-1),VT=t("code",null,"深度优先搜索",-1),BT=t("code",null,"图",-1),TT=t("code",null,"1+",-1),UT={style:{"text-align":"left"}},AT=t("td",{style:{"text-align":"center"}},"2492",-1),WT={style:{"text-align":"left"}},DT={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},YT=t("td",{style:{"text-align":"center"}},null,-1),JT={style:{"text-align":"left"}},QT=t("code",null,"深度优先搜索",-1),RT=t("code",null,"广度优先搜索",-1),ST=t("code",null,"并查集",-1),ZT=t("code",null,"1+",-1),FT={style:{"text-align":"left"}},GT=t("td",{style:{"text-align":"center"}},"2538",-1),XT={style:{"text-align":"left"}},$T={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},tU=t("td",{style:{"text-align":"center"}},null,-1),eU={style:{"text-align":"left"}},lU=t("code",null,"树",-1),oU=t("code",null,"深度优先搜索",-1),nU=t("code",null,"数组",-1),sU=t("code",null,"1+",-1),dU={style:{"text-align":"left"}},_U=t("td",{style:{"text-align":"center"}},"2556",-1),iU={style:{"text-align":"left"}},rU={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},cU=t("td",{style:{"text-align":"center"}},null,-1),aU={style:{"text-align":"left"}},hU=t("code",null,"深度优先搜索",-1),uU=t("code",null,"广度优先搜索",-1),fU=t("code",null,"数组",-1),gU=t("code",null,"2+",-1),mU={style:{"text-align":"left"}},yU=t("td",{style:{"text-align":"center"}},"2581",-1),xU={style:{"text-align":"left"}},pU={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},bU=t("td",{style:{"text-align":"center"}},null,-1),kU={style:{"text-align":"left"}},MU=t("code",null,"树",-1),IU=t("code",null,"深度优先搜索",-1),vU=t("code",null,"数组",-1),wU=t("code",null,"2+",-1),HU={style:{"text-align":"left"}},EU=t("td",{style:{"text-align":"center"}},"2596",-1),zU={style:{"text-align":"left"}},OU={href:"https://leetcode.com/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},jU=t("td",{style:{"text-align":"center"}},null,-1),LU={style:{"text-align":"left"}},qU=t("code",null,"深度优先搜索",-1),CU=t("code",null,"广度优先搜索",-1),NU=t("code",null,"数组",-1),PU=t("code",null,"2+",-1),KU={style:{"text-align":"left"}},VU=t("td",{style:{"text-align":"center"}},"2641",-1),BU={style:{"text-align":"left"}},TU={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},UU=t("td",{style:{"text-align":"center"}},null,-1),AU={style:{"text-align":"left"}},WU=t("code",null,"树",-1),DU=t("code",null,"深度优先搜索",-1),YU=t("code",null,"广度优先搜索",-1),JU=t("code",null,"2+",-1),QU={style:{"text-align":"left"}},RU=t("td",{style:{"text-align":"center"}},"2646",-1),SU={style:{"text-align":"left"}},ZU={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},FU=t("td",{style:{"text-align":"center"}},null,-1),GU={style:{"text-align":"left"}},XU=t("code",null,"树",-1),$U=t("code",null,"深度优先搜索",-1),tA=t("code",null,"图",-1),eA=t("code",null,"2+",-1),lA={style:{"text-align":"left"}},oA=t("td",{style:{"text-align":"center"}},"2658",-1),nA={style:{"text-align":"left"}},sA={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},dA=t("td",{style:{"text-align":"center"}},null,-1),_A={style:{"text-align":"left"}},iA=t("code",null,"深度优先搜索",-1),rA=t("code",null,"广度优先搜索",-1),cA=t("code",null,"并查集",-1),aA=t("code",null,"2+",-1),hA={style:{"text-align":"left"}},uA=t("td",{style:{"text-align":"center"}},"2685",-1),fA={style:{"text-align":"left"}},gA={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},mA=t("td",{style:{"text-align":"center"}},null,-1),yA={style:{"text-align":"left"}},xA=t("code",null,"深度优先搜索",-1),pA=t("code",null,"广度优先搜索",-1),bA=t("code",null,"图",-1),kA={style:{"text-align":"left"}},MA=t("td",{style:{"text-align":"center"}},"2689",-1),IA={style:{"text-align":"left"}},vA={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},wA=t("td",{style:{"text-align":"center"}},null,-1),HA={style:{"text-align":"left"}},EA=t("code",null,"树",-1),zA=t("code",null,"深度优先搜索",-1),OA=t("code",null,"二叉树",-1),jA={style:{"text-align":"left"}},LA=t("td",{style:{"text-align":"center"}},"2764",-1),qA={style:{"text-align":"left"}},CA={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},NA=t("td",{style:{"text-align":"center"}},null,-1),PA={style:{"text-align":"left"}},KA=t("code",null,"栈",-1),VA=t("code",null,"树",-1),BA=t("code",null,"深度优先搜索",-1),TA=t("code",null,"1+",-1),UA={style:{"text-align":"left"}},AA=t("td",{style:{"text-align":"center"}},"2773",-1),WA={style:{"text-align":"left"}},DA={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},YA=t("td",{style:{"text-align":"center"}},null,-1),JA={style:{"text-align":"left"}},QA=t("code",null,"树",-1),RA=t("code",null,"深度优先搜索",-1),SA=t("code",null,"广度优先搜索",-1),ZA=t("code",null,"1+",-1),FA={style:{"text-align":"left"}},GA=t("td",{style:{"text-align":"center"}},"2791",-1),XA={style:{"text-align":"left"}},$A={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},tW=t("td",{style:{"text-align":"center"}},null,-1),eW={style:{"text-align":"left"}},lW=t("code",null,"位运算",-1),oW=t("code",null,"树",-1),nW=t("code",null,"深度优先搜索",-1),sW=t("code",null,"2+",-1),dW={style:{"text-align":"left"}},_W=t("td",{style:{"text-align":"center"}},"2792",-1),iW={style:{"text-align":"left"}},rW={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},cW=t("td",{style:{"text-align":"center"}},null,-1),aW={style:{"text-align":"left"}},hW=t("code",null,"树",-1),uW=t("code",null,"深度优先搜索",-1),fW=t("code",null,"分治",-1),gW=t("code",null,"1+",-1),mW={style:{"text-align":"left"}},yW=t("td",{style:{"text-align":"center"}},"2852",-1),xW={style:{"text-align":"left"}},pW={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},bW=t("td",{style:{"text-align":"center"}},null,-1),kW={style:{"text-align":"left"}},MW=t("code",null,"深度优先搜索",-1),IW=t("code",null,"广度优先搜索",-1),vW=t("code",null,"并查集",-1),wW=t("code",null,"3+",-1),HW={style:{"text-align":"left"}},EW=t("td",{style:{"text-align":"center"}},"2858",-1),zW={style:{"text-align":"left"}},OW={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},jW=t("td",{style:{"text-align":"center"}},null,-1),LW={style:{"text-align":"left"}},qW=t("code",null,"深度优先搜索",-1),CW=t("code",null,"广度优先搜索",-1),NW=t("code",null,"图",-1),PW=t("code",null,"1+",-1),KW={style:{"text-align":"left"}},VW=t("td",{style:{"text-align":"center"}},"2867",-1),BW={style:{"text-align":"left"}},TW={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},UW=t("td",{style:{"text-align":"center"}},null,-1),AW={style:{"text-align":"left"}},WW=t("code",null,"树",-1),DW=t("code",null,"深度优先搜索",-1),YW=t("code",null,"数学",-1),JW=t("code",null,"2+",-1),QW={style:{"text-align":"left"}},RW=t("td",{style:{"text-align":"center"}},"2872",-1),SW={style:{"text-align":"left"}},ZW={href:"https://leetcode.com/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},FW=t("td",{style:{"text-align":"center"}},null,-1),GW={style:{"text-align":"left"}},XW=t("code",null,"树",-1),$W=t("code",null,"深度优先搜索",-1),tD={style:{"text-align":"left"}},eD=t("td",{style:{"text-align":"center"}},"2920",-1),lD={style:{"text-align":"left"}},oD={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},nD=t("td",{style:{"text-align":"center"}},null,-1),sD={style:{"text-align":"left"}},dD=t("code",null,"位运算",-1),_D=t("code",null,"树",-1),iD=t("code",null,"深度优先搜索",-1),rD=t("code",null,"2+",-1),cD={style:{"text-align":"left"}},aD=t("td",{style:{"text-align":"center"}},"2925",-1),hD={style:{"text-align":"left"}},uD={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},fD=t("td",{style:{"text-align":"center"}},null,-1),gD={style:{"text-align":"left"}},mD=t("code",null,"树",-1),yD=t("code",null,"深度优先搜索",-1),xD=t("code",null,"动态规划",-1),pD={style:{"text-align":"left"}},bD=t("td",{style:{"text-align":"center"}},"2973",-1),kD={style:{"text-align":"left"}},MD={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},ID=t("td",{style:{"text-align":"center"}},null,-1),vD={style:{"text-align":"left"}},wD=t("code",null,"树",-1),HD=t("code",null,"深度优先搜索",-1),ED=t("code",null,"动态规划",-1),zD=t("code",null,"2+",-1),OD={style:{"text-align":"left"}},jD=t("td",{style:{"text-align":"center"}},"3004",-1),LD={style:{"text-align":"left"}},qD={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},CD=t("td",{style:{"text-align":"center"}},null,-1),ND={style:{"text-align":"left"}},PD=t("code",null,"树",-1),KD=t("code",null,"深度优先搜索",-1),VD=t("code",null,"数组",-1),BD=t("code",null,"1+",-1),TD={style:{"text-align":"left"}},UD=t("td",{style:{"text-align":"center"}},"3067",-1),AD={style:{"text-align":"left"}},WD={href:"https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},DD=t("td",{style:{"text-align":"center"}},null,-1),YD={style:{"text-align":"left"}},JD=t("code",null,"树",-1),QD=t("code",null,"深度优先搜索",-1),RD=t("code",null,"数组",-1),SD={style:{"text-align":"left"}},ZD=t("td",{style:{"text-align":"center"}},"3123",-1),FD={style:{"text-align":"left"}},GD={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},XD=t("td",{style:{"text-align":"center"}},null,-1),$D={style:{"text-align":"left"}},tY=t("code",null,"深度优先搜索",-1),eY=t("code",null,"广度优先搜索",-1),lY=t("code",null,"图",-1),oY=t("code",null,"2+",-1),nY={style:{"text-align":"left"}},sY=t("td",{style:{"text-align":"center"}},"3157",-1),dY={style:{"text-align":"left"}},_Y={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},iY=t("td",{style:{"text-align":"center"}},null,-1),rY={style:{"text-align":"left"}},cY=t("code",null,"树",-1),aY=t("code",null,"深度优先搜索",-1),hY=t("code",null,"广度优先搜索",-1),uY=t("code",null,"1+",-1),fY={style:{"text-align":"left"}},gY=t("td",{style:{"text-align":"center"}},"3203",-1),mY={style:{"text-align":"left"}},yY={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},xY=t("td",{style:{"text-align":"center"}},null,-1),pY={style:{"text-align":"left"}},bY=t("code",null,"树",-1),kY=t("code",null,"深度优先搜索",-1),MY=t("code",null,"广度优先搜索",-1),IY=t("code",null,"1+",-1),vY={style:{"text-align":"left"}},wY=t("td",{style:{"text-align":"center"}},"3235",-1),HY={style:{"text-align":"left"}},EY={href:"https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},zY=t("td",{style:{"text-align":"center"}},null,-1),OY={style:{"text-align":"left"}},jY=t("code",null,"深度优先搜索",-1),LY=t("code",null,"广度优先搜索",-1),qY=t("code",null,"并查集",-1),CY=t("code",null,"3+",-1),NY={style:{"text-align":"left"}},PY=t("td",{style:{"text-align":"center"}},"3241",-1),KY={style:{"text-align":"left"}},VY={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},BY=t("td",{style:{"text-align":"center"}},null,-1),TY={style:{"text-align":"left"}},UY=t("code",null,"树",-1),AY=t("code",null,"深度优先搜索",-1),WY=t("code",null,"图",-1),DY=t("code",null,"1+",-1),YY={style:{"text-align":"left"}},JY=t("td",{style:{"text-align":"center"}},"3249",-1),QY={style:{"text-align":"left"}},RY={href:"https://leetcode.com/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},SY=t("td",{style:{"text-align":"center"}},null,-1),ZY={style:{"text-align":"left"}},FY=t("code",null,"树",-1),GY=t("code",null,"深度优先搜索",-1),XY={style:{"text-align":"left"}},$Y=t("td",{style:{"text-align":"center"}},"3310",-1),tJ={style:{"text-align":"left"}},eJ={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},lJ=t("td",{style:{"text-align":"center"}},null,-1),oJ={style:{"text-align":"left"}},nJ=t("code",null,"深度优先搜索",-1),sJ=t("code",null,"广度优先搜索",-1),dJ=t("code",null,"图",-1),_J={style:{"text-align":"left"}},iJ=t("td",{style:{"text-align":"center"}},"3313",-1),rJ={style:{"text-align":"left"}},cJ={href:"https://leetcode.com/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},aJ=t("td",{style:{"text-align":"center"}},null,-1),hJ={style:{"text-align":"left"}},uJ=t("code",null,"树",-1),fJ=t("code",null,"深度优先搜索",-1),gJ={style:{"text-align":"left"}},mJ=t("td",{style:{"text-align":"center"}},"3319",-1),yJ={style:{"text-align":"left"}},xJ={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},pJ={style:{"text-align":"center"}},bJ={href:"/problem/3319",target:"_blank",rel:"noopener noreferrer"},kJ={style:{"text-align":"left"}},MJ=t("code",null,"树",-1),IJ=t("code",null,"深度优先搜索",-1),vJ=t("code",null,"二叉树",-1),wJ=t("code",null,"1+",-1),HJ={style:{"text-align":"left"}},EJ=t("td",{style:{"text-align":"center"}},"LCP 07",-1),zJ={style:{"text-align":"left"}},OJ={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},jJ=t("td",{style:{"text-align":"center"}},null,-1),LJ={style:{"text-align":"left"}},qJ=t("code",null,"深度优先搜索",-1),CJ=t("code",null,"广度优先搜索",-1),NJ=t("code",null,"图",-1),PJ=t("code",null,"1+",-1),KJ={style:{"text-align":"left"}},VJ=t("td",{style:{"text-align":"center"}},"LCP 10",-1),BJ={style:{"text-align":"left"}},TJ={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},UJ=t("td",{style:{"text-align":"center"}},null,-1),AJ={style:{"text-align":"left"}},WJ=t("code",null,"树",-1),DJ=t("code",null,"深度优先搜索",-1),YJ=t("code",null,"动态规划",-1),JJ=t("code",null,"1+",-1),QJ={style:{"text-align":"left"}},RJ=t("td",{style:{"text-align":"center"}},"LCP 21",-1),SJ={style:{"text-align":"left"}},ZJ={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},FJ=t("td",{style:{"text-align":"center"}},null,-1),GJ={style:{"text-align":"left"}},XJ=t("code",null,"深度优先搜索",-1),$J=t("code",null,"广度优先搜索",-1),tQ=t("code",null,"图",-1),eQ=t("code",null,"1+",-1),lQ={style:{"text-align":"left"}},oQ=t("td",{style:{"text-align":"center"}},"LCP 31",-1),nQ={style:{"text-align":"left"}},sQ={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},dQ=t("td",{style:{"text-align":"center"}},null,-1),_Q={style:{"text-align":"left"}},iQ=t("code",null,"深度优先搜索",-1),rQ=t("code",null,"广度优先搜索",-1),cQ=t("code",null,"数组",-1),aQ=t("code",null,"2+",-1),hQ={style:{"text-align":"left"}},uQ=t("td",{style:{"text-align":"center"}},"LCP 44",-1),fQ={style:{"text-align":"left"}},gQ={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},mQ=t("td",{style:{"text-align":"center"}},null,-1),yQ={style:{"text-align":"left"}},xQ=t("code",null,"树",-1),pQ=t("code",null,"深度优先搜索",-1),bQ=t("code",null,"广度优先搜索",-1),kQ=t("code",null,"2+",-1),MQ={style:{"text-align":"left"}},IQ=t("td",{style:{"text-align":"center"}},"LCP 45",-1),vQ={style:{"text-align":"left"}},wQ={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},HQ=t("td",{style:{"text-align":"center"}},null,-1),EQ={style:{"text-align":"left"}},zQ=t("code",null,"深度优先搜索",-1),OQ=t("code",null,"广度优先搜索",-1),jQ=t("code",null,"记忆化搜索",-1),LQ=t("code",null,"3+",-1),qQ={style:{"text-align":"left"}},CQ=t("td",{style:{"text-align":"center"}},"LCP 63",-1),NQ={style:{"text-align":"left"}},PQ={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},KQ=t("td",{style:{"text-align":"center"}},null,-1),VQ={style:{"text-align":"left"}},BQ=t("code",null,"深度优先搜索",-1),TQ=t("code",null,"广度优先搜索",-1),UQ=t("code",null,"图",-1),AQ=t("code",null,"5+",-1),WQ={style:{"text-align":"left"}},DQ=t("td",{style:{"text-align":"center"}},"LCP 64",-1),YQ={style:{"text-align":"left"}},JQ={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},QQ=t("td",{style:{"text-align":"center"}},null,-1),RQ={style:{"text-align":"left"}},SQ=t("code",null,"树",-1),ZQ=t("code",null,"深度优先搜索",-1),FQ=t("code",null,"动态规划",-1),GQ=t("code",null,"1+",-1),XQ={style:{"text-align":"left"}},$Q=t("td",{style:{"text-align":"center"}},"LCP 67",-1),tR={style:{"text-align":"left"}},eR={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},lR=t("td",{style:{"text-align":"center"}},null,-1),oR={style:{"text-align":"left"}},nR=t("code",null,"树",-1),sR=t("code",null,"深度优先搜索",-1),dR=t("code",null,"广度优先搜索",-1),_R=t("code",null,"1+",-1),iR={style:{"text-align":"left"}},rR=t("td",{style:{"text-align":"center"}},"LCS 03",-1),cR={style:{"text-align":"left"}},aR={href:"https://leetcode.cn/problems/YesdPw",target:"_blank",rel:"noopener noreferrer"},hR=t("td",{style:{"text-align":"center"}},null,-1),uR={style:{"text-align":"left"}},fR=t("code",null,"深度优先搜索",-1),gR=t("code",null,"广度优先搜索",-1),mR=t("code",null,"并查集",-1),yR=t("code",null,"2+",-1),xR={style:{"text-align":"left"}},pR=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),bR={style:{"text-align":"left"}},kR={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},MR={style:{"text-align":"center"}},IR={href:"/problem/jz_offer_13_1",target:"_blank",rel:"noopener noreferrer"},vR={style:{"text-align":"left"}},wR=t("code",null,"深度优先搜索",-1),HR=t("code",null,"广度优先搜索",-1),ER=t("code",null,"动态规划",-1),zR={style:{"text-align":"left"}},OR=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),jR={style:{"text-align":"left"}},LR={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},qR={style:{"text-align":"center"}},CR={href:"/problem/jz_offer_26_1",target:"_blank",rel:"noopener noreferrer"},NR={style:{"text-align":"left"}},PR=t("code",null,"树",-1),KR=t("code",null,"深度优先搜索",-1),VR=t("code",null,"二叉树",-1),BR={style:{"text-align":"left"}},TR=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),UR={style:{"text-align":"left"}},AR={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},WR={style:{"text-align":"center"}},DR={href:"/problem/jz_offer_27_1",target:"_blank",rel:"noopener noreferrer"},YR={style:{"text-align":"left"}},JR=t("code",null,"树",-1),QR=t("code",null,"深度优先搜索",-1),RR=t("code",null,"广度优先搜索",-1),SR=t("code",null,"1+",-1),ZR={style:{"text-align":"left"}},FR=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),GR={style:{"text-align":"left"}},XR={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},$R={style:{"text-align":"center"}},tS={href:"/problem/jz_offer_28_1",target:"_blank",rel:"noopener noreferrer"},eS={style:{"text-align":"left"}},lS=t("code",null,"树",-1),oS=t("code",null,"深度优先搜索",-1),nS=t("code",null,"广度优先搜索",-1),sS=t("code",null,"1+",-1),dS={style:{"text-align":"left"}},_S=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),iS={style:{"text-align":"left"}},rS={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},cS={style:{"text-align":"center"}},aS={href:"/problem/jz_offer_34_1",target:"_blank",rel:"noopener noreferrer"},hS={style:{"text-align":"left"}},uS=t("code",null,"树",-1),fS=t("code",null,"深度优先搜索",-1),gS=t("code",null,"回溯",-1),mS=t("code",null,"1+",-1),yS={style:{"text-align":"left"}},xS=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),pS={style:{"text-align":"left"}},bS={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},kS={style:{"text-align":"center"}},MS={href:"/problem/jz_offer_36_1",target:"_blank",rel:"noopener noreferrer"},IS={style:{"text-align":"left"}},vS=t("code",null,"栈",-1),wS=t("code",null,"树",-1),HS=t("code",null,"深度优先搜索",-1),ES=t("code",null,"4+",-1),zS={style:{"text-align":"left"}},OS=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),jS={style:{"text-align":"left"}},LS={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},qS={style:{"text-align":"center"}},CS={href:"/problem/jz_offer_37_1",target:"_blank",rel:"noopener noreferrer"},NS={style:{"text-align":"left"}},PS=t("code",null,"树",-1),KS=t("code",null,"深度优先搜索",-1),VS=t("code",null,"广度优先搜索",-1),BS=t("code",null,"3+",-1),TS={style:{"text-align":"left"}},US=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),AS={style:{"text-align":"left"}},WS={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},DS={style:{"text-align":"center"}},YS={href:"/problem/jz_offer_54_1",target:"_blank",rel:"noopener noreferrer"},JS={style:{"text-align":"left"}},QS=t("code",null,"树",-1),RS=t("code",null,"深度优先搜索",-1),SS=t("code",null,"二叉搜索树",-1),ZS=t("code",null,"1+",-1),FS={style:{"text-align":"left"}},GS=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),XS={style:{"text-align":"left"}},$S={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},tZ={style:{"text-align":"center"}},eZ={href:"/problem/jz_offer_55_1",target:"_blank",rel:"noopener noreferrer"},lZ={style:{"text-align":"left"}},oZ=t("code",null,"树",-1),nZ=t("code",null,"深度优先搜索",-1),sZ=t("code",null,"广度优先搜索",-1),dZ=t("code",null,"1+",-1),_Z={style:{"text-align":"left"}},iZ=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),rZ={style:{"text-align":"left"}},cZ={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},aZ=t("td",{style:{"text-align":"center"}},null,-1),hZ={style:{"text-align":"left"}},uZ=t("code",null,"树",-1),fZ=t("code",null,"深度优先搜索",-1),gZ=t("code",null,"二叉树",-1),mZ={style:{"text-align":"left"}},yZ=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),xZ={style:{"text-align":"left"}},pZ={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},bZ=t("td",{style:{"text-align":"center"}},null,-1),kZ={style:{"text-align":"left"}},MZ=t("code",null,"树",-1),IZ=t("code",null,"深度优先搜索",-1),vZ=t("code",null,"二叉搜索树",-1),wZ=t("code",null,"1+",-1),HZ={style:{"text-align":"left"}},EZ=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),zZ={style:{"text-align":"left"}},OZ={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},jZ=t("td",{style:{"text-align":"center"}},null,-1),LZ={style:{"text-align":"left"}},qZ=t("code",null,"树",-1),CZ=t("code",null,"深度优先搜索",-1),NZ=t("code",null,"二叉树",-1),PZ={style:{"text-align":"left"}},KZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 105",-1),VZ={style:{"text-align":"left"}},BZ={href:"https://leetcode.cn/problems/ZL6zAn",target:"_blank",rel:"noopener noreferrer"},TZ=t("td",{style:{"text-align":"center"}},null,-1),UZ={style:{"text-align":"left"}},AZ=t("code",null,"深度优先搜索",-1),WZ=t("code",null,"广度优先搜索",-1),DZ=t("code",null,"并查集",-1),YZ=t("code",null,"2+",-1),JZ={style:{"text-align":"left"}},QZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),RZ={style:{"text-align":"left"}},SZ={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},ZZ=t("td",{style:{"text-align":"center"}},null,-1),FZ={style:{"text-align":"left"}},GZ=t("code",null,"深度优先搜索",-1),XZ=t("code",null,"广度优先搜索",-1),$Z=t("code",null,"并查集",-1),tF=t("code",null,"1+",-1),eF={style:{"text-align":"left"}},lF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),oF={style:{"text-align":"left"}},nF={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},sF=t("td",{style:{"text-align":"center"}},null,-1),dF={style:{"text-align":"left"}},_F=t("code",null,"深度优先搜索",-1),iF=t("code",null,"广度优先搜索",-1),rF=t("code",null,"图",-1),cF=t("code",null,"1+",-1),aF={style:{"text-align":"left"}},hF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),uF={style:{"text-align":"left"}},fF={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},gF=t("td",{style:{"text-align":"center"}},null,-1),mF={style:{"text-align":"left"}},yF=t("code",null,"深度优先搜索",-1),xF=t("code",null,"广度优先搜索",-1),pF=t("code",null,"并查集",-1),bF=t("code",null,"3+",-1),kF={style:{"text-align":"left"}},MF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),IF={style:{"text-align":"left"}},vF={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},wF=t("td",{style:{"text-align":"center"}},null,-1),HF={style:{"text-align":"left"}},EF=t("code",null,"深度优先搜索",-1),zF=t("code",null,"广度优先搜索",-1),OF=t("code",null,"图",-1),jF=t("code",null,"5+",-1),LF={style:{"text-align":"left"}},qF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),CF={style:{"text-align":"left"}},NF={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},PF=t("td",{style:{"text-align":"center"}},null,-1),KF={style:{"text-align":"left"}},VF=t("code",null,"深度优先搜索",-1),BF=t("code",null,"广度优先搜索",-1),TF=t("code",null,"图",-1),UF=t("code",null,"1+",-1),AF={style:{"text-align":"left"}},WF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),DF={style:{"text-align":"left"}},YF={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},JF=t("td",{style:{"text-align":"center"}},null,-1),QF={style:{"text-align":"left"}},RF=t("code",null,"深度优先搜索",-1),SF=t("code",null,"广度优先搜索",-1),ZF=t("code",null,"图",-1),FF=t("code",null,"3+",-1),GF={style:{"text-align":"left"}},XF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),$F={style:{"text-align":"left"}},tG={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},eG=t("td",{style:{"text-align":"center"}},null,-1),lG={style:{"text-align":"left"}},oG=t("code",null,"深度优先搜索",-1),nG=t("code",null,"广度优先搜索",-1),sG=t("code",null,"并查集",-1),dG=t("code",null,"1+",-1),_G={style:{"text-align":"left"}},iG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 117",-1),rG={style:{"text-align":"left"}},cG={href:"https://leetcode.cn/problems/H6lPxb",target:"_blank",rel:"noopener noreferrer"},aG=t("td",{style:{"text-align":"center"}},null,-1),hG={style:{"text-align":"left"}},uG=t("code",null,"深度优先搜索",-1),fG=t("code",null,"广度优先搜索",-1),gG=t("code",null,"并查集",-1),mG=t("code",null,"3+",-1),yG={style:{"text-align":"left"}},xG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),pG={style:{"text-align":"left"}},bG={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},kG=t("td",{style:{"text-align":"center"}},null,-1),MG={style:{"text-align":"left"}},IG=t("code",null,"深度优先搜索",-1),vG=t("code",null,"广度优先搜索",-1),wG=t("code",null,"并查集",-1),HG=t("code",null,"1+",-1),EG={style:{"text-align":"left"}},zG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 28",-1),OG={style:{"text-align":"left"}},jG={href:"https://leetcode.cn/problems/Qv1Da2",target:"_blank",rel:"noopener noreferrer"},LG=t("td",{style:{"text-align":"center"}},null,-1),qG={style:{"text-align":"left"}},CG=t("code",null,"深度优先搜索",-1),NG=t("code",null,"链表",-1),PG=t("code",null,"双向链表",-1),KG={style:{"text-align":"left"}},VG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),BG={style:{"text-align":"left"}},TG={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},UG=t("td",{style:{"text-align":"center"}},null,-1),AG={style:{"text-align":"left"}},WG=t("code",null,"树",-1),DG=t("code",null,"深度优先搜索",-1),YG=t("code",null,"广度优先搜索",-1),JG=t("code",null,"1+",-1),QG={style:{"text-align":"left"}},RG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),SG={style:{"text-align":"left"}},ZG={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},FG=t("td",{style:{"text-align":"center"}},null,-1),GG={style:{"text-align":"left"}},XG=t("code",null,"树",-1),$G=t("code",null,"深度优先搜索",-1),tX=t("code",null,"广度优先搜索",-1),eX=t("code",null,"1+",-1),lX={style:{"text-align":"left"}},oX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),nX={style:{"text-align":"left"}},sX={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},dX=t("td",{style:{"text-align":"center"}},null,-1),_X={style:{"text-align":"left"}},iX=t("code",null,"树",-1),rX=t("code",null,"深度优先搜索",-1),cX=t("code",null,"广度优先搜索",-1),aX=t("code",null,"1+",-1),hX={style:{"text-align":"left"}},uX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),fX={style:{"text-align":"left"}},gX={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},mX=t("td",{style:{"text-align":"center"}},null,-1),yX={style:{"text-align":"left"}},xX=t("code",null,"树",-1),pX=t("code",null,"深度优先搜索",-1),bX=t("code",null,"二叉树",-1),kX={style:{"text-align":"left"}},MX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),IX={style:{"text-align":"left"}},vX={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},wX=t("td",{style:{"text-align":"center"}},null,-1),HX={style:{"text-align":"left"}},EX=t("code",null,"树",-1),zX=t("code",null,"深度优先搜索",-1),OX=t("code",null,"广度优先搜索",-1),jX=t("code",null,"3+",-1),LX={style:{"text-align":"left"}},qX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),CX={style:{"text-align":"left"}},NX={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},PX=t("td",{style:{"text-align":"center"}},null,-1),KX={style:{"text-align":"left"}},VX=t("code",null,"树",-1),BX=t("code",null,"深度优先搜索",-1),TX=t("code",null,"二叉树",-1),UX={style:{"text-align":"left"}},AX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),WX={style:{"text-align":"left"}},DX={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},YX=t("td",{style:{"text-align":"center"}},null,-1),JX={style:{"text-align":"left"}},QX=t("code",null,"树",-1),RX=t("code",null,"深度优先搜索",-1),SX=t("code",null,"二叉树",-1),ZX={style:{"text-align":"left"}},FX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),GX={style:{"text-align":"left"}},XX={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},$X=t("td",{style:{"text-align":"center"}},null,-1),t$={style:{"text-align":"left"}},e$=t("code",null,"树",-1),l$=t("code",null,"深度优先搜索",-1),o$=t("code",null,"动态规划",-1),n$=t("code",null,"1+",-1),s$={style:{"text-align":"left"}},d$=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),_$={style:{"text-align":"left"}},i$={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},r$=t("td",{style:{"text-align":"center"}},null,-1),c$={style:{"text-align":"left"}},a$=t("code",null,"栈",-1),h$=t("code",null,"树",-1),u$=t("code",null,"深度优先搜索",-1),f$=t("code",null,"2+",-1),g$={style:{"text-align":"left"}},m$=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),y$={style:{"text-align":"left"}},x$={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},p$=t("td",{style:{"text-align":"center"}},null,-1),b$={style:{"text-align":"left"}},k$=t("code",null,"树",-1),M$=t("code",null,"深度优先搜索",-1),I$=t("code",null,"二叉搜索树",-1),v$=t("code",null,"1+",-1),w$={style:{"text-align":"left"}},H$=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),E$={style:{"text-align":"left"}},z$={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},O$=t("td",{style:{"text-align":"center"}},null,-1),j$={style:{"text-align":"left"}},L$=t("code",null,"树",-1),q$=t("code",null,"深度优先搜索",-1),C$=t("code",null,"二叉搜索树",-1),N$=t("code",null,"1+",-1),P$={style:{"text-align":"left"}},K$=t("td",{style:{"text-align":"center"}},"剑指 Offer II 64",-1),V$={style:{"text-align":"left"}},B$={href:"https://leetcode.cn/problems/US1pGT",target:"_blank",rel:"noopener noreferrer"},T$=t("td",{style:{"text-align":"center"}},null,-1),U$={style:{"text-align":"left"}},A$=t("code",null,"深度优先搜索",-1),W$=t("code",null,"设计",-1),D$=t("code",null,"字典树",-1),Y$=t("code",null,"2+",-1),J$={style:{"text-align":"left"}},Q$=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),R$={style:{"text-align":"left"}},S$={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},Z$=t("td",{style:{"text-align":"center"}},null,-1),F$={style:{"text-align":"left"}},G$=t("code",null,"深度优先搜索",-1),X$=t("code",null,"广度优先搜索",-1),$$=t("code",null,"图",-1),ttt=t("code",null,"1+",-1),ett={style:{"text-align":"left"}},ltt=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),ott={style:{"text-align":"left"}},ntt={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},stt=t("td",{style:{"text-align":"center"}},null,-1),dtt={style:{"text-align":"left"}},_tt=t("code",null,"深度优先搜索",-1),itt=t("code",null,"广度优先搜索",-1),rtt=t("code",null,"图",-1),ctt={style:{"text-align":"left"}},att=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),htt={style:{"text-align":"left"}},utt={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},ftt=t("td",{style:{"text-align":"center"}},null,-1),gtt={style:{"text-align":"left"}},mtt=t("code",null,"树",-1),ytt=t("code",null,"深度优先搜索",-1),xtt=t("code",null,"二叉树",-1),ptt={style:{"text-align":"left"}},btt=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),ktt={style:{"text-align":"left"}},Mtt={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},Itt=t("td",{style:{"text-align":"center"}},null,-1),vtt={style:{"text-align":"left"}},wtt=t("code",null,"树",-1),Htt=t("code",null,"深度优先搜索",-1),Ett=t("code",null,"二叉搜索树",-1),ztt=t("code",null,"1+",-1),Ott={style:{"text-align":"left"}},jtt=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),Ltt={style:{"text-align":"left"}},qtt={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},Ctt=t("td",{style:{"text-align":"center"}},null,-1),Ntt={style:{"text-align":"left"}},Ptt=t("code",null,"树",-1),Ktt=t("code",null,"深度优先搜索",-1),Vtt=t("code",null,"二叉搜索树",-1),Btt=t("code",null,"1+",-1),Ttt={style:{"text-align":"left"}},Utt=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),Att={style:{"text-align":"left"}},Wtt={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},Dtt=t("td",{style:{"text-align":"center"}},null,-1),Ytt={style:{"text-align":"left"}},Jtt=t("code",null,"树",-1),Qtt=t("code",null,"深度优先搜索",-1),Rtt=t("code",null,"二叉树",-1),Stt={style:{"text-align":"left"}},Ztt=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Ftt={style:{"text-align":"left"}},Gtt={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Xtt=t("td",{style:{"text-align":"center"}},null,-1),$tt={style:{"text-align":"left"}},tet=t("code",null,"树",-1),eet=t("code",null,"深度优先搜索",-1),oet=t("code",null,"二叉树",-1),net=t("code",null,"2+",-1),set={style:{"text-align":"left"}},det=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),_et={style:{"text-align":"left"}},iet={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},ret=t("td",{style:{"text-align":"center"}},null,-1),cet={style:{"text-align":"left"}},aet=t("code",null,"树",-1),het=t("code",null,"深度优先搜索",-1),uet=t("code",null,"二叉树",-1),fet={style:{"text-align":"left"}},get=t("td",{style:{"text-align":"center"}},"面试题 08.10",-1),met={style:{"text-align":"left"}},yet={href:"https://leetcode.cn/problems/color-fill-lcci",target:"_blank",rel:"noopener noreferrer"},xet=t("td",{style:{"text-align":"center"}},null,-1),pet={style:{"text-align":"left"}},bet=t("code",null,"深度优先搜索",-1),ket=t("code",null,"广度优先搜索",-1),Met=t("code",null,"数组",-1),Iet=t("code",null,"1+",-1),vet={style:{"text-align":"left"}},wet=t("td",{style:{"text-align":"center"}},"面试题 16.19",-1),Het={style:{"text-align":"left"}},Eet={href:"https://leetcode.cn/problems/pond-sizes-lcci",target:"_blank",rel:"noopener noreferrer"},zet=t("td",{style:{"text-align":"center"}},null,-1),Oet={style:{"text-align":"left"}},jet=t("code",null,"深度优先搜索",-1),Let=t("code",null,"广度优先搜索",-1),qet=t("code",null,"并查集",-1),Cet=t("code",null,"2+",-1),Net={style:{"text-align":"left"}},Pet=t("td",{style:{"text-align":"center"}},"面试题 17.07",-1),Ket={style:{"text-align":"left"}},Vet={href:"https://leetcode.cn/problems/baby-names-lcci",target:"_blank",rel:"noopener noreferrer"},Bet=t("td",{style:{"text-align":"center"}},null,-1),Tet={style:{"text-align":"left"}},Uet=t("code",null,"深度优先搜索",-1),Aet=t("code",null,"广度优先搜索",-1),Wet=t("code",null,"并查集",-1),Det=t("code",null,"4+",-1),Yet={style:{"text-align":"left"}},Jet=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),Qet={style:{"text-align":"left"}},Ret={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},Set=t("td",{style:{"text-align":"center"}},null,-1),Zet={style:{"text-align":"left"}},Fet=t("code",null,"栈",-1),Get=t("code",null,"树",-1),Xet=t("code",null,"深度优先搜索",-1),$et=t("code",null,"3+",-1),tlt={style:{"text-align":"left"}};function elt(llt,olt){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return r(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[Y]),_:1})]),J,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),dt,l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[Nt]),_:1})])]),Pt,a(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Vt,t("td",Bt,[t("a",Tt,[l("二叉树的中序遍历"),e(s)])]),t("td",Ut,[t("a",At,[l("[✓]"),e(s)])]),t("td",Wt,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Dt]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jt]),_:1}),l(),Qt]),t("td",Rt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[St,t("td",Zt,[t("a",Ft,[l("验证二叉搜索树"),e(s)])]),t("td",Gt,[t("a",Xt,[l("[✓]"),e(s)])]),t("td",$t,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ee]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[le]),_:1}),l(),oe]),t("td",ne,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[se,t("td",de,[t("a",_e,[l("恢复二叉搜索树"),e(s)])]),t("td",ie,[t("a",re,[l("[✓]"),e(s)])]),t("td",ce,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[he]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[ue]),_:1}),l(),fe]),t("td",ge,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[me,t("td",ye,[t("a",xe,[l("相同的树"),e(s)])]),t("td",pe,[t("a",be,[l("[✓]"),e(s)])]),t("td",ke,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Me]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ie]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ve]),_:1}),l(),we]),t("td",He,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ee,t("td",ze,[t("a",Oe,[l("对称二叉树"),e(s)])]),t("td",je,[t("a",Le,[l("[✓]"),e(s)])]),t("td",qe,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Pe]),_:1}),l(),Ke]),t("td",Ve,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Be,t("td",Te,[t("a",Ue,[l("二叉树的最大深度"),e(s)])]),t("td",Ae,[t("a",We,[l("[✓]"),e(s)])]),t("td",De,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ye]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Je]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Qe]),_:1}),l(),Re]),t("td",Se,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ze,t("td",Fe,[t("a",Ge,[l("平衡二叉树"),e(s)])]),t("td",Xe,[t("a",$e,[l("[✓]"),e(s)])]),t("td",tl,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[el]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ll]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ol]),_:1})]),t("td",nl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sl,t("td",dl,[t("a",_l,[l("二叉树的最小深度"),e(s)])]),t("td",il,[t("a",rl,[l("[✓]"),e(s)])]),t("td",cl,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[al]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[hl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ul]),_:1}),l(),fl]),t("td",gl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ml,t("td",yl,[t("a",xl,[l("路径总和"),e(s)])]),t("td",pl,[t("a",bl,[l("[✓]"),e(s)])]),t("td",kl,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[vl]),_:1}),l(),wl]),t("td",Hl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[El,t("td",zl,[t("a",Ol,[l("路径总和 II"),e(s)])]),t("td",jl,[t("a",Ll,[l("[✓]"),e(s)])]),t("td",ql,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Nl]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Pl]),_:1}),l(),Kl]),t("td",Vl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bl,t("td",Tl,[t("a",Ul,[l("二叉树展开为链表"),e(s)])]),t("td",Al,[t("a",Wl,[l("[✓]"),e(s)])]),t("td",Dl,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Yl]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ql]),_:1}),l(),Rl]),t("td",Sl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zl,t("td",Fl,[t("a",Gl,[l("填充每个节点的下一个右侧节点指针"),e(s)])]),t("td",Xl,[t("a",$l,[l("[✓]"),e(s)])]),t("td",to,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[lo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[oo]),_:1}),l(),no]),t("td",so,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_o,t("td",io,[t("a",ro,[l("填充每个节点的下一个右侧节点指针 II"),e(s)])]),t("td",co,[t("a",ao,[l("[✓]"),e(s)])]),t("td",ho,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[uo]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[go]),_:1}),l(),mo]),t("td",yo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xo,t("td",po,[t("a",bo,[l("二叉树中的最大路径和"),e(s)])]),t("td",ko,[t("a",Mo,[l("[✓]"),e(s)])]),t("td",Io,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vo]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wo]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ho]),_:1}),l(),Eo]),t("td",zo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oo,t("td",jo,[t("a",Lo,[l("求根节点到叶节点数字之和"),e(s)])]),t("td",qo,[t("a",Co,[l("[✓]"),e(s)])]),t("td",No,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Po]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ko]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Vo]),_:1})]),t("td",Bo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[To,t("td",Uo,[t("a",Ao,[l("被围绕的区域"),e(s)])]),t("td",Wo,[t("a",Do,[l("[✓]"),e(s)])]),t("td",Yo,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Qo]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ro]),_:1}),l(),So]),t("td",Zo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fo,t("td",Go,[t("a",Xo,[l("克隆图"),e(s)])]),t("td",$o,[t("a",tn,[l("[✓]"),e(s)])]),t("td",en,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ln]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[on]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[nn]),_:1}),l(),sn]),t("td",dn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_n,t("td",rn,[t("a",cn,[l("二叉树的前序遍历"),e(s)])]),t("td",an,[t("a",hn,[l("[✓]"),e(s)])]),t("td",un,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[fn]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[gn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[mn]),_:1}),l(),yn]),t("td",xn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pn,t("td",bn,[t("a",kn,[l("二叉树的后序遍历"),e(s)])]),t("td",Mn,[t("a",In,[l("[✓]"),e(s)])]),t("td",vn,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Hn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[En]),_:1}),l(),zn]),t("td",On,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jn,t("td",Ln,[t("a",qn,[l("上下翻转二叉树"),e(s)])]),t("td",Cn,[t("a",Nn,[l("[✓]"),e(s)])]),t("td",Pn,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Kn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Vn]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Bn]),_:1})]),t("td",Tn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Un,t("td",An,[t("a",Wn,[l("二叉树的右视图"),e(s)])]),t("td",Dn,[t("a",Yn,[l("[✓]"),e(s)])]),t("td",Jn,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Rn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Sn]),_:1}),l(),Zn]),t("td",Fn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gn,t("td",Xn,[t("a",$n,[l("岛屿数量"),e(s)])]),t("td",ts,[t("a",es,[l("[✓]"),e(s)])]),t("td",ls,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ns]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ss]),_:1}),l(),ds]),t("td",_s,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[is,t("td",rs,[t("a",cs,[l("课程表"),e(s)])]),t("td",as,[t("a",hs,[l("[✓]"),e(s)])]),t("td",us,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fs]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[gs]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ms]),_:1}),l(),ys]),t("td",xs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ps,t("td",bs,[t("a",ks,[l("课程表 II"),e(s)])]),t("td",Ms,[t("a",Is,[l("[✓]"),e(s)])]),t("td",vs,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ws]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Hs]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Es]),_:1}),l(),zs]),t("td",Os,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[js,t("td",Ls,[t("a",qs,[l("添加与搜索单词 - 数据结构设计"),e(s)])]),t("td",Cs,[t("a",Ns,[l("[✓]"),e(s)])]),t("td",Ps,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ks]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Vs]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Bs]),_:1}),l(),Ts]),t("td",Us,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[As,t("td",Ws,[t("a",Ds,[l("翻转二叉树"),e(s)])]),t("td",Ys,[t("a",Js,[l("[✓]"),e(s)])]),t("td",Qs,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Rs]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ss]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Zs]),_:1}),l(),Fs]),t("td",Gs,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xs,t("td",$s,[t("a",td,[l("二叉搜索树中第 K 小的元素"),e(s)])]),t("td",ed,[t("a",ld,[l("[✓]"),e(s)])]),t("td",od,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sd]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[dd]),_:1}),l(),_d]),t("td",id,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rd,t("td",cd,[t("a",ad,[l("二叉搜索树的最近公共祖先"),e(s)])]),t("td",hd,[t("a",ud,[l("[✓]"),e(s)])]),t("td",fd,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[md]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[yd]),_:1}),l(),xd]),t("td",pd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bd,t("td",kd,[t("a",Md,[l("二叉树的最近公共祖先"),e(s)])]),t("td",Id,[t("a",vd,[l("[✓]"),e(s)])]),t("td",wd,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Hd]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ed]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[zd]),_:1})]),t("td",Od,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jd,t("td",Ld,[t("a",qd,[l("统计同值子树"),e(s)])]),Cd,t("td",Nd,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Kd]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Vd]),_:1})]),t("td",Bd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Td,t("td",Ud,[t("a",Ad,[l("二叉树的所有路径"),e(s)])]),t("td",Wd,[t("a",Dd,[l("[✓]"),e(s)])]),t("td",Yd,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Qd]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Rd]),_:1}),l(),Sd]),t("td",Zd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fd,t("td",Gd,[t("a",Xd,[l("以图判树"),e(s)])]),$d,t("td",t_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[o_]),_:1}),l(),n_]),t("td",s_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d_,t("td",__,[t("a",i_,[l("火星词典"),e(s)])]),r_,t("td",c_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[u_]),_:1}),l(),f_]),t("td",g_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m_,t("td",y_,[t("a",x_,[l("最接近的二叉搜索树值"),e(s)])]),p_,t("td",b_,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[k_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[M_]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[I_]),_:1}),l(),v_]),t("td",w_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[H_,t("td",E_,[t("a",z_,[l("最接近的二叉搜索树值 II"),e(s)])]),O_,t("td",j_,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[L_]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[C_]),_:1}),l(),N_]),t("td",P_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K_,t("td",V_,[t("a",B_,[l("二叉搜索树中的中序后继"),e(s)])]),T_,t("td",U_,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[A_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[W_]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[D_]),_:1}),l(),Y_]),t("td",J_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q_,t("td",R_,[t("a",S_,[l("二叉树的序列化与反序列化"),e(s)])]),t("td",Z_,[t("a",F_,[l("[✓]"),e(s)])]),t("td",G_,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ti]),_:1}),l(),ei]),t("td",li,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oi,t("td",ni,[t("a",si,[l("二叉树最长连续序列"),e(s)])]),di,t("td",_i,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ii]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ri]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ci]),_:1})]),t("td",ai,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hi,t("td",ui,[t("a",fi,[l("包含全部黑色像素的最小矩形"),e(s)])]),gi,t("td",mi,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yi]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xi]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pi]),_:1}),l(),bi]),t("td",ki,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mi,t("td",Ii,[t("a",vi,[l("最小高度树"),e(s)])]),wi,t("td",Hi,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ei]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[zi]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Oi]),_:1}),l(),ji]),t("td",Li,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qi,t("td",Ci,[t("a",Ni,[l("二叉树的垂直遍历"),e(s)])]),Pi,t("td",Ki,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Vi]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Bi]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ti]),_:1}),l(),Ui]),t("td",Ai,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wi,t("td",Di,[t("a",Yi,[l("无向图中连通分量的数目"),e(s)])]),Ji,t("td",Qi,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ri]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Si]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Zi]),_:1}),l(),Fi]),t("td",Gi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xi,t("td",$i,[t("a",tr,[l("矩阵中的最长递增路径"),e(s)])]),er,t("td",lr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[or]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[nr]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[sr]),_:1}),l(),dr]),t("td",_r,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ir,t("td",rr,[t("a",cr,[l("重新安排行程"),e(s)])]),ar,t("td",hr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ur]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[fr]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[gr]),_:1})]),t("td",mr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yr,t("td",xr,[t("a",pr,[l("最大二叉搜索子树"),e(s)])]),br,t("td",kr,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Mr]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ir]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[vr]),_:1}),l(),wr]),t("td",Hr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Er,t("td",zr,[t("a",Or,[l("打家劫舍 III"),e(s)])]),jr,t("td",Lr,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[qr]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Cr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Nr]),_:1}),l(),Pr]),t("td",Kr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vr,t("td",Br,[t("a",Tr,[l("嵌套列表加权和"),e(s)])]),Ur,t("td",Ar,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Wr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Dr]),_:1})]),t("td",Yr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jr,t("td",Qr,[t("a",Rr,[l("扁平化嵌套列表迭代器"),e(s)])]),Sr,t("td",Zr,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Fr]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Gr]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xr]),_:1}),l(),$r]),t("td",tc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ec,t("td",lc,[t("a",oc,[l("嵌套列表加权和 II"),e(s)])]),nc,t("td",sc,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[dc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_c]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ic]),_:1})]),t("td",rc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cc,t("td",ac,[t("a",hc,[l("水壶问题"),e(s)])]),uc,t("td",fc,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[gc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[mc]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[yc]),_:1})]),t("td",xc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pc,t("td",bc,[t("a",kc,[l("寻找二叉树的叶子节点"),e(s)])]),t("td",Mc,[t("a",Ic,[l("[✓]"),e(s)])]),t("td",vc,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[wc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Hc]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Ec]),_:1})]),t("td",zc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oc,t("td",jc,[t("a",Lc,[l("迷你语法分析器"),e(s)])]),qc,t("td",Cc,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Nc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Pc]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Kc]),_:1})]),t("td",Vc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bc,t("td",Tc,[t("a",Uc,[l("字典序排数"),e(s)])]),Ac,t("td",Wc,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Dc]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Yc]),_:1})]),t("td",Jc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qc,t("td",Rc,[t("a",Sc,[l("文件的最长绝对路径"),e(s)])]),Zc,t("td",Fc,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Gc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xc]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[$c]),_:1})]),t("td",ta,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ea,t("td",la,[t("a",oa,[l("除法求值"),e(s)])]),t("td",na,[t("a",sa,[l("[✓]"),e(s)])]),t("td",da,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_a]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ia]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ra]),_:1}),l(),ca]),t("td",aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ha,t("td",ua,[t("a",fa,[l("左叶子之和"),e(s)])]),ga,t("td",ma,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ya]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xa]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[pa]),_:1}),l(),ba]),t("td",ka,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ma,t("td",Ia,[t("a",va,[l("太平洋大西洋水流问题"),e(s)])]),wa,t("td",Ha,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ea]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[za]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Oa]),_:1}),l(),ja]),t("td",La,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qa,t("td",Ca,[t("a",Na,[l("棋盘上的战舰"),e(s)])]),Pa,t("td",Ka,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Va]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ba]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Ta]),_:1})]),t("td",Ua,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Aa,t("td",Wa,[t("a",Da,[l("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",Ya,[t("a",Ja,[l("[✓]"),e(s)])]),t("td",Qa,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ra]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Sa]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Za]),_:1}),l(),Fa]),t("td",Ga,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xa,t("td",$a,[t("a",th,[l("序列化和反序列化 N 叉树"),e(s)])]),eh,t("td",lh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[oh]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nh]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sh]),_:1}),l(),dh]),t("td",_h,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ih,t("td",rh,[t("a",ch,[l("扁平化多级双向链表"),e(s)])]),t("td",ah,[t("a",hh,[l("[✓]"),e(s)])]),t("td",uh,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fh]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[gh]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[mh]),_:1})]),t("td",yh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xh,t("td",ph,[t("a",bh,[l("将 N 叉树编码为二叉树"),e(s)])]),kh,t("td",Mh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ih]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vh]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[wh]),_:1}),l(),Hh]),t("td",Eh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zh,t("td",Oh,[t("a",jh,[l("路径总和 III"),e(s)])]),t("td",Lh,[t("a",qh,[l("[✓]"),e(s)])]),t("td",Ch,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Nh]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ph]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Kh]),_:1})]),t("td",Vh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bh,t("td",Th,[t("a",Uh,[l("序列化和反序列化二叉搜索树"),e(s)])]),Ah,t("td",Wh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Dh]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Yh]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Jh]),_:1}),l(),Qh]),t("td",Rh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sh,t("td",Zh,[t("a",Fh,[l("岛屿的周长"),e(s)])]),Gh,t("td",Xh,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$h]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[t1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[e1]),_:1}),l(),l1]),t("td",o1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[n1,t("td",s1,[t("a",d1,[l("连接词"),e(s)])]),_1,t("td",i1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[r1]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[c1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[a1]),_:1}),l(),h1]),t("td",u1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f1,t("td",g1,[t("a",m1,[l("迷宫"),e(s)])]),y1,t("td",x1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[p1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[b1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k1]),_:1}),l(),M1]),t("td",I1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v1,t("td",w1,[t("a",H1,[l("迷宫 III"),e(s)])]),E1,t("td",z1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[O1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[j1]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[L1]),_:1}),l(),q1]),t("td",C1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[N1,t("td",P1,[t("a",K1,[l("二叉搜索树中的众数"),e(s)])]),V1,t("td",B1,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[T1]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[U1]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[A1]),_:1}),l(),W1]),t("td",D1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Y1,t("td",J1,[t("a",Q1,[l("迷宫 II"),e(s)])]),R1,t("td",S1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Z1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[F1]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[G1]),_:1}),l(),X1]),t("td",$1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tu,t("td",eu,[t("a",lu,[l("出现次数最多的子树元素和"),e(s)])]),ou,t("td",nu,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[su]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[du]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[_u]),_:1}),l(),iu]),t("td",ru,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cu,t("td",au,[t("a",hu,[l("找树左下角的值"),e(s)])]),uu,t("td",fu,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[gu]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[mu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[yu]),_:1}),l(),xu]),t("td",pu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bu,t("td",ku,[t("a",Mu,[l("自由之路"),e(s)])]),t("td",Iu,[t("a",vu,[l("[✓]"),e(s)])]),t("td",wu,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Hu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Eu]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[zu]),_:1}),l(),Ou]),t("td",ju,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lu,t("td",qu,[t("a",Cu,[l("在每个树行中找最大值"),e(s)])]),Nu,t("td",Pu,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ku]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Vu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Bu]),_:1}),l(),Tu]),t("td",Uu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Au,t("td",Wu,[t("a",Du,[l("扫雷游戏"),e(s)])]),Yu,t("td",Ju,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Qu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ru]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Su]),_:1}),l(),Zu]),t("td",Fu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gu,t("td",Xu,[t("a",$u,[l("二叉搜索树的最小绝对差"),e(s)])]),t("td",tf,[t("a",ef,[l("[✓]"),e(s)])]),t("td",lf,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[of]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nf]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sf]),_:1}),l(),df]),t("td",_f,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rf,t("td",cf,[t("a",af,[l("从字符串生成二叉树"),e(s)])]),hf,t("td",uf,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ff]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[gf]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[mf]),_:1}),l(),yf]),t("td",xf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pf,t("td",bf,[t("a",kf,[l("把二叉搜索树转换为累加树"),e(s)])]),Mf,t("td",If,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vf]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wf]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Hf]),_:1}),l(),Ef]),t("td",zf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Of,t("td",jf,[t("a",Lf,[l("二叉树的直径"),e(s)])]),t("td",qf,[t("a",Cf,[l("[✓]"),e(s)])]),t("td",Nf,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Pf]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Kf]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Vf]),_:1})]),t("td",Bf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Tf,t("td",Uf,[t("a",Af,[l("二叉树的边界"),e(s)])]),Wf,t("td",Df,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Yf]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jf]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Qf]),_:1})]),t("td",Rf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sf,t("td",Zf,[t("a",Ff,[l("省份数量"),e(s)])]),Gf,t("td",Xf,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$f]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tg]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[eg]),_:1}),l(),lg]),t("td",og,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ng,t("td",sg,[t("a",dg,[l("二叉树最长连续序列 II"),e(s)])]),_g,t("td",ig,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[rg]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cg]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ag]),_:1})]),t("td",hg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ug,t("td",fg,[t("a",gg,[l("N 叉树的最大深度"),e(s)])]),t("td",mg,[t("a",yg,[l("[✓]"),e(s)])]),t("td",xg,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[pg]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[bg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kg]),_:1})]),t("td",Mg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ig,t("td",vg,[t("a",wg,[l("二叉树的坡度"),e(s)])]),Hg,t("td",Eg,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[zg]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Og]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[jg]),_:1})]),t("td",Lg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qg,t("td",Cg,[t("a",Ng,[l("数组嵌套"),e(s)])]),Pg,t("td",Kg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Vg]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Bg]),_:1})]),t("td",Tg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ug,t("td",Ag,[t("a",Wg,[l("另一棵树的子树"),e(s)])]),t("td",Dg,[t("a",Yg,[l("[✓]"),e(s)])]),t("td",Jg,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qg]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Rg]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Sg]),_:1}),l(),Zg]),t("td",Fg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Gg,t("td",Xg,[t("a",$g,[l("杀掉进程"),e(s)])]),tm,t("td",em,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[lm]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[om]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[nm]),_:1}),l(),sm]),t("td",dm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_m,t("td",im,[t("a",rm,[l("N 叉树的前序遍历"),e(s)])]),t("td",cm,[t("a",am,[l("[✓]"),e(s)])]),t("td",hm,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[um]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[fm]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[gm]),_:1})]),t("td",mm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ym,t("td",xm,[t("a",pm,[l("N 叉树的后序遍历"),e(s)])]),t("td",bm,[t("a",km,[l("[✓]"),e(s)])]),t("td",Mm,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Im]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vm]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wm]),_:1})]),t("td",Hm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Em,t("td",zm,[t("a",Om,[l("根据二叉树创建字符串"),e(s)])]),jm,t("td",Lm,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[qm]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Cm]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Nm]),_:1}),l(),Pm]),t("td",Km,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vm,t("td",Bm,[t("a",Tm,[l("合并二叉树"),e(s)])]),t("td",Um,[t("a",Am,[l("[✓]"),e(s)])]),t("td",Wm,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Dm]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ym]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Jm]),_:1}),l(),Qm]),t("td",Rm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Sm,t("td",Zm,[t("a",Fm,[l("在二叉树中增加一行"),e(s)])]),Gm,t("td",Xm,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$m]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[t2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[e2]),_:1}),l(),l2]),t("td",o2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n2,t("td",s2,[t("a",d2,[l("二叉树的层平均值"),e(s)])]),t("td",_2,[t("a",i2,[l("[✓]"),e(s)])]),t("td",r2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[c2]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[a2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[h2]),_:1}),l(),u2]),t("td",f2,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[g2,t("td",m2,[t("a",y2,[l("设计搜索自动补全系统"),e(s)])]),x2,t("td",p2,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[b2]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[k2]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[M2]),_:1}),l(),I2]),t("td",v2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[w2,t("td",H2,[t("a",E2,[l("寻找重复的子树"),e(s)])]),z2,t("td",O2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[j2]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[L2]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[q2]),_:1}),l(),C2]),t("td",N2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P2,t("td",K2,[t("a",V2,[l("两数之和 IV - 输入二叉搜索树"),e(s)])]),B2,t("td",T2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[U2]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[A2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[W2]),_:1}),l(),D2]),t("td",Y2,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[J2,t("td",Q2,[t("a",R2,[l("输出二叉树"),e(s)])]),S2,t("td",Z2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[F2]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[G2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X2]),_:1}),l(),$2]),t("td",ty,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ey,t("td",ly,[t("a",oy,[l("二叉树最大宽度"),e(s)])]),t("td",ny,[t("a",sy,[l("[✓]"),e(s)])]),t("td",dy,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_y]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[iy]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ry]),_:1}),l(),cy]),t("td",ay,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hy,t("td",uy,[t("a",fy,[l("均匀树划分"),e(s)])]),gy,t("td",my,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[yy]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xy]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[py]),_:1})]),t("td",by,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ky,t("td",My,[t("a",Iy,[l("路径总和 IV"),e(s)])]),vy,t("td",wy,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Hy]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ey]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zy]),_:1}),l(),Oy]),t("td",jy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ly,t("td",qy,[t("a",Cy,[l("修剪二叉搜索树"),e(s)])]),Ny,t("td",Py,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ky]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Vy]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[By]),_:1}),l(),Ty]),t("td",Uy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ay,t("td",Wy,[t("a",Dy,[l("二叉树中第二小的节点"),e(s)])]),Yy,t("td",Jy,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qy]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ry]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Sy]),_:1})]),t("td",Zy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fy,t("td",Gy,[t("a",Xy,[l("灯泡开关 Ⅱ"),e(s)])]),$y,t("td",t3,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[e3]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[l3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[o3]),_:1}),l(),n3]),t("td",s3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d3,t("td",_3,[t("a",i3,[l("实现一个魔法字典"),e(s)])]),r3,t("td",c3,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[a3]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[h3]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[u3]),_:1}),l(),f3]),t("td",g3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m3,t("td",y3,[t("a",x3,[l("冗余连接"),e(s)])]),p3,t("td",b3,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[k3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[M3]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[I3]),_:1}),l(),v3]),t("td",w3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H3,t("td",E3,[t("a",z3,[l("冗余连接 II"),e(s)])]),O3,t("td",j3,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[L3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[q3]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[C3]),_:1}),l(),N3]),t("td",P3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K3,t("td",V3,[t("a",B3,[l("最长同值路径"),e(s)])]),T3,t("td",U3,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[A3]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[W3]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[D3]),_:1})]),t("td",Y3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J3,t("td",Q3,[t("a",R3,[l("员工的重要性"),e(s)])]),S3,t("td",Z3,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[F3]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[G3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X3]),_:1}),l(),$3]),t("td",tx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ex,t("td",lx,[t("a",ox,[l("不同岛屿的数量"),e(s)])]),nx,t("td",sx,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dx]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_x]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ix]),_:1}),l(),rx]),t("td",cx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ax,t("td",hx,[t("a",ux,[l("岛屿的最大面积"),e(s)])]),t("td",fx,[t("a",gx,[l("[✓]"),e(s)])]),t("td",mx,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yx]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xx]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[px]),_:1}),l(),bx]),t("td",kx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mx,t("td",Ix,[t("a",vx,[l("不同岛屿的数量 II"),e(s)])]),wx,t("td",Hx,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ex]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[zx]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ox]),_:1}),l(),jx]),t("td",Lx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qx,t("td",Cx,[t("a",Nx,[l("账户合并"),e(s)])]),Px,t("td",Kx,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Vx]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Bx]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Tx]),_:1}),l(),Ux]),t("td",Ax,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wx,t("td",Dx,[t("a",Yx,[l("图像渲染"),e(s)])]),Jx,t("td",Qx,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Rx]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Sx]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zx]),_:1}),l(),Fx]),t("td",Gx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xx,t("td",$x,[t("a",tp,[l("句子相似性 II"),e(s)])]),ep,t("td",lp,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[op]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[np]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[sp]),_:1}),l(),dp]),t("td",_p,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ip,t("td",rp,[t("a",cp,[l("二叉树最近的叶节点"),e(s)])]),ap,t("td",hp,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[up]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[gp]),_:1}),l(),mp]),t("td",yp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xp,t("td",pp,[t("a",bp,[l("网络延迟时间"),e(s)])]),kp,t("td",Mp,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ip]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[vp]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[wp]),_:1}),l(),Hp]),t("td",Ep,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zp,t("td",Op,[t("a",jp,[l("隔离病毒"),e(s)])]),Lp,t("td",qp,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Cp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Np]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pp]),_:1}),l(),Kp]),t("td",Vp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bp,t("td",Tp,[t("a",Up,[l("破解保险箱"),e(s)])]),Ap,t("td",Wp,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Dp]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Yp]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[Jp]),_:1})]),t("td",Qp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rp,t("td",Sp,[t("a",Zp,[l("金字塔转换矩阵"),e(s)])]),Fp,t("td",Gp,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Xp]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$p]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tb]),_:1})]),t("td",eb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lb,t("td",ob,[t("a",nb,[l("情侣牵手"),e(s)])]),sb,t("td",db,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[_b]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ib]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[rb]),_:1}),l(),cb]),t("td",ab,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hb,t("td",ub,[t("a",fb,[l("水位上升的泳池中游泳"),e(s)])]),gb,t("td",mb,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xb]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[pb]),_:1}),l(),bb]),t("td",kb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mb,t("td",Ib,[t("a",vb,[l("二叉搜索树节点最小距离"),e(s)])]),t("td",wb,[t("a",Hb,[l("[✓]"),e(s)])]),t("td",Eb,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[zb]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ob]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[jb]),_:1}),l(),Lb]),t("td",qb,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Cb,t("td",Nb,[t("a",Pb,[l("判断二分图"),e(s)])]),Kb,t("td",Vb,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Bb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Tb]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ub]),_:1}),l(),Ab]),t("td",Wb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Db,t("td",Yb,[t("a",Jb,[l("K 站中转内最便宜的航班"),e(s)])]),Qb,t("td",Rb,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Sb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Zb]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Fb]),_:1}),l(),Gb]),t("td",Xb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$b,t("td",t0,[t("a",e0,[l("所有可能的路径"),e(s)])]),l0,t("td",o0,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[n0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[s0]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[d0]),_:1}),l(),_0]),t("td",i0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r0,t("td",c0,[t("a",a0,[l("找到最终的安全状态"),e(s)])]),h0,t("td",u0,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[f0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[g0]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[m0]),_:1}),l(),y0]),t("td",x0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p0,t("td",b0,[t("a",k0,[l("二叉树剪枝"),e(s)])]),M0,t("td",I0,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[v0]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[w0]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[H0]),_:1})]),t("td",E0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z0,t("td",O0,[t("a",j0,[l("最大人工岛"),e(s)])]),L0,t("td",q0,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[C0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[N0]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[P0]),_:1}),l(),K0]),t("td",V0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B0,t("td",T0,[t("a",U0,[l("树中距离之和"),e(s)])]),A0,t("td",W0,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[D0]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Y0]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[J0]),_:1}),l(),Q0]),t("td",R0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[S0,t("td",Z0,[t("a",F0,[l("相似字符串组"),e(s)])]),G0,t("td",X0,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[t4]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[e4]),_:1}),l(),l4]),t("td",o4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n4,t("td",s4,[t("a",d4,[l("钥匙和房间"),e(s)])]),_4,t("td",i4,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[r4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[c4]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[a4]),_:1})]),t("td",h4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u4,t("td",f4,[t("a",g4,[l("喧闹和富有"),e(s)])]),m4,t("td",y4,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[x4]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[p4]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[b4]),_:1}),l(),k4]),t("td",M4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I4,t("td",v4,[t("a",w4,[l("二叉树中所有距离为 K 的结点"),e(s)])]),H4,t("td",E4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[z4]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[O4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[j4]),_:1}),l(),L4]),t("td",q4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C4,t("td",N4,[t("a",P4,[l("具有所有最深节点的最小子树"),e(s)])]),K4,t("td",V4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[B4]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[T4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[U4]),_:1}),l(),A4]),t("td",W4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D4,t("td",Y4,[t("a",J4,[l("叶子相似的树"),e(s)])]),Q4,t("td",R4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[S4]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Z4]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[F4]),_:1})]),t("td",G4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[X4,t("td",$4,[t("a",t8,[l("可能的二分法"),e(s)])]),e8,t("td",l8,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[o8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[n8]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[s8]),_:1}),l(),d8]),t("td",_8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i8,t("td",r8,[t("a",c8,[l("递增顺序搜索树"),e(s)])]),a8,t("td",h8,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[u8]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[f8]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[g8]),_:1}),l(),m8]),t("td",y8,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[x8,t("td",p8,[t("a",b8,[l("尽量减少恶意软件的传播"),e(s)])]),k8,t("td",M8,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[I8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[v8]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[w8]),_:1}),l(),H8]),t("td",E8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z8,t("td",O8,[t("a",j8,[l("尽量减少恶意软件的传播 II"),e(s)])]),L8,t("td",q8,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[C8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[N8]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[P8]),_:1}),l(),K8]),t("td",V8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B8,t("td",T8,[t("a",U8,[l("最短的桥"),e(s)])]),A8,t("td",W8,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[D8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Y8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[J8]),_:1}),l(),Q8]),t("td",R8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S8,t("td",Z8,[t("a",F8,[l("二叉搜索树的范围和"),e(s)])]),G8,t("td",X8,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$8]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[t5]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[e5]),_:1}),l(),l5]),t("td",o5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[n5,t("td",s5,[t("a",d5,[l("移除最多的同行或同列石头"),e(s)])]),_5,t("td",i5,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[r5]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[c5]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[a5]),_:1}),l(),h5]),t("td",u5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f5,t("td",g5,[t("a",m5,[l("翻转等价二叉树"),e(s)])]),y5,t("td",x5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[p5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[b5]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[k5]),_:1})]),t("td",M5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I5,t("td",v5,[t("a",w5,[l("由斜杠划分区域"),e(s)])]),H5,t("td",E5,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[z5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[O5]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[j5]),_:1}),l(),L5]),t("td",q5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C5,t("td",N5,[t("a",P5,[l("单值二叉树"),e(s)])]),K5,t("td",V5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[B5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[T5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[U5]),_:1}),l(),A5]),t("td",W5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[D5,t("td",Y5,[t("a",J5,[l("监控二叉树"),e(s)])]),Q5,t("td",R5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[S5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Z5]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[F5]),_:1}),l(),G5]),t("td",X5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$5,t("td",t6,[t("a",e6,[l("翻转二叉树以匹配先序遍历"),e(s)])]),l6,t("td",o6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[n6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[s6]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[d6]),_:1})]),t("td",_6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i6,t("td",r6,[t("a",c6,[l("在二叉树中分配硬币"),e(s)])]),a6,t("td",h6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[u6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[f6]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[g6]),_:1})]),t("td",m6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y6,t("td",x6,[t("a",p6,[l("二叉树的垂序遍历"),e(s)])]),b6,t("td",k6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[M6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[I6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[v6]),_:1}),l(),w6]),t("td",H6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E6,t("td",z6,[t("a",O6,[l("从叶结点开始的最小字符串"),e(s)])]),j6,t("td",L6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[q6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[C6]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[N6]),_:1}),l(),P6]),t("td",K6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V6,t("td",B6,[t("a",T6,[l("二叉树的堂兄弟节点"),e(s)])]),U6,t("td",A6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[W6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[D6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Y6]),_:1}),l(),J6]),t("td",Q6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[R6,t("td",S6,[t("a",Z6,[l("飞地的数量"),e(s)])]),F6,t("td",G6,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[X6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$6]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[t7]),_:1}),l(),e7]),t("td",l7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o7,t("td",n7,[t("a",s7,[l("从根到叶的二进制数之和"),e(s)])]),d7,t("td",_7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[i7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[r7]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[c7]),_:1})]),t("td",a7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[h7,t("td",u7,[t("a",f7,[l("节点与其祖先之间的最大差值"),e(s)])]),g7,t("td",m7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[y7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[x7]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[p7]),_:1})]),t("td",b7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k7,t("td",M7,[t("a",I7,[l("从先序遍历还原二叉树"),e(s)])]),v7,t("td",w7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[H7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[E7]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[z7]),_:1}),l(),O7]),t("td",j7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L7,t("td",q7,[t("a",C7,[l("边界着色"),e(s)])]),N7,t("td",P7,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[K7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[V7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[B7]),_:1}),l(),T7]),t("td",U7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A7,t("td",W7,[t("a",D7,[l("逃离大迷宫"),e(s)])]),Y7,t("td",J7,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Q7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[R7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[S7]),_:1}),l(),Z7]),t("td",F7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[G7,t("td",X7,[t("a",$7,[l("从二叉搜索树到更大和树"),e(s)])]),t9,t("td",e9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[l9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[o9]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[n9]),_:1}),l(),s9]),t("td",d9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_9,t("td",i9,[t("a",r9,[l("不邻接植花"),e(s)])]),c9,t("td",a9,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[h9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[u9]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[f9]),_:1})]),t("td",g9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m9,t("td",y9,[t("a",x9,[l("根到叶路径上的不足节点"),e(s)])]),p9,t("td",b9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[k9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[M9]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[I9]),_:1})]),t("td",v9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w9,t("td",H9,[t("a",E9,[l("得分最高的路径"),e(s)])]),z9,t("td",O9,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[j9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[L9]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[q9]),_:1}),l(),C9]),t("td",N9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P9,t("td",K9,[t("a",V9,[l("删点成林"),e(s)])]),B9,t("td",T9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[U9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[A9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[W9]),_:1}),l(),D9]),t("td",Y9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J9,t("td",Q9,[t("a",R9,[l("子树的最大平均值"),e(s)])]),S9,t("td",Z9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[F9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[G9]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[X9]),_:1})]),t("td",$9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tk,t("td",ek,[t("a",lk,[l("最深叶节点的最近公共祖先"),e(s)])]),ok,t("td",nk,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[sk]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_k]),_:1}),l(),ik]),t("td",rk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ck,t("td",ak,[t("a",hk,[l("二叉树着色游戏"),e(s)])]),uk,t("td",fk,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[gk]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[mk]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[yk]),_:1})]),t("td",xk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pk,t("td",bk,[t("a",kk,[l("最大层内元素和"),e(s)])]),Mk,t("td",Ik,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vk]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Hk]),_:1}),l(),Ek]),t("td",zk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ok,t("td",jk,[t("a",Lk,[l("查找集群内的关键连接"),e(s)])]),qk,t("td",Ck,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Nk]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Pk]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[Kk]),_:1})]),t("td",Vk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bk,t("td",Tk,[t("a",Uk,[l("交换字符串中的元素"),e(s)])]),Ak,t("td",Wk,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Dk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Yk]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Jk]),_:1}),l(),Qk]),t("td",Rk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sk,t("td",Zk,[t("a",Fk,[l("项目管理"),e(s)])]),Gk,t("td",Xk,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$k]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tM]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[eM]),_:1}),l(),lM]),t("td",oM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nM,t("td",sM,[t("a",dM,[l("查找两棵二叉搜索树之和"),e(s)])]),_M,t("td",iM,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[rM]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[cM]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[aM]),_:1}),l(),hM]),t("td",uM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fM,t("td",gM,[t("a",mM,[l("删除子文件夹"),e(s)])]),yM,t("td",xM,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pM]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[bM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kM]),_:1}),l(),MM]),t("td",IM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vM,t("td",wM,[t("a",HM,[l("网络爬虫"),e(s)])]),EM,t("td",zM,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[OM]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[jM]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[LM]),_:1}),l(),qM]),t("td",CM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NM,t("td",PM,[t("a",KM,[l("多线程网页爬虫"),e(s)])]),VM,t("td",BM,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[TM]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[UM]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[AM]),_:1})]),t("td",WM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DM,t("td",YM,[t("a",JM,[l("树的直径"),e(s)])]),QM,t("td",RM,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[SM]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ZM]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[FM]),_:1}),l(),GM]),t("td",XM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$M,t("td",tI,[t("a",eI,[l("统计封闭岛屿的数目"),e(s)])]),lI,t("td",oI,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sI]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[dI]),_:1}),l(),_I]),t("td",iI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rI,t("td",cI,[t("a",aI,[l("最小公共区域"),e(s)])]),hI,t("td",uI,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[fI]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[gI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[mI]),_:1}),l(),yI]),t("td",xI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pI,t("td",bI,[t("a",kI,[l("在受污染的二叉树中查找元素"),e(s)])]),MI,t("td",II,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vI]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[HI]),_:1}),l(),EI]),t("td",zI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OI,t("td",jI,[t("a",LI,[l("统计参与通信的服务器"),e(s)])]),qI,t("td",CI,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[NI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[PI]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[KI]),_:1}),l(),VI]),t("td",BI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TI,t("td",UI,[t("a",AI,[l("删除树节点"),e(s)])]),WI,t("td",DI,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[YI]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[JI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[QI]),_:1}),l(),RI]),t("td",SI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZI,t("td",FI,[t("a",GI,[l("层数最深叶子节点的和"),e(s)])]),XI,t("td",$I,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[tv]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ev]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[lv]),_:1}),l(),ov]),t("td",nv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sv,t("td",dv,[t("a",_v,[l("两棵二叉搜索树中的所有元素"),e(s)])]),iv,t("td",rv,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[cv]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[av]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[hv]),_:1}),l(),uv]),t("td",fv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gv,t("td",mv,[t("a",yv,[l("跳跃游戏 III"),e(s)])]),xv,t("td",pv,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[bv]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kv]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Mv]),_:1})]),t("td",Iv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vv,t("td",wv,[t("a",Hv,[l("祖父节点值为偶数的节点和"),e(s)])]),Ev,t("td",zv,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ov]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jv]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Lv]),_:1}),l(),qv]),t("td",Cv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nv,t("td",Pv,[t("a",Kv,[l("连通网络的操作次数"),e(s)])]),Vv,t("td",Bv,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Tv]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Uv]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Av]),_:1}),l(),Wv]),t("td",Dv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yv,t("td",Jv,[t("a",Qv,[l("删除给定值的叶子节点"),e(s)])]),Rv,t("td",Sv,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Zv]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Fv]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Gv]),_:1})]),t("td",Xv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$v,t("td",tw,[t("a",ew,[l("分裂二叉树的最大乘积"),e(s)])]),lw,t("td",ow,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[nw]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sw]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[dw]),_:1})]),t("td",_w,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iw,t("td",rw,[t("a",cw,[l("验证二叉树"),e(s)])]),aw,t("td",hw,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[uw]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fw]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[gw]),_:1}),l(),mw]),t("td",yw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xw,t("td",pw,[t("a",bw,[l("二叉树中的链表"),e(s)])]),kw,t("td",Mw,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Iw]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vw]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[ww]),_:1}),l(),Hw]),t("td",Ew,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zw,t("td",Ow,[t("a",jw,[l("二叉树中的最长交错路径"),e(s)])]),Lw,t("td",qw,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Cw]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Nw]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Pw]),_:1}),l(),Kw]),t("td",Vw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bw,t("td",Tw,[t("a",Uw,[l("二叉搜索子树的最大键值和"),e(s)])]),Aw,t("td",Ww,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Dw]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Yw]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Jw]),_:1}),l(),Qw]),t("td",Rw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sw,t("td",Zw,[t("a",Fw,[l("通知所有员工所需的时间"),e(s)])]),Gw,t("td",Xw,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$w]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[eH]),_:1})]),t("td",lH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oH,t("td",nH,[t("a",sH,[l("T 秒后青蛙的位置"),e(s)])]),dH,t("td",_H,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[iH]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cH]),_:1}),l(),aH]),t("td",hH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uH,t("td",fH,[t("a",gH,[l("找出克隆二叉树中的相同节点"),e(s)])]),mH,t("td",yH,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[xH]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bH]),_:1}),l(),kH]),t("td",MH,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[IH,t("td",vH,[t("a",wH,[l("将二叉搜索树变平衡"),e(s)])]),HH,t("td",EH,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[zH]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[OH]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jH]),_:1}),l(),LH]),t("td",qH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CH,t("td",NH,[t("a",PH,[l("检查网格中是否存在有效路径"),e(s)])]),KH,t("td",VH,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[BH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[TH]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[UH]),_:1}),l(),AH]),t("td",WH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DH,t("td",YH,[t("a",JH,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(s)])]),QH,t("td",RH,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[SH]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ZH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[FH]),_:1}),l(),GH]),t("td",XH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$H,t("td",tE,[t("a",eE,[l("收集树上所有苹果的最少时间"),e(s)])]),lE,t("td",oE,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[nE]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[dE]),_:1}),l(),_E]),t("td",iE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rE,t("td",cE,[t("a",aE,[l("统计二叉树中好节点的数目"),e(s)])]),hE,t("td",uE,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[fE]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[gE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[mE]),_:1}),l(),yE]),t("td",xE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pE,t("td",bE,[t("a",kE,[l("二叉树中的伪回文路径"),e(s)])]),ME,t("td",IE,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[vE]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[wE]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[HE]),_:1}),l(),EE]),t("td",zE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OE,t("td",jE,[t("a",LE,[l("课程表 IV"),e(s)])]),qE,t("td",CE,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[NE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[PE]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[KE]),_:1}),l(),VE]),t("td",BE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TE,t("td",UE,[t("a",AE,[l("重新规划路线"),e(s)])]),WE,t("td",DE,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[YE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[JE]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[QE]),_:1})]),t("td",RE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SE,t("td",ZE,[t("a",FE,[l("寻找所有的独生节点"),e(s)])]),GE,t("td",XE,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$E]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tz]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ez]),_:1}),l(),lz]),t("td",oz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[nz,t("td",sz,[t("a",dz,[l("树节点的第 K 个祖先"),e(s)])]),_z,t("td",iz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[rz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cz]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[az]),_:1}),l(),hz]),t("td",uz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fz,t("td",gz,[t("a",mz,[l("克隆含随机指针的二叉树"),e(s)])]),yz,t("td",xz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[pz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[bz]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kz]),_:1}),l(),Mz]),t("td",Iz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vz,t("td",wz,[t("a",Hz,[l("克隆 N 叉树"),e(s)])]),Ez,t("td",zz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Oz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jz]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Lz]),_:1}),l(),qz]),t("td",Cz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nz,t("td",Pz,[t("a",Kz,[l("找到 N 叉树的根节点"),e(s)])]),Vz,t("td",Bz,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Tz]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Uz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Az]),_:1}),l(),Wz]),t("td",Dz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yz,t("td",Jz,[t("a",Qz,[l("移动 N 叉树的子树"),e(s)])]),Rz,t("td",Sz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Zz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Fz]),_:1})]),t("td",Gz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xz,t("td",$z,[t("a",tO,[l("子树中标签相同的节点数"),e(s)])]),eO,t("td",lO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[oO]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sO]),_:1}),l(),dO]),t("td",_O,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iO,t("td",rO,[t("a",cO,[l("N 叉树的直径"),e(s)])]),t("td",aO,[t("a",hO,[l("[✓]"),e(s)])]),t("td",uO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[fO]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[gO]),_:1})]),t("td",mO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yO,t("td",xO,[t("a",pO,[l("好叶子节点对的数量"),e(s)])]),bO,t("td",kO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[MO]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[IO]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[vO]),_:1})]),t("td",wO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HO,t("td",EO,[t("a",zO,[l("二维网格图中探测环"),e(s)])]),OO,t("td",jO,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[LO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[qO]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[CO]),_:1}),l(),NO]),t("td",PO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KO,t("td",VO,[t("a",BO,[l("使陆地分离的最少天数"),e(s)])]),TO,t("td",UO,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[AO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[WO]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[DO]),_:1}),l(),YO]),t("td",JO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QO,t("td",RO,[t("a",SO,[l("王位继承顺序"),e(s)])]),ZO,t("td",FO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[GO]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[XO]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[$O]),_:1}),l(),tj]),t("td",ej,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lj,t("td",oj,[t("a",nj,[l("检查两棵二叉表达式树是否等价"),e(s)])]),sj,t("td",dj,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_j]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ij]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[rj]),_:1}),l(),cj]),t("td",aj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hj,t("td",uj,[t("a",fj,[l("执行操作后字典序最小的字符串"),e(s)])]),gj,t("td",mj,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yj]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xj]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[pj]),_:1}),l(),bj]),t("td",kj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mj,t("td",Ij,[t("a",vj,[l("最小体力消耗路径"),e(s)])]),wj,t("td",Hj,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ej]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[zj]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Oj]),_:1}),l(),jj]),t("td",Lj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qj,t("td",Cj,[t("a",Nj,[l("二叉树的最近公共祖先 II"),e(s)])]),Pj,t("td",Kj,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Vj]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Bj]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Tj]),_:1})]),t("td",Uj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Aj,t("td",Wj,[t("a",Dj,[l("纠正二叉树"),e(s)])]),Yj,t("td",Jj,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qj]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Rj]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Sj]),_:1}),l(),Zj]),t("td",Fj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gj,t("td",Xj,[t("a",$j,[l("改变二叉树的根节点"),e(s)])]),tL,t("td",eL,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[lL]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[oL]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[nL]),_:1})]),t("td",sL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dL,t("td",_L,[t("a",iL,[l("二叉树的最近公共祖先 IV"),e(s)])]),rL,t("td",cL,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[aL]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[hL]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[uL]),_:1}),l(),fL]),t("td",gL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mL,t("td",yL,[t("a",xL,[l("执行交换操作后的最小汉明距离"),e(s)])]),pL,t("td",bL,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kL]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ML]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[IL]),_:1})]),t("td",vL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wL,t("td",HL,[t("a",EL,[l("找到二叉树中的距离"),e(s)])]),zL,t("td",OL,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[jL]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[LL]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[qL]),_:1}),l(),CL]),t("td",NL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PL,t("td",KL,[t("a",VL,[l("从相邻元素对还原数组"),e(s)])]),BL,t("td",TL,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[UL]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[AL]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[WL]),_:1})]),t("td",DL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YL,t("td",JL,[t("a",QL,[l("互质树"),e(s)])]),RL,t("td",SL,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ZL]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[FL]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[GL]),_:1}),l(),XL]),t("td",$L,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tq,t("td",eq,[t("a",lq,[l("未知网格中的最短路径"),e(s)])]),oq,t("td",nq,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sq]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[dq]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[_q]),_:1}),l(),iq]),t("td",rq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cq,t("td",aq,[t("a",hq,[l("隐藏网格下的最小消耗路径"),e(s)])]),uq,t("td",fq,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[gq]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[mq]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[yq]),_:1}),l(),xq]),t("td",pq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bq,t("td",kq,[t("a",Mq,[l("最多邀请的个数"),e(s)])]),Iq,t("td",vq,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wq]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Hq]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Eq]),_:1}),l(),zq]),t("td",Oq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jq,t("td",Lq,[t("a",qq,[l("包含所有前缀的最长单词"),e(s)])]),Cq,t("td",Nq,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Pq]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Kq]),_:1})]),t("td",Vq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bq,t("td",Tq,[t("a",Uq,[l("统计子岛屿"),e(s)])]),Aq,t("td",Wq,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Dq]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Yq]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Jq]),_:1}),l(),Qq]),t("td",Rq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sq,t("td",Zq,[t("a",Fq,[l("合并多棵二叉搜索树"),e(s)])]),Gq,t("td",Xq,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$q]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tC]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[eC]),_:1}),l(),lC]),t("td",oC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nC,t("td",sC,[t("a",dC,[l("查询最大基因差"),e(s)])]),_C,t("td",iC,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[rC]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cC]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[aC]),_:1}),l(),hC]),t("td",uC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fC,t("td",gC,[t("a",mC,[l("你能穿过矩阵的最后一天"),e(s)])]),yC,t("td",xC,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pC]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bC]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[kC]),_:1}),l(),MC]),t("td",IC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vC,t("td",wC,[t("a",HC,[l("寻找图中是否存在路径"),e(s)])]),EC,t("td",zC,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[OC]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[jC]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[LC]),_:1}),l(),qC]),t("td",CC,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[NC,t("td",PC,[t("a",KC,[l("值等于子节点值之和的节点数量"),e(s)])]),VC,t("td",BC,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[TC]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[UC]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[AC]),_:1})]),t("td",WC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DC,t("td",YC,[t("a",JC,[l("找到所有的农场组"),e(s)])]),QC,t("td",RC,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[SC]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ZC]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FC]),_:1}),l(),GC]),t("td",XC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$C,t("td",tN,[t("a",eN,[l("树上的操作"),e(s)])]),lN,t("td",oN,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[nN]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sN]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[dN]),_:1}),l(),_N]),t("td",iN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rN,t("td",cN,[t("a",aN,[l("每棵子树内缺失的最小基因值"),e(s)])]),hN,t("td",uN,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[fN]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[gN]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[mN]),_:1}),l(),yN]),t("td",xN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pN,t("td",bN,[t("a",kN,[l("统计最高分的节点数目"),e(s)])]),MN,t("td",IN,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vN]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wN]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[HN]),_:1}),l(),EN]),t("td",zN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ON,t("td",jN,[t("a",LN,[l("找出知晓秘密的所有专家"),e(s)])]),qN,t("td",CN,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[NN]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[PN]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[KN]),_:1}),l(),VN]),t("td",BN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TN,t("td",UN,[t("a",AN,[l("从二叉树一个节点到另一个节点每一步的方向"),e(s)])]),WN,t("td",DN,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[YN]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[JN]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[QN]),_:1}),l(),RN]),t("td",SN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZN,t("td",FN,[t("a",GN,[l("合法重新排列数对"),e(s)])]),XN,t("td",$N,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tP]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[eP]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[lP]),_:1})]),t("td",oP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nP,t("td",sP,[t("a",dP,[l("引爆最多的炸弹"),e(s)])]),_P,t("td",iP,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rP]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cP]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[aP]),_:1}),l(),hP]),t("td",uP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fP,t("td",gP,[t("a",mP,[l("参加会议的最多员工数"),e(s)])]),yP,t("td",xP,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pP]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[bP]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[kP]),_:1})]),t("td",MP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IP,t("td",vP,[t("a",wP,[l("有向无环图中一个节点的所有祖先"),e(s)])]),HP,t("td",EP,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zP]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[OP]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[jP]),_:1}),l(),LP]),t("td",qP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CP,t("td",NP,[t("a",PP,[l("无向图中到环的距离"),e(s)])]),KP,t("td",VP,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[BP]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[TP]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[UP]),_:1}),l(),AP]),t("td",WP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DP,t("td",YP,[t("a",JP,[l("相邻字符不同的最长路径"),e(s)])]),QP,t("td",RP,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[SP]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ZP]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[FP]),_:1}),l(),GP]),t("td",XP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$P,t("td",tK,[t("a",eK,[l("统计值等于子树平均值的节点数"),e(s)])]),lK,t("td",oK,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[nK]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sK]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[dK]),_:1})]),t("td",_K,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iK,t("td",rK,[t("a",cK,[l("树中最接近路径的节点"),e(s)])]),aK,t("td",hK,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[uK]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fK]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[gK]),_:1}),l(),mK]),t("td",yK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xK,t("td",pK,[t("a",bK,[l("检查方程中的矛盾之处"),e(s)])]),kK,t("td",MK,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[IK]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[vK]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[wK]),_:1}),l(),HK]),t("td",EK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zK,t("td",OK,[t("a",jK,[l("二叉树中得到结果所需的最少翻转次数"),e(s)])]),LK,t("td",qK,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[CK]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[NK]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[PK]),_:1}),l(),KK]),t("td",VK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BK,t("td",TK,[t("a",UK,[l("统计无向图中无法互相到达点对数"),e(s)])]),AK,t("td",WK,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[DK]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[YK]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[JK]),_:1}),l(),QK]),t("td",RK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SK,t("td",ZK,[t("a",FK,[l("从树中删除边的最小分数"),e(s)])]),GK,t("td",XK,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[$K]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[tV]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[eV]),_:1}),l(),lV]),t("td",oV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nV,t("td",sV,[t("a",dV,[l("网格图中递增路径的数目"),e(s)])]),_V,t("td",iV,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rV]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cV]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[aV]),_:1}),l(),hV]),t("td",uV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fV,t("td",gV,[t("a",mV,[l("计算布尔二叉树的值"),e(s)])]),yV,t("td",xV,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[pV]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[bV]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[kV]),_:1})]),t("td",MV,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[IV,t("td",vV,[t("a",wV,[l("找到离给定两个节点最近的节点"),e(s)])]),HV,t("td",EV,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zV]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[OV]),_:1})]),t("td",jV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LV,t("td",qV,[t("a",CV,[l("图中的最长环"),e(s)])]),NV,t("td",PV,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[KV]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[VV]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[BV]),_:1})]),t("td",TV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[UV,t("td",AV,[t("a",WV,[l("受限条件下可到达节点的数目"),e(s)])]),DV,t("td",YV,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[JV]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[QV]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[RV]),_:1}),l(),SV]),t("td",ZV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FV,t("td",GV,[t("a",XV,[l("选择边来最大化树的得分"),e(s)])]),$V,t("td",tB,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[eB]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[lB]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[oB]),_:1})]),t("td",nB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sB,t("td",dB,[t("a",_B,[l("感染二叉树需要的总时间"),e(s)])]),iB,t("td",rB,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[cB]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[aB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hB]),_:1}),l(),uB]),t("td",fB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gB,t("td",mB,[t("a",yB,[l("反转二叉树的奇数层"),e(s)])]),xB,t("td",pB,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[bB]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[MB]),_:1}),l(),IB]),t("td",vB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wB,t("td",HB,[t("a",EB,[l("创建价值相同的连通块"),e(s)])]),zB,t("td",OB,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[jB]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[LB]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qB]),_:1}),l(),CB]),t("td",NB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PB,t("td",KB,[t("a",VB,[l("值为 1 的节点数"),e(s)])]),BB,t("td",TB,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[UB]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[AB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[WB]),_:1}),l(),DB]),t("td",YB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JB,t("td",QB,[t("a",RB,[l("移除子树后的二叉树高度"),e(s)])]),SB,t("td",ZB,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[FB]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[GB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[XB]),_:1}),l(),$B]),t("td",tT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eT,t("td",lT,[t("a",oT,[l("树上最大得分和路径"),e(s)])]),nT,t("td",sT,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[dT]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_T]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[iT]),_:1}),l(),rT]),t("td",cT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aT,t("td",hT,[t("a",uT,[l("二叉搜索树最近节点查询"),e(s)])]),fT,t("td",gT,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[mT]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yT]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[xT]),_:1}),l(),pT]),t("td",bT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kT,t("td",MT,[t("a",IT,[l("到达首都的最少油耗"),e(s)])]),vT,t("td",wT,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[HT]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ET]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[zT]),_:1}),l(),OT]),t("td",jT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LT,t("td",qT,[t("a",CT,[l("两个不重叠子树的最大异或值"),e(s)])]),NT,t("td",PT,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[KT]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[VT]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[BT]),_:1}),l(),TT]),t("td",UT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[AT,t("td",WT,[t("a",DT,[l("两个城市间路径的最小分数"),e(s)])]),YT,t("td",JT,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[QT]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[RT]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ST]),_:1}),l(),ZT]),t("td",FT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GT,t("td",XT,[t("a",$T,[l("最大价值和与最小价值和的差值"),e(s)])]),tU,t("td",eU,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[lU]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[oU]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nU]),_:1}),l(),sU]),t("td",dU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_U,t("td",iU,[t("a",rU,[l("二进制矩阵中翻转最多一次使路径不连通"),e(s)])]),cU,t("td",aU,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[hU]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[uU]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fU]),_:1}),l(),gU]),t("td",mU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yU,t("td",xU,[t("a",pU,[l("统计可能的树根数目"),e(s)])]),bU,t("td",kU,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[MU]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[IU]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vU]),_:1}),l(),wU]),t("td",HU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[EU,t("td",zU,[t("a",OU,[l("检查骑士巡视方案"),e(s)])]),jU,t("td",LU,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[qU]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[CU]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[NU]),_:1}),l(),PU]),t("td",KU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VU,t("td",BU,[t("a",TU,[l("二叉树的堂兄弟节点 II"),e(s)])]),UU,t("td",AU,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[WU]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[DU]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[YU]),_:1}),l(),JU]),t("td",QU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RU,t("td",SU,[t("a",ZU,[l("最小化旅行的价格总和"),e(s)])]),FU,t("td",GU,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[XU]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$U]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[tA]),_:1}),l(),eA]),t("td",lA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oA,t("td",nA,[t("a",sA,[l("网格图中鱼的最大数目"),e(s)])]),dA,t("td",_A,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[iA]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[rA]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[cA]),_:1}),l(),aA]),t("td",hA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uA,t("td",fA,[t("a",gA,[l("统计完全连通分量的数量"),e(s)])]),mA,t("td",yA,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xA]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[pA]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[bA]),_:1})]),t("td",kA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MA,t("td",IA,[t("a",vA,[l("从 Rope 树中提取第 K 个字符"),e(s)])]),wA,t("td",HA,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[EA]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zA]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[OA]),_:1})]),t("td",jA,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[LA,t("td",qA,[t("a",CA,[l("数组是否表示某二叉树的前序遍历"),e(s)])]),NA,t("td",PA,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[KA]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[VA]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[BA]),_:1}),l(),TA]),t("td",UA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AA,t("td",WA,[t("a",DA,[l("特殊二叉树的高度"),e(s)])]),YA,t("td",JA,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[QA]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[RA]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[SA]),_:1}),l(),ZA]),t("td",FA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GA,t("td",XA,[t("a",$A,[l("树中可以形成回文的路径数"),e(s)])]),tW,t("td",eW,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[lW]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[oW]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nW]),_:1}),l(),sW]),t("td",dW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_W,t("td",iW,[t("a",rW,[l("计算足够大的节点数"),e(s)])]),cW,t("td",aW,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[hW]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[uW]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[fW]),_:1}),l(),gW]),t("td",mW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yW,t("td",xW,[t("a",pW,[l("所有单元格的远离程度之和"),e(s)])]),bW,t("td",kW,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[MW]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[IW]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[vW]),_:1}),l(),wW]),t("td",HW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EW,t("td",zW,[t("a",OW,[l("可以到达每一个节点的最少边反转次数"),e(s)])]),jW,t("td",LW,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[qW]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[CW]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[NW]),_:1}),l(),PW]),t("td",KW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[VW,t("td",BW,[t("a",TW,[l("统计树中的合法路径数目"),e(s)])]),UW,t("td",AW,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[WW]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[DW]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[YW]),_:1}),l(),JW]),t("td",QW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RW,t("td",SW,[t("a",ZW,[l("可以被 K 整除连通块的最大数目"),e(s)])]),FW,t("td",GW,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[XW]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$W]),_:1})]),t("td",tD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eD,t("td",lD,[t("a",oD,[l("收集所有金币可获得的最大积分"),e(s)])]),nD,t("td",sD,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[dD]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_D]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[iD]),_:1}),l(),rD]),t("td",cD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[aD,t("td",hD,[t("a",uD,[l("在树上执行操作以后得到的最大分数"),e(s)])]),fD,t("td",gD,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[mD]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yD]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[xD]),_:1})]),t("td",pD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bD,t("td",kD,[t("a",MD,[l("树中每个节点放置的金币数目"),e(s)])]),ID,t("td",vD,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[wD]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[HD]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ED]),_:1}),l(),zD]),t("td",OD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jD,t("td",LD,[t("a",qD,[l("相同颜色的最大子树"),e(s)])]),CD,t("td",ND,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[PD]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[KD]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[VD]),_:1}),l(),BD]),t("td",TD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UD,t("td",AD,[t("a",WD,[l("在带权树网络中统计可连接服务器对数目"),e(s)])]),DD,t("td",YD,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[JD]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[QD]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[RD]),_:1})]),t("td",SD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZD,t("td",FD,[t("a",GD,[l("最短路径中的边"),e(s)])]),XD,t("td",$D,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tY]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[eY]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[lY]),_:1}),l(),oY]),t("td",nY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sY,t("td",dY,[t("a",_Y,[l("找到具有最小和的树的层数"),e(s)])]),iY,t("td",rY,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[cY]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[aY]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hY]),_:1}),l(),uY]),t("td",fY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gY,t("td",mY,[t("a",yY,[l("合并两棵树后的最小直径"),e(s)])]),xY,t("td",pY,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[bY]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kY]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[MY]),_:1}),l(),IY]),t("td",vY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wY,t("td",HY,[t("a",EY,[l("判断矩形的两个角落是否可达"),e(s)])]),zY,t("td",OY,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jY]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[LY]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[qY]),_:1}),l(),CY]),t("td",NY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PY,t("td",KY,[t("a",VY,[l("标记所有节点需要的时间"),e(s)])]),BY,t("td",TY,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[UY]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[AY]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[WY]),_:1}),l(),DY]),t("td",YY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JY,t("td",QY,[t("a",RY,[l("统计好节点的数目"),e(s)])]),SY,t("td",ZY,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[FY]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[GY]),_:1})]),t("td",XY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$Y,t("td",tJ,[t("a",eJ,[l("移除可疑的方法"),e(s)])]),lJ,t("td",oJ,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nJ]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sJ]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[dJ]),_:1})]),t("td",_J,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iJ,t("td",rJ,[t("a",cJ,[l("查找树中最后标记的节点"),e(s)])]),aJ,t("td",hJ,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[uJ]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fJ]),_:1})]),t("td",gJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mJ,t("td",yJ,[t("a",xJ,[l("第 K 大的完美二叉子树的大小"),e(s)])]),t("td",pJ,[t("a",bJ,[l("[✓]"),e(s)])]),t("td",kJ,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[MJ]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[IJ]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[vJ]),_:1}),l(),wJ]),t("td",HJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EJ,t("td",zJ,[t("a",OJ,[l("传递信息"),e(s)])]),jJ,t("td",LJ,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[qJ]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[CJ]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[NJ]),_:1}),l(),PJ]),t("td",KJ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[VJ,t("td",BJ,[t("a",TJ,[l("二叉树任务调度"),e(s)])]),UJ,t("td",AJ,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[WJ]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[DJ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[YJ]),_:1}),l(),JJ]),t("td",QJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RJ,t("td",SJ,[t("a",ZJ,[l("追逐游戏"),e(s)])]),FJ,t("td",GJ,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[XJ]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$J]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[tQ]),_:1}),l(),eQ]),t("td",lQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oQ,t("td",nQ,[t("a",sQ,[l("变换的迷宫"),e(s)])]),dQ,t("td",_Q,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[iQ]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[rQ]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[cQ]),_:1}),l(),aQ]),t("td",hQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uQ,t("td",fQ,[t("a",gQ,[l("开幕式焰火"),e(s)])]),mQ,t("td",yQ,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[xQ]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pQ]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bQ]),_:1}),l(),kQ]),t("td",MQ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[IQ,t("td",vQ,[t("a",wQ,[l("自行车炫技赛场"),e(s)])]),HQ,t("td",EQ,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zQ]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[OQ]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[jQ]),_:1}),l(),LQ]),t("td",qQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CQ,t("td",NQ,[t("a",PQ,[l("弹珠游戏"),e(s)])]),KQ,t("td",VQ,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[BQ]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[TQ]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[UQ]),_:1}),l(),AQ]),t("td",WQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DQ,t("td",YQ,[t("a",JQ,[l("二叉树灯饰"),e(s)])]),QQ,t("td",RQ,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[SQ]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ZQ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[FQ]),_:1}),l(),GQ]),t("td",XQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$Q,t("td",tR,[t("a",eR,[l("装饰树"),e(s)])]),lR,t("td",oR,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[nR]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sR]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[dR]),_:1}),l(),_R]),t("td",iR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rR,t("td",cR,[t("a",aR,[l("主题空间"),e(s)])]),hR,t("td",uR,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fR]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[gR]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[mR]),_:1}),l(),yR]),t("td",xR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pR,t("td",bR,[t("a",kR,[l("机器人的运动范围"),e(s)])]),t("td",MR,[t("a",IR,[l("[✓]"),e(s)])]),t("td",vR,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wR]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[HR]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ER]),_:1})]),t("td",zR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OR,t("td",jR,[t("a",LR,[l("树的子结构"),e(s)])]),t("td",qR,[t("a",CR,[l("[✓]"),e(s)])]),t("td",NR,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[PR]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[KR]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[VR]),_:1})]),t("td",BR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TR,t("td",UR,[t("a",AR,[l("二叉树的镜像"),e(s)])]),t("td",WR,[t("a",DR,[l("[✓]"),e(s)])]),t("td",YR,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[JR]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[QR]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[RR]),_:1}),l(),SR]),t("td",ZR,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[FR,t("td",GR,[t("a",XR,[l("对称的二叉树"),e(s)])]),t("td",$R,[t("a",tS,[l("[✓]"),e(s)])]),t("td",eS,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[lS]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[oS]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[nS]),_:1}),l(),sS]),t("td",dS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[_S,t("td",iS,[t("a",rS,[l("二叉树中和为某一值的路径"),e(s)])]),t("td",cS,[t("a",aS,[l("[✓]"),e(s)])]),t("td",hS,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[uS]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fS]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[gS]),_:1}),l(),mS]),t("td",yS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xS,t("td",pS,[t("a",bS,[l("二叉搜索树与双向链表"),e(s)])]),t("td",kS,[t("a",MS,[l("[✓]"),e(s)])]),t("td",IS,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[vS]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[wS]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[HS]),_:1}),l(),ES]),t("td",zS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OS,t("td",jS,[t("a",LS,[l("序列化二叉树"),e(s)])]),t("td",qS,[t("a",CS,[l("[✓]"),e(s)])]),t("td",NS,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[PS]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[KS]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[VS]),_:1}),l(),BS]),t("td",TS,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[US,t("td",AS,[t("a",WS,[l("二叉搜索树的第k大节点"),e(s)])]),t("td",DS,[t("a",YS,[l("[✓]"),e(s)])]),t("td",JS,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[QS]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[RS]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[SS]),_:1}),l(),ZS]),t("td",FS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[GS,t("td",XS,[t("a",$S,[l("二叉树的深度"),e(s)])]),t("td",tZ,[t("a",eZ,[l("[✓]"),e(s)])]),t("td",lZ,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[oZ]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nZ]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sZ]),_:1}),l(),dZ]),t("td",_Z,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[iZ,t("td",rZ,[t("a",cZ,[l("平衡二叉树"),e(s)])]),aZ,t("td",hZ,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[uZ]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fZ]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[gZ]),_:1})]),t("td",mZ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yZ,t("td",xZ,[t("a",pZ,[l("二叉搜索树的最近公共祖先"),e(s)])]),bZ,t("td",kZ,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[MZ]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[IZ]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[vZ]),_:1}),l(),wZ]),t("td",HZ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[EZ,t("td",zZ,[t("a",OZ,[l("二叉树的最近公共祖先"),e(s)])]),jZ,t("td",LZ,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[qZ]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[CZ]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[NZ]),_:1})]),t("td",PZ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[KZ,t("td",VZ,[t("a",BZ,[l("岛屿的最大面积"),e(s)])]),TZ,t("td",UZ,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[AZ]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[WZ]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[DZ]),_:1}),l(),YZ]),t("td",JZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QZ,t("td",RZ,[t("a",SZ,[l("二分图"),e(s)])]),ZZ,t("td",FZ,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[GZ]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[XZ]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[$Z]),_:1}),l(),tF]),t("td",eF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lF,t("td",oF,[t("a",nF,[l("所有路径"),e(s)])]),sF,t("td",dF,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_F]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[iF]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[rF]),_:1}),l(),cF]),t("td",aF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hF,t("td",uF,[t("a",fF,[l("计算除法"),e(s)])]),gF,t("td",mF,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yF]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xF]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[pF]),_:1}),l(),bF]),t("td",kF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MF,t("td",IF,[t("a",vF,[l("最长递增路径"),e(s)])]),wF,t("td",HF,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[EF]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[zF]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[OF]),_:1}),l(),jF]),t("td",LF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qF,t("td",CF,[t("a",NF,[l("课程顺序"),e(s)])]),PF,t("td",KF,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[VF]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[BF]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[TF]),_:1}),l(),UF]),t("td",AF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WF,t("td",DF,[t("a",YF,[l("外星文字典"),e(s)])]),JF,t("td",QF,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[RF]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[SF]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ZF]),_:1}),l(),FF]),t("td",GF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XF,t("td",$F,[t("a",tG,[l("省份数量"),e(s)])]),eG,t("td",lG,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[oG]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[nG]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[sG]),_:1}),l(),dG]),t("td",_G,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iG,t("td",rG,[t("a",cG,[l("相似的字符串"),e(s)])]),aG,t("td",hG,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[uG]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[fG]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[gG]),_:1}),l(),mG]),t("td",yG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xG,t("td",pG,[t("a",bG,[l("多余的边"),e(s)])]),kG,t("td",MG,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[IG]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[vG]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[wG]),_:1}),l(),HG]),t("td",EG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zG,t("td",OG,[t("a",jG,[l("展平多级双向链表"),e(s)])]),LG,t("td",qG,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[CG]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[NG]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[PG]),_:1})]),t("td",KG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VG,t("td",BG,[t("a",TG,[l("二叉树每层的最大值"),e(s)])]),UG,t("td",AG,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[WG]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[DG]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[YG]),_:1}),l(),JG]),t("td",QG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RG,t("td",SG,[t("a",ZG,[l("二叉树最底层最左边的值"),e(s)])]),FG,t("td",GG,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[XG]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$G]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tX]),_:1}),l(),eX]),t("td",lX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oX,t("td",nX,[t("a",sX,[l("二叉树的右侧视图"),e(s)])]),dX,t("td",_X,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[iX]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rX]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cX]),_:1}),l(),aX]),t("td",hX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uX,t("td",fX,[t("a",gX,[l("二叉树剪枝"),e(s)])]),mX,t("td",yX,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[xX]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pX]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[bX]),_:1})]),t("td",kX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MX,t("td",IX,[t("a",vX,[l("序列化与反序列化二叉树"),e(s)])]),wX,t("td",HX,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[EX]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zX]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[OX]),_:1}),l(),jX]),t("td",LX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qX,t("td",CX,[t("a",NX,[l("从根节点到叶节点的路径数字之和"),e(s)])]),PX,t("td",KX,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[VX]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[BX]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[TX]),_:1})]),t("td",UX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AX,t("td",WX,[t("a",DX,[l("向下的路径节点之和"),e(s)])]),YX,t("td",JX,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[QX]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[RX]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[SX]),_:1})]),t("td",ZX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FX,t("td",GX,[t("a",XX,[l("节点之和最大的路径"),e(s)])]),$X,t("td",t$,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[e$]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[l$]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[o$]),_:1}),l(),n$]),t("td",s$,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d$,t("td",_$,[t("a",i$,[l("展平二叉搜索树"),e(s)])]),r$,t("td",c$,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[a$]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[h$]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[u$]),_:1}),l(),f$]),t("td",g$,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[m$,t("td",y$,[t("a",x$,[l("二叉搜索树中的中序后继"),e(s)])]),p$,t("td",b$,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[k$]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[M$]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[I$]),_:1}),l(),v$]),t("td",w$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H$,t("td",E$,[t("a",z$,[l("所有大于等于节点的值之和"),e(s)])]),O$,t("td",j$,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[L$]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[q$]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[C$]),_:1}),l(),N$]),t("td",P$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K$,t("td",V$,[t("a",B$,[l("神奇的字典"),e(s)])]),T$,t("td",U$,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[A$]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[W$]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[D$]),_:1}),l(),Y$]),t("td",J$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q$,t("td",R$,[t("a",S$,[l("分割回文子字符串"),e(s)])]),Z$,t("td",F$,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[G$]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X$]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[$$]),_:1}),l(),ttt]),t("td",ett,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ltt,t("td",ott,[t("a",ntt,[l("节点间通路"),e(s)])]),stt,t("td",dtt,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_tt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[itt]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[rtt]),_:1})]),t("td",ctt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[att,t("td",htt,[t("a",utt,[l("检查平衡性"),e(s)])]),ftt,t("td",gtt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[mtt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ytt]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[xtt]),_:1})]),t("td",ptt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[btt,t("td",ktt,[t("a",Mtt,[l("合法二叉搜索树"),e(s)])]),Itt,t("td",vtt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[wtt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Htt]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Ett]),_:1}),l(),ztt]),t("td",Ott,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jtt,t("td",Ltt,[t("a",qtt,[l("后继者"),e(s)])]),Ctt,t("td",Ntt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ptt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ktt]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Vtt]),_:1}),l(),Btt]),t("td",Ttt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Utt,t("td",Att,[t("a",Wtt,[l("首个共同祖先"),e(s)])]),Dtt,t("td",Ytt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Jtt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Qtt]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Rtt]),_:1})]),t("td",Stt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ztt,t("td",Ftt,[t("a",Gtt,[l("检查子树"),e(s)])]),Xtt,t("td",$tt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[tet]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[eet]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[oet]),_:1}),l(),net]),t("td",set,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[det,t("td",_et,[t("a",iet,[l("求和路径"),e(s)])]),ret,t("td",cet,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[aet]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[het]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[uet]),_:1})]),t("td",fet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[get,t("td",met,[t("a",yet,[l("颜色填充"),e(s)])]),xet,t("td",pet,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[bet]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ket]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Met]),_:1}),l(),Iet]),t("td",vet,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wet,t("td",Het,[t("a",Eet,[l("水域大小"),e(s)])]),zet,t("td",Oet,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jet]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Let]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[qet]),_:1}),l(),Cet]),t("td",Net,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pet,t("td",Ket,[t("a",Vet,[l("婴儿名字"),e(s)])]),Bet,t("td",Tet,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Uet]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Aet]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Wet]),_:1}),l(),Det]),t("td",Yet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jet,t("td",Qet,[t("a",Ret,[l("BiNode"),e(s)])]),Set,t("td",Zet,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Fet]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Get]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xet]),_:1}),l(),$et]),t("td",tlt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const slt=i(h,[["render",elt],["__file","depth-first-search.html.vue"]]);export{slt as default};
