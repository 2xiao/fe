import{_,r as i,o as a,c,a as t,b as e,w as l,d as o,f as u}from"./app-ynO5B_DP.js";const h={},r=t("h1",{id:"滚动哈希",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#滚动哈希","aria-hidden":"true"},"#"),o(" 滚动哈希")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),w=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),M=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),N=t("code",null,"字符串匹配",-1),E=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),z=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),K=t("code",null,"拓扑排序",-1),R=t("code",null,"最短路",-1),j=t("code",null,"强连通分量",-1),A=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),J=t("code",null,"树状数组",-1),O=t("code",null,"后缀数组",-1),P=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),it=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("span",{class:"blue"},"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),wt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),Mt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Nt=t("code",null,"数据库",-1),Et=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),zt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Kt=t("hr",null,null,-1),Rt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),jt=t("td",{style:{"text-align":"center"}},"187",-1),At={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/repeated-dna-sequences",target:"_blank",rel:"noopener noreferrer"},Tt=t("td",{style:{"text-align":"center"}},null,-1),Ft={style:{"text-align":"left"}},Gt=t("code",null,"位运算",-1),Jt=t("code",null,"哈希表",-1),Ot=t("code",null,"字符串",-1),Pt=t("code",null,"3+",-1),Qt={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"214",-1),Ut={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"字符串",-1),$t=t("code",null,"字符串匹配",-1),te=t("code",null,"哈希函数",-1),ee=t("code",null,"1+",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"718",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},_e=t("code",null,"数组",-1),ae=t("code",null,"二分查找",-1),ce=t("code",null,"动态规划",-1),ue=t("code",null,"3+",-1),he={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"1044",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/longest-duplicate-substring",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},xe=t("code",null,"字符串",-1),pe=t("code",null,"二分查找",-1),be=t("code",null,"后缀数组",-1),ke=t("code",null,"3+",-1),we={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"center"}},"1062",-1),He={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},null,-1),qe={style:{"text-align":"left"}},Ne=t("code",null,"字符串",-1),Ee=t("code",null,"二分查找",-1),Le=t("code",null,"动态规划",-1),Ve=t("code",null,"3+",-1),ze={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"1147",-1),Ce={style:{"text-align":"left"}},Ke={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},Re=t("td",{style:{"text-align":"center"}},null,-1),je={style:{"text-align":"left"}},Ae=t("code",null,"贪心",-1),De=t("code",null,"双指针",-1),Te=t("code",null,"字符串",-1),Fe=t("code",null,"3+",-1),Ge={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"1316",-1),Oe={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/distinct-echo-substrings",target:"_blank",rel:"noopener noreferrer"},Qe=t("td",{style:{"text-align":"center"}},null,-1),Se={style:{"text-align":"left"}},Ue=t("code",null,"字典树",-1),We=t("code",null,"字符串",-1),Xe=t("code",null,"哈希函数",-1),Ye=t("code",null,"1+",-1),Ze={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"1392",-1),to={style:{"text-align":"left"}},eo={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},oo=t("td",{style:{"text-align":"center"}},null,-1),lo={style:{"text-align":"left"}},no=t("code",null,"字符串",-1),so=t("code",null,"字符串匹配",-1),io=t("code",null,"哈希函数",-1),_o=t("code",null,"1+",-1),ao={style:{"text-align":"left"}},co=t("td",{style:{"text-align":"center"}},"1461",-1),uo={style:{"text-align":"left"}},ho={href:"https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k",target:"_blank",rel:"noopener noreferrer"},ro=t("td",{style:{"text-align":"center"}},null,-1),fo={style:{"text-align":"left"}},go=t("code",null,"位运算",-1),mo=t("code",null,"哈希表",-1),yo=t("code",null,"字符串",-1),xo=t("code",null,"2+",-1),po={style:{"text-align":"left"}},bo=t("td",{style:{"text-align":"center"}},"1554",-1),ko={style:{"text-align":"left"}},wo={href:"https://leetcode.com/problems/strings-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},Io=t("td",{style:{"text-align":"center"}},null,-1),Ho={style:{"text-align":"left"}},vo=t("code",null,"哈希表",-1),Mo=t("code",null,"字符串",-1),qo=t("code",null,"哈希函数",-1),No=t("code",null,"1+",-1),Eo={style:{"text-align":"left"}},Lo=t("td",{style:{"text-align":"center"}},"1698",-1),Vo={style:{"text-align":"left"}},zo={href:"https://leetcode.com/problems/number-of-distinct-substrings-in-a-string",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},null,-1),Co={style:{"text-align":"left"}},Ko=t("code",null,"字典树",-1),Ro=t("code",null,"字符串",-1),jo=t("code",null,"后缀数组",-1),Ao=t("code",null,"2+",-1),Do={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"1923",-1),Fo={style:{"text-align":"left"}},Go={href:"https://leetcode.com/problems/longest-common-subpath",target:"_blank",rel:"noopener noreferrer"},Jo=t("td",{style:{"text-align":"center"}},null,-1),Oo={style:{"text-align":"left"}},Po=t("code",null,"数组",-1),Qo=t("code",null,"二分查找",-1),So=t("code",null,"后缀数组",-1),Uo=t("code",null,"2+",-1),Wo={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"1960",-1),Yo={style:{"text-align":"left"}},Zo={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},$o=t("td",{style:{"text-align":"center"}},null,-1),tl={style:{"text-align":"left"}},el=t("code",null,"字符串",-1),ol=t("code",null,"哈希函数",-1),ll=t("code",null,"滚动哈希",-1),nl={style:{"text-align":"left"}},sl=t("td",{style:{"text-align":"center"}},"2156",-1),dl={style:{"text-align":"left"}},il={href:"https://leetcode.com/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},_l=t("td",{style:{"text-align":"center"}},null,-1),al={style:{"text-align":"left"}},cl=t("code",null,"字符串",-1),ul=t("code",null,"滑动窗口",-1),hl=t("code",null,"哈希函数",-1),rl=t("code",null,"1+",-1),fl={style:{"text-align":"left"}},gl=t("td",{style:{"text-align":"center"}},"2168",-1),ml={style:{"text-align":"left"}},yl={href:"https://leetcode.com/problems/unique-substrings-with-equal-digit-frequency",target:"_blank",rel:"noopener noreferrer"},xl=t("td",{style:{"text-align":"center"}},null,-1),pl={style:{"text-align":"left"}},bl=t("code",null,"哈希表",-1),kl=t("code",null,"字符串",-1),wl=t("code",null,"计数",-1),Il=t("code",null,"2+",-1),Hl={style:{"text-align":"left"}},vl=t("td",{style:{"text-align":"center"}},"2223",-1),Ml={style:{"text-align":"left"}},ql={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},Nl=t("td",{style:{"text-align":"center"}},null,-1),El={style:{"text-align":"left"}},Ll=t("code",null,"字符串",-1),Vl=t("code",null,"二分查找",-1),zl=t("code",null,"字符串匹配",-1),Bl=t("code",null,"3+",-1),Cl={style:{"text-align":"left"}},Kl=t("td",{style:{"text-align":"center"}},"2261",-1),Rl={style:{"text-align":"left"}},jl={href:"https://leetcode.com/problems/k-divisible-elements-subarrays",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"center"}},Dl={href:"/problem/2261",target:"_blank",rel:"noopener noreferrer"},Tl={style:{"text-align":"left"}},Fl=t("code",null,"字典树",-1),Gl=t("code",null,"数组",-1),Jl=t("code",null,"哈希表",-1),Ol=t("code",null,"3+",-1),Pl={style:{"text-align":"left"}},Ql=t("td",{style:{"text-align":"center"}},"2430",-1),Sl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},null,-1),Xl={style:{"text-align":"left"}},Yl=t("code",null,"字符串",-1),Zl=t("code",null,"动态规划",-1),$l=t("code",null,"字符串匹配",-1),tn=t("code",null,"2+",-1),en={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"3006",-1),ln={style:{"text-align":"left"}},nn={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},sn=t("td",{style:{"text-align":"center"}},null,-1),dn={style:{"text-align":"left"}},_n=t("code",null,"双指针",-1),an=t("code",null,"字符串",-1),cn=t("code",null,"二分查找",-1),un=t("code",null,"3+",-1),hn={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"3008",-1),fn={style:{"text-align":"left"}},gn={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},mn=t("td",{style:{"text-align":"center"}},null,-1),yn={style:{"text-align":"left"}},xn=t("code",null,"双指针",-1),pn=t("code",null,"字符串",-1),bn=t("code",null,"二分查找",-1),kn=t("code",null,"3+",-1),wn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"3023",-1),Hn={style:{"text-align":"left"}},vn={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Mn=t("td",{style:{"text-align":"center"}},null,-1),qn={style:{"text-align":"left"}},Nn=t("code",null,"数组",-1),En=t("code",null,"字符串匹配",-1),Ln=t("code",null,"滑动窗口",-1),Vn=t("code",null,"2+",-1),zn={style:{"text-align":"left"}},Bn=t("td",{style:{"text-align":"center"}},"3029",-1),Cn={style:{"text-align":"left"}},Kn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},null,-1),jn={style:{"text-align":"left"}},An=t("code",null,"字符串",-1),Dn=t("code",null,"字符串匹配",-1),Tn=t("code",null,"哈希函数",-1),Fn=t("code",null,"1+",-1),Gn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"3031",-1),On={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},null,-1),Sn={style:{"text-align":"left"}},Un=t("code",null,"字符串",-1),Wn=t("code",null,"字符串匹配",-1),Xn=t("code",null,"哈希函数",-1),Yn=t("code",null,"1+",-1),Zn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"3034",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},os=t("td",{style:{"text-align":"center"}},null,-1),ls={style:{"text-align":"left"}},ns=t("code",null,"数组",-1),ss=t("code",null,"字符串匹配",-1),ds=t("code",null,"哈希函数",-1),is=t("code",null,"1+",-1),_s={style:{"text-align":"left"}},as=t("td",{style:{"text-align":"center"}},"3036",-1),cs={style:{"text-align":"left"}},us={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},hs=t("td",{style:{"text-align":"center"}},null,-1),rs={style:{"text-align":"left"}},fs=t("code",null,"数组",-1),gs=t("code",null,"字符串匹配",-1),ms=t("code",null,"哈希函数",-1),ys=t("code",null,"1+",-1),xs={style:{"text-align":"left"}},ps=t("td",{style:{"text-align":"center"}},"3037",-1),bs={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},ws=t("td",{style:{"text-align":"center"}},null,-1),Is={style:{"text-align":"left"}},Hs=t("code",null,"数组",-1),vs=t("code",null,"字符串匹配",-1),Ms=t("code",null,"滑动窗口",-1),qs=t("code",null,"2+",-1),Ns={style:{"text-align":"left"}},Es=t("td",{style:{"text-align":"center"}},"3042",-1),Ls={style:{"text-align":"left"}},Vs={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},zs=t("td",{style:{"text-align":"center"}},null,-1),Bs={style:{"text-align":"left"}},Cs=t("code",null,"字典树",-1),Ks=t("code",null,"数组",-1),Rs=t("code",null,"字符串",-1),js=t("code",null,"3+",-1),As={style:{"text-align":"left"}},Ds=t("td",{style:{"text-align":"center"}},"3045",-1),Ts={style:{"text-align":"left"}},Fs={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},Gs=t("td",{style:{"text-align":"center"}},null,-1),Js={style:{"text-align":"left"}},Os=t("code",null,"字典树",-1),Ps=t("code",null,"数组",-1),Qs=t("code",null,"字符串",-1),Ss=t("code",null,"3+",-1),Us={style:{"text-align":"left"}},Ws=t("td",{style:{"text-align":"center"}},"3291",-1),Xs={style:{"text-align":"left"}},Ys={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Zs=t("td",{style:{"text-align":"center"}},null,-1),$s={style:{"text-align":"left"}},td=t("code",null,"字典树",-1),ed=t("code",null,"线段树",-1),od=t("code",null,"数组",-1),ld=t("code",null,"6+",-1),nd={style:{"text-align":"left"}},sd=t("td",{style:{"text-align":"center"}},"3292",-1),dd={style:{"text-align":"left"}},id={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},_d=t("td",{style:{"text-align":"center"}},null,-1),ad={style:{"text-align":"left"}},cd=t("code",null,"线段树",-1),ud=t("code",null,"数组",-1),hd=t("code",null,"字符串",-1),rd=t("code",null,"5+",-1),fd={style:{"text-align":"left"}},gd=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),md={style:{"text-align":"left"}},yd={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},xd=t("td",{style:{"text-align":"center"}},null,-1),pd={style:{"text-align":"left"}},bd=t("code",null,"字典树",-1),kd=t("code",null,"数组",-1),wd=t("code",null,"哈希表",-1),Id=t("code",null,"4+",-1),Hd={style:{"text-align":"left"}};function vd(Md,qd){const n=i("RouterLink"),s=i("ExternalLinkIcon"),d=i("font");return a(),c("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/outline/tag/linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/outline/tag/queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/outline/tag/binary-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/outline/tag/ordered-set.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/outline/tag/suffix-array.html"},{default:l(()=>[O]),_:1})]),P,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/outline/tag/counting.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/outline/tag/bitmask.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),gt,o(),e(n,{to:"/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/outline/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/outline/tag/simulation.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/outline/tag/randomized.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/outline/tag/database.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/outline/tag/data-stream.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/outline/tag/brainteaser.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/outline/tag/interactive.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/outline/tag/iterator.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/outline/tag/concurrency.html"},{default:l(()=>[Ct]),_:1})])]),Kt,u(" prettier-ignore "),t("table",null,[Rt,t("tbody",null,[t("tr",null,[jt,t("td",At,[t("a",Dt,[o("重复的DNA序列"),e(s)])]),Tt,t("td",Ft,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[Gt]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[Jt]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ot]),_:1}),o(),Pt]),t("td",Qt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[St,t("td",Ut,[t("a",Wt,[o("最短回文串"),e(s)])]),Xt,t("td",Yt,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Zt]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[te]),_:1}),o(),ee]),t("td",oe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[le,t("td",ne,[t("a",se,[o("最长重复子数组"),e(s)])]),de,t("td",ie,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[_e]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[ce]),_:1}),o(),ue]),t("td",he,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[re,t("td",fe,[t("a",ge,[o("最长重复子串"),e(s)])]),me,t("td",ye,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/outline/tag/suffix-array.html"},{default:l(()=>[be]),_:1}),o(),ke]),t("td",we,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ie,t("td",He,[t("a",ve,[o("最长重复子串"),e(s)])]),Me,t("td",qe,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ne]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[Ee]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Le]),_:1}),o(),Ve]),t("td",ze,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Be,t("td",Ce,[t("a",Ke,[o("段式回文"),e(s)])]),Re,t("td",je,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Ae]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[De]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Te]),_:1}),o(),Fe]),t("td",Ge,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Je,t("td",Oe,[t("a",Pe,[o("不同的循环子字符串"),e(s)])]),Qe,t("td",Se,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[Ue]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[We]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[Xe]),_:1}),o(),Ye]),t("td",Ze,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$e,t("td",to,[t("a",eo,[o("最长快乐前缀"),e(s)])]),oo,t("td",lo,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[no]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[so]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[io]),_:1}),o(),_o]),t("td",ao,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[co,t("td",uo,[t("a",ho,[o("检查一个字符串是否包含所有长度为 K 的二进制子串"),e(s)])]),ro,t("td",fo,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[go]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[mo]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[yo]),_:1}),o(),xo]),t("td",po,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bo,t("td",ko,[t("a",wo,[o("只有一个不同字符的字符串"),e(s)])]),Io,t("td",Ho,[e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Mo]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[qo]),_:1}),o(),No]),t("td",Eo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Lo,t("td",Vo,[t("a",zo,[o("字符串的不同子字符串个数"),e(s)])]),Bo,t("td",Co,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[Ko]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ro]),_:1}),o(),e(n,{to:"/outline/tag/suffix-array.html"},{default:l(()=>[jo]),_:1}),o(),Ao]),t("td",Do,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[To,t("td",Fo,[t("a",Go,[o("最长公共子路径"),e(s)])]),Jo,t("td",Oo,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[Qo]),_:1}),o(),e(n,{to:"/outline/tag/suffix-array.html"},{default:l(()=>[So]),_:1}),o(),Uo]),t("td",Wo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Xo,t("td",Yo,[t("a",Zo,[o("两个回文子字符串长度的最大乘积"),e(s)])]),$o,t("td",tl,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[el]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[ol]),_:1}),o(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:l(()=>[ll]),_:1})]),t("td",nl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sl,t("td",dl,[t("a",il,[o("查找给定哈希值的子串"),e(s)])]),_l,t("td",al,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[cl]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[ul]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[hl]),_:1}),o(),rl]),t("td",fl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gl,t("td",ml,[t("a",yl,[o("每个数字的频率都相同的独特子字符串的数量"),e(s)])]),xl,t("td",pl,[e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[bl]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[kl]),_:1}),o(),e(n,{to:"/outline/tag/counting.html"},{default:l(()=>[wl]),_:1}),o(),Il]),t("td",Hl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vl,t("td",Ml,[t("a",ql,[o("构造字符串的总得分和"),e(s)])]),Nl,t("td",El,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ll]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[Vl]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[zl]),_:1}),o(),Bl]),t("td",Cl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Kl,t("td",Rl,[t("a",jl,[o("含最多 K 个可整除元素的子数组"),e(s)])]),t("td",Al,[t("a",Dl,[o("[✓]"),e(s)])]),t("td",Tl,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[Fl]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Gl]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[Jl]),_:1}),o(),Ol]),t("td",Pl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ql,t("td",Sl,[t("a",Ul,[o("对字母串可执行的最大删除数"),e(s)])]),Wl,t("td",Xl,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Yl]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Zl]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[$l]),_:1}),o(),tn]),t("td",en,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[on,t("td",ln,[t("a",nn,[o("找出数组中的美丽下标 I"),e(s)])]),sn,t("td",dn,[e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[_n]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[an]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[cn]),_:1}),o(),un]),t("td",hn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rn,t("td",fn,[t("a",gn,[o("找出数组中的美丽下标 II"),e(s)])]),mn,t("td",yn,[e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[xn]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[pn]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[bn]),_:1}),o(),kn]),t("td",wn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[In,t("td",Hn,[t("a",vn,[o("在无限流中寻找模式 I"),e(s)])]),Mn,t("td",qn,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Nn]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[En]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[Ln]),_:1}),o(),Vn]),t("td",zn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Bn,t("td",Cn,[t("a",Kn,[o("将单词恢复初始状态所需的最短时间 I"),e(s)])]),Rn,t("td",jn,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[An]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Dn]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[Tn]),_:1}),o(),Fn]),t("td",Gn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jn,t("td",On,[t("a",Pn,[o("将单词恢复初始状态所需的最短时间 II"),e(s)])]),Qn,t("td",Sn,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Un]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Wn]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[Xn]),_:1}),o(),Yn]),t("td",Zn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$n,t("td",ts,[t("a",es,[o("匹配模式数组的子数组数目 I"),e(s)])]),os,t("td",ls,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ns]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[ss]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[ds]),_:1}),o(),is]),t("td",_s,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[as,t("td",cs,[t("a",us,[o("匹配模式数组的子数组数目 II"),e(s)])]),hs,t("td",rs,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[fs]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[gs]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[ms]),_:1}),o(),ys]),t("td",xs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ps,t("td",bs,[t("a",ks,[o("在无限流中寻找模式 II"),e(s)])]),ws,t("td",Is,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Hs]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[vs]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[Ms]),_:1}),o(),qs]),t("td",Ns,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Es,t("td",Ls,[t("a",Vs,[o("统计前后缀下标对 I"),e(s)])]),zs,t("td",Bs,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[Cs]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Ks]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Rs]),_:1}),o(),js]),t("td",As,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ds,t("td",Ts,[t("a",Fs,[o("统计前后缀下标对 II"),e(s)])]),Gs,t("td",Js,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[Os]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Ps]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Qs]),_:1}),o(),Ss]),t("td",Us,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ws,t("td",Xs,[t("a",Ys,[o("形成目标字符串需要的最少字符串数 I"),e(s)])]),Zs,t("td",$s,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[td]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[ed]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[od]),_:1}),o(),ld]),t("td",nd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[sd,t("td",dd,[t("a",id,[o("形成目标字符串需要的最少字符串数 II"),e(s)])]),_d,t("td",ad,[e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[cd]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ud]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[hd]),_:1}),o(),rd]),t("td",fd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gd,t("td",md,[t("a",yd,[o("恢复空格"),e(s)])]),xd,t("td",pd,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[bd]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[kd]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[wd]),_:1}),o(),Id]),t("td",Hd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const Ed=_(h,[["render",vd],["__file","rolling-hash.html.vue"]]);export{Ed as default};
