import{_,r as d,o as r,c as a,a as t,d as o,w as n,b as e,f as c}from"./app-pBQRj29c.js";const i={},h=t("h1",{id:"线段树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#线段树","aria-hidden":"true"},"#"),e(" 线段树")],-1),g=t("summary",null,"全部标签",-1),u=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),q=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),v=t("code",null,"字符串",-1),j=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),K=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),E=t("code",null,"强连通分量",-1),O=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),Q=t("code",null,"并查集",-1),T=t("code",null,"字典树",-1),A=t("span",{class:"blue"},"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),D=t("p",null,[t("strong",null,"算法")],-1),F=t("code",null,"枚举",-1),H=t("code",null,"递归",-1),M=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ct=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ut=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),qt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),vt=t("code",null,"拒绝采样",-1),jt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Kt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Et=t("td",{style:{"text-align":"center"}},"218",-1),Ot=t("td",{style:{"text-align":"left"}},"天际线问题",-1),Rt=t("td",{style:{"text-align":"center"}},null,-1),Qt={style:{"text-align":"left"}},Tt=t("code",null,"树状数组",-1),At=t("code",null,"线段树",-1),Gt=t("code",null,"数组",-1),Jt=t("code",null,"4+",-1),Dt=t("td",{style:{"text-align":"left"}},"🔴",-1),Ft={style:{"text-align":"center"}},Ht={href:"https://leetcode.cn/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},St=t("td",{style:{"text-align":"center"}},"307",-1),Ut=t("td",{style:{"text-align":"left"}},"区域和检索 - 数组可修改",-1),Wt={style:{"text-align":"center"}},Xt={style:{"text-align":"left"}},Yt=t("code",null,"设计",-1),Zt=t("code",null,"树状数组",-1),$t=t("code",null,"线段树",-1),te=t("code",null,"1+",-1),ee=t("td",{style:{"text-align":"left"}},"🟠",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://leetcode.com/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},"308",-1),de=t("td",{style:{"text-align":"left"}},"二维区域和检索 - 矩阵可修改 🔒",-1),_e=t("td",{style:{"text-align":"center"}},null,-1),re={style:{"text-align":"left"}},ae=t("code",null,"设计",-1),ce=t("code",null,"树状数组",-1),ie=t("code",null,"线段树",-1),he=t("code",null,"2+",-1),ge=t("td",{style:{"text-align":"left"}},"🔴",-1),ue={style:{"text-align":"center"}},fe={href:"https://leetcode.cn/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},"315",-1),pe=t("td",{style:{"text-align":"left"}},"计算右侧小于当前元素的个数",-1),xe=t("td",{style:{"text-align":"center"}},null,-1),be={style:{"text-align":"left"}},ke=t("code",null,"树状数组",-1),qe=t("code",null,"线段树",-1),we=t("code",null,"数组",-1),Ie=t("code",null,"4+",-1),ve=t("td",{style:{"text-align":"left"}},"🔴",-1),je={style:{"text-align":"center"}},ze={href:"https://leetcode.cn/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},Ce=t("td",{style:{"text-align":"center"}},"327",-1),Ke=t("td",{style:{"text-align":"left"}},"区间和的个数",-1),Be=t("td",{style:{"text-align":"center"}},null,-1),Ne={style:{"text-align":"left"}},Pe=t("code",null,"树状数组",-1),Ve=t("code",null,"线段树",-1),Ee=t("code",null,"数组",-1),Oe=t("code",null,"4+",-1),Re=t("td",{style:{"text-align":"left"}},"🔴",-1),Qe={style:{"text-align":"center"}},Te={href:"https://leetcode.cn/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Ge=t("td",{style:{"text-align":"center"}},"406",-1),Je=t("td",{style:{"text-align":"left"}},"根据身高重建队列",-1),De=t("td",{style:{"text-align":"center"}},null,-1),Fe={style:{"text-align":"left"}},He=t("code",null,"树状数组",-1),Me=t("code",null,"线段树",-1),Se=t("code",null,"数组",-1),Ue=t("code",null,"1+",-1),We=t("td",{style:{"text-align":"left"}},"🟠",-1),Xe={style:{"text-align":"center"}},Ye={href:"https://leetcode.cn/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://leetcode.com/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"493",-1),to=t("td",{style:{"text-align":"left"}},"翻转对",-1),eo=t("td",{style:{"text-align":"center"}},null,-1),oo={style:{"text-align":"left"}},lo=t("code",null,"树状数组",-1),no=t("code",null,"线段树",-1),so=t("code",null,"数组",-1),_o=t("code",null,"4+",-1),ro=t("td",{style:{"text-align":"left"}},"🔴",-1),ao={style:{"text-align":"center"}},co={href:"https://leetcode.cn/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},io={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"673",-1),go=t("td",{style:{"text-align":"left"}},"最长递增子序列的个数",-1),uo=t("td",{style:{"text-align":"center"}},null,-1),fo={style:{"text-align":"left"}},mo=t("code",null,"树状数组",-1),yo=t("code",null,"线段树",-1),po=t("code",null,"数组",-1),xo=t("code",null,"1+",-1),bo=t("td",{style:{"text-align":"left"}},"🟠",-1),ko={style:{"text-align":"center"}},qo={href:"https://leetcode.cn/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},wo={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},Io=t("td",{style:{"text-align":"center"}},"683",-1),vo=t("td",{style:{"text-align":"left"}},"K 个关闭的灯泡 🔒",-1),jo=t("td",{style:{"text-align":"center"}},null,-1),zo={style:{"text-align":"left"}},Lo=t("code",null,"树状数组",-1),Co=t("code",null,"线段树",-1),Ko=t("code",null,"队列",-1),Bo=t("code",null,"5+",-1),No=t("td",{style:{"text-align":"left"}},"🔴",-1),Po={style:{"text-align":"center"}},Vo={href:"https://leetcode.cn/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},Eo={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},Oo=t("td",{style:{"text-align":"center"}},"699",-1),Ro=t("td",{style:{"text-align":"left"}},"掉落的方块",-1),Qo=t("td",{style:{"text-align":"center"}},null,-1),To={style:{"text-align":"left"}},Ao=t("code",null,"线段树",-1),Go=t("code",null,"数组",-1),Jo=t("code",null,"有序集合",-1),Do=t("td",{style:{"text-align":"left"}},"🔴",-1),Fo={style:{"text-align":"center"}},Ho={href:"https://leetcode.cn/problems/falling-squares",target:"_blank",rel:"noopener noreferrer"},Mo={href:"https://leetcode.com/problems/falling-squares",target:"_blank",rel:"noopener noreferrer"},So=t("td",{style:{"text-align":"center"}},"715",-1),Uo=t("td",{style:{"text-align":"left"}},"Range 模块",-1),Wo=t("td",{style:{"text-align":"center"}},null,-1),Xo={style:{"text-align":"left"}},Yo=t("code",null,"设计",-1),Zo=t("code",null,"线段树",-1),$o=t("code",null,"有序集合",-1),tl=t("td",{style:{"text-align":"left"}},"🔴",-1),el={style:{"text-align":"center"}},ol={href:"https://leetcode.cn/problems/range-module",target:"_blank",rel:"noopener noreferrer"},ll={href:"https://leetcode.com/problems/range-module",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},"729",-1),sl=t("td",{style:{"text-align":"left"}},"我的日程安排表 I",-1),dl={style:{"text-align":"center"}},_l={style:{"text-align":"left"}},rl=t("code",null,"设计",-1),al=t("code",null,"线段树",-1),cl=t("code",null,"数组",-1),il=t("code",null,"2+",-1),hl=t("td",{style:{"text-align":"left"}},"🟠",-1),gl={style:{"text-align":"center"}},ul={href:"https://leetcode.cn/problems/my-calendar-i",target:"_blank",rel:"noopener noreferrer"},fl={href:"https://leetcode.com/problems/my-calendar-i",target:"_blank",rel:"noopener noreferrer"},ml=t("td",{style:{"text-align":"center"}},"731",-1),yl=t("td",{style:{"text-align":"left"}},"我的日程安排表 II",-1),pl={style:{"text-align":"center"}},xl={style:{"text-align":"left"}},bl=t("code",null,"设计",-1),kl=t("code",null,"线段树",-1),ql=t("code",null,"数组",-1),wl=t("code",null,"3+",-1),Il=t("td",{style:{"text-align":"left"}},"🟠",-1),vl={style:{"text-align":"center"}},jl={href:"https://leetcode.cn/problems/my-calendar-ii",target:"_blank",rel:"noopener noreferrer"},zl={href:"https://leetcode.com/problems/my-calendar-ii",target:"_blank",rel:"noopener noreferrer"},Ll=t("td",{style:{"text-align":"center"}},"732",-1),Cl=t("td",{style:{"text-align":"left"}},"我的日程安排表 III",-1),Kl=t("td",{style:{"text-align":"center"}},null,-1),Bl={style:{"text-align":"left"}},Nl=t("code",null,"设计",-1),Pl=t("code",null,"线段树",-1),Vl=t("code",null,"二分查找",-1),El=t("code",null,"2+",-1),Ol=t("td",{style:{"text-align":"left"}},"🔴",-1),Rl={style:{"text-align":"center"}},Ql={href:"https://leetcode.cn/problems/my-calendar-iii",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://leetcode.com/problems/my-calendar-iii",target:"_blank",rel:"noopener noreferrer"},Al=t("td",{style:{"text-align":"center"}},"850",-1),Gl=t("td",{style:{"text-align":"left"}},"矩形面积 II",-1),Jl=t("td",{style:{"text-align":"center"}},null,-1),Dl={style:{"text-align":"left"}},Fl=t("code",null,"线段树",-1),Hl=t("code",null,"数组",-1),Ml=t("code",null,"有序集合",-1),Sl=t("code",null,"1+",-1),Ul=t("td",{style:{"text-align":"left"}},"🔴",-1),Wl={style:{"text-align":"center"}},Xl={href:"https://leetcode.cn/problems/rectangle-area-ii",target:"_blank",rel:"noopener noreferrer"},Yl={href:"https://leetcode.com/problems/rectangle-area-ii",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},"1157",-1),$l=t("td",{style:{"text-align":"left"}},"子数组中占绝大多数的元素",-1),tn=t("td",{style:{"text-align":"center"}},null,-1),en={style:{"text-align":"left"}},on=t("code",null,"设计",-1),ln=t("code",null,"树状数组",-1),nn=t("code",null,"线段树",-1),sn=t("code",null,"2+",-1),dn=t("td",{style:{"text-align":"left"}},"🔴",-1),_n={style:{"text-align":"center"}},rn={href:"https://leetcode.cn/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},an={href:"https://leetcode.com/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},cn=t("td",{style:{"text-align":"center"}},"1395",-1),hn=t("td",{style:{"text-align":"left"}},"统计作战单位数",-1),gn=t("td",{style:{"text-align":"center"}},null,-1),un={style:{"text-align":"left"}},fn=t("code",null,"树状数组",-1),mn=t("code",null,"线段树",-1),yn=t("code",null,"数组",-1),pn=t("code",null,"1+",-1),xn=t("td",{style:{"text-align":"left"}},"🟠",-1),bn={style:{"text-align":"center"}},kn={href:"https://leetcode.cn/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},qn={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},wn=t("td",{style:{"text-align":"center"}},"1505",-1),In=t("td",{style:{"text-align":"left"}},"最多 K 次交换相邻数位后得到的最小整数",-1),vn=t("td",{style:{"text-align":"center"}},null,-1),jn={style:{"text-align":"left"}},zn=t("code",null,"贪心",-1),Ln=t("code",null,"树状数组",-1),Cn=t("code",null,"线段树",-1),Kn=t("code",null,"1+",-1),Bn=t("td",{style:{"text-align":"left"}},"🔴",-1),Nn={style:{"text-align":"center"}},Pn={href:"https://leetcode.cn/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},Vn={href:"https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},En=t("td",{style:{"text-align":"center"}},"1521",-1),On=t("td",{style:{"text-align":"left"}},"找到最接近目标值的函数值",-1),Rn=t("td",{style:{"text-align":"center"}},null,-1),Qn={style:{"text-align":"left"}},Tn=t("code",null,"位运算",-1),An=t("code",null,"线段树",-1),Gn=t("code",null,"数组",-1),Jn=t("code",null,"1+",-1),Dn=t("td",{style:{"text-align":"left"}},"🔴",-1),Fn={style:{"text-align":"center"}},Hn={href:"https://leetcode.cn/problems/find-a-value-of-a-mysterious-function-closest-to-target",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://leetcode.com/problems/find-a-value-of-a-mysterious-function-closest-to-target",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},"1622",-1),Un=t("td",{style:{"text-align":"left"}},"奇妙序列",-1),Wn=t("td",{style:{"text-align":"center"}},null,-1),Xn={style:{"text-align":"left"}},Yn=t("code",null,"设计",-1),Zn=t("code",null,"线段树",-1),$n=t("code",null,"数学",-1),ts=t("td",{style:{"text-align":"left"}},"🔴",-1),es={style:{"text-align":"center"}},os={href:"https://leetcode.cn/problems/fancy-sequence",target:"_blank",rel:"noopener noreferrer"},ls={href:"https://leetcode.com/problems/fancy-sequence",target:"_blank",rel:"noopener noreferrer"},ns=t("td",{style:{"text-align":"center"}},"1649",-1),ss=t("td",{style:{"text-align":"left"}},"通过指令创建有序数组",-1),ds=t("td",{style:{"text-align":"center"}},null,-1),_s={style:{"text-align":"left"}},rs=t("code",null,"树状数组",-1),as=t("code",null,"线段树",-1),cs=t("code",null,"数组",-1),is=t("code",null,"4+",-1),hs=t("td",{style:{"text-align":"left"}},"🔴",-1),gs={style:{"text-align":"center"}},us={href:"https://leetcode.cn/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},fs={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},ms=t("td",{style:{"text-align":"center"}},"1687",-1),ys=t("td",{style:{"text-align":"left"}},"从仓库到码头运输箱子",-1),ps=t("td",{style:{"text-align":"center"}},null,-1),xs={style:{"text-align":"left"}},bs=t("code",null,"线段树",-1),ks=t("code",null,"队列",-1),qs=t("code",null,"数组",-1),ws=t("code",null,"4+",-1),Is=t("td",{style:{"text-align":"left"}},"🔴",-1),vs={style:{"text-align":"center"}},js={href:"https://leetcode.cn/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},zs={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},"2031",-1),Cs=t("td",{style:{"text-align":"left"}},"1 比 0 多的子数组个数 🔒",-1),Ks=t("td",{style:{"text-align":"center"}},null,-1),Bs={style:{"text-align":"left"}},Ns=t("code",null,"树状数组",-1),Ps=t("code",null,"线段树",-1),Vs=t("code",null,"数组",-1),Es=t("code",null,"4+",-1),Os=t("td",{style:{"text-align":"left"}},"🟠",-1),Rs={style:{"text-align":"center"}},Qs={href:"https://leetcode.cn/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},Ts={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},As=t("td",{style:{"text-align":"center"}},"2080",-1),Gs=t("td",{style:{"text-align":"left"}},"区间内查询数字的频率",-1),Js=t("td",{style:{"text-align":"center"}},null,-1),Ds={style:{"text-align":"left"}},Fs=t("code",null,"设计",-1),Hs=t("code",null,"线段树",-1),Ms=t("code",null,"数组",-1),Ss=t("code",null,"2+",-1),Us=t("td",{style:{"text-align":"left"}},"🟠",-1),Ws={style:{"text-align":"center"}},Xs={href:"https://leetcode.cn/problems/range-frequency-queries",target:"_blank",rel:"noopener noreferrer"},Ys={href:"https://leetcode.com/problems/range-frequency-queries",target:"_blank",rel:"noopener noreferrer"},Zs=t("td",{style:{"text-align":"center"}},"2158",-1),$s=t("td",{style:{"text-align":"left"}},"每天绘制新区域的数量 🔒",-1),td=t("td",{style:{"text-align":"center"}},null,-1),ed={style:{"text-align":"left"}},od=t("code",null,"线段树",-1),ld=t("code",null,"数组",-1),nd=t("code",null,"有序集合",-1),sd=t("td",{style:{"text-align":"left"}},"🔴",-1),dd={style:{"text-align":"center"}},_d={href:"https://leetcode.cn/problems/amount-of-new-area-painted-each-day",target:"_blank",rel:"noopener noreferrer"},rd={href:"https://leetcode.com/problems/amount-of-new-area-painted-each-day",target:"_blank",rel:"noopener noreferrer"},ad=t("td",{style:{"text-align":"center"}},"2179",-1),cd=t("td",{style:{"text-align":"left"}},"统计数组中好三元组数目",-1),id=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},gd=t("code",null,"树状数组",-1),ud=t("code",null,"线段树",-1),fd=t("code",null,"数组",-1),md=t("code",null,"4+",-1),yd=t("td",{style:{"text-align":"left"}},"🔴",-1),pd={style:{"text-align":"center"}},xd={href:"https://leetcode.cn/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},bd={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},"2213",-1),qd=t("td",{style:{"text-align":"left"}},"由单个字符重复的最长子字符串",-1),wd=t("td",{style:{"text-align":"center"}},null,-1),Id={style:{"text-align":"left"}},vd=t("code",null,"线段树",-1),jd=t("code",null,"数组",-1),zd=t("code",null,"字符串",-1),Ld=t("code",null,"1+",-1),Cd=t("td",{style:{"text-align":"left"}},"🔴",-1),Kd={style:{"text-align":"center"}},Bd={href:"https://leetcode.cn/problems/longest-substring-of-one-repeating-character",target:"_blank",rel:"noopener noreferrer"},Nd={href:"https://leetcode.com/problems/longest-substring-of-one-repeating-character",target:"_blank",rel:"noopener noreferrer"},Pd=t("td",{style:{"text-align":"center"}},"2276",-1),Vd=t("td",{style:{"text-align":"left"}},"统计区间中的整数数目",-1),Ed=t("td",{style:{"text-align":"center"}},null,-1),Od={style:{"text-align":"left"}},Rd=t("code",null,"设计",-1),Qd=t("code",null,"线段树",-1),Td=t("code",null,"有序集合",-1),Ad=t("td",{style:{"text-align":"left"}},"🔴",-1),Gd={style:{"text-align":"center"}},Jd={href:"https://leetcode.cn/problems/count-integers-in-intervals",target:"_blank",rel:"noopener noreferrer"},Dd={href:"https://leetcode.com/problems/count-integers-in-intervals",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},"2286",-1),Hd=t("td",{style:{"text-align":"left"}},"以组为单位订音乐会的门票",-1),Md=t("td",{style:{"text-align":"center"}},null,-1),Sd={style:{"text-align":"left"}},Ud=t("code",null,"设计",-1),Wd=t("code",null,"树状数组",-1),Xd=t("code",null,"线段树",-1),Yd=t("code",null,"1+",-1),Zd=t("td",{style:{"text-align":"left"}},"🔴",-1),$d={style:{"text-align":"center"}},t_={href:"https://leetcode.cn/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},e_={href:"https://leetcode.com/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},o_=t("td",{style:{"text-align":"center"}},"2407",-1),l_=t("td",{style:{"text-align":"left"}},"最长递增子序列 II",-1),n_=t("td",{style:{"text-align":"center"}},null,-1),s_={style:{"text-align":"left"}},d_=t("code",null,"树状数组",-1),__=t("code",null,"线段树",-1),r_=t("code",null,"队列",-1),a_=t("code",null,"4+",-1),c_=t("td",{style:{"text-align":"left"}},"🔴",-1),i_={style:{"text-align":"center"}},h_={href:"https://leetcode.cn/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},g_={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},u_=t("td",{style:{"text-align":"center"}},"2424",-1),f_=t("td",{style:{"text-align":"left"}},"最长上传前缀",-1),m_=t("td",{style:{"text-align":"center"}},null,-1),y_={style:{"text-align":"left"}},p_=t("code",null,"并查集",-1),x_=t("code",null,"设计",-1),b_=t("code",null,"树状数组",-1),k_=t("code",null,"4+",-1),q_=t("td",{style:{"text-align":"left"}},"🟠",-1),w_={style:{"text-align":"center"}},I_={href:"https://leetcode.cn/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},v_={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},j_=t("td",{style:{"text-align":"center"}},"2426",-1),z_=t("td",{style:{"text-align":"left"}},"满足不等式的数对数目",-1),L_=t("td",{style:{"text-align":"center"}},null,-1),C_={style:{"text-align":"left"}},K_=t("code",null,"树状数组",-1),B_=t("code",null,"线段树",-1),N_=t("code",null,"数组",-1),P_=t("code",null,"4+",-1),V_=t("td",{style:{"text-align":"left"}},"🔴",-1),E_={style:{"text-align":"center"}},O_={href:"https://leetcode.cn/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},R_={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},"2519",-1),T_=t("td",{style:{"text-align":"left"}},"统计 K-Big 索引的数量 🔒",-1),A_=t("td",{style:{"text-align":"center"}},null,-1),G_={style:{"text-align":"left"}},J_=t("code",null,"树状数组",-1),D_=t("code",null,"线段树",-1),F_=t("code",null,"数组",-1),H_=t("code",null,"4+",-1),M_=t("td",{style:{"text-align":"left"}},"🔴",-1),S_={style:{"text-align":"center"}},U_={href:"https://leetcode.cn/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},W_={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},X_=t("td",{style:{"text-align":"center"}},"2569",-1),Y_=t("td",{style:{"text-align":"left"}},"更新数组后处理求和查询",-1),Z_=t("td",{style:{"text-align":"center"}},null,-1),$_={style:{"text-align":"left"}},tr=t("code",null,"线段树",-1),er=t("code",null,"数组",-1),or=t("td",{style:{"text-align":"left"}},"🔴",-1),lr={style:{"text-align":"center"}},nr={href:"https://leetcode.cn/problems/handling-sum-queries-after-update",target:"_blank",rel:"noopener noreferrer"},sr={href:"https://leetcode.com/problems/handling-sum-queries-after-update",target:"_blank",rel:"noopener noreferrer"},dr=t("td",{style:{"text-align":"center"}},"2659",-1),_r=t("td",{style:{"text-align":"left"}},"将数组清空",-1),rr=t("td",{style:{"text-align":"center"}},null,-1),ar={style:{"text-align":"left"}},cr=t("code",null,"贪心",-1),ir=t("code",null,"树状数组",-1),hr=t("code",null,"线段树",-1),gr=t("code",null,"4+",-1),ur=t("td",{style:{"text-align":"left"}},"🔴",-1),fr={style:{"text-align":"center"}},mr={href:"https://leetcode.cn/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},yr={href:"https://leetcode.com/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},"2736",-1),xr=t("td",{style:{"text-align":"left"}},"最大和查询",-1),br=t("td",{style:{"text-align":"center"}},null,-1),kr={style:{"text-align":"left"}},qr=t("code",null,"栈",-1),wr=t("code",null,"树状数组",-1),Ir=t("code",null,"线段树",-1),vr=t("code",null,"4+",-1),jr=t("td",{style:{"text-align":"left"}},"🔴",-1),zr={style:{"text-align":"center"}},Lr={href:"https://leetcode.cn/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Cr={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},"2907",-1),Br=t("td",{style:{"text-align":"left"}},"价格递增的最大利润三元组 I 🔒",-1),Nr=t("td",{style:{"text-align":"center"}},null,-1),Pr={style:{"text-align":"left"}},Vr=t("code",null,"树状数组",-1),Er=t("code",null,"线段树",-1),Or=t("code",null,"数组",-1),Rr=t("td",{style:{"text-align":"left"}},"🟠",-1),Qr={style:{"text-align":"center"}},Tr={href:"https://leetcode.cn/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},Ar={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},Gr=t("td",{style:{"text-align":"center"}},"2916",-1),Jr=t("td",{style:{"text-align":"left"}},"子数组不同元素数目的平方和 II",-1),Dr=t("td",{style:{"text-align":"center"}},null,-1),Fr={style:{"text-align":"left"}},Hr=t("code",null,"树状数组",-1),Mr=t("code",null,"线段树",-1),Sr=t("code",null,"数组",-1),Ur=t("code",null,"1+",-1),Wr=t("td",{style:{"text-align":"left"}},"🔴",-1),Xr={style:{"text-align":"center"}},Yr={href:"https://leetcode.cn/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},Zr={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},$r=t("td",{style:{"text-align":"center"}},"2921",-1),ta=t("td",{style:{"text-align":"left"}},"价格递增的最大利润三元组 II 🔒",-1),ea=t("td",{style:{"text-align":"center"}},null,-1),oa={style:{"text-align":"left"}},la=t("code",null,"树状数组",-1),na=t("code",null,"线段树",-1),sa=t("code",null,"数组",-1),da=t("td",{style:{"text-align":"left"}},"🔴",-1),_a={style:{"text-align":"center"}},ra={href:"https://leetcode.cn/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},aa={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},ca=t("td",{style:{"text-align":"center"}},"2926",-1),ia=t("td",{style:{"text-align":"left"}},"平衡子序列的最大和",-1),ha=t("td",{style:{"text-align":"center"}},null,-1),ga={style:{"text-align":"left"}},ua=t("code",null,"树状数组",-1),fa=t("code",null,"线段树",-1),ma=t("code",null,"数组",-1),ya=t("code",null,"2+",-1),pa=t("td",{style:{"text-align":"left"}},"🔴",-1),xa={style:{"text-align":"center"}},ba={href:"https://leetcode.cn/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},ka={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},qa=t("td",{style:{"text-align":"center"}},"2940",-1),wa=t("td",{style:{"text-align":"left"}},"找到 Alice 和 Bob 可以相遇的建筑",-1),Ia=t("td",{style:{"text-align":"center"}},null,-1),va={style:{"text-align":"left"}},ja=t("code",null,"栈",-1),za=t("code",null,"树状数组",-1),La=t("code",null,"线段树",-1),Ca=t("code",null,"4+",-1),Ka=t("td",{style:{"text-align":"left"}},"🔴",-1),Ba={style:{"text-align":"center"}},Na={href:"https://leetcode.cn/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Pa={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Va=t("td",{style:{"text-align":"center"}},"3072",-1),Ea=t("td",{style:{"text-align":"left"}},"将元素分配到两个数组中 II",-1),Oa=t("td",{style:{"text-align":"center"}},null,-1),Ra={style:{"text-align":"left"}},Qa=t("code",null,"树状数组",-1),Ta=t("code",null,"线段树",-1),Aa=t("code",null,"数组",-1),Ga=t("code",null,"1+",-1),Ja=t("td",{style:{"text-align":"left"}},"🔴",-1),Da={style:{"text-align":"center"}},Fa={href:"https://leetcode.cn/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},Ha={href:"https://leetcode.com/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},Ma=t("td",{style:{"text-align":"center"}},"3109",-1),Sa=t("td",{style:{"text-align":"left"}},"查找排列的下标 🔒",-1),Ua=t("td",{style:{"text-align":"center"}},null,-1),Wa={style:{"text-align":"left"}},Xa=t("code",null,"树状数组",-1),Ya=t("code",null,"线段树",-1),Za=t("code",null,"数组",-1),$a=t("code",null,"4+",-1),tc=t("td",{style:{"text-align":"left"}},"🟠",-1),ec={style:{"text-align":"center"}},oc={href:"https://leetcode.cn/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},lc={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},nc=t("td",{style:{"text-align":"center"}},"3117",-1),sc=t("td",{style:{"text-align":"left"}},"划分数组得到最小的值之和",-1),dc=t("td",{style:{"text-align":"center"}},null,-1),_c={style:{"text-align":"left"}},rc=t("code",null,"位运算",-1),ac=t("code",null,"线段树",-1),cc=t("code",null,"队列",-1),ic=t("code",null,"3+",-1),hc=t("td",{style:{"text-align":"left"}},"🔴",-1),gc={style:{"text-align":"center"}},uc={href:"https://leetcode.cn/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},fc={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},mc=t("td",{style:{"text-align":"center"}},"3161",-1),yc=t("td",{style:{"text-align":"left"}},"物块放置查询",-1),pc=t("td",{style:{"text-align":"center"}},null,-1),xc={style:{"text-align":"left"}},bc=t("code",null,"树状数组",-1),kc=t("code",null,"线段树",-1),qc=t("code",null,"数组",-1),wc=t("code",null,"1+",-1),Ic=t("td",{style:{"text-align":"left"}},"🔴",-1),vc={style:{"text-align":"center"}},jc={href:"https://leetcode.cn/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},zc={href:"https://leetcode.com/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},Lc=t("td",{style:{"text-align":"center"}},"3165",-1),Cc=t("td",{style:{"text-align":"left"}},"不包含相邻元素的子序列的最大和",-1),Kc=t("td",{style:{"text-align":"center"}},null,-1),Bc={style:{"text-align":"left"}},Nc=t("code",null,"线段树",-1),Pc=t("code",null,"数组",-1),Vc=t("code",null,"分治",-1),Ec=t("code",null,"1+",-1),Oc=t("td",{style:{"text-align":"left"}},"🔴",-1),Rc={style:{"text-align":"center"}},Qc={href:"https://leetcode.cn/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},Tc={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},Ac=t("td",{style:{"text-align":"center"}},"3171",-1),Gc=t("td",{style:{"text-align":"left"}},"找到按位或最接近 K 的子数组",-1),Jc=t("td",{style:{"text-align":"center"}},null,-1),Dc={style:{"text-align":"left"}},Fc=t("code",null,"位运算",-1),Hc=t("code",null,"线段树",-1),Mc=t("code",null,"数组",-1),Sc=t("code",null,"1+",-1),Uc=t("td",{style:{"text-align":"left"}},"🔴",-1),Wc={style:{"text-align":"center"}},Xc={href:"https://leetcode.cn/problems/find-subarray-with-bitwise-or-closest-to-k",target:"_blank",rel:"noopener noreferrer"},Yc={href:"https://leetcode.com/problems/find-subarray-with-bitwise-or-closest-to-k",target:"_blank",rel:"noopener noreferrer"},Zc=t("td",{style:{"text-align":"center"}},"3187",-1),$c=t("td",{style:{"text-align":"left"}},"数组中的峰值",-1),ti=t("td",{style:{"text-align":"center"}},null,-1),ei={style:{"text-align":"left"}},oi=t("code",null,"树状数组",-1),li=t("code",null,"线段树",-1),ni=t("code",null,"数组",-1),si=t("td",{style:{"text-align":"left"}},"🔴",-1),di={style:{"text-align":"center"}},_i={href:"https://leetcode.cn/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},ri={href:"https://leetcode.com/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},ai=t("td",{style:{"text-align":"center"}},"3209",-1),ci=t("td",{style:{"text-align":"left"}},"子数组按位与值为 K 的数目",-1),ii=t("td",{style:{"text-align":"center"}},null,-1),hi={style:{"text-align":"left"}},gi=t("code",null,"位运算",-1),ui=t("code",null,"线段树",-1),fi=t("code",null,"数组",-1),mi=t("code",null,"1+",-1),yi=t("td",{style:{"text-align":"left"}},"🔴",-1),pi={style:{"text-align":"center"}},xi={href:"https://leetcode.cn/problems/number-of-subarrays-with-and-value-of-k",target:"_blank",rel:"noopener noreferrer"},bi={href:"https://leetcode.com/problems/number-of-subarrays-with-and-value-of-k",target:"_blank",rel:"noopener noreferrer"},ki=t("td",{style:{"text-align":"center"}},"3291",-1),qi=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 I",-1),wi=t("td",{style:{"text-align":"center"}},null,-1),Ii={style:{"text-align":"left"}},vi=t("code",null,"字典树",-1),ji=t("code",null,"线段树",-1),zi=t("code",null,"数组",-1),Li=t("code",null,"6+",-1),Ci=t("td",{style:{"text-align":"left"}},"🟠",-1),Ki={style:{"text-align":"center"}},Bi={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Ni={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Pi=t("td",{style:{"text-align":"center"}},"3292",-1),Vi=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 II",-1),Ei=t("td",{style:{"text-align":"center"}},null,-1),Oi={style:{"text-align":"left"}},Ri=t("code",null,"线段树",-1),Qi=t("code",null,"数组",-1),Ti=t("code",null,"字符串",-1),Ai=t("code",null,"5+",-1),Gi=t("td",{style:{"text-align":"left"}},"🔴",-1),Ji={style:{"text-align":"center"}},Di={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Fi={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Hi=t("td",{style:{"text-align":"center"}},"LCP 05",-1),Mi=t("td",{style:{"text-align":"left"}},"发 LeetCoin",-1),Si=t("td",{style:{"text-align":"center"}},null,-1),Ui={style:{"text-align":"left"}},Wi=t("code",null,"树状数组",-1),Xi=t("code",null,"线段树",-1),Yi=t("code",null,"数组",-1),Zi=t("td",{style:{"text-align":"left"}},"🔴",-1),$i={style:{"text-align":"center"}},th={href:"https://leetcode.cn/problems/coin-bonus",target:"_blank",rel:"noopener noreferrer"},eh=t("td",{style:{"text-align":"center"}},"LCP 09",-1),oh=t("td",{style:{"text-align":"left"}},"最小跳跃次数",-1),lh=t("td",{style:{"text-align":"center"}},null,-1),nh={style:{"text-align":"left"}},sh=t("code",null,"广度优先搜索",-1),dh=t("code",null,"线段树",-1),_h=t("code",null,"数组",-1),rh=t("code",null,"1+",-1),ah=t("td",{style:{"text-align":"left"}},"🔴",-1),ch={style:{"text-align":"center"}},ih={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},hh=t("td",{style:{"text-align":"center"}},"LCP 27",-1),gh=t("td",{style:{"text-align":"left"}},"黑盒光线反射",-1),uh=t("td",{style:{"text-align":"center"}},null,-1),fh={style:{"text-align":"left"}},mh=t("code",null,"设计",-1),yh=t("code",null,"线段树",-1),ph=t("code",null,"数学",-1),xh=t("code",null,"1+",-1),bh=t("td",{style:{"text-align":"left"}},"🔴",-1),kh={style:{"text-align":"center"}},qh={href:"https://leetcode.cn/problems/IQvJ9i",target:"_blank",rel:"noopener noreferrer"},wh=t("td",{style:{"text-align":"center"}},"LCP 52",-1),Ih=t("td",{style:{"text-align":"left"}},"二叉搜索树染色",-1),vh=t("td",{style:{"text-align":"center"}},null,-1),jh={style:{"text-align":"left"}},zh=t("code",null,"树",-1),Lh=t("code",null,"线段树",-1),Ch=t("code",null,"二叉搜索树",-1),Kh=t("code",null,"4+",-1),Bh=t("td",{style:{"text-align":"left"}},"🟠",-1),Nh={style:{"text-align":"center"}},Ph={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},Vh=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),Eh=t("td",{style:{"text-align":"left"}},"数组中的逆序对",-1),Oh={style:{"text-align":"center"}},Rh={style:{"text-align":"left"}},Qh=t("code",null,"树状数组",-1),Th=t("code",null,"线段树",-1),Ah=t("code",null,"数组",-1),Gh=t("code",null,"4+",-1),Jh=t("td",{style:{"text-align":"left"}},"🔴",-1),Dh={style:{"text-align":"center"}},Fh={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},Hh=t("td",{style:{"text-align":"center"}},"剑指 Offer II 58",-1),Mh=t("td",{style:{"text-align":"left"}},"日程表",-1),Sh={style:{"text-align":"center"}},Uh={style:{"text-align":"left"}},Wh=t("code",null,"设计",-1),Xh=t("code",null,"线段树",-1),Yh=t("code",null,"二分查找",-1),Zh=t("code",null,"1+",-1),$h=t("td",{style:{"text-align":"left"}},"🟠",-1),t1={style:{"text-align":"center"}},e1={href:"https://leetcode.cn/problems/fi9suh",target:"_blank",rel:"noopener noreferrer"};function o1(l1,n1){const l=d("RouterLink"),s=d("ExternalLinkIcon");return r(),a("div",null,[h,t("details",null,[g,u,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[f]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[T]),_:1}),e(),A,e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[G]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[J]),_:1})]),D,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[H]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[gt]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[ut]),_:1})]),ft,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Kt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Bt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Nt]),_:1})])]),Pt,c(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Et,Ot,Rt,t("td",Qt,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Tt]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[At]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Gt]),_:1}),e(),Jt]),Dt,t("td",Ft,[t("a",Ht,[e("🀄️"),o(s)]),e(),t("a",Mt,[e("🔗"),o(s)])])]),t("tr",null,[St,Ut,t("td",Wt,[o(l,{to:"/problem/0307.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Xt,[o(l,{to:"/tag/design.html"},{default:n(()=>[Yt]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Zt]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(s)]),e(),t("a",ne,[e("🔗"),o(s)])])]),t("tr",null,[se,de,_e,t("td",re,[o(l,{to:"/tag/design.html"},{default:n(()=>[ae]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[ce]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[ie]),_:1}),e(),he]),ge,t("td",ue,[t("a",fe,[e("🀄️"),o(s)]),e(),t("a",me,[e("🔗"),o(s)])])]),t("tr",null,[ye,pe,xe,t("td",be,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[ke]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[qe]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[we]),_:1}),e(),Ie]),ve,t("td",je,[t("a",ze,[e("🀄️"),o(s)]),e(),t("a",Le,[e("🔗"),o(s)])])]),t("tr",null,[Ce,Ke,Be,t("td",Ne,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Pe]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Ve]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ee]),_:1}),e(),Oe]),Re,t("td",Qe,[t("a",Te,[e("🀄️"),o(s)]),e(),t("a",Ae,[e("🔗"),o(s)])])]),t("tr",null,[Ge,Je,De,t("td",Fe,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[He]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Me]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Se]),_:1}),e(),Ue]),We,t("td",Xe,[t("a",Ye,[e("🀄️"),o(s)]),e(),t("a",Ze,[e("🔗"),o(s)])])]),t("tr",null,[$e,to,eo,t("td",oo,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[lo]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[no]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[so]),_:1}),e(),_o]),ro,t("td",ao,[t("a",co,[e("🀄️"),o(s)]),e(),t("a",io,[e("🔗"),o(s)])])]),t("tr",null,[ho,go,uo,t("td",fo,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[mo]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[yo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[po]),_:1}),e(),xo]),bo,t("td",ko,[t("a",qo,[e("🀄️"),o(s)]),e(),t("a",wo,[e("🔗"),o(s)])])]),t("tr",null,[Io,vo,jo,t("td",zo,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Lo]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Co]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[Ko]),_:1}),e(),Bo]),No,t("td",Po,[t("a",Vo,[e("🀄️"),o(s)]),e(),t("a",Eo,[e("🔗"),o(s)])])]),t("tr",null,[Oo,Ro,Qo,t("td",To,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Ao]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Go]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[Jo]),_:1})]),Do,t("td",Fo,[t("a",Ho,[e("🀄️"),o(s)]),e(),t("a",Mo,[e("🔗"),o(s)])])]),t("tr",null,[So,Uo,Wo,t("td",Xo,[o(l,{to:"/tag/design.html"},{default:n(()=>[Yo]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Zo]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[$o]),_:1})]),tl,t("td",el,[t("a",ol,[e("🀄️"),o(s)]),e(),t("a",ll,[e("🔗"),o(s)])])]),t("tr",null,[nl,sl,t("td",dl,[o(l,{to:"/problem/0729.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_l,[o(l,{to:"/tag/design.html"},{default:n(()=>[rl]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[al]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[cl]),_:1}),e(),il]),hl,t("td",gl,[t("a",ul,[e("🀄️"),o(s)]),e(),t("a",fl,[e("🔗"),o(s)])])]),t("tr",null,[ml,yl,t("td",pl,[o(l,{to:"/problem/0731.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xl,[o(l,{to:"/tag/design.html"},{default:n(()=>[bl]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[kl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ql]),_:1}),e(),wl]),Il,t("td",vl,[t("a",jl,[e("🀄️"),o(s)]),e(),t("a",zl,[e("🔗"),o(s)])])]),t("tr",null,[Ll,Cl,Kl,t("td",Bl,[o(l,{to:"/tag/design.html"},{default:n(()=>[Nl]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Pl]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[Vl]),_:1}),e(),El]),Ol,t("td",Rl,[t("a",Ql,[e("🀄️"),o(s)]),e(),t("a",Tl,[e("🔗"),o(s)])])]),t("tr",null,[Al,Gl,Jl,t("td",Dl,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Fl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Hl]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[Ml]),_:1}),e(),Sl]),Ul,t("td",Wl,[t("a",Xl,[e("🀄️"),o(s)]),e(),t("a",Yl,[e("🔗"),o(s)])])]),t("tr",null,[Zl,$l,tn,t("td",en,[o(l,{to:"/tag/design.html"},{default:n(()=>[on]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[ln]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[nn]),_:1}),e(),sn]),dn,t("td",_n,[t("a",rn,[e("🀄️"),o(s)]),e(),t("a",an,[e("🔗"),o(s)])])]),t("tr",null,[cn,hn,gn,t("td",un,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[fn]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[mn]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[yn]),_:1}),e(),pn]),xn,t("td",bn,[t("a",kn,[e("🀄️"),o(s)]),e(),t("a",qn,[e("🔗"),o(s)])])]),t("tr",null,[wn,In,vn,t("td",jn,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[zn]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Ln]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Cn]),_:1}),e(),Kn]),Bn,t("td",Nn,[t("a",Pn,[e("🀄️"),o(s)]),e(),t("a",Vn,[e("🔗"),o(s)])])]),t("tr",null,[En,On,Rn,t("td",Qn,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Tn]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[An]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Gn]),_:1}),e(),Jn]),Dn,t("td",Fn,[t("a",Hn,[e("🀄️"),o(s)]),e(),t("a",Mn,[e("🔗"),o(s)])])]),t("tr",null,[Sn,Un,Wn,t("td",Xn,[o(l,{to:"/tag/design.html"},{default:n(()=>[Yn]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Zn]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[$n]),_:1})]),ts,t("td",es,[t("a",os,[e("🀄️"),o(s)]),e(),t("a",ls,[e("🔗"),o(s)])])]),t("tr",null,[ns,ss,ds,t("td",_s,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[rs]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[as]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[cs]),_:1}),e(),is]),hs,t("td",gs,[t("a",us,[e("🀄️"),o(s)]),e(),t("a",fs,[e("🔗"),o(s)])])]),t("tr",null,[ms,ys,ps,t("td",xs,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[bs]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[ks]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[qs]),_:1}),e(),ws]),Is,t("td",vs,[t("a",js,[e("🀄️"),o(s)]),e(),t("a",zs,[e("🔗"),o(s)])])]),t("tr",null,[Ls,Cs,Ks,t("td",Bs,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Ns]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Ps]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Vs]),_:1}),e(),Es]),Os,t("td",Rs,[t("a",Qs,[e("🀄️"),o(s)]),e(),t("a",Ts,[e("🔗"),o(s)])])]),t("tr",null,[As,Gs,Js,t("td",Ds,[o(l,{to:"/tag/design.html"},{default:n(()=>[Fs]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Hs]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ms]),_:1}),e(),Ss]),Us,t("td",Ws,[t("a",Xs,[e("🀄️"),o(s)]),e(),t("a",Ys,[e("🔗"),o(s)])])]),t("tr",null,[Zs,$s,td,t("td",ed,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[od]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ld]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[nd]),_:1})]),sd,t("td",dd,[t("a",_d,[e("🀄️"),o(s)]),e(),t("a",rd,[e("🔗"),o(s)])])]),t("tr",null,[ad,cd,id,t("td",hd,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[gd]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[ud]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[fd]),_:1}),e(),md]),yd,t("td",pd,[t("a",xd,[e("🀄️"),o(s)]),e(),t("a",bd,[e("🔗"),o(s)])])]),t("tr",null,[kd,qd,wd,t("td",Id,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[vd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[jd]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[zd]),_:1}),e(),Ld]),Cd,t("td",Kd,[t("a",Bd,[e("🀄️"),o(s)]),e(),t("a",Nd,[e("🔗"),o(s)])])]),t("tr",null,[Pd,Vd,Ed,t("td",Od,[o(l,{to:"/tag/design.html"},{default:n(()=>[Rd]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Qd]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[Td]),_:1})]),Ad,t("td",Gd,[t("a",Jd,[e("🀄️"),o(s)]),e(),t("a",Dd,[e("🔗"),o(s)])])]),t("tr",null,[Fd,Hd,Md,t("td",Sd,[o(l,{to:"/tag/design.html"},{default:n(()=>[Ud]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Wd]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Xd]),_:1}),e(),Yd]),Zd,t("td",$d,[t("a",t_,[e("🀄️"),o(s)]),e(),t("a",e_,[e("🔗"),o(s)])])]),t("tr",null,[o_,l_,n_,t("td",s_,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[d_]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[__]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[r_]),_:1}),e(),a_]),c_,t("td",i_,[t("a",h_,[e("🀄️"),o(s)]),e(),t("a",g_,[e("🔗"),o(s)])])]),t("tr",null,[u_,f_,m_,t("td",y_,[o(l,{to:"/tag/union-find.html"},{default:n(()=>[p_]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[x_]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[b_]),_:1}),e(),k_]),q_,t("td",w_,[t("a",I_,[e("🀄️"),o(s)]),e(),t("a",v_,[e("🔗"),o(s)])])]),t("tr",null,[j_,z_,L_,t("td",C_,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[K_]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[B_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[N_]),_:1}),e(),P_]),V_,t("td",E_,[t("a",O_,[e("🀄️"),o(s)]),e(),t("a",R_,[e("🔗"),o(s)])])]),t("tr",null,[Q_,T_,A_,t("td",G_,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[J_]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[D_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[F_]),_:1}),e(),H_]),M_,t("td",S_,[t("a",U_,[e("🀄️"),o(s)]),e(),t("a",W_,[e("🔗"),o(s)])])]),t("tr",null,[X_,Y_,Z_,t("td",$_,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[tr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[er]),_:1})]),or,t("td",lr,[t("a",nr,[e("🀄️"),o(s)]),e(),t("a",sr,[e("🔗"),o(s)])])]),t("tr",null,[dr,_r,rr,t("td",ar,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[cr]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[ir]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[hr]),_:1}),e(),gr]),ur,t("td",fr,[t("a",mr,[e("🀄️"),o(s)]),e(),t("a",yr,[e("🔗"),o(s)])])]),t("tr",null,[pr,xr,br,t("td",kr,[o(l,{to:"/tag/stack.html"},{default:n(()=>[qr]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[wr]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Ir]),_:1}),e(),vr]),jr,t("td",zr,[t("a",Lr,[e("🀄️"),o(s)]),e(),t("a",Cr,[e("🔗"),o(s)])])]),t("tr",null,[Kr,Br,Nr,t("td",Pr,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Vr]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Er]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Or]),_:1})]),Rr,t("td",Qr,[t("a",Tr,[e("🀄️"),o(s)]),e(),t("a",Ar,[e("🔗"),o(s)])])]),t("tr",null,[Gr,Jr,Dr,t("td",Fr,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Hr]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Mr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Sr]),_:1}),e(),Ur]),Wr,t("td",Xr,[t("a",Yr,[e("🀄️"),o(s)]),e(),t("a",Zr,[e("🔗"),o(s)])])]),t("tr",null,[$r,ta,ea,t("td",oa,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[la]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[na]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[sa]),_:1})]),da,t("td",_a,[t("a",ra,[e("🀄️"),o(s)]),e(),t("a",aa,[e("🔗"),o(s)])])]),t("tr",null,[ca,ia,ha,t("td",ga,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[ua]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[fa]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ma]),_:1}),e(),ya]),pa,t("td",xa,[t("a",ba,[e("🀄️"),o(s)]),e(),t("a",ka,[e("🔗"),o(s)])])]),t("tr",null,[qa,wa,Ia,t("td",va,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ja]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[za]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[La]),_:1}),e(),Ca]),Ka,t("td",Ba,[t("a",Na,[e("🀄️"),o(s)]),e(),t("a",Pa,[e("🔗"),o(s)])])]),t("tr",null,[Va,Ea,Oa,t("td",Ra,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Qa]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Ta]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Aa]),_:1}),e(),Ga]),Ja,t("td",Da,[t("a",Fa,[e("🀄️"),o(s)]),e(),t("a",Ha,[e("🔗"),o(s)])])]),t("tr",null,[Ma,Sa,Ua,t("td",Wa,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Xa]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Ya]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Za]),_:1}),e(),$a]),tc,t("td",ec,[t("a",oc,[e("🀄️"),o(s)]),e(),t("a",lc,[e("🔗"),o(s)])])]),t("tr",null,[nc,sc,dc,t("td",_c,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[rc]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[ac]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[cc]),_:1}),e(),ic]),hc,t("td",gc,[t("a",uc,[e("🀄️"),o(s)]),e(),t("a",fc,[e("🔗"),o(s)])])]),t("tr",null,[mc,yc,pc,t("td",xc,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[bc]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[kc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[qc]),_:1}),e(),wc]),Ic,t("td",vc,[t("a",jc,[e("🀄️"),o(s)]),e(),t("a",zc,[e("🔗"),o(s)])])]),t("tr",null,[Lc,Cc,Kc,t("td",Bc,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Nc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Pc]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[Vc]),_:1}),e(),Ec]),Oc,t("td",Rc,[t("a",Qc,[e("🀄️"),o(s)]),e(),t("a",Tc,[e("🔗"),o(s)])])]),t("tr",null,[Ac,Gc,Jc,t("td",Dc,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Fc]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Hc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Mc]),_:1}),e(),Sc]),Uc,t("td",Wc,[t("a",Xc,[e("🀄️"),o(s)]),e(),t("a",Yc,[e("🔗"),o(s)])])]),t("tr",null,[Zc,$c,ti,t("td",ei,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[oi]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[li]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ni]),_:1})]),si,t("td",di,[t("a",_i,[e("🀄️"),o(s)]),e(),t("a",ri,[e("🔗"),o(s)])])]),t("tr",null,[ai,ci,ii,t("td",hi,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[gi]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[ui]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[fi]),_:1}),e(),mi]),yi,t("td",pi,[t("a",xi,[e("🀄️"),o(s)]),e(),t("a",bi,[e("🔗"),o(s)])])]),t("tr",null,[ki,qi,wi,t("td",Ii,[o(l,{to:"/tag/trie.html"},{default:n(()=>[vi]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[ji]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[zi]),_:1}),e(),Li]),Ci,t("td",Ki,[t("a",Bi,[e("🀄️"),o(s)]),e(),t("a",Ni,[e("🔗"),o(s)])])]),t("tr",null,[Pi,Vi,Ei,t("td",Oi,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Ri]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Qi]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Ti]),_:1}),e(),Ai]),Gi,t("td",Ji,[t("a",Di,[e("🀄️"),o(s)]),e(),t("a",Fi,[e("🔗"),o(s)])])]),t("tr",null,[Hi,Mi,Si,t("td",Ui,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Wi]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Xi]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Yi]),_:1})]),Zi,t("td",$i,[t("a",th,[e("🀄️"),o(s)])])]),t("tr",null,[eh,oh,lh,t("td",nh,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[sh]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[dh]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_h]),_:1}),e(),rh]),ah,t("td",ch,[t("a",ih,[e("🀄️"),o(s)])])]),t("tr",null,[hh,gh,uh,t("td",fh,[o(l,{to:"/tag/design.html"},{default:n(()=>[mh]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[yh]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[ph]),_:1}),e(),xh]),bh,t("td",kh,[t("a",qh,[e("🀄️"),o(s)])])]),t("tr",null,[wh,Ih,vh,t("td",jh,[o(l,{to:"/tag/tree.html"},{default:n(()=>[zh]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Lh]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[Ch]),_:1}),e(),Kh]),Bh,t("td",Nh,[t("a",Ph,[e("🀄️"),o(s)])])]),t("tr",null,[Vh,Eh,t("td",Oh,[o(l,{to:"/offer/jz_offer_51_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Rh,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[Qh]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Th]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ah]),_:1}),e(),Gh]),Jh,t("td",Dh,[t("a",Fh,[e("🀄️"),o(s)])])]),t("tr",null,[Hh,Mh,t("td",Sh,[o(l,{to:"/offer2/jz_offer_II_058.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Uh,[o(l,{to:"/tag/design.html"},{default:n(()=>[Wh]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[Xh]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[Yh]),_:1}),e(),Zh]),$h,t("td",t1,[t("a",e1,[e("🀄️"),o(s)])])])])])])}const d1=_(i,[["render",o1],["__file","segment-tree.html.vue"]]);export{d1 as default};
