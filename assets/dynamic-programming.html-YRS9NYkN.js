import{_ as i,r as _,o as a,c as r,a as t,b as e,w as o,d as l,f as c}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"动态规划",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#动态规划","aria-hidden":"true"},"#"),l(" 动态规划")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),H=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),C=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),j=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),K=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),N=t("code",null,"强连通分量",-1),D=t("code",null,"欧拉回路",-1),B=t("code",null,"双连通分量",-1),Y=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),J=t("code",null,"线段树",-1),R=t("code",null,"树状数组",-1),S=t("code",null,"后缀数组",-1),U=t("p",null,[t("strong",null,"算法")],-1),W=t("code",null,"枚举",-1),X=t("code",null,"递归",-1),F=t("code",null,"分治",-1),G=t("code",null,"回溯",-1),T=t("code",null,"贪心",-1),Q=t("span",{class:"blue"},"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),Ht=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Ct=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),jt=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Kt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Nt=t("td",{style:{"text-align":"center"}},"5",-1),Dt={style:{"text-align":"left"}},Bt={href:"https://leetcode.com/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},Yt={style:{"text-align":"center"}},At={href:"/problem/0005",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"left"}},Rt=t("code",null,"双指针",-1),St=t("code",null,"字符串",-1),Ut=t("code",null,"动态规划",-1),Wt={style:{"text-align":"left"}},Xt=t("td",{style:{"text-align":"center"}},"10",-1),Ft={style:{"text-align":"left"}},Gt={href:"https://leetcode.com/problems/regular-expression-matching",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"center"}},Qt={href:"/problem/0010",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"left"}},$t=t("code",null,"递归",-1),te=t("code",null,"字符串",-1),ee=t("code",null,"动态规划",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"22",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/generate-parentheses",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},_e={href:"/problem/0022",target:"_blank",rel:"noopener noreferrer"},ie={style:{"text-align":"left"}},ae=t("code",null,"字符串",-1),re=t("code",null,"动态规划",-1),ce=t("code",null,"回溯",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"32",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={href:"/problem/0032",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"left"}},pe=t("code",null,"栈",-1),be=t("code",null,"字符串",-1),ke=t("code",null,"动态规划",-1),Me={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"42",-1),Ie={style:{"text-align":"left"}},we={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},ve={style:{"text-align":"center"}},qe={href:"/problem/0042",target:"_blank",rel:"noopener noreferrer"},ze={style:{"text-align":"left"}},Ce=t("code",null,"栈",-1),Oe=t("code",null,"数组",-1),je=t("code",null,"双指针",-1),Le=t("code",null,"2+",-1),Ee={style:{"text-align":"left"}},Pe=t("td",{style:{"text-align":"center"}},"44",-1),Ke={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/wildcard-matching",target:"_blank",rel:"noopener noreferrer"},Ne={style:{"text-align":"center"}},De={href:"/problem/0044",target:"_blank",rel:"noopener noreferrer"},Be={style:{"text-align":"left"}},Ye=t("code",null,"贪心",-1),Ae=t("code",null,"递归",-1),Je=t("code",null,"字符串",-1),Re=t("code",null,"1+",-1),Se={style:{"text-align":"left"}},Ue=t("td",{style:{"text-align":"center"}},"45",-1),We={style:{"text-align":"left"}},Xe={href:"https://leetcode.com/problems/jump-game-ii",target:"_blank",rel:"noopener noreferrer"},Fe={style:{"text-align":"center"}},Ge={href:"/problem/0045",target:"_blank",rel:"noopener noreferrer"},Te={style:{"text-align":"left"}},Qe=t("code",null,"贪心",-1),Ze=t("code",null,"数组",-1),$e=t("code",null,"动态规划",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"53",-1),ll={style:{"text-align":"left"}},ol={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},nl={style:{"text-align":"center"}},sl={href:"/problem/0053",target:"_blank",rel:"noopener noreferrer"},dl={style:{"text-align":"left"}},_l=t("code",null,"数组",-1),il=t("code",null,"分治",-1),al=t("code",null,"动态规划",-1),rl={style:{"text-align":"left"}},cl=t("td",{style:{"text-align":"center"}},"55",-1),hl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/jump-game",target:"_blank",rel:"noopener noreferrer"},fl={style:{"text-align":"center"}},gl={href:"/problem/0055",target:"_blank",rel:"noopener noreferrer"},ml={style:{"text-align":"left"}},yl=t("code",null,"贪心",-1),xl=t("code",null,"数组",-1),pl=t("code",null,"动态规划",-1),bl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"center"}},"62",-1),Ml={style:{"text-align":"left"}},Hl={href:"https://leetcode.com/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},Il={style:{"text-align":"center"}},wl={href:"/problem/0062",target:"_blank",rel:"noopener noreferrer"},vl={style:{"text-align":"left"}},ql=t("code",null,"数学",-1),zl=t("code",null,"动态规划",-1),Cl=t("code",null,"组合数学",-1),Ol={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"63",-1),Ll={style:{"text-align":"left"}},El={href:"https://leetcode.com/problems/unique-paths-ii",target:"_blank",rel:"noopener noreferrer"},Pl={style:{"text-align":"center"}},Kl={href:"/problem/0063",target:"_blank",rel:"noopener noreferrer"},Vl={style:{"text-align":"left"}},Nl=t("code",null,"数组",-1),Dl=t("code",null,"动态规划",-1),Bl=t("code",null,"矩阵",-1),Yl={style:{"text-align":"left"}},Al=t("td",{style:{"text-align":"center"}},"64",-1),Jl={style:{"text-align":"left"}},Rl={href:"https://leetcode.com/problems/minimum-path-sum",target:"_blank",rel:"noopener noreferrer"},Sl={style:{"text-align":"center"}},Ul={href:"/problem/0064",target:"_blank",rel:"noopener noreferrer"},Wl={style:{"text-align":"left"}},Xl=t("code",null,"数组",-1),Fl=t("code",null,"动态规划",-1),Gl=t("code",null,"矩阵",-1),Tl={style:{"text-align":"left"}},Ql=t("td",{style:{"text-align":"center"}},"70",-1),Zl={style:{"text-align":"left"}},$l={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},to={style:{"text-align":"center"}},eo={href:"/problem/0070",target:"_blank",rel:"noopener noreferrer"},lo={style:{"text-align":"left"}},oo=t("code",null,"记忆化搜索",-1),no=t("code",null,"数学",-1),so=t("code",null,"动态规划",-1),_o={style:{"text-align":"left"}},io=t("td",{style:{"text-align":"center"}},"72",-1),ao={style:{"text-align":"left"}},ro={href:"https://leetcode.com/problems/edit-distance",target:"_blank",rel:"noopener noreferrer"},co={style:{"text-align":"center"}},ho={href:"/problem/0072",target:"_blank",rel:"noopener noreferrer"},uo={style:{"text-align":"left"}},fo=t("code",null,"字符串",-1),go=t("code",null,"动态规划",-1),mo={style:{"text-align":"left"}},yo=t("td",{style:{"text-align":"center"}},"85",-1),xo={style:{"text-align":"left"}},po={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},bo={style:{"text-align":"center"}},ko={href:"/problem/0085",target:"_blank",rel:"noopener noreferrer"},Mo={style:{"text-align":"left"}},Ho=t("code",null,"栈",-1),Io=t("code",null,"数组",-1),wo=t("code",null,"动态规划",-1),vo=t("code",null,"2+",-1),qo={style:{"text-align":"left"}},zo=t("td",{style:{"text-align":"center"}},"87",-1),Co={style:{"text-align":"left"}},Oo={href:"https://leetcode.com/problems/scramble-string",target:"_blank",rel:"noopener noreferrer"},jo=t("td",{style:{"text-align":"center"}},null,-1),Lo={style:{"text-align":"left"}},Eo=t("code",null,"字符串",-1),Po=t("code",null,"动态规划",-1),Ko={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"91",-1),No={style:{"text-align":"left"}},Do={href:"https://leetcode.com/problems/decode-ways",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},null,-1),Yo={style:{"text-align":"left"}},Ao=t("code",null,"字符串",-1),Jo=t("code",null,"动态规划",-1),Ro={style:{"text-align":"left"}},So=t("td",{style:{"text-align":"center"}},"95",-1),Uo={style:{"text-align":"left"}},Wo={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Xo={style:{"text-align":"center"}},Fo={href:"/problem/0095",target:"_blank",rel:"noopener noreferrer"},Go={style:{"text-align":"left"}},To=t("code",null,"树",-1),Qo=t("code",null,"二叉搜索树",-1),Zo=t("code",null,"动态规划",-1),$o=t("code",null,"2+",-1),tn={style:{"text-align":"left"}},en=t("td",{style:{"text-align":"center"}},"96",-1),ln={style:{"text-align":"left"}},on={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},nn={style:{"text-align":"center"}},sn={href:"/problem/0096",target:"_blank",rel:"noopener noreferrer"},dn={style:{"text-align":"left"}},_n=t("code",null,"树",-1),an=t("code",null,"二叉搜索树",-1),rn=t("code",null,"数学",-1),cn=t("code",null,"2+",-1),hn={style:{"text-align":"left"}},un=t("td",{style:{"text-align":"center"}},"97",-1),fn={style:{"text-align":"left"}},gn={href:"https://leetcode.com/problems/interleaving-string",target:"_blank",rel:"noopener noreferrer"},mn={style:{"text-align":"center"}},yn={href:"/problem/0097",target:"_blank",rel:"noopener noreferrer"},xn={style:{"text-align":"left"}},pn=t("code",null,"字符串",-1),bn=t("code",null,"动态规划",-1),kn={style:{"text-align":"left"}},Mn=t("td",{style:{"text-align":"center"}},"115",-1),Hn={style:{"text-align":"left"}},In={href:"https://leetcode.com/problems/distinct-subsequences",target:"_blank",rel:"noopener noreferrer"},wn=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},qn=t("code",null,"字符串",-1),zn=t("code",null,"动态规划",-1),Cn={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"center"}},"118",-1),jn={style:{"text-align":"left"}},Ln={href:"https://leetcode.com/problems/pascals-triangle",target:"_blank",rel:"noopener noreferrer"},En={style:{"text-align":"center"}},Pn={href:"/problem/0118",target:"_blank",rel:"noopener noreferrer"},Kn={style:{"text-align":"left"}},Vn=t("code",null,"数组",-1),Nn=t("code",null,"动态规划",-1),Dn={style:{"text-align":"left"}},Bn=t("td",{style:{"text-align":"center"}},"119",-1),Yn={style:{"text-align":"left"}},An={href:"https://leetcode.com/problems/pascals-triangle-ii",target:"_blank",rel:"noopener noreferrer"},Jn=t("td",{style:{"text-align":"center"}},null,-1),Rn={style:{"text-align":"left"}},Sn=t("code",null,"数组",-1),Un=t("code",null,"动态规划",-1),Wn={style:{"text-align":"left"}},Xn=t("td",{style:{"text-align":"center"}},"120",-1),Fn={style:{"text-align":"left"}},Gn={href:"https://leetcode.com/problems/triangle",target:"_blank",rel:"noopener noreferrer"},Tn={style:{"text-align":"center"}},Qn={href:"/problem/0120",target:"_blank",rel:"noopener noreferrer"},Zn={style:{"text-align":"left"}},$n=t("code",null,"数组",-1),ts=t("code",null,"动态规划",-1),es={style:{"text-align":"left"}},ls=t("td",{style:{"text-align":"center"}},"121",-1),os={style:{"text-align":"left"}},ns={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock",target:"_blank",rel:"noopener noreferrer"},ss={style:{"text-align":"center"}},ds={href:"/problem/0121",target:"_blank",rel:"noopener noreferrer"},_s={style:{"text-align":"left"}},is=t("code",null,"数组",-1),as=t("code",null,"动态规划",-1),rs={style:{"text-align":"left"}},cs=t("td",{style:{"text-align":"center"}},"122",-1),hs={style:{"text-align":"left"}},us={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",target:"_blank",rel:"noopener noreferrer"},fs={style:{"text-align":"center"}},gs={href:"/problem/0122",target:"_blank",rel:"noopener noreferrer"},ms={style:{"text-align":"left"}},ys=t("code",null,"贪心",-1),xs=t("code",null,"数组",-1),ps=t("code",null,"动态规划",-1),bs={style:{"text-align":"left"}},ks=t("td",{style:{"text-align":"center"}},"123",-1),Ms={style:{"text-align":"left"}},Hs={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",target:"_blank",rel:"noopener noreferrer"},Is={style:{"text-align":"center"}},ws={href:"/problem/0123",target:"_blank",rel:"noopener noreferrer"},vs={style:{"text-align":"left"}},qs=t("code",null,"数组",-1),zs=t("code",null,"动态规划",-1),Cs={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"124",-1),js={style:{"text-align":"left"}},Ls={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Es={style:{"text-align":"center"}},Ps={href:"/problem/0124",target:"_blank",rel:"noopener noreferrer"},Ks={style:{"text-align":"left"}},Vs=t("code",null,"树",-1),Ns=t("code",null,"深度优先搜索",-1),Ds=t("code",null,"动态规划",-1),Bs=t("code",null,"1+",-1),Ys={style:{"text-align":"left"}},As=t("td",{style:{"text-align":"center"}},"131",-1),Js={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/palindrome-partitioning",target:"_blank",rel:"noopener noreferrer"},Ss={style:{"text-align":"center"}},Us={href:"/problem/0131",target:"_blank",rel:"noopener noreferrer"},Ws={style:{"text-align":"left"}},Xs=t("code",null,"字符串",-1),Fs=t("code",null,"动态规划",-1),Gs=t("code",null,"回溯",-1),Ts={style:{"text-align":"left"}},Qs=t("td",{style:{"text-align":"center"}},"132",-1),Zs={style:{"text-align":"left"}},$s={href:"https://leetcode.com/problems/palindrome-partitioning-ii",target:"_blank",rel:"noopener noreferrer"},td=t("td",{style:{"text-align":"center"}},null,-1),ed={style:{"text-align":"left"}},ld=t("code",null,"字符串",-1),od=t("code",null,"动态规划",-1),nd={style:{"text-align":"left"}},sd=t("td",{style:{"text-align":"center"}},"139",-1),dd={style:{"text-align":"left"}},_d={href:"https://leetcode.com/problems/word-break",target:"_blank",rel:"noopener noreferrer"},id={style:{"text-align":"center"}},ad={href:"/problem/0139",target:"_blank",rel:"noopener noreferrer"},rd={style:{"text-align":"left"}},cd=t("code",null,"字典树",-1),hd=t("code",null,"记忆化搜索",-1),ud=t("code",null,"数组",-1),fd=t("code",null,"3+",-1),gd={style:{"text-align":"left"}},md=t("td",{style:{"text-align":"center"}},"140",-1),yd={style:{"text-align":"left"}},xd={href:"https://leetcode.com/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},pd=t("td",{style:{"text-align":"center"}},null,-1),bd={style:{"text-align":"left"}},kd=t("code",null,"字典树",-1),Md=t("code",null,"记忆化搜索",-1),Hd=t("code",null,"数组",-1),Id=t("code",null,"4+",-1),wd={style:{"text-align":"left"}},vd=t("td",{style:{"text-align":"center"}},"152",-1),qd={style:{"text-align":"left"}},zd={href:"https://leetcode.com/problems/maximum-product-subarray",target:"_blank",rel:"noopener noreferrer"},Cd={style:{"text-align":"center"}},Od={href:"/problem/0152",target:"_blank",rel:"noopener noreferrer"},jd={style:{"text-align":"left"}},Ld=t("code",null,"数组",-1),Ed=t("code",null,"动态规划",-1),Pd={style:{"text-align":"left"}},Kd=t("td",{style:{"text-align":"center"}},"174",-1),Vd={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/dungeon-game",target:"_blank",rel:"noopener noreferrer"},Dd={style:{"text-align":"center"}},Bd={href:"/problem/0174",target:"_blank",rel:"noopener noreferrer"},Yd={style:{"text-align":"left"}},Ad=t("code",null,"数组",-1),Jd=t("code",null,"动态规划",-1),Rd=t("code",null,"矩阵",-1),Sd={style:{"text-align":"left"}},Ud=t("td",{style:{"text-align":"center"}},"188",-1),Wd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",target:"_blank",rel:"noopener noreferrer"},Fd={style:{"text-align":"center"}},Gd={href:"/problem/0188",target:"_blank",rel:"noopener noreferrer"},Td={style:{"text-align":"left"}},Qd=t("code",null,"数组",-1),Zd=t("code",null,"动态规划",-1),$d={style:{"text-align":"left"}},t_=t("td",{style:{"text-align":"center"}},"198",-1),e_={style:{"text-align":"left"}},l_={href:"https://leetcode.com/problems/house-robber",target:"_blank",rel:"noopener noreferrer"},o_={style:{"text-align":"center"}},n_={href:"/problem/0198",target:"_blank",rel:"noopener noreferrer"},s_={style:{"text-align":"left"}},d_=t("code",null,"数组",-1),__=t("code",null,"动态规划",-1),i_={style:{"text-align":"left"}},a_=t("td",{style:{"text-align":"center"}},"213",-1),r_={style:{"text-align":"left"}},c_={href:"https://leetcode.com/problems/house-robber-ii",target:"_blank",rel:"noopener noreferrer"},h_=t("td",{style:{"text-align":"center"}},null,-1),u_={style:{"text-align":"left"}},f_=t("code",null,"数组",-1),g_=t("code",null,"动态规划",-1),m_={style:{"text-align":"left"}},y_=t("td",{style:{"text-align":"center"}},"221",-1),x_={style:{"text-align":"left"}},p_={href:"https://leetcode.com/problems/maximal-square",target:"_blank",rel:"noopener noreferrer"},b_={style:{"text-align":"center"}},k_={href:"/problem/0221",target:"_blank",rel:"noopener noreferrer"},M_={style:{"text-align":"left"}},H_=t("code",null,"数组",-1),I_=t("code",null,"动态规划",-1),w_=t("code",null,"矩阵",-1),v_={style:{"text-align":"left"}},q_=t("td",{style:{"text-align":"center"}},"233",-1),z_={style:{"text-align":"left"}},C_={href:"https://leetcode.com/problems/number-of-digit-one",target:"_blank",rel:"noopener noreferrer"},O_=t("td",{style:{"text-align":"center"}},null,-1),j_={style:{"text-align":"left"}},L_=t("code",null,"递归",-1),E_=t("code",null,"数学",-1),P_=t("code",null,"动态规划",-1),K_={style:{"text-align":"left"}},V_=t("td",{style:{"text-align":"center"}},"241",-1),N_={style:{"text-align":"left"}},D_={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},null,-1),Y_={style:{"text-align":"left"}},A_=t("code",null,"递归",-1),J_=t("code",null,"记忆化搜索",-1),R_=t("code",null,"数学",-1),S_=t("code",null,"2+",-1),U_={style:{"text-align":"left"}},W_=t("td",{style:{"text-align":"center"}},"256",-1),X_={style:{"text-align":"left"}},F_={href:"https://leetcode.com/problems/paint-house",target:"_blank",rel:"noopener noreferrer"},G_=t("td",{style:{"text-align":"center"}},null,-1),T_={style:{"text-align":"left"}},Q_=t("code",null,"数组",-1),Z_=t("code",null,"动态规划",-1),$_={style:{"text-align":"left"}},ti=t("td",{style:{"text-align":"center"}},"264",-1),ei={style:{"text-align":"left"}},li={href:"https://leetcode.com/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},oi={style:{"text-align":"center"}},ni={href:"/problem/0264",target:"_blank",rel:"noopener noreferrer"},si={style:{"text-align":"left"}},di=t("code",null,"哈希表",-1),_i=t("code",null,"数学",-1),ii=t("code",null,"动态规划",-1),ai=t("code",null,"1+",-1),ri={style:{"text-align":"left"}},ci=t("td",{style:{"text-align":"center"}},"265",-1),hi={style:{"text-align":"left"}},ui={href:"https://leetcode.com/problems/paint-house-ii",target:"_blank",rel:"noopener noreferrer"},fi=t("td",{style:{"text-align":"center"}},null,-1),gi={style:{"text-align":"left"}},mi=t("code",null,"数组",-1),yi=t("code",null,"动态规划",-1),xi={style:{"text-align":"left"}},pi=t("td",{style:{"text-align":"center"}},"276",-1),bi={style:{"text-align":"left"}},ki={href:"https://leetcode.com/problems/paint-fence",target:"_blank",rel:"noopener noreferrer"},Mi=t("td",{style:{"text-align":"center"}},null,-1),Hi={style:{"text-align":"left"}},Ii=t("code",null,"动态规划",-1),wi={style:{"text-align":"left"}},vi=t("td",{style:{"text-align":"center"}},"279",-1),qi={style:{"text-align":"left"}},zi={href:"https://leetcode.com/problems/perfect-squares",target:"_blank",rel:"noopener noreferrer"},Ci={style:{"text-align":"center"}},Oi={href:"/problem/0279",target:"_blank",rel:"noopener noreferrer"},ji={style:{"text-align":"left"}},Li=t("code",null,"广度优先搜索",-1),Ei=t("code",null,"数学",-1),Pi=t("code",null,"动态规划",-1),Ki={style:{"text-align":"left"}},Vi=t("td",{style:{"text-align":"center"}},"294",-1),Ni={style:{"text-align":"left"}},Di={href:"https://leetcode.com/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},Bi=t("td",{style:{"text-align":"center"}},null,-1),Yi={style:{"text-align":"left"}},Ai=t("code",null,"记忆化搜索",-1),Ji=t("code",null,"数学",-1),Ri=t("code",null,"动态规划",-1),Si=t("code",null,"2+",-1),Ui={style:{"text-align":"left"}},Wi=t("td",{style:{"text-align":"center"}},"300",-1),Xi={style:{"text-align":"left"}},Fi={href:"https://leetcode.com/problems/longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},Gi={style:{"text-align":"center"}},Ti={href:"/problem/0300",target:"_blank",rel:"noopener noreferrer"},Qi={style:{"text-align":"left"}},Zi=t("code",null,"数组",-1),$i=t("code",null,"二分查找",-1),ta=t("code",null,"动态规划",-1),ea={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"309",-1),oa={style:{"text-align":"left"}},na={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",target:"_blank",rel:"noopener noreferrer"},sa={style:{"text-align":"center"}},da={href:"/problem/0309",target:"_blank",rel:"noopener noreferrer"},_a={style:{"text-align":"left"}},ia=t("code",null,"数组",-1),aa=t("code",null,"动态规划",-1),ra={style:{"text-align":"left"}},ca=t("td",{style:{"text-align":"center"}},"312",-1),ha={style:{"text-align":"left"}},ua={href:"https://leetcode.com/problems/burst-balloons",target:"_blank",rel:"noopener noreferrer"},fa=t("td",{style:{"text-align":"center"}},null,-1),ga={style:{"text-align":"left"}},ma=t("code",null,"数组",-1),ya=t("code",null,"动态规划",-1),xa={style:{"text-align":"left"}},pa=t("td",{style:{"text-align":"center"}},"313",-1),ba={style:{"text-align":"left"}},ka={href:"https://leetcode.com/problems/super-ugly-number",target:"_blank",rel:"noopener noreferrer"},Ma=t("td",{style:{"text-align":"center"}},null,-1),Ha={style:{"text-align":"left"}},Ia=t("code",null,"数组",-1),wa=t("code",null,"数学",-1),va=t("code",null,"动态规划",-1),qa={style:{"text-align":"left"}},za=t("td",{style:{"text-align":"center"}},"322",-1),Ca={style:{"text-align":"left"}},Oa={href:"https://leetcode.com/problems/coin-change",target:"_blank",rel:"noopener noreferrer"},ja={style:{"text-align":"center"}},La={href:"/problem/0322",target:"_blank",rel:"noopener noreferrer"},Ea={style:{"text-align":"left"}},Pa=t("code",null,"广度优先搜索",-1),Ka=t("code",null,"数组",-1),Va=t("code",null,"动态规划",-1),Na={style:{"text-align":"left"}},Da=t("td",{style:{"text-align":"center"}},"329",-1),Ba={style:{"text-align":"left"}},Ya={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Aa=t("td",{style:{"text-align":"center"}},null,-1),Ja={style:{"text-align":"left"}},Ra=t("code",null,"深度优先搜索",-1),Sa=t("code",null,"广度优先搜索",-1),Ua=t("code",null,"图",-1),Wa=t("code",null,"5+",-1),Xa={style:{"text-align":"left"}},Fa=t("td",{style:{"text-align":"center"}},"333",-1),Ga={style:{"text-align":"left"}},Ta={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Qa=t("td",{style:{"text-align":"center"}},null,-1),Za={style:{"text-align":"left"}},$a=t("code",null,"树",-1),tr=t("code",null,"深度优先搜索",-1),er=t("code",null,"二叉搜索树",-1),lr=t("code",null,"2+",-1),or={style:{"text-align":"left"}},nr=t("td",{style:{"text-align":"center"}},"337",-1),sr={style:{"text-align":"left"}},dr={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},_r=t("td",{style:{"text-align":"center"}},null,-1),ir={style:{"text-align":"left"}},ar=t("code",null,"树",-1),rr=t("code",null,"深度优先搜索",-1),cr=t("code",null,"动态规划",-1),hr=t("code",null,"1+",-1),ur={style:{"text-align":"left"}},fr=t("td",{style:{"text-align":"center"}},"338",-1),gr={style:{"text-align":"left"}},mr={href:"https://leetcode.com/problems/counting-bits",target:"_blank",rel:"noopener noreferrer"},yr=t("td",{style:{"text-align":"center"}},null,-1),xr={style:{"text-align":"left"}},pr=t("code",null,"位运算",-1),br=t("code",null,"动态规划",-1),kr={style:{"text-align":"left"}},Mr=t("td",{style:{"text-align":"center"}},"343",-1),Hr={style:{"text-align":"left"}},Ir={href:"https://leetcode.com/problems/integer-break",target:"_blank",rel:"noopener noreferrer"},wr={style:{"text-align":"center"}},vr={href:"/problem/0343",target:"_blank",rel:"noopener noreferrer"},qr={style:{"text-align":"left"}},zr=t("code",null,"数学",-1),Cr=t("code",null,"动态规划",-1),Or={style:{"text-align":"left"}},jr=t("td",{style:{"text-align":"center"}},"351",-1),Lr={style:{"text-align":"left"}},Er={href:"https://leetcode.com/problems/android-unlock-patterns",target:"_blank",rel:"noopener noreferrer"},Pr=t("td",{style:{"text-align":"center"}},null,-1),Kr={style:{"text-align":"left"}},Vr=t("code",null,"位运算",-1),Nr=t("code",null,"动态规划",-1),Dr=t("code",null,"回溯",-1),Br=t("code",null,"1+",-1),Yr={style:{"text-align":"left"}},Ar=t("td",{style:{"text-align":"center"}},"354",-1),Jr={style:{"text-align":"left"}},Rr={href:"https://leetcode.com/problems/russian-doll-envelopes",target:"_blank",rel:"noopener noreferrer"},Sr={style:{"text-align":"center"}},Ur={href:"/problem/0354",target:"_blank",rel:"noopener noreferrer"},Wr={style:{"text-align":"left"}},Xr=t("code",null,"数组",-1),Fr=t("code",null,"二分查找",-1),Gr=t("code",null,"动态规划",-1),Tr=t("code",null,"1+",-1),Qr={style:{"text-align":"left"}},Zr=t("td",{style:{"text-align":"center"}},"357",-1),$r={style:{"text-align":"left"}},tc={href:"https://leetcode.com/problems/count-numbers-with-unique-digits",target:"_blank",rel:"noopener noreferrer"},ec=t("td",{style:{"text-align":"center"}},null,-1),lc={style:{"text-align":"left"}},oc=t("code",null,"数学",-1),nc=t("code",null,"动态规划",-1),sc=t("code",null,"回溯",-1),dc={style:{"text-align":"left"}},_c=t("td",{style:{"text-align":"center"}},"361",-1),ic={style:{"text-align":"left"}},ac={href:"https://leetcode.com/problems/bomb-enemy",target:"_blank",rel:"noopener noreferrer"},rc=t("td",{style:{"text-align":"center"}},null,-1),cc={style:{"text-align":"left"}},hc=t("code",null,"数组",-1),uc=t("code",null,"动态规划",-1),fc=t("code",null,"矩阵",-1),gc={style:{"text-align":"left"}},mc=t("td",{style:{"text-align":"center"}},"368",-1),yc={style:{"text-align":"left"}},xc={href:"https://leetcode.com/problems/largest-divisible-subset",target:"_blank",rel:"noopener noreferrer"},pc=t("td",{style:{"text-align":"center"}},null,-1),bc={style:{"text-align":"left"}},kc=t("code",null,"数组",-1),Mc=t("code",null,"数学",-1),Hc=t("code",null,"动态规划",-1),Ic=t("code",null,"1+",-1),wc={style:{"text-align":"left"}},vc=t("td",{style:{"text-align":"center"}},"375",-1),qc={style:{"text-align":"left"}},zc={href:"https://leetcode.com/problems/guess-number-higher-or-lower-ii",target:"_blank",rel:"noopener noreferrer"},Cc={style:{"text-align":"center"}},Oc={href:"/problem/0375",target:"_blank",rel:"noopener noreferrer"},jc={style:{"text-align":"left"}},Lc=t("code",null,"数学",-1),Ec=t("code",null,"动态规划",-1),Pc=t("code",null,"博弈",-1),Kc={style:{"text-align":"left"}},Vc=t("td",{style:{"text-align":"center"}},"376",-1),Nc={style:{"text-align":"left"}},Dc={href:"https://leetcode.com/problems/wiggle-subsequence",target:"_blank",rel:"noopener noreferrer"},Bc=t("td",{style:{"text-align":"center"}},null,-1),Yc={style:{"text-align":"left"}},Ac=t("code",null,"贪心",-1),Jc=t("code",null,"数组",-1),Rc=t("code",null,"动态规划",-1),Sc={style:{"text-align":"left"}},Uc=t("td",{style:{"text-align":"center"}},"377",-1),Wc={style:{"text-align":"left"}},Xc={href:"https://leetcode.com/problems/combination-sum-iv",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},null,-1),Gc={style:{"text-align":"left"}},Tc=t("code",null,"数组",-1),Qc=t("code",null,"动态规划",-1),Zc={style:{"text-align":"left"}},$c=t("td",{style:{"text-align":"center"}},"392",-1),th={style:{"text-align":"left"}},eh={href:"https://leetcode.com/problems/is-subsequence",target:"_blank",rel:"noopener noreferrer"},lh={style:{"text-align":"center"}},oh={href:"/problem/0392",target:"_blank",rel:"noopener noreferrer"},nh={style:{"text-align":"left"}},sh=t("code",null,"双指针",-1),dh=t("code",null,"字符串",-1),_h=t("code",null,"动态规划",-1),ih={style:{"text-align":"left"}},ah=t("td",{style:{"text-align":"center"}},"396",-1),rh={style:{"text-align":"left"}},ch={href:"https://leetcode.com/problems/rotate-function",target:"_blank",rel:"noopener noreferrer"},hh=t("td",{style:{"text-align":"center"}},null,-1),uh={style:{"text-align":"left"}},fh=t("code",null,"数组",-1),gh=t("code",null,"数学",-1),mh=t("code",null,"动态规划",-1),yh={style:{"text-align":"left"}},xh=t("td",{style:{"text-align":"center"}},"397",-1),ph={style:{"text-align":"left"}},bh={href:"https://leetcode.com/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},kh=t("td",{style:{"text-align":"center"}},null,-1),Mh={style:{"text-align":"left"}},Hh=t("code",null,"贪心",-1),Ih=t("code",null,"位运算",-1),wh=t("code",null,"记忆化搜索",-1),vh=t("code",null,"1+",-1),qh={style:{"text-align":"left"}},zh=t("td",{style:{"text-align":"center"}},"403",-1),Ch={style:{"text-align":"left"}},Oh={href:"https://leetcode.com/problems/frog-jump",target:"_blank",rel:"noopener noreferrer"},jh=t("td",{style:{"text-align":"center"}},null,-1),Lh={style:{"text-align":"left"}},Eh=t("code",null,"数组",-1),Ph=t("code",null,"动态规划",-1),Kh={style:{"text-align":"left"}},Vh=t("td",{style:{"text-align":"center"}},"410",-1),Nh={style:{"text-align":"left"}},Dh={href:"https://leetcode.com/problems/split-array-largest-sum",target:"_blank",rel:"noopener noreferrer"},Bh=t("td",{style:{"text-align":"center"}},null,-1),Yh={style:{"text-align":"left"}},Ah=t("code",null,"贪心",-1),Jh=t("code",null,"数组",-1),Rh=t("code",null,"二分查找",-1),Sh=t("code",null,"2+",-1),Uh={style:{"text-align":"left"}},Wh=t("td",{style:{"text-align":"center"}},"413",-1),Xh={style:{"text-align":"left"}},Fh={href:"https://leetcode.com/problems/arithmetic-slices",target:"_blank",rel:"noopener noreferrer"},Gh=t("td",{style:{"text-align":"center"}},null,-1),Th={style:{"text-align":"left"}},Qh=t("code",null,"数组",-1),Zh=t("code",null,"动态规划",-1),$h=t("code",null,"滑动窗口",-1),t1={style:{"text-align":"left"}},e1=t("td",{style:{"text-align":"center"}},"416",-1),l1={style:{"text-align":"left"}},o1={href:"https://leetcode.com/problems/partition-equal-subset-sum",target:"_blank",rel:"noopener noreferrer"},n1={style:{"text-align":"center"}},s1={href:"/problem/0416",target:"_blank",rel:"noopener noreferrer"},d1={style:{"text-align":"left"}},_1=t("code",null,"数组",-1),i1=t("code",null,"动态规划",-1),a1={style:{"text-align":"left"}},r1=t("td",{style:{"text-align":"center"}},"418",-1),c1={style:{"text-align":"left"}},h1={href:"https://leetcode.com/problems/sentence-screen-fitting",target:"_blank",rel:"noopener noreferrer"},u1=t("td",{style:{"text-align":"center"}},null,-1),f1={style:{"text-align":"left"}},g1=t("code",null,"数组",-1),m1=t("code",null,"字符串",-1),y1=t("code",null,"动态规划",-1),x1={style:{"text-align":"left"}},p1=t("td",{style:{"text-align":"center"}},"435",-1),b1={style:{"text-align":"left"}},k1={href:"https://leetcode.com/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},M1=t("td",{style:{"text-align":"center"}},null,-1),H1={style:{"text-align":"left"}},I1=t("code",null,"贪心",-1),w1=t("code",null,"数组",-1),v1=t("code",null,"动态规划",-1),q1=t("code",null,"1+",-1),z1={style:{"text-align":"left"}},C1=t("td",{style:{"text-align":"center"}},"446",-1),O1={style:{"text-align":"left"}},j1={href:"https://leetcode.com/problems/arithmetic-slices-ii-subsequence",target:"_blank",rel:"noopener noreferrer"},L1=t("td",{style:{"text-align":"center"}},null,-1),E1={style:{"text-align":"left"}},P1=t("code",null,"数组",-1),K1=t("code",null,"动态规划",-1),V1={style:{"text-align":"left"}},N1=t("td",{style:{"text-align":"center"}},"458",-1),D1={style:{"text-align":"left"}},B1={href:"https://leetcode.com/problems/poor-pigs",target:"_blank",rel:"noopener noreferrer"},Y1=t("td",{style:{"text-align":"center"}},null,-1),A1={style:{"text-align":"left"}},J1=t("code",null,"数学",-1),R1=t("code",null,"动态规划",-1),S1=t("code",null,"组合数学",-1),U1={style:{"text-align":"left"}},W1=t("td",{style:{"text-align":"center"}},"464",-1),X1={style:{"text-align":"left"}},F1={href:"https://leetcode.com/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},G1=t("td",{style:{"text-align":"center"}},null,-1),T1={style:{"text-align":"left"}},Q1=t("code",null,"位运算",-1),Z1=t("code",null,"记忆化搜索",-1),$1=t("code",null,"数学",-1),tu=t("code",null,"3+",-1),eu={style:{"text-align":"left"}},lu=t("td",{style:{"text-align":"center"}},"465",-1),ou={style:{"text-align":"left"}},nu={href:"https://leetcode.com/problems/optimal-account-balancing",target:"_blank",rel:"noopener noreferrer"},su=t("td",{style:{"text-align":"center"}},null,-1),du={style:{"text-align":"left"}},_u=t("code",null,"位运算",-1),iu=t("code",null,"数组",-1),au=t("code",null,"动态规划",-1),ru=t("code",null,"2+",-1),cu={style:{"text-align":"left"}},hu=t("td",{style:{"text-align":"center"}},"466",-1),uu={style:{"text-align":"left"}},fu={href:"https://leetcode.com/problems/count-the-repetitions",target:"_blank",rel:"noopener noreferrer"},gu=t("td",{style:{"text-align":"center"}},null,-1),mu={style:{"text-align":"left"}},yu=t("code",null,"字符串",-1),xu=t("code",null,"动态规划",-1),pu={style:{"text-align":"left"}},bu=t("td",{style:{"text-align":"center"}},"467",-1),ku={style:{"text-align":"left"}},Mu={href:"https://leetcode.com/problems/unique-substrings-in-wraparound-string",target:"_blank",rel:"noopener noreferrer"},Hu=t("td",{style:{"text-align":"center"}},null,-1),Iu={style:{"text-align":"left"}},wu=t("code",null,"字符串",-1),vu=t("code",null,"动态规划",-1),qu={style:{"text-align":"left"}},zu=t("td",{style:{"text-align":"center"}},"471",-1),Cu={style:{"text-align":"left"}},Ou={href:"https://leetcode.com/problems/encode-string-with-shortest-length",target:"_blank",rel:"noopener noreferrer"},ju=t("td",{style:{"text-align":"center"}},null,-1),Lu={style:{"text-align":"left"}},Eu=t("code",null,"字符串",-1),Pu=t("code",null,"动态规划",-1),Ku={style:{"text-align":"left"}},Vu=t("td",{style:{"text-align":"center"}},"472",-1),Nu={style:{"text-align":"left"}},Du={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},Bu=t("td",{style:{"text-align":"center"}},null,-1),Yu={style:{"text-align":"left"}},Au=t("code",null,"深度优先搜索",-1),Ju=t("code",null,"字典树",-1),Ru=t("code",null,"数组",-1),Su=t("code",null,"2+",-1),Uu={style:{"text-align":"left"}},Wu=t("td",{style:{"text-align":"center"}},"473",-1),Xu={style:{"text-align":"left"}},Fu={href:"https://leetcode.com/problems/matchsticks-to-square",target:"_blank",rel:"noopener noreferrer"},Gu=t("td",{style:{"text-align":"center"}},null,-1),Tu={style:{"text-align":"left"}},Qu=t("code",null,"位运算",-1),Zu=t("code",null,"数组",-1),$u=t("code",null,"动态规划",-1),tf=t("code",null,"2+",-1),ef={style:{"text-align":"left"}},lf=t("td",{style:{"text-align":"center"}},"474",-1),of={style:{"text-align":"left"}},nf={href:"https://leetcode.com/problems/ones-and-zeroes",target:"_blank",rel:"noopener noreferrer"},sf={style:{"text-align":"center"}},df={href:"/problem/0474",target:"_blank",rel:"noopener noreferrer"},_f={style:{"text-align":"left"}},af=t("code",null,"数组",-1),rf=t("code",null,"字符串",-1),cf=t("code",null,"动态规划",-1),hf={style:{"text-align":"left"}},uf=t("td",{style:{"text-align":"center"}},"486",-1),ff={style:{"text-align":"left"}},gf={href:"https://leetcode.com/problems/predict-the-winner",target:"_blank",rel:"noopener noreferrer"},mf=t("td",{style:{"text-align":"center"}},null,-1),yf={style:{"text-align":"left"}},xf=t("code",null,"递归",-1),pf=t("code",null,"数组",-1),bf=t("code",null,"数学",-1),kf=t("code",null,"2+",-1),Mf={style:{"text-align":"left"}},Hf=t("td",{style:{"text-align":"center"}},"487",-1),If={style:{"text-align":"left"}},wf={href:"https://leetcode.com/problems/max-consecutive-ones-ii",target:"_blank",rel:"noopener noreferrer"},vf=t("td",{style:{"text-align":"center"}},null,-1),qf={style:{"text-align":"left"}},zf=t("code",null,"数组",-1),Cf=t("code",null,"动态规划",-1),Of=t("code",null,"滑动窗口",-1),jf={style:{"text-align":"left"}},Lf=t("td",{style:{"text-align":"center"}},"488",-1),Ef={style:{"text-align":"left"}},Pf={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},Kf=t("td",{style:{"text-align":"center"}},null,-1),Vf={style:{"text-align":"left"}},Nf=t("code",null,"栈",-1),Df=t("code",null,"广度优先搜索",-1),Bf=t("code",null,"记忆化搜索",-1),Yf=t("code",null,"2+",-1),Af={style:{"text-align":"left"}},Jf=t("td",{style:{"text-align":"center"}},"494",-1),Rf={style:{"text-align":"left"}},Sf={href:"https://leetcode.com/problems/target-sum",target:"_blank",rel:"noopener noreferrer"},Uf={style:{"text-align":"center"}},Wf={href:"/problem/0494",target:"_blank",rel:"noopener noreferrer"},Xf={style:{"text-align":"left"}},Ff=t("code",null,"数组",-1),Gf=t("code",null,"动态规划",-1),Tf=t("code",null,"回溯",-1),Qf={style:{"text-align":"left"}},Zf=t("td",{style:{"text-align":"center"}},"509",-1),$f={style:{"text-align":"left"}},tg={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},eg={style:{"text-align":"center"}},lg={href:"/problem/0509",target:"_blank",rel:"noopener noreferrer"},og={style:{"text-align":"left"}},ng=t("code",null,"递归",-1),sg=t("code",null,"记忆化搜索",-1),dg=t("code",null,"数学",-1),_g=t("code",null,"1+",-1),ig={style:{"text-align":"left"}},ag=t("td",{style:{"text-align":"center"}},"514",-1),rg={style:{"text-align":"left"}},cg={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},hg={style:{"text-align":"center"}},ug={href:"/problem/0514",target:"_blank",rel:"noopener noreferrer"},fg={style:{"text-align":"left"}},gg=t("code",null,"深度优先搜索",-1),mg=t("code",null,"广度优先搜索",-1),yg=t("code",null,"字符串",-1),xg=t("code",null,"1+",-1),pg={style:{"text-align":"left"}},bg=t("td",{style:{"text-align":"center"}},"516",-1),kg={style:{"text-align":"left"}},Mg={href:"https://leetcode.com/problems/longest-palindromic-subsequence",target:"_blank",rel:"noopener noreferrer"},Hg={style:{"text-align":"center"}},Ig={href:"/problem/0516",target:"_blank",rel:"noopener noreferrer"},wg={style:{"text-align":"left"}},vg=t("code",null,"字符串",-1),qg=t("code",null,"动态规划",-1),zg={style:{"text-align":"left"}},Cg=t("td",{style:{"text-align":"center"}},"518",-1),Og={style:{"text-align":"left"}},jg={href:"https://leetcode.com/problems/coin-change-ii",target:"_blank",rel:"noopener noreferrer"},Lg={style:{"text-align":"center"}},Eg={href:"/problem/0518",target:"_blank",rel:"noopener noreferrer"},Pg={style:{"text-align":"left"}},Kg=t("code",null,"数组",-1),Vg=t("code",null,"动态规划",-1),Ng={style:{"text-align":"left"}},Dg=t("td",{style:{"text-align":"center"}},"526",-1),Bg={style:{"text-align":"left"}},Yg={href:"https://leetcode.com/problems/beautiful-arrangement",target:"_blank",rel:"noopener noreferrer"},Ag=t("td",{style:{"text-align":"center"}},null,-1),Jg={style:{"text-align":"left"}},Rg=t("code",null,"位运算",-1),Sg=t("code",null,"数组",-1),Ug=t("code",null,"动态规划",-1),Wg=t("code",null,"2+",-1),Xg={style:{"text-align":"left"}},Fg=t("td",{style:{"text-align":"center"}},"542",-1),Gg={style:{"text-align":"left"}},Tg={href:"https://leetcode.com/problems/01-matrix",target:"_blank",rel:"noopener noreferrer"},Qg=t("td",{style:{"text-align":"center"}},null,-1),Zg={style:{"text-align":"left"}},$g=t("code",null,"广度优先搜索",-1),tm=t("code",null,"数组",-1),em=t("code",null,"动态规划",-1),lm=t("code",null,"1+",-1),om={style:{"text-align":"left"}},nm=t("td",{style:{"text-align":"center"}},"546",-1),sm={style:{"text-align":"left"}},dm={href:"https://leetcode.com/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},_m=t("td",{style:{"text-align":"center"}},null,-1),im={style:{"text-align":"left"}},am=t("code",null,"记忆化搜索",-1),rm=t("code",null,"数组",-1),cm=t("code",null,"动态规划",-1),hm={style:{"text-align":"left"}},um=t("td",{style:{"text-align":"center"}},"552",-1),fm={style:{"text-align":"left"}},gm={href:"https://leetcode.com/problems/student-attendance-record-ii",target:"_blank",rel:"noopener noreferrer"},mm=t("td",{style:{"text-align":"center"}},null,-1),ym={style:{"text-align":"left"}},xm=t("code",null,"动态规划",-1),pm={style:{"text-align":"left"}},bm=t("td",{style:{"text-align":"center"}},"553",-1),km={style:{"text-align":"left"}},Mm={href:"https://leetcode.com/problems/optimal-division",target:"_blank",rel:"noopener noreferrer"},Hm=t("td",{style:{"text-align":"center"}},null,-1),Im={style:{"text-align":"left"}},wm=t("code",null,"数组",-1),vm=t("code",null,"数学",-1),qm=t("code",null,"动态规划",-1),zm={style:{"text-align":"left"}},Cm=t("td",{style:{"text-align":"center"}},"562",-1),Om={style:{"text-align":"left"}},jm={href:"https://leetcode.com/problems/longest-line-of-consecutive-one-in-matrix",target:"_blank",rel:"noopener noreferrer"},Lm=t("td",{style:{"text-align":"center"}},null,-1),Em={style:{"text-align":"left"}},Pm=t("code",null,"数组",-1),Km=t("code",null,"动态规划",-1),Vm=t("code",null,"矩阵",-1),Nm={style:{"text-align":"left"}},Dm=t("td",{style:{"text-align":"center"}},"568",-1),Bm={style:{"text-align":"left"}},Ym={href:"https://leetcode.com/problems/maximum-vacation-days",target:"_blank",rel:"noopener noreferrer"},Am=t("td",{style:{"text-align":"center"}},null,-1),Jm={style:{"text-align":"left"}},Rm=t("code",null,"数组",-1),Sm=t("code",null,"动态规划",-1),Um=t("code",null,"矩阵",-1),Wm={style:{"text-align":"left"}},Xm=t("td",{style:{"text-align":"center"}},"576",-1),Fm={style:{"text-align":"left"}},Gm={href:"https://leetcode.com/problems/out-of-boundary-paths",target:"_blank",rel:"noopener noreferrer"},Tm=t("td",{style:{"text-align":"center"}},null,-1),Qm={style:{"text-align":"left"}},Zm=t("code",null,"动态规划",-1),$m={style:{"text-align":"left"}},ty=t("td",{style:{"text-align":"center"}},"583",-1),ey={style:{"text-align":"left"}},ly={href:"https://leetcode.com/problems/delete-operation-for-two-strings",target:"_blank",rel:"noopener noreferrer"},oy={style:{"text-align":"center"}},ny={href:"/problem/0583",target:"_blank",rel:"noopener noreferrer"},sy={style:{"text-align":"left"}},dy=t("code",null,"字符串",-1),_y=t("code",null,"动态规划",-1),iy={style:{"text-align":"left"}},ay=t("td",{style:{"text-align":"center"}},"600",-1),ry={style:{"text-align":"left"}},cy={href:"https://leetcode.com/problems/non-negative-integers-without-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},hy=t("td",{style:{"text-align":"center"}},null,-1),uy={style:{"text-align":"left"}},fy=t("code",null,"动态规划",-1),gy={style:{"text-align":"left"}},my=t("td",{style:{"text-align":"center"}},"629",-1),yy={style:{"text-align":"left"}},xy={href:"https://leetcode.com/problems/k-inverse-pairs-array",target:"_blank",rel:"noopener noreferrer"},py=t("td",{style:{"text-align":"center"}},null,-1),by={style:{"text-align":"left"}},ky=t("code",null,"动态规划",-1),My={style:{"text-align":"left"}},Hy=t("td",{style:{"text-align":"center"}},"634",-1),Iy={style:{"text-align":"left"}},wy={href:"https://leetcode.com/problems/find-the-derangement-of-an-array",target:"_blank",rel:"noopener noreferrer"},vy=t("td",{style:{"text-align":"center"}},null,-1),qy={style:{"text-align":"left"}},zy=t("code",null,"数学",-1),Cy=t("code",null,"动态规划",-1),Oy={style:{"text-align":"left"}},jy=t("td",{style:{"text-align":"center"}},"638",-1),Ly={style:{"text-align":"left"}},Ey={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},Py=t("td",{style:{"text-align":"center"}},null,-1),Ky={style:{"text-align":"left"}},Vy=t("code",null,"位运算",-1),Ny=t("code",null,"记忆化搜索",-1),Dy=t("code",null,"数组",-1),By=t("code",null,"3+",-1),Yy={style:{"text-align":"left"}},Ay=t("td",{style:{"text-align":"center"}},"639",-1),Jy={style:{"text-align":"left"}},Ry={href:"https://leetcode.com/problems/decode-ways-ii",target:"_blank",rel:"noopener noreferrer"},Sy=t("td",{style:{"text-align":"center"}},null,-1),Uy={style:{"text-align":"left"}},Wy=t("code",null,"字符串",-1),Xy=t("code",null,"动态规划",-1),Fy={style:{"text-align":"left"}},Gy=t("td",{style:{"text-align":"center"}},"646",-1),Ty={style:{"text-align":"left"}},Qy={href:"https://leetcode.com/problems/maximum-length-of-pair-chain",target:"_blank",rel:"noopener noreferrer"},Zy=t("td",{style:{"text-align":"center"}},null,-1),$y={style:{"text-align":"left"}},t3=t("code",null,"贪心",-1),e3=t("code",null,"数组",-1),l3=t("code",null,"动态规划",-1),o3=t("code",null,"1+",-1),n3={style:{"text-align":"left"}},s3=t("td",{style:{"text-align":"center"}},"647",-1),d3={style:{"text-align":"left"}},_3={href:"https://leetcode.com/problems/palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},i3=t("td",{style:{"text-align":"center"}},null,-1),a3={style:{"text-align":"left"}},r3=t("code",null,"双指针",-1),c3=t("code",null,"字符串",-1),h3=t("code",null,"动态规划",-1),u3={style:{"text-align":"left"}},f3=t("td",{style:{"text-align":"center"}},"650",-1),g3={style:{"text-align":"left"}},m3={href:"https://leetcode.com/problems/2-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},y3=t("td",{style:{"text-align":"center"}},null,-1),x3={style:{"text-align":"left"}},p3=t("code",null,"数学",-1),b3=t("code",null,"动态规划",-1),k3={style:{"text-align":"left"}},M3=t("td",{style:{"text-align":"center"}},"651",-1),H3={style:{"text-align":"left"}},I3={href:"https://leetcode.com/problems/4-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},w3=t("td",{style:{"text-align":"center"}},null,-1),v3={style:{"text-align":"left"}},q3=t("code",null,"数学",-1),z3=t("code",null,"动态规划",-1),C3={style:{"text-align":"left"}},O3=t("td",{style:{"text-align":"center"}},"656",-1),j3={style:{"text-align":"left"}},L3={href:"https://leetcode.com/problems/coin-path",target:"_blank",rel:"noopener noreferrer"},E3=t("td",{style:{"text-align":"center"}},null,-1),P3={style:{"text-align":"left"}},K3=t("code",null,"数组",-1),V3=t("code",null,"动态规划",-1),N3={style:{"text-align":"left"}},D3=t("td",{style:{"text-align":"center"}},"664",-1),B3={style:{"text-align":"left"}},Y3={href:"https://leetcode.com/problems/strange-printer",target:"_blank",rel:"noopener noreferrer"},A3=t("td",{style:{"text-align":"center"}},null,-1),J3={style:{"text-align":"left"}},R3=t("code",null,"字符串",-1),S3=t("code",null,"动态规划",-1),U3={style:{"text-align":"left"}},W3=t("td",{style:{"text-align":"center"}},"673",-1),X3={style:{"text-align":"left"}},F3={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},G3=t("td",{style:{"text-align":"center"}},null,-1),T3={style:{"text-align":"left"}},Q3=t("code",null,"树状数组",-1),Z3=t("code",null,"线段树",-1),$3=t("code",null,"数组",-1),tx=t("code",null,"1+",-1),ex={style:{"text-align":"left"}},lx=t("td",{style:{"text-align":"center"}},"678",-1),ox={style:{"text-align":"left"}},nx={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},sx={style:{"text-align":"center"}},dx={href:"/problem/0678",target:"_blank",rel:"noopener noreferrer"},_x={style:{"text-align":"left"}},ix=t("code",null,"栈",-1),ax=t("code",null,"贪心",-1),rx=t("code",null,"字符串",-1),cx=t("code",null,"1+",-1),hx={style:{"text-align":"left"}},ux=t("td",{style:{"text-align":"center"}},"688",-1),fx={style:{"text-align":"left"}},gx={href:"https://leetcode.com/problems/knight-probability-in-chessboard",target:"_blank",rel:"noopener noreferrer"},mx=t("td",{style:{"text-align":"center"}},null,-1),yx={style:{"text-align":"left"}},xx=t("code",null,"动态规划",-1),px={style:{"text-align":"left"}},bx=t("td",{style:{"text-align":"center"}},"689",-1),kx={style:{"text-align":"left"}},Mx={href:"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},Hx=t("td",{style:{"text-align":"center"}},null,-1),Ix={style:{"text-align":"left"}},wx=t("code",null,"数组",-1),vx=t("code",null,"动态规划",-1),qx={style:{"text-align":"left"}},zx=t("td",{style:{"text-align":"center"}},"691",-1),Cx={style:{"text-align":"left"}},Ox={href:"https://leetcode.com/problems/stickers-to-spell-word",target:"_blank",rel:"noopener noreferrer"},jx=t("td",{style:{"text-align":"center"}},null,-1),Lx={style:{"text-align":"left"}},Ex=t("code",null,"位运算",-1),Px=t("code",null,"数组",-1),Kx=t("code",null,"字符串",-1),Vx=t("code",null,"3+",-1),Nx={style:{"text-align":"left"}},Dx=t("td",{style:{"text-align":"center"}},"698",-1),Bx={style:{"text-align":"left"}},Yx={href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},Ax=t("td",{style:{"text-align":"center"}},null,-1),Jx={style:{"text-align":"left"}},Rx=t("code",null,"位运算",-1),Sx=t("code",null,"记忆化搜索",-1),Ux=t("code",null,"数组",-1),Wx=t("code",null,"3+",-1),Xx={style:{"text-align":"left"}},Fx=t("td",{style:{"text-align":"center"}},"712",-1),Gx={style:{"text-align":"left"}},Tx={href:"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings",target:"_blank",rel:"noopener noreferrer"},Qx={style:{"text-align":"center"}},Zx={href:"/problem/0712",target:"_blank",rel:"noopener noreferrer"},$x={style:{"text-align":"left"}},t4=t("code",null,"字符串",-1),e4=t("code",null,"动态规划",-1),l4={style:{"text-align":"left"}},o4=t("td",{style:{"text-align":"center"}},"714",-1),n4={style:{"text-align":"left"}},s4={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee",target:"_blank",rel:"noopener noreferrer"},d4={style:{"text-align":"center"}},_4={href:"/problem/0714",target:"_blank",rel:"noopener noreferrer"},i4={style:{"text-align":"left"}},a4=t("code",null,"贪心",-1),r4=t("code",null,"数组",-1),c4=t("code",null,"动态规划",-1),h4={style:{"text-align":"left"}},u4=t("td",{style:{"text-align":"center"}},"718",-1),f4={style:{"text-align":"left"}},g4={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},m4=t("td",{style:{"text-align":"center"}},null,-1),y4={style:{"text-align":"left"}},x4=t("code",null,"数组",-1),p4=t("code",null,"二分查找",-1),b4=t("code",null,"动态规划",-1),k4=t("code",null,"3+",-1),M4={style:{"text-align":"left"}},H4=t("td",{style:{"text-align":"center"}},"727",-1),I4={style:{"text-align":"left"}},w4={href:"https://leetcode.com/problems/minimum-window-subsequence",target:"_blank",rel:"noopener noreferrer"},v4=t("td",{style:{"text-align":"center"}},null,-1),q4={style:{"text-align":"left"}},z4=t("code",null,"字符串",-1),C4=t("code",null,"动态规划",-1),O4=t("code",null,"滑动窗口",-1),j4={style:{"text-align":"left"}},L4=t("td",{style:{"text-align":"center"}},"730",-1),E4={style:{"text-align":"left"}},P4={href:"https://leetcode.com/problems/count-different-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},K4=t("td",{style:{"text-align":"center"}},null,-1),V4={style:{"text-align":"left"}},N4=t("code",null,"字符串",-1),D4=t("code",null,"动态规划",-1),B4={style:{"text-align":"left"}},Y4=t("td",{style:{"text-align":"center"}},"740",-1),A4={style:{"text-align":"left"}},J4={href:"https://leetcode.com/problems/delete-and-earn",target:"_blank",rel:"noopener noreferrer"},R4=t("td",{style:{"text-align":"center"}},null,-1),S4={style:{"text-align":"left"}},U4=t("code",null,"数组",-1),W4=t("code",null,"哈希表",-1),X4=t("code",null,"动态规划",-1),F4={style:{"text-align":"left"}},G4=t("td",{style:{"text-align":"center"}},"741",-1),T4={style:{"text-align":"left"}},Q4={href:"https://leetcode.com/problems/cherry-pickup",target:"_blank",rel:"noopener noreferrer"},Z4=t("td",{style:{"text-align":"center"}},null,-1),$4={style:{"text-align":"left"}},t2=t("code",null,"数组",-1),e2=t("code",null,"动态规划",-1),l2=t("code",null,"矩阵",-1),o2={style:{"text-align":"left"}},n2=t("td",{style:{"text-align":"center"}},"746",-1),s2={style:{"text-align":"left"}},d2={href:"https://leetcode.com/problems/min-cost-climbing-stairs",target:"_blank",rel:"noopener noreferrer"},_2=t("td",{style:{"text-align":"center"}},null,-1),i2={style:{"text-align":"left"}},a2=t("code",null,"数组",-1),r2=t("code",null,"动态规划",-1),c2={style:{"text-align":"left"}},h2=t("td",{style:{"text-align":"center"}},"750",-1),u2={style:{"text-align":"left"}},f2={href:"https://leetcode.com/problems/number-of-corner-rectangles",target:"_blank",rel:"noopener noreferrer"},g2=t("td",{style:{"text-align":"center"}},null,-1),m2={style:{"text-align":"left"}},y2=t("code",null,"数组",-1),x2=t("code",null,"数学",-1),p2=t("code",null,"动态规划",-1),b2=t("code",null,"1+",-1),k2={style:{"text-align":"left"}},M2=t("td",{style:{"text-align":"center"}},"764",-1),H2={style:{"text-align":"left"}},I2={href:"https://leetcode.com/problems/largest-plus-sign",target:"_blank",rel:"noopener noreferrer"},w2=t("td",{style:{"text-align":"center"}},null,-1),v2={style:{"text-align":"left"}},q2=t("code",null,"数组",-1),z2=t("code",null,"动态规划",-1),C2={style:{"text-align":"left"}},O2=t("td",{style:{"text-align":"center"}},"787",-1),j2={style:{"text-align":"left"}},L2={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},E2=t("td",{style:{"text-align":"center"}},null,-1),P2={style:{"text-align":"left"}},K2=t("code",null,"深度优先搜索",-1),V2=t("code",null,"广度优先搜索",-1),N2=t("code",null,"图",-1),D2=t("code",null,"3+",-1),B2={style:{"text-align":"left"}},Y2=t("td",{style:{"text-align":"center"}},"788",-1),A2={style:{"text-align":"left"}},J2={href:"https://leetcode.com/problems/rotated-digits",target:"_blank",rel:"noopener noreferrer"},R2=t("td",{style:{"text-align":"center"}},null,-1),S2={style:{"text-align":"left"}},U2=t("code",null,"数学",-1),W2=t("code",null,"动态规划",-1),X2={style:{"text-align":"left"}},F2=t("td",{style:{"text-align":"center"}},"790",-1),G2={style:{"text-align":"left"}},T2={href:"https://leetcode.com/problems/domino-and-tromino-tiling",target:"_blank",rel:"noopener noreferrer"},Q2=t("td",{style:{"text-align":"center"}},null,-1),Z2={style:{"text-align":"left"}},$2=t("code",null,"动态规划",-1),tp={style:{"text-align":"left"}},ep=t("td",{style:{"text-align":"center"}},"792",-1),lp={style:{"text-align":"left"}},op={href:"https://leetcode.com/problems/number-of-matching-subsequences",target:"_blank",rel:"noopener noreferrer"},np=t("td",{style:{"text-align":"center"}},null,-1),sp={style:{"text-align":"left"}},dp=t("code",null,"字典树",-1),_p=t("code",null,"数组",-1),ip=t("code",null,"哈希表",-1),ap=t("code",null,"4+",-1),rp={style:{"text-align":"left"}},cp=t("td",{style:{"text-align":"center"}},"799",-1),hp={style:{"text-align":"left"}},up={href:"https://leetcode.com/problems/champagne-tower",target:"_blank",rel:"noopener noreferrer"},fp=t("td",{style:{"text-align":"center"}},null,-1),gp={style:{"text-align":"left"}},mp=t("code",null,"动态规划",-1),yp={style:{"text-align":"left"}},xp=t("td",{style:{"text-align":"center"}},"801",-1),pp={style:{"text-align":"left"}},bp={href:"https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing",target:"_blank",rel:"noopener noreferrer"},kp=t("td",{style:{"text-align":"center"}},null,-1),Mp={style:{"text-align":"left"}},Hp=t("code",null,"数组",-1),Ip=t("code",null,"动态规划",-1),wp={style:{"text-align":"left"}},vp=t("td",{style:{"text-align":"center"}},"805",-1),qp={style:{"text-align":"left"}},zp={href:"https://leetcode.com/problems/split-array-with-same-average",target:"_blank",rel:"noopener noreferrer"},Cp=t("td",{style:{"text-align":"center"}},null,-1),Op={style:{"text-align":"left"}},jp=t("code",null,"位运算",-1),Lp=t("code",null,"数组",-1),Ep=t("code",null,"数学",-1),Pp=t("code",null,"2+",-1),Kp={style:{"text-align":"left"}},Vp=t("td",{style:{"text-align":"center"}},"808",-1),Np={style:{"text-align":"left"}},Dp={href:"https://leetcode.com/problems/soup-servings",target:"_blank",rel:"noopener noreferrer"},Bp=t("td",{style:{"text-align":"center"}},null,-1),Yp={style:{"text-align":"left"}},Ap=t("code",null,"数学",-1),Jp=t("code",null,"动态规划",-1),Rp=t("code",null,"概率与统计",-1),Sp={style:{"text-align":"left"}},Up=t("td",{style:{"text-align":"center"}},"813",-1),Wp={style:{"text-align":"left"}},Xp={href:"https://leetcode.com/problems/largest-sum-of-averages",target:"_blank",rel:"noopener noreferrer"},Fp=t("td",{style:{"text-align":"center"}},null,-1),Gp={style:{"text-align":"left"}},Tp=t("code",null,"数组",-1),Qp=t("code",null,"动态规划",-1),Zp=t("code",null,"前缀和",-1),$p={style:{"text-align":"left"}},t5=t("td",{style:{"text-align":"center"}},"818",-1),e5={style:{"text-align":"left"}},l5={href:"https://leetcode.com/problems/race-car",target:"_blank",rel:"noopener noreferrer"},o5=t("td",{style:{"text-align":"center"}},null,-1),n5={style:{"text-align":"left"}},s5=t("code",null,"动态规划",-1),d5={style:{"text-align":"left"}},_5=t("td",{style:{"text-align":"center"}},"823",-1),i5={style:{"text-align":"left"}},a5={href:"https://leetcode.com/problems/binary-trees-with-factors",target:"_blank",rel:"noopener noreferrer"},r5=t("td",{style:{"text-align":"center"}},null,-1),c5={style:{"text-align":"left"}},h5=t("code",null,"数组",-1),u5=t("code",null,"哈希表",-1),f5=t("code",null,"动态规划",-1),g5=t("code",null,"1+",-1),m5={style:{"text-align":"left"}},y5=t("td",{style:{"text-align":"center"}},"828",-1),x5={style:{"text-align":"left"}},p5={href:"https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string",target:"_blank",rel:"noopener noreferrer"},b5=t("td",{style:{"text-align":"center"}},null,-1),k5={style:{"text-align":"left"}},M5=t("code",null,"哈希表",-1),H5=t("code",null,"字符串",-1),I5=t("code",null,"动态规划",-1),w5={style:{"text-align":"left"}},v5=t("td",{style:{"text-align":"center"}},"834",-1),q5={style:{"text-align":"left"}},z5={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},C5=t("td",{style:{"text-align":"center"}},null,-1),O5={style:{"text-align":"left"}},j5=t("code",null,"树",-1),L5=t("code",null,"深度优先搜索",-1),E5=t("code",null,"图",-1),P5=t("code",null,"1+",-1),K5={style:{"text-align":"left"}},V5=t("td",{style:{"text-align":"center"}},"837",-1),N5={style:{"text-align":"left"}},D5={href:"https://leetcode.com/problems/new-21-game",target:"_blank",rel:"noopener noreferrer"},B5=t("td",{style:{"text-align":"center"}},null,-1),Y5={style:{"text-align":"left"}},A5=t("code",null,"数学",-1),J5=t("code",null,"动态规划",-1),R5=t("code",null,"滑动窗口",-1),S5=t("code",null,"1+",-1),U5={style:{"text-align":"left"}},W5=t("td",{style:{"text-align":"center"}},"838",-1),X5={style:{"text-align":"left"}},F5={href:"https://leetcode.com/problems/push-dominoes",target:"_blank",rel:"noopener noreferrer"},G5=t("td",{style:{"text-align":"center"}},null,-1),T5={style:{"text-align":"left"}},Q5=t("code",null,"双指针",-1),Z5=t("code",null,"字符串",-1),$5=t("code",null,"动态规划",-1),tb={style:{"text-align":"left"}},eb=t("td",{style:{"text-align":"center"}},"845",-1),lb={style:{"text-align":"left"}},ob={href:"https://leetcode.com/problems/longest-mountain-in-array",target:"_blank",rel:"noopener noreferrer"},nb=t("td",{style:{"text-align":"center"}},null,-1),sb={style:{"text-align":"left"}},db=t("code",null,"数组",-1),_b=t("code",null,"双指针",-1),ib=t("code",null,"动态规划",-1),ab=t("code",null,"1+",-1),rb={style:{"text-align":"left"}},cb=t("td",{style:{"text-align":"center"}},"847",-1),hb={style:{"text-align":"left"}},ub={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},fb=t("td",{style:{"text-align":"center"}},null,-1),gb={style:{"text-align":"left"}},mb=t("code",null,"位运算",-1),yb=t("code",null,"广度优先搜索",-1),xb=t("code",null,"图",-1),pb=t("code",null,"2+",-1),bb={style:{"text-align":"left"}},kb=t("td",{style:{"text-align":"center"}},"871",-1),Mb={style:{"text-align":"left"}},Hb={href:"https://leetcode.com/problems/minimum-number-of-refueling-stops",target:"_blank",rel:"noopener noreferrer"},Ib=t("td",{style:{"text-align":"center"}},null,-1),wb={style:{"text-align":"left"}},vb=t("code",null,"贪心",-1),qb=t("code",null,"数组",-1),zb=t("code",null,"动态规划",-1),Cb=t("code",null,"1+",-1),Ob={style:{"text-align":"left"}},jb=t("td",{style:{"text-align":"center"}},"873",-1),Lb={style:{"text-align":"left"}},Eb={href:"https://leetcode.com/problems/length-of-longest-fibonacci-subsequence",target:"_blank",rel:"noopener noreferrer"},Pb=t("td",{style:{"text-align":"center"}},null,-1),Kb={style:{"text-align":"left"}},Vb=t("code",null,"数组",-1),Nb=t("code",null,"哈希表",-1),Db=t("code",null,"动态规划",-1),Bb={style:{"text-align":"left"}},Yb=t("td",{style:{"text-align":"center"}},"877",-1),Ab={style:{"text-align":"left"}},Jb={href:"https://leetcode.com/problems/stone-game",target:"_blank",rel:"noopener noreferrer"},Rb=t("td",{style:{"text-align":"center"}},null,-1),Sb={style:{"text-align":"left"}},Ub=t("code",null,"数组",-1),Wb=t("code",null,"数学",-1),Xb=t("code",null,"动态规划",-1),Fb=t("code",null,"1+",-1),Gb={style:{"text-align":"left"}},Tb=t("td",{style:{"text-align":"center"}},"879",-1),Qb={style:{"text-align":"left"}},Zb={href:"https://leetcode.com/problems/profitable-schemes",target:"_blank",rel:"noopener noreferrer"},$b=t("td",{style:{"text-align":"center"}},null,-1),t0={style:{"text-align":"left"}},e0=t("code",null,"数组",-1),l0=t("code",null,"动态规划",-1),o0={style:{"text-align":"left"}},n0=t("td",{style:{"text-align":"center"}},"887",-1),s0={style:{"text-align":"left"}},d0={href:"https://leetcode.com/problems/super-egg-drop",target:"_blank",rel:"noopener noreferrer"},_0=t("td",{style:{"text-align":"center"}},null,-1),i0={style:{"text-align":"left"}},a0=t("code",null,"数学",-1),r0=t("code",null,"二分查找",-1),c0=t("code",null,"动态规划",-1),h0={style:{"text-align":"left"}},u0=t("td",{style:{"text-align":"center"}},"894",-1),f0={style:{"text-align":"left"}},g0={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},m0=t("td",{style:{"text-align":"center"}},null,-1),y0={style:{"text-align":"left"}},x0=t("code",null,"树",-1),p0=t("code",null,"递归",-1),b0=t("code",null,"记忆化搜索",-1),k0=t("code",null,"2+",-1),M0={style:{"text-align":"left"}},H0=t("td",{style:{"text-align":"center"}},"898",-1),I0={style:{"text-align":"left"}},w0={href:"https://leetcode.com/problems/bitwise-ors-of-subarrays",target:"_blank",rel:"noopener noreferrer"},v0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},z0=t("code",null,"位运算",-1),C0=t("code",null,"数组",-1),O0=t("code",null,"动态规划",-1),j0={style:{"text-align":"left"}},L0=t("td",{style:{"text-align":"center"}},"902",-1),E0={style:{"text-align":"left"}},P0={href:"https://leetcode.com/problems/numbers-at-most-n-given-digit-set",target:"_blank",rel:"noopener noreferrer"},K0=t("td",{style:{"text-align":"center"}},null,-1),V0={style:{"text-align":"left"}},N0=t("code",null,"数组",-1),D0=t("code",null,"数学",-1),B0=t("code",null,"字符串",-1),Y0=t("code",null,"2+",-1),A0={style:{"text-align":"left"}},J0=t("td",{style:{"text-align":"center"}},"903",-1),R0={style:{"text-align":"left"}},S0={href:"https://leetcode.com/problems/valid-permutations-for-di-sequence",target:"_blank",rel:"noopener noreferrer"},U0=t("td",{style:{"text-align":"center"}},null,-1),W0={style:{"text-align":"left"}},X0=t("code",null,"字符串",-1),F0=t("code",null,"动态规划",-1),G0=t("code",null,"前缀和",-1),T0={style:{"text-align":"left"}},Q0=t("td",{style:{"text-align":"center"}},"907",-1),Z0={style:{"text-align":"left"}},$0={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},t8=t("td",{style:{"text-align":"center"}},null,-1),e8={style:{"text-align":"left"}},l8=t("code",null,"栈",-1),o8=t("code",null,"数组",-1),n8=t("code",null,"动态规划",-1),s8=t("code",null,"1+",-1),d8={style:{"text-align":"left"}},_8=t("td",{style:{"text-align":"center"}},"913",-1),i8={style:{"text-align":"left"}},a8={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},r8=t("td",{style:{"text-align":"center"}},null,-1),c8={style:{"text-align":"left"}},h8=t("code",null,"图",-1),u8=t("code",null,"拓扑排序",-1),f8=t("code",null,"记忆化搜索",-1),g8=t("code",null,"3+",-1),m8={style:{"text-align":"left"}},y8=t("td",{style:{"text-align":"center"}},"918",-1),x8={style:{"text-align":"left"}},p8={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},b8={style:{"text-align":"center"}},k8={href:"/problem/0918",target:"_blank",rel:"noopener noreferrer"},M8={style:{"text-align":"left"}},H8=t("code",null,"队列",-1),I8=t("code",null,"数组",-1),w8=t("code",null,"分治",-1),v8=t("code",null,"2+",-1),q8={style:{"text-align":"left"}},z8=t("td",{style:{"text-align":"center"}},"920",-1),C8={style:{"text-align":"left"}},O8={href:"https://leetcode.com/problems/number-of-music-playlists",target:"_blank",rel:"noopener noreferrer"},j8=t("td",{style:{"text-align":"center"}},null,-1),L8={style:{"text-align":"left"}},E8=t("code",null,"数学",-1),P8=t("code",null,"动态规划",-1),K8=t("code",null,"组合数学",-1),V8={style:{"text-align":"left"}},N8=t("td",{style:{"text-align":"center"}},"926",-1),D8={style:{"text-align":"left"}},B8={href:"https://leetcode.com/problems/flip-string-to-monotone-increasing",target:"_blank",rel:"noopener noreferrer"},Y8=t("td",{style:{"text-align":"center"}},null,-1),A8={style:{"text-align":"left"}},J8=t("code",null,"字符串",-1),R8=t("code",null,"动态规划",-1),S8={style:{"text-align":"left"}},U8=t("td",{style:{"text-align":"center"}},"931",-1),W8={style:{"text-align":"left"}},X8={href:"https://leetcode.com/problems/minimum-falling-path-sum",target:"_blank",rel:"noopener noreferrer"},F8={style:{"text-align":"center"}},G8={href:"/problem/0931",target:"_blank",rel:"noopener noreferrer"},T8={style:{"text-align":"left"}},Q8=t("code",null,"数组",-1),Z8=t("code",null,"动态规划",-1),$8=t("code",null,"矩阵",-1),t6={style:{"text-align":"left"}},e6=t("td",{style:{"text-align":"center"}},"935",-1),l6={style:{"text-align":"left"}},o6={href:"https://leetcode.com/problems/knight-dialer",target:"_blank",rel:"noopener noreferrer"},n6=t("td",{style:{"text-align":"center"}},null,-1),s6={style:{"text-align":"left"}},d6=t("code",null,"动态规划",-1),_6={style:{"text-align":"left"}},i6=t("td",{style:{"text-align":"center"}},"940",-1),a6={style:{"text-align":"left"}},r6={href:"https://leetcode.com/problems/distinct-subsequences-ii",target:"_blank",rel:"noopener noreferrer"},c6=t("td",{style:{"text-align":"center"}},null,-1),h6={style:{"text-align":"left"}},u6=t("code",null,"字符串",-1),f6=t("code",null,"动态规划",-1),g6={style:{"text-align":"left"}},m6=t("td",{style:{"text-align":"center"}},"943",-1),y6={style:{"text-align":"left"}},x6={href:"https://leetcode.com/problems/find-the-shortest-superstring",target:"_blank",rel:"noopener noreferrer"},p6=t("td",{style:{"text-align":"center"}},null,-1),b6={style:{"text-align":"left"}},k6=t("code",null,"位运算",-1),M6=t("code",null,"数组",-1),H6=t("code",null,"字符串",-1),I6=t("code",null,"2+",-1),w6={style:{"text-align":"left"}},v6=t("td",{style:{"text-align":"center"}},"956",-1),q6={style:{"text-align":"left"}},z6={href:"https://leetcode.com/problems/tallest-billboard",target:"_blank",rel:"noopener noreferrer"},C6=t("td",{style:{"text-align":"center"}},null,-1),O6={style:{"text-align":"left"}},j6=t("code",null,"数组",-1),L6=t("code",null,"动态规划",-1),E6={style:{"text-align":"left"}},P6=t("td",{style:{"text-align":"center"}},"960",-1),K6={style:{"text-align":"left"}},V6={href:"https://leetcode.com/problems/delete-columns-to-make-sorted-iii",target:"_blank",rel:"noopener noreferrer"},N6=t("td",{style:{"text-align":"center"}},null,-1),D6={style:{"text-align":"left"}},B6=t("code",null,"数组",-1),Y6=t("code",null,"字符串",-1),A6=t("code",null,"动态规划",-1),J6={style:{"text-align":"left"}},R6=t("td",{style:{"text-align":"center"}},"964",-1),S6={style:{"text-align":"left"}},U6={href:"https://leetcode.com/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},W6=t("td",{style:{"text-align":"center"}},null,-1),X6={style:{"text-align":"left"}},F6=t("code",null,"记忆化搜索",-1),G6=t("code",null,"数学",-1),T6=t("code",null,"动态规划",-1),Q6={style:{"text-align":"left"}},Z6=t("td",{style:{"text-align":"center"}},"968",-1),$6={style:{"text-align":"left"}},t7={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},e7=t("td",{style:{"text-align":"center"}},null,-1),l7={style:{"text-align":"left"}},o7=t("code",null,"树",-1),n7=t("code",null,"深度优先搜索",-1),s7=t("code",null,"动态规划",-1),d7=t("code",null,"1+",-1),_7={style:{"text-align":"left"}},i7=t("td",{style:{"text-align":"center"}},"975",-1),a7={style:{"text-align":"left"}},r7={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},c7=t("td",{style:{"text-align":"center"}},null,-1),h7={style:{"text-align":"left"}},u7=t("code",null,"栈",-1),f7=t("code",null,"数组",-1),g7=t("code",null,"动态规划",-1),m7=t("code",null,"2+",-1),y7={style:{"text-align":"left"}},x7=t("td",{style:{"text-align":"center"}},"978",-1),p7={style:{"text-align":"left"}},b7={href:"https://leetcode.com/problems/longest-turbulent-subarray",target:"_blank",rel:"noopener noreferrer"},k7=t("td",{style:{"text-align":"center"}},null,-1),M7={style:{"text-align":"left"}},H7=t("code",null,"数组",-1),I7=t("code",null,"动态规划",-1),w7=t("code",null,"滑动窗口",-1),v7={style:{"text-align":"left"}},q7=t("td",{style:{"text-align":"center"}},"983",-1),z7={style:{"text-align":"left"}},C7={href:"https://leetcode.com/problems/minimum-cost-for-tickets",target:"_blank",rel:"noopener noreferrer"},O7=t("td",{style:{"text-align":"center"}},null,-1),j7={style:{"text-align":"left"}},L7=t("code",null,"数组",-1),E7=t("code",null,"动态规划",-1),P7={style:{"text-align":"left"}},K7=t("td",{style:{"text-align":"center"}},"996",-1),V7={style:{"text-align":"left"}},N7={href:"https://leetcode.com/problems/number-of-squareful-arrays",target:"_blank",rel:"noopener noreferrer"},D7=t("td",{style:{"text-align":"center"}},null,-1),B7={style:{"text-align":"left"}},Y7=t("code",null,"位运算",-1),A7=t("code",null,"数组",-1),J7=t("code",null,"哈希表",-1),R7=t("code",null,"4+",-1),S7={style:{"text-align":"left"}},U7=t("td",{style:{"text-align":"center"}},"1000",-1),W7={style:{"text-align":"left"}},X7={href:"https://leetcode.com/problems/minimum-cost-to-merge-stones",target:"_blank",rel:"noopener noreferrer"},F7=t("td",{style:{"text-align":"center"}},null,-1),G7={style:{"text-align":"left"}},T7=t("code",null,"数组",-1),Q7=t("code",null,"动态规划",-1),Z7=t("code",null,"前缀和",-1),$7={style:{"text-align":"left"}},t9=t("td",{style:{"text-align":"center"}},"1012",-1),e9={style:{"text-align":"left"}},l9={href:"https://leetcode.com/problems/numbers-with-repeated-digits",target:"_blank",rel:"noopener noreferrer"},o9=t("td",{style:{"text-align":"center"}},null,-1),n9={style:{"text-align":"left"}},s9=t("code",null,"数学",-1),d9=t("code",null,"动态规划",-1),_9={style:{"text-align":"left"}},i9=t("td",{style:{"text-align":"center"}},"1014",-1),a9={style:{"text-align":"left"}},r9={href:"https://leetcode.com/problems/best-sightseeing-pair",target:"_blank",rel:"noopener noreferrer"},c9=t("td",{style:{"text-align":"center"}},null,-1),h9={style:{"text-align":"left"}},u9=t("code",null,"数组",-1),f9=t("code",null,"动态规划",-1),g9={style:{"text-align":"left"}},m9=t("td",{style:{"text-align":"center"}},"1024",-1),y9={style:{"text-align":"left"}},x9={href:"https://leetcode.com/problems/video-stitching",target:"_blank",rel:"noopener noreferrer"},p9=t("td",{style:{"text-align":"center"}},null,-1),b9={style:{"text-align":"left"}},k9=t("code",null,"贪心",-1),M9=t("code",null,"数组",-1),H9=t("code",null,"动态规划",-1),I9={style:{"text-align":"left"}},w9=t("td",{style:{"text-align":"center"}},"1025",-1),v9={style:{"text-align":"left"}},q9={href:"https://leetcode.com/problems/divisor-game",target:"_blank",rel:"noopener noreferrer"},z9=t("td",{style:{"text-align":"center"}},null,-1),C9={style:{"text-align":"left"}},O9=t("code",null,"脑筋急转弯",-1),j9=t("code",null,"数学",-1),L9=t("code",null,"动态规划",-1),E9=t("code",null,"1+",-1),P9={style:{"text-align":"left"}},K9=t("td",{style:{"text-align":"center"}},"1027",-1),V9={style:{"text-align":"left"}},N9={href:"https://leetcode.com/problems/longest-arithmetic-subsequence",target:"_blank",rel:"noopener noreferrer"},D9=t("td",{style:{"text-align":"center"}},null,-1),B9={style:{"text-align":"left"}},Y9=t("code",null,"数组",-1),A9=t("code",null,"哈希表",-1),J9=t("code",null,"二分查找",-1),R9=t("code",null,"1+",-1),S9={style:{"text-align":"left"}},U9=t("td",{style:{"text-align":"center"}},"1031",-1),W9={style:{"text-align":"left"}},X9={href:"https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},F9=t("td",{style:{"text-align":"center"}},null,-1),G9={style:{"text-align":"left"}},T9=t("code",null,"数组",-1),Q9=t("code",null,"动态规划",-1),Z9=t("code",null,"滑动窗口",-1),$9={style:{"text-align":"left"}},tk=t("td",{style:{"text-align":"center"}},"1035",-1),ek={style:{"text-align":"left"}},lk={href:"https://leetcode.com/problems/uncrossed-lines",target:"_blank",rel:"noopener noreferrer"},ok=t("td",{style:{"text-align":"center"}},null,-1),nk={style:{"text-align":"left"}},sk=t("code",null,"数组",-1),dk=t("code",null,"动态规划",-1),_k={style:{"text-align":"left"}},ik=t("td",{style:{"text-align":"center"}},"1039",-1),ak={style:{"text-align":"left"}},rk={href:"https://leetcode.com/problems/minimum-score-triangulation-of-polygon",target:"_blank",rel:"noopener noreferrer"},ck=t("td",{style:{"text-align":"center"}},null,-1),hk={style:{"text-align":"left"}},uk=t("code",null,"数组",-1),fk=t("code",null,"动态规划",-1),gk={style:{"text-align":"left"}},mk=t("td",{style:{"text-align":"center"}},"1043",-1),yk={style:{"text-align":"left"}},xk={href:"https://leetcode.com/problems/partition-array-for-maximum-sum",target:"_blank",rel:"noopener noreferrer"},pk=t("td",{style:{"text-align":"center"}},null,-1),bk={style:{"text-align":"left"}},kk=t("code",null,"数组",-1),Mk=t("code",null,"动态规划",-1),Hk={style:{"text-align":"left"}},Ik=t("td",{style:{"text-align":"center"}},"1048",-1),wk={style:{"text-align":"left"}},vk={href:"https://leetcode.com/problems/longest-string-chain",target:"_blank",rel:"noopener noreferrer"},qk=t("td",{style:{"text-align":"center"}},null,-1),zk={style:{"text-align":"left"}},Ck=t("code",null,"数组",-1),Ok=t("code",null,"哈希表",-1),jk=t("code",null,"双指针",-1),Lk=t("code",null,"3+",-1),Ek={style:{"text-align":"left"}},Pk=t("td",{style:{"text-align":"center"}},"1049",-1),Kk={style:{"text-align":"left"}},Vk={href:"https://leetcode.com/problems/last-stone-weight-ii",target:"_blank",rel:"noopener noreferrer"},Nk={style:{"text-align":"center"}},Dk={href:"/problem/1049",target:"_blank",rel:"noopener noreferrer"},Bk={style:{"text-align":"left"}},Yk=t("code",null,"数组",-1),Ak=t("code",null,"动态规划",-1),Jk={style:{"text-align":"left"}},Rk=t("td",{style:{"text-align":"center"}},"1062",-1),Sk={style:{"text-align":"left"}},Uk={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Wk=t("td",{style:{"text-align":"center"}},null,-1),Xk={style:{"text-align":"left"}},Fk=t("code",null,"字符串",-1),Gk=t("code",null,"二分查找",-1),Tk=t("code",null,"动态规划",-1),Qk=t("code",null,"3+",-1),Zk={style:{"text-align":"left"}},$k=t("td",{style:{"text-align":"center"}},"1066",-1),tM={style:{"text-align":"left"}},eM={href:"https://leetcode.com/problems/campus-bikes-ii",target:"_blank",rel:"noopener noreferrer"},lM=t("td",{style:{"text-align":"center"}},null,-1),oM={style:{"text-align":"left"}},nM=t("code",null,"位运算",-1),sM=t("code",null,"数组",-1),dM=t("code",null,"动态规划",-1),_M=t("code",null,"2+",-1),iM={style:{"text-align":"left"}},aM=t("td",{style:{"text-align":"center"}},"1067",-1),rM={style:{"text-align":"left"}},cM={href:"https://leetcode.com/problems/digit-count-in-range",target:"_blank",rel:"noopener noreferrer"},hM=t("td",{style:{"text-align":"center"}},null,-1),uM={style:{"text-align":"left"}},fM=t("code",null,"数学",-1),gM=t("code",null,"动态规划",-1),mM={style:{"text-align":"left"}},yM=t("td",{style:{"text-align":"center"}},"1092",-1),xM={style:{"text-align":"left"}},pM={href:"https://leetcode.com/problems/shortest-common-supersequence",target:"_blank",rel:"noopener noreferrer"},bM=t("td",{style:{"text-align":"center"}},null,-1),kM={style:{"text-align":"left"}},MM=t("code",null,"字符串",-1),HM=t("code",null,"动态规划",-1),IM={style:{"text-align":"left"}},wM=t("td",{style:{"text-align":"center"}},"1105",-1),vM={style:{"text-align":"left"}},qM={href:"https://leetcode.com/problems/filling-bookcase-shelves",target:"_blank",rel:"noopener noreferrer"},zM=t("td",{style:{"text-align":"center"}},null,-1),CM={style:{"text-align":"left"}},OM=t("code",null,"数组",-1),jM=t("code",null,"动态规划",-1),LM={style:{"text-align":"left"}},EM=t("td",{style:{"text-align":"center"}},"1125",-1),PM={style:{"text-align":"left"}},KM={href:"https://leetcode.com/problems/smallest-sufficient-team",target:"_blank",rel:"noopener noreferrer"},VM=t("td",{style:{"text-align":"center"}},null,-1),NM={style:{"text-align":"left"}},DM=t("code",null,"位运算",-1),BM=t("code",null,"数组",-1),YM=t("code",null,"动态规划",-1),AM=t("code",null,"1+",-1),JM={style:{"text-align":"left"}},RM=t("td",{style:{"text-align":"center"}},"1130",-1),SM={style:{"text-align":"left"}},UM={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},WM=t("td",{style:{"text-align":"center"}},null,-1),XM={style:{"text-align":"left"}},FM=t("code",null,"栈",-1),GM=t("code",null,"贪心",-1),TM=t("code",null,"数组",-1),QM=t("code",null,"2+",-1),ZM={style:{"text-align":"left"}},$M=t("td",{style:{"text-align":"center"}},"1137",-1),tH={style:{"text-align":"left"}},eH={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},lH={style:{"text-align":"center"}},oH={href:"/problem/1137",target:"_blank",rel:"noopener noreferrer"},nH={style:{"text-align":"left"}},sH=t("code",null,"记忆化搜索",-1),dH=t("code",null,"数学",-1),_H=t("code",null,"动态规划",-1),iH={style:{"text-align":"left"}},aH=t("td",{style:{"text-align":"center"}},"1139",-1),rH={style:{"text-align":"left"}},cH={href:"https://leetcode.com/problems/largest-1-bordered-square",target:"_blank",rel:"noopener noreferrer"},hH=t("td",{style:{"text-align":"center"}},null,-1),uH={style:{"text-align":"left"}},fH=t("code",null,"数组",-1),gH=t("code",null,"动态规划",-1),mH=t("code",null,"矩阵",-1),yH={style:{"text-align":"left"}},xH=t("td",{style:{"text-align":"center"}},"1140",-1),pH={style:{"text-align":"left"}},bH={href:"https://leetcode.com/problems/stone-game-ii",target:"_blank",rel:"noopener noreferrer"},kH=t("td",{style:{"text-align":"center"}},null,-1),MH={style:{"text-align":"left"}},HH=t("code",null,"数组",-1),IH=t("code",null,"数学",-1),wH=t("code",null,"动态规划",-1),vH=t("code",null,"2+",-1),qH={style:{"text-align":"left"}},zH=t("td",{style:{"text-align":"center"}},"1143",-1),CH={style:{"text-align":"left"}},OH={href:"https://leetcode.com/problems/longest-common-subsequence",target:"_blank",rel:"noopener noreferrer"},jH={style:{"text-align":"center"}},LH={href:"/problem/1143",target:"_blank",rel:"noopener noreferrer"},EH={style:{"text-align":"left"}},PH=t("code",null,"字符串",-1),KH=t("code",null,"动态规划",-1),VH={style:{"text-align":"left"}},NH=t("td",{style:{"text-align":"center"}},"1147",-1),DH={style:{"text-align":"left"}},BH={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},YH=t("td",{style:{"text-align":"center"}},null,-1),AH={style:{"text-align":"left"}},JH=t("code",null,"贪心",-1),RH=t("code",null,"双指针",-1),SH=t("code",null,"字符串",-1),UH=t("code",null,"3+",-1),WH={style:{"text-align":"left"}},XH=t("td",{style:{"text-align":"center"}},"1155",-1),FH={style:{"text-align":"left"}},GH={href:"https://leetcode.com/problems/number-of-dice-rolls-with-target-sum",target:"_blank",rel:"noopener noreferrer"},TH=t("td",{style:{"text-align":"center"}},null,-1),QH={style:{"text-align":"left"}},ZH=t("code",null,"动态规划",-1),$H={style:{"text-align":"left"}},tI=t("td",{style:{"text-align":"center"}},"1162",-1),eI={style:{"text-align":"left"}},lI={href:"https://leetcode.com/problems/as-far-from-land-as-possible",target:"_blank",rel:"noopener noreferrer"},oI=t("td",{style:{"text-align":"center"}},null,-1),nI={style:{"text-align":"left"}},sI=t("code",null,"广度优先搜索",-1),dI=t("code",null,"数组",-1),_I=t("code",null,"动态规划",-1),iI=t("code",null,"1+",-1),aI={style:{"text-align":"left"}},rI=t("td",{style:{"text-align":"center"}},"1182",-1),cI={style:{"text-align":"left"}},hI={href:"https://leetcode.com/problems/shortest-distance-to-target-color",target:"_blank",rel:"noopener noreferrer"},uI=t("td",{style:{"text-align":"center"}},null,-1),fI={style:{"text-align":"left"}},gI=t("code",null,"数组",-1),mI=t("code",null,"二分查找",-1),yI=t("code",null,"动态规划",-1),xI={style:{"text-align":"left"}},pI=t("td",{style:{"text-align":"center"}},"1186",-1),bI={style:{"text-align":"left"}},kI={href:"https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion",target:"_blank",rel:"noopener noreferrer"},MI=t("td",{style:{"text-align":"center"}},null,-1),HI={style:{"text-align":"left"}},II=t("code",null,"数组",-1),wI=t("code",null,"动态规划",-1),vI={style:{"text-align":"left"}},qI=t("td",{style:{"text-align":"center"}},"1187",-1),zI={style:{"text-align":"left"}},CI={href:"https://leetcode.com/problems/make-array-strictly-increasing",target:"_blank",rel:"noopener noreferrer"},OI=t("td",{style:{"text-align":"center"}},null,-1),jI={style:{"text-align":"left"}},LI=t("code",null,"数组",-1),EI=t("code",null,"二分查找",-1),PI=t("code",null,"动态规划",-1),KI=t("code",null,"1+",-1),VI={style:{"text-align":"left"}},NI=t("td",{style:{"text-align":"center"}},"1191",-1),DI={style:{"text-align":"left"}},BI={href:"https://leetcode.com/problems/k-concatenation-maximum-sum",target:"_blank",rel:"noopener noreferrer"},YI=t("td",{style:{"text-align":"center"}},null,-1),AI={style:{"text-align":"left"}},JI=t("code",null,"数组",-1),RI=t("code",null,"动态规划",-1),SI={style:{"text-align":"left"}},UI=t("td",{style:{"text-align":"center"}},"1216",-1),WI={style:{"text-align":"left"}},XI={href:"https://leetcode.com/problems/valid-palindrome-iii",target:"_blank",rel:"noopener noreferrer"},FI=t("td",{style:{"text-align":"center"}},null,-1),GI={style:{"text-align":"left"}},TI=t("code",null,"字符串",-1),QI=t("code",null,"动态规划",-1),ZI={style:{"text-align":"left"}},$I=t("td",{style:{"text-align":"center"}},"1218",-1),tw={style:{"text-align":"left"}},ew={href:"https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference",target:"_blank",rel:"noopener noreferrer"},lw=t("td",{style:{"text-align":"center"}},null,-1),ow={style:{"text-align":"left"}},nw=t("code",null,"数组",-1),sw=t("code",null,"哈希表",-1),dw=t("code",null,"动态规划",-1),_w={style:{"text-align":"left"}},iw=t("td",{style:{"text-align":"center"}},"1220",-1),aw={style:{"text-align":"left"}},rw={href:"https://leetcode.com/problems/count-vowels-permutation",target:"_blank",rel:"noopener noreferrer"},cw=t("td",{style:{"text-align":"center"}},null,-1),hw={style:{"text-align":"left"}},uw=t("code",null,"动态规划",-1),fw={style:{"text-align":"left"}},gw=t("td",{style:{"text-align":"center"}},"1223",-1),mw={style:{"text-align":"left"}},yw={href:"https://leetcode.com/problems/dice-roll-simulation",target:"_blank",rel:"noopener noreferrer"},xw=t("td",{style:{"text-align":"center"}},null,-1),pw={style:{"text-align":"left"}},bw=t("code",null,"数组",-1),kw=t("code",null,"动态规划",-1),Mw={style:{"text-align":"left"}},Hw=t("td",{style:{"text-align":"center"}},"1227",-1),Iw={style:{"text-align":"left"}},ww={href:"https://leetcode.com/problems/airplane-seat-assignment-probability",target:"_blank",rel:"noopener noreferrer"},vw=t("td",{style:{"text-align":"center"}},null,-1),qw={style:{"text-align":"left"}},zw=t("code",null,"脑筋急转弯",-1),Cw=t("code",null,"数学",-1),Ow=t("code",null,"动态规划",-1),jw=t("code",null,"1+",-1),Lw={style:{"text-align":"left"}},Ew=t("td",{style:{"text-align":"center"}},"1230",-1),Pw={style:{"text-align":"left"}},Kw={href:"https://leetcode.com/problems/toss-strange-coins",target:"_blank",rel:"noopener noreferrer"},Vw=t("td",{style:{"text-align":"center"}},null,-1),Nw={style:{"text-align":"left"}},Dw=t("code",null,"数组",-1),Bw=t("code",null,"数学",-1),Yw=t("code",null,"动态规划",-1),Aw=t("code",null,"1+",-1),Jw={style:{"text-align":"left"}},Rw=t("td",{style:{"text-align":"center"}},"1235",-1),Sw={style:{"text-align":"left"}},Uw={href:"https://leetcode.com/problems/maximum-profit-in-job-scheduling",target:"_blank",rel:"noopener noreferrer"},Ww=t("td",{style:{"text-align":"center"}},null,-1),Xw={style:{"text-align":"left"}},Fw=t("code",null,"数组",-1),Gw=t("code",null,"二分查找",-1),Tw=t("code",null,"动态规划",-1),Qw=t("code",null,"1+",-1),Zw={style:{"text-align":"left"}},$w=t("td",{style:{"text-align":"center"}},"1246",-1),tv={style:{"text-align":"left"}},ev={href:"https://leetcode.com/problems/palindrome-removal",target:"_blank",rel:"noopener noreferrer"},lv=t("td",{style:{"text-align":"center"}},null,-1),ov={style:{"text-align":"left"}},nv=t("code",null,"数组",-1),sv=t("code",null,"动态规划",-1),dv={style:{"text-align":"left"}},_v=t("td",{style:{"text-align":"center"}},"1255",-1),iv={style:{"text-align":"left"}},av={href:"https://leetcode.com/problems/maximum-score-words-formed-by-letters",target:"_blank",rel:"noopener noreferrer"},rv=t("td",{style:{"text-align":"center"}},null,-1),cv={style:{"text-align":"left"}},hv=t("code",null,"位运算",-1),uv=t("code",null,"数组",-1),fv=t("code",null,"字符串",-1),gv=t("code",null,"3+",-1),mv={style:{"text-align":"left"}},yv=t("td",{style:{"text-align":"center"}},"1259",-1),xv={style:{"text-align":"left"}},pv={href:"https://leetcode.com/problems/handshakes-that-dont-cross",target:"_blank",rel:"noopener noreferrer"},bv=t("td",{style:{"text-align":"center"}},null,-1),kv={style:{"text-align":"left"}},Mv=t("code",null,"数学",-1),Hv=t("code",null,"动态规划",-1),Iv={style:{"text-align":"left"}},wv=t("td",{style:{"text-align":"center"}},"1262",-1),vv={style:{"text-align":"left"}},qv={href:"https://leetcode.com/problems/greatest-sum-divisible-by-three",target:"_blank",rel:"noopener noreferrer"},zv=t("td",{style:{"text-align":"center"}},null,-1),Cv={style:{"text-align":"left"}},Ov=t("code",null,"贪心",-1),jv=t("code",null,"数组",-1),Lv=t("code",null,"动态规划",-1),Ev=t("code",null,"1+",-1),Pv={style:{"text-align":"left"}},Kv=t("td",{style:{"text-align":"center"}},"1269",-1),Vv={style:{"text-align":"left"}},Nv={href:"https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps",target:"_blank",rel:"noopener noreferrer"},Dv=t("td",{style:{"text-align":"center"}},null,-1),Bv={style:{"text-align":"left"}},Yv=t("code",null,"动态规划",-1),Av={style:{"text-align":"left"}},Jv=t("td",{style:{"text-align":"center"}},"1277",-1),Rv={style:{"text-align":"left"}},Sv={href:"https://leetcode.com/problems/count-square-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Uv=t("td",{style:{"text-align":"center"}},null,-1),Wv={style:{"text-align":"left"}},Xv=t("code",null,"数组",-1),Fv=t("code",null,"动态规划",-1),Gv=t("code",null,"矩阵",-1),Tv={style:{"text-align":"left"}},Qv=t("td",{style:{"text-align":"center"}},"1278",-1),Zv={style:{"text-align":"left"}},$v={href:"https://leetcode.com/problems/palindrome-partitioning-iii",target:"_blank",rel:"noopener noreferrer"},tq=t("td",{style:{"text-align":"center"}},null,-1),eq={style:{"text-align":"left"}},lq=t("code",null,"字符串",-1),oq=t("code",null,"动态规划",-1),nq={style:{"text-align":"left"}},sq=t("td",{style:{"text-align":"center"}},"1289",-1),dq={style:{"text-align":"left"}},_q={href:"https://leetcode.com/problems/minimum-falling-path-sum-ii",target:"_blank",rel:"noopener noreferrer"},iq=t("td",{style:{"text-align":"center"}},null,-1),aq={style:{"text-align":"left"}},rq=t("code",null,"数组",-1),cq=t("code",null,"动态规划",-1),hq=t("code",null,"矩阵",-1),uq={style:{"text-align":"left"}},fq=t("td",{style:{"text-align":"center"}},"1301",-1),gq={style:{"text-align":"left"}},mq={href:"https://leetcode.com/problems/number-of-paths-with-max-score",target:"_blank",rel:"noopener noreferrer"},yq=t("td",{style:{"text-align":"center"}},null,-1),xq={style:{"text-align":"left"}},pq=t("code",null,"数组",-1),bq=t("code",null,"动态规划",-1),kq=t("code",null,"矩阵",-1),Mq={style:{"text-align":"left"}},Hq=t("td",{style:{"text-align":"center"}},"1312",-1),Iq={style:{"text-align":"left"}},wq={href:"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome",target:"_blank",rel:"noopener noreferrer"},vq={style:{"text-align":"center"}},qq={href:"/problem/1312",target:"_blank",rel:"noopener noreferrer"},zq={style:{"text-align":"left"}},Cq=t("code",null,"字符串",-1),Oq=t("code",null,"动态规划",-1),jq={style:{"text-align":"left"}},Lq=t("td",{style:{"text-align":"center"}},"1320",-1),Eq={style:{"text-align":"left"}},Pq={href:"https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers",target:"_blank",rel:"noopener noreferrer"},Kq=t("td",{style:{"text-align":"center"}},null,-1),Vq={style:{"text-align":"left"}},Nq=t("code",null,"字符串",-1),Dq=t("code",null,"动态规划",-1),Bq={style:{"text-align":"left"}},Yq=t("td",{style:{"text-align":"center"}},"1326",-1),Aq={style:{"text-align":"left"}},Jq={href:"https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden",target:"_blank",rel:"noopener noreferrer"},Rq=t("td",{style:{"text-align":"center"}},null,-1),Sq={style:{"text-align":"left"}},Uq=t("code",null,"贪心",-1),Wq=t("code",null,"数组",-1),Xq=t("code",null,"动态规划",-1),Fq={style:{"text-align":"left"}},Gq=t("td",{style:{"text-align":"center"}},"1334",-1),Tq={style:{"text-align":"left"}},Qq={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},Zq=t("td",{style:{"text-align":"center"}},null,-1),$q={style:{"text-align":"left"}},tz=t("code",null,"图",-1),ez=t("code",null,"动态规划",-1),lz=t("code",null,"最短路",-1),oz={style:{"text-align":"left"}},nz=t("td",{style:{"text-align":"center"}},"1335",-1),sz={style:{"text-align":"left"}},dz={href:"https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule",target:"_blank",rel:"noopener noreferrer"},_z=t("td",{style:{"text-align":"center"}},null,-1),iz={style:{"text-align":"left"}},az=t("code",null,"数组",-1),rz=t("code",null,"动态规划",-1),cz={style:{"text-align":"left"}},hz=t("td",{style:{"text-align":"center"}},"1340",-1),uz={style:{"text-align":"left"}},fz={href:"https://leetcode.com/problems/jump-game-v",target:"_blank",rel:"noopener noreferrer"},gz=t("td",{style:{"text-align":"center"}},null,-1),mz={style:{"text-align":"left"}},yz=t("code",null,"数组",-1),xz=t("code",null,"动态规划",-1),pz=t("code",null,"排序",-1),bz={style:{"text-align":"left"}},kz=t("td",{style:{"text-align":"center"}},"1349",-1),Mz={style:{"text-align":"left"}},Hz={href:"https://leetcode.com/problems/maximum-students-taking-exam",target:"_blank",rel:"noopener noreferrer"},Iz=t("td",{style:{"text-align":"center"}},null,-1),wz={style:{"text-align":"left"}},vz=t("code",null,"位运算",-1),qz=t("code",null,"数组",-1),zz=t("code",null,"动态规划",-1),Cz=t("code",null,"2+",-1),Oz={style:{"text-align":"left"}},jz=t("td",{style:{"text-align":"center"}},"1359",-1),Lz={style:{"text-align":"left"}},Ez={href:"https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options",target:"_blank",rel:"noopener noreferrer"},Pz=t("td",{style:{"text-align":"center"}},null,-1),Kz={style:{"text-align":"left"}},Vz=t("code",null,"数学",-1),Nz=t("code",null,"动态规划",-1),Dz=t("code",null,"组合数学",-1),Bz={style:{"text-align":"left"}},Yz=t("td",{style:{"text-align":"center"}},"1363",-1),Az={style:{"text-align":"left"}},Jz={href:"https://leetcode.com/problems/largest-multiple-of-three",target:"_blank",rel:"noopener noreferrer"},Rz=t("td",{style:{"text-align":"center"}},null,-1),Sz={style:{"text-align":"left"}},Uz=t("code",null,"贪心",-1),Wz=t("code",null,"数组",-1),Xz=t("code",null,"动态规划",-1),Fz={style:{"text-align":"left"}},Gz=t("td",{style:{"text-align":"center"}},"1372",-1),Tz={style:{"text-align":"left"}},Qz={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zz=t("td",{style:{"text-align":"center"}},null,-1),$z={style:{"text-align":"left"}},tC=t("code",null,"树",-1),eC=t("code",null,"深度优先搜索",-1),lC=t("code",null,"动态规划",-1),oC=t("code",null,"1+",-1),nC={style:{"text-align":"left"}},sC=t("td",{style:{"text-align":"center"}},"1373",-1),dC={style:{"text-align":"left"}},_C={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},iC=t("td",{style:{"text-align":"center"}},null,-1),aC={style:{"text-align":"left"}},rC=t("code",null,"树",-1),cC=t("code",null,"深度优先搜索",-1),hC=t("code",null,"二叉搜索树",-1),uC=t("code",null,"2+",-1),fC={style:{"text-align":"left"}},gC=t("td",{style:{"text-align":"center"}},"1387",-1),mC={style:{"text-align":"left"}},yC={href:"https://leetcode.com/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},xC=t("td",{style:{"text-align":"center"}},null,-1),pC={style:{"text-align":"left"}},bC=t("code",null,"记忆化搜索",-1),kC=t("code",null,"动态规划",-1),MC=t("code",null,"排序",-1),HC={style:{"text-align":"left"}},IC=t("td",{style:{"text-align":"center"}},"1388",-1),wC={style:{"text-align":"left"}},vC={href:"https://leetcode.com/problems/pizza-with-3n-slices",target:"_blank",rel:"noopener noreferrer"},qC=t("td",{style:{"text-align":"center"}},null,-1),zC={style:{"text-align":"left"}},CC=t("code",null,"贪心",-1),OC=t("code",null,"数组",-1),jC=t("code",null,"动态规划",-1),LC=t("code",null,"1+",-1),EC={style:{"text-align":"left"}},PC=t("td",{style:{"text-align":"center"}},"1395",-1),KC={style:{"text-align":"left"}},VC={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},NC=t("td",{style:{"text-align":"center"}},null,-1),DC={style:{"text-align":"left"}},BC=t("code",null,"树状数组",-1),YC=t("code",null,"线段树",-1),AC=t("code",null,"数组",-1),JC=t("code",null,"1+",-1),RC={style:{"text-align":"left"}},SC=t("td",{style:{"text-align":"center"}},"1397",-1),UC={style:{"text-align":"left"}},WC={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},XC=t("td",{style:{"text-align":"center"}},null,-1),FC={style:{"text-align":"left"}},GC=t("code",null,"字符串",-1),TC=t("code",null,"动态规划",-1),QC=t("code",null,"字符串匹配",-1),ZC={style:{"text-align":"left"}},$C=t("td",{style:{"text-align":"center"}},"1402",-1),tO={style:{"text-align":"left"}},eO={href:"https://leetcode.com/problems/reducing-dishes",target:"_blank",rel:"noopener noreferrer"},lO=t("td",{style:{"text-align":"center"}},null,-1),oO={style:{"text-align":"left"}},nO=t("code",null,"贪心",-1),sO=t("code",null,"数组",-1),dO=t("code",null,"动态规划",-1),_O=t("code",null,"1+",-1),iO={style:{"text-align":"left"}},aO=t("td",{style:{"text-align":"center"}},"1406",-1),rO={style:{"text-align":"left"}},cO={href:"https://leetcode.com/problems/stone-game-iii",target:"_blank",rel:"noopener noreferrer"},hO=t("td",{style:{"text-align":"center"}},null,-1),uO={style:{"text-align":"left"}},fO=t("code",null,"数组",-1),gO=t("code",null,"数学",-1),mO=t("code",null,"动态规划",-1),yO=t("code",null,"1+",-1),xO={style:{"text-align":"left"}},pO=t("td",{style:{"text-align":"center"}},"1411",-1),bO={style:{"text-align":"left"}},kO={href:"https://leetcode.com/problems/number-of-ways-to-paint-n-3-grid",target:"_blank",rel:"noopener noreferrer"},MO=t("td",{style:{"text-align":"center"}},null,-1),HO={style:{"text-align":"left"}},IO=t("code",null,"动态规划",-1),wO={style:{"text-align":"left"}},vO=t("td",{style:{"text-align":"center"}},"1416",-1),qO={style:{"text-align":"left"}},zO={href:"https://leetcode.com/problems/restore-the-array",target:"_blank",rel:"noopener noreferrer"},CO=t("td",{style:{"text-align":"center"}},null,-1),OO={style:{"text-align":"left"}},jO=t("code",null,"字符串",-1),LO=t("code",null,"动态规划",-1),EO={style:{"text-align":"left"}},PO=t("td",{style:{"text-align":"center"}},"1420",-1),KO={style:{"text-align":"left"}},VO={href:"https://leetcode.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons",target:"_blank",rel:"noopener noreferrer"},NO=t("td",{style:{"text-align":"center"}},null,-1),DO={style:{"text-align":"left"}},BO=t("code",null,"动态规划",-1),YO=t("code",null,"前缀和",-1),AO={style:{"text-align":"left"}},JO=t("td",{style:{"text-align":"center"}},"1425",-1),RO={style:{"text-align":"left"}},SO={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},UO=t("td",{style:{"text-align":"center"}},null,-1),WO={style:{"text-align":"left"}},XO=t("code",null,"队列",-1),FO=t("code",null,"数组",-1),GO=t("code",null,"动态规划",-1),TO=t("code",null,"3+",-1),QO={style:{"text-align":"left"}},ZO=t("td",{style:{"text-align":"center"}},"1434",-1),$O={style:{"text-align":"left"}},tj={href:"https://leetcode.com/problems/number-of-ways-to-wear-different-hats-to-each-other",target:"_blank",rel:"noopener noreferrer"},ej=t("td",{style:{"text-align":"center"}},null,-1),lj={style:{"text-align":"left"}},oj=t("code",null,"位运算",-1),nj=t("code",null,"数组",-1),sj=t("code",null,"动态规划",-1),dj=t("code",null,"1+",-1),_j={style:{"text-align":"left"}},ij=t("td",{style:{"text-align":"center"}},"1444",-1),aj={style:{"text-align":"left"}},rj={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},cj=t("td",{style:{"text-align":"center"}},null,-1),hj={style:{"text-align":"left"}},uj=t("code",null,"记忆化搜索",-1),fj=t("code",null,"数组",-1),gj=t("code",null,"动态规划",-1),mj=t("code",null,"1+",-1),yj={style:{"text-align":"left"}},xj=t("td",{style:{"text-align":"center"}},"1449",-1),pj={style:{"text-align":"left"}},bj={href:"https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target",target:"_blank",rel:"noopener noreferrer"},kj=t("td",{style:{"text-align":"center"}},null,-1),Mj={style:{"text-align":"left"}},Hj=t("code",null,"数组",-1),Ij=t("code",null,"动态规划",-1),wj={style:{"text-align":"left"}},vj=t("td",{style:{"text-align":"center"}},"1458",-1),qj={style:{"text-align":"left"}},zj={href:"https://leetcode.com/problems/max-dot-product-of-two-subsequences",target:"_blank",rel:"noopener noreferrer"},Cj=t("td",{style:{"text-align":"center"}},null,-1),Oj={style:{"text-align":"left"}},jj=t("code",null,"数组",-1),Lj=t("code",null,"动态规划",-1),Ej={style:{"text-align":"left"}},Pj=t("td",{style:{"text-align":"center"}},"1463",-1),Kj={style:{"text-align":"left"}},Vj={href:"https://leetcode.com/problems/cherry-pickup-ii",target:"_blank",rel:"noopener noreferrer"},Nj=t("td",{style:{"text-align":"center"}},null,-1),Dj={style:{"text-align":"left"}},Bj=t("code",null,"数组",-1),Yj=t("code",null,"动态规划",-1),Aj=t("code",null,"矩阵",-1),Jj={style:{"text-align":"left"}},Rj=t("td",{style:{"text-align":"center"}},"1467",-1),Sj={style:{"text-align":"left"}},Uj={href:"https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",target:"_blank",rel:"noopener noreferrer"},Wj=t("td",{style:{"text-align":"center"}},null,-1),Xj={style:{"text-align":"left"}},Fj=t("code",null,"数组",-1),Gj=t("code",null,"数学",-1),Tj=t("code",null,"动态规划",-1),Qj=t("code",null,"3+",-1),Zj={style:{"text-align":"left"}},$j=t("td",{style:{"text-align":"center"}},"1473",-1),tL={style:{"text-align":"left"}},eL={href:"https://leetcode.com/problems/paint-house-iii",target:"_blank",rel:"noopener noreferrer"},lL=t("td",{style:{"text-align":"center"}},null,-1),oL={style:{"text-align":"left"}},nL=t("code",null,"数组",-1),sL=t("code",null,"动态规划",-1),dL={style:{"text-align":"left"}},_L=t("td",{style:{"text-align":"center"}},"1477",-1),iL={style:{"text-align":"left"}},aL={href:"https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum",target:"_blank",rel:"noopener noreferrer"},rL=t("td",{style:{"text-align":"center"}},null,-1),cL={style:{"text-align":"left"}},hL=t("code",null,"数组",-1),uL=t("code",null,"哈希表",-1),fL=t("code",null,"二分查找",-1),gL=t("code",null,"2+",-1),mL={style:{"text-align":"left"}},yL=t("td",{style:{"text-align":"center"}},"1478",-1),xL={style:{"text-align":"left"}},pL={href:"https://leetcode.com/problems/allocate-mailboxes",target:"_blank",rel:"noopener noreferrer"},bL=t("td",{style:{"text-align":"center"}},null,-1),kL={style:{"text-align":"left"}},ML=t("code",null,"数组",-1),HL=t("code",null,"数学",-1),IL=t("code",null,"动态规划",-1),wL=t("code",null,"1+",-1),vL={style:{"text-align":"left"}},qL=t("td",{style:{"text-align":"center"}},"1483",-1),zL={style:{"text-align":"left"}},CL={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},OL=t("td",{style:{"text-align":"center"}},null,-1),jL={style:{"text-align":"left"}},LL=t("code",null,"树",-1),EL=t("code",null,"深度优先搜索",-1),PL=t("code",null,"广度优先搜索",-1),KL=t("code",null,"3+",-1),VL={style:{"text-align":"left"}},NL=t("td",{style:{"text-align":"center"}},"1493",-1),DL={style:{"text-align":"left"}},BL={href:"https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element",target:"_blank",rel:"noopener noreferrer"},YL=t("td",{style:{"text-align":"center"}},null,-1),AL={style:{"text-align":"left"}},JL=t("code",null,"数组",-1),RL=t("code",null,"动态规划",-1),SL=t("code",null,"滑动窗口",-1),UL={style:{"text-align":"left"}},WL=t("td",{style:{"text-align":"center"}},"1494",-1),XL={style:{"text-align":"left"}},FL={href:"https://leetcode.com/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},GL=t("td",{style:{"text-align":"center"}},null,-1),TL={style:{"text-align":"left"}},QL=t("code",null,"位运算",-1),ZL=t("code",null,"图",-1),$L=t("code",null,"动态规划",-1),tE=t("code",null,"1+",-1),eE={style:{"text-align":"left"}},lE=t("td",{style:{"text-align":"center"}},"1504",-1),oE={style:{"text-align":"left"}},nE={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},sE=t("td",{style:{"text-align":"center"}},null,-1),dE={style:{"text-align":"left"}},_E=t("code",null,"栈",-1),iE=t("code",null,"数组",-1),aE=t("code",null,"动态规划",-1),rE=t("code",null,"2+",-1),cE={style:{"text-align":"left"}},hE=t("td",{style:{"text-align":"center"}},"1510",-1),uE={style:{"text-align":"left"}},fE={href:"https://leetcode.com/problems/stone-game-iv",target:"_blank",rel:"noopener noreferrer"},gE=t("td",{style:{"text-align":"center"}},null,-1),mE={style:{"text-align":"left"}},yE=t("code",null,"数学",-1),xE=t("code",null,"动态规划",-1),pE=t("code",null,"博弈",-1),bE={style:{"text-align":"left"}},kE=t("td",{style:{"text-align":"center"}},"1524",-1),ME={style:{"text-align":"left"}},HE={href:"https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},IE=t("td",{style:{"text-align":"center"}},null,-1),wE={style:{"text-align":"left"}},vE=t("code",null,"数组",-1),qE=t("code",null,"数学",-1),zE=t("code",null,"动态规划",-1),CE=t("code",null,"1+",-1),OE={style:{"text-align":"left"}},jE=t("td",{style:{"text-align":"center"}},"1525",-1),LE={style:{"text-align":"left"}},EE={href:"https://leetcode.com/problems/number-of-good-ways-to-split-a-string",target:"_blank",rel:"noopener noreferrer"},PE=t("td",{style:{"text-align":"center"}},null,-1),KE={style:{"text-align":"left"}},VE=t("code",null,"位运算",-1),NE=t("code",null,"哈希表",-1),DE=t("code",null,"字符串",-1),BE=t("code",null,"1+",-1),YE={style:{"text-align":"left"}},AE=t("td",{style:{"text-align":"center"}},"1526",-1),JE={style:{"text-align":"left"}},RE={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},SE=t("td",{style:{"text-align":"center"}},null,-1),UE={style:{"text-align":"left"}},WE=t("code",null,"栈",-1),XE=t("code",null,"贪心",-1),FE=t("code",null,"数组",-1),GE=t("code",null,"2+",-1),TE={style:{"text-align":"left"}},QE=t("td",{style:{"text-align":"center"}},"1531",-1),ZE={style:{"text-align":"left"}},$E={href:"https://leetcode.com/problems/string-compression-ii",target:"_blank",rel:"noopener noreferrer"},tP=t("td",{style:{"text-align":"center"}},null,-1),eP={style:{"text-align":"left"}},lP=t("code",null,"字符串",-1),oP=t("code",null,"动态规划",-1),nP={style:{"text-align":"left"}},sP=t("td",{style:{"text-align":"center"}},"1537",-1),dP={style:{"text-align":"left"}},_P={href:"https://leetcode.com/problems/get-the-maximum-score",target:"_blank",rel:"noopener noreferrer"},iP=t("td",{style:{"text-align":"center"}},null,-1),aP={style:{"text-align":"left"}},rP=t("code",null,"贪心",-1),cP=t("code",null,"数组",-1),hP=t("code",null,"双指针",-1),uP=t("code",null,"1+",-1),fP={style:{"text-align":"left"}},gP=t("td",{style:{"text-align":"center"}},"1547",-1),mP={style:{"text-align":"left"}},yP={href:"https://leetcode.com/problems/minimum-cost-to-cut-a-stick",target:"_blank",rel:"noopener noreferrer"},xP=t("td",{style:{"text-align":"center"}},null,-1),pP={style:{"text-align":"left"}},bP=t("code",null,"数组",-1),kP=t("code",null,"动态规划",-1),MP=t("code",null,"排序",-1),HP={style:{"text-align":"left"}},IP=t("td",{style:{"text-align":"center"}},"1548",-1),wP={style:{"text-align":"left"}},vP={href:"https://leetcode.com/problems/the-most-similar-path-in-a-graph",target:"_blank",rel:"noopener noreferrer"},qP=t("td",{style:{"text-align":"center"}},null,-1),zP={style:{"text-align":"left"}},CP=t("code",null,"图",-1),OP=t("code",null,"动态规划",-1),jP={style:{"text-align":"left"}},LP=t("td",{style:{"text-align":"center"}},"1553",-1),EP={style:{"text-align":"left"}},PP={href:"https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},KP=t("td",{style:{"text-align":"center"}},null,-1),VP={style:{"text-align":"left"}},NP=t("code",null,"记忆化搜索",-1),DP=t("code",null,"动态规划",-1),BP={style:{"text-align":"left"}},YP=t("td",{style:{"text-align":"center"}},"1563",-1),AP={style:{"text-align":"left"}},JP={href:"https://leetcode.com/problems/stone-game-v",target:"_blank",rel:"noopener noreferrer"},RP=t("td",{style:{"text-align":"center"}},null,-1),SP={style:{"text-align":"left"}},UP=t("code",null,"数组",-1),WP=t("code",null,"数学",-1),XP=t("code",null,"动态规划",-1),FP=t("code",null,"1+",-1),GP={style:{"text-align":"left"}},TP=t("td",{style:{"text-align":"center"}},"1567",-1),QP={style:{"text-align":"left"}},ZP={href:"https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product",target:"_blank",rel:"noopener noreferrer"},$P=t("td",{style:{"text-align":"center"}},null,-1),tK={style:{"text-align":"left"}},eK=t("code",null,"贪心",-1),lK=t("code",null,"数组",-1),oK=t("code",null,"动态规划",-1),nK={style:{"text-align":"left"}},sK=t("td",{style:{"text-align":"center"}},"1569",-1),dK={style:{"text-align":"left"}},_K={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},iK=t("td",{style:{"text-align":"center"}},null,-1),aK={style:{"text-align":"left"}},rK=t("code",null,"树",-1),cK=t("code",null,"并查集",-1),hK=t("code",null,"二叉搜索树",-1),uK=t("code",null,"7+",-1),fK={style:{"text-align":"left"}},gK=t("td",{style:{"text-align":"center"}},"1575",-1),mK={style:{"text-align":"left"}},yK={href:"https://leetcode.com/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},xK=t("td",{style:{"text-align":"center"}},null,-1),pK={style:{"text-align":"left"}},bK=t("code",null,"记忆化搜索",-1),kK=t("code",null,"数组",-1),MK=t("code",null,"动态规划",-1),HK={style:{"text-align":"left"}},IK=t("td",{style:{"text-align":"center"}},"1578",-1),wK={style:{"text-align":"left"}},vK={href:"https://leetcode.com/problems/minimum-time-to-make-rope-colorful",target:"_blank",rel:"noopener noreferrer"},qK=t("td",{style:{"text-align":"center"}},null,-1),zK={style:{"text-align":"left"}},CK=t("code",null,"贪心",-1),OK=t("code",null,"数组",-1),jK=t("code",null,"字符串",-1),LK=t("code",null,"1+",-1),EK={style:{"text-align":"left"}},PK=t("td",{style:{"text-align":"center"}},"1594",-1),KK={style:{"text-align":"left"}},VK={href:"https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},NK=t("td",{style:{"text-align":"center"}},null,-1),DK={style:{"text-align":"left"}},BK=t("code",null,"数组",-1),YK=t("code",null,"动态规划",-1),AK=t("code",null,"矩阵",-1),JK={style:{"text-align":"left"}},RK=t("td",{style:{"text-align":"center"}},"1595",-1),SK={style:{"text-align":"left"}},UK={href:"https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points",target:"_blank",rel:"noopener noreferrer"},WK=t("td",{style:{"text-align":"center"}},null,-1),XK={style:{"text-align":"left"}},FK=t("code",null,"位运算",-1),GK=t("code",null,"数组",-1),TK=t("code",null,"动态规划",-1),QK=t("code",null,"2+",-1),ZK={style:{"text-align":"left"}},$K=t("td",{style:{"text-align":"center"}},"1611",-1),tV={style:{"text-align":"left"}},eV={href:"https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},lV=t("td",{style:{"text-align":"center"}},null,-1),oV={style:{"text-align":"left"}},nV=t("code",null,"位运算",-1),sV=t("code",null,"记忆化搜索",-1),dV=t("code",null,"动态规划",-1),_V={style:{"text-align":"left"}},iV=t("td",{style:{"text-align":"center"}},"1617",-1),aV={style:{"text-align":"left"}},rV={href:"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},cV=t("td",{style:{"text-align":"center"}},null,-1),hV={style:{"text-align":"left"}},uV=t("code",null,"位运算",-1),fV=t("code",null,"树",-1),gV=t("code",null,"动态规划",-1),mV=t("code",null,"2+",-1),yV={style:{"text-align":"left"}},xV=t("td",{style:{"text-align":"center"}},"1621",-1),pV={style:{"text-align":"left"}},bV={href:"https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments",target:"_blank",rel:"noopener noreferrer"},kV=t("td",{style:{"text-align":"center"}},null,-1),MV={style:{"text-align":"left"}},HV=t("code",null,"数学",-1),IV=t("code",null,"动态规划",-1),wV=t("code",null,"组合数学",-1),vV={style:{"text-align":"left"}},qV=t("td",{style:{"text-align":"center"}},"1626",-1),zV={style:{"text-align":"left"}},CV={href:"https://leetcode.com/problems/best-team-with-no-conflicts",target:"_blank",rel:"noopener noreferrer"},OV=t("td",{style:{"text-align":"center"}},null,-1),jV={style:{"text-align":"left"}},LV=t("code",null,"数组",-1),EV=t("code",null,"动态规划",-1),PV=t("code",null,"排序",-1),KV={style:{"text-align":"left"}},VV=t("td",{style:{"text-align":"center"}},"1638",-1),NV={style:{"text-align":"left"}},DV={href:"https://leetcode.com/problems/count-substrings-that-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},BV=t("td",{style:{"text-align":"center"}},null,-1),YV={style:{"text-align":"left"}},AV=t("code",null,"哈希表",-1),JV=t("code",null,"字符串",-1),RV=t("code",null,"动态规划",-1),SV=t("code",null,"1+",-1),UV={style:{"text-align":"left"}},WV=t("td",{style:{"text-align":"center"}},"1639",-1),XV={style:{"text-align":"left"}},FV={href:"https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary",target:"_blank",rel:"noopener noreferrer"},GV=t("td",{style:{"text-align":"center"}},null,-1),TV={style:{"text-align":"left"}},QV=t("code",null,"数组",-1),ZV=t("code",null,"字符串",-1),$V=t("code",null,"动态规划",-1),tN={style:{"text-align":"left"}},eN=t("td",{style:{"text-align":"center"}},"1641",-1),lN={style:{"text-align":"left"}},oN={href:"https://leetcode.com/problems/count-sorted-vowel-strings",target:"_blank",rel:"noopener noreferrer"},nN=t("td",{style:{"text-align":"center"}},null,-1),sN={style:{"text-align":"left"}},dN=t("code",null,"数学",-1),_N=t("code",null,"动态规划",-1),iN=t("code",null,"组合数学",-1),aN={style:{"text-align":"left"}},rN=t("td",{style:{"text-align":"center"}},"1643",-1),cN={style:{"text-align":"left"}},hN={href:"https://leetcode.com/problems/kth-smallest-instructions",target:"_blank",rel:"noopener noreferrer"},uN=t("td",{style:{"text-align":"center"}},null,-1),fN={style:{"text-align":"left"}},gN=t("code",null,"数组",-1),mN=t("code",null,"数学",-1),yN=t("code",null,"动态规划",-1),xN=t("code",null,"1+",-1),pN={style:{"text-align":"left"}},bN=t("td",{style:{"text-align":"center"}},"1653",-1),kN={style:{"text-align":"left"}},MN={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},HN=t("td",{style:{"text-align":"center"}},null,-1),IN={style:{"text-align":"left"}},wN=t("code",null,"栈",-1),vN=t("code",null,"字符串",-1),qN=t("code",null,"动态规划",-1),zN={style:{"text-align":"left"}},CN=t("td",{style:{"text-align":"center"}},"1654",-1),ON={style:{"text-align":"left"}},jN={href:"https://leetcode.com/problems/minimum-jumps-to-reach-home",target:"_blank",rel:"noopener noreferrer"},LN=t("td",{style:{"text-align":"center"}},null,-1),EN={style:{"text-align":"left"}},PN=t("code",null,"广度优先搜索",-1),KN=t("code",null,"数组",-1),VN=t("code",null,"动态规划",-1),NN={style:{"text-align":"left"}},DN=t("td",{style:{"text-align":"center"}},"1655",-1),BN={style:{"text-align":"left"}},YN={href:"https://leetcode.com/problems/distribute-repeating-integers",target:"_blank",rel:"noopener noreferrer"},AN=t("td",{style:{"text-align":"center"}},null,-1),JN={style:{"text-align":"left"}},RN=t("code",null,"位运算",-1),SN=t("code",null,"数组",-1),UN=t("code",null,"动态规划",-1),WN=t("code",null,"2+",-1),XN={style:{"text-align":"left"}},FN=t("td",{style:{"text-align":"center"}},"1659",-1),GN={style:{"text-align":"left"}},TN={href:"https://leetcode.com/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},QN=t("td",{style:{"text-align":"center"}},null,-1),ZN={style:{"text-align":"left"}},$N=t("code",null,"位运算",-1),tD=t("code",null,"记忆化搜索",-1),eD=t("code",null,"动态规划",-1),lD=t("code",null,"1+",-1),oD={style:{"text-align":"left"}},nD=t("td",{style:{"text-align":"center"}},"1668",-1),sD={style:{"text-align":"left"}},dD={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},_D=t("td",{style:{"text-align":"center"}},null,-1),iD={style:{"text-align":"left"}},aD=t("code",null,"字符串",-1),rD=t("code",null,"动态规划",-1),cD=t("code",null,"字符串匹配",-1),hD={style:{"text-align":"left"}},uD=t("td",{style:{"text-align":"center"}},"1671",-1),fD={style:{"text-align":"left"}},gD={href:"https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array",target:"_blank",rel:"noopener noreferrer"},mD=t("td",{style:{"text-align":"center"}},null,-1),yD={style:{"text-align":"left"}},xD=t("code",null,"贪心",-1),pD=t("code",null,"数组",-1),bD=t("code",null,"二分查找",-1),kD=t("code",null,"1+",-1),MD={style:{"text-align":"left"}},HD=t("td",{style:{"text-align":"center"}},"1681",-1),ID={style:{"text-align":"left"}},wD={href:"https://leetcode.com/problems/minimum-incompatibility",target:"_blank",rel:"noopener noreferrer"},vD=t("td",{style:{"text-align":"center"}},null,-1),qD={style:{"text-align":"left"}},zD=t("code",null,"位运算",-1),CD=t("code",null,"数组",-1),OD=t("code",null,"动态规划",-1),jD=t("code",null,"1+",-1),LD={style:{"text-align":"left"}},ED=t("td",{style:{"text-align":"center"}},"1682",-1),PD={style:{"text-align":"left"}},KD={href:"https://leetcode.com/problems/longest-palindromic-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},VD=t("td",{style:{"text-align":"center"}},null,-1),ND={style:{"text-align":"left"}},DD=t("code",null,"字符串",-1),BD=t("code",null,"动态规划",-1),YD={style:{"text-align":"left"}},AD=t("td",{style:{"text-align":"center"}},"1687",-1),JD={style:{"text-align":"left"}},RD={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},SD=t("td",{style:{"text-align":"center"}},null,-1),UD={style:{"text-align":"left"}},WD=t("code",null,"线段树",-1),XD=t("code",null,"队列",-1),FD=t("code",null,"数组",-1),GD=t("code",null,"4+",-1),TD={style:{"text-align":"left"}},QD=t("td",{style:{"text-align":"center"}},"1690",-1),ZD={style:{"text-align":"left"}},$D={href:"https://leetcode.com/problems/stone-game-vii",target:"_blank",rel:"noopener noreferrer"},tB=t("td",{style:{"text-align":"center"}},null,-1),eB={style:{"text-align":"left"}},lB=t("code",null,"数组",-1),oB=t("code",null,"数学",-1),nB=t("code",null,"动态规划",-1),sB=t("code",null,"1+",-1),dB={style:{"text-align":"left"}},_B=t("td",{style:{"text-align":"center"}},"1691",-1),iB={style:{"text-align":"left"}},aB={href:"https://leetcode.com/problems/maximum-height-by-stacking-cuboids",target:"_blank",rel:"noopener noreferrer"},rB=t("td",{style:{"text-align":"center"}},null,-1),cB={style:{"text-align":"left"}},hB=t("code",null,"数组",-1),uB=t("code",null,"动态规划",-1),fB=t("code",null,"排序",-1),gB={style:{"text-align":"left"}},mB=t("td",{style:{"text-align":"center"}},"1692",-1),yB={style:{"text-align":"left"}},xB={href:"https://leetcode.com/problems/count-ways-to-distribute-candies",target:"_blank",rel:"noopener noreferrer"},pB=t("td",{style:{"text-align":"center"}},null,-1),bB={style:{"text-align":"left"}},kB=t("code",null,"动态规划",-1),MB={style:{"text-align":"left"}},HB=t("td",{style:{"text-align":"center"}},"1696",-1),IB={style:{"text-align":"left"}},wB={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},vB=t("td",{style:{"text-align":"center"}},null,-1),qB={style:{"text-align":"left"}},zB=t("code",null,"队列",-1),CB=t("code",null,"数组",-1),OB=t("code",null,"动态规划",-1),jB=t("code",null,"2+",-1),LB={style:{"text-align":"left"}},EB=t("td",{style:{"text-align":"center"}},"1714",-1),PB={style:{"text-align":"left"}},KB={href:"https://leetcode.com/problems/sum-of-special-evenly-spaced-elements-in-array",target:"_blank",rel:"noopener noreferrer"},VB=t("td",{style:{"text-align":"center"}},null,-1),NB={style:{"text-align":"left"}},DB=t("code",null,"数组",-1),BB=t("code",null,"动态规划",-1),YB={style:{"text-align":"left"}},AB=t("td",{style:{"text-align":"center"}},"1723",-1),JB={style:{"text-align":"left"}},RB={href:"https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs",target:"_blank",rel:"noopener noreferrer"},SB=t("td",{style:{"text-align":"center"}},null,-1),UB={style:{"text-align":"left"}},WB=t("code",null,"位运算",-1),XB=t("code",null,"数组",-1),FB=t("code",null,"动态规划",-1),GB=t("code",null,"2+",-1),TB={style:{"text-align":"left"}},QB=t("td",{style:{"text-align":"center"}},"1728",-1),ZB={style:{"text-align":"left"}},$B={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},tY=t("td",{style:{"text-align":"center"}},null,-1),eY={style:{"text-align":"left"}},lY=t("code",null,"图",-1),oY=t("code",null,"拓扑排序",-1),nY=t("code",null,"记忆化搜索",-1),sY=t("code",null,"5+",-1),dY={style:{"text-align":"left"}},_Y=t("td",{style:{"text-align":"center"}},"1735",-1),iY={style:{"text-align":"left"}},aY={href:"https://leetcode.com/problems/count-ways-to-make-array-with-product",target:"_blank",rel:"noopener noreferrer"},rY=t("td",{style:{"text-align":"center"}},null,-1),cY={style:{"text-align":"left"}},hY=t("code",null,"数组",-1),uY=t("code",null,"数学",-1),fY=t("code",null,"动态规划",-1),gY=t("code",null,"2+",-1),mY={style:{"text-align":"left"}},yY=t("td",{style:{"text-align":"center"}},"1745",-1),xY={style:{"text-align":"left"}},pY={href:"https://leetcode.com/problems/palindrome-partitioning-iv",target:"_blank",rel:"noopener noreferrer"},bY=t("td",{style:{"text-align":"center"}},null,-1),kY={style:{"text-align":"left"}},MY=t("code",null,"字符串",-1),HY=t("code",null,"动态规划",-1),IY={style:{"text-align":"left"}},wY=t("td",{style:{"text-align":"center"}},"1746",-1),vY={style:{"text-align":"left"}},qY={href:"https://leetcode.com/problems/maximum-subarray-sum-after-one-operation",target:"_blank",rel:"noopener noreferrer"},zY=t("td",{style:{"text-align":"center"}},null,-1),CY={style:{"text-align":"left"}},OY=t("code",null,"数组",-1),jY=t("code",null,"动态规划",-1),LY={style:{"text-align":"left"}},EY=t("td",{style:{"text-align":"center"}},"1749",-1),PY={style:{"text-align":"left"}},KY={href:"https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray",target:"_blank",rel:"noopener noreferrer"},VY=t("td",{style:{"text-align":"center"}},null,-1),NY={style:{"text-align":"left"}},DY=t("code",null,"数组",-1),BY=t("code",null,"动态规划",-1),YY={style:{"text-align":"left"}},AY=t("td",{style:{"text-align":"center"}},"1751",-1),JY={style:{"text-align":"left"}},RY={href:"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii",target:"_blank",rel:"noopener noreferrer"},SY=t("td",{style:{"text-align":"center"}},null,-1),UY={style:{"text-align":"left"}},WY=t("code",null,"数组",-1),XY=t("code",null,"二分查找",-1),FY=t("code",null,"动态规划",-1),GY=t("code",null,"1+",-1),TY={style:{"text-align":"left"}},QY=t("td",{style:{"text-align":"center"}},"1755",-1),ZY={style:{"text-align":"left"}},$Y={href:"https://leetcode.com/problems/closest-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},tA=t("td",{style:{"text-align":"center"}},null,-1),eA={style:{"text-align":"left"}},lA=t("code",null,"位运算",-1),oA=t("code",null,"数组",-1),nA=t("code",null,"双指针",-1),sA=t("code",null,"2+",-1),dA={style:{"text-align":"left"}},_A=t("td",{style:{"text-align":"center"}},"1770",-1),iA={style:{"text-align":"left"}},aA={href:"https://leetcode.com/problems/maximum-score-from-performing-multiplication-operations",target:"_blank",rel:"noopener noreferrer"},rA=t("td",{style:{"text-align":"center"}},null,-1),cA={style:{"text-align":"left"}},hA=t("code",null,"数组",-1),uA=t("code",null,"动态规划",-1),fA={style:{"text-align":"left"}},gA=t("td",{style:{"text-align":"center"}},"1771",-1),mA={style:{"text-align":"left"}},yA={href:"https://leetcode.com/problems/maximize-palindrome-length-from-subsequences",target:"_blank",rel:"noopener noreferrer"},xA=t("td",{style:{"text-align":"center"}},null,-1),pA={style:{"text-align":"left"}},bA=t("code",null,"字符串",-1),kA=t("code",null,"动态规划",-1),MA={style:{"text-align":"left"}},HA=t("td",{style:{"text-align":"center"}},"1774",-1),IA={style:{"text-align":"left"}},wA={href:"https://leetcode.com/problems/closest-dessert-cost",target:"_blank",rel:"noopener noreferrer"},vA=t("td",{style:{"text-align":"center"}},null,-1),qA={style:{"text-align":"left"}},zA=t("code",null,"数组",-1),CA=t("code",null,"动态规划",-1),OA=t("code",null,"回溯",-1),jA={style:{"text-align":"left"}},LA=t("td",{style:{"text-align":"center"}},"1786",-1),EA={style:{"text-align":"left"}},PA={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},KA=t("td",{style:{"text-align":"center"}},null,-1),VA={style:{"text-align":"left"}},NA=t("code",null,"图",-1),DA=t("code",null,"拓扑排序",-1),BA=t("code",null,"动态规划",-1),YA=t("code",null,"2+",-1),AA={style:{"text-align":"left"}},JA=t("td",{style:{"text-align":"center"}},"1787",-1),RA={style:{"text-align":"left"}},SA={href:"https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero",target:"_blank",rel:"noopener noreferrer"},UA=t("td",{style:{"text-align":"center"}},null,-1),WA={style:{"text-align":"left"}},XA=t("code",null,"位运算",-1),FA=t("code",null,"数组",-1),GA=t("code",null,"动态规划",-1),TA={style:{"text-align":"left"}},QA=t("td",{style:{"text-align":"center"}},"1799",-1),ZA={style:{"text-align":"left"}},$A={href:"https://leetcode.com/problems/maximize-score-after-n-operations",target:"_blank",rel:"noopener noreferrer"},tJ=t("td",{style:{"text-align":"center"}},null,-1),eJ={style:{"text-align":"left"}},lJ=t("code",null,"位运算",-1),oJ=t("code",null,"数组",-1),nJ=t("code",null,"数学",-1),sJ=t("code",null,"4+",-1),dJ={style:{"text-align":"left"}},_J=t("td",{style:{"text-align":"center"}},"1815",-1),iJ={style:{"text-align":"left"}},aJ={href:"https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},rJ=t("td",{style:{"text-align":"center"}},null,-1),cJ={style:{"text-align":"left"}},hJ=t("code",null,"位运算",-1),uJ=t("code",null,"记忆化搜索",-1),fJ=t("code",null,"数组",-1),gJ=t("code",null,"2+",-1),mJ={style:{"text-align":"left"}},yJ=t("td",{style:{"text-align":"center"}},"1824",-1),xJ={style:{"text-align":"left"}},pJ={href:"https://leetcode.com/problems/minimum-sideway-jumps",target:"_blank",rel:"noopener noreferrer"},bJ=t("td",{style:{"text-align":"center"}},null,-1),kJ={style:{"text-align":"left"}},MJ=t("code",null,"贪心",-1),HJ=t("code",null,"数组",-1),IJ=t("code",null,"动态规划",-1),wJ={style:{"text-align":"left"}},vJ=t("td",{style:{"text-align":"center"}},"1857",-1),qJ={style:{"text-align":"left"}},zJ={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},CJ=t("td",{style:{"text-align":"center"}},null,-1),OJ={style:{"text-align":"left"}},jJ=t("code",null,"图",-1),LJ=t("code",null,"拓扑排序",-1),EJ=t("code",null,"记忆化搜索",-1),PJ=t("code",null,"3+",-1),KJ={style:{"text-align":"left"}},VJ=t("td",{style:{"text-align":"center"}},"1866",-1),NJ={style:{"text-align":"left"}},DJ={href:"https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible",target:"_blank",rel:"noopener noreferrer"},BJ=t("td",{style:{"text-align":"center"}},null,-1),YJ={style:{"text-align":"left"}},AJ=t("code",null,"数学",-1),JJ=t("code",null,"动态规划",-1),RJ=t("code",null,"组合数学",-1),SJ={style:{"text-align":"left"}},UJ=t("td",{style:{"text-align":"center"}},"1871",-1),WJ={style:{"text-align":"left"}},XJ={href:"https://leetcode.com/problems/jump-game-vii",target:"_blank",rel:"noopener noreferrer"},FJ=t("td",{style:{"text-align":"center"}},null,-1),GJ={style:{"text-align":"left"}},TJ=t("code",null,"字符串",-1),QJ=t("code",null,"动态规划",-1),ZJ=t("code",null,"前缀和",-1),$J=t("code",null,"1+",-1),tR={style:{"text-align":"left"}},eR=t("td",{style:{"text-align":"center"}},"1872",-1),lR={style:{"text-align":"left"}},oR={href:"https://leetcode.com/problems/stone-game-viii",target:"_blank",rel:"noopener noreferrer"},nR=t("td",{style:{"text-align":"center"}},null,-1),sR={style:{"text-align":"left"}},dR=t("code",null,"数组",-1),_R=t("code",null,"数学",-1),iR=t("code",null,"动态规划",-1),aR=t("code",null,"2+",-1),rR={style:{"text-align":"left"}},cR=t("td",{style:{"text-align":"center"}},"1879",-1),hR={style:{"text-align":"left"}},uR={href:"https://leetcode.com/problems/minimum-xor-sum-of-two-arrays",target:"_blank",rel:"noopener noreferrer"},fR=t("td",{style:{"text-align":"center"}},null,-1),gR={style:{"text-align":"left"}},mR=t("code",null,"位运算",-1),yR=t("code",null,"数组",-1),xR=t("code",null,"动态规划",-1),pR=t("code",null,"1+",-1),bR={style:{"text-align":"left"}},kR=t("td",{style:{"text-align":"center"}},"1883",-1),MR={style:{"text-align":"left"}},HR={href:"https://leetcode.com/problems/minimum-skips-to-arrive-at-meeting-on-time",target:"_blank",rel:"noopener noreferrer"},IR=t("td",{style:{"text-align":"center"}},null,-1),wR={style:{"text-align":"left"}},vR=t("code",null,"数组",-1),qR=t("code",null,"动态规划",-1),zR={style:{"text-align":"left"}},CR=t("td",{style:{"text-align":"center"}},"1884",-1),OR={style:{"text-align":"left"}},jR={href:"https://leetcode.com/problems/egg-drop-with-2-eggs-and-n-floors",target:"_blank",rel:"noopener noreferrer"},LR=t("td",{style:{"text-align":"center"}},null,-1),ER={style:{"text-align":"left"}},PR=t("code",null,"数学",-1),KR=t("code",null,"动态规划",-1),VR={style:{"text-align":"left"}},NR=t("td",{style:{"text-align":"center"}},"1888",-1),DR={style:{"text-align":"left"}},BR={href:"https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating",target:"_blank",rel:"noopener noreferrer"},YR=t("td",{style:{"text-align":"center"}},null,-1),AR={style:{"text-align":"left"}},JR=t("code",null,"贪心",-1),RR=t("code",null,"字符串",-1),SR=t("code",null,"动态规划",-1),UR=t("code",null,"1+",-1),WR={style:{"text-align":"left"}},XR=t("td",{style:{"text-align":"center"}},"1896",-1),FR={style:{"text-align":"left"}},GR={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},TR=t("td",{style:{"text-align":"center"}},null,-1),QR={style:{"text-align":"left"}},ZR=t("code",null,"栈",-1),$R=t("code",null,"数学",-1),tS=t("code",null,"字符串",-1),eS=t("code",null,"1+",-1),lS={style:{"text-align":"left"}},oS=t("td",{style:{"text-align":"center"}},"1900",-1),nS={style:{"text-align":"left"}},sS={href:"https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},dS=t("td",{style:{"text-align":"center"}},null,-1),_S={style:{"text-align":"left"}},iS=t("code",null,"记忆化搜索",-1),aS=t("code",null,"动态规划",-1),rS={style:{"text-align":"left"}},cS=t("td",{style:{"text-align":"center"}},"1908",-1),hS={style:{"text-align":"left"}},uS={href:"https://leetcode.com/problems/game-of-nim",target:"_blank",rel:"noopener noreferrer"},fS=t("td",{style:{"text-align":"center"}},null,-1),gS={style:{"text-align":"left"}},mS=t("code",null,"位运算",-1),yS=t("code",null,"脑筋急转弯",-1),xS=t("code",null,"数组",-1),pS=t("code",null,"3+",-1),bS={style:{"text-align":"left"}},kS=t("td",{style:{"text-align":"center"}},"1911",-1),MS={style:{"text-align":"left"}},HS={href:"https://leetcode.com/problems/maximum-alternating-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},IS=t("td",{style:{"text-align":"center"}},null,-1),wS={style:{"text-align":"left"}},vS=t("code",null,"数组",-1),qS=t("code",null,"动态规划",-1),zS={style:{"text-align":"left"}},CS=t("td",{style:{"text-align":"center"}},"1916",-1),OS={style:{"text-align":"left"}},jS={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},LS=t("td",{style:{"text-align":"center"}},null,-1),ES={style:{"text-align":"left"}},PS=t("code",null,"树",-1),KS=t("code",null,"图",-1),VS=t("code",null,"拓扑排序",-1),NS=t("code",null,"3+",-1),DS={style:{"text-align":"left"}},BS=t("td",{style:{"text-align":"center"}},"1928",-1),YS={style:{"text-align":"left"}},AS={href:"https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time",target:"_blank",rel:"noopener noreferrer"},JS=t("td",{style:{"text-align":"center"}},null,-1),RS={style:{"text-align":"left"}},SS=t("code",null,"图",-1),US=t("code",null,"数组",-1),WS=t("code",null,"动态规划",-1),XS={style:{"text-align":"left"}},FS=t("td",{style:{"text-align":"center"}},"1931",-1),GS={style:{"text-align":"left"}},TS={href:"https://leetcode.com/problems/painting-a-grid-with-three-different-colors",target:"_blank",rel:"noopener noreferrer"},QS=t("td",{style:{"text-align":"center"}},null,-1),ZS={style:{"text-align":"left"}},$S=t("code",null,"动态规划",-1),tU={style:{"text-align":"left"}},eU=t("td",{style:{"text-align":"center"}},"1937",-1),lU={style:{"text-align":"left"}},oU={href:"https://leetcode.com/problems/maximum-number-of-points-with-cost",target:"_blank",rel:"noopener noreferrer"},nU=t("td",{style:{"text-align":"center"}},null,-1),sU={style:{"text-align":"left"}},dU=t("code",null,"数组",-1),_U=t("code",null,"动态规划",-1),iU=t("code",null,"矩阵",-1),aU={style:{"text-align":"left"}},rU=t("td",{style:{"text-align":"center"}},"1947",-1),cU={style:{"text-align":"left"}},hU={href:"https://leetcode.com/problems/maximum-compatibility-score-sum",target:"_blank",rel:"noopener noreferrer"},uU=t("td",{style:{"text-align":"center"}},null,-1),fU={style:{"text-align":"left"}},gU=t("code",null,"位运算",-1),mU=t("code",null,"数组",-1),yU=t("code",null,"动态规划",-1),xU=t("code",null,"2+",-1),pU={style:{"text-align":"left"}},bU=t("td",{style:{"text-align":"center"}},"1955",-1),kU={style:{"text-align":"left"}},MU={href:"https://leetcode.com/problems/count-number-of-special-subsequences",target:"_blank",rel:"noopener noreferrer"},HU=t("td",{style:{"text-align":"center"}},null,-1),IU={style:{"text-align":"left"}},wU=t("code",null,"数组",-1),vU=t("code",null,"动态规划",-1),qU={style:{"text-align":"left"}},zU=t("td",{style:{"text-align":"center"}},"1959",-1),CU={style:{"text-align":"left"}},OU={href:"https://leetcode.com/problems/minimum-total-space-wasted-with-k-resizing-operations",target:"_blank",rel:"noopener noreferrer"},jU=t("td",{style:{"text-align":"center"}},null,-1),LU={style:{"text-align":"left"}},EU=t("code",null,"数组",-1),PU=t("code",null,"动态规划",-1),KU={style:{"text-align":"left"}},VU=t("td",{style:{"text-align":"center"}},"1976",-1),NU={style:{"text-align":"left"}},DU={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},BU=t("td",{style:{"text-align":"center"}},null,-1),YU={style:{"text-align":"left"}},AU=t("code",null,"图",-1),JU=t("code",null,"拓扑排序",-1),RU=t("code",null,"动态规划",-1),SU=t("code",null,"1+",-1),UU={style:{"text-align":"left"}},WU=t("td",{style:{"text-align":"center"}},"1977",-1),XU={style:{"text-align":"left"}},FU={href:"https://leetcode.com/problems/number-of-ways-to-separate-numbers",target:"_blank",rel:"noopener noreferrer"},GU=t("td",{style:{"text-align":"center"}},null,-1),TU={style:{"text-align":"left"}},QU=t("code",null,"字符串",-1),ZU=t("code",null,"动态规划",-1),$U=t("code",null,"后缀数组",-1),tW={style:{"text-align":"left"}},eW=t("td",{style:{"text-align":"center"}},"1981",-1),lW={style:{"text-align":"left"}},oW={href:"https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements",target:"_blank",rel:"noopener noreferrer"},nW=t("td",{style:{"text-align":"center"}},null,-1),sW={style:{"text-align":"left"}},dW=t("code",null,"数组",-1),_W=t("code",null,"动态规划",-1),iW=t("code",null,"矩阵",-1),aW={style:{"text-align":"left"}},rW=t("td",{style:{"text-align":"center"}},"1986",-1),cW={style:{"text-align":"left"}},hW={href:"https://leetcode.com/problems/minimum-number-of-work-sessions-to-finish-the-tasks",target:"_blank",rel:"noopener noreferrer"},uW=t("td",{style:{"text-align":"center"}},null,-1),fW={style:{"text-align":"left"}},gW=t("code",null,"位运算",-1),mW=t("code",null,"数组",-1),yW=t("code",null,"动态规划",-1),xW=t("code",null,"2+",-1),pW={style:{"text-align":"left"}},bW=t("td",{style:{"text-align":"center"}},"1987",-1),kW={style:{"text-align":"left"}},MW={href:"https://leetcode.com/problems/number-of-unique-good-subsequences",target:"_blank",rel:"noopener noreferrer"},HW=t("td",{style:{"text-align":"center"}},null,-1),IW={style:{"text-align":"left"}},wW=t("code",null,"字符串",-1),vW=t("code",null,"动态规划",-1),qW={style:{"text-align":"left"}},zW=t("td",{style:{"text-align":"center"}},"1994",-1),CW={style:{"text-align":"left"}},OW={href:"https://leetcode.com/problems/the-number-of-good-subsets",target:"_blank",rel:"noopener noreferrer"},jW=t("td",{style:{"text-align":"center"}},null,-1),LW={style:{"text-align":"left"}},EW=t("code",null,"位运算",-1),PW=t("code",null,"数组",-1),KW=t("code",null,"数学",-1),VW=t("code",null,"2+",-1),NW={style:{"text-align":"left"}},DW=t("td",{style:{"text-align":"center"}},"1997",-1),BW={style:{"text-align":"left"}},YW={href:"https://leetcode.com/problems/first-day-where-you-have-been-in-all-the-rooms",target:"_blank",rel:"noopener noreferrer"},AW=t("td",{style:{"text-align":"center"}},null,-1),JW={style:{"text-align":"left"}},RW=t("code",null,"数组",-1),SW=t("code",null,"动态规划",-1),UW={style:{"text-align":"left"}},WW=t("td",{style:{"text-align":"center"}},"2002",-1),XW={style:{"text-align":"left"}},FW={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},GW=t("td",{style:{"text-align":"center"}},null,-1),TW={style:{"text-align":"left"}},QW=t("code",null,"位运算",-1),ZW=t("code",null,"字符串",-1),$W=t("code",null,"动态规划",-1),tX=t("code",null,"2+",-1),eX={style:{"text-align":"left"}},lX=t("td",{style:{"text-align":"center"}},"2003",-1),oX={style:{"text-align":"left"}},nX={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},sX=t("td",{style:{"text-align":"center"}},null,-1),dX={style:{"text-align":"left"}},_X=t("code",null,"树",-1),iX=t("code",null,"深度优先搜索",-1),aX=t("code",null,"并查集",-1),rX=t("code",null,"1+",-1),cX={style:{"text-align":"left"}},hX=t("td",{style:{"text-align":"center"}},"2005",-1),uX={style:{"text-align":"left"}},fX={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},gX=t("td",{style:{"text-align":"center"}},null,-1),mX={style:{"text-align":"left"}},yX=t("code",null,"树",-1),xX=t("code",null,"数学",-1),pX=t("code",null,"动态规划",-1),bX=t("code",null,"2+",-1),kX={style:{"text-align":"left"}},MX=t("td",{style:{"text-align":"center"}},"2008",-1),HX={style:{"text-align":"left"}},IX={href:"https://leetcode.com/problems/maximum-earnings-from-taxi",target:"_blank",rel:"noopener noreferrer"},wX=t("td",{style:{"text-align":"center"}},null,-1),vX={style:{"text-align":"left"}},qX=t("code",null,"数组",-1),zX=t("code",null,"哈希表",-1),CX=t("code",null,"二分查找",-1),OX=t("code",null,"2+",-1),jX={style:{"text-align":"left"}},LX=t("td",{style:{"text-align":"center"}},"2019",-1),EX={style:{"text-align":"left"}},PX={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},KX=t("td",{style:{"text-align":"center"}},null,-1),VX={style:{"text-align":"left"}},NX=t("code",null,"栈",-1),DX=t("code",null,"记忆化搜索",-1),BX=t("code",null,"数组",-1),YX=t("code",null,"3+",-1),AX={style:{"text-align":"left"}},JX=t("td",{style:{"text-align":"center"}},"2035",-1),RX={style:{"text-align":"left"}},SX={href:"https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference",target:"_blank",rel:"noopener noreferrer"},UX=t("td",{style:{"text-align":"center"}},null,-1),WX={style:{"text-align":"left"}},XX=t("code",null,"位运算",-1),FX=t("code",null,"数组",-1),GX=t("code",null,"双指针",-1),TX=t("code",null,"4+",-1),QX={style:{"text-align":"left"}},ZX=t("td",{style:{"text-align":"center"}},"2036",-1),$X={style:{"text-align":"left"}},tF={href:"https://leetcode.com/problems/maximum-alternating-subarray-sum",target:"_blank",rel:"noopener noreferrer"},eF=t("td",{style:{"text-align":"center"}},null,-1),lF={style:{"text-align":"left"}},oF=t("code",null,"数组",-1),nF=t("code",null,"动态规划",-1),sF={style:{"text-align":"left"}},dF=t("td",{style:{"text-align":"center"}},"2050",-1),_F={style:{"text-align":"left"}},iF={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},aF=t("td",{style:{"text-align":"center"}},null,-1),rF={style:{"text-align":"left"}},cF=t("code",null,"图",-1),hF=t("code",null,"拓扑排序",-1),uF=t("code",null,"数组",-1),fF=t("code",null,"1+",-1),gF={style:{"text-align":"left"}},mF=t("td",{style:{"text-align":"center"}},"2052",-1),yF={style:{"text-align":"left"}},xF={href:"https://leetcode.com/problems/minimum-cost-to-separate-sentence-into-rows",target:"_blank",rel:"noopener noreferrer"},pF=t("td",{style:{"text-align":"center"}},null,-1),bF={style:{"text-align":"left"}},kF=t("code",null,"数组",-1),MF=t("code",null,"动态规划",-1),HF={style:{"text-align":"left"}},IF=t("td",{style:{"text-align":"center"}},"2054",-1),wF={style:{"text-align":"left"}},vF={href:"https://leetcode.com/problems/two-best-non-overlapping-events",target:"_blank",rel:"noopener noreferrer"},qF=t("td",{style:{"text-align":"center"}},null,-1),zF={style:{"text-align":"left"}},CF=t("code",null,"数组",-1),OF=t("code",null,"二分查找",-1),jF=t("code",null,"动态规划",-1),LF=t("code",null,"2+",-1),EF={style:{"text-align":"left"}},PF=t("td",{style:{"text-align":"center"}},"2060",-1),KF={style:{"text-align":"left"}},VF={href:"https://leetcode.com/problems/check-if-an-original-string-exists-given-two-encoded-strings",target:"_blank",rel:"noopener noreferrer"},NF=t("td",{style:{"text-align":"center"}},null,-1),DF={style:{"text-align":"left"}},BF=t("code",null,"字符串",-1),YF=t("code",null,"动态规划",-1),AF={style:{"text-align":"left"}},JF=t("td",{style:{"text-align":"center"}},"2063",-1),RF={style:{"text-align":"left"}},SF={href:"https://leetcode.com/problems/vowels-of-all-substrings",target:"_blank",rel:"noopener noreferrer"},UF=t("td",{style:{"text-align":"center"}},null,-1),WF={style:{"text-align":"left"}},XF=t("code",null,"数学",-1),FF=t("code",null,"字符串",-1),GF=t("code",null,"动态规划",-1),TF=t("code",null,"1+",-1),QF={style:{"text-align":"left"}},ZF=t("td",{style:{"text-align":"center"}},"2086",-1),$F={style:{"text-align":"left"}},tG={href:"https://leetcode.com/problems/minimum-number-of-food-buckets-to-feed-the-hamsters",target:"_blank",rel:"noopener noreferrer"},eG=t("td",{style:{"text-align":"center"}},null,-1),lG={style:{"text-align":"left"}},oG=t("code",null,"贪心",-1),nG=t("code",null,"字符串",-1),sG=t("code",null,"动态规划",-1),dG={style:{"text-align":"left"}},_G=t("td",{style:{"text-align":"center"}},"2088",-1),iG={style:{"text-align":"left"}},aG={href:"https://leetcode.com/problems/count-fertile-pyramids-in-a-land",target:"_blank",rel:"noopener noreferrer"},rG=t("td",{style:{"text-align":"center"}},null,-1),cG={style:{"text-align":"left"}},hG=t("code",null,"数组",-1),uG=t("code",null,"动态规划",-1),fG=t("code",null,"矩阵",-1),gG={style:{"text-align":"left"}},mG=t("td",{style:{"text-align":"center"}},"2100",-1),yG={style:{"text-align":"left"}},xG={href:"https://leetcode.com/problems/find-good-days-to-rob-the-bank",target:"_blank",rel:"noopener noreferrer"},pG=t("td",{style:{"text-align":"center"}},null,-1),bG={style:{"text-align":"left"}},kG=t("code",null,"数组",-1),MG=t("code",null,"动态规划",-1),HG=t("code",null,"前缀和",-1),IG={style:{"text-align":"left"}},wG=t("td",{style:{"text-align":"center"}},"2110",-1),vG={style:{"text-align":"left"}},qG={href:"https://leetcode.com/problems/number-of-smooth-descent-periods-of-a-stock",target:"_blank",rel:"noopener noreferrer"},zG=t("td",{style:{"text-align":"center"}},null,-1),CG={style:{"text-align":"left"}},OG=t("code",null,"数组",-1),jG=t("code",null,"数学",-1),LG=t("code",null,"动态规划",-1),EG={style:{"text-align":"left"}},PG=t("td",{style:{"text-align":"center"}},"2140",-1),KG={style:{"text-align":"left"}},VG={href:"https://leetcode.com/problems/solving-questions-with-brainpower",target:"_blank",rel:"noopener noreferrer"},NG=t("td",{style:{"text-align":"center"}},null,-1),DG={style:{"text-align":"left"}},BG=t("code",null,"数组",-1),YG=t("code",null,"动态规划",-1),AG={style:{"text-align":"left"}},JG=t("td",{style:{"text-align":"center"}},"2143",-1),RG={style:{"text-align":"left"}},SG={href:"https://leetcode.com/problems/choose-numbers-from-two-arrays-in-range",target:"_blank",rel:"noopener noreferrer"},UG=t("td",{style:{"text-align":"center"}},null,-1),WG={style:{"text-align":"left"}},XG=t("code",null,"数组",-1),FG=t("code",null,"动态规划",-1),GG={style:{"text-align":"left"}},TG=t("td",{style:{"text-align":"center"}},"2147",-1),QG={style:{"text-align":"left"}},ZG={href:"https://leetcode.com/problems/number-of-ways-to-divide-a-long-corridor",target:"_blank",rel:"noopener noreferrer"},$G=t("td",{style:{"text-align":"center"}},null,-1),tT={style:{"text-align":"left"}},eT=t("code",null,"数学",-1),lT=t("code",null,"字符串",-1),oT=t("code",null,"动态规划",-1),nT={style:{"text-align":"left"}},sT=t("td",{style:{"text-align":"center"}},"2152",-1),dT={style:{"text-align":"left"}},_T={href:"https://leetcode.com/problems/minimum-number-of-lines-to-cover-points",target:"_blank",rel:"noopener noreferrer"},iT=t("td",{style:{"text-align":"center"}},null,-1),aT={style:{"text-align":"left"}},rT=t("code",null,"位运算",-1),cT=t("code",null,"几何",-1),hT=t("code",null,"数组",-1),uT=t("code",null,"5+",-1),fT={style:{"text-align":"left"}},gT=t("td",{style:{"text-align":"center"}},"2163",-1),mT={style:{"text-align":"left"}},yT={href:"https://leetcode.com/problems/minimum-difference-in-sums-after-removal-of-elements",target:"_blank",rel:"noopener noreferrer"},xT=t("td",{style:{"text-align":"center"}},null,-1),pT={style:{"text-align":"left"}},bT=t("code",null,"数组",-1),kT=t("code",null,"动态规划",-1),MT=t("code",null,"堆（优先队列）",-1),HT={style:{"text-align":"left"}},IT=t("td",{style:{"text-align":"center"}},"2167",-1),wT={style:{"text-align":"left"}},vT={href:"https://leetcode.com/problems/minimum-time-to-remove-all-cars-containing-illegal-goods",target:"_blank",rel:"noopener noreferrer"},qT=t("td",{style:{"text-align":"center"}},null,-1),zT={style:{"text-align":"left"}},CT=t("code",null,"字符串",-1),OT=t("code",null,"动态规划",-1),jT={style:{"text-align":"left"}},LT=t("td",{style:{"text-align":"center"}},"2172",-1),ET={style:{"text-align":"left"}},PT={href:"https://leetcode.com/problems/maximum-and-sum-of-array",target:"_blank",rel:"noopener noreferrer"},KT=t("td",{style:{"text-align":"center"}},null,-1),VT={style:{"text-align":"left"}},NT=t("code",null,"位运算",-1),DT=t("code",null,"数组",-1),BT=t("code",null,"动态规划",-1),YT=t("code",null,"1+",-1),AT={style:{"text-align":"left"}},JT=t("td",{style:{"text-align":"center"}},"2184",-1),RT={style:{"text-align":"left"}},ST={href:"https://leetcode.com/problems/number-of-ways-to-build-sturdy-brick-wall",target:"_blank",rel:"noopener noreferrer"},UT=t("td",{style:{"text-align":"center"}},null,-1),WT={style:{"text-align":"left"}},XT=t("code",null,"位运算",-1),FT=t("code",null,"数组",-1),GT=t("code",null,"动态规划",-1),TT=t("code",null,"1+",-1),QT={style:{"text-align":"left"}},ZT=t("td",{style:{"text-align":"center"}},"2188",-1),$T={style:{"text-align":"left"}},tQ={href:"https://leetcode.com/problems/minimum-time-to-finish-the-race",target:"_blank",rel:"noopener noreferrer"},eQ=t("td",{style:{"text-align":"center"}},null,-1),lQ={style:{"text-align":"left"}},oQ=t("code",null,"数组",-1),nQ=t("code",null,"动态规划",-1),sQ={style:{"text-align":"left"}},dQ=t("td",{style:{"text-align":"center"}},"2189",-1),_Q={style:{"text-align":"left"}},iQ={href:"https://leetcode.com/problems/number-of-ways-to-build-house-of-cards",target:"_blank",rel:"noopener noreferrer"},aQ=t("td",{style:{"text-align":"center"}},null,-1),rQ={style:{"text-align":"left"}},cQ=t("code",null,"数学",-1),hQ=t("code",null,"动态规划",-1),uQ={style:{"text-align":"left"}},fQ=t("td",{style:{"text-align":"center"}},"2209",-1),gQ={style:{"text-align":"left"}},mQ={href:"https://leetcode.com/problems/minimum-white-tiles-after-covering-with-carpets",target:"_blank",rel:"noopener noreferrer"},yQ=t("td",{style:{"text-align":"center"}},null,-1),xQ={style:{"text-align":"left"}},pQ=t("code",null,"字符串",-1),bQ=t("code",null,"动态规划",-1),kQ=t("code",null,"前缀和",-1),MQ={style:{"text-align":"left"}},HQ=t("td",{style:{"text-align":"center"}},"2218",-1),IQ={style:{"text-align":"left"}},wQ={href:"https://leetcode.com/problems/maximum-value-of-k-coins-from-piles",target:"_blank",rel:"noopener noreferrer"},vQ=t("td",{style:{"text-align":"center"}},null,-1),qQ={style:{"text-align":"left"}},zQ=t("code",null,"数组",-1),CQ=t("code",null,"动态规划",-1),OQ=t("code",null,"前缀和",-1),jQ={style:{"text-align":"left"}},LQ=t("td",{style:{"text-align":"center"}},"2222",-1),EQ={style:{"text-align":"left"}},PQ={href:"https://leetcode.com/problems/number-of-ways-to-select-buildings",target:"_blank",rel:"noopener noreferrer"},KQ=t("td",{style:{"text-align":"center"}},null,-1),VQ={style:{"text-align":"left"}},NQ=t("code",null,"字符串",-1),DQ=t("code",null,"动态规划",-1),BQ=t("code",null,"前缀和",-1),YQ={style:{"text-align":"left"}},AQ=t("td",{style:{"text-align":"center"}},"2247",-1),JQ={style:{"text-align":"left"}},RQ={href:"https://leetcode.com/problems/maximum-cost-of-trip-with-k-highways",target:"_blank",rel:"noopener noreferrer"},SQ=t("td",{style:{"text-align":"center"}},null,-1),UQ={style:{"text-align":"left"}},WQ=t("code",null,"位运算",-1),XQ=t("code",null,"图",-1),FQ=t("code",null,"动态规划",-1),GQ=t("code",null,"1+",-1),TQ={style:{"text-align":"left"}},QQ=t("td",{style:{"text-align":"center"}},"2262",-1),ZQ={style:{"text-align":"left"}},$Q={href:"https://leetcode.com/problems/total-appeal-of-a-string",target:"_blank",rel:"noopener noreferrer"},tZ={style:{"text-align":"center"}},eZ={href:"/problem/2262",target:"_blank",rel:"noopener noreferrer"},lZ={style:{"text-align":"left"}},oZ=t("code",null,"哈希表",-1),nZ=t("code",null,"字符串",-1),sZ=t("code",null,"动态规划",-1),dZ={style:{"text-align":"left"}},_Z=t("td",{style:{"text-align":"center"}},"2263",-1),iZ={style:{"text-align":"left"}},aZ={href:"https://leetcode.com/problems/make-array-non-decreasing-or-non-increasing",target:"_blank",rel:"noopener noreferrer"},rZ=t("td",{style:{"text-align":"center"}},null,-1),cZ={style:{"text-align":"left"}},hZ=t("code",null,"贪心",-1),uZ=t("code",null,"动态规划",-1),fZ={style:{"text-align":"left"}},gZ=t("td",{style:{"text-align":"center"}},"2266",-1),mZ={style:{"text-align":"left"}},yZ={href:"https://leetcode.com/problems/count-number-of-texts",target:"_blank",rel:"noopener noreferrer"},xZ=t("td",{style:{"text-align":"center"}},null,-1),pZ={style:{"text-align":"left"}},bZ=t("code",null,"哈希表",-1),kZ=t("code",null,"数学",-1),MZ=t("code",null,"字符串",-1),HZ=t("code",null,"1+",-1),IZ={style:{"text-align":"left"}},wZ=t("td",{style:{"text-align":"center"}},"2267",-1),vZ={style:{"text-align":"left"}},qZ={href:"https://leetcode.com/problems/check-if-there-is-a-valid-parentheses-string-path",target:"_blank",rel:"noopener noreferrer"},zZ=t("td",{style:{"text-align":"center"}},null,-1),CZ={style:{"text-align":"left"}},OZ=t("code",null,"数组",-1),jZ=t("code",null,"动态规划",-1),LZ=t("code",null,"矩阵",-1),EZ={style:{"text-align":"left"}},PZ=t("td",{style:{"text-align":"center"}},"2272",-1),KZ={style:{"text-align":"left"}},VZ={href:"https://leetcode.com/problems/substring-with-largest-variance",target:"_blank",rel:"noopener noreferrer"},NZ=t("td",{style:{"text-align":"center"}},null,-1),DZ={style:{"text-align":"left"}},BZ=t("code",null,"数组",-1),YZ=t("code",null,"动态规划",-1),AZ={style:{"text-align":"left"}},JZ=t("td",{style:{"text-align":"center"}},"2291",-1),RZ={style:{"text-align":"left"}},SZ={href:"https://leetcode.com/problems/maximum-profit-from-trading-stocks",target:"_blank",rel:"noopener noreferrer"},UZ=t("td",{style:{"text-align":"center"}},null,-1),WZ={style:{"text-align":"left"}},XZ=t("code",null,"数组",-1),FZ=t("code",null,"动态规划",-1),GZ={style:{"text-align":"left"}},TZ=t("td",{style:{"text-align":"center"}},"2297",-1),QZ={style:{"text-align":"left"}},ZZ={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},$Z=t("td",{style:{"text-align":"center"}},null,-1),t$={style:{"text-align":"left"}},e$=t("code",null,"栈",-1),l$=t("code",null,"图",-1),o$=t("code",null,"数组",-1),n$=t("code",null,"3+",-1),s$={style:{"text-align":"left"}},d$=t("td",{style:{"text-align":"center"}},"2304",-1),_$={style:{"text-align":"left"}},i$={href:"https://leetcode.com/problems/minimum-path-cost-in-a-grid",target:"_blank",rel:"noopener noreferrer"},a$=t("td",{style:{"text-align":"center"}},null,-1),r$={style:{"text-align":"left"}},c$=t("code",null,"数组",-1),h$=t("code",null,"动态规划",-1),u$=t("code",null,"矩阵",-1),f$={style:{"text-align":"left"}},g$=t("td",{style:{"text-align":"center"}},"2305",-1),m$={style:{"text-align":"left"}},y$={href:"https://leetcode.com/problems/fair-distribution-of-cookies",target:"_blank",rel:"noopener noreferrer"},x$=t("td",{style:{"text-align":"center"}},null,-1),p$={style:{"text-align":"left"}},b$=t("code",null,"位运算",-1),k$=t("code",null,"数组",-1),M$=t("code",null,"动态规划",-1),H$=t("code",null,"2+",-1),I$={style:{"text-align":"left"}},w$=t("td",{style:{"text-align":"center"}},"2310",-1),v$={style:{"text-align":"left"}},q$={href:"https://leetcode.com/problems/sum-of-numbers-with-units-digit-k",target:"_blank",rel:"noopener noreferrer"},z$=t("td",{style:{"text-align":"center"}},null,-1),C$={style:{"text-align":"left"}},O$=t("code",null,"贪心",-1),j$=t("code",null,"数学",-1),L$=t("code",null,"动态规划",-1),E$=t("code",null,"1+",-1),P$={style:{"text-align":"left"}},K$=t("td",{style:{"text-align":"center"}},"2311",-1),V$={style:{"text-align":"left"}},N$={href:"https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},D$=t("td",{style:{"text-align":"center"}},null,-1),B$={style:{"text-align":"left"}},Y$=t("code",null,"贪心",-1),A$=t("code",null,"记忆化搜索",-1),J$=t("code",null,"字符串",-1),R$=t("code",null,"1+",-1),S$={style:{"text-align":"left"}},U$=t("td",{style:{"text-align":"center"}},"2312",-1),W$={style:{"text-align":"left"}},X$={href:"https://leetcode.com/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},F$=t("td",{style:{"text-align":"center"}},null,-1),G$={style:{"text-align":"left"}},T$=t("code",null,"记忆化搜索",-1),Q$=t("code",null,"数组",-1),Z$=t("code",null,"动态规划",-1),$$={style:{"text-align":"left"}},ttt=t("td",{style:{"text-align":"center"}},"2313",-1),ett={style:{"text-align":"left"}},ltt={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},ott=t("td",{style:{"text-align":"center"}},null,-1),ntt={style:{"text-align":"left"}},stt=t("code",null,"树",-1),dtt=t("code",null,"深度优先搜索",-1),_tt=t("code",null,"动态规划",-1),itt=t("code",null,"1+",-1),att={style:{"text-align":"left"}},rtt=t("td",{style:{"text-align":"center"}},"2318",-1),ctt={style:{"text-align":"left"}},htt={href:"https://leetcode.com/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},utt=t("td",{style:{"text-align":"center"}},null,-1),ftt={style:{"text-align":"left"}},gtt=t("code",null,"记忆化搜索",-1),mtt=t("code",null,"动态规划",-1),ytt={style:{"text-align":"left"}},xtt=t("td",{style:{"text-align":"center"}},"2320",-1),ptt={style:{"text-align":"left"}},btt={href:"https://leetcode.com/problems/count-number-of-ways-to-place-houses",target:"_blank",rel:"noopener noreferrer"},ktt=t("td",{style:{"text-align":"center"}},null,-1),Mtt={style:{"text-align":"left"}},Htt=t("code",null,"动态规划",-1),Itt={style:{"text-align":"left"}},wtt=t("td",{style:{"text-align":"center"}},"2321",-1),vtt={style:{"text-align":"left"}},qtt={href:"https://leetcode.com/problems/maximum-score-of-spliced-array",target:"_blank",rel:"noopener noreferrer"},ztt=t("td",{style:{"text-align":"center"}},null,-1),Ctt={style:{"text-align":"left"}},Ott=t("code",null,"数组",-1),jtt=t("code",null,"动态规划",-1),Ltt={style:{"text-align":"left"}},Ett=t("td",{style:{"text-align":"center"}},"2327",-1),Ptt={style:{"text-align":"left"}},Ktt={href:"https://leetcode.com/problems/number-of-people-aware-of-a-secret",target:"_blank",rel:"noopener noreferrer"},Vtt=t("td",{style:{"text-align":"center"}},null,-1),Ntt={style:{"text-align":"left"}},Dtt=t("code",null,"队列",-1),Btt=t("code",null,"动态规划",-1),Ytt=t("code",null,"模拟",-1),Att={style:{"text-align":"left"}},Jtt=t("td",{style:{"text-align":"center"}},"2328",-1),Rtt={style:{"text-align":"left"}},Stt={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Utt=t("td",{style:{"text-align":"center"}},null,-1),Wtt={style:{"text-align":"left"}},Xtt=t("code",null,"深度优先搜索",-1),Ftt=t("code",null,"广度优先搜索",-1),Gtt=t("code",null,"图",-1),Ttt=t("code",null,"5+",-1),Qtt={style:{"text-align":"left"}},Ztt=t("td",{style:{"text-align":"center"}},"2338",-1),$tt={style:{"text-align":"left"}},tet={href:"https://leetcode.com/problems/count-the-number-of-ideal-arrays",target:"_blank",rel:"noopener noreferrer"},eet=t("td",{style:{"text-align":"center"}},null,-1),oet={style:{"text-align":"left"}},net=t("code",null,"数学",-1),set=t("code",null,"动态规划",-1),det=t("code",null,"组合数学",-1),_et=t("code",null,"1+",-1),iet={style:{"text-align":"left"}},aet=t("td",{style:{"text-align":"center"}},"2355",-1),ret={style:{"text-align":"left"}},cet={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},het=t("td",{style:{"text-align":"center"}},null,-1),uet={style:{"text-align":"left"}},fet=t("code",null,"栈",-1),get=t("code",null,"数组",-1),met=t("code",null,"动态规划",-1),yet=t("code",null,"1+",-1),xet={style:{"text-align":"left"}},pet=t("td",{style:{"text-align":"center"}},"2361",-1),bet={style:{"text-align":"left"}},ket={href:"https://leetcode.com/problems/minimum-costs-using-the-train-line",target:"_blank",rel:"noopener noreferrer"},Met=t("td",{style:{"text-align":"center"}},null,-1),Het={style:{"text-align":"left"}},Iet=t("code",null,"数组",-1),wet=t("code",null,"动态规划",-1),vet={style:{"text-align":"left"}},qet=t("td",{style:{"text-align":"center"}},"2369",-1),zet={style:{"text-align":"left"}},Cet={href:"https://leetcode.com/problems/check-if-there-is-a-valid-partition-for-the-array",target:"_blank",rel:"noopener noreferrer"},Oet=t("td",{style:{"text-align":"center"}},null,-1),jet={style:{"text-align":"left"}},Let=t("code",null,"数组",-1),Eet=t("code",null,"动态规划",-1),Pet={style:{"text-align":"left"}},Ket=t("td",{style:{"text-align":"center"}},"2370",-1),Vet={style:{"text-align":"left"}},Net={href:"https://leetcode.com/problems/longest-ideal-subsequence",target:"_blank",rel:"noopener noreferrer"},Det=t("td",{style:{"text-align":"center"}},null,-1),Bet={style:{"text-align":"left"}},Yet=t("code",null,"哈希表",-1),Aet=t("code",null,"字符串",-1),Jet=t("code",null,"动态规划",-1),Ret={style:{"text-align":"left"}},Set=t("td",{style:{"text-align":"center"}},"2376",-1),Uet={style:{"text-align":"left"}},Wet={href:"https://leetcode.com/problems/count-special-integers",target:"_blank",rel:"noopener noreferrer"},Xet=t("td",{style:{"text-align":"center"}},null,-1),Fet={style:{"text-align":"left"}},Get=t("code",null,"数学",-1),Tet=t("code",null,"动态规划",-1),Qet={style:{"text-align":"left"}},Zet=t("td",{style:{"text-align":"center"}},"2378",-1),$et={style:{"text-align":"left"}},tlt={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},elt=t("td",{style:{"text-align":"center"}},null,-1),llt={style:{"text-align":"left"}},olt=t("code",null,"树",-1),nlt=t("code",null,"深度优先搜索",-1),slt=t("code",null,"动态规划",-1),dlt={style:{"text-align":"left"}},_lt=t("td",{style:{"text-align":"center"}},"2380",-1),ilt={style:{"text-align":"left"}},alt={href:"https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string",target:"_blank",rel:"noopener noreferrer"},rlt=t("td",{style:{"text-align":"center"}},null,-1),clt={style:{"text-align":"left"}},hlt=t("code",null,"字符串",-1),ult=t("code",null,"动态规划",-1),flt=t("code",null,"模拟",-1),glt={style:{"text-align":"left"}},mlt=t("td",{style:{"text-align":"center"}},"2393",-1),ylt={style:{"text-align":"left"}},xlt={href:"https://leetcode.com/problems/count-strictly-increasing-subarrays",target:"_blank",rel:"noopener noreferrer"},plt=t("td",{style:{"text-align":"center"}},null,-1),blt={style:{"text-align":"left"}},klt=t("code",null,"数组",-1),Mlt=t("code",null,"数学",-1),Hlt=t("code",null,"动态规划",-1),Ilt={style:{"text-align":"left"}},wlt=t("td",{style:{"text-align":"center"}},"2400",-1),vlt={style:{"text-align":"left"}},qlt={href:"https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},zlt=t("td",{style:{"text-align":"center"}},null,-1),Clt={style:{"text-align":"left"}},Olt=t("code",null,"数学",-1),jlt=t("code",null,"动态规划",-1),Llt=t("code",null,"组合数学",-1),Elt={style:{"text-align":"left"}},Plt=t("td",{style:{"text-align":"center"}},"2403",-1),Klt={style:{"text-align":"left"}},Vlt={href:"https://leetcode.com/problems/minimum-time-to-kill-all-monsters",target:"_blank",rel:"noopener noreferrer"},Nlt=t("td",{style:{"text-align":"center"}},null,-1),Dlt={style:{"text-align":"left"}},Blt=t("code",null,"位运算",-1),Ylt=t("code",null,"数组",-1),Alt=t("code",null,"动态规划",-1),Jlt=t("code",null,"1+",-1),Rlt={style:{"text-align":"left"}},Slt=t("td",{style:{"text-align":"center"}},"2407",-1),Ult={style:{"text-align":"left"}},Wlt={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Xlt=t("td",{style:{"text-align":"center"}},null,-1),Flt={style:{"text-align":"left"}},Glt=t("code",null,"树状数组",-1),Tlt=t("code",null,"线段树",-1),Qlt=t("code",null,"队列",-1),Zlt=t("code",null,"4+",-1),$lt={style:{"text-align":"left"}},tot=t("td",{style:{"text-align":"center"}},"2420",-1),eot={style:{"text-align":"left"}},lot={href:"https://leetcode.com/problems/find-all-good-indices",target:"_blank",rel:"noopener noreferrer"},oot=t("td",{style:{"text-align":"center"}},null,-1),not={style:{"text-align":"left"}},sot=t("code",null,"数组",-1),dot=t("code",null,"动态规划",-1),_ot=t("code",null,"前缀和",-1),iot={style:{"text-align":"left"}},aot=t("td",{style:{"text-align":"center"}},"2430",-1),rot={style:{"text-align":"left"}},cot={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},hot=t("td",{style:{"text-align":"center"}},null,-1),uot={style:{"text-align":"left"}},fot=t("code",null,"字符串",-1),got=t("code",null,"动态规划",-1),mot=t("code",null,"字符串匹配",-1),yot=t("code",null,"2+",-1),xot={style:{"text-align":"left"}},pot=t("td",{style:{"text-align":"center"}},"2431",-1),bot={style:{"text-align":"left"}},kot={href:"https://leetcode.com/problems/maximize-total-tastiness-of-purchased-fruits",target:"_blank",rel:"noopener noreferrer"},Mot=t("td",{style:{"text-align":"center"}},null,-1),Hot={style:{"text-align":"left"}},Iot=t("code",null,"数组",-1),wot=t("code",null,"动态规划",-1),vot={style:{"text-align":"left"}},qot=t("td",{style:{"text-align":"center"}},"2435",-1),zot={style:{"text-align":"left"}},Cot={href:"https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},Oot=t("td",{style:{"text-align":"center"}},null,-1),jot={style:{"text-align":"left"}},Lot=t("code",null,"数组",-1),Eot=t("code",null,"动态规划",-1),Pot=t("code",null,"矩阵",-1),Kot={style:{"text-align":"left"}},Vot=t("td",{style:{"text-align":"center"}},"2436",-1),Not={style:{"text-align":"left"}},Dot={href:"https://leetcode.com/problems/minimum-split-into-subarrays-with-gcd-greater-than-one",target:"_blank",rel:"noopener noreferrer"},Bot=t("td",{style:{"text-align":"center"}},null,-1),Yot={style:{"text-align":"left"}},Aot=t("code",null,"贪心",-1),Jot=t("code",null,"数组",-1),Rot=t("code",null,"数学",-1),Sot=t("code",null,"2+",-1),Uot={style:{"text-align":"left"}},Wot=t("td",{style:{"text-align":"center"}},"2439",-1),Xot={style:{"text-align":"left"}},Fot={href:"https://leetcode.com/problems/minimize-maximum-of-array",target:"_blank",rel:"noopener noreferrer"},Got=t("td",{style:{"text-align":"center"}},null,-1),Tot={style:{"text-align":"left"}},Qot=t("code",null,"贪心",-1),Zot=t("code",null,"数组",-1),$ot=t("code",null,"二分查找",-1),tnt=t("code",null,"2+",-1),ent={style:{"text-align":"left"}},lnt=t("td",{style:{"text-align":"center"}},"2463",-1),ont={style:{"text-align":"left"}},nnt={href:"https://leetcode.com/problems/minimum-total-distance-traveled",target:"_blank",rel:"noopener noreferrer"},snt=t("td",{style:{"text-align":"center"}},null,-1),dnt={style:{"text-align":"left"}},_nt=t("code",null,"数组",-1),int=t("code",null,"动态规划",-1),ant=t("code",null,"排序",-1),rnt={style:{"text-align":"left"}},cnt=t("td",{style:{"text-align":"center"}},"2464",-1),hnt={style:{"text-align":"left"}},unt={href:"https://leetcode.com/problems/minimum-subarrays-in-a-valid-split",target:"_blank",rel:"noopener noreferrer"},fnt=t("td",{style:{"text-align":"center"}},null,-1),gnt={style:{"text-align":"left"}},mnt=t("code",null,"数组",-1),ynt=t("code",null,"数学",-1),xnt=t("code",null,"动态规划",-1),pnt=t("code",null,"1+",-1),bnt={style:{"text-align":"left"}},knt=t("td",{style:{"text-align":"center"}},"2466",-1),Mnt={style:{"text-align":"left"}},Hnt={href:"https://leetcode.com/problems/count-ways-to-build-good-strings",target:"_blank",rel:"noopener noreferrer"},Int=t("td",{style:{"text-align":"center"}},null,-1),wnt={style:{"text-align":"left"}},vnt=t("code",null,"动态规划",-1),qnt={style:{"text-align":"left"}},znt=t("td",{style:{"text-align":"center"}},"2472",-1),Cnt={style:{"text-align":"left"}},Ont={href:"https://leetcode.com/problems/maximum-number-of-non-overlapping-palindrome-substrings",target:"_blank",rel:"noopener noreferrer"},jnt=t("td",{style:{"text-align":"center"}},null,-1),Lnt={style:{"text-align":"left"}},Ent=t("code",null,"贪心",-1),Pnt=t("code",null,"双指针",-1),Knt=t("code",null,"字符串",-1),Vnt=t("code",null,"1+",-1),Nnt={style:{"text-align":"left"}},Dnt=t("td",{style:{"text-align":"center"}},"2478",-1),Bnt={style:{"text-align":"left"}},Ynt={href:"https://leetcode.com/problems/number-of-beautiful-partitions",target:"_blank",rel:"noopener noreferrer"},Ant=t("td",{style:{"text-align":"center"}},null,-1),Jnt={style:{"text-align":"left"}},Rnt=t("code",null,"字符串",-1),Snt=t("code",null,"动态规划",-1),Unt={style:{"text-align":"left"}},Wnt=t("td",{style:{"text-align":"center"}},"2484",-1),Xnt={style:{"text-align":"left"}},Fnt={href:"https://leetcode.com/problems/count-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},Gnt=t("td",{style:{"text-align":"center"}},null,-1),Tnt={style:{"text-align":"left"}},Qnt=t("code",null,"字符串",-1),Znt=t("code",null,"动态规划",-1),$nt={style:{"text-align":"left"}},tst=t("td",{style:{"text-align":"center"}},"2495",-1),est={style:{"text-align":"left"}},lst={href:"https://leetcode.com/problems/number-of-subarrays-having-even-product",target:"_blank",rel:"noopener noreferrer"},ost=t("td",{style:{"text-align":"center"}},null,-1),nst={style:{"text-align":"left"}},sst=t("code",null,"数组",-1),dst=t("code",null,"数学",-1),_st=t("code",null,"动态规划",-1),ist={style:{"text-align":"left"}},ast=t("td",{style:{"text-align":"center"}},"2501",-1),rst={style:{"text-align":"left"}},cst={href:"https://leetcode.com/problems/longest-square-streak-in-an-array",target:"_blank",rel:"noopener noreferrer"},hst=t("td",{style:{"text-align":"center"}},null,-1),ust={style:{"text-align":"left"}},fst=t("code",null,"数组",-1),gst=t("code",null,"哈希表",-1),mst=t("code",null,"二分查找",-1),yst=t("code",null,"2+",-1),xst={style:{"text-align":"left"}},pst=t("td",{style:{"text-align":"center"}},"2510",-1),bst={style:{"text-align":"left"}},kst={href:"https://leetcode.com/problems/check-if-there-is-a-path-with-equal-number-of-0s-and-1s",target:"_blank",rel:"noopener noreferrer"},Mst=t("td",{style:{"text-align":"center"}},null,-1),Hst={style:{"text-align":"left"}},Ist=t("code",null,"数组",-1),wst=t("code",null,"动态规划",-1),vst=t("code",null,"矩阵",-1),qst={style:{"text-align":"left"}},zst=t("td",{style:{"text-align":"center"}},"2518",-1),Cst={style:{"text-align":"left"}},Ost={href:"https://leetcode.com/problems/number-of-great-partitions",target:"_blank",rel:"noopener noreferrer"},jst=t("td",{style:{"text-align":"center"}},null,-1),Lst={style:{"text-align":"left"}},Est=t("code",null,"数组",-1),Pst=t("code",null,"动态规划",-1),Kst={style:{"text-align":"left"}},Vst=t("td",{style:{"text-align":"center"}},"2522",-1),Nst={style:{"text-align":"left"}},Dst={href:"https://leetcode.com/problems/partition-string-into-substrings-with-values-at-most-k",target:"_blank",rel:"noopener noreferrer"},Bst=t("td",{style:{"text-align":"center"}},null,-1),Yst={style:{"text-align":"left"}},Ast=t("code",null,"贪心",-1),Jst=t("code",null,"字符串",-1),Rst=t("code",null,"动态规划",-1),Sst={style:{"text-align":"left"}},Ust=t("td",{style:{"text-align":"center"}},"2533",-1),Wst={style:{"text-align":"left"}},Xst={href:"https://leetcode.com/problems/number-of-good-binary-strings",target:"_blank",rel:"noopener noreferrer"},Fst=t("td",{style:{"text-align":"center"}},null,-1),Gst={style:{"text-align":"left"}},Tst=t("code",null,"动态规划",-1),Qst={style:{"text-align":"left"}},Zst=t("td",{style:{"text-align":"center"}},"2538",-1),$st={style:{"text-align":"left"}},tdt={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},edt=t("td",{style:{"text-align":"center"}},null,-1),ldt={style:{"text-align":"left"}},odt=t("code",null,"树",-1),ndt=t("code",null,"深度优先搜索",-1),sdt=t("code",null,"数组",-1),ddt=t("code",null,"1+",-1),_dt={style:{"text-align":"left"}},idt=t("td",{style:{"text-align":"center"}},"2547",-1),adt={style:{"text-align":"left"}},rdt={href:"https://leetcode.com/problems/minimum-cost-to-split-an-array",target:"_blank",rel:"noopener noreferrer"},cdt=t("td",{style:{"text-align":"center"}},null,-1),hdt={style:{"text-align":"left"}},udt=t("code",null,"数组",-1),fdt=t("code",null,"哈希表",-1),gdt=t("code",null,"动态规划",-1),mdt=t("code",null,"1+",-1),ydt={style:{"text-align":"left"}},xdt=t("td",{style:{"text-align":"center"}},"2552",-1),pdt={style:{"text-align":"left"}},bdt={href:"https://leetcode.com/problems/count-increasing-quadruplets",target:"_blank",rel:"noopener noreferrer"},kdt=t("td",{style:{"text-align":"center"}},null,-1),Mdt={style:{"text-align":"left"}},Hdt=t("code",null,"树状数组",-1),Idt=t("code",null,"数组",-1),wdt=t("code",null,"动态规划",-1),vdt=t("code",null,"2+",-1),qdt={style:{"text-align":"left"}},zdt=t("td",{style:{"text-align":"center"}},"2556",-1),Cdt={style:{"text-align":"left"}},Odt={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},jdt=t("td",{style:{"text-align":"center"}},null,-1),Ldt={style:{"text-align":"left"}},Edt=t("code",null,"深度优先搜索",-1),Pdt=t("code",null,"广度优先搜索",-1),Kdt=t("code",null,"数组",-1),Vdt=t("code",null,"2+",-1),Ndt={style:{"text-align":"left"}},Ddt=t("td",{style:{"text-align":"center"}},"2571",-1),Bdt={style:{"text-align":"left"}},Ydt={href:"https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0",target:"_blank",rel:"noopener noreferrer"},Adt=t("td",{style:{"text-align":"center"}},null,-1),Jdt={style:{"text-align":"left"}},Rdt=t("code",null,"贪心",-1),Sdt=t("code",null,"位运算",-1),Udt=t("code",null,"动态规划",-1),Wdt={style:{"text-align":"left"}},Xdt=t("td",{style:{"text-align":"center"}},"2572",-1),Fdt={style:{"text-align":"left"}},Gdt={href:"https://leetcode.com/problems/count-the-number-of-square-free-subsets",target:"_blank",rel:"noopener noreferrer"},Tdt=t("td",{style:{"text-align":"center"}},null,-1),Qdt={style:{"text-align":"left"}},Zdt=t("code",null,"位运算",-1),$dt=t("code",null,"数组",-1),t_t=t("code",null,"数学",-1),e_t=t("code",null,"2+",-1),l_t={style:{"text-align":"left"}},o_t=t("td",{style:{"text-align":"center"}},"2573",-1),n_t={style:{"text-align":"left"}},s_t={href:"https://leetcode.com/problems/find-the-string-with-lcp",target:"_blank",rel:"noopener noreferrer"},d_t=t("td",{style:{"text-align":"center"}},null,-1),__t={style:{"text-align":"left"}},i_t=t("code",null,"贪心",-1),a_t=t("code",null,"并查集",-1),r_t=t("code",null,"数组",-1),c_t=t("code",null,"3+",-1),h_t={style:{"text-align":"left"}},u_t=t("td",{style:{"text-align":"center"}},"2581",-1),f_t={style:{"text-align":"left"}},g_t={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},m_t=t("td",{style:{"text-align":"center"}},null,-1),y_t={style:{"text-align":"left"}},x_t=t("code",null,"树",-1),p_t=t("code",null,"深度优先搜索",-1),b_t=t("code",null,"数组",-1),k_t=t("code",null,"2+",-1),M_t={style:{"text-align":"left"}},H_t=t("td",{style:{"text-align":"center"}},"2585",-1),I_t={style:{"text-align":"left"}},w_t={href:"https://leetcode.com/problems/number-of-ways-to-earn-points",target:"_blank",rel:"noopener noreferrer"},v_t=t("td",{style:{"text-align":"center"}},null,-1),q_t={style:{"text-align":"left"}},z_t=t("code",null,"数组",-1),C_t=t("code",null,"动态规划",-1),O_t={style:{"text-align":"left"}},j_t=t("td",{style:{"text-align":"center"}},"2597",-1),L_t={style:{"text-align":"left"}},E_t={href:"https://leetcode.com/problems/the-number-of-beautiful-subsets",target:"_blank",rel:"noopener noreferrer"},P_t=t("td",{style:{"text-align":"center"}},null,-1),K_t={style:{"text-align":"left"}},V_t=t("code",null,"数组",-1),N_t=t("code",null,"哈希表",-1),D_t=t("code",null,"数学",-1),B_t=t("code",null,"4+",-1),Y_t={style:{"text-align":"left"}},A_t=t("td",{style:{"text-align":"center"}},"2606",-1),J_t={style:{"text-align":"left"}},R_t={href:"https://leetcode.com/problems/find-the-substring-with-maximum-cost",target:"_blank",rel:"noopener noreferrer"},S_t=t("td",{style:{"text-align":"center"}},null,-1),U_t={style:{"text-align":"left"}},W_t=t("code",null,"数组",-1),X_t=t("code",null,"哈希表",-1),F_t=t("code",null,"字符串",-1),G_t=t("code",null,"1+",-1),T_t={style:{"text-align":"left"}},Q_t=t("td",{style:{"text-align":"center"}},"2617",-1),Z_t={style:{"text-align":"left"}},$_t={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},tit=t("td",{style:{"text-align":"center"}},null,-1),eit={style:{"text-align":"left"}},lit=t("code",null,"栈",-1),oit=t("code",null,"广度优先搜索",-1),nit=t("code",null,"并查集",-1),sit=t("code",null,"5+",-1),dit={style:{"text-align":"left"}},_it=t("td",{style:{"text-align":"center"}},"2638",-1),iit={style:{"text-align":"left"}},ait={href:"https://leetcode.com/problems/count-the-number-of-k-free-subsets",target:"_blank",rel:"noopener noreferrer"},rit=t("td",{style:{"text-align":"center"}},null,-1),cit={style:{"text-align":"left"}},hit=t("code",null,"数组",-1),uit=t("code",null,"数学",-1),fit=t("code",null,"动态规划",-1),git=t("code",null,"2+",-1),mit={style:{"text-align":"left"}},yit=t("td",{style:{"text-align":"center"}},"2645",-1),xit={style:{"text-align":"left"}},pit={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},bit=t("td",{style:{"text-align":"center"}},null,-1),kit={style:{"text-align":"left"}},Mit=t("code",null,"栈",-1),Hit=t("code",null,"贪心",-1),Iit=t("code",null,"字符串",-1),wit=t("code",null,"1+",-1),vit={style:{"text-align":"left"}},qit=t("td",{style:{"text-align":"center"}},"2646",-1),zit={style:{"text-align":"left"}},Cit={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},Oit=t("td",{style:{"text-align":"center"}},null,-1),jit={style:{"text-align":"left"}},Lit=t("code",null,"树",-1),Eit=t("code",null,"深度优先搜索",-1),Pit=t("code",null,"图",-1),Kit=t("code",null,"2+",-1),Vit={style:{"text-align":"left"}},Nit=t("td",{style:{"text-align":"center"}},"2673",-1),Dit={style:{"text-align":"left"}},Bit={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yit=t("td",{style:{"text-align":"center"}},null,-1),Ait={style:{"text-align":"left"}},Jit=t("code",null,"贪心",-1),Rit=t("code",null,"树",-1),Sit=t("code",null,"数组",-1),Uit=t("code",null,"2+",-1),Wit={style:{"text-align":"left"}},Xit=t("td",{style:{"text-align":"center"}},"2681",-1),Fit={style:{"text-align":"left"}},Git={href:"https://leetcode.com/problems/power-of-heroes",target:"_blank",rel:"noopener noreferrer"},Tit=t("td",{style:{"text-align":"center"}},null,-1),Qit={style:{"text-align":"left"}},Zit=t("code",null,"数组",-1),$it=t("code",null,"数学",-1),tat=t("code",null,"动态规划",-1),eat=t("code",null,"2+",-1),lat={style:{"text-align":"left"}},oat=t("td",{style:{"text-align":"center"}},"2684",-1),nat={style:{"text-align":"left"}},sat={href:"https://leetcode.com/problems/maximum-number-of-moves-in-a-grid",target:"_blank",rel:"noopener noreferrer"},dat=t("td",{style:{"text-align":"center"}},null,-1),_at={style:{"text-align":"left"}},iat=t("code",null,"数组",-1),aat=t("code",null,"动态规划",-1),rat=t("code",null,"矩阵",-1),cat={style:{"text-align":"left"}},hat=t("td",{style:{"text-align":"center"}},"2707",-1),uat={style:{"text-align":"left"}},fat={href:"https://leetcode.com/problems/extra-characters-in-a-string",target:"_blank",rel:"noopener noreferrer"},gat=t("td",{style:{"text-align":"center"}},null,-1),mat={style:{"text-align":"left"}},yat=t("code",null,"字典树",-1),xat=t("code",null,"数组",-1),pat=t("code",null,"哈希表",-1),bat=t("code",null,"2+",-1),kat={style:{"text-align":"left"}},Mat=t("td",{style:{"text-align":"center"}},"2708",-1),Hat={style:{"text-align":"left"}},Iat={href:"https://leetcode.com/problems/maximum-strength-of-a-group",target:"_blank",rel:"noopener noreferrer"},wat=t("td",{style:{"text-align":"center"}},null,-1),vat={style:{"text-align":"left"}},qat=t("code",null,"贪心",-1),zat=t("code",null,"位运算",-1),Cat=t("code",null,"数组",-1),Oat=t("code",null,"4+",-1),jat={style:{"text-align":"left"}},Lat=t("td",{style:{"text-align":"center"}},"2712",-1),Eat={style:{"text-align":"left"}},Pat={href:"https://leetcode.com/problems/minimum-cost-to-make-all-characters-equal",target:"_blank",rel:"noopener noreferrer"},Kat=t("td",{style:{"text-align":"center"}},null,-1),Vat={style:{"text-align":"left"}},Nat=t("code",null,"贪心",-1),Dat=t("code",null,"字符串",-1),Bat=t("code",null,"动态规划",-1),Yat={style:{"text-align":"left"}},Aat=t("td",{style:{"text-align":"center"}},"2713",-1),Jat={style:{"text-align":"left"}},Rat={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Sat=t("td",{style:{"text-align":"center"}},null,-1),Uat={style:{"text-align":"left"}},Wat=t("code",null,"记忆化搜索",-1),Xat=t("code",null,"数组",-1),Fat=t("code",null,"哈希表",-1),Gat=t("code",null,"5+",-1),Tat={style:{"text-align":"left"}},Qat=t("td",{style:{"text-align":"center"}},"2719",-1),Zat={style:{"text-align":"left"}},$at={href:"https://leetcode.com/problems/count-of-integers",target:"_blank",rel:"noopener noreferrer"},trt=t("td",{style:{"text-align":"center"}},null,-1),ert={style:{"text-align":"left"}},lrt=t("code",null,"数学",-1),ort=t("code",null,"字符串",-1),nrt=t("code",null,"动态规划",-1),srt={style:{"text-align":"left"}},drt=t("td",{style:{"text-align":"center"}},"2741",-1),_rt={style:{"text-align":"left"}},irt={href:"https://leetcode.com/problems/special-permutations",target:"_blank",rel:"noopener noreferrer"},art=t("td",{style:{"text-align":"center"}},null,-1),rrt={style:{"text-align":"left"}},crt=t("code",null,"位运算",-1),hrt=t("code",null,"数组",-1),urt=t("code",null,"动态规划",-1),frt=t("code",null,"1+",-1),grt={style:{"text-align":"left"}},mrt=t("td",{style:{"text-align":"center"}},"2742",-1),yrt={style:{"text-align":"left"}},xrt={href:"https://leetcode.com/problems/painting-the-walls",target:"_blank",rel:"noopener noreferrer"},prt=t("td",{style:{"text-align":"center"}},null,-1),brt={style:{"text-align":"left"}},krt=t("code",null,"数组",-1),Mrt=t("code",null,"动态规划",-1),Hrt={style:{"text-align":"left"}},Irt=t("td",{style:{"text-align":"center"}},"2745",-1),wrt={style:{"text-align":"left"}},vrt={href:"https://leetcode.com/problems/construct-the-longest-new-string",target:"_blank",rel:"noopener noreferrer"},qrt=t("td",{style:{"text-align":"center"}},null,-1),zrt={style:{"text-align":"left"}},Crt=t("code",null,"贪心",-1),Ort=t("code",null,"脑筋急转弯",-1),jrt=t("code",null,"数学",-1),Lrt=t("code",null,"1+",-1),Ert={style:{"text-align":"left"}},Prt=t("td",{style:{"text-align":"center"}},"2746",-1),Krt={style:{"text-align":"left"}},Vrt={href:"https://leetcode.com/problems/decremental-string-concatenation",target:"_blank",rel:"noopener noreferrer"},Nrt=t("td",{style:{"text-align":"center"}},null,-1),Drt={style:{"text-align":"left"}},Brt=t("code",null,"数组",-1),Yrt=t("code",null,"字符串",-1),Art=t("code",null,"动态规划",-1),Jrt={style:{"text-align":"left"}},Rrt=t("td",{style:{"text-align":"center"}},"2750",-1),Srt={style:{"text-align":"left"}},Urt={href:"https://leetcode.com/problems/ways-to-split-array-into-good-subarrays",target:"_blank",rel:"noopener noreferrer"},Wrt=t("td",{style:{"text-align":"center"}},null,-1),Xrt={style:{"text-align":"left"}},Frt=t("code",null,"数组",-1),Grt=t("code",null,"数学",-1),Trt=t("code",null,"动态规划",-1),Qrt={style:{"text-align":"left"}},Zrt=t("td",{style:{"text-align":"center"}},"2767",-1),$rt={style:{"text-align":"left"}},tct={href:"https://leetcode.com/problems/partition-string-into-minimum-beautiful-substrings",target:"_blank",rel:"noopener noreferrer"},ect=t("td",{style:{"text-align":"center"}},null,-1),lct={style:{"text-align":"left"}},oct=t("code",null,"哈希表",-1),nct=t("code",null,"字符串",-1),sct=t("code",null,"动态规划",-1),dct=t("code",null,"1+",-1),_ct={style:{"text-align":"left"}},ict=t("td",{style:{"text-align":"center"}},"2770",-1),act={style:{"text-align":"left"}},rct={href:"https://leetcode.com/problems/maximum-number-of-jumps-to-reach-the-last-index",target:"_blank",rel:"noopener noreferrer"},cct=t("td",{style:{"text-align":"center"}},null,-1),hct={style:{"text-align":"left"}},uct=t("code",null,"数组",-1),fct=t("code",null,"动态规划",-1),gct={style:{"text-align":"left"}},mct=t("td",{style:{"text-align":"center"}},"2771",-1),yct={style:{"text-align":"left"}},xct={href:"https://leetcode.com/problems/longest-non-decreasing-subarray-from-two-arrays",target:"_blank",rel:"noopener noreferrer"},pct=t("td",{style:{"text-align":"center"}},null,-1),bct={style:{"text-align":"left"}},kct=t("code",null,"数组",-1),Mct=t("code",null,"动态规划",-1),Hct={style:{"text-align":"left"}},Ict=t("td",{style:{"text-align":"center"}},"2786",-1),wct={style:{"text-align":"left"}},vct={href:"https://leetcode.com/problems/visit-array-positions-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},qct=t("td",{style:{"text-align":"center"}},null,-1),zct={style:{"text-align":"left"}},Cct=t("code",null,"数组",-1),Oct=t("code",null,"动态规划",-1),jct={style:{"text-align":"left"}},Lct=t("td",{style:{"text-align":"center"}},"2787",-1),Ect={style:{"text-align":"left"}},Pct={href:"https://leetcode.com/problems/ways-to-express-an-integer-as-sum-of-powers",target:"_blank",rel:"noopener noreferrer"},Kct=t("td",{style:{"text-align":"center"}},null,-1),Vct={style:{"text-align":"left"}},Nct=t("code",null,"动态规划",-1),Dct={style:{"text-align":"left"}},Bct=t("td",{style:{"text-align":"center"}},"2791",-1),Yct={style:{"text-align":"left"}},Act={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Jct=t("td",{style:{"text-align":"center"}},null,-1),Rct={style:{"text-align":"left"}},Sct=t("code",null,"位运算",-1),Uct=t("code",null,"树",-1),Wct=t("code",null,"深度优先搜索",-1),Xct=t("code",null,"2+",-1),Fct={style:{"text-align":"left"}},Gct=t("td",{style:{"text-align":"center"}},"2801",-1),Tct={style:{"text-align":"left"}},Qct={href:"https://leetcode.com/problems/count-stepping-numbers-in-range",target:"_blank",rel:"noopener noreferrer"},Zct=t("td",{style:{"text-align":"center"}},null,-1),$ct={style:{"text-align":"left"}},tht=t("code",null,"字符串",-1),eht=t("code",null,"动态规划",-1),lht={style:{"text-align":"left"}},oht=t("td",{style:{"text-align":"center"}},"2809",-1),nht={style:{"text-align":"left"}},sht={href:"https://leetcode.com/problems/minimum-time-to-make-array-sum-at-most-x",target:"_blank",rel:"noopener noreferrer"},dht=t("td",{style:{"text-align":"center"}},null,-1),_ht={style:{"text-align":"left"}},iht=t("code",null,"数组",-1),aht=t("code",null,"动态规划",-1),rht=t("code",null,"排序",-1),cht={style:{"text-align":"left"}},hht=t("td",{style:{"text-align":"center"}},"2811",-1),uht={style:{"text-align":"left"}},fht={href:"https://leetcode.com/problems/check-if-it-is-possible-to-split-array",target:"_blank",rel:"noopener noreferrer"},ght=t("td",{style:{"text-align":"center"}},null,-1),mht={style:{"text-align":"left"}},yht=t("code",null,"贪心",-1),xht=t("code",null,"数组",-1),pht=t("code",null,"动态规划",-1),bht={style:{"text-align":"left"}},kht=t("td",{style:{"text-align":"center"}},"2826",-1),Mht={style:{"text-align":"left"}},Hht={href:"https://leetcode.com/problems/sorting-three-groups",target:"_blank",rel:"noopener noreferrer"},Iht=t("td",{style:{"text-align":"center"}},null,-1),wht={style:{"text-align":"left"}},vht=t("code",null,"数组",-1),qht=t("code",null,"二分查找",-1),zht=t("code",null,"动态规划",-1),Cht={style:{"text-align":"left"}},Oht=t("td",{style:{"text-align":"center"}},"2827",-1),jht={style:{"text-align":"left"}},Lht={href:"https://leetcode.com/problems/number-of-beautiful-integers-in-the-range",target:"_blank",rel:"noopener noreferrer"},Eht=t("td",{style:{"text-align":"center"}},null,-1),Pht={style:{"text-align":"left"}},Kht=t("code",null,"数学",-1),Vht=t("code",null,"动态规划",-1),Nht={style:{"text-align":"left"}},Dht=t("td",{style:{"text-align":"center"}},"2830",-1),Bht={style:{"text-align":"left"}},Yht={href:"https://leetcode.com/problems/maximize-the-profit-as-the-salesman",target:"_blank",rel:"noopener noreferrer"},Aht=t("td",{style:{"text-align":"center"}},null,-1),Jht={style:{"text-align":"left"}},Rht=t("code",null,"数组",-1),Sht=t("code",null,"哈希表",-1),Uht=t("code",null,"二分查找",-1),Wht=t("code",null,"2+",-1),Xht={style:{"text-align":"left"}},Fht=t("td",{style:{"text-align":"center"}},"2836",-1),Ght={style:{"text-align":"left"}},Tht={href:"https://leetcode.com/problems/maximize-value-of-function-in-a-ball-passing-game",target:"_blank",rel:"noopener noreferrer"},Qht=t("td",{style:{"text-align":"center"}},null,-1),Zht={style:{"text-align":"left"}},$ht=t("code",null,"位运算",-1),t1t=t("code",null,"数组",-1),e1t=t("code",null,"动态规划",-1),l1t={style:{"text-align":"left"}},o1t=t("td",{style:{"text-align":"center"}},"2850",-1),n1t={style:{"text-align":"left"}},s1t={href:"https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid",target:"_blank",rel:"noopener noreferrer"},d1t=t("td",{style:{"text-align":"center"}},null,-1),_1t={style:{"text-align":"left"}},i1t=t("code",null,"广度优先搜索",-1),a1t=t("code",null,"数组",-1),r1t=t("code",null,"动态规划",-1),c1t=t("code",null,"1+",-1),h1t={style:{"text-align":"left"}},u1t=t("td",{style:{"text-align":"center"}},"2851",-1),f1t={style:{"text-align":"left"}},g1t={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},m1t=t("td",{style:{"text-align":"center"}},null,-1),y1t={style:{"text-align":"left"}},x1t=t("code",null,"数学",-1),p1t=t("code",null,"字符串",-1),b1t=t("code",null,"动态规划",-1),k1t=t("code",null,"1+",-1),M1t={style:{"text-align":"left"}},H1t=t("td",{style:{"text-align":"center"}},"2858",-1),I1t={style:{"text-align":"left"}},w1t={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},v1t=t("td",{style:{"text-align":"center"}},null,-1),q1t={style:{"text-align":"left"}},z1t=t("code",null,"深度优先搜索",-1),C1t=t("code",null,"广度优先搜索",-1),O1t=t("code",null,"图",-1),j1t=t("code",null,"1+",-1),L1t={style:{"text-align":"left"}},E1t=t("td",{style:{"text-align":"center"}},"2867",-1),P1t={style:{"text-align":"left"}},K1t={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},V1t=t("td",{style:{"text-align":"center"}},null,-1),N1t={style:{"text-align":"left"}},D1t=t("code",null,"树",-1),B1t=t("code",null,"深度优先搜索",-1),Y1t=t("code",null,"数学",-1),A1t=t("code",null,"2+",-1),J1t={style:{"text-align":"left"}},R1t=t("td",{style:{"text-align":"center"}},"2876",-1),S1t={style:{"text-align":"left"}},U1t={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},W1t=t("td",{style:{"text-align":"center"}},null,-1),X1t={style:{"text-align":"left"}},F1t=t("code",null,"图",-1),G1t=t("code",null,"记忆化搜索",-1),T1t=t("code",null,"动态规划",-1),Q1t={style:{"text-align":"left"}},Z1t=t("td",{style:{"text-align":"center"}},"2892",-1),$1t={style:{"text-align":"left"}},tut={href:"https://leetcode.com/problems/minimizing-array-after-replacing-pairs-with-their-product",target:"_blank",rel:"noopener noreferrer"},eut=t("td",{style:{"text-align":"center"}},null,-1),lut={style:{"text-align":"left"}},out=t("code",null,"贪心",-1),nut=t("code",null,"数组",-1),sut=t("code",null,"动态规划",-1),dut={style:{"text-align":"left"}},_ut=t("td",{style:{"text-align":"center"}},"2896",-1),iut={style:{"text-align":"left"}},aut={href:"https://leetcode.com/problems/apply-operations-to-make-two-strings-equal",target:"_blank",rel:"noopener noreferrer"},rut=t("td",{style:{"text-align":"center"}},null,-1),cut={style:{"text-align":"left"}},hut=t("code",null,"字符串",-1),uut=t("code",null,"动态规划",-1),fut={style:{"text-align":"left"}},gut=t("td",{style:{"text-align":"center"}},"2900",-1),mut={style:{"text-align":"left"}},yut={href:"https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-i",target:"_blank",rel:"noopener noreferrer"},xut=t("td",{style:{"text-align":"center"}},null,-1),put={style:{"text-align":"left"}},but=t("code",null,"贪心",-1),kut=t("code",null,"数组",-1),Mut=t("code",null,"字符串",-1),Hut=t("code",null,"1+",-1),Iut={style:{"text-align":"left"}},wut=t("td",{style:{"text-align":"center"}},"2901",-1),vut={style:{"text-align":"left"}},qut={href:"https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},zut=t("td",{style:{"text-align":"center"}},null,-1),Cut={style:{"text-align":"left"}},Out=t("code",null,"数组",-1),jut=t("code",null,"字符串",-1),Lut=t("code",null,"动态规划",-1),Eut={style:{"text-align":"left"}},Put=t("td",{style:{"text-align":"center"}},"2902",-1),Kut={style:{"text-align":"left"}},Vut={href:"https://leetcode.com/problems/count-of-sub-multisets-with-bounded-sum",target:"_blank",rel:"noopener noreferrer"},Nut=t("td",{style:{"text-align":"center"}},null,-1),Dut={style:{"text-align":"left"}},But=t("code",null,"数组",-1),Yut=t("code",null,"哈希表",-1),Aut=t("code",null,"动态规划",-1),Jut=t("code",null,"1+",-1),Rut={style:{"text-align":"left"}},Sut=t("td",{style:{"text-align":"center"}},"2911",-1),Uut={style:{"text-align":"left"}},Wut={href:"https://leetcode.com/problems/minimum-changes-to-make-k-semi-palindromes",target:"_blank",rel:"noopener noreferrer"},Xut=t("td",{style:{"text-align":"center"}},null,-1),Fut={style:{"text-align":"left"}},Gut=t("code",null,"双指针",-1),Tut=t("code",null,"字符串",-1),Qut=t("code",null,"动态规划",-1),Zut={style:{"text-align":"left"}},$ut=t("td",{style:{"text-align":"center"}},"2912",-1),tft={style:{"text-align":"left"}},eft={href:"https://leetcode.com/problems/number-of-ways-to-reach-destination-in-the-grid",target:"_blank",rel:"noopener noreferrer"},lft=t("td",{style:{"text-align":"center"}},null,-1),oft={style:{"text-align":"left"}},nft=t("code",null,"数学",-1),sft=t("code",null,"动态规划",-1),dft=t("code",null,"组合数学",-1),_ft={style:{"text-align":"left"}},ift=t("td",{style:{"text-align":"center"}},"2915",-1),aft={style:{"text-align":"left"}},rft={href:"https://leetcode.com/problems/length-of-the-longest-subsequence-that-sums-to-target",target:"_blank",rel:"noopener noreferrer"},cft=t("td",{style:{"text-align":"center"}},null,-1),hft={style:{"text-align":"left"}},uft=t("code",null,"数组",-1),fft=t("code",null,"动态规划",-1),gft={style:{"text-align":"left"}},mft=t("td",{style:{"text-align":"center"}},"2916",-1),yft={style:{"text-align":"left"}},xft={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},pft=t("td",{style:{"text-align":"center"}},null,-1),bft={style:{"text-align":"left"}},kft=t("code",null,"树状数组",-1),Mft=t("code",null,"线段树",-1),Hft=t("code",null,"数组",-1),Ift=t("code",null,"1+",-1),wft={style:{"text-align":"left"}},vft=t("td",{style:{"text-align":"center"}},"2919",-1),qft={style:{"text-align":"left"}},zft={href:"https://leetcode.com/problems/minimum-increment-operations-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},Cft=t("td",{style:{"text-align":"center"}},null,-1),Oft={style:{"text-align":"left"}},jft=t("code",null,"数组",-1),Lft=t("code",null,"动态规划",-1),Eft={style:{"text-align":"left"}},Pft=t("td",{style:{"text-align":"center"}},"2920",-1),Kft={style:{"text-align":"left"}},Vft={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},Nft=t("td",{style:{"text-align":"center"}},null,-1),Dft={style:{"text-align":"left"}},Bft=t("code",null,"位运算",-1),Yft=t("code",null,"树",-1),Aft=t("code",null,"深度优先搜索",-1),Jft=t("code",null,"2+",-1),Rft={style:{"text-align":"left"}},Sft=t("td",{style:{"text-align":"center"}},"2925",-1),Uft={style:{"text-align":"left"}},Wft={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},Xft=t("td",{style:{"text-align":"center"}},null,-1),Fft={style:{"text-align":"left"}},Gft=t("code",null,"树",-1),Tft=t("code",null,"深度优先搜索",-1),Qft=t("code",null,"动态规划",-1),Zft={style:{"text-align":"left"}},$ft=t("td",{style:{"text-align":"center"}},"2926",-1),tgt={style:{"text-align":"left"}},egt={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},lgt=t("td",{style:{"text-align":"center"}},null,-1),ogt={style:{"text-align":"left"}},ngt=t("code",null,"树状数组",-1),sgt=t("code",null,"线段树",-1),dgt=t("code",null,"数组",-1),_gt=t("code",null,"2+",-1),igt={style:{"text-align":"left"}},agt=t("td",{style:{"text-align":"center"}},"2930",-1),rgt={style:{"text-align":"left"}},cgt={href:"https://leetcode.com/problems/number-of-strings-which-can-be-rearranged-to-contain-substring",target:"_blank",rel:"noopener noreferrer"},hgt=t("td",{style:{"text-align":"center"}},null,-1),ugt={style:{"text-align":"left"}},fgt=t("code",null,"数学",-1),ggt=t("code",null,"动态规划",-1),mgt=t("code",null,"组合数学",-1),ygt={style:{"text-align":"left"}},xgt=t("td",{style:{"text-align":"center"}},"2944",-1),pgt={style:{"text-align":"left"}},bgt={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},kgt=t("td",{style:{"text-align":"center"}},null,-1),Mgt={style:{"text-align":"left"}},Hgt=t("code",null,"队列",-1),Igt=t("code",null,"数组",-1),wgt=t("code",null,"动态规划",-1),vgt=t("code",null,"2+",-1),qgt={style:{"text-align":"left"}},zgt=t("td",{style:{"text-align":"center"}},"2945",-1),Cgt={style:{"text-align":"left"}},Ogt={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},jgt=t("td",{style:{"text-align":"center"}},null,-1),Lgt={style:{"text-align":"left"}},Egt=t("code",null,"栈",-1),Pgt=t("code",null,"队列",-1),Kgt=t("code",null,"数组",-1),Vgt=t("code",null,"4+",-1),Ngt={style:{"text-align":"left"}},Dgt=t("td",{style:{"text-align":"center"}},"2957",-1),Bgt={style:{"text-align":"left"}},Ygt={href:"https://leetcode.com/problems/remove-adjacent-almost-equal-characters",target:"_blank",rel:"noopener noreferrer"},Agt=t("td",{style:{"text-align":"center"}},null,-1),Jgt={style:{"text-align":"left"}},Rgt=t("code",null,"贪心",-1),Sgt=t("code",null,"字符串",-1),Ugt=t("code",null,"动态规划",-1),Wgt={style:{"text-align":"left"}},Xgt=t("td",{style:{"text-align":"center"}},"2969",-1),Fgt={style:{"text-align":"left"}},Ggt={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},Tgt=t("td",{style:{"text-align":"center"}},null,-1),Qgt={style:{"text-align":"left"}},Zgt=t("code",null,"队列",-1),$gt=t("code",null,"数组",-1),tmt=t("code",null,"动态规划",-1),emt=t("code",null,"2+",-1),lmt={style:{"text-align":"left"}},omt=t("td",{style:{"text-align":"center"}},"2973",-1),nmt={style:{"text-align":"left"}},smt={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},dmt=t("td",{style:{"text-align":"center"}},null,-1),_mt={style:{"text-align":"left"}},imt=t("code",null,"树",-1),amt=t("code",null,"深度优先搜索",-1),rmt=t("code",null,"动态规划",-1),cmt=t("code",null,"2+",-1),hmt={style:{"text-align":"left"}},umt=t("td",{style:{"text-align":"center"}},"2977",-1),fmt={style:{"text-align":"left"}},gmt={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},mmt=t("td",{style:{"text-align":"center"}},null,-1),ymt={style:{"text-align":"left"}},xmt=t("code",null,"图",-1),pmt=t("code",null,"字典树",-1),bmt=t("code",null,"数组",-1),kmt=t("code",null,"3+",-1),Mmt={style:{"text-align":"left"}},Hmt=t("td",{style:{"text-align":"center"}},"2979",-1),Imt={style:{"text-align":"left"}},wmt={href:"https://leetcode.com/problems/most-expensive-item-that-can-not-be-bought",target:"_blank",rel:"noopener noreferrer"},vmt=t("td",{style:{"text-align":"center"}},null,-1),qmt={style:{"text-align":"left"}},zmt=t("code",null,"数学",-1),Cmt=t("code",null,"动态规划",-1),Omt=t("code",null,"数论",-1),jmt={style:{"text-align":"left"}},Lmt=t("td",{style:{"text-align":"center"}},"2992",-1),Emt={style:{"text-align":"left"}},Pmt={href:"https://leetcode.com/problems/number-of-self-divisible-permutations",target:"_blank",rel:"noopener noreferrer"},Kmt=t("td",{style:{"text-align":"center"}},null,-1),Vmt={style:{"text-align":"left"}},Nmt=t("code",null,"位运算",-1),Dmt=t("code",null,"数组",-1),Bmt=t("code",null,"动态规划",-1),Ymt=t("code",null,"2+",-1),Amt={style:{"text-align":"left"}},Jmt=t("td",{style:{"text-align":"center"}},"2998",-1),Rmt={style:{"text-align":"left"}},Smt={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},Umt=t("td",{style:{"text-align":"center"}},null,-1),Wmt={style:{"text-align":"left"}},Xmt=t("code",null,"广度优先搜索",-1),Fmt=t("code",null,"记忆化搜索",-1),Gmt=t("code",null,"动态规划",-1),Tmt={style:{"text-align":"left"}},Qmt=t("td",{style:{"text-align":"center"}},"2999",-1),Zmt={style:{"text-align":"left"}},$mt={href:"https://leetcode.com/problems/count-the-number-of-powerful-integers",target:"_blank",rel:"noopener noreferrer"},tyt=t("td",{style:{"text-align":"center"}},null,-1),eyt={style:{"text-align":"left"}},lyt=t("code",null,"数学",-1),oyt=t("code",null,"字符串",-1),nyt=t("code",null,"动态规划",-1),syt={style:{"text-align":"left"}},dyt=t("td",{style:{"text-align":"center"}},"3003",-1),_yt={style:{"text-align":"left"}},iyt={href:"https://leetcode.com/problems/maximize-the-number-of-partitions-after-operations",target:"_blank",rel:"noopener noreferrer"},ayt=t("td",{style:{"text-align":"center"}},null,-1),ryt={style:{"text-align":"left"}},cyt=t("code",null,"位运算",-1),hyt=t("code",null,"字符串",-1),uyt=t("code",null,"动态规划",-1),fyt=t("code",null,"1+",-1),gyt={style:{"text-align":"left"}},myt=t("td",{style:{"text-align":"center"}},"3004",-1),yyt={style:{"text-align":"left"}},xyt={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},pyt=t("td",{style:{"text-align":"center"}},null,-1),byt={style:{"text-align":"left"}},kyt=t("code",null,"树",-1),Myt=t("code",null,"深度优先搜索",-1),Hyt=t("code",null,"数组",-1),Iyt=t("code",null,"1+",-1),wyt={style:{"text-align":"left"}},vyt=t("td",{style:{"text-align":"center"}},"3007",-1),qyt={style:{"text-align":"left"}},zyt={href:"https://leetcode.com/problems/maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},Cyt=t("td",{style:{"text-align":"center"}},null,-1),Oyt={style:{"text-align":"left"}},jyt=t("code",null,"位运算",-1),Lyt=t("code",null,"二分查找",-1),Eyt=t("code",null,"动态规划",-1),Pyt={style:{"text-align":"left"}},Kyt=t("td",{style:{"text-align":"center"}},"3018",-1),Vyt={style:{"text-align":"left"}},Nyt={href:"https://leetcode.com/problems/maximum-number-of-removal-queries-that-can-be-processed-i",target:"_blank",rel:"noopener noreferrer"},Dyt=t("td",{style:{"text-align":"center"}},null,-1),Byt={style:{"text-align":"left"}},Yyt=t("code",null,"数组",-1),Ayt=t("code",null,"动态规划",-1),Jyt={style:{"text-align":"left"}},Ryt=t("td",{style:{"text-align":"center"}},"3032",-1),Syt={style:{"text-align":"left"}},Uyt={href:"https://leetcode.com/problems/count-numbers-with-unique-digits-ii",target:"_blank",rel:"noopener noreferrer"},Wyt=t("td",{style:{"text-align":"center"}},null,-1),Xyt={style:{"text-align":"left"}},Fyt=t("code",null,"哈希表",-1),Gyt=t("code",null,"数学",-1),Tyt=t("code",null,"动态规划",-1),Qyt={style:{"text-align":"left"}},Zyt=t("td",{style:{"text-align":"center"}},"3040",-1),$yt={style:{"text-align":"left"}},t3t={href:"https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},e3t=t("td",{style:{"text-align":"center"}},null,-1),l3t={style:{"text-align":"left"}},o3t=t("code",null,"记忆化搜索",-1),n3t=t("code",null,"数组",-1),s3t=t("code",null,"动态规划",-1),d3t={style:{"text-align":"left"}},_3t=t("td",{style:{"text-align":"center"}},"3041",-1),i3t={style:{"text-align":"left"}},a3t={href:"https://leetcode.com/problems/maximize-consecutive-elements-in-an-array-after-modification",target:"_blank",rel:"noopener noreferrer"},r3t=t("td",{style:{"text-align":"center"}},null,-1),c3t={style:{"text-align":"left"}},h3t=t("code",null,"数组",-1),u3t=t("code",null,"动态规划",-1),f3t=t("code",null,"排序",-1),g3t={style:{"text-align":"left"}},m3t=t("td",{style:{"text-align":"center"}},"3068",-1),y3t={style:{"text-align":"left"}},x3t={href:"https://leetcode.com/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},p3t=t("td",{style:{"text-align":"center"}},null,-1),b3t={style:{"text-align":"left"}},k3t=t("code",null,"贪心",-1),M3t=t("code",null,"位运算",-1),H3t=t("code",null,"树",-1),I3t=t("code",null,"3+",-1),w3t={style:{"text-align":"left"}},v3t=t("td",{style:{"text-align":"center"}},"3077",-1),q3t={style:{"text-align":"left"}},z3t={href:"https://leetcode.com/problems/maximum-strength-of-k-disjoint-subarrays",target:"_blank",rel:"noopener noreferrer"},C3t=t("td",{style:{"text-align":"center"}},null,-1),O3t={style:{"text-align":"left"}},j3t=t("code",null,"数组",-1),L3t=t("code",null,"动态规划",-1),E3t=t("code",null,"前缀和",-1),P3t={style:{"text-align":"left"}},K3t=t("td",{style:{"text-align":"center"}},"3082",-1),V3t={style:{"text-align":"left"}},N3t={href:"https://leetcode.com/problems/find-the-sum-of-the-power-of-all-subsequences",target:"_blank",rel:"noopener noreferrer"},D3t=t("td",{style:{"text-align":"center"}},null,-1),B3t={style:{"text-align":"left"}},Y3t=t("code",null,"数组",-1),A3t=t("code",null,"动态规划",-1),J3t={style:{"text-align":"left"}},R3t=t("td",{style:{"text-align":"center"}},"3098",-1),S3t={style:{"text-align":"left"}},U3t={href:"https://leetcode.com/problems/find-the-sum-of-subsequence-powers",target:"_blank",rel:"noopener noreferrer"},W3t=t("td",{style:{"text-align":"center"}},null,-1),X3t={style:{"text-align":"left"}},F3t=t("code",null,"数组",-1),G3t=t("code",null,"动态规划",-1),T3t=t("code",null,"排序",-1),Q3t={style:{"text-align":"left"}},Z3t=t("td",{style:{"text-align":"center"}},"3117",-1),$3t={style:{"text-align":"left"}},txt={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},ext=t("td",{style:{"text-align":"center"}},null,-1),lxt={style:{"text-align":"left"}},oxt=t("code",null,"位运算",-1),nxt=t("code",null,"线段树",-1),sxt=t("code",null,"队列",-1),dxt=t("code",null,"3+",-1),_xt={style:{"text-align":"left"}},ixt=t("td",{style:{"text-align":"center"}},"3122",-1),axt={style:{"text-align":"left"}},rxt={href:"https://leetcode.com/problems/minimum-number-of-operations-to-satisfy-conditions",target:"_blank",rel:"noopener noreferrer"},cxt=t("td",{style:{"text-align":"center"}},null,-1),hxt={style:{"text-align":"left"}},uxt=t("code",null,"数组",-1),fxt=t("code",null,"动态规划",-1),gxt=t("code",null,"矩阵",-1),mxt={style:{"text-align":"left"}},yxt=t("td",{style:{"text-align":"center"}},"3129",-1),xxt={style:{"text-align":"left"}},pxt={href:"https://leetcode.com/problems/find-all-possible-stable-binary-arrays-i",target:"_blank",rel:"noopener noreferrer"},bxt=t("td",{style:{"text-align":"center"}},null,-1),kxt={style:{"text-align":"left"}},Mxt=t("code",null,"动态规划",-1),Hxt=t("code",null,"前缀和",-1),Ixt={style:{"text-align":"left"}},wxt=t("td",{style:{"text-align":"center"}},"3130",-1),vxt={style:{"text-align":"left"}},qxt={href:"https://leetcode.com/problems/find-all-possible-stable-binary-arrays-ii",target:"_blank",rel:"noopener noreferrer"},zxt=t("td",{style:{"text-align":"center"}},null,-1),Cxt={style:{"text-align":"left"}},Oxt=t("code",null,"动态规划",-1),jxt=t("code",null,"前缀和",-1),Lxt={style:{"text-align":"left"}},Ext=t("td",{style:{"text-align":"center"}},"3135",-1),Pxt={style:{"text-align":"left"}},Kxt={href:"https://leetcode.com/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},Vxt=t("td",{style:{"text-align":"center"}},null,-1),Nxt={style:{"text-align":"left"}},Dxt=t("code",null,"字符串",-1),Bxt=t("code",null,"二分查找",-1),Yxt=t("code",null,"动态规划",-1),Axt=t("code",null,"2+",-1),Jxt={style:{"text-align":"left"}},Rxt=t("td",{style:{"text-align":"center"}},"3144",-1),Sxt={style:{"text-align":"left"}},Uxt={href:"https://leetcode.com/problems/minimum-substring-partition-of-equal-character-frequency",target:"_blank",rel:"noopener noreferrer"},Wxt=t("td",{style:{"text-align":"center"}},null,-1),Xxt={style:{"text-align":"left"}},Fxt=t("code",null,"哈希表",-1),Gxt=t("code",null,"字符串",-1),Txt=t("code",null,"动态规划",-1),Qxt=t("code",null,"1+",-1),Zxt={style:{"text-align":"left"}},$xt=t("td",{style:{"text-align":"center"}},"3148",-1),t4t={style:{"text-align":"left"}},e4t={href:"https://leetcode.com/problems/maximum-difference-score-in-a-grid",target:"_blank",rel:"noopener noreferrer"},l4t=t("td",{style:{"text-align":"center"}},null,-1),o4t={style:{"text-align":"left"}},n4t=t("code",null,"数组",-1),s4t=t("code",null,"动态规划",-1),d4t=t("code",null,"矩阵",-1),_4t={style:{"text-align":"left"}},i4t=t("td",{style:{"text-align":"center"}},"3149",-1),a4t={style:{"text-align":"left"}},r4t={href:"https://leetcode.com/problems/find-the-minimum-cost-array-permutation",target:"_blank",rel:"noopener noreferrer"},c4t=t("td",{style:{"text-align":"center"}},null,-1),h4t={style:{"text-align":"left"}},u4t=t("code",null,"位运算",-1),f4t=t("code",null,"数组",-1),g4t=t("code",null,"动态规划",-1),m4t=t("code",null,"1+",-1),y4t={style:{"text-align":"left"}},x4t=t("td",{style:{"text-align":"center"}},"3154",-1),p4t={style:{"text-align":"left"}},b4t={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},k4t=t("td",{style:{"text-align":"center"}},null,-1),M4t={style:{"text-align":"left"}},H4t=t("code",null,"位运算",-1),I4t=t("code",null,"记忆化搜索",-1),w4t=t("code",null,"数学",-1),v4t=t("code",null,"2+",-1),q4t={style:{"text-align":"left"}},z4t=t("td",{style:{"text-align":"center"}},"3165",-1),C4t={style:{"text-align":"left"}},O4t={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},j4t=t("td",{style:{"text-align":"center"}},null,-1),L4t={style:{"text-align":"left"}},E4t=t("code",null,"线段树",-1),P4t=t("code",null,"数组",-1),K4t=t("code",null,"分治",-1),V4t=t("code",null,"1+",-1),N4t={style:{"text-align":"left"}},D4t=t("td",{style:{"text-align":"center"}},"3176",-1),B4t={style:{"text-align":"left"}},Y4t={href:"https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-i",target:"_blank",rel:"noopener noreferrer"},A4t=t("td",{style:{"text-align":"center"}},null,-1),J4t={style:{"text-align":"left"}},R4t=t("code",null,"数组",-1),S4t=t("code",null,"哈希表",-1),U4t=t("code",null,"动态规划",-1),W4t={style:{"text-align":"left"}},X4t=t("td",{style:{"text-align":"center"}},"3177",-1),F4t={style:{"text-align":"left"}},G4t={href:"https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},T4t=t("td",{style:{"text-align":"center"}},null,-1),Q4t={style:{"text-align":"left"}},Z4t=t("code",null,"数组",-1),$4t=t("code",null,"哈希表",-1),t2t=t("code",null,"动态规划",-1),e2t={style:{"text-align":"left"}},l2t=t("td",{style:{"text-align":"center"}},"3180",-1),o2t={style:{"text-align":"left"}},n2t={href:"https://leetcode.com/problems/maximum-total-reward-using-operations-i",target:"_blank",rel:"noopener noreferrer"},s2t=t("td",{style:{"text-align":"center"}},null,-1),d2t={style:{"text-align":"left"}},_2t=t("code",null,"数组",-1),i2t=t("code",null,"动态规划",-1),a2t={style:{"text-align":"left"}},r2t=t("td",{style:{"text-align":"center"}},"3181",-1),c2t={style:{"text-align":"left"}},h2t={href:"https://leetcode.com/problems/maximum-total-reward-using-operations-ii",target:"_blank",rel:"noopener noreferrer"},u2t=t("td",{style:{"text-align":"center"}},null,-1),f2t={style:{"text-align":"left"}},g2t=t("code",null,"位运算",-1),m2t=t("code",null,"数组",-1),y2t=t("code",null,"动态规划",-1),x2t={style:{"text-align":"left"}},p2t=t("td",{style:{"text-align":"center"}},"3183",-1),b2t={style:{"text-align":"left"}},k2t={href:"https://leetcode.com/problems/the-number-of-ways-to-make-the-sum",target:"_blank",rel:"noopener noreferrer"},M2t=t("td",{style:{"text-align":"center"}},null,-1),H2t={style:{"text-align":"left"}},I2t=t("code",null,"数组",-1),w2t=t("code",null,"动态规划",-1),v2t={style:{"text-align":"left"}},q2t=t("td",{style:{"text-align":"center"}},"3186",-1),z2t={style:{"text-align":"left"}},C2t={href:"https://leetcode.com/problems/maximum-total-damage-with-spell-casting",target:"_blank",rel:"noopener noreferrer"},O2t=t("td",{style:{"text-align":"center"}},null,-1),j2t={style:{"text-align":"left"}},L2t=t("code",null,"数组",-1),E2t=t("code",null,"哈希表",-1),P2t=t("code",null,"双指针",-1),K2t=t("code",null,"4+",-1),V2t={style:{"text-align":"left"}},N2t=t("td",{style:{"text-align":"center"}},"3192",-1),D2t={style:{"text-align":"left"}},B2t={href:"https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-ii",target:"_blank",rel:"noopener noreferrer"},Y2t=t("td",{style:{"text-align":"center"}},null,-1),A2t={style:{"text-align":"left"}},J2t=t("code",null,"贪心",-1),R2t=t("code",null,"数组",-1),S2t=t("code",null,"动态规划",-1),U2t={style:{"text-align":"left"}},W2t=t("td",{style:{"text-align":"center"}},"3193",-1),X2t={style:{"text-align":"left"}},F2t={href:"https://leetcode.com/problems/count-the-number-of-inversions",target:"_blank",rel:"noopener noreferrer"},G2t=t("td",{style:{"text-align":"center"}},null,-1),T2t={style:{"text-align":"left"}},Q2t=t("code",null,"数组",-1),Z2t=t("code",null,"动态规划",-1),$2t={style:{"text-align":"left"}},tpt=t("td",{style:{"text-align":"center"}},"3196",-1),ept={style:{"text-align":"left"}},lpt={href:"https://leetcode.com/problems/maximize-total-cost-of-alternating-subarrays",target:"_blank",rel:"noopener noreferrer"},opt=t("td",{style:{"text-align":"center"}},null,-1),npt={style:{"text-align":"left"}},spt=t("code",null,"数组",-1),dpt=t("code",null,"动态规划",-1),_pt={style:{"text-align":"left"}},ipt=t("td",{style:{"text-align":"center"}},"3201",-1),apt={style:{"text-align":"left"}},rpt={href:"https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-i",target:"_blank",rel:"noopener noreferrer"},cpt=t("td",{style:{"text-align":"center"}},null,-1),hpt={style:{"text-align":"left"}},upt=t("code",null,"数组",-1),fpt=t("code",null,"动态规划",-1),gpt={style:{"text-align":"left"}},mpt=t("td",{style:{"text-align":"center"}},"3202",-1),ypt={style:{"text-align":"left"}},xpt={href:"https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},ppt=t("td",{style:{"text-align":"center"}},null,-1),bpt={style:{"text-align":"left"}},kpt=t("code",null,"数组",-1),Mpt=t("code",null,"动态规划",-1),Hpt={style:{"text-align":"left"}},Ipt=t("td",{style:{"text-align":"center"}},"3205",-1),wpt={style:{"text-align":"left"}},vpt={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},qpt=t("td",{style:{"text-align":"center"}},null,-1),zpt={style:{"text-align":"left"}},Cpt=t("code",null,"栈",-1),Opt=t("code",null,"贪心",-1),jpt=t("code",null,"数组",-1),Lpt=t("code",null,"2+",-1),Ept={style:{"text-align":"left"}},Ppt=t("td",{style:{"text-align":"center"}},"3213",-1),Kpt={style:{"text-align":"left"}},Vpt={href:"https://leetcode.com/problems/construct-string-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},Npt=t("td",{style:{"text-align":"center"}},null,-1),Dpt={style:{"text-align":"left"}},Bpt=t("code",null,"数组",-1),Ypt=t("code",null,"字符串",-1),Apt=t("code",null,"动态规划",-1),Jpt=t("code",null,"1+",-1),Rpt={style:{"text-align":"left"}},Spt=t("td",{style:{"text-align":"center"}},"3218",-1),Upt={style:{"text-align":"left"}},Wpt={href:"https://leetcode.com/problems/minimum-cost-for-cutting-cake-i",target:"_blank",rel:"noopener noreferrer"},Xpt=t("td",{style:{"text-align":"center"}},null,-1),Fpt={style:{"text-align":"left"}},Gpt=t("code",null,"贪心",-1),Tpt=t("code",null,"数组",-1),Qpt=t("code",null,"动态规划",-1),Zpt=t("code",null,"1+",-1),$pt={style:{"text-align":"left"}},t5t=t("td",{style:{"text-align":"center"}},"3225",-1),e5t={style:{"text-align":"left"}},l5t={href:"https://leetcode.com/problems/maximum-score-from-grid-operations",target:"_blank",rel:"noopener noreferrer"},o5t=t("td",{style:{"text-align":"center"}},null,-1),n5t={style:{"text-align":"left"}},s5t=t("code",null,"数组",-1),d5t=t("code",null,"动态规划",-1),_5t=t("code",null,"矩阵",-1),i5t=t("code",null,"1+",-1),a5t={style:{"text-align":"left"}},r5t=t("td",{style:{"text-align":"center"}},"3229",-1),c5t={style:{"text-align":"left"}},h5t={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},u5t=t("td",{style:{"text-align":"center"}},null,-1),f5t={style:{"text-align":"left"}},g5t=t("code",null,"栈",-1),m5t=t("code",null,"贪心",-1),y5t=t("code",null,"数组",-1),x5t=t("code",null,"2+",-1),p5t={style:{"text-align":"left"}},b5t=t("td",{style:{"text-align":"center"}},"3241",-1),k5t={style:{"text-align":"left"}},M5t={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},H5t=t("td",{style:{"text-align":"center"}},null,-1),I5t={style:{"text-align":"left"}},w5t=t("code",null,"树",-1),v5t=t("code",null,"深度优先搜索",-1),q5t=t("code",null,"图",-1),z5t=t("code",null,"1+",-1),C5t={style:{"text-align":"left"}},O5t=t("td",{style:{"text-align":"center"}},"3247",-1),j5t={style:{"text-align":"left"}},L5t={href:"https://leetcode.com/problems/number-of-subsequences-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},E5t=t("td",{style:{"text-align":"center"}},null,-1),P5t={style:{"text-align":"left"}},K5t=t("code",null,"数组",-1),V5t=t("code",null,"数学",-1),N5t=t("code",null,"动态规划",-1),D5t=t("code",null,"1+",-1),B5t={style:{"text-align":"left"}},Y5t=t("td",{style:{"text-align":"center"}},"3250",-1),A5t={style:{"text-align":"left"}},J5t={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-i",target:"_blank",rel:"noopener noreferrer"},R5t=t("td",{style:{"text-align":"center"}},null,-1),S5t={style:{"text-align":"left"}},U5t=t("code",null,"数组",-1),W5t=t("code",null,"数学",-1),X5t=t("code",null,"动态规划",-1),F5t=t("code",null,"2+",-1),G5t={style:{"text-align":"left"}},T5t=t("td",{style:{"text-align":"center"}},"3251",-1),Q5t={style:{"text-align":"left"}},Z5t={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-ii",target:"_blank",rel:"noopener noreferrer"},$5t=t("td",{style:{"text-align":"center"}},null,-1),tbt={style:{"text-align":"left"}},ebt=t("code",null,"数组",-1),lbt=t("code",null,"数学",-1),obt=t("code",null,"动态规划",-1),nbt=t("code",null,"2+",-1),sbt={style:{"text-align":"left"}},dbt=t("td",{style:{"text-align":"center"}},"3256",-1),_bt={style:{"text-align":"left"}},ibt={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-i",target:"_blank",rel:"noopener noreferrer"},abt=t("td",{style:{"text-align":"center"}},null,-1),rbt={style:{"text-align":"left"}},cbt=t("code",null,"数组",-1),hbt=t("code",null,"动态规划",-1),ubt=t("code",null,"枚举",-1),fbt=t("code",null,"1+",-1),gbt={style:{"text-align":"left"}},mbt=t("td",{style:{"text-align":"center"}},"3257",-1),ybt={style:{"text-align":"left"}},xbt={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-ii",target:"_blank",rel:"noopener noreferrer"},pbt=t("td",{style:{"text-align":"center"}},null,-1),bbt={style:{"text-align":"left"}},kbt=t("code",null,"数组",-1),Mbt=t("code",null,"动态规划",-1),Hbt=t("code",null,"枚举",-1),Ibt=t("code",null,"1+",-1),wbt={style:{"text-align":"left"}},vbt=t("td",{style:{"text-align":"center"}},"3259",-1),qbt={style:{"text-align":"left"}},zbt={href:"https://leetcode.com/problems/maximum-energy-boost-from-two-drinks",target:"_blank",rel:"noopener noreferrer"},Cbt=t("td",{style:{"text-align":"center"}},null,-1),Obt={style:{"text-align":"left"}},jbt=t("code",null,"数组",-1),Lbt=t("code",null,"动态规划",-1),Ebt={style:{"text-align":"left"}},Pbt=t("td",{style:{"text-align":"center"}},"3260",-1),Kbt={style:{"text-align":"left"}},Vbt={href:"https://leetcode.com/problems/find-the-largest-palindrome-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},Nbt=t("td",{style:{"text-align":"center"}},null,-1),Dbt={style:{"text-align":"left"}},Bbt=t("code",null,"贪心",-1),Ybt=t("code",null,"数学",-1),Abt=t("code",null,"字符串",-1),Jbt=t("code",null,"2+",-1),Rbt={style:{"text-align":"left"}},Sbt=t("td",{style:{"text-align":"center"}},"3269",-1),Ubt={style:{"text-align":"left"}},Wbt={href:"https://leetcode.com/problems/constructing-two-increasing-arrays",target:"_blank",rel:"noopener noreferrer"},Xbt=t("td",{style:{"text-align":"center"}},null,-1),Fbt={style:{"text-align":"left"}},Gbt=t("code",null,"数组",-1),Tbt=t("code",null,"动态规划",-1),Qbt={style:{"text-align":"left"}},Zbt=t("td",{style:{"text-align":"center"}},"3276",-1),$bt={style:{"text-align":"left"}},t0t={href:"https://leetcode.com/problems/select-cells-in-grid-with-maximum-score",target:"_blank",rel:"noopener noreferrer"},e0t=t("td",{style:{"text-align":"center"}},null,-1),l0t={style:{"text-align":"left"}},o0t=t("code",null,"位运算",-1),n0t=t("code",null,"数组",-1),s0t=t("code",null,"动态规划",-1),d0t=t("code",null,"2+",-1),_0t={style:{"text-align":"left"}},i0t=t("td",{style:{"text-align":"center"}},"3277",-1),a0t={style:{"text-align":"left"}},r0t={href:"https://leetcode.com/problems/maximum-xor-score-subarray-queries",target:"_blank",rel:"noopener noreferrer"},c0t=t("td",{style:{"text-align":"center"}},null,-1),h0t={style:{"text-align":"left"}},u0t=t("code",null,"数组",-1),f0t=t("code",null,"动态规划",-1),g0t={style:{"text-align":"left"}},m0t=t("td",{style:{"text-align":"center"}},"3284",-1),y0t={style:{"text-align":"left"}},x0t={href:"https://leetcode.com/problems/sum-of-consecutive-subarrays",target:"_blank",rel:"noopener noreferrer"},p0t=t("td",{style:{"text-align":"center"}},null,-1),b0t={style:{"text-align":"left"}},k0t=t("code",null,"数组",-1),M0t=t("code",null,"双指针",-1),H0t=t("code",null,"动态规划",-1),I0t={style:{"text-align":"left"}},w0t=t("td",{style:{"text-align":"center"}},"3287",-1),v0t={style:{"text-align":"left"}},q0t={href:"https://leetcode.com/problems/find-the-maximum-sequence-value-of-array",target:"_blank",rel:"noopener noreferrer"},z0t=t("td",{style:{"text-align":"center"}},null,-1),C0t={style:{"text-align":"left"}},O0t=t("code",null,"位运算",-1),j0t=t("code",null,"数组",-1),L0t=t("code",null,"动态规划",-1),E0t={style:{"text-align":"left"}},P0t=t("td",{style:{"text-align":"center"}},"3290",-1),K0t={style:{"text-align":"left"}},V0t={href:"https://leetcode.com/problems/maximum-multiplication-score",target:"_blank",rel:"noopener noreferrer"},N0t=t("td",{style:{"text-align":"center"}},null,-1),D0t={style:{"text-align":"left"}},B0t=t("code",null,"数组",-1),Y0t=t("code",null,"动态规划",-1),A0t={style:{"text-align":"left"}},J0t=t("td",{style:{"text-align":"center"}},"3291",-1),R0t={style:{"text-align":"left"}},S0t={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},U0t=t("td",{style:{"text-align":"center"}},null,-1),W0t={style:{"text-align":"left"}},X0t=t("code",null,"字典树",-1),F0t=t("code",null,"线段树",-1),G0t=t("code",null,"数组",-1),T0t=t("code",null,"6+",-1),Q0t={style:{"text-align":"left"}},Z0t=t("td",{style:{"text-align":"center"}},"3292",-1),$0t={style:{"text-align":"left"}},t8t={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},e8t=t("td",{style:{"text-align":"center"}},null,-1),l8t={style:{"text-align":"left"}},o8t=t("code",null,"线段树",-1),n8t=t("code",null,"数组",-1),s8t=t("code",null,"字符串",-1),d8t=t("code",null,"5+",-1),_8t={style:{"text-align":"left"}},i8t=t("td",{style:{"text-align":"center"}},"3299",-1),a8t={style:{"text-align":"left"}},r8t={href:"https://leetcode.com/problems/sum-of-consecutive-subsequences",target:"_blank",rel:"noopener noreferrer"},c8t=t("td",{style:{"text-align":"center"}},null,-1),h8t={style:{"text-align":"left"}},u8t=t("code",null,"数组",-1),f8t=t("code",null,"哈希表",-1),g8t=t("code",null,"动态规划",-1),m8t={style:{"text-align":"left"}},y8t=t("td",{style:{"text-align":"center"}},"3302",-1),x8t={style:{"text-align":"left"}},p8t={href:"https://leetcode.com/problems/find-the-lexicographically-smallest-valid-sequence",target:"_blank",rel:"noopener noreferrer"},b8t=t("td",{style:{"text-align":"center"}},null,-1),k8t={style:{"text-align":"left"}},M8t=t("code",null,"贪心",-1),H8t=t("code",null,"双指针",-1),I8t=t("code",null,"字符串",-1),w8t=t("code",null,"1+",-1),v8t={style:{"text-align":"left"}},q8t=t("td",{style:{"text-align":"center"}},"3316",-1),z8t={style:{"text-align":"left"}},C8t={href:"https://leetcode.com/problems/find-maximum-removals-from-source-string",target:"_blank",rel:"noopener noreferrer"},O8t=t("td",{style:{"text-align":"center"}},null,-1),j8t={style:{"text-align":"left"}},L8t=t("code",null,"数组",-1),E8t=t("code",null,"哈希表",-1),P8t=t("code",null,"双指针",-1),K8t=t("code",null,"2+",-1),V8t={style:{"text-align":"left"}},N8t=t("td",{style:{"text-align":"center"}},"3317",-1),D8t={style:{"text-align":"left"}},B8t={href:"https://leetcode.com/problems/find-the-number-of-possible-ways-for-an-event",target:"_blank",rel:"noopener noreferrer"},Y8t=t("td",{style:{"text-align":"center"}},null,-1),A8t={style:{"text-align":"left"}},J8t=t("code",null,"数学",-1),R8t=t("code",null,"动态规划",-1),S8t=t("code",null,"组合数学",-1),U8t={style:{"text-align":"left"}},W8t=t("td",{style:{"text-align":"center"}},"3320",-1),X8t={style:{"text-align":"left"}},F8t={href:"https://leetcode.com/problems/count-the-number-of-winning-sequences",target:"_blank",rel:"noopener noreferrer"},G8t=t("td",{style:{"text-align":"center"}},null,-1),T8t={style:{"text-align":"left"}},Q8t=t("code",null,"字符串",-1),Z8t=t("code",null,"动态规划",-1),$8t={style:{"text-align":"left"}},t6t=t("td",{style:{"text-align":"center"}},"LCP 04",-1),e6t={style:{"text-align":"left"}},l6t={href:"https://leetcode.cn/problems/broken-board-dominoes",target:"_blank",rel:"noopener noreferrer"},o6t=t("td",{style:{"text-align":"center"}},null,-1),n6t={style:{"text-align":"left"}},s6t=t("code",null,"位运算",-1),d6t=t("code",null,"图",-1),_6t=t("code",null,"数组",-1),i6t=t("code",null,"2+",-1),a6t={style:{"text-align":"left"}},r6t=t("td",{style:{"text-align":"center"}},"LCP 07",-1),c6t={style:{"text-align":"left"}},h6t={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},u6t=t("td",{style:{"text-align":"center"}},null,-1),f6t={style:{"text-align":"left"}},g6t=t("code",null,"深度优先搜索",-1),m6t=t("code",null,"广度优先搜索",-1),y6t=t("code",null,"图",-1),x6t=t("code",null,"1+",-1),p6t={style:{"text-align":"left"}},b6t=t("td",{style:{"text-align":"center"}},"LCP 09",-1),k6t={style:{"text-align":"left"}},M6t={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},H6t=t("td",{style:{"text-align":"center"}},null,-1),I6t={style:{"text-align":"left"}},w6t=t("code",null,"广度优先搜索",-1),v6t=t("code",null,"线段树",-1),q6t=t("code",null,"数组",-1),z6t=t("code",null,"1+",-1),C6t={style:{"text-align":"left"}},O6t=t("td",{style:{"text-align":"center"}},"LCP 10",-1),j6t={style:{"text-align":"left"}},L6t={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},E6t=t("td",{style:{"text-align":"center"}},null,-1),P6t={style:{"text-align":"left"}},K6t=t("code",null,"树",-1),V6t=t("code",null,"深度优先搜索",-1),N6t=t("code",null,"动态规划",-1),D6t=t("code",null,"1+",-1),B6t={style:{"text-align":"left"}},Y6t=t("td",{style:{"text-align":"center"}},"LCP 13",-1),A6t={style:{"text-align":"left"}},J6t={href:"https://leetcode.cn/problems/xun-bao",target:"_blank",rel:"noopener noreferrer"},R6t=t("td",{style:{"text-align":"center"}},null,-1),S6t={style:{"text-align":"left"}},U6t=t("code",null,"位运算",-1),W6t=t("code",null,"广度优先搜索",-1),X6t=t("code",null,"数组",-1),F6t=t("code",null,"3+",-1),G6t={style:{"text-align":"left"}},T6t=t("td",{style:{"text-align":"center"}},"LCP 14",-1),Q6t={style:{"text-align":"left"}},Z6t={href:"https://leetcode.cn/problems/qie-fen-shu-zu",target:"_blank",rel:"noopener noreferrer"},$6t=t("td",{style:{"text-align":"center"}},null,-1),t7t={style:{"text-align":"left"}},e7t=t("code",null,"数组",-1),l7t=t("code",null,"数学",-1),o7t=t("code",null,"动态规划",-1),n7t=t("code",null,"1+",-1),s7t={style:{"text-align":"left"}},d7t=t("td",{style:{"text-align":"center"}},"LCP 19",-1),_7t={style:{"text-align":"left"}},i7t={href:"https://leetcode.cn/problems/UlBDOe",target:"_blank",rel:"noopener noreferrer"},a7t=t("td",{style:{"text-align":"center"}},null,-1),r7t={style:{"text-align":"left"}},c7t=t("code",null,"字符串",-1),h7t=t("code",null,"动态规划",-1),u7t={style:{"text-align":"left"}},f7t=t("td",{style:{"text-align":"center"}},"LCP 20",-1),g7t={style:{"text-align":"left"}},m7t={href:"https://leetcode.cn/problems/meChtZ",target:"_blank",rel:"noopener noreferrer"},y7t=t("td",{style:{"text-align":"center"}},null,-1),x7t={style:{"text-align":"left"}},p7t=t("code",null,"记忆化搜索",-1),b7t=t("code",null,"数组",-1),k7t=t("code",null,"动态规划",-1),M7t={style:{"text-align":"left"}},H7t=t("td",{style:{"text-align":"center"}},"LCP 25",-1),I7t={style:{"text-align":"left"}},w7t={href:"https://leetcode.cn/problems/Uh984O",target:"_blank",rel:"noopener noreferrer"},v7t=t("td",{style:{"text-align":"center"}},null,-1),q7t={style:{"text-align":"left"}},z7t=t("code",null,"数学",-1),C7t=t("code",null,"动态规划",-1),O7t=t("code",null,"组合数学",-1),j7t={style:{"text-align":"left"}},L7t=t("td",{style:{"text-align":"center"}},"LCP 26",-1),E7t={style:{"text-align":"left"}},P7t={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},K7t=t("td",{style:{"text-align":"center"}},null,-1),V7t={style:{"text-align":"left"}},N7t=t("code",null,"树",-1),D7t=t("code",null,"动态规划",-1),B7t=t("code",null,"二叉树",-1),Y7t={style:{"text-align":"left"}},A7t=t("td",{style:{"text-align":"center"}},"LCP 31",-1),J7t={style:{"text-align":"left"}},R7t={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},S7t=t("td",{style:{"text-align":"center"}},null,-1),U7t={style:{"text-align":"left"}},W7t=t("code",null,"深度优先搜索",-1),X7t=t("code",null,"广度优先搜索",-1),F7t=t("code",null,"数组",-1),G7t=t("code",null,"2+",-1),T7t={style:{"text-align":"left"}},Q7t=t("td",{style:{"text-align":"center"}},"LCP 34",-1),Z7t={style:{"text-align":"left"}},$7t={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},t9t=t("td",{style:{"text-align":"center"}},null,-1),e9t={style:{"text-align":"left"}},l9t=t("code",null,"树",-1),o9t=t("code",null,"动态规划",-1),n9t=t("code",null,"二叉树",-1),s9t={style:{"text-align":"left"}},d9t=t("td",{style:{"text-align":"center"}},"LCP 36",-1),_9t={style:{"text-align":"left"}},i9t={href:"https://leetcode.cn/problems/Up5XYM",target:"_blank",rel:"noopener noreferrer"},a9t=t("td",{style:{"text-align":"center"}},null,-1),r9t={style:{"text-align":"left"}},c9t=t("code",null,"数组",-1),h9t=t("code",null,"动态规划",-1),u9t=t("code",null,"排序",-1),f9t={style:{"text-align":"left"}},g9t=t("td",{style:{"text-align":"center"}},"LCP 38",-1),m9t={style:{"text-align":"left"}},y9t={href:"https://leetcode.cn/problems/7rLGCR",target:"_blank",rel:"noopener noreferrer"},x9t=t("td",{style:{"text-align":"center"}},null,-1),p9t={style:{"text-align":"left"}},b9t=t("code",null,"数组",-1),k9t=t("code",null,"动态规划",-1),M9t=t("code",null,"矩阵",-1),H9t={style:{"text-align":"left"}},I9t=t("td",{style:{"text-align":"center"}},"LCP 43",-1),w9t={style:{"text-align":"left"}},v9t={href:"https://leetcode.cn/problems/Y1VbOX",target:"_blank",rel:"noopener noreferrer"},q9t=t("td",{style:{"text-align":"center"}},null,-1),z9t={style:{"text-align":"left"}},C9t=t("code",null,"数组",-1),O9t=t("code",null,"字符串",-1),j9t=t("code",null,"动态规划",-1),L9t={style:{"text-align":"left"}},E9t=t("td",{style:{"text-align":"center"}},"LCP 45",-1),P9t={style:{"text-align":"left"}},K9t={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},V9t=t("td",{style:{"text-align":"center"}},null,-1),N9t={style:{"text-align":"left"}},D9t=t("code",null,"深度优先搜索",-1),B9t=t("code",null,"广度优先搜索",-1),Y9t=t("code",null,"记忆化搜索",-1),A9t=t("code",null,"3+",-1),J9t={style:{"text-align":"left"}},R9t=t("td",{style:{"text-align":"center"}},"LCP 47",-1),S9t={style:{"text-align":"left"}},U9t={href:"https://leetcode.cn/problems/oPs9Bm",target:"_blank",rel:"noopener noreferrer"},W9t=t("td",{style:{"text-align":"center"}},null,-1),X9t={style:{"text-align":"left"}},F9t=t("code",null,"数组",-1),G9t=t("code",null,"动态规划",-1),T9t={style:{"text-align":"left"}},Q9t=t("td",{style:{"text-align":"center"}},"LCP 53",-1),Z9t={style:{"text-align":"left"}},$9t={href:"https://leetcode.cn/problems/EJvmW4",target:"_blank",rel:"noopener noreferrer"},tkt=t("td",{style:{"text-align":"center"}},null,-1),ekt={style:{"text-align":"left"}},lkt=t("code",null,"位运算",-1),okt=t("code",null,"数组",-1),nkt=t("code",null,"动态规划",-1),skt=t("code",null,"1+",-1),dkt={style:{"text-align":"left"}},_kt=t("td",{style:{"text-align":"center"}},"LCP 57",-1),ikt={style:{"text-align":"left"}},akt={href:"https://leetcode.cn/problems/ZbAuEH",target:"_blank",rel:"noopener noreferrer"},rkt=t("td",{style:{"text-align":"center"}},null,-1),ckt={style:{"text-align":"left"}},hkt=t("code",null,"数组",-1),ukt=t("code",null,"动态规划",-1),fkt=t("code",null,"矩阵",-1),gkt=t("code",null,"1+",-1),mkt={style:{"text-align":"left"}},ykt=t("td",{style:{"text-align":"center"}},"LCP 59",-1),xkt={style:{"text-align":"left"}},pkt={href:"https://leetcode.cn/problems/NfY1m5",target:"_blank",rel:"noopener noreferrer"},bkt=t("td",{style:{"text-align":"center"}},null,-1),kkt={style:{"text-align":"left"}},Mkt=t("code",null,"数组",-1),Hkt=t("code",null,"动态规划",-1),Ikt={style:{"text-align":"left"}},wkt=t("td",{style:{"text-align":"center"}},"LCP 60",-1),vkt={style:{"text-align":"left"}},qkt={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},zkt=t("td",{style:{"text-align":"center"}},null,-1),Ckt={style:{"text-align":"left"}},Okt=t("code",null,"树",-1),jkt=t("code",null,"动态规划",-1),Lkt=t("code",null,"二叉树",-1),Ekt={style:{"text-align":"left"}},Pkt=t("td",{style:{"text-align":"center"}},"LCP 63",-1),Kkt={style:{"text-align":"left"}},Vkt={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},Nkt=t("td",{style:{"text-align":"center"}},null,-1),Dkt={style:{"text-align":"left"}},Bkt=t("code",null,"深度优先搜索",-1),Ykt=t("code",null,"广度优先搜索",-1),Akt=t("code",null,"图",-1),Jkt=t("code",null,"5+",-1),Rkt={style:{"text-align":"left"}},Skt=t("td",{style:{"text-align":"center"}},"LCP 64",-1),Ukt={style:{"text-align":"left"}},Wkt={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},Xkt=t("td",{style:{"text-align":"center"}},null,-1),Fkt={style:{"text-align":"left"}},Gkt=t("code",null,"树",-1),Tkt=t("code",null,"深度优先搜索",-1),Qkt=t("code",null,"动态规划",-1),Zkt=t("code",null,"1+",-1),$kt={style:{"text-align":"left"}},tMt=t("td",{style:{"text-align":"center"}},"LCP 65",-1),eMt={style:{"text-align":"left"}},lMt={href:"https://leetcode.cn/problems/3aqs1c",target:"_blank",rel:"noopener noreferrer"},oMt=t("td",{style:{"text-align":"center"}},null,-1),nMt={style:{"text-align":"left"}},sMt=t("code",null,"数组",-1),dMt=t("code",null,"动态规划",-1),_Mt={style:{"text-align":"left"}},iMt=t("td",{style:{"text-align":"center"}},"LCP 69",-1),aMt={style:{"text-align":"left"}},rMt={href:"https://leetcode.cn/problems/rMeRt2",target:"_blank",rel:"noopener noreferrer"},cMt=t("td",{style:{"text-align":"center"}},null,-1),hMt={style:{"text-align":"left"}},uMt=t("code",null,"位运算",-1),fMt=t("code",null,"数组",-1),gMt=t("code",null,"字符串",-1),mMt=t("code",null,"2+",-1),yMt={style:{"text-align":"left"}},xMt=t("td",{style:{"text-align":"center"}},"LCS 01",-1),pMt={style:{"text-align":"left"}},bMt={href:"https://leetcode.cn/problems/Ju9Xwi",target:"_blank",rel:"noopener noreferrer"},kMt=t("td",{style:{"text-align":"center"}},null,-1),MMt={style:{"text-align":"left"}},HMt=t("code",null,"贪心",-1),IMt=t("code",null,"数学",-1),wMt=t("code",null,"动态规划",-1),vMt={style:{"text-align":"left"}},qMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - I",-1),zMt={style:{"text-align":"left"}},CMt={href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},OMt={style:{"text-align":"center"}},jMt={href:"/problem/jz_offer_10_1",target:"_blank",rel:"noopener noreferrer"},LMt={style:{"text-align":"left"}},EMt=t("code",null,"记忆化搜索",-1),PMt=t("code",null,"数学",-1),KMt=t("code",null,"动态规划",-1),VMt={style:{"text-align":"left"}},NMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - II",-1),DMt={style:{"text-align":"left"}},BMt={href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof",target:"_blank",rel:"noopener noreferrer"},YMt={style:{"text-align":"center"}},AMt={href:"/problem/jz_offer_10_2",target:"_blank",rel:"noopener noreferrer"},JMt={style:{"text-align":"left"}},RMt=t("code",null,"记忆化搜索",-1),SMt=t("code",null,"数学",-1),UMt=t("code",null,"动态规划",-1),WMt={style:{"text-align":"left"}},XMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),FMt={style:{"text-align":"left"}},GMt={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},TMt={style:{"text-align":"center"}},QMt={href:"/problem/jz_offer_13_1",target:"_blank",rel:"noopener noreferrer"},ZMt={style:{"text-align":"left"}},$Mt=t("code",null,"深度优先搜索",-1),tHt=t("code",null,"广度优先搜索",-1),eHt=t("code",null,"动态规划",-1),lHt={style:{"text-align":"left"}},oHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 14 - I",-1),nHt={style:{"text-align":"left"}},sHt={href:"https://leetcode.cn/problems/jian-sheng-zi-lcof",target:"_blank",rel:"noopener noreferrer"},dHt={style:{"text-align":"center"}},_Ht={href:"/problem/jz_offer_14_1",target:"_blank",rel:"noopener noreferrer"},iHt={style:{"text-align":"left"}},aHt=t("code",null,"数学",-1),rHt=t("code",null,"动态规划",-1),cHt={style:{"text-align":"left"}},hHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 14 - II",-1),uHt={style:{"text-align":"left"}},fHt={href:"https://leetcode.cn/problems/jian-sheng-zi-ii-lcof",target:"_blank",rel:"noopener noreferrer"},gHt={style:{"text-align":"center"}},mHt={href:"/problem/jz_offer_14_2",target:"_blank",rel:"noopener noreferrer"},yHt={style:{"text-align":"left"}},xHt=t("code",null,"数学",-1),pHt=t("code",null,"动态规划",-1),bHt={style:{"text-align":"left"}},kHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 19",-1),MHt={style:{"text-align":"left"}},HHt={href:"https://leetcode.cn/problems/zheng-ze-biao-da-shi-pi-pei-lcof",target:"_blank",rel:"noopener noreferrer"},IHt={style:{"text-align":"center"}},wHt={href:"/problem/jz_offer_19_1",target:"_blank",rel:"noopener noreferrer"},vHt={style:{"text-align":"left"}},qHt=t("code",null,"递归",-1),zHt=t("code",null,"字符串",-1),CHt=t("code",null,"动态规划",-1),OHt={style:{"text-align":"left"}},jHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 42",-1),LHt={style:{"text-align":"left"}},EHt={href:"https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof",target:"_blank",rel:"noopener noreferrer"},PHt={style:{"text-align":"center"}},KHt={href:"/problem/jz_offer_42_1",target:"_blank",rel:"noopener noreferrer"},VHt={style:{"text-align":"left"}},NHt=t("code",null,"数组",-1),DHt=t("code",null,"分治",-1),BHt=t("code",null,"动态规划",-1),YHt={style:{"text-align":"left"}},AHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 43",-1),JHt={style:{"text-align":"left"}},RHt={href:"https://leetcode.cn/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof",target:"_blank",rel:"noopener noreferrer"},SHt=t("td",{style:{"text-align":"center"}},null,-1),UHt={style:{"text-align":"left"}},WHt=t("code",null,"递归",-1),XHt=t("code",null,"数学",-1),FHt=t("code",null,"动态规划",-1),GHt={style:{"text-align":"left"}},THt=t("td",{style:{"text-align":"center"}},"剑指 Offer 46",-1),QHt={style:{"text-align":"left"}},ZHt={href:"https://leetcode.cn/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof",target:"_blank",rel:"noopener noreferrer"},$Ht=t("td",{style:{"text-align":"center"}},null,-1),tIt={style:{"text-align":"left"}},eIt=t("code",null,"字符串",-1),lIt=t("code",null,"动态规划",-1),oIt={style:{"text-align":"left"}},nIt=t("td",{style:{"text-align":"center"}},"剑指 Offer 47",-1),sIt={style:{"text-align":"left"}},dIt={href:"https://leetcode.cn/problems/li-wu-de-zui-da-jie-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},_It={style:{"text-align":"center"}},iIt={href:"/problem/jz_offer_47_1",target:"_blank",rel:"noopener noreferrer"},aIt={style:{"text-align":"left"}},rIt=t("code",null,"数组",-1),cIt=t("code",null,"动态规划",-1),hIt=t("code",null,"矩阵",-1),uIt={style:{"text-align":"left"}},fIt=t("td",{style:{"text-align":"center"}},"剑指 Offer 49",-1),gIt={style:{"text-align":"left"}},mIt={href:"https://leetcode.cn/problems/chou-shu-lcof",target:"_blank",rel:"noopener noreferrer"},yIt={style:{"text-align":"center"}},xIt={href:"/problem/jz_offer_49_1",target:"_blank",rel:"noopener noreferrer"},pIt={style:{"text-align":"left"}},bIt=t("code",null,"哈希表",-1),kIt=t("code",null,"数学",-1),MIt=t("code",null,"动态规划",-1),HIt=t("code",null,"1+",-1),IIt={style:{"text-align":"left"}},wIt=t("td",{style:{"text-align":"center"}},"剑指 Offer 60",-1),vIt={style:{"text-align":"left"}},qIt={href:"https://leetcode.cn/problems/nge-tou-zi-de-dian-shu-lcof",target:"_blank",rel:"noopener noreferrer"},zIt={style:{"text-align":"center"}},CIt={href:"/problem/jz_offer_60_1",target:"_blank",rel:"noopener noreferrer"},OIt={style:{"text-align":"left"}},jIt=t("code",null,"数学",-1),LIt=t("code",null,"动态规划",-1),EIt=t("code",null,"概率与统计",-1),PIt={style:{"text-align":"left"}},KIt=t("td",{style:{"text-align":"center"}},"剑指 Offer 63",-1),VIt={style:{"text-align":"left"}},NIt={href:"https://leetcode.cn/problems/gu-piao-de-zui-da-li-run-lcof",target:"_blank",rel:"noopener noreferrer"},DIt={style:{"text-align":"center"}},BIt={href:"/problem/jz_offer_63_1",target:"_blank",rel:"noopener noreferrer"},YIt={style:{"text-align":"left"}},AIt=t("code",null,"数组",-1),JIt=t("code",null,"动态规划",-1),RIt={style:{"text-align":"left"}},SIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 100",-1),UIt={style:{"text-align":"left"}},WIt={href:"https://leetcode.cn/problems/IlPe0q",target:"_blank",rel:"noopener noreferrer"},XIt=t("td",{style:{"text-align":"center"}},null,-1),FIt={style:{"text-align":"left"}},GIt=t("code",null,"数组",-1),TIt=t("code",null,"动态规划",-1),QIt={style:{"text-align":"left"}},ZIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 102",-1),$It={style:{"text-align":"left"}},twt={href:"https://leetcode.cn/problems/YaVDxD",target:"_blank",rel:"noopener noreferrer"},ewt=t("td",{style:{"text-align":"center"}},null,-1),lwt={style:{"text-align":"left"}},owt=t("code",null,"数组",-1),nwt=t("code",null,"动态规划",-1),swt=t("code",null,"回溯",-1),dwt={style:{"text-align":"left"}},_wt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 103",-1),iwt={style:{"text-align":"left"}},awt={href:"https://leetcode.cn/problems/gaM7Ch",target:"_blank",rel:"noopener noreferrer"},rwt=t("td",{style:{"text-align":"center"}},null,-1),cwt={style:{"text-align":"left"}},hwt=t("code",null,"广度优先搜索",-1),uwt=t("code",null,"数组",-1),fwt=t("code",null,"动态规划",-1),gwt={style:{"text-align":"left"}},mwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 104",-1),ywt={style:{"text-align":"left"}},xwt={href:"https://leetcode.cn/problems/D0F0SV",target:"_blank",rel:"noopener noreferrer"},pwt=t("td",{style:{"text-align":"center"}},null,-1),bwt={style:{"text-align":"left"}},kwt=t("code",null,"数组",-1),Mwt=t("code",null,"动态规划",-1),Hwt={style:{"text-align":"left"}},Iwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 107",-1),wwt={style:{"text-align":"left"}},vwt={href:"https://leetcode.cn/problems/2bCMpM",target:"_blank",rel:"noopener noreferrer"},qwt=t("td",{style:{"text-align":"center"}},null,-1),zwt={style:{"text-align":"left"}},Cwt=t("code",null,"广度优先搜索",-1),Owt=t("code",null,"数组",-1),jwt=t("code",null,"动态规划",-1),Lwt=t("code",null,"1+",-1),Ewt={style:{"text-align":"left"}},Pwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),Kwt={style:{"text-align":"left"}},Vwt={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},Nwt=t("td",{style:{"text-align":"center"}},null,-1),Dwt={style:{"text-align":"left"}},Bwt=t("code",null,"深度优先搜索",-1),Ywt=t("code",null,"广度优先搜索",-1),Awt=t("code",null,"图",-1),Jwt=t("code",null,"5+",-1),Rwt={style:{"text-align":"left"}},Swt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 20",-1),Uwt={style:{"text-align":"left"}},Wwt={href:"https://leetcode.cn/problems/a7VOhD",target:"_blank",rel:"noopener noreferrer"},Xwt=t("td",{style:{"text-align":"center"}},null,-1),Fwt={style:{"text-align":"left"}},Gwt=t("code",null,"字符串",-1),Twt=t("code",null,"动态规划",-1),Qwt={style:{"text-align":"left"}},Zwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 3",-1),$wt={style:{"text-align":"left"}},tvt={href:"https://leetcode.cn/problems/w3tCBm",target:"_blank",rel:"noopener noreferrer"},evt=t("td",{style:{"text-align":"center"}},null,-1),lvt={style:{"text-align":"left"}},ovt=t("code",null,"位运算",-1),nvt=t("code",null,"动态规划",-1),svt={style:{"text-align":"left"}},dvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),_vt={style:{"text-align":"left"}},ivt={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},avt=t("td",{style:{"text-align":"center"}},null,-1),rvt={style:{"text-align":"left"}},cvt=t("code",null,"栈",-1),hvt=t("code",null,"数组",-1),uvt=t("code",null,"动态规划",-1),fvt=t("code",null,"2+",-1),gvt={style:{"text-align":"left"}},mvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),yvt={style:{"text-align":"left"}},xvt={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},pvt=t("td",{style:{"text-align":"center"}},null,-1),bvt={style:{"text-align":"left"}},kvt=t("code",null,"树",-1),Mvt=t("code",null,"深度优先搜索",-1),Hvt=t("code",null,"动态规划",-1),Ivt=t("code",null,"1+",-1),wvt={style:{"text-align":"left"}},vvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 85",-1),qvt={style:{"text-align":"left"}},zvt={href:"https://leetcode.cn/problems/IDBivT",target:"_blank",rel:"noopener noreferrer"},Cvt=t("td",{style:{"text-align":"center"}},null,-1),Ovt={style:{"text-align":"left"}},jvt=t("code",null,"字符串",-1),Lvt=t("code",null,"动态规划",-1),Evt=t("code",null,"回溯",-1),Pvt={style:{"text-align":"left"}},Kvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 88",-1),Vvt={style:{"text-align":"left"}},Nvt={href:"https://leetcode.cn/problems/GzCJIP",target:"_blank",rel:"noopener noreferrer"},Dvt=t("td",{style:{"text-align":"center"}},null,-1),Bvt={style:{"text-align":"left"}},Yvt=t("code",null,"数组",-1),Avt=t("code",null,"动态规划",-1),Jvt={style:{"text-align":"left"}},Rvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 89",-1),Svt={style:{"text-align":"left"}},Uvt={href:"https://leetcode.cn/problems/Gu0c2T",target:"_blank",rel:"noopener noreferrer"},Wvt=t("td",{style:{"text-align":"center"}},null,-1),Xvt={style:{"text-align":"left"}},Fvt=t("code",null,"数组",-1),Gvt=t("code",null,"动态规划",-1),Tvt={style:{"text-align":"left"}},Qvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 90",-1),Zvt={style:{"text-align":"left"}},$vt={href:"https://leetcode.cn/problems/PzWKhm",target:"_blank",rel:"noopener noreferrer"},tqt=t("td",{style:{"text-align":"center"}},null,-1),eqt={style:{"text-align":"left"}},lqt=t("code",null,"数组",-1),oqt=t("code",null,"动态规划",-1),nqt={style:{"text-align":"left"}},sqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 91",-1),dqt={style:{"text-align":"left"}},_qt={href:"https://leetcode.cn/problems/JEj789",target:"_blank",rel:"noopener noreferrer"},iqt=t("td",{style:{"text-align":"center"}},null,-1),aqt={style:{"text-align":"left"}},rqt=t("code",null,"数组",-1),cqt=t("code",null,"动态规划",-1),hqt={style:{"text-align":"left"}},uqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 92",-1),fqt={style:{"text-align":"left"}},gqt={href:"https://leetcode.cn/problems/cyJERH",target:"_blank",rel:"noopener noreferrer"},mqt=t("td",{style:{"text-align":"center"}},null,-1),yqt={style:{"text-align":"left"}},xqt=t("code",null,"字符串",-1),pqt=t("code",null,"动态规划",-1),bqt={style:{"text-align":"left"}},kqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 93",-1),Mqt={style:{"text-align":"left"}},Hqt={href:"https://leetcode.cn/problems/Q91FMA",target:"_blank",rel:"noopener noreferrer"},Iqt=t("td",{style:{"text-align":"center"}},null,-1),wqt={style:{"text-align":"left"}},vqt=t("code",null,"数组",-1),qqt=t("code",null,"哈希表",-1),zqt=t("code",null,"动态规划",-1),Cqt={style:{"text-align":"left"}},Oqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 94",-1),jqt={style:{"text-align":"left"}},Lqt={href:"https://leetcode.cn/problems/omKAoA",target:"_blank",rel:"noopener noreferrer"},Eqt=t("td",{style:{"text-align":"center"}},null,-1),Pqt={style:{"text-align":"left"}},Kqt=t("code",null,"字符串",-1),Vqt=t("code",null,"动态规划",-1),Nqt={style:{"text-align":"left"}},Dqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 95",-1),Bqt={style:{"text-align":"left"}},Yqt={href:"https://leetcode.cn/problems/qJnOS7",target:"_blank",rel:"noopener noreferrer"},Aqt=t("td",{style:{"text-align":"center"}},null,-1),Jqt={style:{"text-align":"left"}},Rqt=t("code",null,"字符串",-1),Sqt=t("code",null,"动态规划",-1),Uqt={style:{"text-align":"left"}},Wqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 96",-1),Xqt={style:{"text-align":"left"}},Fqt={href:"https://leetcode.cn/problems/IY6buf",target:"_blank",rel:"noopener noreferrer"},Gqt=t("td",{style:{"text-align":"center"}},null,-1),Tqt={style:{"text-align":"left"}},Qqt=t("code",null,"字符串",-1),Zqt=t("code",null,"动态规划",-1),$qt={style:{"text-align":"left"}},tzt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 97",-1),ezt={style:{"text-align":"left"}},lzt={href:"https://leetcode.cn/problems/21dk04",target:"_blank",rel:"noopener noreferrer"},ozt=t("td",{style:{"text-align":"center"}},null,-1),nzt={style:{"text-align":"left"}},szt=t("code",null,"字符串",-1),dzt=t("code",null,"动态规划",-1),_zt={style:{"text-align":"left"}},izt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 98",-1),azt={style:{"text-align":"left"}},rzt={href:"https://leetcode.cn/problems/2AoeFn",target:"_blank",rel:"noopener noreferrer"},czt=t("td",{style:{"text-align":"center"}},null,-1),hzt={style:{"text-align":"left"}},uzt=t("code",null,"数学",-1),fzt=t("code",null,"动态规划",-1),gzt=t("code",null,"组合数学",-1),mzt={style:{"text-align":"left"}},yzt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 99",-1),xzt={style:{"text-align":"left"}},pzt={href:"https://leetcode.cn/problems/0i0mDW",target:"_blank",rel:"noopener noreferrer"},bzt=t("td",{style:{"text-align":"center"}},null,-1),kzt={style:{"text-align":"left"}},Mzt=t("code",null,"数组",-1),Hzt=t("code",null,"动态规划",-1),Izt=t("code",null,"矩阵",-1),wzt={style:{"text-align":"left"}},vzt=t("td",{style:{"text-align":"center"}},"面试题 05.03",-1),qzt={style:{"text-align":"left"}},zzt={href:"https://leetcode.cn/problems/reverse-bits-lcci",target:"_blank",rel:"noopener noreferrer"},Czt=t("td",{style:{"text-align":"center"}},null,-1),Ozt={style:{"text-align":"left"}},jzt=t("code",null,"位运算",-1),Lzt=t("code",null,"动态规划",-1),Ezt={style:{"text-align":"left"}},Pzt=t("td",{style:{"text-align":"center"}},"面试题 08.01",-1),Kzt={style:{"text-align":"left"}},Vzt={href:"https://leetcode.cn/problems/three-steps-problem-lcci",target:"_blank",rel:"noopener noreferrer"},Nzt=t("td",{style:{"text-align":"center"}},null,-1),Dzt={style:{"text-align":"left"}},Bzt=t("code",null,"记忆化搜索",-1),Yzt=t("code",null,"数学",-1),Azt=t("code",null,"动态规划",-1),Jzt={style:{"text-align":"left"}},Rzt=t("td",{style:{"text-align":"center"}},"面试题 08.02",-1),Szt={style:{"text-align":"left"}},Uzt={href:"https://leetcode.cn/problems/robot-in-a-grid-lcci",target:"_blank",rel:"noopener noreferrer"},Wzt=t("td",{style:{"text-align":"center"}},null,-1),Xzt={style:{"text-align":"left"}},Fzt=t("code",null,"数组",-1),Gzt=t("code",null,"动态规划",-1),Tzt=t("code",null,"回溯",-1),Qzt=t("code",null,"1+",-1),Zzt={style:{"text-align":"left"}},$zt=t("td",{style:{"text-align":"center"}},"面试题 08.09",-1),tCt={style:{"text-align":"left"}},eCt={href:"https://leetcode.cn/problems/bracket-lcci",target:"_blank",rel:"noopener noreferrer"},lCt=t("td",{style:{"text-align":"center"}},null,-1),oCt={style:{"text-align":"left"}},nCt=t("code",null,"字符串",-1),sCt=t("code",null,"动态规划",-1),dCt=t("code",null,"回溯",-1),_Ct={style:{"text-align":"left"}},iCt=t("td",{style:{"text-align":"center"}},"面试题 08.11",-1),aCt={style:{"text-align":"left"}},rCt={href:"https://leetcode.cn/problems/coin-lcci",target:"_blank",rel:"noopener noreferrer"},cCt=t("td",{style:{"text-align":"center"}},null,-1),hCt={style:{"text-align":"left"}},uCt=t("code",null,"数组",-1),fCt=t("code",null,"数学",-1),gCt=t("code",null,"动态规划",-1),mCt={style:{"text-align":"left"}},yCt=t("td",{style:{"text-align":"center"}},"面试题 08.13",-1),xCt={style:{"text-align":"left"}},pCt={href:"https://leetcode.cn/problems/pile-box-lcci",target:"_blank",rel:"noopener noreferrer"},bCt=t("td",{style:{"text-align":"center"}},null,-1),kCt={style:{"text-align":"left"}},MCt=t("code",null,"数组",-1),HCt=t("code",null,"动态规划",-1),ICt=t("code",null,"排序",-1),wCt={style:{"text-align":"left"}},vCt=t("td",{style:{"text-align":"center"}},"面试题 08.14",-1),qCt={style:{"text-align":"left"}},zCt={href:"https://leetcode.cn/problems/boolean-evaluation-lcci",target:"_blank",rel:"noopener noreferrer"},CCt=t("td",{style:{"text-align":"center"}},null,-1),OCt={style:{"text-align":"left"}},jCt=t("code",null,"记忆化搜索",-1),LCt=t("code",null,"字符串",-1),ECt=t("code",null,"动态规划",-1),PCt={style:{"text-align":"left"}},KCt=t("td",{style:{"text-align":"center"}},"面试题 16.17",-1),VCt={style:{"text-align":"left"}},NCt={href:"https://leetcode.cn/problems/contiguous-sequence-lcci",target:"_blank",rel:"noopener noreferrer"},DCt=t("td",{style:{"text-align":"center"}},null,-1),BCt={style:{"text-align":"left"}},YCt=t("code",null,"数组",-1),ACt=t("code",null,"分治",-1),JCt=t("code",null,"动态规划",-1),RCt={style:{"text-align":"left"}},SCt=t("td",{style:{"text-align":"center"}},"面试题 17.06",-1),UCt={style:{"text-align":"left"}},WCt={href:"https://leetcode.cn/problems/number-of-2s-in-range-lcci",target:"_blank",rel:"noopener noreferrer"},XCt=t("td",{style:{"text-align":"center"}},null,-1),FCt={style:{"text-align":"left"}},GCt=t("code",null,"递归",-1),TCt=t("code",null,"数学",-1),QCt=t("code",null,"动态规划",-1),ZCt={style:{"text-align":"left"}},$Ct=t("td",{style:{"text-align":"center"}},"面试题 17.08",-1),tOt={style:{"text-align":"left"}},eOt={href:"https://leetcode.cn/problems/circus-tower-lcci",target:"_blank",rel:"noopener noreferrer"},lOt=t("td",{style:{"text-align":"center"}},null,-1),oOt={style:{"text-align":"left"}},nOt=t("code",null,"数组",-1),sOt=t("code",null,"二分查找",-1),dOt=t("code",null,"动态规划",-1),_Ot=t("code",null,"1+",-1),iOt={style:{"text-align":"left"}},aOt=t("td",{style:{"text-align":"center"}},"面试题 17.09",-1),rOt={style:{"text-align":"left"}},cOt={href:"https://leetcode.cn/problems/get-kth-magic-number-lcci",target:"_blank",rel:"noopener noreferrer"},hOt=t("td",{style:{"text-align":"center"}},null,-1),uOt={style:{"text-align":"left"}},fOt=t("code",null,"哈希表",-1),gOt=t("code",null,"数学",-1),mOt=t("code",null,"动态规划",-1),yOt=t("code",null,"1+",-1),xOt={style:{"text-align":"left"}},pOt=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),bOt={style:{"text-align":"left"}},kOt={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},MOt=t("td",{style:{"text-align":"center"}},null,-1),HOt={style:{"text-align":"left"}},IOt=t("code",null,"字典树",-1),wOt=t("code",null,"数组",-1),vOt=t("code",null,"哈希表",-1),qOt=t("code",null,"4+",-1),zOt={style:{"text-align":"left"}},COt=t("td",{style:{"text-align":"center"}},"面试题 17.16",-1),OOt={style:{"text-align":"left"}},jOt={href:"https://leetcode.cn/problems/the-masseuse-lcci",target:"_blank",rel:"noopener noreferrer"},LOt=t("td",{style:{"text-align":"center"}},null,-1),EOt={style:{"text-align":"left"}},POt=t("code",null,"数组",-1),KOt=t("code",null,"动态规划",-1),VOt={style:{"text-align":"left"}},NOt=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),DOt={style:{"text-align":"left"}},BOt={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},YOt=t("td",{style:{"text-align":"center"}},null,-1),AOt={style:{"text-align":"left"}},JOt=t("code",null,"栈",-1),ROt=t("code",null,"数组",-1),SOt=t("code",null,"双指针",-1),UOt=t("code",null,"2+",-1),WOt={style:{"text-align":"left"}},XOt=t("td",{style:{"text-align":"center"}},"面试题 17.23",-1),FOt={style:{"text-align":"left"}},GOt={href:"https://leetcode.cn/problems/max-black-square-lcci",target:"_blank",rel:"noopener noreferrer"},TOt=t("td",{style:{"text-align":"center"}},null,-1),QOt={style:{"text-align":"left"}},ZOt=t("code",null,"数组",-1),$Ot=t("code",null,"动态规划",-1),tjt=t("code",null,"矩阵",-1),ejt={style:{"text-align":"left"}},ljt=t("td",{style:{"text-align":"center"}},"面试题 17.24",-1),ojt={style:{"text-align":"left"}},njt={href:"https://leetcode.cn/problems/max-submatrix-lcci",target:"_blank",rel:"noopener noreferrer"},sjt=t("td",{style:{"text-align":"center"}},null,-1),djt={style:{"text-align":"left"}},_jt=t("code",null,"数组",-1),ijt=t("code",null,"动态规划",-1),ajt=t("code",null,"矩阵",-1),rjt=t("code",null,"1+",-1),cjt={style:{"text-align":"left"}};function hjt(ujt,fjt){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),r("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[S]),_:1})]),U,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[T]),_:1}),l(),Q,l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[Pt]),_:1})])]),Kt,c(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Nt,t("td",Dt,[t("a",Bt,[l("最长回文子串"),e(s)])]),t("td",Yt,[t("a",At,[l("[✓]"),e(s)])]),t("td",Jt,[e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Rt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[St]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ut]),_:1})]),t("td",Wt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xt,t("td",Ft,[t("a",Gt,[l("正则表达式匹配"),e(s)])]),t("td",Tt,[t("a",Qt,[l("[✓]"),e(s)])]),t("td",Zt,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ee]),_:1})]),t("td",le,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("括号生成"),e(s)])]),t("td",de,[t("a",_e,[l("[✓]"),e(s)])]),t("td",ie,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[re]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[ce]),_:1})]),t("td",he,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("最长有效括号"),e(s)])]),t("td",me,[t("a",ye,[l("[✓]"),e(s)])]),t("td",xe,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[pe]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ke]),_:1})]),t("td",Me,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[He,t("td",Ie,[t("a",we,[l("接雨水"),e(s)])]),t("td",ve,[t("a",qe,[l("[✓]"),e(s)])]),t("td",ze,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Oe]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[je]),_:1}),l(),Le]),t("td",Ee,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pe,t("td",Ke,[t("a",Ve,[l("通配符匹配"),e(s)])]),t("td",Ne,[t("a",De,[l("[✓]"),e(s)])]),t("td",Be,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ye]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Ae]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Je]),_:1}),l(),Re]),t("td",Se,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ue,t("td",We,[t("a",Xe,[l("跳跃游戏 II"),e(s)])]),t("td",Fe,[t("a",Ge,[l("[✓]"),e(s)])]),t("td",Te,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Qe]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ze]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$e]),_:1})]),t("td",tl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[el,t("td",ll,[t("a",ol,[l("最大子数组和"),e(s)])]),t("td",nl,[t("a",sl,[l("[✓]"),e(s)])]),t("td",dl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_l]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[il]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[al]),_:1})]),t("td",rl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cl,t("td",hl,[t("a",ul,[l("跳跃游戏"),e(s)])]),t("td",fl,[t("a",gl,[l("[✓]"),e(s)])]),t("td",ml,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xl]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[pl]),_:1})]),t("td",bl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kl,t("td",Ml,[t("a",Hl,[l("不同路径"),e(s)])]),t("td",Il,[t("a",wl,[l("[✓]"),e(s)])]),t("td",vl,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zl]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[Cl]),_:1})]),t("td",Ol,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jl,t("td",Ll,[t("a",El,[l("不同路径 II"),e(s)])]),t("td",Pl,[t("a",Kl,[l("[✓]"),e(s)])]),t("td",Vl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Nl]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Dl]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Bl]),_:1})]),t("td",Yl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Al,t("td",Jl,[t("a",Rl,[l("最小路径和"),e(s)])]),t("td",Sl,[t("a",Ul,[l("[✓]"),e(s)])]),t("td",Wl,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xl]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Fl]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Gl]),_:1})]),t("td",Tl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ql,t("td",Zl,[t("a",$l,[l("爬楼梯"),e(s)])]),t("td",to,[t("a",eo,[l("[✓]"),e(s)])]),t("td",lo,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[oo]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[no]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[so]),_:1})]),t("td",_o,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[io,t("td",ao,[t("a",ro,[l("编辑距离"),e(s)])]),t("td",co,[t("a",ho,[l("[✓]"),e(s)])]),t("td",uo,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[fo]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[go]),_:1})]),t("td",mo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yo,t("td",xo,[t("a",po,[l("最大矩形"),e(s)])]),t("td",bo,[t("a",ko,[l("[✓]"),e(s)])]),t("td",Mo,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ho]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Io]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wo]),_:1}),l(),vo]),t("td",qo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zo,t("td",Co,[t("a",Oo,[l("扰乱字符串"),e(s)])]),jo,t("td",Lo,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Eo]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Po]),_:1})]),t("td",Ko,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vo,t("td",No,[t("a",Do,[l("解码方法"),e(s)])]),Bo,t("td",Yo,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ao]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Jo]),_:1})]),t("td",Ro,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[So,t("td",Uo,[t("a",Wo,[l("不同的二叉搜索树 II"),e(s)])]),t("td",Xo,[t("a",Fo,[l("[✓]"),e(s)])]),t("td",Go,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[To]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Qo]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Zo]),_:1}),l(),$o]),t("td",tn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[en,t("td",ln,[t("a",on,[l("不同的二叉搜索树"),e(s)])]),t("td",nn,[t("a",sn,[l("[✓]"),e(s)])]),t("td",dn,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_n]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[an]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[rn]),_:1}),l(),cn]),t("td",hn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[un,t("td",fn,[t("a",gn,[l("交错字符串"),e(s)])]),t("td",mn,[t("a",yn,[l("[✓]"),e(s)])]),t("td",xn,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[pn]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[bn]),_:1})]),t("td",kn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mn,t("td",Hn,[t("a",In,[l("不同的子序列"),e(s)])]),wn,t("td",vn,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[qn]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zn]),_:1})]),t("td",Cn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[On,t("td",jn,[t("a",Ln,[l("杨辉三角"),e(s)])]),t("td",En,[t("a",Pn,[l("[✓]"),e(s)])]),t("td",Kn,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Vn]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Nn]),_:1})]),t("td",Dn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Bn,t("td",Yn,[t("a",An,[l("杨辉三角 II"),e(s)])]),Jn,t("td",Rn,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sn]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Un]),_:1})]),t("td",Wn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xn,t("td",Fn,[t("a",Gn,[l("三角形最小路径和"),e(s)])]),t("td",Tn,[t("a",Qn,[l("[✓]"),e(s)])]),t("td",Zn,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$n]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ts]),_:1})]),t("td",es,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ls,t("td",os,[t("a",ns,[l("买卖股票的最佳时机"),e(s)])]),t("td",ss,[t("a",ds,[l("[✓]"),e(s)])]),t("td",_s,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[is]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[as]),_:1})]),t("td",rs,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cs,t("td",hs,[t("a",us,[l("买卖股票的最佳时机 II"),e(s)])]),t("td",fs,[t("a",gs,[l("[✓]"),e(s)])]),t("td",ms,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[ys]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xs]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ps]),_:1})]),t("td",bs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ks,t("td",Ms,[t("a",Hs,[l("买卖股票的最佳时机 III"),e(s)])]),t("td",Is,[t("a",ws,[l("[✓]"),e(s)])]),t("td",vs,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qs]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zs]),_:1})]),t("td",Cs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Os,t("td",js,[t("a",Ls,[l("二叉树中的最大路径和"),e(s)])]),t("td",Es,[t("a",Ps,[l("[✓]"),e(s)])]),t("td",Ks,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Vs]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ns]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ds]),_:1}),l(),Bs]),t("td",Ys,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[As,t("td",Js,[t("a",Rs,[l("分割回文串"),e(s)])]),t("td",Ss,[t("a",Us,[l("[✓]"),e(s)])]),t("td",Ws,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Xs]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Fs]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Gs]),_:1})]),t("td",Ts,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qs,t("td",Zs,[t("a",$s,[l("分割回文串 II"),e(s)])]),td,t("td",ed,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ld]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[od]),_:1})]),t("td",nd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sd,t("td",dd,[t("a",_d,[l("单词拆分"),e(s)])]),t("td",id,[t("a",ad,[l("[✓]"),e(s)])]),t("td",rd,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[cd]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[hd]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ud]),_:1}),l(),fd]),t("td",gd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[md,t("td",yd,[t("a",xd,[l("单词拆分 II"),e(s)])]),pd,t("td",bd,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[kd]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Md]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hd]),_:1}),l(),Id]),t("td",wd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vd,t("td",qd,[t("a",zd,[l("乘积最大子数组"),e(s)])]),t("td",Cd,[t("a",Od,[l("[✓]"),e(s)])]),t("td",jd,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ld]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ed]),_:1})]),t("td",Pd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kd,t("td",Vd,[t("a",Nd,[l("地下城游戏"),e(s)])]),t("td",Dd,[t("a",Bd,[l("[✓]"),e(s)])]),t("td",Yd,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ad]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Rd]),_:1})]),t("td",Sd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ud,t("td",Wd,[t("a",Xd,[l("买卖股票的最佳时机 IV"),e(s)])]),t("td",Fd,[t("a",Gd,[l("[✓]"),e(s)])]),t("td",Td,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qd]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Zd]),_:1})]),t("td",$d,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t_,t("td",e_,[t("a",l_,[l("打家劫舍"),e(s)])]),t("td",o_,[t("a",n_,[l("[✓]"),e(s)])]),t("td",s_,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[d_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[__]),_:1})]),t("td",i_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a_,t("td",r_,[t("a",c_,[l("打家劫舍 II"),e(s)])]),h_,t("td",u_,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[f_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[g_]),_:1})]),t("td",m_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y_,t("td",x_,[t("a",p_,[l("最大正方形"),e(s)])]),t("td",b_,[t("a",k_,[l("[✓]"),e(s)])]),t("td",M_,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[H_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[I_]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[w_]),_:1})]),t("td",v_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q_,t("td",z_,[t("a",C_,[l("数字 1 的个数"),e(s)])]),O_,t("td",j_,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[L_]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[E_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[P_]),_:1})]),t("td",K_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V_,t("td",N_,[t("a",D_,[l("为运算表达式设计优先级"),e(s)])]),B_,t("td",Y_,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[A_]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[J_]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[R_]),_:1}),l(),S_]),t("td",U_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W_,t("td",X_,[t("a",F_,[l("粉刷房子"),e(s)])]),G_,t("td",T_,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Q_]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Z_]),_:1})]),t("td",$_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ti,t("td",ei,[t("a",li,[l("丑数 II"),e(s)])]),t("td",oi,[t("a",ni,[l("[✓]"),e(s)])]),t("td",si,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[di]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[_i]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ii]),_:1}),l(),ai]),t("td",ri,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ci,t("td",hi,[t("a",ui,[l("粉刷房子 II"),e(s)])]),fi,t("td",gi,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mi]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[yi]),_:1})]),t("td",xi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pi,t("td",bi,[t("a",ki,[l("栅栏涂色"),e(s)])]),Mi,t("td",Hi,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ii]),_:1})]),t("td",wi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vi,t("td",qi,[t("a",zi,[l("完全平方数"),e(s)])]),t("td",Ci,[t("a",Oi,[l("[✓]"),e(s)])]),t("td",ji,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Li]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Ei]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Pi]),_:1})]),t("td",Ki,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vi,t("td",Ni,[t("a",Di,[l("翻转游戏 II"),e(s)])]),Bi,t("td",Yi,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Ai]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Ji]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ri]),_:1}),l(),Si]),t("td",Ui,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wi,t("td",Xi,[t("a",Fi,[l("最长递增子序列"),e(s)])]),t("td",Gi,[t("a",Ti,[l("[✓]"),e(s)])]),t("td",Qi,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zi]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[$i]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ta]),_:1})]),t("td",ea,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[la,t("td",oa,[t("a",na,[l("买卖股票的最佳时机含冷冻期"),e(s)])]),t("td",sa,[t("a",da,[l("[✓]"),e(s)])]),t("td",_a,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ia]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[aa]),_:1})]),t("td",ra,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ca,t("td",ha,[t("a",ua,[l("戳气球"),e(s)])]),fa,t("td",ga,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ma]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ya]),_:1})]),t("td",xa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pa,t("td",ba,[t("a",ka,[l("超级丑数"),e(s)])]),Ma,t("td",Ha,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ia]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[wa]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[va]),_:1})]),t("td",qa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[za,t("td",Ca,[t("a",Oa,[l("零钱兑换"),e(s)])]),t("td",ja,[t("a",La,[l("[✓]"),e(s)])]),t("td",Ea,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Pa]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ka]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Va]),_:1})]),t("td",Na,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Da,t("td",Ba,[t("a",Ya,[l("矩阵中的最长递增路径"),e(s)])]),Aa,t("td",Ja,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ra]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Sa]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ua]),_:1}),l(),Wa]),t("td",Xa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fa,t("td",Ga,[t("a",Ta,[l("最大二叉搜索子树"),e(s)])]),Qa,t("td",Za,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$a]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tr]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[er]),_:1}),l(),lr]),t("td",or,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nr,t("td",sr,[t("a",dr,[l("打家劫舍 III"),e(s)])]),_r,t("td",ir,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ar]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[cr]),_:1}),l(),hr]),t("td",ur,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fr,t("td",gr,[t("a",mr,[l("比特位计数"),e(s)])]),yr,t("td",xr,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[pr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[br]),_:1})]),t("td",kr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mr,t("td",Hr,[t("a",Ir,[l("整数拆分"),e(s)])]),t("td",wr,[t("a",vr,[l("[✓]"),e(s)])]),t("td",qr,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[zr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Cr]),_:1})]),t("td",Or,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jr,t("td",Lr,[t("a",Er,[l("安卓系统手势解锁"),e(s)])]),Pr,t("td",Kr,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Vr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Nr]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Dr]),_:1}),l(),Br]),t("td",Yr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ar,t("td",Jr,[t("a",Rr,[l("俄罗斯套娃信封问题"),e(s)])]),t("td",Sr,[t("a",Ur,[l("[✓]"),e(s)])]),t("td",Wr,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xr]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Fr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Gr]),_:1}),l(),Tr]),t("td",Qr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zr,t("td",$r,[t("a",tc,[l("统计各位数字都不同的数字个数"),e(s)])]),ec,t("td",lc,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[oc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nc]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[sc]),_:1})]),t("td",dc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_c,t("td",ic,[t("a",ac,[l("轰炸敌人"),e(s)])]),rc,t("td",cc,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uc]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[fc]),_:1})]),t("td",gc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mc,t("td",yc,[t("a",xc,[l("最大整除子集"),e(s)])]),pc,t("td",bc,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kc]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Mc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Hc]),_:1}),l(),Ic]),t("td",wc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vc,t("td",qc,[t("a",zc,[l("猜数字大小 II"),e(s)])]),t("td",Cc,[t("a",Oc,[l("[✓]"),e(s)])]),t("td",jc,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Lc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[Pc]),_:1})]),t("td",Kc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vc,t("td",Nc,[t("a",Dc,[l("摆动序列"),e(s)])]),Bc,t("td",Yc,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ac]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Jc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Rc]),_:1})]),t("td",Sc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uc,t("td",Wc,[t("a",Xc,[l("组合总和 Ⅳ"),e(s)])]),Fc,t("td",Gc,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Tc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Qc]),_:1})]),t("td",Zc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$c,t("td",th,[t("a",eh,[l("判断子序列"),e(s)])]),t("td",lh,[t("a",oh,[l("[✓]"),e(s)])]),t("td",nh,[e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[sh]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[dh]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_h]),_:1})]),t("td",ih,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ah,t("td",rh,[t("a",ch,[l("旋转函数"),e(s)])]),hh,t("td",uh,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fh]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[gh]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[mh]),_:1})]),t("td",yh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xh,t("td",ph,[t("a",bh,[l("整数替换"),e(s)])]),kh,t("td",Mh,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Hh]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Ih]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[wh]),_:1}),l(),vh]),t("td",qh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zh,t("td",Ch,[t("a",Oh,[l("青蛙过河"),e(s)])]),jh,t("td",Lh,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Eh]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ph]),_:1})]),t("td",Kh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vh,t("td",Nh,[t("a",Dh,[l("分割数组的最大值"),e(s)])]),Bh,t("td",Yh,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ah]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Jh]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Rh]),_:1}),l(),Sh]),t("td",Uh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wh,t("td",Xh,[t("a",Fh,[l("等差数列划分"),e(s)])]),Gh,t("td",Th,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qh]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Zh]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[$h]),_:1})]),t("td",t1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e1,t("td",l1,[t("a",o1,[l("分割等和子集"),e(s)])]),t("td",n1,[t("a",s1,[l("[✓]"),e(s)])]),t("td",d1,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[i1]),_:1})]),t("td",a1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r1,t("td",c1,[t("a",h1,[l("屏幕可显示句子的数量"),e(s)])]),u1,t("td",f1,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[g1]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[m1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[y1]),_:1})]),t("td",x1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p1,t("td",b1,[t("a",k1,[l("无重叠区间"),e(s)])]),M1,t("td",H1,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[I1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[w1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[v1]),_:1}),l(),q1]),t("td",z1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C1,t("td",O1,[t("a",j1,[l("等差数列划分 II - 子序列"),e(s)])]),L1,t("td",E1,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[P1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[K1]),_:1})]),t("td",V1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[N1,t("td",D1,[t("a",B1,[l("可怜的小猪"),e(s)])]),Y1,t("td",A1,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[J1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[R1]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[S1]),_:1})]),t("td",U1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W1,t("td",X1,[t("a",F1,[l("我能赢吗"),e(s)])]),G1,t("td",T1,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Q1]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Z1]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[$1]),_:1}),l(),tu]),t("td",eu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lu,t("td",ou,[t("a",nu,[l("最优账单平衡"),e(s)])]),su,t("td",du,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[_u]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[iu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[au]),_:1}),l(),ru]),t("td",cu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hu,t("td",uu,[t("a",fu,[l("统计重复个数"),e(s)])]),gu,t("td",mu,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[yu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[xu]),_:1})]),t("td",pu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bu,t("td",ku,[t("a",Mu,[l("环绕字符串中唯一的子字符串"),e(s)])]),Hu,t("td",Iu,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[wu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[vu]),_:1})]),t("td",qu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zu,t("td",Cu,[t("a",Ou,[l("编码最短长度的字符串"),e(s)])]),ju,t("td",Lu,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Eu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Pu]),_:1})]),t("td",Ku,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vu,t("td",Nu,[t("a",Du,[l("连接词"),e(s)])]),Bu,t("td",Yu,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Au]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Ju]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ru]),_:1}),l(),Su]),t("td",Uu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wu,t("td",Xu,[t("a",Fu,[l("火柴拼正方形"),e(s)])]),Gu,t("td",Tu,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Qu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zu]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$u]),_:1}),l(),tf]),t("td",ef,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lf,t("td",of,[t("a",nf,[l("一和零"),e(s)])]),t("td",sf,[t("a",df,[l("[✓]"),e(s)])]),t("td",_f,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[af]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[rf]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[cf]),_:1})]),t("td",hf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uf,t("td",ff,[t("a",gf,[l("预测赢家"),e(s)])]),mf,t("td",yf,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[xf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pf]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[bf]),_:1}),l(),kf]),t("td",Mf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hf,t("td",If,[t("a",wf,[l("最大连续1的个数 II"),e(s)])]),vf,t("td",qf,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zf]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Cf]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[Of]),_:1})]),t("td",jf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lf,t("td",Ef,[t("a",Pf,[l("祖玛游戏"),e(s)])]),Kf,t("td",Vf,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Nf]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Df]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Bf]),_:1}),l(),Yf]),t("td",Af,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jf,t("td",Rf,[t("a",Sf,[l("目标和"),e(s)])]),t("td",Uf,[t("a",Wf,[l("[✓]"),e(s)])]),t("td",Xf,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ff]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Gf]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Tf]),_:1})]),t("td",Qf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zf,t("td",$f,[t("a",tg,[l("斐波那契数"),e(s)])]),t("td",eg,[t("a",lg,[l("[✓]"),e(s)])]),t("td",og,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[ng]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[sg]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[dg]),_:1}),l(),_g]),t("td",ig,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ag,t("td",rg,[t("a",cg,[l("自由之路"),e(s)])]),t("td",hg,[t("a",ug,[l("[✓]"),e(s)])]),t("td",fg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[gg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[mg]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[yg]),_:1}),l(),xg]),t("td",pg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bg,t("td",kg,[t("a",Mg,[l("最长回文子序列"),e(s)])]),t("td",Hg,[t("a",Ig,[l("[✓]"),e(s)])]),t("td",wg,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[vg]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[qg]),_:1})]),t("td",zg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cg,t("td",Og,[t("a",jg,[l("零钱兑换 II"),e(s)])]),t("td",Lg,[t("a",Eg,[l("[✓]"),e(s)])]),t("td",Pg,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Kg]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Vg]),_:1})]),t("td",Ng,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dg,t("td",Bg,[t("a",Yg,[l("优美的排列"),e(s)])]),Ag,t("td",Jg,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Rg]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sg]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ug]),_:1}),l(),Wg]),t("td",Xg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fg,t("td",Gg,[t("a",Tg,[l("01 矩阵"),e(s)])]),Qg,t("td",Zg,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$g]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[tm]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[em]),_:1}),l(),lm]),t("td",om,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nm,t("td",sm,[t("a",dm,[l("移除盒子"),e(s)])]),_m,t("td",im,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[am]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rm]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[cm]),_:1})]),t("td",hm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[um,t("td",fm,[t("a",gm,[l("学生出勤记录 II"),e(s)])]),mm,t("td",ym,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[xm]),_:1})]),t("td",pm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bm,t("td",km,[t("a",Mm,[l("最优除法"),e(s)])]),Hm,t("td",Im,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wm]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[vm]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[qm]),_:1})]),t("td",zm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cm,t("td",Om,[t("a",jm,[l("矩阵中最长的连续1线段"),e(s)])]),Lm,t("td",Em,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pm]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Km]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Vm]),_:1})]),t("td",Nm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dm,t("td",Bm,[t("a",Ym,[l("最大休假天数"),e(s)])]),Am,t("td",Jm,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Rm]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Sm]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Um]),_:1})]),t("td",Wm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xm,t("td",Fm,[t("a",Gm,[l("出界的路径数"),e(s)])]),Tm,t("td",Qm,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Zm]),_:1})]),t("td",$m,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ty,t("td",ey,[t("a",ly,[l("两个字符串的删除操作"),e(s)])]),t("td",oy,[t("a",ny,[l("[✓]"),e(s)])]),t("td",sy,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[dy]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_y]),_:1})]),t("td",iy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ay,t("td",ry,[t("a",cy,[l("不含连续1的非负整数"),e(s)])]),hy,t("td",uy,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fy]),_:1})]),t("td",gy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[my,t("td",yy,[t("a",xy,[l("K 个逆序对数组"),e(s)])]),py,t("td",by,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ky]),_:1})]),t("td",My,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hy,t("td",Iy,[t("a",wy,[l("寻找数组的错位排列"),e(s)])]),vy,t("td",qy,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[zy]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Cy]),_:1})]),t("td",Oy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jy,t("td",Ly,[t("a",Ey,[l("大礼包"),e(s)])]),Py,t("td",Ky,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Vy]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Ny]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Dy]),_:1}),l(),By]),t("td",Yy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ay,t("td",Jy,[t("a",Ry,[l("解码方法 II"),e(s)])]),Sy,t("td",Uy,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Wy]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Xy]),_:1})]),t("td",Fy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gy,t("td",Ty,[t("a",Qy,[l("最长数对链"),e(s)])]),Zy,t("td",$y,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[t3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[e3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[l3]),_:1}),l(),o3]),t("td",n3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s3,t("td",d3,[t("a",_3,[l("回文子串"),e(s)])]),i3,t("td",a3,[e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[r3]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[c3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[h3]),_:1})]),t("td",u3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f3,t("td",g3,[t("a",m3,[l("两个键的键盘"),e(s)])]),y3,t("td",x3,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[p3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[b3]),_:1})]),t("td",k3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M3,t("td",H3,[t("a",I3,[l("四个键的键盘"),e(s)])]),w3,t("td",v3,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[q3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[z3]),_:1})]),t("td",C3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O3,t("td",j3,[t("a",L3,[l("成本最小路径"),e(s)])]),E3,t("td",P3,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[K3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[V3]),_:1})]),t("td",N3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D3,t("td",B3,[t("a",Y3,[l("奇怪的打印机"),e(s)])]),A3,t("td",J3,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[R3]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[S3]),_:1})]),t("td",U3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W3,t("td",X3,[t("a",F3,[l("最长递增子序列的个数"),e(s)])]),G3,t("td",T3,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Q3]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Z3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$3]),_:1}),l(),tx]),t("td",ex,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lx,t("td",ox,[t("a",nx,[l("有效的括号字符串"),e(s)])]),t("td",sx,[t("a",dx,[l("[✓]"),e(s)])]),t("td",_x,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ix]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[ax]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[rx]),_:1}),l(),cx]),t("td",hx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ux,t("td",fx,[t("a",gx,[l("骑士在棋盘上的概率"),e(s)])]),mx,t("td",yx,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[xx]),_:1})]),t("td",px,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bx,t("td",kx,[t("a",Mx,[l("三个无重叠子数组的最大和"),e(s)])]),Hx,t("td",Ix,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wx]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[vx]),_:1})]),t("td",qx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zx,t("td",Cx,[t("a",Ox,[l("贴纸拼词"),e(s)])]),jx,t("td",Lx,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Ex]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Px]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Kx]),_:1}),l(),Vx]),t("td",Nx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dx,t("td",Bx,[t("a",Yx,[l("划分为k个相等的子集"),e(s)])]),Ax,t("td",Jx,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Rx]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Sx]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ux]),_:1}),l(),Wx]),t("td",Xx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fx,t("td",Gx,[t("a",Tx,[l("两个字符串的最小ASCII删除和"),e(s)])]),t("td",Qx,[t("a",Zx,[l("[✓]"),e(s)])]),t("td",$x,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[t4]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[e4]),_:1})]),t("td",l4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o4,t("td",n4,[t("a",s4,[l("买卖股票的最佳时机含手续费"),e(s)])]),t("td",d4,[t("a",_4,[l("[✓]"),e(s)])]),t("td",i4,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[a4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[r4]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[c4]),_:1})]),t("td",h4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u4,t("td",f4,[t("a",g4,[l("最长重复子数组"),e(s)])]),m4,t("td",y4,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[x4]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[p4]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[b4]),_:1}),l(),k4]),t("td",M4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H4,t("td",I4,[t("a",w4,[l("最小窗口子序列"),e(s)])]),v4,t("td",q4,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[z4]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[C4]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[O4]),_:1})]),t("td",j4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L4,t("td",E4,[t("a",P4,[l("统计不同回文子序列"),e(s)])]),K4,t("td",V4,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[N4]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[D4]),_:1})]),t("td",B4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y4,t("td",A4,[t("a",J4,[l("删除并获得点数"),e(s)])]),R4,t("td",S4,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[U4]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[W4]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[X4]),_:1})]),t("td",F4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G4,t("td",T4,[t("a",Q4,[l("摘樱桃"),e(s)])]),Z4,t("td",$4,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[t2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[e2]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[l2]),_:1})]),t("td",o2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n2,t("td",s2,[t("a",d2,[l("使用最小花费爬楼梯"),e(s)])]),_2,t("td",i2,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[a2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[r2]),_:1})]),t("td",c2,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[h2,t("td",u2,[t("a",f2,[l("角矩形的数量"),e(s)])]),g2,t("td",m2,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y2]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[x2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[p2]),_:1}),l(),b2]),t("td",k2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M2,t("td",H2,[t("a",I2,[l("最大加号标志"),e(s)])]),w2,t("td",v2,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[q2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[z2]),_:1})]),t("td",C2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O2,t("td",j2,[t("a",L2,[l("K 站中转内最便宜的航班"),e(s)])]),E2,t("td",P2,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[K2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[V2]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[N2]),_:1}),l(),D2]),t("td",B2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y2,t("td",A2,[t("a",J2,[l("旋转数字"),e(s)])]),R2,t("td",S2,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[U2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[W2]),_:1})]),t("td",X2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F2,t("td",G2,[t("a",T2,[l("多米诺和托米诺平铺"),e(s)])]),Q2,t("td",Z2,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$2]),_:1})]),t("td",tp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ep,t("td",lp,[t("a",op,[l("匹配子序列的单词数"),e(s)])]),np,t("td",sp,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[dp]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_p]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[ip]),_:1}),l(),ap]),t("td",rp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cp,t("td",hp,[t("a",up,[l("香槟塔"),e(s)])]),fp,t("td",gp,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[mp]),_:1})]),t("td",yp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xp,t("td",pp,[t("a",bp,[l("使序列递增的最小交换次数"),e(s)])]),kp,t("td",Mp,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hp]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ip]),_:1})]),t("td",wp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vp,t("td",qp,[t("a",zp,[l("数组的均值分割"),e(s)])]),Cp,t("td",Op,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[jp]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Lp]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Ep]),_:1}),l(),Pp]),t("td",Kp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vp,t("td",Np,[t("a",Dp,[l("分汤"),e(s)])]),Bp,t("td",Yp,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Ap]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Jp]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[Rp]),_:1})]),t("td",Sp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Up,t("td",Wp,[t("a",Xp,[l("最大平均值和的分组"),e(s)])]),Fp,t("td",Gp,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Tp]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Qp]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[Zp]),_:1})]),t("td",$p,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t5,t("td",e5,[t("a",l5,[l("赛车"),e(s)])]),o5,t("td",n5,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[s5]),_:1})]),t("td",d5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_5,t("td",i5,[t("a",a5,[l("带因子的二叉树"),e(s)])]),r5,t("td",c5,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[h5]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[u5]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[f5]),_:1}),l(),g5]),t("td",m5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y5,t("td",x5,[t("a",p5,[l("统计子串中的唯一字符"),e(s)])]),b5,t("td",k5,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[M5]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[H5]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[I5]),_:1})]),t("td",w5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[v5,t("td",q5,[t("a",z5,[l("树中距离之和"),e(s)])]),C5,t("td",O5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[j5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[L5]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[E5]),_:1}),l(),P5]),t("td",K5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V5,t("td",N5,[t("a",D5,[l("新 21 点"),e(s)])]),B5,t("td",Y5,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[A5]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[J5]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[R5]),_:1}),l(),S5]),t("td",U5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W5,t("td",X5,[t("a",F5,[l("推多米诺"),e(s)])]),G5,t("td",T5,[e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Q5]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Z5]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$5]),_:1})]),t("td",tb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eb,t("td",lb,[t("a",ob,[l("数组中的最长山脉"),e(s)])]),nb,t("td",sb,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[db]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[_b]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ib]),_:1}),l(),ab]),t("td",rb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cb,t("td",hb,[t("a",ub,[l("访问所有节点的最短路径"),e(s)])]),fb,t("td",gb,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[mb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[yb]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[xb]),_:1}),l(),pb]),t("td",bb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kb,t("td",Mb,[t("a",Hb,[l("最低加油次数"),e(s)])]),Ib,t("td",wb,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[vb]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qb]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zb]),_:1}),l(),Cb]),t("td",Ob,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jb,t("td",Lb,[t("a",Eb,[l("最长的斐波那契子序列的长度"),e(s)])]),Pb,t("td",Kb,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Vb]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Nb]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Db]),_:1})]),t("td",Bb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yb,t("td",Ab,[t("a",Jb,[l("石子游戏"),e(s)])]),Rb,t("td",Sb,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ub]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Wb]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Xb]),_:1}),l(),Fb]),t("td",Gb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tb,t("td",Qb,[t("a",Zb,[l("盈利计划"),e(s)])]),$b,t("td",t0,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[e0]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[l0]),_:1})]),t("td",o0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n0,t("td",s0,[t("a",d0,[l("鸡蛋掉落"),e(s)])]),_0,t("td",i0,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[a0]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[r0]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[c0]),_:1})]),t("td",h0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[u0,t("td",f0,[t("a",g0,[l("所有可能的真二叉树"),e(s)])]),m0,t("td",y0,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[x0]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[p0]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[b0]),_:1}),l(),k0]),t("td",M0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H0,t("td",I0,[t("a",w0,[l("子数组按位或操作"),e(s)])]),v0,t("td",q0,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[z0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[C0]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[O0]),_:1})]),t("td",j0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L0,t("td",E0,[t("a",P0,[l("最大为 N 的数字组合"),e(s)])]),K0,t("td",V0,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[N0]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[D0]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[B0]),_:1}),l(),Y0]),t("td",A0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J0,t("td",R0,[t("a",S0,[l("DI 序列的有效排列"),e(s)])]),U0,t("td",W0,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[X0]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[F0]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[G0]),_:1})]),t("td",T0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Q0,t("td",Z0,[t("a",$0,[l("子数组的最小值之和"),e(s)])]),t8,t("td",e8,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[l8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[o8]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[n8]),_:1}),l(),s8]),t("td",d8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_8,t("td",i8,[t("a",a8,[l("猫和老鼠"),e(s)])]),r8,t("td",c8,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[h8]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[u8]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[f8]),_:1}),l(),g8]),t("td",m8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y8,t("td",x8,[t("a",p8,[l("环形子数组的最大和"),e(s)])]),t("td",b8,[t("a",k8,[l("[✓]"),e(s)])]),t("td",M8,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[H8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[I8]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[w8]),_:1}),l(),v8]),t("td",q8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z8,t("td",C8,[t("a",O8,[l("播放列表的数量"),e(s)])]),j8,t("td",L8,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[E8]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[P8]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[K8]),_:1})]),t("td",V8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[N8,t("td",D8,[t("a",B8,[l("将字符串翻转到单调递增"),e(s)])]),Y8,t("td",A8,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[J8]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[R8]),_:1})]),t("td",S8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U8,t("td",W8,[t("a",X8,[l("下降路径最小和"),e(s)])]),t("td",F8,[t("a",G8,[l("[✓]"),e(s)])]),t("td",T8,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Q8]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Z8]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[$8]),_:1})]),t("td",t6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e6,t("td",l6,[t("a",o6,[l("骑士拨号器"),e(s)])]),n6,t("td",s6,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[d6]),_:1})]),t("td",_6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i6,t("td",a6,[t("a",r6,[l("不同的子序列 II"),e(s)])]),c6,t("td",h6,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[u6]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[f6]),_:1})]),t("td",g6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m6,t("td",y6,[t("a",x6,[l("最短超级串"),e(s)])]),p6,t("td",b6,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[k6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[M6]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[H6]),_:1}),l(),I6]),t("td",w6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[v6,t("td",q6,[t("a",z6,[l("最高的广告牌"),e(s)])]),C6,t("td",O6,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[j6]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[L6]),_:1})]),t("td",E6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[P6,t("td",K6,[t("a",V6,[l("删列造序 III"),e(s)])]),N6,t("td",D6,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[B6]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Y6]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[A6]),_:1})]),t("td",J6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R6,t("td",S6,[t("a",U6,[l("表示数字的最少运算符"),e(s)])]),W6,t("td",X6,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[F6]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[G6]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[T6]),_:1})]),t("td",Q6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Z6,t("td",$6,[t("a",t7,[l("监控二叉树"),e(s)])]),e7,t("td",l7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[o7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[n7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[s7]),_:1}),l(),d7]),t("td",_7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i7,t("td",a7,[t("a",r7,[l("奇偶跳"),e(s)])]),c7,t("td",h7,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[u7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[f7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[g7]),_:1}),l(),m7]),t("td",y7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x7,t("td",p7,[t("a",b7,[l("最长湍流子数组"),e(s)])]),k7,t("td",M7,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[H7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[I7]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[w7]),_:1})]),t("td",v7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q7,t("td",z7,[t("a",C7,[l("最低票价"),e(s)])]),O7,t("td",j7,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[L7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[E7]),_:1})]),t("td",P7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K7,t("td",V7,[t("a",N7,[l("平方数组的数目"),e(s)])]),D7,t("td",B7,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Y7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[A7]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[J7]),_:1}),l(),R7]),t("td",S7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U7,t("td",W7,[t("a",X7,[l("合并石头的最低成本"),e(s)])]),F7,t("td",G7,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[T7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Q7]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[Z7]),_:1})]),t("td",$7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t9,t("td",e9,[t("a",l9,[l("至少有 1 位重复的数字"),e(s)])]),o9,t("td",n9,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[s9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[d9]),_:1})]),t("td",_9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i9,t("td",a9,[t("a",r9,[l("最佳观光组合"),e(s)])]),c9,t("td",h9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[u9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[f9]),_:1})]),t("td",g9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m9,t("td",y9,[t("a",x9,[l("视频拼接"),e(s)])]),p9,t("td",b9,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[k9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[M9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[H9]),_:1})]),t("td",I9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w9,t("td",v9,[t("a",q9,[l("除数博弈"),e(s)])]),z9,t("td",C9,[e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[O9]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[j9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[L9]),_:1}),l(),E9]),t("td",P9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[K9,t("td",V9,[t("a",N9,[l("最长等差数列"),e(s)])]),D9,t("td",B9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Y9]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[A9]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[J9]),_:1}),l(),R9]),t("td",S9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U9,t("td",W9,[t("a",X9,[l("两个非重叠子数组的最大和"),e(s)])]),F9,t("td",G9,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[T9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Q9]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[Z9]),_:1})]),t("td",$9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tk,t("td",ek,[t("a",lk,[l("不相交的线"),e(s)])]),ok,t("td",nk,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sk]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[dk]),_:1})]),t("td",_k,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ik,t("td",ak,[t("a",rk,[l("多边形三角剖分的最低得分"),e(s)])]),ck,t("td",hk,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uk]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fk]),_:1})]),t("td",gk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mk,t("td",yk,[t("a",xk,[l("分隔数组以得到最大和"),e(s)])]),pk,t("td",bk,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kk]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Mk]),_:1})]),t("td",Hk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ik,t("td",wk,[t("a",vk,[l("最长字符串链"),e(s)])]),qk,t("td",zk,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ck]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ok]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[jk]),_:1}),l(),Lk]),t("td",Ek,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pk,t("td",Kk,[t("a",Vk,[l("最后一块石头的重量 II"),e(s)])]),t("td",Nk,[t("a",Dk,[l("[✓]"),e(s)])]),t("td",Bk,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yk]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ak]),_:1})]),t("td",Jk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rk,t("td",Sk,[t("a",Uk,[l("最长重复子串"),e(s)])]),Wk,t("td",Xk,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Fk]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Gk]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Tk]),_:1}),l(),Qk]),t("td",Zk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$k,t("td",tM,[t("a",eM,[l("校园自行车分配 II"),e(s)])]),lM,t("td",oM,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[nM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sM]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[dM]),_:1}),l(),_M]),t("td",iM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aM,t("td",rM,[t("a",cM,[l("范围内的数字计数"),e(s)])]),hM,t("td",uM,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[fM]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[gM]),_:1})]),t("td",mM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yM,t("td",xM,[t("a",pM,[l("最短公共超序列"),e(s)])]),bM,t("td",kM,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[MM]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[HM]),_:1})]),t("td",IM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wM,t("td",vM,[t("a",qM,[l("填充书架"),e(s)])]),zM,t("td",CM,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[OM]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jM]),_:1})]),t("td",LM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EM,t("td",PM,[t("a",KM,[l("最小的必要团队"),e(s)])]),VM,t("td",NM,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[DM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[BM]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[YM]),_:1}),l(),AM]),t("td",JM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RM,t("td",SM,[t("a",UM,[l("叶值的最小代价生成树"),e(s)])]),WM,t("td",XM,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[FM]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[GM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[TM]),_:1}),l(),QM]),t("td",ZM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$M,t("td",tH,[t("a",eH,[l("第 N 个泰波那契数"),e(s)])]),t("td",lH,[t("a",oH,[l("[✓]"),e(s)])]),t("td",nH,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[sH]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[dH]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_H]),_:1})]),t("td",iH,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[aH,t("td",rH,[t("a",cH,[l("最大的以 1 为边界的正方形"),e(s)])]),hH,t("td",uH,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fH]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[gH]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[mH]),_:1})]),t("td",yH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xH,t("td",pH,[t("a",bH,[l("石子游戏 II"),e(s)])]),kH,t("td",MH,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[HH]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[IH]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wH]),_:1}),l(),vH]),t("td",qH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zH,t("td",CH,[t("a",OH,[l("最长公共子序列"),e(s)])]),t("td",jH,[t("a",LH,[l("[✓]"),e(s)])]),t("td",EH,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[PH]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[KH]),_:1})]),t("td",VH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NH,t("td",DH,[t("a",BH,[l("段式回文"),e(s)])]),YH,t("td",AH,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[JH]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[RH]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[SH]),_:1}),l(),UH]),t("td",WH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XH,t("td",FH,[t("a",GH,[l("掷骰子等于目标和的方法数"),e(s)])]),TH,t("td",QH,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ZH]),_:1})]),t("td",$H,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tI,t("td",eI,[t("a",lI,[l("地图分析"),e(s)])]),oI,t("td",nI,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sI]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[dI]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_I]),_:1}),l(),iI]),t("td",aI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rI,t("td",cI,[t("a",hI,[l("与目标颜色间的最短距离"),e(s)])]),uI,t("td",fI,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[gI]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[mI]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[yI]),_:1})]),t("td",xI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pI,t("td",bI,[t("a",kI,[l("删除一次得到子数组最大和"),e(s)])]),MI,t("td",HI,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[II]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wI]),_:1})]),t("td",vI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qI,t("td",zI,[t("a",CI,[l("使数组严格递增"),e(s)])]),OI,t("td",jI,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[LI]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[EI]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[PI]),_:1}),l(),KI]),t("td",VI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[NI,t("td",DI,[t("a",BI,[l("K 次串联后最大子数组之和"),e(s)])]),YI,t("td",AI,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[JI]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[RI]),_:1})]),t("td",SI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UI,t("td",WI,[t("a",XI,[l("验证回文串 III"),e(s)])]),FI,t("td",GI,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[TI]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[QI]),_:1})]),t("td",ZI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$I,t("td",tw,[t("a",ew,[l("最长定差子序列"),e(s)])]),lw,t("td",ow,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nw]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[sw]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[dw]),_:1})]),t("td",_w,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iw,t("td",aw,[t("a",rw,[l("统计元音字母序列的数目"),e(s)])]),cw,t("td",hw,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uw]),_:1})]),t("td",fw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gw,t("td",mw,[t("a",yw,[l("掷骰子模拟"),e(s)])]),xw,t("td",pw,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bw]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[kw]),_:1})]),t("td",Mw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hw,t("td",Iw,[t("a",ww,[l("飞机座位分配概率"),e(s)])]),vw,t("td",qw,[e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[zw]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Cw]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ow]),_:1}),l(),jw]),t("td",Lw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ew,t("td",Pw,[t("a",Kw,[l("抛掷硬币"),e(s)])]),Vw,t("td",Nw,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Dw]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Bw]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Yw]),_:1}),l(),Aw]),t("td",Jw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rw,t("td",Sw,[t("a",Uw,[l("规划兼职工作"),e(s)])]),Ww,t("td",Xw,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fw]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Gw]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Tw]),_:1}),l(),Qw]),t("td",Zw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$w,t("td",tv,[t("a",ev,[l("删除回文子数组"),e(s)])]),lv,t("td",ov,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nv]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sv]),_:1})]),t("td",dv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_v,t("td",iv,[t("a",av,[l("得分最高的单词集合"),e(s)])]),rv,t("td",cv,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[hv]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uv]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[fv]),_:1}),l(),gv]),t("td",mv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yv,t("td",xv,[t("a",pv,[l("不相交的握手"),e(s)])]),bv,t("td",kv,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Mv]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Hv]),_:1})]),t("td",Iv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wv,t("td",vv,[t("a",qv,[l("可被三整除的最大和"),e(s)])]),zv,t("td",Cv,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ov]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jv]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Lv]),_:1}),l(),Ev]),t("td",Pv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kv,t("td",Vv,[t("a",Nv,[l("停在原地的方案数"),e(s)])]),Dv,t("td",Bv,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Yv]),_:1})]),t("td",Av,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jv,t("td",Rv,[t("a",Sv,[l("统计全为 1 的正方形子矩阵"),e(s)])]),Uv,t("td",Wv,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xv]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Fv]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Gv]),_:1})]),t("td",Tv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qv,t("td",Zv,[t("a",$v,[l("分割回文串 III"),e(s)])]),tq,t("td",eq,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[lq]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[oq]),_:1})]),t("td",nq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sq,t("td",dq,[t("a",_q,[l("下降路径最小和 II"),e(s)])]),iq,t("td",aq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rq]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[cq]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[hq]),_:1})]),t("td",uq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fq,t("td",gq,[t("a",mq,[l("最大得分的路径数目"),e(s)])]),yq,t("td",xq,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pq]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[bq]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[kq]),_:1})]),t("td",Mq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hq,t("td",Iq,[t("a",wq,[l("让字符串成为回文串的最少插入次数"),e(s)])]),t("td",vq,[t("a",qq,[l("[✓]"),e(s)])]),t("td",zq,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Cq]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Oq]),_:1})]),t("td",jq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lq,t("td",Eq,[t("a",Pq,[l("二指输入的的最小距离"),e(s)])]),Kq,t("td",Vq,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Nq]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Dq]),_:1})]),t("td",Bq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yq,t("td",Aq,[t("a",Jq,[l("灌溉花园的最少水龙头数目"),e(s)])]),Rq,t("td",Sq,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Uq]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Wq]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Xq]),_:1})]),t("td",Fq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gq,t("td",Tq,[t("a",Qq,[l("阈值距离内邻居最少的城市"),e(s)])]),Zq,t("td",$q,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[tz]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ez]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[lz]),_:1})]),t("td",oz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nz,t("td",sz,[t("a",dz,[l("工作计划的最低难度"),e(s)])]),_z,t("td",iz,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[az]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[rz]),_:1})]),t("td",cz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hz,t("td",uz,[t("a",fz,[l("跳跃游戏 V"),e(s)])]),gz,t("td",mz,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[yz]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[xz]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[pz]),_:1})]),t("td",bz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kz,t("td",Mz,[t("a",Hz,[l("参加考试的最大学生数"),e(s)])]),Iz,t("td",wz,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[vz]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qz]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zz]),_:1}),l(),Cz]),t("td",Oz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jz,t("td",Lz,[t("a",Ez,[l("有效的快递序列数目"),e(s)])]),Pz,t("td",Kz,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Vz]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Nz]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[Dz]),_:1})]),t("td",Bz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yz,t("td",Az,[t("a",Jz,[l("形成三的最大倍数"),e(s)])]),Rz,t("td",Sz,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Uz]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Wz]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Xz]),_:1})]),t("td",Fz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gz,t("td",Tz,[t("a",Qz,[l("二叉树中的最长交错路径"),e(s)])]),Zz,t("td",$z,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[tC]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[eC]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[lC]),_:1}),l(),oC]),t("td",nC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sC,t("td",dC,[t("a",_C,[l("二叉搜索子树的最大键值和"),e(s)])]),iC,t("td",aC,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[rC]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cC]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[hC]),_:1}),l(),uC]),t("td",fC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gC,t("td",mC,[t("a",yC,[l("将整数按权重排序"),e(s)])]),xC,t("td",pC,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[bC]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[kC]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[MC]),_:1})]),t("td",HC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[IC,t("td",wC,[t("a",vC,[l("3n 块披萨"),e(s)])]),qC,t("td",zC,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[CC]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[OC]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jC]),_:1}),l(),LC]),t("td",EC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PC,t("td",KC,[t("a",VC,[l("统计作战单位数"),e(s)])]),NC,t("td",DC,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[BC]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[YC]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[AC]),_:1}),l(),JC]),t("td",RC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SC,t("td",UC,[t("a",WC,[l("找到所有好字符串"),e(s)])]),XC,t("td",FC,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[GC]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[TC]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[QC]),_:1})]),t("td",ZC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$C,t("td",tO,[t("a",eO,[l("做菜顺序"),e(s)])]),lO,t("td",oO,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[nO]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sO]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[dO]),_:1}),l(),_O]),t("td",iO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[aO,t("td",rO,[t("a",cO,[l("石子游戏 III"),e(s)])]),hO,t("td",uO,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fO]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[gO]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[mO]),_:1}),l(),yO]),t("td",xO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pO,t("td",bO,[t("a",kO,[l("给 N x 3 网格图涂色的方案数"),e(s)])]),MO,t("td",HO,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[IO]),_:1})]),t("td",wO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vO,t("td",qO,[t("a",zO,[l("恢复数组"),e(s)])]),CO,t("td",OO,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[jO]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[LO]),_:1})]),t("td",EO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PO,t("td",KO,[t("a",VO,[l("生成数组"),e(s)])]),NO,t("td",DO,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[BO]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[YO]),_:1})]),t("td",AO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JO,t("td",RO,[t("a",SO,[l("带限制的子序列和"),e(s)])]),UO,t("td",WO,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[XO]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FO]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[GO]),_:1}),l(),TO]),t("td",QO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZO,t("td",$O,[t("a",tj,[l("每个人戴不同帽子的方案数"),e(s)])]),ej,t("td",lj,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[oj]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nj]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sj]),_:1}),l(),dj]),t("td",_j,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ij,t("td",aj,[t("a",rj,[l("切披萨的方案数"),e(s)])]),cj,t("td",hj,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[uj]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fj]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[gj]),_:1}),l(),mj]),t("td",yj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xj,t("td",pj,[t("a",bj,[l("数位成本和为目标值的最大数字"),e(s)])]),kj,t("td",Mj,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hj]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ij]),_:1})]),t("td",wj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vj,t("td",qj,[t("a",zj,[l("两个子序列的最大点积"),e(s)])]),Cj,t("td",Oj,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jj]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Lj]),_:1})]),t("td",Ej,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pj,t("td",Kj,[t("a",Vj,[l("摘樱桃 II"),e(s)])]),Nj,t("td",Dj,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Bj]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Yj]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Aj]),_:1})]),t("td",Jj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rj,t("td",Sj,[t("a",Uj,[l("两个盒子中球的颜色数相同的概率"),e(s)])]),Wj,t("td",Xj,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fj]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Gj]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Tj]),_:1}),l(),Qj]),t("td",Zj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$j,t("td",tL,[t("a",eL,[l("粉刷房子 III"),e(s)])]),lL,t("td",oL,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nL]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sL]),_:1})]),t("td",dL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_L,t("td",iL,[t("a",aL,[l("找两个和为目标值且不重叠的子数组"),e(s)])]),rL,t("td",cL,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hL]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[uL]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[fL]),_:1}),l(),gL]),t("td",mL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yL,t("td",xL,[t("a",pL,[l("安排邮筒"),e(s)])]),bL,t("td",kL,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ML]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[HL]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[IL]),_:1}),l(),wL]),t("td",vL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qL,t("td",zL,[t("a",CL,[l("树节点的第 K 个祖先"),e(s)])]),OL,t("td",jL,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[LL]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[EL]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[PL]),_:1}),l(),KL]),t("td",VL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[NL,t("td",DL,[t("a",BL,[l("删掉一个元素以后全为 1 的最长子数组"),e(s)])]),YL,t("td",AL,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[JL]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[RL]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[SL]),_:1})]),t("td",UL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WL,t("td",XL,[t("a",FL,[l("并行课程 II"),e(s)])]),GL,t("td",TL,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[QL]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ZL]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$L]),_:1}),l(),tE]),t("td",eE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lE,t("td",oE,[t("a",nE,[l("统计全 1 子矩形"),e(s)])]),sE,t("td",dE,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[_E]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[iE]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[aE]),_:1}),l(),rE]),t("td",cE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hE,t("td",uE,[t("a",fE,[l("石子游戏 IV"),e(s)])]),gE,t("td",mE,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[yE]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[xE]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[pE]),_:1})]),t("td",bE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kE,t("td",ME,[t("a",HE,[l("和为奇数的子数组数目"),e(s)])]),IE,t("td",wE,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vE]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[qE]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zE]),_:1}),l(),CE]),t("td",OE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jE,t("td",LE,[t("a",EE,[l("字符串的好分割数目"),e(s)])]),PE,t("td",KE,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[VE]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[NE]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[DE]),_:1}),l(),BE]),t("td",YE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AE,t("td",JE,[t("a",RE,[l("形成目标数组的子数组最少增加次数"),e(s)])]),SE,t("td",UE,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[WE]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[XE]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FE]),_:1}),l(),GE]),t("td",TE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QE,t("td",ZE,[t("a",$E,[l("压缩字符串 II"),e(s)])]),tP,t("td",eP,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[lP]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[oP]),_:1})]),t("td",nP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sP,t("td",dP,[t("a",_P,[l("最大得分"),e(s)])]),iP,t("td",aP,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[rP]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[cP]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[hP]),_:1}),l(),uP]),t("td",fP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gP,t("td",mP,[t("a",yP,[l("切棍子的最小成本"),e(s)])]),xP,t("td",pP,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bP]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[kP]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[MP]),_:1})]),t("td",HP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IP,t("td",wP,[t("a",vP,[l("图中最相似的路径"),e(s)])]),qP,t("td",zP,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[CP]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[OP]),_:1})]),t("td",jP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[LP,t("td",EP,[t("a",PP,[l("吃掉 N 个橘子的最少天数"),e(s)])]),KP,t("td",VP,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[NP]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[DP]),_:1})]),t("td",BP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[YP,t("td",AP,[t("a",JP,[l("石子游戏 V"),e(s)])]),RP,t("td",SP,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[UP]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[WP]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[XP]),_:1}),l(),FP]),t("td",GP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TP,t("td",QP,[t("a",ZP,[l("乘积为正数的最长子数组长度"),e(s)])]),$P,t("td",tK,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[eK]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[lK]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[oK]),_:1})]),t("td",nK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sK,t("td",dK,[t("a",_K,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),iK,t("td",aK,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[rK]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[cK]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[hK]),_:1}),l(),uK]),t("td",fK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gK,t("td",mK,[t("a",yK,[l("统计所有可行路径"),e(s)])]),xK,t("td",pK,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[bK]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kK]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[MK]),_:1})]),t("td",HK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IK,t("td",wK,[t("a",vK,[l("使绳子变成彩色的最短时间"),e(s)])]),qK,t("td",zK,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[CK]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[OK]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[jK]),_:1}),l(),LK]),t("td",EK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PK,t("td",KK,[t("a",VK,[l("矩阵的最大非负积"),e(s)])]),NK,t("td",DK,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[BK]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[YK]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[AK]),_:1})]),t("td",JK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RK,t("td",SK,[t("a",UK,[l("连通两组点的最小成本"),e(s)])]),WK,t("td",XK,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[FK]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[GK]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[TK]),_:1}),l(),QK]),t("td",ZK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$K,t("td",tV,[t("a",eV,[l("使整数变为 0 的最少操作次数"),e(s)])]),lV,t("td",oV,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[nV]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[sV]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[dV]),_:1})]),t("td",_V,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iV,t("td",aV,[t("a",rV,[l("统计子树中城市之间最大距离"),e(s)])]),cV,t("td",hV,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[uV]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[fV]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[gV]),_:1}),l(),mV]),t("td",yV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xV,t("td",pV,[t("a",bV,[l("大小为 K 的不重叠线段的数目"),e(s)])]),kV,t("td",MV,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[HV]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[IV]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[wV]),_:1})]),t("td",vV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qV,t("td",zV,[t("a",CV,[l("无矛盾的最佳球队"),e(s)])]),OV,t("td",jV,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[LV]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[EV]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[PV]),_:1})]),t("td",KV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VV,t("td",NV,[t("a",DV,[l("统计只差一个字符的子串数目"),e(s)])]),BV,t("td",YV,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[AV]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[JV]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[RV]),_:1}),l(),SV]),t("td",UV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WV,t("td",XV,[t("a",FV,[l("通过给定词典构造目标字符串的方案数"),e(s)])]),GV,t("td",TV,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[QV]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ZV]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$V]),_:1})]),t("td",tN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eN,t("td",lN,[t("a",oN,[l("统计字典序元音字符串的数目"),e(s)])]),nN,t("td",sN,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[dN]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_N]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[iN]),_:1})]),t("td",aN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rN,t("td",cN,[t("a",hN,[l("第 K 条最小指令"),e(s)])]),uN,t("td",fN,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[gN]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[mN]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[yN]),_:1}),l(),xN]),t("td",pN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bN,t("td",kN,[t("a",MN,[l("使字符串平衡的最少删除次数"),e(s)])]),HN,t("td",IN,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[wN]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[vN]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[qN]),_:1})]),t("td",zN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CN,t("td",ON,[t("a",jN,[l("到家的最少跳跃次数"),e(s)])]),LN,t("td",EN,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[PN]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[KN]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[VN]),_:1})]),t("td",NN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DN,t("td",BN,[t("a",YN,[l("分配重复整数"),e(s)])]),AN,t("td",JN,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[RN]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[SN]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[UN]),_:1}),l(),WN]),t("td",XN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FN,t("td",GN,[t("a",TN,[l("最大化网格幸福感"),e(s)])]),QN,t("td",ZN,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[$N]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[tD]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[eD]),_:1}),l(),lD]),t("td",oD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nD,t("td",sD,[t("a",dD,[l("最大重复子字符串"),e(s)])]),_D,t("td",iD,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[aD]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[rD]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[cD]),_:1})]),t("td",hD,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[uD,t("td",fD,[t("a",gD,[l("得到山形数组的最少删除次数"),e(s)])]),mD,t("td",yD,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[xD]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pD]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[bD]),_:1}),l(),kD]),t("td",MD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HD,t("td",ID,[t("a",wD,[l("最小不兼容性"),e(s)])]),vD,t("td",qD,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[zD]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[CD]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[OD]),_:1}),l(),jD]),t("td",LD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ED,t("td",PD,[t("a",KD,[l("最长回文子序列 II"),e(s)])]),VD,t("td",ND,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[DD]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[BD]),_:1})]),t("td",YD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AD,t("td",JD,[t("a",RD,[l("从仓库到码头运输箱子"),e(s)])]),SD,t("td",UD,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[WD]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[XD]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FD]),_:1}),l(),GD]),t("td",TD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QD,t("td",ZD,[t("a",$D,[l("石子游戏 VII"),e(s)])]),tB,t("td",eB,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[lB]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[oB]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nB]),_:1}),l(),sB]),t("td",dB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_B,t("td",iB,[t("a",aB,[l("堆叠长方体的最大高度"),e(s)])]),rB,t("td",cB,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hB]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uB]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[fB]),_:1})]),t("td",gB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mB,t("td",yB,[t("a",xB,[l("计算分配糖果的不同方式"),e(s)])]),pB,t("td",bB,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[kB]),_:1})]),t("td",MB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HB,t("td",IB,[t("a",wB,[l("跳跃游戏 VI"),e(s)])]),vB,t("td",qB,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[zB]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[CB]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[OB]),_:1}),l(),jB]),t("td",LB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EB,t("td",PB,[t("a",KB,[l("数组中特殊等间距元素的和"),e(s)])]),VB,t("td",NB,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[DB]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[BB]),_:1})]),t("td",YB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[AB,t("td",JB,[t("a",RB,[l("完成所有工作的最短时间"),e(s)])]),SB,t("td",UB,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[WB]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[XB]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[FB]),_:1}),l(),GB]),t("td",TB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QB,t("td",ZB,[t("a",$B,[l("猫和老鼠 II"),e(s)])]),tY,t("td",eY,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[lY]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[oY]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[nY]),_:1}),l(),sY]),t("td",dY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_Y,t("td",iY,[t("a",aY,[l("生成乘积数组的方案数"),e(s)])]),rY,t("td",cY,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hY]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[uY]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fY]),_:1}),l(),gY]),t("td",mY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yY,t("td",xY,[t("a",pY,[l("分割回文串 IV"),e(s)])]),bY,t("td",kY,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[MY]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[HY]),_:1})]),t("td",IY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wY,t("td",vY,[t("a",qY,[l("经过一次操作后的最大子数组和"),e(s)])]),zY,t("td",CY,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[OY]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jY]),_:1})]),t("td",LY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EY,t("td",PY,[t("a",KY,[l("任意子数组和的绝对值的最大值"),e(s)])]),VY,t("td",NY,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[DY]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[BY]),_:1})]),t("td",YY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AY,t("td",JY,[t("a",RY,[l("最多可以参加的会议数目 II"),e(s)])]),SY,t("td",UY,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[WY]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[XY]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[FY]),_:1}),l(),GY]),t("td",TY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QY,t("td",ZY,[t("a",$Y,[l("最接近目标值的子序列和"),e(s)])]),tA,t("td",eA,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[lA]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oA]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[nA]),_:1}),l(),sA]),t("td",dA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_A,t("td",iA,[t("a",aA,[l("执行乘法运算的最大分数"),e(s)])]),rA,t("td",cA,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hA]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uA]),_:1})]),t("td",fA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gA,t("td",mA,[t("a",yA,[l("由子序列构造的最长回文串的长度"),e(s)])]),xA,t("td",pA,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[bA]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[kA]),_:1})]),t("td",MA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HA,t("td",IA,[t("a",wA,[l("最接近目标价格的甜点成本"),e(s)])]),vA,t("td",qA,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zA]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[CA]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[OA]),_:1})]),t("td",jA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LA,t("td",EA,[t("a",PA,[l("从第一个节点出发到最后一个节点的受限路径数"),e(s)])]),KA,t("td",VA,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[NA]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[DA]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[BA]),_:1}),l(),YA]),t("td",AA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JA,t("td",RA,[t("a",SA,[l("使所有区间的异或结果为零"),e(s)])]),UA,t("td",WA,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[XA]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FA]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[GA]),_:1})]),t("td",TA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QA,t("td",ZA,[t("a",$A,[l("N 次操作后的最大分数和"),e(s)])]),tJ,t("td",eJ,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[lJ]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oJ]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[nJ]),_:1}),l(),sJ]),t("td",dJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_J,t("td",iJ,[t("a",aJ,[l("得到新鲜甜甜圈的最多组数"),e(s)])]),rJ,t("td",cJ,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[hJ]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[uJ]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fJ]),_:1}),l(),gJ]),t("td",mJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yJ,t("td",xJ,[t("a",pJ,[l("最少侧跳次数"),e(s)])]),bJ,t("td",kJ,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[MJ]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[HJ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[IJ]),_:1})]),t("td",wJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vJ,t("td",qJ,[t("a",zJ,[l("有向图中最大颜色值"),e(s)])]),CJ,t("td",OJ,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[jJ]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[LJ]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[EJ]),_:1}),l(),PJ]),t("td",KJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[VJ,t("td",NJ,[t("a",DJ,[l("恰有 K 根木棍可以看到的排列数目"),e(s)])]),BJ,t("td",YJ,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[AJ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[JJ]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[RJ]),_:1})]),t("td",SJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[UJ,t("td",WJ,[t("a",XJ,[l("跳跃游戏 VII"),e(s)])]),FJ,t("td",GJ,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[TJ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[QJ]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[ZJ]),_:1}),l(),$J]),t("td",tR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eR,t("td",lR,[t("a",oR,[l("石子游戏 VIII"),e(s)])]),nR,t("td",sR,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[dR]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[_R]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[iR]),_:1}),l(),aR]),t("td",rR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cR,t("td",hR,[t("a",uR,[l("两个数组最小的异或值之和"),e(s)])]),fR,t("td",gR,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[mR]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[yR]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[xR]),_:1}),l(),pR]),t("td",bR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kR,t("td",MR,[t("a",HR,[l("准时抵达会议现场的最小跳过休息次数"),e(s)])]),IR,t("td",wR,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vR]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[qR]),_:1})]),t("td",zR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[CR,t("td",OR,[t("a",jR,[l("鸡蛋掉落-两枚鸡蛋"),e(s)])]),LR,t("td",ER,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[PR]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[KR]),_:1})]),t("td",VR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NR,t("td",DR,[t("a",BR,[l("使二进制字符串字符交替的最少反转次数"),e(s)])]),YR,t("td",AR,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[JR]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[RR]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[SR]),_:1}),l(),UR]),t("td",WR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[XR,t("td",FR,[t("a",GR,[l("反转表达式值的最少操作次数"),e(s)])]),TR,t("td",QR,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ZR]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[$R]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[tS]),_:1}),l(),eS]),t("td",lS,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oS,t("td",nS,[t("a",sS,[l("最佳运动员的比拼回合"),e(s)])]),dS,t("td",_S,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[iS]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[aS]),_:1})]),t("td",rS,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cS,t("td",hS,[t("a",uS,[l("Nim 游戏 II"),e(s)])]),fS,t("td",gS,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[mS]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[yS]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xS]),_:1}),l(),pS]),t("td",bS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kS,t("td",MS,[t("a",HS,[l("最大子序列交替和"),e(s)])]),IS,t("td",wS,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vS]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[qS]),_:1})]),t("td",zS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CS,t("td",OS,[t("a",jS,[l("统计为蚁群构筑房间的不同顺序"),e(s)])]),LS,t("td",ES,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[PS]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[KS]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[VS]),_:1}),l(),NS]),t("td",DS,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BS,t("td",YS,[t("a",AS,[l("规定时间内到达终点的最小花费"),e(s)])]),JS,t("td",RS,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[SS]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[US]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[WS]),_:1})]),t("td",XS,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FS,t("td",GS,[t("a",TS,[l("用三种不同颜色为网格涂色"),e(s)])]),QS,t("td",ZS,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$S]),_:1})]),t("td",tU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eU,t("td",lU,[t("a",oU,[l("扣分后的最大得分"),e(s)])]),nU,t("td",sU,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[dU]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_U]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[iU]),_:1})]),t("td",aU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rU,t("td",cU,[t("a",hU,[l("最大兼容性评分和"),e(s)])]),uU,t("td",fU,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[gU]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mU]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[yU]),_:1}),l(),xU]),t("td",pU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bU,t("td",kU,[t("a",MU,[l("统计特殊子序列的数目"),e(s)])]),HU,t("td",IU,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wU]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[vU]),_:1})]),t("td",qU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zU,t("td",CU,[t("a",OU,[l("K 次调整数组大小浪费的最小总空间"),e(s)])]),jU,t("td",LU,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[EU]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[PU]),_:1})]),t("td",KU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VU,t("td",NU,[t("a",DU,[l("到达目的地的方案数"),e(s)])]),BU,t("td",YU,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[AU]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[JU]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[RU]),_:1}),l(),SU]),t("td",UU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WU,t("td",XU,[t("a",FU,[l("划分数字的方案数"),e(s)])]),GU,t("td",TU,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[QU]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ZU]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[$U]),_:1})]),t("td",tW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eW,t("td",lW,[t("a",oW,[l("最小化目标值与所选元素的差"),e(s)])]),nW,t("td",sW,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[dW]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_W]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[iW]),_:1})]),t("td",aW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rW,t("td",cW,[t("a",hW,[l("完成任务的最少工作时间段"),e(s)])]),uW,t("td",fW,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[gW]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mW]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[yW]),_:1}),l(),xW]),t("td",pW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bW,t("td",kW,[t("a",MW,[l("不同的好子序列数目"),e(s)])]),HW,t("td",IW,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[wW]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[vW]),_:1})]),t("td",qW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zW,t("td",CW,[t("a",OW,[l("好子集的数目"),e(s)])]),jW,t("td",LW,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[EW]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[PW]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[KW]),_:1}),l(),VW]),t("td",NW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DW,t("td",BW,[t("a",YW,[l("访问完所有房间的第一天"),e(s)])]),AW,t("td",JW,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[RW]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[SW]),_:1})]),t("td",UW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WW,t("td",XW,[t("a",FW,[l("两个回文子序列长度的最大乘积"),e(s)])]),GW,t("td",TW,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[QW]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ZW]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$W]),_:1}),l(),tX]),t("td",eX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lX,t("td",oX,[t("a",nX,[l("每棵子树内缺失的最小基因值"),e(s)])]),sX,t("td",dX,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_X]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[iX]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[aX]),_:1}),l(),rX]),t("td",cX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hX,t("td",uX,[t("a",fX,[l("斐波那契树的移除子树游戏"),e(s)])]),gX,t("td",mX,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[yX]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xX]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[pX]),_:1}),l(),bX]),t("td",kX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[MX,t("td",HX,[t("a",IX,[l("出租车的最大盈利"),e(s)])]),wX,t("td",vX,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qX]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[zX]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[CX]),_:1}),l(),OX]),t("td",jX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LX,t("td",EX,[t("a",PX,[l("解出数学表达式的学生分数"),e(s)])]),KX,t("td",VX,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[NX]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[DX]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[BX]),_:1}),l(),YX]),t("td",AX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JX,t("td",RX,[t("a",SX,[l("将数组分成两个数组并最小化数组和的差"),e(s)])]),UX,t("td",WX,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[XX]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FX]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[GX]),_:1}),l(),TX]),t("td",QX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZX,t("td",$X,[t("a",tF,[l("最大交替子数组和"),e(s)])]),eF,t("td",lF,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oF]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nF]),_:1})]),t("td",sF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dF,t("td",_F,[t("a",iF,[l("并行课程 III"),e(s)])]),aF,t("td",rF,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[cF]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[hF]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uF]),_:1}),l(),fF]),t("td",gF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mF,t("td",yF,[t("a",xF,[l("将句子分隔成行的最低成本"),e(s)])]),pF,t("td",bF,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kF]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[MF]),_:1})]),t("td",HF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[IF,t("td",wF,[t("a",vF,[l("两个最好的不重叠活动"),e(s)])]),qF,t("td",zF,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[CF]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[OF]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jF]),_:1}),l(),LF]),t("td",EF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PF,t("td",KF,[t("a",VF,[l("同源字符串检测"),e(s)])]),NF,t("td",DF,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[BF]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[YF]),_:1})]),t("td",AF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JF,t("td",RF,[t("a",SF,[l("所有子字符串中的元音"),e(s)])]),UF,t("td",WF,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[XF]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[FF]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[GF]),_:1}),l(),TF]),t("td",QF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZF,t("td",$F,[t("a",tG,[l("喂食仓鼠的最小食物桶数"),e(s)])]),eG,t("td",lG,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[oG]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[nG]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sG]),_:1})]),t("td",dG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_G,t("td",iG,[t("a",aG,[l("统计农场中肥沃金字塔的数目"),e(s)])]),rG,t("td",cG,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hG]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uG]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[fG]),_:1})]),t("td",gG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mG,t("td",yG,[t("a",xG,[l("适合野炊的日子"),e(s)])]),pG,t("td",bG,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kG]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[MG]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[HG]),_:1})]),t("td",IG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wG,t("td",vG,[t("a",qG,[l("股票平滑下跌阶段的数目"),e(s)])]),zG,t("td",CG,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[OG]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[jG]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[LG]),_:1})]),t("td",EG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PG,t("td",KG,[t("a",VG,[l("解决智力问题"),e(s)])]),NG,t("td",DG,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[BG]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[YG]),_:1})]),t("td",AG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JG,t("td",RG,[t("a",SG,[l("在两个数组的区间中选取数字"),e(s)])]),UG,t("td",WG,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[XG]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[FG]),_:1})]),t("td",GG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TG,t("td",QG,[t("a",ZG,[l("分隔长廊的方案数"),e(s)])]),$G,t("td",tT,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[eT]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[lT]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[oT]),_:1})]),t("td",nT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sT,t("td",dT,[t("a",_T,[l("穿过所有点的所需最少直线数量"),e(s)])]),iT,t("td",aT,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[rT]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[cT]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hT]),_:1}),l(),uT]),t("td",fT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gT,t("td",mT,[t("a",yT,[l("删除元素后和的最小差值"),e(s)])]),xT,t("td",pT,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bT]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[kT]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[MT]),_:1})]),t("td",HT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IT,t("td",wT,[t("a",vT,[l("移除所有载有违禁货物车厢所需的最少时间"),e(s)])]),qT,t("td",zT,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[CT]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[OT]),_:1})]),t("td",jT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[LT,t("td",ET,[t("a",PT,[l("数组的最大与和"),e(s)])]),KT,t("td",VT,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[NT]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[DT]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[BT]),_:1}),l(),YT]),t("td",AT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JT,t("td",RT,[t("a",ST,[l("建造坚实的砖墙的方法数"),e(s)])]),UT,t("td",WT,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[XT]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FT]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[GT]),_:1}),l(),TT]),t("td",QT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZT,t("td",$T,[t("a",tQ,[l("完成比赛的最少时间"),e(s)])]),eQ,t("td",lQ,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oQ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nQ]),_:1})]),t("td",sQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dQ,t("td",_Q,[t("a",iQ,[l("建造纸牌屋的方法数"),e(s)])]),aQ,t("td",rQ,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[cQ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[hQ]),_:1})]),t("td",uQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fQ,t("td",gQ,[t("a",mQ,[l("用地毯覆盖后的最少白色砖块"),e(s)])]),yQ,t("td",xQ,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[pQ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[bQ]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[kQ]),_:1})]),t("td",MQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HQ,t("td",IQ,[t("a",wQ,[l("从栈中取出 K 个硬币的最大面值和"),e(s)])]),vQ,t("td",qQ,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zQ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[CQ]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[OQ]),_:1})]),t("td",jQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[LQ,t("td",EQ,[t("a",PQ,[l("选择建筑的方案数"),e(s)])]),KQ,t("td",VQ,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[NQ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[DQ]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[BQ]),_:1})]),t("td",YQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AQ,t("td",JQ,[t("a",RQ,[l("K 条高速公路的最大旅行费用"),e(s)])]),SQ,t("td",UQ,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[WQ]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[XQ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[FQ]),_:1}),l(),GQ]),t("td",TQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QQ,t("td",ZQ,[t("a",$Q,[l("字符串的总引力"),e(s)])]),t("td",tZ,[t("a",eZ,[l("[✓]"),e(s)])]),t("td",lZ,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[oZ]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[nZ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sZ]),_:1})]),t("td",dZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_Z,t("td",iZ,[t("a",aZ,[l("数组变为有序的最小操作次数"),e(s)])]),rZ,t("td",cZ,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[hZ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uZ]),_:1})]),t("td",fZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gZ,t("td",mZ,[t("a",yZ,[l("统计打字方案数"),e(s)])]),xZ,t("td",pZ,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[bZ]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[kZ]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[MZ]),_:1}),l(),HZ]),t("td",IZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wZ,t("td",vZ,[t("a",qZ,[l("检查是否有合法括号字符串路径"),e(s)])]),zZ,t("td",CZ,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[OZ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jZ]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[LZ]),_:1})]),t("td",EZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PZ,t("td",KZ,[t("a",VZ,[l("最大波动的子字符串"),e(s)])]),NZ,t("td",DZ,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[BZ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[YZ]),_:1})]),t("td",AZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JZ,t("td",RZ,[t("a",SZ,[l("最大股票收益"),e(s)])]),UZ,t("td",WZ,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[XZ]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[FZ]),_:1})]),t("td",GZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TZ,t("td",QZ,[t("a",ZZ,[l("跳跃游戏 VIII"),e(s)])]),$Z,t("td",t$,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[e$]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[l$]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[o$]),_:1}),l(),n$]),t("td",s$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d$,t("td",_$,[t("a",i$,[l("网格中的最小路径代价"),e(s)])]),a$,t("td",r$,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[c$]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[h$]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[u$]),_:1})]),t("td",f$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g$,t("td",m$,[t("a",y$,[l("公平分发饼干"),e(s)])]),x$,t("td",p$,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[b$]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k$]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[M$]),_:1}),l(),H$]),t("td",I$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w$,t("td",v$,[t("a",q$,[l("个位数字为 K 的整数之和"),e(s)])]),z$,t("td",C$,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[O$]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[j$]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[L$]),_:1}),l(),E$]),t("td",P$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K$,t("td",V$,[t("a",N$,[l("小于等于 K 的最长二进制子序列"),e(s)])]),D$,t("td",B$,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Y$]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[A$]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[J$]),_:1}),l(),R$]),t("td",S$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U$,t("td",W$,[t("a",X$,[l("卖木头块"),e(s)])]),F$,t("td",G$,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[T$]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Q$]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Z$]),_:1})]),t("td",$$,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ttt,t("td",ett,[t("a",ltt,[l("二叉树中得到结果所需的最少翻转次数"),e(s)])]),ott,t("td",ntt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[stt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dtt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_tt]),_:1}),l(),itt]),t("td",att,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rtt,t("td",ctt,[t("a",htt,[l("不同骰子序列的数目"),e(s)])]),utt,t("td",ftt,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[gtt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[mtt]),_:1})]),t("td",ytt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xtt,t("td",ptt,[t("a",btt,[l("统计放置房子的方式数"),e(s)])]),ktt,t("td",Mtt,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Htt]),_:1})]),t("td",Itt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wtt,t("td",vtt,[t("a",qtt,[l("拼接数组的最大分数"),e(s)])]),ztt,t("td",Ctt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ott]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jtt]),_:1})]),t("td",Ltt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ett,t("td",Ptt,[t("a",Ktt,[l("知道秘密的人数"),e(s)])]),Vtt,t("td",Ntt,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Dtt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Btt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Ytt]),_:1})]),t("td",Att,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jtt,t("td",Rtt,[t("a",Stt,[l("网格图中递增路径的数目"),e(s)])]),Utt,t("td",Wtt,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xtt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ftt]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Gtt]),_:1}),l(),Ttt]),t("td",Qtt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ztt,t("td",$tt,[t("a",tet,[l("统计理想数组的数目"),e(s)])]),eet,t("td",oet,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[net]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[set]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[det]),_:1}),l(),_et]),t("td",iet,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[aet,t("td",ret,[t("a",cet,[l("你能拿走的最大图书数量"),e(s)])]),het,t("td",uet,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[fet]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[get]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[met]),_:1}),l(),yet]),t("td",xet,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pet,t("td",bet,[t("a",ket,[l("乘坐火车路线的最少费用"),e(s)])]),Met,t("td",Het,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Iet]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wet]),_:1})]),t("td",vet,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qet,t("td",zet,[t("a",Cet,[l("检查数组是否存在有效划分"),e(s)])]),Oet,t("td",jet,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Let]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Eet]),_:1})]),t("td",Pet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ket,t("td",Vet,[t("a",Net,[l("最长理想子序列"),e(s)])]),Det,t("td",Bet,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Yet]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Aet]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Jet]),_:1})]),t("td",Ret,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Set,t("td",Uet,[t("a",Wet,[l("统计特殊整数"),e(s)])]),Xet,t("td",Fet,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Get]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Tet]),_:1})]),t("td",Qet,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zet,t("td",$et,[t("a",tlt,[l("选择边来最大化树的得分"),e(s)])]),elt,t("td",llt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[olt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nlt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[slt]),_:1})]),t("td",dlt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_lt,t("td",ilt,[t("a",alt,[l("二进制字符串重新安排顺序需要的时间"),e(s)])]),rlt,t("td",clt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[hlt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ult]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[flt]),_:1})]),t("td",glt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mlt,t("td",ylt,[t("a",xlt,[l("严格递增的子数组个数"),e(s)])]),plt,t("td",blt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[klt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Mlt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Hlt]),_:1})]),t("td",Ilt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wlt,t("td",vlt,[t("a",qlt,[l("恰好移动 k 步到达某一位置的方法数目"),e(s)])]),zlt,t("td",Clt,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Olt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jlt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[Llt]),_:1})]),t("td",Elt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Plt,t("td",Klt,[t("a",Vlt,[l("杀死所有怪物的最短时间"),e(s)])]),Nlt,t("td",Dlt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Blt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ylt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Alt]),_:1}),l(),Jlt]),t("td",Rlt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Slt,t("td",Ult,[t("a",Wlt,[l("最长递增子序列 II"),e(s)])]),Xlt,t("td",Flt,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Glt]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Tlt]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Qlt]),_:1}),l(),Zlt]),t("td",$lt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tot,t("td",eot,[t("a",lot,[l("找到所有好下标"),e(s)])]),oot,t("td",not,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sot]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[dot]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[_ot]),_:1})]),t("td",iot,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aot,t("td",rot,[t("a",cot,[l("对字母串可执行的最大删除数"),e(s)])]),hot,t("td",uot,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[fot]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[got]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[mot]),_:1}),l(),yot]),t("td",xot,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pot,t("td",bot,[t("a",kot,[l("最大限度地提高购买水果的口味"),e(s)])]),Mot,t("td",Hot,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Iot]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wot]),_:1})]),t("td",vot,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qot,t("td",zot,[t("a",Cot,[l("矩阵中和能被 K 整除的路径"),e(s)])]),Oot,t("td",jot,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Lot]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Eot]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Pot]),_:1})]),t("td",Kot,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vot,t("td",Not,[t("a",Dot,[l("使子数组最大公约数大于一的最小分割数"),e(s)])]),Bot,t("td",Yot,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Aot]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Jot]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Rot]),_:1}),l(),Sot]),t("td",Uot,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wot,t("td",Xot,[t("a",Fot,[l("最小化数组中的最大值"),e(s)])]),Got,t("td",Tot,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Qot]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[$ot]),_:1}),l(),tnt]),t("td",ent,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lnt,t("td",ont,[t("a",nnt,[l("最小移动总距离"),e(s)])]),snt,t("td",dnt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_nt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[int]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[ant]),_:1})]),t("td",rnt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cnt,t("td",hnt,[t("a",unt,[l("有效分割中的最少子数组数目"),e(s)])]),fnt,t("td",gnt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mnt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[ynt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[xnt]),_:1}),l(),pnt]),t("td",bnt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[knt,t("td",Mnt,[t("a",Hnt,[l("统计构造好字符串的方案数"),e(s)])]),Int,t("td",wnt,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[vnt]),_:1})]),t("td",qnt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[znt,t("td",Cnt,[t("a",Ont,[l("不重叠回文子字符串的最大数目"),e(s)])]),jnt,t("td",Lnt,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ent]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Pnt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Knt]),_:1}),l(),Vnt]),t("td",Nnt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dnt,t("td",Bnt,[t("a",Ynt,[l("完美分割的方案数"),e(s)])]),Ant,t("td",Jnt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Rnt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Snt]),_:1})]),t("td",Unt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wnt,t("td",Xnt,[t("a",Fnt,[l("统计回文子序列数目"),e(s)])]),Gnt,t("td",Tnt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Qnt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Znt]),_:1})]),t("td",$nt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tst,t("td",est,[t("a",lst,[l("乘积为偶数的子数组数"),e(s)])]),ost,t("td",nst,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sst]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[dst]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[_st]),_:1})]),t("td",ist,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ast,t("td",rst,[t("a",cst,[l("数组中最长的方波"),e(s)])]),hst,t("td",ust,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fst]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[gst]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[mst]),_:1}),l(),yst]),t("td",xst,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pst,t("td",bst,[t("a",kst,[l("检查是否有路径经过相同数量的 0 和 1"),e(s)])]),Mst,t("td",Hst,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ist]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wst]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[vst]),_:1})]),t("td",qst,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zst,t("td",Cst,[t("a",Ost,[l("好分区的数目"),e(s)])]),jst,t("td",Lst,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Est]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Pst]),_:1})]),t("td",Kst,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vst,t("td",Nst,[t("a",Dst,[l("将字符串分割成值不超过 K 的子字符串"),e(s)])]),Bst,t("td",Yst,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ast]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Jst]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Rst]),_:1})]),t("td",Sst,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ust,t("td",Wst,[t("a",Xst,[l("好二进制字符串的数量"),e(s)])]),Fst,t("td",Gst,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Tst]),_:1})]),t("td",Qst,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zst,t("td",$st,[t("a",tdt,[l("最大价值和与最小价值和的差值"),e(s)])]),edt,t("td",ldt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[odt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ndt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sdt]),_:1}),l(),ddt]),t("td",_dt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[idt,t("td",adt,[t("a",rdt,[l("拆分数组的最小代价"),e(s)])]),cdt,t("td",hdt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[udt]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[fdt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[gdt]),_:1}),l(),mdt]),t("td",ydt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xdt,t("td",pdt,[t("a",bdt,[l("统计上升四元组"),e(s)])]),kdt,t("td",Mdt,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Hdt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Idt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wdt]),_:1}),l(),vdt]),t("td",qdt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zdt,t("td",Cdt,[t("a",Odt,[l("二进制矩阵中翻转最多一次使路径不连通"),e(s)])]),jdt,t("td",Ldt,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Edt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Pdt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Kdt]),_:1}),l(),Vdt]),t("td",Ndt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ddt,t("td",Bdt,[t("a",Ydt,[l("将整数减少到零需要的最少操作数"),e(s)])]),Adt,t("td",Jdt,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Rdt]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Sdt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Udt]),_:1})]),t("td",Wdt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xdt,t("td",Fdt,[t("a",Gdt,[l("无平方子集计数"),e(s)])]),Tdt,t("td",Qdt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Zdt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$dt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[t_t]),_:1}),l(),e_t]),t("td",l_t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o_t,t("td",n_t,[t("a",s_t,[l("找出对应 LCP 矩阵的字符串"),e(s)])]),d_t,t("td",__t,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[i_t]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[a_t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[r_t]),_:1}),l(),c_t]),t("td",h_t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[u_t,t("td",f_t,[t("a",g_t,[l("统计可能的树根数目"),e(s)])]),m_t,t("td",y_t,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[x_t]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[p_t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[b_t]),_:1}),l(),k_t]),t("td",M_t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H_t,t("td",I_t,[t("a",w_t,[l("获得分数的方法数"),e(s)])]),v_t,t("td",q_t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[z_t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[C_t]),_:1})]),t("td",O_t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j_t,t("td",L_t,[t("a",E_t,[l("美丽子集的数目"),e(s)])]),P_t,t("td",K_t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[V_t]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[N_t]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[D_t]),_:1}),l(),B_t]),t("td",Y_t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A_t,t("td",J_t,[t("a",R_t,[l("找到最大开销的子字符串"),e(s)])]),S_t,t("td",U_t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[W_t]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[X_t]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[F_t]),_:1}),l(),G_t]),t("td",T_t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q_t,t("td",Z_t,[t("a",$_t,[l("网格图中最少访问的格子数"),e(s)])]),tit,t("td",eit,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[lit]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[oit]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[nit]),_:1}),l(),sit]),t("td",dit,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_it,t("td",iit,[t("a",ait,[l("统计 K-Free 子集的总数"),e(s)])]),rit,t("td",cit,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hit]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[uit]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fit]),_:1}),l(),git]),t("td",mit,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yit,t("td",xit,[t("a",pit,[l("构造有效字符串的最少插入数"),e(s)])]),bit,t("td",kit,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Mit]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Hit]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Iit]),_:1}),l(),wit]),t("td",vit,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qit,t("td",zit,[t("a",Cit,[l("最小化旅行的价格总和"),e(s)])]),Oit,t("td",jit,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Lit]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Eit]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Pit]),_:1}),l(),Kit]),t("td",Vit,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nit,t("td",Dit,[t("a",Bit,[l("使二叉树所有路径值相等的最小代价"),e(s)])]),Yit,t("td",Ait,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Jit]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Rit]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sit]),_:1}),l(),Uit]),t("td",Wit,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xit,t("td",Fit,[t("a",Git,[l("英雄的力量"),e(s)])]),Tit,t("td",Qit,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zit]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[$it]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[tat]),_:1}),l(),eat]),t("td",lat,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oat,t("td",nat,[t("a",sat,[l("矩阵中移动的最大次数"),e(s)])]),dat,t("td",_at,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[iat]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[aat]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[rat]),_:1})]),t("td",cat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hat,t("td",uat,[t("a",fat,[l("字符串中的额外字符"),e(s)])]),gat,t("td",mat,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[yat]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xat]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[pat]),_:1}),l(),bat]),t("td",kat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mat,t("td",Hat,[t("a",Iat,[l("一个小组的最大实力值"),e(s)])]),wat,t("td",vat,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[qat]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[zat]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Cat]),_:1}),l(),Oat]),t("td",jat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lat,t("td",Eat,[t("a",Pat,[l("使所有字符相等的最小成本"),e(s)])]),Kat,t("td",Vat,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Nat]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Dat]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Bat]),_:1})]),t("td",Yat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Aat,t("td",Jat,[t("a",Rat,[l("矩阵中严格递增的单元格数"),e(s)])]),Sat,t("td",Uat,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Wat]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xat]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Fat]),_:1}),l(),Gat]),t("td",Tat,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qat,t("td",Zat,[t("a",$at,[l("统计整数数目"),e(s)])]),trt,t("td",ert,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[lrt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ort]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nrt]),_:1})]),t("td",srt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[drt,t("td",_rt,[t("a",irt,[l("特别的排列"),e(s)])]),art,t("td",rrt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[crt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hrt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[urt]),_:1}),l(),frt]),t("td",grt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mrt,t("td",yrt,[t("a",xrt,[l("给墙壁刷油漆"),e(s)])]),prt,t("td",brt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[krt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Mrt]),_:1})]),t("td",Hrt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Irt,t("td",wrt,[t("a",vrt,[l("构造最长的新字符串"),e(s)])]),qrt,t("td",zrt,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Crt]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[Ort]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[jrt]),_:1}),l(),Lrt]),t("td",Ert,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Prt,t("td",Krt,[t("a",Vrt,[l("字符串连接删减字母"),e(s)])]),Nrt,t("td",Drt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Brt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Yrt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Art]),_:1})]),t("td",Jrt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rrt,t("td",Srt,[t("a",Urt,[l("将数组划分成若干好子数组的方式"),e(s)])]),Wrt,t("td",Xrt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Frt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Grt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Trt]),_:1})]),t("td",Qrt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zrt,t("td",$rt,[t("a",tct,[l("将字符串分割为最少的美丽子字符串"),e(s)])]),ect,t("td",lct,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[oct]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[nct]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sct]),_:1}),l(),dct]),t("td",_ct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ict,t("td",act,[t("a",rct,[l("达到末尾下标所需的最大跳跃次数"),e(s)])]),cct,t("td",hct,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uct]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fct]),_:1})]),t("td",gct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mct,t("td",yct,[t("a",xct,[l("构造最长非递减子数组"),e(s)])]),pct,t("td",bct,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kct]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Mct]),_:1})]),t("td",Hct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ict,t("td",wct,[t("a",vct,[l("访问数组中的位置使分数最大"),e(s)])]),qct,t("td",zct,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Cct]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Oct]),_:1})]),t("td",jct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lct,t("td",Ect,[t("a",Pct,[l("将一个数字表示成幂的和的方案数"),e(s)])]),Kct,t("td",Vct,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Nct]),_:1})]),t("td",Dct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bct,t("td",Yct,[t("a",Act,[l("树中可以形成回文的路径数"),e(s)])]),Jct,t("td",Rct,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Sct]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Uct]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Wct]),_:1}),l(),Xct]),t("td",Fct,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gct,t("td",Tct,[t("a",Qct,[l("统计范围内的步进数字数目"),e(s)])]),Zct,t("td",$ct,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[tht]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[eht]),_:1})]),t("td",lht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oht,t("td",nht,[t("a",sht,[l("使数组和小于等于 x 的最少时间"),e(s)])]),dht,t("td",_ht,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[iht]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[aht]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[rht]),_:1})]),t("td",cht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hht,t("td",uht,[t("a",fht,[l("判断是否能拆分数组"),e(s)])]),ght,t("td",mht,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[yht]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xht]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[pht]),_:1})]),t("td",bht,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kht,t("td",Mht,[t("a",Hht,[l("将三个组排序"),e(s)])]),Iht,t("td",wht,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vht]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[qht]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zht]),_:1})]),t("td",Cht,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oht,t("td",jht,[t("a",Lht,[l("范围中美丽整数的数目"),e(s)])]),Eht,t("td",Pht,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Kht]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Vht]),_:1})]),t("td",Nht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dht,t("td",Bht,[t("a",Yht,[l("销售利润最大化"),e(s)])]),Aht,t("td",Jht,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Rht]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Sht]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Uht]),_:1}),l(),Wht]),t("td",Xht,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fht,t("td",Ght,[t("a",Tht,[l("在传球游戏中最大化函数值"),e(s)])]),Qht,t("td",Zht,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[$ht]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[t1t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[e1t]),_:1})]),t("td",l1t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o1t,t("td",n1t,[t("a",s1t,[l("将石头分散到网格图的最少移动次数"),e(s)])]),d1t,t("td",_1t,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[i1t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[a1t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[r1t]),_:1}),l(),c1t]),t("td",h1t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u1t,t("td",f1t,[t("a",g1t,[l("字符串转换"),e(s)])]),m1t,t("td",y1t,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[x1t]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[p1t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[b1t]),_:1}),l(),k1t]),t("td",M1t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H1t,t("td",I1t,[t("a",w1t,[l("可以到达每一个节点的最少边反转次数"),e(s)])]),v1t,t("td",q1t,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[z1t]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[C1t]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[O1t]),_:1}),l(),j1t]),t("td",L1t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E1t,t("td",P1t,[t("a",K1t,[l("统计树中的合法路径数目"),e(s)])]),V1t,t("td",N1t,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[D1t]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[B1t]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Y1t]),_:1}),l(),A1t]),t("td",J1t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R1t,t("td",S1t,[t("a",U1t,[l("有向图访问计数"),e(s)])]),W1t,t("td",X1t,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[F1t]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[G1t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[T1t]),_:1})]),t("td",Q1t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Z1t,t("td",$1t,[t("a",tut,[l("将相邻元素相乘后得到最小化数组"),e(s)])]),eut,t("td",lut,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[out]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nut]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sut]),_:1})]),t("td",dut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_ut,t("td",iut,[t("a",aut,[l("执行操作使两个字符串相等"),e(s)])]),rut,t("td",cut,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[hut]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uut]),_:1})]),t("td",fut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gut,t("td",mut,[t("a",yut,[l("最长相邻不相等子序列 I"),e(s)])]),xut,t("td",put,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[but]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kut]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Mut]),_:1}),l(),Hut]),t("td",Iut,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wut,t("td",vut,[t("a",qut,[l("最长相邻不相等子序列 II"),e(s)])]),zut,t("td",Cut,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Out]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[jut]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Lut]),_:1})]),t("td",Eut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Put,t("td",Kut,[t("a",Vut,[l("和带限制的子多重集合的数目"),e(s)])]),Nut,t("td",Dut,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[But]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Yut]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Aut]),_:1}),l(),Jut]),t("td",Rut,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sut,t("td",Uut,[t("a",Wut,[l("得到 K 个半回文串的最少修改次数"),e(s)])]),Xut,t("td",Fut,[e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Gut]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Tut]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Qut]),_:1})]),t("td",Zut,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$ut,t("td",tft,[t("a",eft,[l("在网格上移动到目的地的方法数"),e(s)])]),lft,t("td",oft,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[nft]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sft]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[dft]),_:1})]),t("td",_ft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ift,t("td",aft,[t("a",rft,[l("和为目标值的最长子序列的长度"),e(s)])]),cft,t("td",hft,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uft]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fft]),_:1})]),t("td",gft,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mft,t("td",yft,[t("a",xft,[l("子数组不同元素数目的平方和 II"),e(s)])]),pft,t("td",bft,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[kft]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Mft]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hft]),_:1}),l(),Ift]),t("td",wft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vft,t("td",qft,[t("a",zft,[l("使数组变美的最小增量运算数"),e(s)])]),Cft,t("td",Oft,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jft]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Lft]),_:1})]),t("td",Eft,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pft,t("td",Kft,[t("a",Vft,[l("收集所有金币可获得的最大积分"),e(s)])]),Nft,t("td",Dft,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Bft]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Yft]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Aft]),_:1}),l(),Jft]),t("td",Rft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sft,t("td",Uft,[t("a",Wft,[l("在树上执行操作以后得到的最大分数"),e(s)])]),Xft,t("td",Fft,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Gft]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Tft]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Qft]),_:1})]),t("td",Zft,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$ft,t("td",tgt,[t("a",egt,[l("平衡子序列的最大和"),e(s)])]),lgt,t("td",ogt,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ngt]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[sgt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[dgt]),_:1}),l(),_gt]),t("td",igt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[agt,t("td",rgt,[t("a",cgt,[l("重新排列后包含指定子字符串的字符串数目"),e(s)])]),hgt,t("td",ugt,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[fgt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ggt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[mgt]),_:1})]),t("td",ygt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xgt,t("td",pgt,[t("a",bgt,[l("购买水果需要的最少金币数"),e(s)])]),kgt,t("td",Mgt,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Hgt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Igt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wgt]),_:1}),l(),vgt]),t("td",qgt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zgt,t("td",Cgt,[t("a",Ogt,[l("找到最大非递减数组的长度"),e(s)])]),jgt,t("td",Lgt,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Egt]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Pgt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Kgt]),_:1}),l(),Vgt]),t("td",Ngt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dgt,t("td",Bgt,[t("a",Ygt,[l("消除相邻近似相等字符"),e(s)])]),Agt,t("td",Jgt,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Rgt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Sgt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ugt]),_:1})]),t("td",Wgt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xgt,t("td",Fgt,[t("a",Ggt,[l("购买水果需要的最少金币数 II"),e(s)])]),Tgt,t("td",Qgt,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Zgt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$gt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[tmt]),_:1}),l(),emt]),t("td",lmt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[omt,t("td",nmt,[t("a",smt,[l("树中每个节点放置的金币数目"),e(s)])]),dmt,t("td",_mt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[imt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[amt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[rmt]),_:1}),l(),cmt]),t("td",hmt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[umt,t("td",fmt,[t("a",gmt,[l("转换字符串的最小成本 II"),e(s)])]),mmt,t("td",ymt,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[xmt]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[pmt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bmt]),_:1}),l(),kmt]),t("td",Mmt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hmt,t("td",Imt,[t("a",wmt,[l("最贵的无法购买的商品"),e(s)])]),vmt,t("td",qmt,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[zmt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Cmt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[Omt]),_:1})]),t("td",jmt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lmt,t("td",Emt,[t("a",Pmt,[l("自整除排列的数量"),e(s)])]),Kmt,t("td",Vmt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Nmt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Dmt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Bmt]),_:1}),l(),Ymt]),t("td",Amt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jmt,t("td",Rmt,[t("a",Smt,[l("使 X 和 Y 相等的最少操作次数"),e(s)])]),Umt,t("td",Wmt,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Xmt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Fmt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Gmt]),_:1})]),t("td",Tmt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qmt,t("td",Zmt,[t("a",$mt,[l("统计强大整数的数目"),e(s)])]),tyt,t("td",eyt,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[lyt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[oyt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nyt]),_:1})]),t("td",syt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dyt,t("td",_yt,[t("a",iyt,[l("执行操作后的最大分割数量"),e(s)])]),ayt,t("td",ryt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[cyt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[hyt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uyt]),_:1}),l(),fyt]),t("td",gyt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[myt,t("td",yyt,[t("a",xyt,[l("相同颜色的最大子树"),e(s)])]),pyt,t("td",byt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[kyt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Myt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hyt]),_:1}),l(),Iyt]),t("td",wyt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vyt,t("td",qyt,[t("a",zyt,[l("价值和小于等于 K 的最大数字"),e(s)])]),Cyt,t("td",Oyt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[jyt]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Lyt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Eyt]),_:1})]),t("td",Pyt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kyt,t("td",Vyt,[t("a",Nyt,[l("可处理的最大删除操作数 I"),e(s)])]),Dyt,t("td",Byt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yyt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ayt]),_:1})]),t("td",Jyt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ryt,t("td",Syt,[t("a",Uyt,[l("统计各位数字都不同的数字个数 II"),e(s)])]),Wyt,t("td",Xyt,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Fyt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Gyt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Tyt]),_:1})]),t("td",Qyt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zyt,t("td",$yt,[t("a",t3t,[l("相同分数的最大操作数目 II"),e(s)])]),e3t,t("td",l3t,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[o3t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[n3t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[s3t]),_:1})]),t("td",d3t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_3t,t("td",i3t,[t("a",a3t,[l("修改数组后最大化数组中的连续元素数目"),e(s)])]),r3t,t("td",c3t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[h3t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[u3t]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[f3t]),_:1})]),t("td",g3t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m3t,t("td",y3t,[t("a",x3t,[l("最大节点价值之和"),e(s)])]),p3t,t("td",b3t,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[k3t]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[M3t]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[H3t]),_:1}),l(),I3t]),t("td",w3t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[v3t,t("td",q3t,[t("a",z3t,[l("K 个不相交子数组的最大能量值"),e(s)])]),C3t,t("td",O3t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[j3t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[L3t]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[E3t]),_:1})]),t("td",P3t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K3t,t("td",V3t,[t("a",N3t,[l("求出所有子序列的能量和"),e(s)])]),D3t,t("td",B3t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Y3t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[A3t]),_:1})]),t("td",J3t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R3t,t("td",S3t,[t("a",U3t,[l("求出所有子序列的能量和"),e(s)])]),W3t,t("td",X3t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[F3t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[G3t]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[T3t]),_:1})]),t("td",Q3t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Z3t,t("td",$3t,[t("a",txt,[l("划分数组得到最小的值之和"),e(s)])]),ext,t("td",lxt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[oxt]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[nxt]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[sxt]),_:1}),l(),dxt]),t("td",_xt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ixt,t("td",axt,[t("a",rxt,[l("使矩阵满足条件的最少操作次数"),e(s)])]),cxt,t("td",hxt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uxt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fxt]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[gxt]),_:1})]),t("td",mxt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yxt,t("td",xxt,[t("a",pxt,[l("找出所有稳定的二进制数组 I"),e(s)])]),bxt,t("td",kxt,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Mxt]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[Hxt]),_:1})]),t("td",Ixt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wxt,t("td",vxt,[t("a",qxt,[l("找出所有稳定的二进制数组 II"),e(s)])]),zxt,t("td",Cxt,[e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Oxt]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[jxt]),_:1})]),t("td",Lxt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ext,t("td",Pxt,[t("a",Kxt,[l("通过添加或删除结尾字符来同化字符串"),e(s)])]),Vxt,t("td",Nxt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Dxt]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Bxt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Yxt]),_:1}),l(),Axt]),t("td",Jxt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rxt,t("td",Sxt,[t("a",Uxt,[l("分割字符频率相等的最少子字符串"),e(s)])]),Wxt,t("td",Xxt,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Fxt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Gxt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Txt]),_:1}),l(),Qxt]),t("td",Zxt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$xt,t("td",t4t,[t("a",e4t,[l("矩阵中的最大得分"),e(s)])]),l4t,t("td",o4t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[n4t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[s4t]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[d4t]),_:1})]),t("td",_4t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i4t,t("td",a4t,[t("a",r4t,[l("找出分数最低的排列"),e(s)])]),c4t,t("td",h4t,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[u4t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[f4t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[g4t]),_:1}),l(),m4t]),t("td",y4t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x4t,t("td",p4t,[t("a",b4t,[l("到达第 K 级台阶的方案数"),e(s)])]),k4t,t("td",M4t,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[H4t]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[I4t]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[w4t]),_:1}),l(),v4t]),t("td",q4t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z4t,t("td",C4t,[t("a",O4t,[l("不包含相邻元素的子序列的最大和"),e(s)])]),j4t,t("td",L4t,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[E4t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[P4t]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[K4t]),_:1}),l(),V4t]),t("td",N4t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D4t,t("td",B4t,[t("a",Y4t,[l("求出最长好子序列 I"),e(s)])]),A4t,t("td",J4t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[R4t]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[S4t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[U4t]),_:1})]),t("td",W4t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X4t,t("td",F4t,[t("a",G4t,[l("求出最长好子序列 II"),e(s)])]),T4t,t("td",Q4t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Z4t]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[$4t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[t2t]),_:1})]),t("td",e2t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l2t,t("td",o2t,[t("a",n2t,[l("执行操作可获得的最大总奖励 I"),e(s)])]),s2t,t("td",d2t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_2t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[i2t]),_:1})]),t("td",a2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r2t,t("td",c2t,[t("a",h2t,[l("执行操作可获得的最大总奖励 II"),e(s)])]),u2t,t("td",f2t,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[g2t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[m2t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[y2t]),_:1})]),t("td",x2t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p2t,t("td",b2t,[t("a",k2t,[l("达到总和的方法数量"),e(s)])]),M2t,t("td",H2t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[I2t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[w2t]),_:1})]),t("td",v2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q2t,t("td",z2t,[t("a",C2t,[l("施咒的最大总伤害"),e(s)])]),O2t,t("td",j2t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[L2t]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[E2t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[P2t]),_:1}),l(),K2t]),t("td",V2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N2t,t("td",D2t,[t("a",B2t,[l("使二进制数组全部等于 1 的最少操作次数 II"),e(s)])]),Y2t,t("td",A2t,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[J2t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[R2t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[S2t]),_:1})]),t("td",U2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W2t,t("td",X2t,[t("a",F2t,[l("统计逆序对的数目"),e(s)])]),G2t,t("td",T2t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Q2t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Z2t]),_:1})]),t("td",$2t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tpt,t("td",ept,[t("a",lpt,[l("最大化子数组的总成本"),e(s)])]),opt,t("td",npt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[spt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[dpt]),_:1})]),t("td",_pt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ipt,t("td",apt,[t("a",rpt,[l("找出有效子序列的最大长度 I"),e(s)])]),cpt,t("td",hpt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[upt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fpt]),_:1})]),t("td",gpt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mpt,t("td",ypt,[t("a",xpt,[l("找出有效子序列的最大长度 II"),e(s)])]),ppt,t("td",bpt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kpt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Mpt]),_:1})]),t("td",Hpt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ipt,t("td",wpt,[t("a",vpt,[l("最大数组跳跃得分 I"),e(s)])]),qpt,t("td",zpt,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Cpt]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Opt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jpt]),_:1}),l(),Lpt]),t("td",Ept,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ppt,t("td",Kpt,[t("a",Vpt,[l("最小代价构造字符串"),e(s)])]),Npt,t("td",Dpt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Bpt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ypt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Apt]),_:1}),l(),Jpt]),t("td",Rpt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Spt,t("td",Upt,[t("a",Wpt,[l("切蛋糕的最小总开销 I"),e(s)])]),Xpt,t("td",Fpt,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Gpt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Tpt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Qpt]),_:1}),l(),Zpt]),t("td",$pt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t5t,t("td",e5t,[t("a",l5t,[l("网格图操作后的最大分数"),e(s)])]),o5t,t("td",n5t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[s5t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[d5t]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[_5t]),_:1}),l(),i5t]),t("td",a5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[r5t,t("td",c5t,[t("a",h5t,[l("使数组等于目标数组所需的最少操作次数"),e(s)])]),u5t,t("td",f5t,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[g5t]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[m5t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y5t]),_:1}),l(),x5t]),t("td",p5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b5t,t("td",k5t,[t("a",M5t,[l("标记所有节点需要的时间"),e(s)])]),H5t,t("td",I5t,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[w5t]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[v5t]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[q5t]),_:1}),l(),z5t]),t("td",C5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[O5t,t("td",j5t,[t("a",L5t,[l("奇数和子序列的数量"),e(s)])]),E5t,t("td",P5t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[K5t]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[V5t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[N5t]),_:1}),l(),D5t]),t("td",B5t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y5t,t("td",A5t,[t("a",J5t,[l("单调数组对的数目 I"),e(s)])]),R5t,t("td",S5t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[U5t]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[W5t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[X5t]),_:1}),l(),F5t]),t("td",G5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T5t,t("td",Q5t,[t("a",Z5t,[l("单调数组对的数目 II"),e(s)])]),$5t,t("td",tbt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ebt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[lbt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[obt]),_:1}),l(),nbt]),t("td",sbt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dbt,t("td",_bt,[t("a",ibt,[l("放三个车的价值之和最大 I"),e(s)])]),abt,t("td",rbt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[cbt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[hbt]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[ubt]),_:1}),l(),fbt]),t("td",gbt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mbt,t("td",ybt,[t("a",xbt,[l("放三个车的价值之和最大 II"),e(s)])]),pbt,t("td",bbt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kbt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Mbt]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[Hbt]),_:1}),l(),Ibt]),t("td",wbt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vbt,t("td",qbt,[t("a",zbt,[l("超级饮料的最大强化能量"),e(s)])]),Cbt,t("td",Obt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jbt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Lbt]),_:1})]),t("td",Ebt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pbt,t("td",Kbt,[t("a",Vbt,[l("找出最大的 N 位 K 回文数"),e(s)])]),Nbt,t("td",Dbt,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Bbt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Ybt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Abt]),_:1}),l(),Jbt]),t("td",Rbt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sbt,t("td",Ubt,[t("a",Wbt,[l("构建两个递增数组"),e(s)])]),Xbt,t("td",Fbt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gbt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Tbt]),_:1})]),t("td",Qbt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zbt,t("td",$bt,[t("a",t0t,[l("选择矩阵中单元格的最大得分"),e(s)])]),e0t,t("td",l0t,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[o0t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[n0t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[s0t]),_:1}),l(),d0t]),t("td",_0t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i0t,t("td",a0t,[t("a",r0t,[l("查询子数组最大异或值"),e(s)])]),c0t,t("td",h0t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[u0t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[f0t]),_:1})]),t("td",g0t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m0t,t("td",y0t,[t("a",x0t,[l("连续子数组的和"),e(s)])]),p0t,t("td",b0t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k0t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[M0t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[H0t]),_:1})]),t("td",I0t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w0t,t("td",v0t,[t("a",q0t,[l("求出数组中最大序列值"),e(s)])]),z0t,t("td",C0t,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[O0t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[j0t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[L0t]),_:1})]),t("td",E0t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[P0t,t("td",K0t,[t("a",V0t,[l("最高乘法得分"),e(s)])]),N0t,t("td",D0t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[B0t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Y0t]),_:1})]),t("td",A0t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J0t,t("td",R0t,[t("a",S0t,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),U0t,t("td",W0t,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[X0t]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[F0t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[G0t]),_:1}),l(),T0t]),t("td",Q0t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z0t,t("td",$0t,[t("a",t8t,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),e8t,t("td",l8t,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[o8t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[n8t]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[s8t]),_:1}),l(),d8t]),t("td",_8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i8t,t("td",a8t,[t("a",r8t,[l("连续子序列的和"),e(s)])]),c8t,t("td",h8t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[u8t]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[f8t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[g8t]),_:1})]),t("td",m8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y8t,t("td",x8t,[t("a",p8t,[l("字典序最小的合法序列"),e(s)])]),b8t,t("td",k8t,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[M8t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[H8t]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[I8t]),_:1}),l(),w8t]),t("td",v8t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q8t,t("td",z8t,[t("a",C8t,[l("从原字符串里进行删除操作的最多次数"),e(s)])]),O8t,t("td",j8t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[L8t]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[E8t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[P8t]),_:1}),l(),K8t]),t("td",V8t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N8t,t("td",D8t,[t("a",B8t,[l("安排活动的方案数"),e(s)])]),Y8t,t("td",A8t,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[J8t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[R8t]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[S8t]),_:1})]),t("td",U8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W8t,t("td",X8t,[t("a",F8t,[l("统计能获胜的出招序列数"),e(s)])]),G8t,t("td",T8t,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Q8t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Z8t]),_:1})]),t("td",$8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t6t,t("td",e6t,[t("a",l6t,[l("覆盖"),e(s)])]),o6t,t("td",n6t,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[s6t]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[d6t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_6t]),_:1}),l(),i6t]),t("td",a6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[r6t,t("td",c6t,[t("a",h6t,[l("传递信息"),e(s)])]),u6t,t("td",f6t,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[g6t]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[m6t]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[y6t]),_:1}),l(),x6t]),t("td",p6t,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[b6t,t("td",k6t,[t("a",M6t,[l("最小跳跃次数"),e(s)])]),H6t,t("td",I6t,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[w6t]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[v6t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[q6t]),_:1}),l(),z6t]),t("td",C6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[O6t,t("td",j6t,[t("a",L6t,[l("二叉树任务调度"),e(s)])]),E6t,t("td",P6t,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[K6t]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[V6t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[N6t]),_:1}),l(),D6t]),t("td",B6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y6t,t("td",A6t,[t("a",J6t,[l("寻宝"),e(s)])]),R6t,t("td",S6t,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[U6t]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[W6t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[X6t]),_:1}),l(),F6t]),t("td",G6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T6t,t("td",Q6t,[t("a",Z6t,[l("切分数组"),e(s)])]),$6t,t("td",t7t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[e7t]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[l7t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[o7t]),_:1}),l(),n7t]),t("td",s7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d7t,t("td",_7t,[t("a",i7t,[l("秋叶收藏集"),e(s)])]),a7t,t("td",r7t,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[c7t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[h7t]),_:1})]),t("td",u7t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f7t,t("td",g7t,[t("a",m7t,[l("快速公交"),e(s)])]),y7t,t("td",x7t,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[p7t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[b7t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[k7t]),_:1})]),t("td",M7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H7t,t("td",I7t,[t("a",w7t,[l("古董键盘"),e(s)])]),v7t,t("td",q7t,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[z7t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[C7t]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[O7t]),_:1})]),t("td",j7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L7t,t("td",E7t,[t("a",P7t,[l("导航装置"),e(s)])]),K7t,t("td",V7t,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[N7t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[D7t]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[B7t]),_:1})]),t("td",Y7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A7t,t("td",J7t,[t("a",R7t,[l("变换的迷宫"),e(s)])]),S7t,t("td",U7t,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[W7t]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X7t]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[F7t]),_:1}),l(),G7t]),t("td",T7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Q7t,t("td",Z7t,[t("a",$7t,[l("二叉树染色"),e(s)])]),t9t,t("td",e9t,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[l9t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[o9t]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[n9t]),_:1})]),t("td",s9t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d9t,t("td",_9t,[t("a",i9t,[l("最多牌组数"),e(s)])]),a9t,t("td",r9t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[c9t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[h9t]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[u9t]),_:1})]),t("td",f9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[g9t,t("td",m9t,[t("a",y9t,[l("守卫城堡"),e(s)])]),x9t,t("td",p9t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[b9t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[k9t]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[M9t]),_:1})]),t("td",H9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[I9t,t("td",w9t,[t("a",v9t,[l("十字路口的交通"),e(s)])]),q9t,t("td",z9t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[C9t]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[O9t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[j9t]),_:1})]),t("td",L9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E9t,t("td",P9t,[t("a",K9t,[l("自行车炫技赛场"),e(s)])]),V9t,t("td",N9t,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[D9t]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[B9t]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Y9t]),_:1}),l(),A9t]),t("td",J9t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R9t,t("td",S9t,[t("a",U9t,[l("入场安检"),e(s)])]),W9t,t("td",X9t,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[F9t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[G9t]),_:1})]),t("td",T9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Q9t,t("td",Z9t,[t("a",$9t,[l("守护太空城"),e(s)])]),tkt,t("td",ekt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[lkt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[okt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nkt]),_:1}),l(),skt]),t("td",dkt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_kt,t("td",ikt,[t("a",akt,[l("打地鼠"),e(s)])]),rkt,t("td",ckt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hkt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ukt]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[fkt]),_:1}),l(),gkt]),t("td",mkt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ykt,t("td",xkt,[t("a",pkt,[l("搭桥过河"),e(s)])]),bkt,t("td",kkt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Mkt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Hkt]),_:1})]),t("td",Ikt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wkt,t("td",vkt,[t("a",qkt,[l("力扣泡泡龙"),e(s)])]),zkt,t("td",Ckt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Okt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jkt]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Lkt]),_:1})]),t("td",Ekt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pkt,t("td",Kkt,[t("a",Vkt,[l("弹珠游戏"),e(s)])]),Nkt,t("td",Dkt,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Bkt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ykt]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Akt]),_:1}),l(),Jkt]),t("td",Rkt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Skt,t("td",Ukt,[t("a",Wkt,[l("二叉树灯饰"),e(s)])]),Xkt,t("td",Fkt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Gkt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Tkt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Qkt]),_:1}),l(),Zkt]),t("td",$kt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tMt,t("td",eMt,[t("a",lMt,[l("舒适的湿度"),e(s)])]),oMt,t("td",nMt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sMt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[dMt]),_:1})]),t("td",_Mt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iMt,t("td",aMt,[t("a",rMt,[l("Hello LeetCode!"),e(s)])]),cMt,t("td",hMt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[uMt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fMt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[gMt]),_:1}),l(),mMt]),t("td",yMt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xMt,t("td",pMt,[t("a",bMt,[l("下载插件"),e(s)])]),kMt,t("td",MMt,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[HMt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[IMt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wMt]),_:1})]),t("td",vMt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qMt,t("td",zMt,[t("a",CMt,[l("斐波那契数列"),e(s)])]),t("td",OMt,[t("a",jMt,[l("[✓]"),e(s)])]),t("td",LMt,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[EMt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[PMt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[KMt]),_:1})]),t("td",VMt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[NMt,t("td",DMt,[t("a",BMt,[l("青蛙跳台阶问题"),e(s)])]),t("td",YMt,[t("a",AMt,[l("[✓]"),e(s)])]),t("td",JMt,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[RMt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[SMt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[UMt]),_:1})]),t("td",WMt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[XMt,t("td",FMt,[t("a",GMt,[l("机器人的运动范围"),e(s)])]),t("td",TMt,[t("a",QMt,[l("[✓]"),e(s)])]),t("td",ZMt,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$Mt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tHt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[eHt]),_:1})]),t("td",lHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oHt,t("td",nHt,[t("a",sHt,[l("剪绳子"),e(s)])]),t("td",dHt,[t("a",_Ht,[l("[✓]"),e(s)])]),t("td",iHt,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[aHt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[rHt]),_:1})]),t("td",cHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hHt,t("td",uHt,[t("a",fHt,[l("剪绳子 II"),e(s)])]),t("td",gHt,[t("a",mHt,[l("[✓]"),e(s)])]),t("td",yHt,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xHt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[pHt]),_:1})]),t("td",bHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kHt,t("td",MHt,[t("a",HHt,[l("正则表达式匹配"),e(s)])]),t("td",IHt,[t("a",wHt,[l("[✓]"),e(s)])]),t("td",vHt,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[qHt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[zHt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[CHt]),_:1})]),t("td",OHt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jHt,t("td",LHt,[t("a",EHt,[l("连续子数组的最大和"),e(s)])]),t("td",PHt,[t("a",KHt,[l("[✓]"),e(s)])]),t("td",VHt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[NHt]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[DHt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[BHt]),_:1})]),t("td",YHt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[AHt,t("td",JHt,[t("a",RHt,[l("1～n 整数中 1 出现的次数"),e(s)])]),SHt,t("td",UHt,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[WHt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[XHt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[FHt]),_:1})]),t("td",GHt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[THt,t("td",QHt,[t("a",ZHt,[l("把数字翻译成字符串"),e(s)])]),$Ht,t("td",tIt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[eIt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[lIt]),_:1})]),t("td",oIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nIt,t("td",sIt,[t("a",dIt,[l("礼物的最大价值"),e(s)])]),t("td",_It,[t("a",iIt,[l("[✓]"),e(s)])]),t("td",aIt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rIt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[cIt]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[hIt]),_:1})]),t("td",uIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fIt,t("td",gIt,[t("a",mIt,[l("丑数"),e(s)])]),t("td",yIt,[t("a",xIt,[l("[✓]"),e(s)])]),t("td",pIt,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[bIt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[kIt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[MIt]),_:1}),l(),HIt]),t("td",IIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wIt,t("td",vIt,[t("a",qIt,[l("n个骰子的点数"),e(s)])]),t("td",zIt,[t("a",CIt,[l("[✓]"),e(s)])]),t("td",OIt,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[jIt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[LIt]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[EIt]),_:1})]),t("td",PIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KIt,t("td",VIt,[t("a",NIt,[l("股票的最大利润"),e(s)])]),t("td",DIt,[t("a",BIt,[l("[✓]"),e(s)])]),t("td",YIt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[AIt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[JIt]),_:1})]),t("td",RIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SIt,t("td",UIt,[t("a",WIt,[l("三角形中最小路径之和"),e(s)])]),XIt,t("td",FIt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[GIt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[TIt]),_:1})]),t("td",QIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZIt,t("td",$It,[t("a",twt,[l("加减的目标值"),e(s)])]),ewt,t("td",lwt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[owt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nwt]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[swt]),_:1})]),t("td",dwt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_wt,t("td",iwt,[t("a",awt,[l("最少的硬币数目"),e(s)])]),rwt,t("td",cwt,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hwt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uwt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fwt]),_:1})]),t("td",gwt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mwt,t("td",ywt,[t("a",xwt,[l("排列的数目"),e(s)])]),pwt,t("td",bwt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kwt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Mwt]),_:1})]),t("td",Hwt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Iwt,t("td",wwt,[t("a",vwt,[l("矩阵中的距离"),e(s)])]),qwt,t("td",zwt,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Cwt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Owt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jwt]),_:1}),l(),Lwt]),t("td",Ewt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pwt,t("td",Kwt,[t("a",Vwt,[l("最长递增路径"),e(s)])]),Nwt,t("td",Dwt,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Bwt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ywt]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Awt]),_:1}),l(),Jwt]),t("td",Rwt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Swt,t("td",Uwt,[t("a",Wwt,[l("回文子字符串的个数"),e(s)])]),Xwt,t("td",Fwt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Gwt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Twt]),_:1})]),t("td",Qwt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zwt,t("td",$wt,[t("a",tvt,[l("前 n 个数字二进制中 1 的个数"),e(s)])]),evt,t("td",lvt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[ovt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[nvt]),_:1})]),t("td",svt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[dvt,t("td",_vt,[t("a",ivt,[l("矩阵中最大的矩形"),e(s)])]),avt,t("td",rvt,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[cvt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hvt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[uvt]),_:1}),l(),fvt]),t("td",gvt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mvt,t("td",yvt,[t("a",xvt,[l("节点之和最大的路径"),e(s)])]),pvt,t("td",bvt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[kvt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Mvt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Hvt]),_:1}),l(),Ivt]),t("td",wvt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vvt,t("td",qvt,[t("a",zvt,[l("生成匹配的括号"),e(s)])]),Cvt,t("td",Ovt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[jvt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Lvt]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Evt]),_:1})]),t("td",Pvt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kvt,t("td",Vvt,[t("a",Nvt,[l("爬楼梯的最少成本"),e(s)])]),Dvt,t("td",Bvt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yvt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Avt]),_:1})]),t("td",Jvt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Rvt,t("td",Svt,[t("a",Uvt,[l("房屋偷盗"),e(s)])]),Wvt,t("td",Xvt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fvt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Gvt]),_:1})]),t("td",Tvt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qvt,t("td",Zvt,[t("a",$vt,[l("环形房屋偷盗"),e(s)])]),tqt,t("td",eqt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[lqt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[oqt]),_:1})]),t("td",nqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sqt,t("td",dqt,[t("a",_qt,[l("粉刷房子"),e(s)])]),iqt,t("td",aqt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rqt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[cqt]),_:1})]),t("td",hqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uqt,t("td",fqt,[t("a",gqt,[l("翻转字符"),e(s)])]),mqt,t("td",yqt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[xqt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[pqt]),_:1})]),t("td",bqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kqt,t("td",Mqt,[t("a",Hqt,[l("最长斐波那契数列"),e(s)])]),Iqt,t("td",wqt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vqt]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[qqt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zqt]),_:1})]),t("td",Cqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oqt,t("td",jqt,[t("a",Lqt,[l("最少回文分割"),e(s)])]),Eqt,t("td",Pqt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Kqt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Vqt]),_:1})]),t("td",Nqt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dqt,t("td",Bqt,[t("a",Yqt,[l("最长公共子序列"),e(s)])]),Aqt,t("td",Jqt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Rqt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Sqt]),_:1})]),t("td",Uqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wqt,t("td",Xqt,[t("a",Fqt,[l("字符串交织"),e(s)])]),Gqt,t("td",Tqt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Qqt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Zqt]),_:1})]),t("td",$qt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tzt,t("td",ezt,[t("a",lzt,[l("子序列的数目"),e(s)])]),ozt,t("td",nzt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[szt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[dzt]),_:1})]),t("td",_zt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[izt,t("td",azt,[t("a",rzt,[l("路径的数目"),e(s)])]),czt,t("td",hzt,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[uzt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[fzt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[gzt]),_:1})]),t("td",mzt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yzt,t("td",xzt,[t("a",pzt,[l("最小路径之和"),e(s)])]),bzt,t("td",kzt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Mzt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Hzt]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Izt]),_:1})]),t("td",wzt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vzt,t("td",qzt,[t("a",zzt,[l("翻转数位"),e(s)])]),Czt,t("td",Ozt,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[jzt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Lzt]),_:1})]),t("td",Ezt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Pzt,t("td",Kzt,[t("a",Vzt,[l("三步问题"),e(s)])]),Nzt,t("td",Dzt,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Bzt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Yzt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Azt]),_:1})]),t("td",Jzt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Rzt,t("td",Szt,[t("a",Uzt,[l("迷路的机器人"),e(s)])]),Wzt,t("td",Xzt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fzt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Gzt]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Tzt]),_:1}),l(),Qzt]),t("td",Zzt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$zt,t("td",tCt,[t("a",eCt,[l("括号"),e(s)])]),lCt,t("td",oCt,[e(n,{to:"/outline/tag/string.html"},{default:o(()=>[nCt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[sCt]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[dCt]),_:1})]),t("td",_Ct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iCt,t("td",aCt,[t("a",rCt,[l("硬币"),e(s)])]),cCt,t("td",hCt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uCt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[fCt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[gCt]),_:1})]),t("td",mCt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yCt,t("td",xCt,[t("a",pCt,[l("堆箱子"),e(s)])]),bCt,t("td",kCt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[MCt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[HCt]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[ICt]),_:1})]),t("td",wCt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vCt,t("td",qCt,[t("a",zCt,[l("布尔运算"),e(s)])]),CCt,t("td",OCt,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[jCt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[LCt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ECt]),_:1})]),t("td",PCt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KCt,t("td",VCt,[t("a",NCt,[l("连续数列"),e(s)])]),DCt,t("td",BCt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[YCt]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[ACt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[JCt]),_:1})]),t("td",RCt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[SCt,t("td",UCt,[t("a",WCt,[l("2出现的次数"),e(s)])]),XCt,t("td",FCt,[e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[GCt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[TCt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[QCt]),_:1})]),t("td",ZCt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$Ct,t("td",tOt,[t("a",eOt,[l("马戏团人塔"),e(s)])]),lOt,t("td",oOt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nOt]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[sOt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[dOt]),_:1}),l(),_Ot]),t("td",iOt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aOt,t("td",rOt,[t("a",cOt,[l("第 k 个数"),e(s)])]),hOt,t("td",uOt,[e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[fOt]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[gOt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[mOt]),_:1}),l(),yOt]),t("td",xOt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pOt,t("td",bOt,[t("a",kOt,[l("恢复空格"),e(s)])]),MOt,t("td",HOt,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[IOt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wOt]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[vOt]),_:1}),l(),qOt]),t("td",zOt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[COt,t("td",OOt,[t("a",jOt,[l("按摩师"),e(s)])]),LOt,t("td",EOt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[POt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[KOt]),_:1})]),t("td",VOt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[NOt,t("td",DOt,[t("a",BOt,[l("直方图的水量"),e(s)])]),YOt,t("td",AOt,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[JOt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ROt]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[SOt]),_:1}),l(),UOt]),t("td",WOt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XOt,t("td",FOt,[t("a",GOt,[l("最大黑方阵"),e(s)])]),TOt,t("td",QOt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ZOt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[$Ot]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[tjt]),_:1})]),t("td",ejt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ljt,t("td",ojt,[t("a",njt,[l("最大子矩阵"),e(s)])]),sjt,t("td",djt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_jt]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ijt]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ajt]),_:1}),l(),rjt]),t("td",cjt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const mjt=i(h,[["render",hjt],["__file","dynamic-programming.html.vue"]]);export{mjt as default};
