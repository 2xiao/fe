import{_ as a,r,o as i,c,f as _,a as t,d as o,b as e,w as l,e as h}from"./app-ynO5B_DP.js";const u={},f=h('<h1 id="_3-5-贪心算法" tabindex="-1"><a class="header-anchor" href="#_3-5-贪心算法" aria-hidden="true">#</a> 3.5 贪心算法</h1><h4 id="什么是贪心算法" tabindex="-1"><a class="header-anchor" href="#什么是贪心算法" aria-hidden="true">#</a> 什么是贪心算法？</h4><p>贪心算法，又称贪婪算法，在对问题求解时，总是做出在当前看来最好的选择，期望通过每个阶段的局部最优选择达到全局最优，但结果不一定最优。</p><h4 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景" aria-hidden="true">#</a> 适用场景</h4><p>简单的说，问题能够分解成子问题来解决，子问题的最优解能递推到最终问题的最优解，就能用贪心算法的到最后的最优解，这种子问题最优解称为最优子结构。</p><h4 id="贪心算法与动态规划的区别" tabindex="-1"><a class="header-anchor" href="#贪心算法与动态规划的区别" aria-hidden="true">#</a> 贪心算法与动态规划的区别</h4><p>贪心算法与动态规划的不同点在于它对每个子问题的解决方案都做出当前的最优选择，不能回退，而动态规划会保留之前的运算结果，并根据之前的结果进行选择，有回退的功能，贪心是动态规划的理想化的情况。</p>',7),g=t("h2",{id:"相关题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),o(" 相关题目")],-1),m=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),y=t("td",{style:{"text-align":"center"}},"455",-1),x={style:{"text-align":"left"}},p={href:"https://leetcode.com/problems/assign-cookies",target:"_blank",rel:"noopener noreferrer"},b=t("td",{style:{"text-align":"center"}},null,-1),k={style:{"text-align":"left"}},M=t("code",null,"贪心",-1),E=t("code",null,"数组",-1),v=t("code",null,"双指针",-1),w=t("code",null,"1+",-1),T={style:{"text-align":"left"}},I=t("td",{style:{"text-align":"center"}},"860",-1),N={style:{"text-align":"left"}},L={href:"https://leetcode.com/problems/lemonade-change",target:"_blank",rel:"noopener noreferrer"},R=t("td",{style:{"text-align":"center"}},null,-1),S={style:{"text-align":"left"}},V=t("code",null,"贪心",-1),q=t("code",null,"数组",-1),A={style:{"text-align":"left"}},B=t("td",{style:{"text-align":"center"}},"56",-1),C={style:{"text-align":"left"}},D={href:"https://leetcode.com/problems/merge-intervals",target:"_blank",rel:"noopener noreferrer"},O={style:{"text-align":"center"}},j={href:"/problem/0056",target:"_blank",rel:"noopener noreferrer"},H={style:{"text-align":"left"}},K=t("code",null,"数组",-1),P=t("code",null,"排序",-1),U={style:{"text-align":"left"}},z=t("td",{style:{"text-align":"center"}},"435",-1),F={style:{"text-align":"left"}},G={href:"https://leetcode.com/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},J=t("td",{style:{"text-align":"center"}},null,-1),Q={style:{"text-align":"left"}},W=t("code",null,"贪心",-1),X=t("code",null,"数组",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"1+",-1),$={style:{"text-align":"left"}},tt=t("td",{style:{"text-align":"center"}},"452",-1),et={style:{"text-align":"left"}},ot={href:"https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons",target:"_blank",rel:"noopener noreferrer"},lt={style:{"text-align":"center"}},nt={href:"/problem/0452",target:"_blank",rel:"noopener noreferrer"},st={style:{"text-align":"left"}},dt=t("code",null,"贪心",-1),_t=t("code",null,"数组",-1),rt=t("code",null,"排序",-1),at={style:{"text-align":"left"}},it=t("td",{style:{"text-align":"center"}},"55",-1),ct={style:{"text-align":"left"}},ht={href:"https://leetcode.com/problems/jump-game",target:"_blank",rel:"noopener noreferrer"},ut={style:{"text-align":"center"}},ft={href:"/problem/0055",target:"_blank",rel:"noopener noreferrer"},gt={style:{"text-align":"left"}},mt=t("code",null,"贪心",-1),yt=t("code",null,"数组",-1),xt=t("code",null,"动态规划",-1),pt={style:{"text-align":"left"}},bt=t("td",{style:{"text-align":"center"}},"45",-1),kt={style:{"text-align":"left"}},Mt={href:"https://leetcode.com/problems/jump-game-ii",target:"_blank",rel:"noopener noreferrer"},Et={style:{"text-align":"center"}},vt={href:"/problem/0045",target:"_blank",rel:"noopener noreferrer"},wt={style:{"text-align":"left"}},Tt=t("code",null,"贪心",-1),It=t("code",null,"数组",-1),Nt=t("code",null,"动态规划",-1),Lt={style:{"text-align":"left"}},Rt=t("td",{style:{"text-align":"center"}},"392",-1),St={style:{"text-align":"left"}},Vt={href:"https://leetcode.com/problems/is-subsequence",target:"_blank",rel:"noopener noreferrer"},qt={style:{"text-align":"center"}},At={href:"/problem/0392",target:"_blank",rel:"noopener noreferrer"},Bt={style:{"text-align":"left"}},Ct=t("code",null,"双指针",-1),Dt=t("code",null,"字符串",-1),Ot=t("code",null,"动态规划",-1),jt={style:{"text-align":"left"}},Ht=t("td",{style:{"text-align":"center"}},"122",-1),Kt={style:{"text-align":"left"}},Pt={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},zt={href:"/problem/0122",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"left"}},Gt=t("code",null,"贪心",-1),Jt=t("code",null,"数组",-1),Qt=t("code",null,"动态规划",-1),Wt={style:{"text-align":"left"}},Xt=t("td",{style:{"text-align":"center"}},"561",-1),Yt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/array-partition",target:"_blank",rel:"noopener noreferrer"},$t=t("td",{style:{"text-align":"center"}},null,-1),te={style:{"text-align":"left"}},ee=t("code",null,"贪心",-1),oe=t("code",null,"数组",-1),le=t("code",null,"计数排序",-1),ne=t("code",null,"1+",-1),se={style:{"text-align":"left"}},de=t("td",{style:{"text-align":"center"}},"1710",-1),_e={style:{"text-align":"left"}},re={href:"https://leetcode.com/problems/maximum-units-on-a-truck",target:"_blank",rel:"noopener noreferrer"},ae=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},ce=t("code",null,"贪心",-1),he=t("code",null,"数组",-1),ue=t("code",null,"排序",-1),fe={style:{"text-align":"left"}},ge=t("td",{style:{"text-align":"center"}},"1217",-1),me={style:{"text-align":"left"}},ye={href:"https://leetcode.com/problems/minimum-cost-to-move-chips-to-the-same-position",target:"_blank",rel:"noopener noreferrer"},xe=t("td",{style:{"text-align":"center"}},null,-1),pe={style:{"text-align":"left"}},be=t("code",null,"贪心",-1),ke=t("code",null,"数组",-1),Me=t("code",null,"数学",-1),Ee={style:{"text-align":"left"}},ve=t("td",{style:{"text-align":"center"}},"1247",-1),we={style:{"text-align":"left"}},Te={href:"https://leetcode.com/problems/minimum-swaps-to-make-strings-equal",target:"_blank",rel:"noopener noreferrer"},Ie=t("td",{style:{"text-align":"center"}},null,-1),Ne={style:{"text-align":"left"}},Le=t("code",null,"贪心",-1),Re=t("code",null,"数学",-1),Se=t("code",null,"字符串",-1),Ve={style:{"text-align":"left"}},qe=t("td",{style:{"text-align":"center"}},"1400",-1),Ae={style:{"text-align":"left"}},Be={href:"https://leetcode.com/problems/construct-k-palindrome-strings",target:"_blank",rel:"noopener noreferrer"},Ce=t("td",{style:{"text-align":"center"}},null,-1),De={style:{"text-align":"left"}},Oe=t("code",null,"贪心",-1),je=t("code",null,"哈希表",-1),He=t("code",null,"字符串",-1),Ke=t("code",null,"1+",-1),Pe={style:{"text-align":"left"}},Ue=t("td",{style:{"text-align":"center"}},"921",-1),ze={style:{"text-align":"left"}},Fe={href:"https://leetcode.com/problems/minimum-add-to-make-parentheses-valid",target:"_blank",rel:"noopener noreferrer"},Ge={style:{"text-align":"center"}},Je={href:"/problem/0921",target:"_blank",rel:"noopener noreferrer"},Qe={style:{"text-align":"left"}},We=t("code",null,"栈",-1),Xe=t("code",null,"贪心",-1),Ye=t("code",null,"字符串",-1),Ze={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"1029",-1),to={style:{"text-align":"left"}},eo={href:"https://leetcode.com/problems/two-city-scheduling",target:"_blank",rel:"noopener noreferrer"},oo=t("td",{style:{"text-align":"center"}},null,-1),lo={style:{"text-align":"left"}},no=t("code",null,"贪心",-1),so=t("code",null,"数组",-1),_o=t("code",null,"排序",-1),ro={style:{"text-align":"left"}},ao=t("td",{style:{"text-align":"center"}},"1605",-1),io={style:{"text-align":"left"}},co={href:"https://leetcode.com/problems/find-valid-matrix-given-row-and-column-sums",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},null,-1),uo={style:{"text-align":"left"}},fo=t("code",null,"贪心",-1),go=t("code",null,"数组",-1),mo=t("code",null,"矩阵",-1),yo={style:{"text-align":"left"}},xo=t("td",{style:{"text-align":"center"}},"135",-1),po={style:{"text-align":"left"}},bo={href:"https://leetcode.com/problems/candy",target:"_blank",rel:"noopener noreferrer"},ko={style:{"text-align":"center"}},Mo={href:"/problem/0135",target:"_blank",rel:"noopener noreferrer"},Eo={style:{"text-align":"left"}},vo=t("code",null,"贪心",-1),wo=t("code",null,"数组",-1),To={style:{"text-align":"left"}},Io=t("td",{style:{"text-align":"center"}},"134",-1),No={style:{"text-align":"left"}},Lo={href:"https://leetcode.com/problems/gas-station",target:"_blank",rel:"noopener noreferrer"},Ro={style:{"text-align":"center"}},So={href:"/problem/0134",target:"_blank",rel:"noopener noreferrer"},Vo={style:{"text-align":"left"}},qo=t("code",null,"贪心",-1),Ao=t("code",null,"数组",-1),Bo={style:{"text-align":"left"}},Co=t("td",{style:{"text-align":"center"}},"53",-1),Do={style:{"text-align":"left"}},Oo={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},jo={style:{"text-align":"center"}},Ho={href:"/problem/0053",target:"_blank",rel:"noopener noreferrer"},Ko={style:{"text-align":"left"}},Po=t("code",null,"数组",-1),Uo=t("code",null,"分治",-1),zo=t("code",null,"动态规划",-1),Fo={style:{"text-align":"left"}},Go=t("td",{style:{"text-align":"center"}},"376",-1),Jo={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/wiggle-subsequence",target:"_blank",rel:"noopener noreferrer"},Wo=t("td",{style:{"text-align":"center"}},null,-1),Xo={style:{"text-align":"left"}},Yo=t("code",null,"贪心",-1),Zo=t("code",null,"数组",-1),$o=t("code",null,"动态规划",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"738",-1),ol={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/monotone-increasing-digits",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},null,-1),sl={style:{"text-align":"left"}},dl=t("code",null,"贪心",-1),_l=t("code",null,"数学",-1),rl={style:{"text-align":"left"}},al=t("td",{style:{"text-align":"center"}},"402",-1),il={style:{"text-align":"left"}},cl={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},hl=t("td",{style:{"text-align":"center"}},null,-1),ul={style:{"text-align":"left"}},fl=t("code",null,"栈",-1),gl=t("code",null,"贪心",-1),ml=t("code",null,"字符串",-1),yl=t("code",null,"1+",-1),xl={style:{"text-align":"left"}},pl=t("td",{style:{"text-align":"center"}},"861",-1),bl={style:{"text-align":"left"}},kl={href:"https://leetcode.com/problems/score-after-flipping-matrix",target:"_blank",rel:"noopener noreferrer"},Ml=t("td",{style:{"text-align":"center"}},null,-1),El={style:{"text-align":"left"}},vl=t("code",null,"贪心",-1),wl=t("code",null,"位运算",-1),Tl=t("code",null,"数组",-1),Il=t("code",null,"1+",-1),Nl={style:{"text-align":"left"}},Ll=t("td",{style:{"text-align":"center"}},"670",-1),Rl={style:{"text-align":"left"}},Sl={href:"https://leetcode.com/problems/maximum-swap",target:"_blank",rel:"noopener noreferrer"},Vl={style:{"text-align":"center"}},ql={href:"/problem/0670",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"left"}},Bl=t("code",null,"贪心",-1),Cl=t("code",null,"数学",-1),Dl={style:{"text-align":"left"}};function Ol(jl,Hl){const s=r("ExternalLinkIcon"),n=r("RouterLink"),d=r("font");return i(),c("div",null,[f,_(" START TABLE "),_(" Please keep comment here to allow auto update "),_(" DON'T EDIT THIS SECTION, INSTEAD RE-RUN `npm run lc` TO UPDATE "),g,_(" prettier-ignore "),t("table",null,[m,t("tbody",null,[t("tr",null,[y,t("td",x,[t("a",p,[o("分发饼干"),e(s)])]),b,t("td",k,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[v]),_:1}),o(),w]),t("td",T,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[I,t("td",N,[t("a",L,[o("柠檬水找零"),e(s)])]),R,t("td",S,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[q]),_:1})]),t("td",A,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[B,t("td",C,[t("a",D,[o("合并区间"),e(s)])]),t("td",O,[t("a",j,[o("[✓]"),e(s)])]),t("td",H,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[P]),_:1})]),t("td",U,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[z,t("td",F,[t("a",G,[o("无重叠区间"),e(s)])]),J,t("td",Q,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),Z]),t("td",$,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tt,t("td",et,[t("a",ot,[o("用最少数量的箭引爆气球"),e(s)])]),t("td",lt,[t("a",nt,[o("[✓]"),e(s)])]),t("td",st,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[rt]),_:1})]),t("td",at,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[it,t("td",ct,[t("a",ht,[o("跳跃游戏"),e(s)])]),t("td",ut,[t("a",ft,[o("[✓]"),e(s)])]),t("td",gt,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[mt]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[yt]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[xt]),_:1})]),t("td",pt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bt,t("td",kt,[t("a",Mt,[o("跳跃游戏 II"),e(s)])]),t("td",Et,[t("a",vt,[o("[✓]"),e(s)])]),t("td",wt,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Tt]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Nt]),_:1})]),t("td",Lt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Rt,t("td",St,[t("a",Vt,[o("判断子序列"),e(s)])]),t("td",qt,[t("a",At,[o("[✓]"),e(s)])]),t("td",Bt,[e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Dt]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ot]),_:1})]),t("td",jt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ht,t("td",Kt,[t("a",Pt,[o("买卖股票的最佳时机 II"),e(s)])]),t("td",Ut,[t("a",zt,[o("[✓]"),e(s)])]),t("td",Ft,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Gt]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Jt]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Qt]),_:1})]),t("td",Wt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xt,t("td",Yt,[t("a",Zt,[o("数组拆分"),e(s)])]),$t,t("td",te,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[ee]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[oe]),_:1}),o(),e(n,{to:"/outline/tag/counting-sort.html"},{default:l(()=>[le]),_:1}),o(),ne]),t("td",se,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[de,t("td",_e,[t("a",re,[o("卡车上的最大单元数"),e(s)])]),ae,t("td",ie,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[ce]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[he]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[ue]),_:1})]),t("td",fe,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ge,t("td",me,[t("a",ye,[o("玩筹码"),e(s)])]),xe,t("td",pe,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[be]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ke]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Me]),_:1})]),t("td",Ee,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ve,t("td",we,[t("a",Te,[o("交换字符使得字符串相同"),e(s)])]),Ie,t("td",Ne,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Le]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Re]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Se]),_:1})]),t("td",Ve,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qe,t("td",Ae,[t("a",Be,[o("构造 K 个回文字符串"),e(s)])]),Ce,t("td",De,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Oe]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[He]),_:1}),o(),Ke]),t("td",Pe,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ue,t("td",ze,[t("a",Fe,[o("使括号有效的最少添加"),e(s)])]),t("td",Ge,[t("a",Je,[o("[✓]"),e(s)])]),t("td",Qe,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[We]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Xe]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ye]),_:1})]),t("td",Ze,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$e,t("td",to,[t("a",eo,[o("两地调度"),e(s)])]),oo,t("td",lo,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[no]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[so]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[_o]),_:1})]),t("td",ro,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ao,t("td",io,[t("a",co,[o("给定行和列的和求可行矩阵"),e(s)])]),ho,t("td",uo,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[fo]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[go]),_:1}),o(),e(n,{to:"/outline/tag/matrix.html"},{default:l(()=>[mo]),_:1})]),t("td",yo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xo,t("td",po,[t("a",bo,[o("分发糖果"),e(s)])]),t("td",ko,[t("a",Mo,[o("[✓]"),e(s)])]),t("td",Eo,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[wo]),_:1})]),t("td",To,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Io,t("td",No,[t("a",Lo,[o("加油站"),e(s)])]),t("td",Ro,[t("a",So,[o("[✓]"),e(s)])]),t("td",Vo,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[qo]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Ao]),_:1})]),t("td",Bo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Co,t("td",Do,[t("a",Oo,[o("最大子数组和"),e(s)])]),t("td",jo,[t("a",Ho,[o("[✓]"),e(s)])]),t("td",Ko,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:l(()=>[Uo]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[zo]),_:1})]),t("td",Fo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Go,t("td",Jo,[t("a",Qo,[o("摆动序列"),e(s)])]),Wo,t("td",Xo,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Yo]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Zo]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[$o]),_:1})]),t("td",tl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[el,t("td",ol,[t("a",ll,[o("单调递增的数字"),e(s)])]),nl,t("td",sl,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[dl]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[_l]),_:1})]),t("td",rl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[al,t("td",il,[t("a",cl,[o("移掉 K 位数字"),e(s)])]),hl,t("td",ul,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[fl]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[gl]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[ml]),_:1}),o(),yl]),t("td",xl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pl,t("td",bl,[t("a",kl,[o("翻转矩阵后的得分"),e(s)])]),Ml,t("td",El,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[vl]),_:1}),o(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[wl]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Tl]),_:1}),o(),Il]),t("td",Nl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ll,t("td",Rl,[t("a",Sl,[o("最大交换"),e(s)])]),t("td",Vl,[t("a",ql,[o("[✓]"),e(s)])]),t("td",Al,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Bl]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Cl]),_:1})]),t("td",Dl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const Pl=a(u,[["render",Ol],["__file","greed.html.vue"]]);export{Pl as default};
