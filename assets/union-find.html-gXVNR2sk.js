import{_ as i,r as _,o as c,c as a,a as t,b as e,w as o,d as l,f as r}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"并查集",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#并查集","aria-hidden":"true"},"#"),l(" 并查集")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),H=t("code",null,"队列",-1),w=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),L=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),O=t("code",null,"二叉搜索树",-1),E=t("code",null,"最小生成树",-1),P=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),N=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),W=t("code",null,"强连通分量",-1),j=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),K=t("span",{class:"blue"},"并查集",-1),Q=t("code",null,"字典树",-1),R=t("code",null,"线段树",-1),U=t("code",null,"树状数组",-1),F=t("code",null,"后缀数组",-1),G=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),T=t("code",null,"递归",-1),X=t("code",null,"分治",-1),Y=t("code",null,"回溯",-1),Z=t("code",null,"贪心",-1),D=t("code",null,"动态规划",-1),J=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),ct=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),Ht=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Lt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Ot=t("code",null,"脑筋急转弯",-1),Et=t("code",null,"交互",-1),Pt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Nt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Wt=t("td",{style:{"text-align":"center"}},"128",-1),jt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Kt={style:{"text-align":"center"}},Qt={href:"/problem/0128",target:"_blank",rel:"noopener noreferrer"},Rt={style:{"text-align":"left"}},Ut=t("code",null,"并查集",-1),Ft=t("code",null,"数组",-1),Gt=t("code",null,"哈希表",-1),St={style:{"text-align":"left"}},Tt=t("td",{style:{"text-align":"center"}},"130",-1),Xt={style:{"text-align":"left"}},Yt={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"center"}},Dt={href:"/problem/0130",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"left"}},$t=t("code",null,"深度优先搜索",-1),te=t("code",null,"广度优先搜索",-1),ee=t("code",null,"并查集",-1),le=t("code",null,"2+",-1),oe={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"200",-1),se={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},_e={style:{"text-align":"center"}},ie={href:"/problem/0200",target:"_blank",rel:"noopener noreferrer"},ce={style:{"text-align":"left"}},ae=t("code",null,"深度优先搜索",-1),re=t("code",null,"广度优先搜索",-1),he=t("code",null,"并查集",-1),ue=t("code",null,"2+",-1),fe={style:{"text-align":"left"}},ge=t("td",{style:{"text-align":"center"}},"261",-1),me={style:{"text-align":"left"}},ye={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},xe=t("td",{style:{"text-align":"center"}},null,-1),pe={style:{"text-align":"left"}},be=t("code",null,"深度优先搜索",-1),ke=t("code",null,"广度优先搜索",-1),Me=t("code",null,"并查集",-1),He=t("code",null,"1+",-1),we={style:{"text-align":"left"}},ve=t("td",{style:{"text-align":"center"}},"305",-1),Ie={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/number-of-islands-ii",target:"_blank",rel:"noopener noreferrer"},Le=t("td",{style:{"text-align":"center"}},null,-1),ze={style:{"text-align":"left"}},Ce=t("code",null,"并查集",-1),Oe=t("code",null,"数组",-1),Ee=t("code",null,"哈希表",-1),Pe={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"323",-1),Ne={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},We=t("td",{style:{"text-align":"center"}},null,-1),je={style:{"text-align":"left"}},Ae=t("code",null,"深度优先搜索",-1),Ke=t("code",null,"广度优先搜索",-1),Qe=t("code",null,"并查集",-1),Re=t("code",null,"1+",-1),Ue={style:{"text-align":"left"}},Fe=t("td",{style:{"text-align":"center"}},"399",-1),Ge={style:{"text-align":"left"}},Se={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Te={style:{"text-align":"center"}},Xe={href:"/problem/0399",target:"_blank",rel:"noopener noreferrer"},Ye={style:{"text-align":"left"}},Ze=t("code",null,"深度优先搜索",-1),De=t("code",null,"广度优先搜索",-1),Je=t("code",null,"并查集",-1),$e=t("code",null,"4+",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"547",-1),ll={style:{"text-align":"left"}},ol={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},null,-1),sl={style:{"text-align":"left"}},dl=t("code",null,"深度优先搜索",-1),_l=t("code",null,"广度优先搜索",-1),il=t("code",null,"并查集",-1),cl=t("code",null,"1+",-1),al={style:{"text-align":"left"}},rl=t("td",{style:{"text-align":"center"}},"684",-1),hl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},fl=t("td",{style:{"text-align":"center"}},null,-1),gl={style:{"text-align":"left"}},ml=t("code",null,"深度优先搜索",-1),yl=t("code",null,"广度优先搜索",-1),xl=t("code",null,"并查集",-1),pl=t("code",null,"1+",-1),bl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"center"}},"685",-1),Ml={style:{"text-align":"left"}},Hl={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},wl=t("td",{style:{"text-align":"center"}},null,-1),vl={style:{"text-align":"left"}},Il=t("code",null,"深度优先搜索",-1),ql=t("code",null,"广度优先搜索",-1),Ll=t("code",null,"并查集",-1),zl=t("code",null,"1+",-1),Cl={style:{"text-align":"left"}},Ol=t("td",{style:{"text-align":"center"}},"694",-1),El={style:{"text-align":"left"}},Pl={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},Bl=t("td",{style:{"text-align":"center"}},null,-1),Nl={style:{"text-align":"left"}},Vl=t("code",null,"深度优先搜索",-1),Wl=t("code",null,"广度优先搜索",-1),jl=t("code",null,"并查集",-1),Al=t("code",null,"2+",-1),Kl={style:{"text-align":"left"}},Ql=t("td",{style:{"text-align":"center"}},"695",-1),Rl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},Fl={style:{"text-align":"center"}},Gl={href:"/problem/0695",target:"_blank",rel:"noopener noreferrer"},Sl={style:{"text-align":"left"}},Tl=t("code",null,"深度优先搜索",-1),Xl=t("code",null,"广度优先搜索",-1),Yl=t("code",null,"并查集",-1),Zl=t("code",null,"2+",-1),Dl={style:{"text-align":"left"}},Jl=t("td",{style:{"text-align":"center"}},"711",-1),$l={style:{"text-align":"left"}},to={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},eo=t("td",{style:{"text-align":"center"}},null,-1),lo={style:{"text-align":"left"}},oo=t("code",null,"深度优先搜索",-1),no=t("code",null,"广度优先搜索",-1),so=t("code",null,"并查集",-1),_o=t("code",null,"2+",-1),io={style:{"text-align":"left"}},co=t("td",{style:{"text-align":"center"}},"721",-1),ao={style:{"text-align":"left"}},ro={href:"https://leetcode.com/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},null,-1),uo={style:{"text-align":"left"}},fo=t("code",null,"深度优先搜索",-1),go=t("code",null,"广度优先搜索",-1),mo=t("code",null,"并查集",-1),yo=t("code",null,"4+",-1),xo={style:{"text-align":"left"}},po=t("td",{style:{"text-align":"center"}},"737",-1),bo={style:{"text-align":"left"}},ko={href:"https://leetcode.com/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},Mo=t("td",{style:{"text-align":"center"}},null,-1),Ho={style:{"text-align":"left"}},wo=t("code",null,"深度优先搜索",-1),vo=t("code",null,"广度优先搜索",-1),Io=t("code",null,"并查集",-1),qo=t("code",null,"3+",-1),Lo={style:{"text-align":"left"}},zo=t("td",{style:{"text-align":"center"}},"765",-1),Co={style:{"text-align":"left"}},Oo={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",{style:{"text-align":"center"}},null,-1),Po={style:{"text-align":"left"}},Bo=t("code",null,"贪心",-1),No=t("code",null,"深度优先搜索",-1),Vo=t("code",null,"广度优先搜索",-1),Wo=t("code",null,"2+",-1),jo={style:{"text-align":"left"}},Ao=t("td",{style:{"text-align":"center"}},"778",-1),Ko={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},Ro=t("td",{style:{"text-align":"center"}},null,-1),Uo={style:{"text-align":"left"}},Fo=t("code",null,"深度优先搜索",-1),Go=t("code",null,"广度优先搜索",-1),So=t("code",null,"并查集",-1),To=t("code",null,"4+",-1),Xo={style:{"text-align":"left"}},Yo=t("td",{style:{"text-align":"center"}},"785",-1),Zo={style:{"text-align":"left"}},Do={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},Jo=t("td",{style:{"text-align":"center"}},null,-1),$o={style:{"text-align":"left"}},tn=t("code",null,"深度优先搜索",-1),en=t("code",null,"广度优先搜索",-1),ln=t("code",null,"并查集",-1),on=t("code",null,"1+",-1),nn={style:{"text-align":"left"}},sn=t("td",{style:{"text-align":"center"}},"803",-1),dn={style:{"text-align":"left"}},_n={href:"https://leetcode.com/problems/bricks-falling-when-hit",target:"_blank",rel:"noopener noreferrer"},cn=t("td",{style:{"text-align":"center"}},null,-1),an={style:{"text-align":"left"}},rn=t("code",null,"并查集",-1),hn=t("code",null,"数组",-1),un=t("code",null,"矩阵",-1),fn={style:{"text-align":"left"}},gn=t("td",{style:{"text-align":"center"}},"827",-1),mn={style:{"text-align":"left"}},yn={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},xn=t("td",{style:{"text-align":"center"}},null,-1),pn={style:{"text-align":"left"}},bn=t("code",null,"深度优先搜索",-1),kn=t("code",null,"广度优先搜索",-1),Mn=t("code",null,"并查集",-1),Hn=t("code",null,"2+",-1),wn={style:{"text-align":"left"}},vn=t("td",{style:{"text-align":"center"}},"839",-1),In={style:{"text-align":"left"}},qn={href:"https://leetcode.com/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},Ln=t("td",{style:{"text-align":"center"}},null,-1),zn={style:{"text-align":"left"}},Cn=t("code",null,"深度优先搜索",-1),On=t("code",null,"广度优先搜索",-1),En=t("code",null,"并查集",-1),Pn=t("code",null,"3+",-1),Bn={style:{"text-align":"left"}},Nn=t("td",{style:{"text-align":"center"}},"886",-1),Vn={style:{"text-align":"left"}},Wn={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},jn=t("td",{style:{"text-align":"center"}},null,-1),An={style:{"text-align":"left"}},Kn=t("code",null,"深度优先搜索",-1),Qn=t("code",null,"广度优先搜索",-1),Rn=t("code",null,"并查集",-1),Un=t("code",null,"1+",-1),Fn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"924",-1),Sn={style:{"text-align":"left"}},Tn={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},Xn=t("td",{style:{"text-align":"center"}},null,-1),Yn={style:{"text-align":"left"}},Zn=t("code",null,"深度优先搜索",-1),Dn=t("code",null,"广度优先搜索",-1),Jn=t("code",null,"并查集",-1),$n=t("code",null,"3+",-1),ts={style:{"text-align":"left"}},es=t("td",{style:{"text-align":"center"}},"928",-1),ls={style:{"text-align":"left"}},os={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},ns=t("td",{style:{"text-align":"center"}},null,-1),ss={style:{"text-align":"left"}},ds=t("code",null,"深度优先搜索",-1),_s=t("code",null,"广度优先搜索",-1),is=t("code",null,"并查集",-1),cs=t("code",null,"3+",-1),as={style:{"text-align":"left"}},rs=t("td",{style:{"text-align":"center"}},"947",-1),hs={style:{"text-align":"left"}},us={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},fs=t("td",{style:{"text-align":"center"}},null,-1),gs={style:{"text-align":"left"}},ms=t("code",null,"深度优先搜索",-1),ys=t("code",null,"并查集",-1),xs=t("code",null,"图",-1),ps=t("code",null,"1+",-1),bs={style:{"text-align":"left"}},ks=t("td",{style:{"text-align":"center"}},"952",-1),Ms={style:{"text-align":"left"}},Hs={href:"https://leetcode.com/problems/largest-component-size-by-common-factor",target:"_blank",rel:"noopener noreferrer"},ws=t("td",{style:{"text-align":"center"}},null,-1),vs={style:{"text-align":"left"}},Is=t("code",null,"并查集",-1),qs=t("code",null,"数组",-1),Ls=t("code",null,"哈希表",-1),zs=t("code",null,"2+",-1),Cs={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"959",-1),Es={style:{"text-align":"left"}},Ps={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},Bs=t("td",{style:{"text-align":"center"}},null,-1),Ns={style:{"text-align":"left"}},Vs=t("code",null,"深度优先搜索",-1),Ws=t("code",null,"广度优先搜索",-1),js=t("code",null,"并查集",-1),As=t("code",null,"3+",-1),Ks={style:{"text-align":"left"}},Qs=t("td",{style:{"text-align":"center"}},"990",-1),Rs={style:{"text-align":"left"}},Us={href:"https://leetcode.com/problems/satisfiability-of-equality-equations",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},null,-1),Gs={style:{"text-align":"left"}},Ss=t("code",null,"并查集",-1),Ts=t("code",null,"图",-1),Xs=t("code",null,"数组",-1),Ys=t("code",null,"1+",-1),Zs={style:{"text-align":"left"}},Ds=t("td",{style:{"text-align":"center"}},"1020",-1),Js={style:{"text-align":"left"}},$s={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},td=t("td",{style:{"text-align":"center"}},null,-1),ed={style:{"text-align":"left"}},ld=t("code",null,"深度优先搜索",-1),od=t("code",null,"广度优先搜索",-1),nd=t("code",null,"并查集",-1),sd=t("code",null,"2+",-1),dd={style:{"text-align":"left"}},_d=t("td",{style:{"text-align":"center"}},"1061",-1),id={style:{"text-align":"left"}},cd={href:"https://leetcode.com/problems/lexicographically-smallest-equivalent-string",target:"_blank",rel:"noopener noreferrer"},ad=t("td",{style:{"text-align":"center"}},null,-1),rd={style:{"text-align":"left"}},hd=t("code",null,"并查集",-1),ud=t("code",null,"字符串",-1),fd={style:{"text-align":"left"}},gd=t("td",{style:{"text-align":"center"}},"1101",-1),md={style:{"text-align":"left"}},yd={href:"https://leetcode.com/problems/the-earliest-moment-when-everyone-become-friends",target:"_blank",rel:"noopener noreferrer"},xd=t("td",{style:{"text-align":"center"}},null,-1),pd={style:{"text-align":"left"}},bd=t("code",null,"并查集",-1),kd=t("code",null,"数组",-1),Md=t("code",null,"排序",-1),Hd={style:{"text-align":"left"}},wd=t("td",{style:{"text-align":"center"}},"1102",-1),vd={style:{"text-align":"left"}},Id={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},qd=t("td",{style:{"text-align":"center"}},null,-1),Ld={style:{"text-align":"left"}},zd=t("code",null,"深度优先搜索",-1),Cd=t("code",null,"广度优先搜索",-1),Od=t("code",null,"并查集",-1),Ed=t("code",null,"4+",-1),Pd={style:{"text-align":"left"}},Bd=t("td",{style:{"text-align":"center"}},"1135",-1),Nd={style:{"text-align":"left"}},Vd={href:"https://leetcode.com/problems/connecting-cities-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},Wd=t("td",{style:{"text-align":"center"}},null,-1),jd={style:{"text-align":"left"}},Ad=t("code",null,"并查集",-1),Kd=t("code",null,"图",-1),Qd=t("code",null,"最小生成树",-1),Rd=t("code",null,"1+",-1),Ud={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"1168",-1),Gd={style:{"text-align":"left"}},Sd={href:"https://leetcode.com/problems/optimize-water-distribution-in-a-village",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},null,-1),Xd={style:{"text-align":"left"}},Yd=t("code",null,"并查集",-1),Zd=t("code",null,"图",-1),Dd=t("code",null,"最小生成树",-1),Jd=t("code",null,"1+",-1),$d={style:{"text-align":"left"}},t_=t("td",{style:{"text-align":"center"}},"1202",-1),e_={style:{"text-align":"left"}},l_={href:"https://leetcode.com/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},o_=t("td",{style:{"text-align":"center"}},null,-1),n_={style:{"text-align":"left"}},s_=t("code",null,"深度优先搜索",-1),d_=t("code",null,"广度优先搜索",-1),__=t("code",null,"并查集",-1),i_=t("code",null,"4+",-1),c_={style:{"text-align":"left"}},a_=t("td",{style:{"text-align":"center"}},"1254",-1),r_={style:{"text-align":"left"}},h_={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},u_=t("td",{style:{"text-align":"center"}},null,-1),f_={style:{"text-align":"left"}},g_=t("code",null,"深度优先搜索",-1),m_=t("code",null,"广度优先搜索",-1),y_=t("code",null,"并查集",-1),x_=t("code",null,"2+",-1),p_={style:{"text-align":"left"}},b_=t("td",{style:{"text-align":"center"}},"1258",-1),k_={style:{"text-align":"left"}},M_={href:"https://leetcode.com/problems/synonymous-sentences",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},v_=t("code",null,"并查集",-1),I_=t("code",null,"数组",-1),q_=t("code",null,"哈希表",-1),L_=t("code",null,"2+",-1),z_={style:{"text-align":"left"}},C_=t("td",{style:{"text-align":"center"}},"1267",-1),O_={style:{"text-align":"left"}},E_={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},P_=t("td",{style:{"text-align":"center"}},null,-1),B_={style:{"text-align":"left"}},N_=t("code",null,"深度优先搜索",-1),V_=t("code",null,"广度优先搜索",-1),W_=t("code",null,"并查集",-1),j_=t("code",null,"3+",-1),A_={style:{"text-align":"left"}},K_=t("td",{style:{"text-align":"center"}},"1319",-1),Q_={style:{"text-align":"left"}},R_={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},U_=t("td",{style:{"text-align":"center"}},null,-1),F_={style:{"text-align":"left"}},G_=t("code",null,"深度优先搜索",-1),S_=t("code",null,"广度优先搜索",-1),T_=t("code",null,"并查集",-1),X_=t("code",null,"1+",-1),Y_={style:{"text-align":"left"}},Z_=t("td",{style:{"text-align":"center"}},"1361",-1),D_={style:{"text-align":"left"}},J_={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},$_=t("td",{style:{"text-align":"center"}},null,-1),ti={style:{"text-align":"left"}},ei=t("code",null,"树",-1),li=t("code",null,"深度优先搜索",-1),oi=t("code",null,"广度优先搜索",-1),ni=t("code",null,"3+",-1),si={style:{"text-align":"left"}},di=t("td",{style:{"text-align":"center"}},"1391",-1),_i={style:{"text-align":"left"}},ii={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},ci=t("td",{style:{"text-align":"center"}},null,-1),ai={style:{"text-align":"left"}},ri=t("code",null,"深度优先搜索",-1),hi=t("code",null,"广度优先搜索",-1),ui=t("code",null,"并查集",-1),fi=t("code",null,"2+",-1),gi={style:{"text-align":"left"}},mi=t("td",{style:{"text-align":"center"}},"1489",-1),yi={style:{"text-align":"left"}},xi={href:"https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",target:"_blank",rel:"noopener noreferrer"},pi=t("td",{style:{"text-align":"center"}},null,-1),bi={style:{"text-align":"left"}},ki=t("code",null,"并查集",-1),Mi=t("code",null,"图",-1),Hi=t("code",null,"最小生成树",-1),wi=t("code",null,"2+",-1),vi={style:{"text-align":"left"}},Ii=t("td",{style:{"text-align":"center"}},"1559",-1),qi={style:{"text-align":"left"}},Li={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},zi=t("td",{style:{"text-align":"center"}},null,-1),Ci={style:{"text-align":"left"}},Oi=t("code",null,"深度优先搜索",-1),Ei=t("code",null,"广度优先搜索",-1),Pi=t("code",null,"并查集",-1),Bi=t("code",null,"2+",-1),Ni={style:{"text-align":"left"}},Vi=t("td",{style:{"text-align":"center"}},"1569",-1),Wi={style:{"text-align":"left"}},ji={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},Ai=t("td",{style:{"text-align":"center"}},null,-1),Ki={style:{"text-align":"left"}},Qi=t("code",null,"树",-1),Ri=t("code",null,"并查集",-1),Ui=t("code",null,"二叉搜索树",-1),Fi=t("code",null,"7+",-1),Gi={style:{"text-align":"left"}},Si=t("td",{style:{"text-align":"center"}},"1579",-1),Ti={style:{"text-align":"left"}},Xi={href:"https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable",target:"_blank",rel:"noopener noreferrer"},Yi=t("td",{style:{"text-align":"center"}},null,-1),Zi={style:{"text-align":"left"}},Di=t("code",null,"并查集",-1),Ji=t("code",null,"图",-1),$i={style:{"text-align":"left"}},tc=t("td",{style:{"text-align":"center"}},"1584",-1),ec={style:{"text-align":"left"}},lc={href:"https://leetcode.com/problems/min-cost-to-connect-all-points",target:"_blank",rel:"noopener noreferrer"},oc=t("td",{style:{"text-align":"center"}},null,-1),nc={style:{"text-align":"left"}},sc=t("code",null,"并查集",-1),dc=t("code",null,"图",-1),_c=t("code",null,"数组",-1),ic=t("code",null,"1+",-1),cc={style:{"text-align":"left"}},ac=t("td",{style:{"text-align":"center"}},"1627",-1),rc={style:{"text-align":"left"}},hc={href:"https://leetcode.com/problems/graph-connectivity-with-threshold",target:"_blank",rel:"noopener noreferrer"},uc=t("td",{style:{"text-align":"center"}},null,-1),fc={style:{"text-align":"left"}},gc=t("code",null,"并查集",-1),mc=t("code",null,"数组",-1),yc=t("code",null,"数学",-1),xc=t("code",null,"1+",-1),pc={style:{"text-align":"left"}},bc=t("td",{style:{"text-align":"center"}},"1631",-1),kc={style:{"text-align":"left"}},Mc={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},Hc=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},vc=t("code",null,"深度优先搜索",-1),Ic=t("code",null,"广度优先搜索",-1),qc=t("code",null,"并查集",-1),Lc=t("code",null,"4+",-1),zc={style:{"text-align":"left"}},Cc=t("td",{style:{"text-align":"center"}},"1632",-1),Oc={style:{"text-align":"left"}},Ec={href:"https://leetcode.com/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},Pc=t("td",{style:{"text-align":"center"}},null,-1),Bc={style:{"text-align":"left"}},Nc=t("code",null,"并查集",-1),Vc=t("code",null,"图",-1),Wc=t("code",null,"拓扑排序",-1),jc=t("code",null,"3+",-1),Ac={style:{"text-align":"left"}},Kc=t("td",{style:{"text-align":"center"}},"1697",-1),Qc={style:{"text-align":"left"}},Rc={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths",target:"_blank",rel:"noopener noreferrer"},Uc=t("td",{style:{"text-align":"center"}},null,-1),Fc={style:{"text-align":"left"}},Gc=t("code",null,"并查集",-1),Sc=t("code",null,"图",-1),Tc=t("code",null,"数组",-1),Xc=t("code",null,"2+",-1),Yc={style:{"text-align":"left"}},Zc=t("td",{style:{"text-align":"center"}},"1722",-1),Dc={style:{"text-align":"left"}},Jc={href:"https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations",target:"_blank",rel:"noopener noreferrer"},$c=t("td",{style:{"text-align":"center"}},null,-1),ta={style:{"text-align":"left"}},ea=t("code",null,"深度优先搜索",-1),la=t("code",null,"并查集",-1),oa=t("code",null,"数组",-1),na={style:{"text-align":"left"}},sa=t("td",{style:{"text-align":"center"}},"1724",-1),da={style:{"text-align":"left"}},_a={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths-ii",target:"_blank",rel:"noopener noreferrer"},ia=t("td",{style:{"text-align":"center"}},null,-1),ca={style:{"text-align":"left"}},aa=t("code",null,"并查集",-1),ra=t("code",null,"图",-1),ha=t("code",null,"最小生成树",-1),ua={style:{"text-align":"left"}},fa=t("td",{style:{"text-align":"center"}},"1905",-1),ga={style:{"text-align":"left"}},ma={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},ya=t("td",{style:{"text-align":"center"}},null,-1),xa={style:{"text-align":"left"}},pa=t("code",null,"深度优先搜索",-1),ba=t("code",null,"广度优先搜索",-1),ka=t("code",null,"并查集",-1),Ma=t("code",null,"2+",-1),Ha={style:{"text-align":"left"}},wa=t("td",{style:{"text-align":"center"}},"1970",-1),va={style:{"text-align":"left"}},Ia={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},qa=t("td",{style:{"text-align":"center"}},null,-1),La={style:{"text-align":"left"}},za=t("code",null,"深度优先搜索",-1),Ca=t("code",null,"广度优先搜索",-1),Oa=t("code",null,"并查集",-1),Ea=t("code",null,"3+",-1),Pa={style:{"text-align":"left"}},Ba=t("td",{style:{"text-align":"center"}},"1971",-1),Na={style:{"text-align":"left"}},Va={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},null,-1),ja={style:{"text-align":"left"}},Aa=t("code",null,"深度优先搜索",-1),Ka=t("code",null,"广度优先搜索",-1),Qa=t("code",null,"并查集",-1),Ra=t("code",null,"1+",-1),Ua={style:{"text-align":"left"}},Fa=t("td",{style:{"text-align":"center"}},"1998",-1),Ga={style:{"text-align":"left"}},Sa={href:"https://leetcode.com/problems/gcd-sort-of-an-array",target:"_blank",rel:"noopener noreferrer"},Ta=t("td",{style:{"text-align":"center"}},null,-1),Xa={style:{"text-align":"left"}},Ya=t("code",null,"并查集",-1),Za=t("code",null,"数组",-1),Da=t("code",null,"数学",-1),Ja=t("code",null,"2+",-1),$a={style:{"text-align":"left"}},tr=t("td",{style:{"text-align":"center"}},"2003",-1),er={style:{"text-align":"left"}},lr={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},or=t("td",{style:{"text-align":"center"}},null,-1),nr={style:{"text-align":"left"}},sr=t("code",null,"树",-1),dr=t("code",null,"深度优先搜索",-1),_r=t("code",null,"并查集",-1),ir=t("code",null,"1+",-1),cr={style:{"text-align":"left"}},ar=t("td",{style:{"text-align":"center"}},"2076",-1),rr={style:{"text-align":"left"}},hr={href:"https://leetcode.com/problems/process-restricted-friend-requests",target:"_blank",rel:"noopener noreferrer"},ur=t("td",{style:{"text-align":"center"}},null,-1),fr={style:{"text-align":"left"}},gr=t("code",null,"并查集",-1),mr=t("code",null,"图",-1),yr={style:{"text-align":"left"}},xr=t("td",{style:{"text-align":"center"}},"2092",-1),pr={style:{"text-align":"left"}},br={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},kr=t("td",{style:{"text-align":"center"}},null,-1),Mr={style:{"text-align":"left"}},Hr=t("code",null,"深度优先搜索",-1),wr=t("code",null,"广度优先搜索",-1),vr=t("code",null,"并查集",-1),Ir=t("code",null,"2+",-1),qr={style:{"text-align":"left"}},Lr=t("td",{style:{"text-align":"center"}},"2157",-1),zr={style:{"text-align":"left"}},Cr={href:"https://leetcode.com/problems/groups-of-strings",target:"_blank",rel:"noopener noreferrer"},Or=t("td",{style:{"text-align":"center"}},null,-1),Er={style:{"text-align":"left"}},Pr=t("code",null,"位运算",-1),Br=t("code",null,"并查集",-1),Nr=t("code",null,"字符串",-1),Vr={style:{"text-align":"left"}},Wr=t("td",{style:{"text-align":"center"}},"2204",-1),jr={style:{"text-align":"left"}},Ar={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},null,-1),Qr={style:{"text-align":"left"}},Rr=t("code",null,"深度优先搜索",-1),Ur=t("code",null,"广度优先搜索",-1),Fr=t("code",null,"并查集",-1),Gr=t("code",null,"1+",-1),Sr={style:{"text-align":"left"}},Tr=t("td",{style:{"text-align":"center"}},"2307",-1),Xr={style:{"text-align":"left"}},Yr={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},Zr=t("td",{style:{"text-align":"center"}},null,-1),Dr={style:{"text-align":"left"}},Jr=t("code",null,"深度优先搜索",-1),$r=t("code",null,"并查集",-1),th=t("code",null,"图",-1),eh=t("code",null,"1+",-1),lh={style:{"text-align":"left"}},oh=t("td",{style:{"text-align":"center"}},"2316",-1),nh={style:{"text-align":"left"}},sh={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},dh=t("td",{style:{"text-align":"center"}},null,-1),_h={style:{"text-align":"left"}},ih=t("code",null,"深度优先搜索",-1),ch=t("code",null,"广度优先搜索",-1),ah=t("code",null,"并查集",-1),rh=t("code",null,"1+",-1),hh={style:{"text-align":"left"}},uh=t("td",{style:{"text-align":"center"}},"2334",-1),fh={style:{"text-align":"left"}},gh={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},mh=t("td",{style:{"text-align":"center"}},null,-1),yh={style:{"text-align":"left"}},xh=t("code",null,"栈",-1),ph=t("code",null,"并查集",-1),bh=t("code",null,"数组",-1),kh=t("code",null,"1+",-1),Mh={style:{"text-align":"left"}},Hh=t("td",{style:{"text-align":"center"}},"2368",-1),wh={style:{"text-align":"left"}},vh={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},Ih=t("td",{style:{"text-align":"center"}},null,-1),qh={style:{"text-align":"left"}},Lh=t("code",null,"树",-1),zh=t("code",null,"深度优先搜索",-1),Ch=t("code",null,"广度优先搜索",-1),Oh=t("code",null,"4+",-1),Eh={style:{"text-align":"left"}},Ph=t("td",{style:{"text-align":"center"}},"2371",-1),Bh={style:{"text-align":"left"}},Nh={href:"https://leetcode.com/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Vh=t("td",{style:{"text-align":"center"}},null,-1),Wh={style:{"text-align":"left"}},jh=t("code",null,"并查集",-1),Ah=t("code",null,"图",-1),Kh=t("code",null,"拓扑排序",-1),Qh=t("code",null,"3+",-1),Rh={style:{"text-align":"left"}},Uh=t("td",{style:{"text-align":"center"}},"2382",-1),Fh={style:{"text-align":"left"}},Gh={href:"https://leetcode.com/problems/maximum-segment-sum-after-removals",target:"_blank",rel:"noopener noreferrer"},Sh=t("td",{style:{"text-align":"center"}},null,-1),Th={style:{"text-align":"left"}},Xh=t("code",null,"并查集",-1),Yh=t("code",null,"数组",-1),Zh=t("code",null,"有序集合",-1),Dh=t("code",null,"1+",-1),Jh={style:{"text-align":"left"}},$h=t("td",{style:{"text-align":"center"}},"2421",-1),tu={style:{"text-align":"left"}},eu={href:"https://leetcode.com/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},lu=t("td",{style:{"text-align":"center"}},null,-1),ou={style:{"text-align":"left"}},nu=t("code",null,"树",-1),su=t("code",null,"并查集",-1),du=t("code",null,"图",-1),_u=t("code",null,"3+",-1),iu={style:{"text-align":"left"}},cu=t("td",{style:{"text-align":"center"}},"2424",-1),au={style:{"text-align":"left"}},ru={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},hu=t("td",{style:{"text-align":"center"}},null,-1),uu={style:{"text-align":"left"}},fu=t("code",null,"并查集",-1),gu=t("code",null,"设计",-1),mu=t("code",null,"树状数组",-1),yu=t("code",null,"4+",-1),xu={style:{"text-align":"left"}},pu=t("td",{style:{"text-align":"center"}},"2492",-1),bu={style:{"text-align":"left"}},ku={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},Mu=t("td",{style:{"text-align":"center"}},null,-1),Hu={style:{"text-align":"left"}},wu=t("code",null,"深度优先搜索",-1),vu=t("code",null,"广度优先搜索",-1),Iu=t("code",null,"并查集",-1),qu=t("code",null,"1+",-1),Lu={style:{"text-align":"left"}},zu=t("td",{style:{"text-align":"center"}},"2493",-1),Cu={style:{"text-align":"left"}},Ou={href:"https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups",target:"_blank",rel:"noopener noreferrer"},Eu=t("td",{style:{"text-align":"center"}},null,-1),Pu={style:{"text-align":"left"}},Bu=t("code",null,"广度优先搜索",-1),Nu=t("code",null,"并查集",-1),Vu=t("code",null,"图",-1),Wu={style:{"text-align":"left"}},ju=t("td",{style:{"text-align":"center"}},"2503",-1),Au={style:{"text-align":"left"}},Ku={href:"https://leetcode.com/problems/maximum-number-of-points-from-grid-queries",target:"_blank",rel:"noopener noreferrer"},Qu=t("td",{style:{"text-align":"center"}},null,-1),Ru={style:{"text-align":"left"}},Uu=t("code",null,"广度优先搜索",-1),Fu=t("code",null,"并查集",-1),Gu=t("code",null,"数组",-1),Su=t("code",null,"4+",-1),Tu={style:{"text-align":"left"}},Xu=t("td",{style:{"text-align":"center"}},"2573",-1),Yu={style:{"text-align":"left"}},Zu={href:"https://leetcode.com/problems/find-the-string-with-lcp",target:"_blank",rel:"noopener noreferrer"},Du=t("td",{style:{"text-align":"center"}},null,-1),Ju={style:{"text-align":"left"}},$u=t("code",null,"贪心",-1),t1=t("code",null,"并查集",-1),e1=t("code",null,"数组",-1),l1=t("code",null,"3+",-1),o1={style:{"text-align":"left"}},n1=t("td",{style:{"text-align":"center"}},"2617",-1),s1={style:{"text-align":"left"}},d1={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},_1=t("td",{style:{"text-align":"center"}},null,-1),i1={style:{"text-align":"left"}},c1=t("code",null,"栈",-1),a1=t("code",null,"广度优先搜索",-1),r1=t("code",null,"并查集",-1),h1=t("code",null,"5+",-1),u1={style:{"text-align":"left"}},f1=t("td",{style:{"text-align":"center"}},"2658",-1),g1={style:{"text-align":"left"}},m1={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},y1=t("td",{style:{"text-align":"center"}},null,-1),x1={style:{"text-align":"left"}},p1=t("code",null,"深度优先搜索",-1),b1=t("code",null,"广度优先搜索",-1),k1=t("code",null,"并查集",-1),M1=t("code",null,"2+",-1),H1={style:{"text-align":"left"}},w1=t("td",{style:{"text-align":"center"}},"2709",-1),v1={style:{"text-align":"left"}},I1={href:"https://leetcode.com/problems/greatest-common-divisor-traversal",target:"_blank",rel:"noopener noreferrer"},q1=t("td",{style:{"text-align":"center"}},null,-1),L1={style:{"text-align":"left"}},z1=t("code",null,"并查集",-1),C1=t("code",null,"数组",-1),O1=t("code",null,"数学",-1),E1=t("code",null,"1+",-1),P1={style:{"text-align":"left"}},B1=t("td",{style:{"text-align":"center"}},"2782",-1),N1={style:{"text-align":"left"}},V1={href:"https://leetcode.com/problems/number-of-unique-categories",target:"_blank",rel:"noopener noreferrer"},W1=t("td",{style:{"text-align":"center"}},null,-1),j1={style:{"text-align":"left"}},A1=t("code",null,"并查集",-1),K1=t("code",null,"计数",-1),Q1=t("code",null,"交互",-1),R1={style:{"text-align":"left"}},U1=t("td",{style:{"text-align":"center"}},"2812",-1),F1={style:{"text-align":"left"}},G1={href:"https://leetcode.com/problems/find-the-safest-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},S1=t("td",{style:{"text-align":"center"}},null,-1),T1={style:{"text-align":"left"}},X1=t("code",null,"广度优先搜索",-1),Y1=t("code",null,"并查集",-1),Z1=t("code",null,"数组",-1),D1=t("code",null,"2+",-1),J1={style:{"text-align":"left"}},$1=t("td",{style:{"text-align":"center"}},"2852",-1),tf={style:{"text-align":"left"}},ef={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},lf=t("td",{style:{"text-align":"center"}},null,-1),of={style:{"text-align":"left"}},nf=t("code",null,"深度优先搜索",-1),sf=t("code",null,"广度优先搜索",-1),df=t("code",null,"并查集",-1),_f=t("code",null,"3+",-1),cf={style:{"text-align":"left"}},af=t("td",{style:{"text-align":"center"}},"2948",-1),rf={style:{"text-align":"left"}},hf={href:"https://leetcode.com/problems/make-lexicographically-smallest-array-by-swapping-elements",target:"_blank",rel:"noopener noreferrer"},uf=t("td",{style:{"text-align":"center"}},null,-1),ff={style:{"text-align":"left"}},gf=t("code",null,"并查集",-1),mf=t("code",null,"数组",-1),yf=t("code",null,"排序",-1),xf={style:{"text-align":"left"}},pf=t("td",{style:{"text-align":"center"}},"3108",-1),bf={style:{"text-align":"left"}},kf={href:"https://leetcode.com/problems/minimum-cost-walk-in-weighted-graph",target:"_blank",rel:"noopener noreferrer"},Mf=t("td",{style:{"text-align":"center"}},null,-1),Hf={style:{"text-align":"left"}},wf=t("code",null,"位运算",-1),vf=t("code",null,"并查集",-1),If=t("code",null,"图",-1),qf=t("code",null,"1+",-1),Lf={style:{"text-align":"left"}},zf=t("td",{style:{"text-align":"center"}},"3235",-1),Cf={style:{"text-align":"left"}},Of={href:"https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},Ef=t("td",{style:{"text-align":"center"}},null,-1),Pf={style:{"text-align":"left"}},Bf=t("code",null,"深度优先搜索",-1),Nf=t("code",null,"广度优先搜索",-1),Vf=t("code",null,"并查集",-1),Wf=t("code",null,"3+",-1),jf={style:{"text-align":"left"}},Af=t("td",{style:{"text-align":"center"}},"LCP 49",-1),Kf={style:{"text-align":"left"}},Qf={href:"https://leetcode.cn/problems/K8GULz",target:"_blank",rel:"noopener noreferrer"},Rf=t("td",{style:{"text-align":"center"}},null,-1),Uf={style:{"text-align":"left"}},Ff=t("code",null,"位运算",-1),Gf=t("code",null,"并查集",-1),Sf=t("code",null,"数组",-1),Tf=t("code",null,"1+",-1),Xf={style:{"text-align":"left"}},Yf=t("td",{style:{"text-align":"center"}},"LCP 71",-1),Zf={style:{"text-align":"left"}},Df={href:"https://leetcode.cn/problems/kskhHQ",target:"_blank",rel:"noopener noreferrer"},Jf=t("td",{style:{"text-align":"center"}},null,-1),$f={style:{"text-align":"left"}},tg=t("code",null,"并查集",-1),eg=t("code",null,"数组",-1),lg=t("code",null,"矩阵",-1),og={style:{"text-align":"left"}},ng=t("td",{style:{"text-align":"center"}},"LCS 03",-1),sg={style:{"text-align":"left"}},dg={href:"https://leetcode.cn/problems/YesdPw",target:"_blank",rel:"noopener noreferrer"},_g=t("td",{style:{"text-align":"center"}},null,-1),ig={style:{"text-align":"left"}},cg=t("code",null,"深度优先搜索",-1),ag=t("code",null,"广度优先搜索",-1),rg=t("code",null,"并查集",-1),hg=t("code",null,"2+",-1),ug={style:{"text-align":"left"}},fg=t("td",{style:{"text-align":"center"}},"剑指 Offer II 105",-1),gg={style:{"text-align":"left"}},mg={href:"https://leetcode.cn/problems/ZL6zAn",target:"_blank",rel:"noopener noreferrer"},yg=t("td",{style:{"text-align":"center"}},null,-1),xg={style:{"text-align":"left"}},pg=t("code",null,"深度优先搜索",-1),bg=t("code",null,"广度优先搜索",-1),kg=t("code",null,"并查集",-1),Mg=t("code",null,"2+",-1),Hg={style:{"text-align":"left"}},wg=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),vg={style:{"text-align":"left"}},Ig={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},qg=t("td",{style:{"text-align":"center"}},null,-1),Lg={style:{"text-align":"left"}},zg=t("code",null,"深度优先搜索",-1),Cg=t("code",null,"广度优先搜索",-1),Og=t("code",null,"并查集",-1),Eg=t("code",null,"1+",-1),Pg={style:{"text-align":"left"}},Bg=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),Ng={style:{"text-align":"left"}},Vg={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},Wg=t("td",{style:{"text-align":"center"}},null,-1),jg={style:{"text-align":"left"}},Ag=t("code",null,"深度优先搜索",-1),Kg=t("code",null,"广度优先搜索",-1),Qg=t("code",null,"并查集",-1),Rg=t("code",null,"3+",-1),Ug={style:{"text-align":"left"}},Fg=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),Gg={style:{"text-align":"left"}},Sg={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},Tg=t("td",{style:{"text-align":"center"}},null,-1),Xg={style:{"text-align":"left"}},Yg=t("code",null,"深度优先搜索",-1),Zg=t("code",null,"广度优先搜索",-1),Dg=t("code",null,"并查集",-1),Jg=t("code",null,"1+",-1),$g={style:{"text-align":"left"}},tm=t("td",{style:{"text-align":"center"}},"剑指 Offer II 117",-1),em={style:{"text-align":"left"}},lm={href:"https://leetcode.cn/problems/H6lPxb",target:"_blank",rel:"noopener noreferrer"},om=t("td",{style:{"text-align":"center"}},null,-1),nm={style:{"text-align":"left"}},sm=t("code",null,"深度优先搜索",-1),dm=t("code",null,"广度优先搜索",-1),_m=t("code",null,"并查集",-1),im=t("code",null,"3+",-1),cm={style:{"text-align":"left"}},am=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),rm={style:{"text-align":"left"}},hm={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},um=t("td",{style:{"text-align":"center"}},null,-1),fm={style:{"text-align":"left"}},gm=t("code",null,"深度优先搜索",-1),mm=t("code",null,"广度优先搜索",-1),ym=t("code",null,"并查集",-1),xm=t("code",null,"1+",-1),pm={style:{"text-align":"left"}},bm=t("td",{style:{"text-align":"center"}},"剑指 Offer II 119",-1),km={style:{"text-align":"left"}},Mm={href:"https://leetcode.cn/problems/WhsWhI",target:"_blank",rel:"noopener noreferrer"},Hm=t("td",{style:{"text-align":"center"}},null,-1),wm={style:{"text-align":"left"}},vm=t("code",null,"并查集",-1),Im=t("code",null,"数组",-1),qm=t("code",null,"哈希表",-1),Lm={style:{"text-align":"left"}},zm=t("td",{style:{"text-align":"center"}},"面试题 16.19",-1),Cm={style:{"text-align":"left"}},Om={href:"https://leetcode.cn/problems/pond-sizes-lcci",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},null,-1),Pm={style:{"text-align":"left"}},Bm=t("code",null,"深度优先搜索",-1),Nm=t("code",null,"广度优先搜索",-1),Vm=t("code",null,"并查集",-1),Wm=t("code",null,"2+",-1),jm={style:{"text-align":"left"}},Am=t("td",{style:{"text-align":"center"}},"面试题 17.07",-1),Km={style:{"text-align":"left"}},Qm={href:"https://leetcode.cn/problems/baby-names-lcci",target:"_blank",rel:"noopener noreferrer"},Rm=t("td",{style:{"text-align":"center"}},null,-1),Um={style:{"text-align":"left"}},Fm=t("code",null,"深度优先搜索",-1),Gm=t("code",null,"广度优先搜索",-1),Sm=t("code",null,"并查集",-1),Tm=t("code",null,"4+",-1),Xm={style:{"text-align":"left"}};function Ym(Zm,Dm){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return c(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),K,l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[F]),_:1})]),G,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[Pt]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[Bt]),_:1})])]),Nt,r(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Wt,t("td",jt,[t("a",At,[l("最长连续序列"),e(s)])]),t("td",Kt,[t("a",Qt,[l("[✓]"),e(s)])]),t("td",Rt,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ut]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ft]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Gt]),_:1})]),t("td",St,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tt,t("td",Xt,[t("a",Yt,[l("被围绕的区域"),e(s)])]),t("td",Zt,[t("a",Dt,[l("[✓]"),e(s)])]),t("td",Jt,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ee]),_:1}),l(),le]),t("td",oe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ne,t("td",se,[t("a",de,[l("岛屿数量"),e(s)])]),t("td",_e,[t("a",ie,[l("[✓]"),e(s)])]),t("td",ce,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[re]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[he]),_:1}),l(),ue]),t("td",fe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ge,t("td",me,[t("a",ye,[l("以图判树"),e(s)])]),xe,t("td",pe,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ke]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Me]),_:1}),l(),He]),t("td",we,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ve,t("td",Ie,[t("a",qe,[l("岛屿数量 II"),e(s)])]),Le,t("td",ze,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Oe]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ee]),_:1})]),t("td",Pe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Be,t("td",Ne,[t("a",Ve,[l("无向图中连通分量的数目"),e(s)])]),We,t("td",je,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ae]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ke]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Qe]),_:1}),l(),Re]),t("td",Ue,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fe,t("td",Ge,[t("a",Se,[l("除法求值"),e(s)])]),t("td",Te,[t("a",Xe,[l("[✓]"),e(s)])]),t("td",Ye,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ze]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[De]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Je]),_:1}),l(),$e]),t("td",tl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[el,t("td",ll,[t("a",ol,[l("省份数量"),e(s)])]),nl,t("td",sl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_l]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[il]),_:1}),l(),cl]),t("td",al,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rl,t("td",hl,[t("a",ul,[l("冗余连接"),e(s)])]),fl,t("td",gl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ml]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[xl]),_:1}),l(),pl]),t("td",bl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kl,t("td",Ml,[t("a",Hl,[l("冗余连接 II"),e(s)])]),wl,t("td",vl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ll]),_:1}),l(),zl]),t("td",Cl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ol,t("td",El,[t("a",Pl,[l("不同岛屿的数量"),e(s)])]),Bl,t("td",Nl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Vl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Wl]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[jl]),_:1}),l(),Al]),t("td",Kl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ql,t("td",Rl,[t("a",Ul,[l("岛屿的最大面积"),e(s)])]),t("td",Fl,[t("a",Gl,[l("[✓]"),e(s)])]),t("td",Sl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Xl]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Yl]),_:1}),l(),Zl]),t("td",Dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jl,t("td",$l,[t("a",to,[l("不同岛屿的数量 II"),e(s)])]),eo,t("td",lo,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[oo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[no]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[so]),_:1}),l(),_o]),t("td",io,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[co,t("td",ao,[t("a",ro,[l("账户合并"),e(s)])]),ho,t("td",uo,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[go]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[mo]),_:1}),l(),yo]),t("td",xo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[po,t("td",bo,[t("a",ko,[l("句子相似性 II"),e(s)])]),Mo,t("td",Ho,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[vo]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Io]),_:1}),l(),qo]),t("td",Lo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zo,t("td",Co,[t("a",Oo,[l("情侣牵手"),e(s)])]),Eo,t("td",Po,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Bo]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[No]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Vo]),_:1}),l(),Wo]),t("td",jo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ao,t("td",Ko,[t("a",Qo,[l("水位上升的泳池中游泳"),e(s)])]),Ro,t("td",Uo,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Go]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[So]),_:1}),l(),To]),t("td",Xo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yo,t("td",Zo,[t("a",Do,[l("判断二分图"),e(s)])]),Jo,t("td",$o,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[en]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ln]),_:1}),l(),on]),t("td",nn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sn,t("td",dn,[t("a",_n,[l("打砖块"),e(s)])]),cn,t("td",an,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[rn]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hn]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[un]),_:1})]),t("td",fn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gn,t("td",mn,[t("a",yn,[l("最大人工岛"),e(s)])]),xn,t("td",pn,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[bn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kn]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Mn]),_:1}),l(),Hn]),t("td",wn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vn,t("td",In,[t("a",qn,[l("相似字符串组"),e(s)])]),Ln,t("td",zn,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Cn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[On]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[En]),_:1}),l(),Pn]),t("td",Bn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nn,t("td",Vn,[t("a",Wn,[l("可能的二分法"),e(s)])]),jn,t("td",An,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Kn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Rn]),_:1}),l(),Un]),t("td",Fn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gn,t("td",Sn,[t("a",Tn,[l("尽量减少恶意软件的传播"),e(s)])]),Xn,t("td",Yn,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Zn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Dn]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Jn]),_:1}),l(),$n]),t("td",ts,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[es,t("td",ls,[t("a",os,[l("尽量减少恶意软件的传播 II"),e(s)])]),ns,t("td",ss,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ds]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_s]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[is]),_:1}),l(),cs]),t("td",as,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rs,t("td",hs,[t("a",us,[l("移除最多的同行或同列石头"),e(s)])]),fs,t("td",gs,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ms]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ys]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[xs]),_:1}),l(),ps]),t("td",bs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ks,t("td",Ms,[t("a",Hs,[l("按公因数计算最大组件大小"),e(s)])]),ws,t("td",vs,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Is]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qs]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ls]),_:1}),l(),zs]),t("td",Cs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Os,t("td",Es,[t("a",Ps,[l("由斜杠划分区域"),e(s)])]),Bs,t("td",Ns,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Vs]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ws]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[js]),_:1}),l(),As]),t("td",Ks,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qs,t("td",Rs,[t("a",Us,[l("等式方程的可满足性"),e(s)])]),Fs,t("td",Gs,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ss]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ts]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xs]),_:1}),l(),Ys]),t("td",Zs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ds,t("td",Js,[t("a",$s,[l("飞地的数量"),e(s)])]),td,t("td",ed,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ld]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[od]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[nd]),_:1}),l(),sd]),t("td",dd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_d,t("td",id,[t("a",cd,[l("按字典序排列最小的等效字符串"),e(s)])]),ad,t("td",rd,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[hd]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ud]),_:1})]),t("td",fd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gd,t("td",md,[t("a",yd,[l("彼此熟识的最早时间"),e(s)])]),xd,t("td",pd,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[bd]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kd]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Md]),_:1})]),t("td",Hd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wd,t("td",vd,[t("a",Id,[l("得分最高的路径"),e(s)])]),qd,t("td",Ld,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zd]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Od]),_:1}),l(),Ed]),t("td",Pd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bd,t("td",Nd,[t("a",Vd,[l("最低成本连通所有城市"),e(s)])]),Wd,t("td",jd,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ad]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Kd]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Qd]),_:1}),l(),Rd]),t("td",Ud,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fd,t("td",Gd,[t("a",Sd,[l("水资源分配优化"),e(s)])]),Td,t("td",Xd,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Yd]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Zd]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Dd]),_:1}),l(),Jd]),t("td",$d,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t_,t("td",e_,[t("a",l_,[l("交换字符串中的元素"),e(s)])]),o_,t("td",n_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[s_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[d_]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[__]),_:1}),l(),i_]),t("td",c_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a_,t("td",r_,[t("a",h_,[l("统计封闭岛屿的数目"),e(s)])]),u_,t("td",f_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[g_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[m_]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[y_]),_:1}),l(),x_]),t("td",p_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b_,t("td",k_,[t("a",M_,[l("近义词句子"),e(s)])]),H_,t("td",w_,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[v_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[I_]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[q_]),_:1}),l(),L_]),t("td",z_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C_,t("td",O_,[t("a",E_,[l("统计参与通信的服务器"),e(s)])]),P_,t("td",B_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[N_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[V_]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[W_]),_:1}),l(),j_]),t("td",A_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K_,t("td",Q_,[t("a",R_,[l("连通网络的操作次数"),e(s)])]),U_,t("td",F_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[G_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[S_]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[T_]),_:1}),l(),X_]),t("td",Y_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z_,t("td",D_,[t("a",J_,[l("验证二叉树"),e(s)])]),$_,t("td",ti,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ei]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[li]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[oi]),_:1}),l(),ni]),t("td",si,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[di,t("td",_i,[t("a",ii,[l("检查网格中是否存在有效路径"),e(s)])]),ci,t("td",ai,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ri]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hi]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ui]),_:1}),l(),fi]),t("td",gi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mi,t("td",yi,[t("a",xi,[l("找到最小生成树里的关键边和伪关键边"),e(s)])]),pi,t("td",bi,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ki]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Mi]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Hi]),_:1}),l(),wi]),t("td",vi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ii,t("td",qi,[t("a",Li,[l("二维网格图中探测环"),e(s)])]),zi,t("td",Ci,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ei]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Pi]),_:1}),l(),Bi]),t("td",Ni,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vi,t("td",Wi,[t("a",ji,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),Ai,t("td",Ki,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qi]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ri]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Ui]),_:1}),l(),Fi]),t("td",Gi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Si,t("td",Ti,[t("a",Xi,[l("保证图可完全遍历"),e(s)])]),Yi,t("td",Zi,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Di]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ji]),_:1})]),t("td",$i,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tc,t("td",ec,[t("a",lc,[l("连接所有点的最小费用"),e(s)])]),oc,t("td",nc,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[sc]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[dc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_c]),_:1}),l(),ic]),t("td",cc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ac,t("td",rc,[t("a",hc,[l("带阈值的图连通性"),e(s)])]),uc,t("td",fc,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[gc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mc]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[yc]),_:1}),l(),xc]),t("td",pc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bc,t("td",kc,[t("a",Mc,[l("最小体力消耗路径"),e(s)])]),Hc,t("td",wc,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ic]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[qc]),_:1}),l(),Lc]),t("td",zc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cc,t("td",Oc,[t("a",Ec,[l("矩阵转换后的秩"),e(s)])]),Pc,t("td",Bc,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Nc]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Vc]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Wc]),_:1}),l(),jc]),t("td",Ac,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kc,t("td",Qc,[t("a",Rc,[l("检查边长度限制的路径是否存在"),e(s)])]),Uc,t("td",Fc,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Gc]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Sc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Tc]),_:1}),l(),Xc]),t("td",Yc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zc,t("td",Dc,[t("a",Jc,[l("执行交换操作后的最小汉明距离"),e(s)])]),$c,t("td",ta,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ea]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[la]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oa]),_:1})]),t("td",na,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sa,t("td",da,[t("a",_a,[l("检查边长度限制的路径是否存在 II"),e(s)])]),ia,t("td",ca,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[aa]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ra]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[ha]),_:1})]),t("td",ua,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fa,t("td",ga,[t("a",ma,[l("统计子岛屿"),e(s)])]),ya,t("td",xa,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pa]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ba]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ka]),_:1}),l(),Ma]),t("td",Ha,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wa,t("td",va,[t("a",Ia,[l("你能穿过矩阵的最后一天"),e(s)])]),qa,t("td",La,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[za]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ca]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Oa]),_:1}),l(),Ea]),t("td",Pa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ba,t("td",Na,[t("a",Va,[l("寻找图中是否存在路径"),e(s)])]),Wa,t("td",ja,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Aa]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ka]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Qa]),_:1}),l(),Ra]),t("td",Ua,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fa,t("td",Ga,[t("a",Sa,[l("数组的最大公因数排序"),e(s)])]),Ta,t("td",Xa,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ya]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Za]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Da]),_:1}),l(),Ja]),t("td",$a,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tr,t("td",er,[t("a",lr,[l("每棵子树内缺失的最小基因值"),e(s)])]),or,t("td",nr,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[sr]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dr]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[_r]),_:1}),l(),ir]),t("td",cr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ar,t("td",rr,[t("a",hr,[l("处理含限制条件的好友请求"),e(s)])]),ur,t("td",fr,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[gr]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[mr]),_:1})]),t("td",yr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xr,t("td",pr,[t("a",br,[l("找出知晓秘密的所有专家"),e(s)])]),kr,t("td",Mr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Hr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[wr]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[vr]),_:1}),l(),Ir]),t("td",qr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lr,t("td",zr,[t("a",Cr,[l("字符串分组"),e(s)])]),Or,t("td",Er,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Pr]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Br]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Nr]),_:1})]),t("td",Vr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wr,t("td",jr,[t("a",Ar,[l("无向图中到环的距离"),e(s)])]),Kr,t("td",Qr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Rr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ur]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Fr]),_:1}),l(),Gr]),t("td",Sr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tr,t("td",Xr,[t("a",Yr,[l("检查方程中的矛盾之处"),e(s)])]),Zr,t("td",Dr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jr]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[$r]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[th]),_:1}),l(),eh]),t("td",lh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oh,t("td",nh,[t("a",sh,[l("统计无向图中无法互相到达点对数"),e(s)])]),dh,t("td",_h,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ih]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ch]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ah]),_:1}),l(),rh]),t("td",hh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uh,t("td",fh,[t("a",gh,[l("元素值大于变化阈值的子数组"),e(s)])]),mh,t("td",yh,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[xh]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ph]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bh]),_:1}),l(),kh]),t("td",Mh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hh,t("td",wh,[t("a",vh,[l("受限条件下可到达节点的数目"),e(s)])]),Ih,t("td",qh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Lh]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zh]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ch]),_:1}),l(),Oh]),t("td",Eh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ph,t("td",Bh,[t("a",Nh,[l("最小化网格中的最大值"),e(s)])]),Vh,t("td",Wh,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[jh]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ah]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Kh]),_:1}),l(),Qh]),t("td",Rh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uh,t("td",Fh,[t("a",Gh,[l("删除操作后的最大子段和"),e(s)])]),Sh,t("td",Th,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Xh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yh]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Zh]),_:1}),l(),Dh]),t("td",Jh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$h,t("td",tu,[t("a",eu,[l("好路径的数目"),e(s)])]),lu,t("td",ou,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[nu]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[su]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[du]),_:1}),l(),_u]),t("td",iu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cu,t("td",au,[t("a",ru,[l("最长上传前缀"),e(s)])]),hu,t("td",uu,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[fu]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[gu]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[mu]),_:1}),l(),yu]),t("td",xu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pu,t("td",bu,[t("a",ku,[l("两个城市间路径的最小分数"),e(s)])]),Mu,t("td",Hu,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[vu]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Iu]),_:1}),l(),qu]),t("td",Lu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zu,t("td",Cu,[t("a",Ou,[l("将节点分成尽可能多的组"),e(s)])]),Eu,t("td",Pu,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Bu]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Nu]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Vu]),_:1})]),t("td",Wu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ju,t("td",Au,[t("a",Ku,[l("矩阵查询可获得的最大分数"),e(s)])]),Qu,t("td",Ru,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Uu]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Fu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gu]),_:1}),l(),Su]),t("td",Tu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xu,t("td",Yu,[t("a",Zu,[l("找出对应 LCP 矩阵的字符串"),e(s)])]),Du,t("td",Ju,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[$u]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[t1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[e1]),_:1}),l(),l1]),t("td",o1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n1,t("td",s1,[t("a",d1,[l("网格图中最少访问的格子数"),e(s)])]),_1,t("td",i1,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[c1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[a1]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[r1]),_:1}),l(),h1]),t("td",u1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f1,t("td",g1,[t("a",m1,[l("网格图中鱼的最大数目"),e(s)])]),y1,t("td",x1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[p1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[b1]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[k1]),_:1}),l(),M1]),t("td",H1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w1,t("td",v1,[t("a",I1,[l("最大公约数遍历"),e(s)])]),q1,t("td",L1,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[z1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[C1]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[O1]),_:1}),l(),E1]),t("td",P1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B1,t("td",N1,[t("a",V1,[l("唯一类别的数量"),e(s)])]),W1,t("td",j1,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[A1]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[K1]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Q1]),_:1})]),t("td",R1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U1,t("td",F1,[t("a",G1,[l("找出最安全路径"),e(s)])]),S1,t("td",T1,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X1]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Y1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Z1]),_:1}),l(),D1]),t("td",J1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$1,t("td",tf,[t("a",ef,[l("所有单元格的远离程度之和"),e(s)])]),lf,t("td",of,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nf]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sf]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[df]),_:1}),l(),_f]),t("td",cf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[af,t("td",rf,[t("a",hf,[l("交换得到字典序最小的数组"),e(s)])]),uf,t("td",ff,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[gf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mf]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[yf]),_:1})]),t("td",xf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pf,t("td",bf,[t("a",kf,[l("带权图里旅途的最小代价"),e(s)])]),Mf,t("td",Hf,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[wf]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[vf]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[If]),_:1}),l(),qf]),t("td",Lf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zf,t("td",Cf,[t("a",Of,[l("判断矩形的两个角落是否可达"),e(s)])]),Ef,t("td",Pf,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Bf]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Nf]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Vf]),_:1}),l(),Wf]),t("td",jf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Af,t("td",Kf,[t("a",Qf,[l("环形闯关游戏"),e(s)])]),Rf,t("td",Uf,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Ff]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Gf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sf]),_:1}),l(),Tf]),t("td",Xf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yf,t("td",Zf,[t("a",Df,[l("集水器"),e(s)])]),Jf,t("td",$f,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[tg]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[eg]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[lg]),_:1})]),t("td",og,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ng,t("td",sg,[t("a",dg,[l("主题空间"),e(s)])]),_g,t("td",ig,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ag]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[rg]),_:1}),l(),hg]),t("td",ug,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fg,t("td",gg,[t("a",mg,[l("岛屿的最大面积"),e(s)])]),yg,t("td",xg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bg]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[kg]),_:1}),l(),Mg]),t("td",Hg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wg,t("td",vg,[t("a",Ig,[l("二分图"),e(s)])]),qg,t("td",Lg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Cg]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Og]),_:1}),l(),Eg]),t("td",Pg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bg,t("td",Ng,[t("a",Vg,[l("计算除法"),e(s)])]),Wg,t("td",jg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ag]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Kg]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Qg]),_:1}),l(),Rg]),t("td",Ug,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fg,t("td",Gg,[t("a",Sg,[l("省份数量"),e(s)])]),Tg,t("td",Xg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Yg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Zg]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Dg]),_:1}),l(),Jg]),t("td",$g,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tm,t("td",em,[t("a",lm,[l("相似的字符串"),e(s)])]),om,t("td",nm,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sm]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[dm]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[_m]),_:1}),l(),im]),t("td",cm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[am,t("td",rm,[t("a",hm,[l("多余的边"),e(s)])]),um,t("td",fm,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[gm]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[mm]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ym]),_:1}),l(),xm]),t("td",pm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bm,t("td",km,[t("a",Mm,[l("最长连续序列"),e(s)])]),Hm,t("td",wm,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[vm]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Im]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[qm]),_:1})]),t("td",Lm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zm,t("td",Cm,[t("a",Om,[l("水域大小"),e(s)])]),Em,t("td",Pm,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Bm]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Nm]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Vm]),_:1}),l(),Wm]),t("td",jm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Am,t("td",Km,[t("a",Qm,[l("婴儿名字"),e(s)])]),Rm,t("td",Um,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Fm]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Gm]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Sm]),_:1}),l(),Tm]),t("td",Xm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const $m=i(h,[["render",Ym],["__file","union-find.html.vue"]]);export{$m as default};
