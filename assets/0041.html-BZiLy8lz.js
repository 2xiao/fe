import{_ as u,r as c,o as p,c as _,a as t,b as n,d as e,w as s,f as h,e as m}from"./app-zLZrqgWi.js";const k={},f={id:"_41-缺失的第一个正数",tabindex:"-1"},g=t("a",{class:"header-anchor",href:"#_41-缺失的第一个正数","aria-hidden":"true"},"#",-1),b={href:"https://2xiao.github.io/leetcode-js/problem/0041.html",target:"_blank",rel:"noopener noreferrer"},y=t("code",null,"数组",-1),x=t("code",null,"哈希表",-1),v={href:"https://leetcode.cn/problems/first-missing-positive",target:"_blank",rel:"noopener noreferrer"},w=t("code",null,"力扣",-1),E={href:"https://leetcode.com/problems/first-missing-positive",target:"_blank",rel:"noopener noreferrer"},O=t("code",null,"LeetCode",-1),M=m('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given an unsorted integer array <code>nums</code>, return the smallest missing positive integer.</p><p>You must implement an algorithm that runs in <code>O(n)</code> time and uses <code>O(1)</code> auxiliary space.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: nums = [1,2,0]</p><p>Output: 3</p><p>Explanation: The numbers in the range [1,2] are all in the array.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums = [3,4,-1,1]</p><p>Output: 2</p><p>Explanation: 1 is in the array but 2 is missing.</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: nums = [7,8,9,11,12]</p><p>Output: 1</p><p>Explanation: The smallest positive integer 1 is missing.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 10^5</code></li><li><code>-2^31 &lt;= nums[i] &lt;= 2^31 - 1</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你一个未排序的整数数组 <code>nums</code> ，请你找出其中没有出现的最小的正整数。</p><p>请你实现时间复杂度为 <code>O(n)</code> 并且只使用常数级别额外空间的解决方案。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><h3 id="思路一-哈希表" tabindex="-1"><a class="header-anchor" href="#思路一-哈希表" aria-hidden="true">#</a> 思路一：哈希表</h3><p>为了减少时间复杂度，可以把 <code>input</code> 数组都装到 <code>map</code> 中，然后 <code>i</code> 循环从 <code>1</code> 开始，依次比对 <code>map</code> 中是否存在 <code>i</code>，只要不存在 <code>i</code> 就立即返回结果，即所求。但是这种方法的空间复杂度为 <code>O(n)</code>，不满足题意。</p><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，需要遍历数组。</li><li><strong>空间复杂度</strong>：<code>O(n)</code>，需要一个大小为 <code>n</code> 的哈希表存储数据。</li></ul><hr><h3 id="思路二-原地哈希" tabindex="-1"><a class="header-anchor" href="#思路二-原地哈希" aria-hidden="true">#</a> 思路二：原地哈希</h3><p>原地哈希的意思是利用数组的索引来存储元素的存在性。具体来说，将每个值 <code>x</code> 放到数组的索引 <code>x-1</code> 处（即 <code>nums[x-1]</code>），如果 <code>x</code> 的值在 <code>[1, n]</code> 范围内。这样做的前提是，数组中只有正整数。</p><ul><li><p><strong>遍历数组</strong>：</p><ul><li>首先遍历数组，将每个有效的正整数放到正确的位置（即将 <code>x</code> 放到 <code>nums[x-1]</code>）。</li><li>对于每个值 <code>x</code>，如果 <code>1 ≤ x ≤ n</code>，并且 <code>nums[x-1]</code> 不是 <code>x</code>，则交换 <code>nums[i]</code> 和 <code>nums[x-1]</code>，直到 <code>nums[i]</code> 在正确的位置。</li></ul></li><li><p><strong>第二次遍历</strong>：</p><ul><li>再次遍历数组，找到第一个位置 <code>i</code>，使得 <code>nums[i]</code> 不等于 <code>i + 1</code>，那么 <code>i + 1</code> 就是缺失的正整数。</li></ul></li><li><p><strong>边界情况</strong>：</p><ul><li>如果所有位置都满足 <code>nums[i] = i + 1</code>，那么缺失的第一个正整数就是 <code>n + 1</code>。</li></ul></li></ul><h4 id="复杂度分析-1" tabindex="-1"><a class="header-anchor" href="#复杂度分析-1" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，数组只遍历了两次。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，只使用了常量级别的额外空间。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2>',26),I=t("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token doc-comment comment"},[n(`/**
 * `),t("span",{class:"token keyword"},"@param"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"}")]),n(),t("span",{class:"token parameter"},"nums"),n(`
 * `),t("span",{class:"token keyword"},"@return"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`
`),t("span",{class:"token keyword"},"var"),n(),t("span",{class:"token function-variable function"},"firstMissingPositive"),n(),t("span",{class:"token operator"},"="),n(),t("span",{class:"token keyword"},"function"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},"nums"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
	`),t("span",{class:"token keyword"},"let"),n(" map "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token keyword"},"new"),n(),t("span",{class:"token class-name"},"Map"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),n(`
	`),t("span",{class:"token keyword"},"for"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),n(" i "),t("span",{class:"token keyword"},"of"),n(" nums"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
		map`),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"set"),t("span",{class:"token punctuation"},"("),n("i"),t("span",{class:"token punctuation"},","),n(),t("span",{class:"token boolean"},"true"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),n(`
	`),t("span",{class:"token punctuation"},"}"),n(`
	`),t("span",{class:"token keyword"},"let"),n(" i "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),n(`
	`),t("span",{class:"token keyword"},"while"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token boolean"},"true"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
		`),t("span",{class:"token keyword"},"if"),n(),t("span",{class:"token punctuation"},"("),n("map"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"has"),t("span",{class:"token punctuation"},"("),n("i"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),n(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},";"),n(`
		`),t("span",{class:"token keyword"},"else"),n(),t("span",{class:"token keyword"},"return"),n(" i"),t("span",{class:"token punctuation"},";"),n(`
	`),t("span",{class:"token punctuation"},"}"),n(`
`),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),j=t("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token doc-comment comment"},[n(`/**
 * `),t("span",{class:"token keyword"},"@param"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"}")]),n(),t("span",{class:"token parameter"},"nums"),n(`
 * `),t("span",{class:"token keyword"},"@return"),n(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),n("number"),t("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`
`),t("span",{class:"token keyword"},"var"),n(),t("span",{class:"token function-variable function"},"firstMissingPositive"),n(),t("span",{class:"token operator"},"="),n(),t("span",{class:"token keyword"},"function"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},"nums"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
	`),t("span",{class:"token keyword"},"const"),n(" n "),t("span",{class:"token operator"},"="),n(" nums"),t("span",{class:"token punctuation"},"."),n("length"),t("span",{class:"token punctuation"},";"),n(`

	`),t("span",{class:"token comment"},"// 1. 将每个数放到对应的位置"),n(`
	`),t("span",{class:"token keyword"},"for"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),n(" i "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),n(" i "),t("span",{class:"token operator"},"<"),n(" n"),t("span",{class:"token punctuation"},";"),n(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
		`),t("span",{class:"token keyword"},"while"),n(),t("span",{class:"token punctuation"},"("),n("nums"),t("span",{class:"token punctuation"},"["),n("i"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},">"),n(),t("span",{class:"token number"},"0"),n(),t("span",{class:"token operator"},"&&"),n(" nums"),t("span",{class:"token punctuation"},"["),n("i"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"<="),n(" n "),t("span",{class:"token operator"},"&&"),n(" nums"),t("span",{class:"token punctuation"},"["),n("nums"),t("span",{class:"token punctuation"},"["),n("i"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"-"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"!=="),n(" nums"),t("span",{class:"token punctuation"},"["),n("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
			`),t("span",{class:"token comment"},"// 交换 nums[i] 和 nums[nums[i] - 1]"),n(`
			`),t("span",{class:"token keyword"},"const"),n(" temp "),t("span",{class:"token operator"},"="),n(" nums"),t("span",{class:"token punctuation"},"["),n("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),n(`
			nums`),t("span",{class:"token punctuation"},"["),n("i"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"="),n(" nums"),t("span",{class:"token punctuation"},"["),n("temp "),t("span",{class:"token operator"},"-"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),n(`
			nums`),t("span",{class:"token punctuation"},"["),n("temp "),t("span",{class:"token operator"},"-"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"="),n(" temp"),t("span",{class:"token punctuation"},";"),n(`
		`),t("span",{class:"token punctuation"},"}"),n(`
	`),t("span",{class:"token punctuation"},"}"),n(`

	`),t("span",{class:"token comment"},"// 2. 查找第一个缺失的正整数"),n(`
	`),t("span",{class:"token keyword"},"for"),n(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),n(" i "),t("span",{class:"token operator"},"="),n(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),n(" i "),t("span",{class:"token operator"},"<"),n(" n"),t("span",{class:"token punctuation"},";"),n(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
		`),t("span",{class:"token keyword"},"if"),n(),t("span",{class:"token punctuation"},"("),n("nums"),t("span",{class:"token punctuation"},"["),n("i"),t("span",{class:"token punctuation"},"]"),n(),t("span",{class:"token operator"},"!=="),n(" i "),t("span",{class:"token operator"},"+"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},")"),n(),t("span",{class:"token punctuation"},"{"),n(`
			`),t("span",{class:"token keyword"},"return"),n(" i "),t("span",{class:"token operator"},"+"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),n(),t("span",{class:"token comment"},"// 找到第一个缺失的正整数"),n(`
		`),t("span",{class:"token punctuation"},"}"),n(`
	`),t("span",{class:"token punctuation"},"}"),n(`

	`),t("span",{class:"token keyword"},"return"),n(" n "),t("span",{class:"token operator"},"+"),n(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),n(),t("span",{class:"token comment"},"// 如果 1 到 n 的正整数都在"),n(`
`),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),q=t("h2",{id:"相关题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),n(" 相关题目")],-1),C=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),L=t("td",{style:{"text-align":"center"}},"268",-1),N={style:{"text-align":"left"}},T={href:"https://leetcode.com/problems/missing-number",target:"_blank",rel:"noopener noreferrer"},V={style:{"text-align":"center"}},A={style:{"text-align":"left"}},B=t("code",null,"位运算",-1),H=t("code",null,"数组",-1),P=t("code",null,"哈希表",-1),R=t("code",null,"3+",-1),G={style:{"text-align":"left"}},S=t("td",{style:{"text-align":"center"}},"287",-1),X={style:{"text-align":"left"}},Y={href:"https://leetcode.com/problems/find-the-duplicate-number",target:"_blank",rel:"noopener noreferrer"},z={style:{"text-align":"center"}},D={style:{"text-align":"left"}},F=t("code",null,"位运算",-1),J=t("code",null,"数组",-1),K=t("code",null,"双指针",-1),Q=t("code",null,"1+",-1),U={style:{"text-align":"left"}},W=t("td",{style:{"text-align":"center"}},"448",-1),Z={style:{"text-align":"left"}},$={href:"https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array",target:"_blank",rel:"noopener noreferrer"},tt=t("td",{style:{"text-align":"center"}},null,-1),nt={style:{"text-align":"left"}},et=t("code",null,"数组",-1),st=t("code",null,"哈希表",-1),at={style:{"text-align":"left"}},ot=t("td",{style:{"text-align":"center"}},"765",-1),lt={style:{"text-align":"left"}},ct={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},it=t("td",{style:{"text-align":"center"}},null,-1),rt={style:{"text-align":"left"}},dt=t("code",null,"贪心",-1),ut=t("code",null,"深度优先搜索",-1),pt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"2+",-1),ht={style:{"text-align":"left"}},mt=t("td",{style:{"text-align":"center"}},"2336",-1),kt={style:{"text-align":"left"}},ft={href:"https://leetcode.com/problems/smallest-number-in-infinite-set",target:"_blank",rel:"noopener noreferrer"},gt=t("td",{style:{"text-align":"center"}},null,-1),bt={style:{"text-align":"left"}},yt=t("code",null,"设计",-1),xt=t("code",null,"哈希表",-1),vt=t("code",null,"有序集合",-1),wt=t("code",null,"1+",-1),Et={style:{"text-align":"left"}},Ot=t("td",{style:{"text-align":"center"}},"2554",-1),Mt={style:{"text-align":"left"}},It={href:"https://leetcode.com/problems/maximum-number-of-integers-to-choose-from-a-range-i",target:"_blank",rel:"noopener noreferrer"},jt=t("td",{style:{"text-align":"center"}},null,-1),qt={style:{"text-align":"left"}},Ct=t("code",null,"贪心",-1),Lt=t("code",null,"数组",-1),Nt=t("code",null,"哈希表",-1),Tt=t("code",null,"2+",-1),Vt={style:{"text-align":"left"}},At=t("td",{style:{"text-align":"center"}},"2557",-1),Bt={style:{"text-align":"left"}},Ht={href:"https://leetcode.com/problems/maximum-number-of-integers-to-choose-from-a-range-ii",target:"_blank",rel:"noopener noreferrer"},Pt=t("td",{style:{"text-align":"center"}},null,-1),Rt={style:{"text-align":"left"}},Gt=t("code",null,"贪心",-1),St=t("code",null,"数组",-1),Xt=t("code",null,"二分查找",-1),Yt=t("code",null,"1+",-1),zt={style:{"text-align":"left"}},Dt=t("td",{style:{"text-align":"center"}},"2598",-1),Ft={style:{"text-align":"left"}},Jt={href:"https://leetcode.com/problems/smallest-missing-non-negative-integer-after-operations",target:"_blank",rel:"noopener noreferrer"},Kt=t("td",{style:{"text-align":"center"}},null,-1),Qt={style:{"text-align":"left"}},Ut=t("code",null,"贪心",-1),Wt=t("code",null,"数组",-1),Zt=t("code",null,"哈希表",-1),$t=t("code",null,"1+",-1),tn={style:{"text-align":"left"}},nn=t("td",{style:{"text-align":"center"}},"2996",-1),en={style:{"text-align":"left"}},sn={href:"https://leetcode.com/problems/smallest-missing-integer-greater-than-sequential-prefix-sum",target:"_blank",rel:"noopener noreferrer"},an=t("td",{style:{"text-align":"center"}},null,-1),on={style:{"text-align":"left"}},ln=t("code",null,"数组",-1),cn=t("code",null,"哈希表",-1),rn=t("code",null,"排序",-1),dn={style:{"text-align":"left"}};function un(pn,_n){const o=c("ExternalLinkIcon"),l=c("font"),a=c("RouterLink"),d=c("CodeTabs");return p(),_("div",null,[t("h1",f,[g,n(),t("a",b,[n("41. 缺失的第一个正数"),e(o)])]),t("p",null,[n("🔴 "),e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1}),n("  🔖  "),e(a,{to:"/tag/array.html"},{default:s(()=>[y]),_:1}),n(),e(a,{to:"/tag/hash-table.html"},{default:s(()=>[x]),_:1}),n("  🔗 "),t("a",v,[w,e(o)]),n(),t("a",E,[O,e(o)])]),M,e(d,{id:"173",data:[{id:"哈希表"},{id:"原地哈希"}]},{title0:s(({value:i,isActive:r})=>[n("哈希表")]),title1:s(({value:i,isActive:r})=>[n("原地哈希")]),tab0:s(({value:i,isActive:r})=>[I]),tab1:s(({value:i,isActive:r})=>[j]),_:1}),q,h(" prettier-ignore "),t("table",null,[C,t("tbody",null,[t("tr",null,[L,t("td",N,[t("a",T,[n("丢失的数字"),e(o)])]),t("td",V,[e(a,{to:"/problem/0268.html"},{default:s(()=>[n("[✓]")]),_:1})]),t("td",A,[e(a,{to:"/tag/bit-manipulation.html"},{default:s(()=>[B]),_:1}),n(),e(a,{to:"/tag/array.html"},{default:s(()=>[H]),_:1}),n(),e(a,{to:"/tag/hash-table.html"},{default:s(()=>[P]),_:1}),n(),R]),t("td",G,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[S,t("td",X,[t("a",Y,[n("寻找重复数"),e(o)])]),t("td",z,[e(a,{to:"/problem/0287.html"},{default:s(()=>[n("[✓]")]),_:1})]),t("td",D,[e(a,{to:"/tag/bit-manipulation.html"},{default:s(()=>[F]),_:1}),n(),e(a,{to:"/tag/array.html"},{default:s(()=>[J]),_:1}),n(),e(a,{to:"/tag/two-pointers.html"},{default:s(()=>[K]),_:1}),n(),Q]),t("td",U,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[W,t("td",Z,[t("a",$,[n("找到所有数组中消失的数字"),e(o)])]),tt,t("td",nt,[e(a,{to:"/tag/array.html"},{default:s(()=>[et]),_:1}),n(),e(a,{to:"/tag/hash-table.html"},{default:s(()=>[st]),_:1})]),t("td",at,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[ot,t("td",lt,[t("a",ct,[n("情侣牵手"),e(o)])]),it,t("td",rt,[e(a,{to:"/tag/greedy.html"},{default:s(()=>[dt]),_:1}),n(),e(a,{to:"/tag/depth-first-search.html"},{default:s(()=>[ut]),_:1}),n(),e(a,{to:"/tag/breadth-first-search.html"},{default:s(()=>[pt]),_:1}),n(),_t]),t("td",ht,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[mt,t("td",kt,[t("a",ft,[n("无限集中的最小数字"),e(o)])]),gt,t("td",bt,[e(a,{to:"/tag/design.html"},{default:s(()=>[yt]),_:1}),n(),e(a,{to:"/tag/hash-table.html"},{default:s(()=>[xt]),_:1}),n(),e(a,{to:"/tag/ordered-set.html"},{default:s(()=>[vt]),_:1}),n(),wt]),t("td",Et,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Ot,t("td",Mt,[t("a",It,[n("从一个范围内选择最多整数 I"),e(o)])]),jt,t("td",qt,[e(a,{to:"/tag/greedy.html"},{default:s(()=>[Ct]),_:1}),n(),e(a,{to:"/tag/array.html"},{default:s(()=>[Lt]),_:1}),n(),e(a,{to:"/tag/hash-table.html"},{default:s(()=>[Nt]),_:1}),n(),Tt]),t("td",Vt,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[At,t("td",Bt,[t("a",Ht,[n("从一个范围内选择最多整数 II 🔒"),e(o)])]),Pt,t("td",Rt,[e(a,{to:"/tag/greedy.html"},{default:s(()=>[Gt]),_:1}),n(),e(a,{to:"/tag/array.html"},{default:s(()=>[St]),_:1}),n(),e(a,{to:"/tag/binary-search.html"},{default:s(()=>[Xt]),_:1}),n(),Yt]),t("td",zt,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Dt,t("td",Ft,[t("a",Jt,[n("执行操作后的最大 MEX"),e(o)])]),Kt,t("td",Qt,[e(a,{to:"/tag/greedy.html"},{default:s(()=>[Ut]),_:1}),n(),e(a,{to:"/tag/array.html"},{default:s(()=>[Wt]),_:1}),n(),e(a,{to:"/tag/hash-table.html"},{default:s(()=>[Zt]),_:1}),n(),$t]),t("td",tn,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[nn,t("td",en,[t("a",sn,[n("大于等于顺序前缀和的最小缺失整数"),e(o)])]),an,t("td",on,[e(a,{to:"/tag/array.html"},{default:s(()=>[ln]),_:1}),n(),e(a,{to:"/tag/hash-table.html"},{default:s(()=>[cn]),_:1}),n(),e(a,{to:"/tag/sorting.html"},{default:s(()=>[rn]),_:1})]),t("td",dn,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])])])])])}const mn=u(k,[["render",un],["__file","0041.html.vue"]]);export{mn as default};
