import{_ as c,r as _,o as r,c as a,a as t,d as e,w as o,b as l,f as i}from"./app-W22a8w8d.js";const h={},f=t("h1",{id:"二叉树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#二叉树","aria-hidden":"true"},"#"),l(" 二叉树")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),E=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),O=t("code",null,"树",-1),q=t("span",{class:"blue"},"二叉树",-1),j=t("code",null,"二叉搜索树",-1),H=t("code",null,"最小生成树",-1),L=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),N=t("code",null,"拓扑排序",-1),P=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),B=t("code",null,"欧拉回路",-1),V=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),U=t("code",null,"字典树",-1),R=t("code",null,"线段树",-1),W=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),D=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),A=t("code",null,"贪心",-1),F=t("code",null,"动态规划",-1),J=t("code",null,"排序",-1),X=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),ct=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),it=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),Et=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Ot=t("code",null,"设计",-1),qt=t("code",null,"数据流",-1),jt=t("code",null,"脑筋急转弯",-1),Ht=t("code",null,"交互",-1),Lt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Nt=t("hr",null,null,-1),Pt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"94",-1),Bt={style:{"text-align":"left"}},Vt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"center"}},Ut={style:{"text-align":"left"}},Rt=t("code",null,"栈",-1),Wt=t("code",null,"树",-1),Gt=t("code",null,"深度优先搜索",-1),Yt=t("code",null,"1+",-1),Qt={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"95",-1),Dt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},At={style:{"text-align":"center"}},Ft={style:{"text-align":"left"}},Jt=t("code",null,"树",-1),Xt=t("code",null,"二叉搜索树",-1),$t=t("code",null,"动态规划",-1),te=t("code",null,"2+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"96",-1),oe={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},ne={style:{"text-align":"center"}},de={style:{"text-align":"left"}},_e=t("code",null,"树",-1),ce=t("code",null,"二叉搜索树",-1),re=t("code",null,"数学",-1),ae=t("code",null,"2+",-1),ie={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"98",-1),fe={style:{"text-align":"left"}},ue={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ge={style:{"text-align":"center"}},me={style:{"text-align":"left"}},ye=t("code",null,"树",-1),xe=t("code",null,"深度优先搜索",-1),be=t("code",null,"二叉搜索树",-1),pe=t("code",null,"1+",-1),ke={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"99",-1),ve={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ee={style:{"text-align":"center"}},we={style:{"text-align":"left"}},ze=t("code",null,"树",-1),Oe=t("code",null,"深度优先搜索",-1),qe=t("code",null,"二叉搜索树",-1),je=t("code",null,"1+",-1),He={style:{"text-align":"left"}},Le=t("td",{style:{"text-align":"center"}},"100",-1),Ce={style:{"text-align":"left"}},Ne={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Pe={style:{"text-align":"center"}},Ke={style:{"text-align":"left"}},Be=t("code",null,"树",-1),Ve=t("code",null,"深度优先搜索",-1),Te=t("code",null,"广度优先搜索",-1),Ue=t("code",null,"1+",-1),Re={style:{"text-align":"left"}},We=t("td",{style:{"text-align":"center"}},"101",-1),Ge={style:{"text-align":"left"}},Ye={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Qe={style:{"text-align":"center"}},Se={style:{"text-align":"left"}},De=t("code",null,"树",-1),Ze=t("code",null,"深度优先搜索",-1),Ae=t("code",null,"广度优先搜索",-1),Fe=t("code",null,"1+",-1),Je={style:{"text-align":"left"}},Xe=t("td",{style:{"text-align":"center"}},"102",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},el={style:{"text-align":"center"}},ll={style:{"text-align":"left"}},ol=t("code",null,"树",-1),sl=t("code",null,"广度优先搜索",-1),nl=t("code",null,"二叉树",-1),dl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"103",-1),cl={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"center"}},il={style:{"text-align":"left"}},hl=t("code",null,"树",-1),fl=t("code",null,"广度优先搜索",-1),ul=t("code",null,"二叉树",-1),gl={style:{"text-align":"left"}},ml=t("td",{style:{"text-align":"center"}},"104",-1),yl={style:{"text-align":"left"}},xl={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},bl={style:{"text-align":"center"}},pl={style:{"text-align":"left"}},kl=t("code",null,"树",-1),Ml=t("code",null,"深度优先搜索",-1),vl=t("code",null,"广度优先搜索",-1),Il=t("code",null,"1+",-1),El={style:{"text-align":"left"}},wl=t("td",{style:{"text-align":"center"}},"105",-1),zl={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},ql={style:{"text-align":"center"}},jl={style:{"text-align":"left"}},Hl=t("code",null,"树",-1),Ll=t("code",null,"数组",-1),Cl=t("code",null,"哈希表",-1),Nl=t("code",null,"2+",-1),Pl={style:{"text-align":"left"}},Kl=t("td",{style:{"text-align":"center"}},"106",-1),Bl={style:{"text-align":"left"}},Vl={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Tl={style:{"text-align":"center"}},Ul={style:{"text-align":"left"}},Rl=t("code",null,"树",-1),Wl=t("code",null,"数组",-1),Gl=t("code",null,"哈希表",-1),Yl=t("code",null,"2+",-1),Ql={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"107",-1),Dl={style:{"text-align":"left"}},Zl={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"center"}},Fl={style:{"text-align":"left"}},Jl=t("code",null,"树",-1),Xl=t("code",null,"广度优先搜索",-1),$l=t("code",null,"二叉树",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"108",-1),lo={style:{"text-align":"left"}},oo={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},so={style:{"text-align":"center"}},no={style:{"text-align":"left"}},_o=t("code",null,"树",-1),co=t("code",null,"二叉搜索树",-1),ro=t("code",null,"数组",-1),ao=t("code",null,"2+",-1),io={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"109",-1),fo={style:{"text-align":"left"}},uo={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},go={style:{"text-align":"center"}},mo={style:{"text-align":"left"}},yo=t("code",null,"树",-1),xo=t("code",null,"二叉搜索树",-1),bo=t("code",null,"链表",-1),po=t("code",null,"2+",-1),ko={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"110",-1),vo={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Eo={style:{"text-align":"center"}},wo={style:{"text-align":"left"}},zo=t("code",null,"树",-1),Oo=t("code",null,"深度优先搜索",-1),qo=t("code",null,"二叉树",-1),jo={style:{"text-align":"left"}},Ho=t("td",{style:{"text-align":"center"}},"111",-1),Lo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},No={style:{"text-align":"center"}},Po={style:{"text-align":"left"}},Ko=t("code",null,"树",-1),Bo=t("code",null,"深度优先搜索",-1),Vo=t("code",null,"广度优先搜索",-1),To=t("code",null,"1+",-1),Uo={style:{"text-align":"left"}},Ro=t("td",{style:{"text-align":"center"}},"112",-1),Wo={style:{"text-align":"left"}},Go={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Yo={style:{"text-align":"center"}},Qo={style:{"text-align":"left"}},So=t("code",null,"树",-1),Do=t("code",null,"深度优先搜索",-1),Zo=t("code",null,"广度优先搜索",-1),Ao=t("code",null,"1+",-1),Fo={style:{"text-align":"left"}},Jo=t("td",{style:{"text-align":"center"}},"113",-1),Xo={style:{"text-align":"left"}},$o={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},ts={style:{"text-align":"center"}},es={style:{"text-align":"left"}},ls=t("code",null,"树",-1),os=t("code",null,"深度优先搜索",-1),ss=t("code",null,"回溯",-1),ns=t("code",null,"1+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"114",-1),cs={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},as={style:{"text-align":"center"}},is={style:{"text-align":"left"}},hs=t("code",null,"栈",-1),fs=t("code",null,"树",-1),us=t("code",null,"深度优先搜索",-1),gs=t("code",null,"2+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"116",-1),xs={style:{"text-align":"left"}},bs={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},ps={style:{"text-align":"center"}},ks={style:{"text-align":"left"}},Ms=t("code",null,"树",-1),vs=t("code",null,"深度优先搜索",-1),Is=t("code",null,"广度优先搜索",-1),Es=t("code",null,"2+",-1),ws={style:{"text-align":"left"}},zs=t("td",{style:{"text-align":"center"}},"117",-1),Os={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},js={style:{"text-align":"center"}},Hs={style:{"text-align":"left"}},Ls=t("code",null,"树",-1),Cs=t("code",null,"深度优先搜索",-1),Ns=t("code",null,"广度优先搜索",-1),Ps=t("code",null,"2+",-1),Ks={style:{"text-align":"left"}},Bs=t("td",{style:{"text-align":"center"}},"124",-1),Vs={style:{"text-align":"left"}},Ts={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Us={style:{"text-align":"center"}},Rs={style:{"text-align":"left"}},Ws=t("code",null,"树",-1),Gs=t("code",null,"深度优先搜索",-1),Ys=t("code",null,"动态规划",-1),Qs=t("code",null,"1+",-1),Ss={style:{"text-align":"left"}},Ds=t("td",{style:{"text-align":"center"}},"129",-1),Zs={style:{"text-align":"left"}},As={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Fs={style:{"text-align":"center"}},Js={style:{"text-align":"left"}},Xs=t("code",null,"树",-1),$s=t("code",null,"深度优先搜索",-1),tn=t("code",null,"二叉树",-1),en={style:{"text-align":"left"}},ln=t("td",{style:{"text-align":"center"}},"144",-1),on={style:{"text-align":"left"}},sn={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},nn={style:{"text-align":"center"}},dn={style:{"text-align":"left"}},_n=t("code",null,"栈",-1),cn=t("code",null,"树",-1),rn=t("code",null,"深度优先搜索",-1),an=t("code",null,"1+",-1),hn={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"145",-1),un={style:{"text-align":"left"}},gn={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},mn={style:{"text-align":"center"}},yn={style:{"text-align":"left"}},xn=t("code",null,"栈",-1),bn=t("code",null,"树",-1),pn=t("code",null,"深度优先搜索",-1),kn=t("code",null,"1+",-1),Mn={style:{"text-align":"left"}},vn=t("td",{style:{"text-align":"center"}},"156",-1),In={style:{"text-align":"left"}},En={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},wn={style:{"text-align":"center"}},zn={style:{"text-align":"left"}},On=t("code",null,"树",-1),qn=t("code",null,"深度优先搜索",-1),jn=t("code",null,"二叉树",-1),Hn={style:{"text-align":"left"}},Ln=t("td",{style:{"text-align":"center"}},"173",-1),Cn={style:{"text-align":"left"}},Nn={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Pn={style:{"text-align":"center"}},Kn={style:{"text-align":"left"}},Bn=t("code",null,"栈",-1),Vn=t("code",null,"树",-1),Tn=t("code",null,"设计",-1),Un=t("code",null,"3+",-1),Rn={style:{"text-align":"left"}},Wn=t("td",{style:{"text-align":"center"}},"199",-1),Gn={style:{"text-align":"left"}},Yn={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},Qn={style:{"text-align":"center"}},Sn={style:{"text-align":"left"}},Dn=t("code",null,"树",-1),Zn=t("code",null,"深度优先搜索",-1),An=t("code",null,"广度优先搜索",-1),Fn=t("code",null,"1+",-1),Jn={style:{"text-align":"left"}},Xn=t("td",{style:{"text-align":"center"}},"222",-1),$n={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},ed={style:{"text-align":"center"}},ld={style:{"text-align":"left"}},od=t("code",null,"位运算",-1),sd=t("code",null,"树",-1),nd=t("code",null,"二分查找",-1),dd=t("code",null,"1+",-1),_d={style:{"text-align":"left"}},cd=t("td",{style:{"text-align":"center"}},"226",-1),rd={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},id={style:{"text-align":"center"}},hd={style:{"text-align":"left"}},fd=t("code",null,"树",-1),ud=t("code",null,"深度优先搜索",-1),gd=t("code",null,"广度优先搜索",-1),md=t("code",null,"1+",-1),yd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"230",-1),bd={style:{"text-align":"left"}},pd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},kd={style:{"text-align":"center"}},Md={style:{"text-align":"left"}},vd=t("code",null,"树",-1),Id=t("code",null,"深度优先搜索",-1),Ed=t("code",null,"二叉搜索树",-1),wd=t("code",null,"1+",-1),zd={style:{"text-align":"left"}},Od=t("td",{style:{"text-align":"center"}},"235",-1),qd={style:{"text-align":"left"}},jd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Hd={style:{"text-align":"center"}},Ld={style:{"text-align":"left"}},Cd=t("code",null,"树",-1),Nd=t("code",null,"深度优先搜索",-1),Pd=t("code",null,"二叉搜索树",-1),Kd=t("code",null,"1+",-1),Bd={style:{"text-align":"left"}},Vd=t("td",{style:{"text-align":"center"}},"236",-1),Td={style:{"text-align":"left"}},Ud={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rd={style:{"text-align":"center"}},Wd={style:{"text-align":"left"}},Gd=t("code",null,"树",-1),Yd=t("code",null,"深度优先搜索",-1),Qd=t("code",null,"二叉树",-1),Sd={style:{"text-align":"left"}},Dd=t("td",{style:{"text-align":"center"}},"250",-1),Zd={style:{"text-align":"left"}},Ad={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},Xd=t("code",null,"树",-1),$d=t("code",null,"深度优先搜索",-1),t_=t("code",null,"二叉树",-1),e_={style:{"text-align":"left"}},l_=t("td",{style:{"text-align":"center"}},"255",-1),o_={style:{"text-align":"left"}},s_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},n_=t("td",{style:{"text-align":"center"}},null,-1),d_={style:{"text-align":"left"}},__=t("code",null,"栈",-1),c_=t("code",null,"树",-1),r_=t("code",null,"二叉搜索树",-1),a_=t("code",null,"4+",-1),i_={style:{"text-align":"left"}},h_=t("td",{style:{"text-align":"center"}},"257",-1),f_={style:{"text-align":"left"}},u_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},g_={style:{"text-align":"center"}},m_={style:{"text-align":"left"}},y_=t("code",null,"树",-1),x_=t("code",null,"深度优先搜索",-1),b_=t("code",null,"字符串",-1),p_=t("code",null,"2+",-1),k_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"270",-1),v_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},E_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},z_=t("code",null,"树",-1),O_=t("code",null,"深度优先搜索",-1),q_=t("code",null,"二叉搜索树",-1),j_=t("code",null,"2+",-1),H_={style:{"text-align":"left"}},L_=t("td",{style:{"text-align":"center"}},"272",-1),C_={style:{"text-align":"left"}},N_={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},P_=t("td",{style:{"text-align":"center"}},null,-1),K_={style:{"text-align":"left"}},B_=t("code",null,"栈",-1),V_=t("code",null,"树",-1),T_=t("code",null,"深度优先搜索",-1),U_=t("code",null,"4+",-1),R_={style:{"text-align":"left"}},W_=t("td",{style:{"text-align":"center"}},"285",-1),G_={style:{"text-align":"left"}},Y_={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},null,-1),S_={style:{"text-align":"left"}},D_=t("code",null,"树",-1),Z_=t("code",null,"深度优先搜索",-1),A_=t("code",null,"二叉搜索树",-1),F_=t("code",null,"1+",-1),J_={style:{"text-align":"left"}},X_=t("td",{style:{"text-align":"center"}},"297",-1),$_={style:{"text-align":"left"}},tc={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},ec={style:{"text-align":"center"}},lc={style:{"text-align":"left"}},oc=t("code",null,"树",-1),sc=t("code",null,"深度优先搜索",-1),nc=t("code",null,"广度优先搜索",-1),dc=t("code",null,"3+",-1),_c={style:{"text-align":"left"}},cc=t("td",{style:{"text-align":"center"}},"298",-1),rc={style:{"text-align":"left"}},ac={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},null,-1),hc={style:{"text-align":"left"}},fc=t("code",null,"树",-1),uc=t("code",null,"深度优先搜索",-1),gc=t("code",null,"二叉树",-1),mc={style:{"text-align":"left"}},yc=t("td",{style:{"text-align":"center"}},"314",-1),xc={style:{"text-align":"left"}},bc={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},pc=t("td",{style:{"text-align":"center"}},null,-1),kc={style:{"text-align":"left"}},Mc=t("code",null,"树",-1),vc=t("code",null,"深度优先搜索",-1),Ic=t("code",null,"广度优先搜索",-1),Ec=t("code",null,"3+",-1),wc={style:{"text-align":"left"}},zc=t("td",{style:{"text-align":"center"}},"331",-1),Oc={style:{"text-align":"left"}},qc={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},jc=t("td",{style:{"text-align":"center"}},null,-1),Hc={style:{"text-align":"left"}},Lc=t("code",null,"栈",-1),Cc=t("code",null,"树",-1),Nc=t("code",null,"字符串",-1),Pc=t("code",null,"1+",-1),Kc={style:{"text-align":"left"}},Bc=t("td",{style:{"text-align":"center"}},"333",-1),Vc={style:{"text-align":"left"}},Tc={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Uc=t("td",{style:{"text-align":"center"}},null,-1),Rc={style:{"text-align":"left"}},Wc=t("code",null,"树",-1),Gc=t("code",null,"深度优先搜索",-1),Yc=t("code",null,"二叉搜索树",-1),Qc=t("code",null,"2+",-1),Sc={style:{"text-align":"left"}},Dc=t("td",{style:{"text-align":"center"}},"337",-1),Zc={style:{"text-align":"left"}},Ac={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},null,-1),Jc={style:{"text-align":"left"}},Xc=t("code",null,"树",-1),$c=t("code",null,"深度优先搜索",-1),tr=t("code",null,"动态规划",-1),er=t("code",null,"1+",-1),lr={style:{"text-align":"left"}},or=t("td",{style:{"text-align":"center"}},"366",-1),sr={style:{"text-align":"left"}},nr={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},dr={style:{"text-align":"center"}},_r={style:{"text-align":"left"}},cr=t("code",null,"树",-1),rr=t("code",null,"深度优先搜索",-1),ar=t("code",null,"二叉树",-1),ir={style:{"text-align":"left"}},hr=t("td",{style:{"text-align":"center"}},"404",-1),fr={style:{"text-align":"left"}},ur={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},gr=t("td",{style:{"text-align":"center"}},null,-1),mr={style:{"text-align":"left"}},yr=t("code",null,"树",-1),xr=t("code",null,"深度优先搜索",-1),br=t("code",null,"广度优先搜索",-1),pr=t("code",null,"1+",-1),kr={style:{"text-align":"left"}},Mr=t("td",{style:{"text-align":"center"}},"426",-1),vr={style:{"text-align":"left"}},Ir={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Er={style:{"text-align":"center"}},wr={style:{"text-align":"left"}},zr=t("code",null,"栈",-1),Or=t("code",null,"树",-1),qr=t("code",null,"深度优先搜索",-1),jr=t("code",null,"4+",-1),Hr={style:{"text-align":"left"}},Lr=t("td",{style:{"text-align":"center"}},"431",-1),Cr={style:{"text-align":"left"}},Nr={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},Pr=t("td",{style:{"text-align":"center"}},null,-1),Kr={style:{"text-align":"left"}},Br=t("code",null,"树",-1),Vr=t("code",null,"深度优先搜索",-1),Tr=t("code",null,"广度优先搜索",-1),Ur=t("code",null,"2+",-1),Rr={style:{"text-align":"left"}},Wr=t("td",{style:{"text-align":"center"}},"437",-1),Gr={style:{"text-align":"left"}},Yr={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Qr={style:{"text-align":"center"}},Sr={style:{"text-align":"left"}},Dr=t("code",null,"树",-1),Zr=t("code",null,"深度优先搜索",-1),Ar=t("code",null,"二叉树",-1),Fr={style:{"text-align":"left"}},Jr=t("td",{style:{"text-align":"center"}},"449",-1),Xr={style:{"text-align":"left"}},$r={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},ta=t("td",{style:{"text-align":"center"}},null,-1),ea={style:{"text-align":"left"}},la=t("code",null,"树",-1),oa=t("code",null,"深度优先搜索",-1),sa=t("code",null,"广度优先搜索",-1),na=t("code",null,"4+",-1),da={style:{"text-align":"left"}},_a=t("td",{style:{"text-align":"center"}},"450",-1),ca={style:{"text-align":"left"}},ra={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},aa={style:{"text-align":"center"}},ia={style:{"text-align":"left"}},ha=t("code",null,"树",-1),fa=t("code",null,"二叉搜索树",-1),ua=t("code",null,"二叉树",-1),ga={style:{"text-align":"left"}},ma=t("td",{style:{"text-align":"center"}},"501",-1),ya={style:{"text-align":"left"}},xa={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ba=t("td",{style:{"text-align":"center"}},null,-1),pa={style:{"text-align":"left"}},ka=t("code",null,"树",-1),Ma=t("code",null,"深度优先搜索",-1),va=t("code",null,"二叉搜索树",-1),Ia=t("code",null,"1+",-1),Ea={style:{"text-align":"left"}},wa=t("td",{style:{"text-align":"center"}},"508",-1),za={style:{"text-align":"left"}},Oa={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},qa=t("td",{style:{"text-align":"center"}},null,-1),ja={style:{"text-align":"left"}},Ha=t("code",null,"树",-1),La=t("code",null,"深度优先搜索",-1),Ca=t("code",null,"哈希表",-1),Na=t("code",null,"1+",-1),Pa={style:{"text-align":"left"}},Ka=t("td",{style:{"text-align":"center"}},"510",-1),Ba={style:{"text-align":"left"}},Va={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},Ta=t("td",{style:{"text-align":"center"}},null,-1),Ua={style:{"text-align":"left"}},Ra=t("code",null,"树",-1),Wa=t("code",null,"二叉搜索树",-1),Ga=t("code",null,"二叉树",-1),Ya={style:{"text-align":"left"}},Qa=t("td",{style:{"text-align":"center"}},"513",-1),Sa={style:{"text-align":"left"}},Da={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},Za=t("td",{style:{"text-align":"center"}},null,-1),Aa={style:{"text-align":"left"}},Fa=t("code",null,"树",-1),Ja=t("code",null,"深度优先搜索",-1),Xa=t("code",null,"广度优先搜索",-1),$a=t("code",null,"1+",-1),ti={style:{"text-align":"left"}},ei=t("td",{style:{"text-align":"center"}},"515",-1),li={style:{"text-align":"left"}},oi={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},si=t("td",{style:{"text-align":"center"}},null,-1),ni={style:{"text-align":"left"}},di=t("code",null,"树",-1),_i=t("code",null,"深度优先搜索",-1),ci=t("code",null,"广度优先搜索",-1),ri=t("code",null,"1+",-1),ai={style:{"text-align":"left"}},ii=t("td",{style:{"text-align":"center"}},"530",-1),hi={style:{"text-align":"left"}},fi={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},ui={style:{"text-align":"center"}},gi={style:{"text-align":"left"}},mi=t("code",null,"树",-1),yi=t("code",null,"深度优先搜索",-1),xi=t("code",null,"广度优先搜索",-1),bi=t("code",null,"2+",-1),pi={style:{"text-align":"left"}},ki=t("td",{style:{"text-align":"center"}},"536",-1),Mi={style:{"text-align":"left"}},vi={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Ii=t("td",{style:{"text-align":"center"}},null,-1),Ei={style:{"text-align":"left"}},wi=t("code",null,"栈",-1),zi=t("code",null,"树",-1),Oi=t("code",null,"深度优先搜索",-1),qi=t("code",null,"2+",-1),ji={style:{"text-align":"left"}},Hi=t("td",{style:{"text-align":"center"}},"538",-1),Li={style:{"text-align":"left"}},Ci={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Ni=t("td",{style:{"text-align":"center"}},null,-1),Pi={style:{"text-align":"left"}},Ki=t("code",null,"树",-1),Bi=t("code",null,"深度优先搜索",-1),Vi=t("code",null,"二叉搜索树",-1),Ti=t("code",null,"1+",-1),Ui={style:{"text-align":"left"}},Ri=t("td",{style:{"text-align":"center"}},"543",-1),Wi={style:{"text-align":"left"}},Gi={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yi={style:{"text-align":"center"}},Qi={style:{"text-align":"left"}},Si=t("code",null,"树",-1),Di=t("code",null,"深度优先搜索",-1),Zi=t("code",null,"二叉树",-1),Ai={style:{"text-align":"left"}},Fi=t("td",{style:{"text-align":"center"}},"545",-1),Ji={style:{"text-align":"left"}},Xi={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},$i=t("td",{style:{"text-align":"center"}},null,-1),t1={style:{"text-align":"left"}},e1=t("code",null,"树",-1),l1=t("code",null,"深度优先搜索",-1),o1=t("code",null,"二叉树",-1),s1={style:{"text-align":"left"}},n1=t("td",{style:{"text-align":"center"}},"549",-1),d1={style:{"text-align":"left"}},_1={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},c1=t("td",{style:{"text-align":"center"}},null,-1),r1={style:{"text-align":"left"}},a1=t("code",null,"树",-1),i1=t("code",null,"深度优先搜索",-1),h1=t("code",null,"二叉树",-1),f1={style:{"text-align":"left"}},u1=t("td",{style:{"text-align":"center"}},"563",-1),g1={style:{"text-align":"left"}},m1={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},y1=t("td",{style:{"text-align":"center"}},null,-1),x1={style:{"text-align":"left"}},b1=t("code",null,"树",-1),p1=t("code",null,"深度优先搜索",-1),k1=t("code",null,"二叉树",-1),M1={style:{"text-align":"left"}},v1=t("td",{style:{"text-align":"center"}},"572",-1),I1={style:{"text-align":"left"}},E1={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},w1={style:{"text-align":"center"}},z1={style:{"text-align":"left"}},O1=t("code",null,"树",-1),q1=t("code",null,"深度优先搜索",-1),j1=t("code",null,"二叉树",-1),H1=t("code",null,"2+",-1),L1={style:{"text-align":"left"}},C1=t("td",{style:{"text-align":"center"}},"606",-1),N1={style:{"text-align":"left"}},P1={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},K1=t("td",{style:{"text-align":"center"}},null,-1),B1={style:{"text-align":"left"}},V1=t("code",null,"树",-1),T1=t("code",null,"深度优先搜索",-1),U1=t("code",null,"字符串",-1),R1=t("code",null,"1+",-1),W1={style:{"text-align":"left"}},G1=t("td",{style:{"text-align":"center"}},"617",-1),Y1={style:{"text-align":"left"}},Q1={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},S1={style:{"text-align":"center"}},D1={style:{"text-align":"left"}},Z1=t("code",null,"树",-1),A1=t("code",null,"深度优先搜索",-1),F1=t("code",null,"广度优先搜索",-1),J1=t("code",null,"1+",-1),X1={style:{"text-align":"left"}},$1=t("td",{style:{"text-align":"center"}},"623",-1),th={style:{"text-align":"left"}},eh={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},lh=t("td",{style:{"text-align":"center"}},null,-1),oh={style:{"text-align":"left"}},sh=t("code",null,"树",-1),nh=t("code",null,"深度优先搜索",-1),dh=t("code",null,"广度优先搜索",-1),_h=t("code",null,"1+",-1),ch={style:{"text-align":"left"}},rh=t("td",{style:{"text-align":"center"}},"637",-1),ah={style:{"text-align":"left"}},ih={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},hh={style:{"text-align":"center"}},fh={style:{"text-align":"left"}},uh=t("code",null,"树",-1),gh=t("code",null,"深度优先搜索",-1),mh=t("code",null,"广度优先搜索",-1),yh=t("code",null,"1+",-1),xh={style:{"text-align":"left"}},bh=t("td",{style:{"text-align":"center"}},"652",-1),ph={style:{"text-align":"left"}},kh={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},Mh=t("td",{style:{"text-align":"center"}},null,-1),vh={style:{"text-align":"left"}},Ih=t("code",null,"树",-1),Eh=t("code",null,"深度优先搜索",-1),wh=t("code",null,"哈希表",-1),zh=t("code",null,"1+",-1),Oh={style:{"text-align":"left"}},qh=t("td",{style:{"text-align":"center"}},"653",-1),jh={style:{"text-align":"left"}},Hh={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Lh=t("td",{style:{"text-align":"center"}},null,-1),Ch={style:{"text-align":"left"}},Nh=t("code",null,"树",-1),Ph=t("code",null,"深度优先搜索",-1),Kh=t("code",null,"广度优先搜索",-1),Bh=t("code",null,"4+",-1),Vh={style:{"text-align":"left"}},Th=t("td",{style:{"text-align":"center"}},"654",-1),Uh={style:{"text-align":"left"}},Rh={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wh={style:{"text-align":"center"}},Gh={style:{"text-align":"left"}},Yh=t("code",null,"栈",-1),Qh=t("code",null,"树",-1),Sh=t("code",null,"数组",-1),Dh=t("code",null,"3+",-1),Zh={style:{"text-align":"left"}},Ah=t("td",{style:{"text-align":"center"}},"655",-1),Fh={style:{"text-align":"left"}},Jh={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xh=t("td",{style:{"text-align":"center"}},null,-1),$h={style:{"text-align":"left"}},tf=t("code",null,"树",-1),ef=t("code",null,"深度优先搜索",-1),lf=t("code",null,"广度优先搜索",-1),of=t("code",null,"1+",-1),sf={style:{"text-align":"left"}},nf=t("td",{style:{"text-align":"center"}},"662",-1),df={style:{"text-align":"left"}},_f={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},cf={style:{"text-align":"center"}},rf={style:{"text-align":"left"}},af=t("code",null,"树",-1),hf=t("code",null,"深度优先搜索",-1),ff=t("code",null,"广度优先搜索",-1),uf=t("code",null,"1+",-1),gf={style:{"text-align":"left"}},mf=t("td",{style:{"text-align":"center"}},"663",-1),yf={style:{"text-align":"left"}},xf={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},bf=t("td",{style:{"text-align":"center"}},null,-1),pf={style:{"text-align":"left"}},kf=t("code",null,"树",-1),Mf=t("code",null,"深度优先搜索",-1),vf=t("code",null,"二叉树",-1),If={style:{"text-align":"left"}},Ef=t("td",{style:{"text-align":"center"}},"666",-1),wf={style:{"text-align":"left"}},zf={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},Of=t("td",{style:{"text-align":"center"}},null,-1),qf={style:{"text-align":"left"}},jf=t("code",null,"树",-1),Hf=t("code",null,"深度优先搜索",-1),Lf=t("code",null,"数组",-1),Cf=t("code",null,"2+",-1),Nf={style:{"text-align":"left"}},Pf=t("td",{style:{"text-align":"center"}},"669",-1),Kf={style:{"text-align":"left"}},Bf={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Vf=t("td",{style:{"text-align":"center"}},null,-1),Tf={style:{"text-align":"left"}},Uf=t("code",null,"树",-1),Rf=t("code",null,"深度优先搜索",-1),Wf=t("code",null,"二叉搜索树",-1),Gf=t("code",null,"1+",-1),Yf={style:{"text-align":"left"}},Qf=t("td",{style:{"text-align":"center"}},"671",-1),Sf={style:{"text-align":"left"}},Df={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zf=t("td",{style:{"text-align":"center"}},null,-1),Af={style:{"text-align":"left"}},Ff=t("code",null,"树",-1),Jf=t("code",null,"深度优先搜索",-1),Xf=t("code",null,"二叉树",-1),$f={style:{"text-align":"left"}},tu=t("td",{style:{"text-align":"center"}},"687",-1),eu={style:{"text-align":"left"}},lu={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},ou=t("td",{style:{"text-align":"center"}},null,-1),su={style:{"text-align":"left"}},nu=t("code",null,"树",-1),du=t("code",null,"深度优先搜索",-1),_u=t("code",null,"二叉树",-1),cu={style:{"text-align":"left"}},ru=t("td",{style:{"text-align":"center"}},"700",-1),au={style:{"text-align":"left"}},iu={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},hu={style:{"text-align":"center"}},fu={style:{"text-align":"left"}},uu=t("code",null,"树",-1),gu=t("code",null,"二叉搜索树",-1),mu=t("code",null,"二叉树",-1),yu={style:{"text-align":"left"}},xu=t("td",{style:{"text-align":"center"}},"701",-1),bu={style:{"text-align":"left"}},pu={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ku={style:{"text-align":"center"}},Mu={style:{"text-align":"left"}},vu=t("code",null,"树",-1),Iu=t("code",null,"二叉搜索树",-1),Eu=t("code",null,"二叉树",-1),wu={style:{"text-align":"left"}},zu=t("td",{style:{"text-align":"center"}},"703",-1),Ou={style:{"text-align":"left"}},qu={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},ju={style:{"text-align":"center"}},Hu={style:{"text-align":"left"}},Lu=t("code",null,"树",-1),Cu=t("code",null,"设计",-1),Nu=t("code",null,"二叉搜索树",-1),Pu=t("code",null,"3+",-1),Ku={style:{"text-align":"left"}},Bu=t("td",{style:{"text-align":"center"}},"742",-1),Vu={style:{"text-align":"left"}},Tu={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Uu=t("td",{style:{"text-align":"center"}},null,-1),Ru={style:{"text-align":"left"}},Wu=t("code",null,"树",-1),Gu=t("code",null,"深度优先搜索",-1),Yu=t("code",null,"广度优先搜索",-1),Qu=t("code",null,"1+",-1),Su={style:{"text-align":"left"}},Du=t("td",{style:{"text-align":"center"}},"776",-1),Zu={style:{"text-align":"left"}},Au={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},Fu=t("td",{style:{"text-align":"center"}},null,-1),Ju={style:{"text-align":"left"}},Xu=t("code",null,"树",-1),$u=t("code",null,"二叉搜索树",-1),tg=t("code",null,"递归",-1),eg=t("code",null,"1+",-1),lg={style:{"text-align":"left"}},og=t("td",{style:{"text-align":"center"}},"783",-1),sg={style:{"text-align":"left"}},ng={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},dg={style:{"text-align":"center"}},_g={style:{"text-align":"left"}},cg=t("code",null,"树",-1),rg=t("code",null,"深度优先搜索",-1),ag=t("code",null,"广度优先搜索",-1),ig=t("code",null,"2+",-1),hg={style:{"text-align":"left"}},fg=t("td",{style:{"text-align":"center"}},"814",-1),ug={style:{"text-align":"left"}},gg={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},mg=t("td",{style:{"text-align":"center"}},null,-1),yg={style:{"text-align":"left"}},xg=t("code",null,"树",-1),bg=t("code",null,"深度优先搜索",-1),pg=t("code",null,"二叉树",-1),kg={style:{"text-align":"left"}},Mg=t("td",{style:{"text-align":"center"}},"863",-1),vg={style:{"text-align":"left"}},Ig={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Eg=t("td",{style:{"text-align":"center"}},null,-1),wg={style:{"text-align":"left"}},zg=t("code",null,"树",-1),Og=t("code",null,"深度优先搜索",-1),qg=t("code",null,"广度优先搜索",-1),jg=t("code",null,"2+",-1),Hg={style:{"text-align":"left"}},Lg=t("td",{style:{"text-align":"center"}},"865",-1),Cg={style:{"text-align":"left"}},Ng={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},Pg=t("td",{style:{"text-align":"center"}},null,-1),Kg={style:{"text-align":"left"}},Bg=t("code",null,"树",-1),Vg=t("code",null,"深度优先搜索",-1),Tg=t("code",null,"广度优先搜索",-1),Ug=t("code",null,"2+",-1),Rg={style:{"text-align":"left"}},Wg=t("td",{style:{"text-align":"center"}},"872",-1),Gg={style:{"text-align":"left"}},Yg={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},Qg=t("td",{style:{"text-align":"center"}},null,-1),Sg={style:{"text-align":"left"}},Dg=t("code",null,"树",-1),Zg=t("code",null,"深度优先搜索",-1),Ag=t("code",null,"二叉树",-1),Fg={style:{"text-align":"left"}},Jg=t("td",{style:{"text-align":"center"}},"889",-1),Xg={style:{"text-align":"left"}},$g={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},tm={style:{"text-align":"center"}},em={style:{"text-align":"left"}},lm=t("code",null,"树",-1),om=t("code",null,"数组",-1),sm=t("code",null,"哈希表",-1),nm=t("code",null,"2+",-1),dm={style:{"text-align":"left"}},_m=t("td",{style:{"text-align":"center"}},"894",-1),cm={style:{"text-align":"left"}},rm={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},am=t("td",{style:{"text-align":"center"}},null,-1),im={style:{"text-align":"left"}},hm=t("code",null,"树",-1),fm=t("code",null,"递归",-1),um=t("code",null,"记忆化搜索",-1),gm=t("code",null,"2+",-1),mm={style:{"text-align":"left"}},ym=t("td",{style:{"text-align":"center"}},"897",-1),xm={style:{"text-align":"left"}},bm={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},pm=t("td",{style:{"text-align":"center"}},null,-1),km={style:{"text-align":"left"}},Mm=t("code",null,"栈",-1),vm=t("code",null,"树",-1),Im=t("code",null,"深度优先搜索",-1),Em=t("code",null,"2+",-1),wm={style:{"text-align":"left"}},zm=t("td",{style:{"text-align":"center"}},"919",-1),Om={style:{"text-align":"left"}},qm={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},jm=t("td",{style:{"text-align":"center"}},null,-1),Hm={style:{"text-align":"left"}},Lm=t("code",null,"树",-1),Cm=t("code",null,"广度优先搜索",-1),Nm=t("code",null,"设计",-1),Pm=t("code",null,"1+",-1),Km={style:{"text-align":"left"}},Bm=t("td",{style:{"text-align":"center"}},"938",-1),Vm={style:{"text-align":"left"}},Tm={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},Um=t("td",{style:{"text-align":"center"}},null,-1),Rm={style:{"text-align":"left"}},Wm=t("code",null,"树",-1),Gm=t("code",null,"深度优先搜索",-1),Ym=t("code",null,"二叉搜索树",-1),Qm=t("code",null,"1+",-1),Sm={style:{"text-align":"left"}},Dm=t("td",{style:{"text-align":"center"}},"951",-1),Zm={style:{"text-align":"left"}},Am={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Fm=t("td",{style:{"text-align":"center"}},null,-1),Jm={style:{"text-align":"left"}},Xm=t("code",null,"树",-1),$m=t("code",null,"深度优先搜索",-1),ty=t("code",null,"二叉树",-1),ey={style:{"text-align":"left"}},ly=t("td",{style:{"text-align":"center"}},"958",-1),oy={style:{"text-align":"left"}},sy={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ny={style:{"text-align":"center"}},dy={style:{"text-align":"left"}},_y=t("code",null,"树",-1),cy=t("code",null,"广度优先搜索",-1),ry=t("code",null,"二叉树",-1),ay={style:{"text-align":"left"}},iy=t("td",{style:{"text-align":"center"}},"965",-1),hy={style:{"text-align":"left"}},fy={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},uy=t("td",{style:{"text-align":"center"}},null,-1),gy={style:{"text-align":"left"}},my=t("code",null,"树",-1),yy=t("code",null,"深度优先搜索",-1),xy=t("code",null,"广度优先搜索",-1),by=t("code",null,"1+",-1),py={style:{"text-align":"left"}},ky=t("td",{style:{"text-align":"center"}},"968",-1),My={style:{"text-align":"left"}},vy={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},Iy=t("td",{style:{"text-align":"center"}},null,-1),Ey={style:{"text-align":"left"}},wy=t("code",null,"树",-1),zy=t("code",null,"深度优先搜索",-1),Oy=t("code",null,"动态规划",-1),qy=t("code",null,"1+",-1),jy={style:{"text-align":"left"}},Hy=t("td",{style:{"text-align":"center"}},"971",-1),Ly={style:{"text-align":"left"}},Cy={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ny=t("td",{style:{"text-align":"center"}},null,-1),Py={style:{"text-align":"left"}},Ky=t("code",null,"树",-1),By=t("code",null,"深度优先搜索",-1),Vy=t("code",null,"二叉树",-1),Ty={style:{"text-align":"left"}},Uy=t("td",{style:{"text-align":"center"}},"979",-1),Ry={style:{"text-align":"left"}},Wy={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gy=t("td",{style:{"text-align":"center"}},null,-1),Yy={style:{"text-align":"left"}},Qy=t("code",null,"树",-1),Sy=t("code",null,"深度优先搜索",-1),Dy=t("code",null,"二叉树",-1),Zy={style:{"text-align":"left"}},Ay=t("td",{style:{"text-align":"center"}},"987",-1),Fy={style:{"text-align":"left"}},Jy={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xy=t("td",{style:{"text-align":"center"}},null,-1),$y={style:{"text-align":"left"}},tx=t("code",null,"树",-1),ex=t("code",null,"深度优先搜索",-1),lx=t("code",null,"广度优先搜索",-1),ox=t("code",null,"3+",-1),sx={style:{"text-align":"left"}},nx=t("td",{style:{"text-align":"center"}},"988",-1),dx={style:{"text-align":"left"}},_x={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},cx=t("td",{style:{"text-align":"center"}},null,-1),rx={style:{"text-align":"left"}},ax=t("code",null,"树",-1),ix=t("code",null,"深度优先搜索",-1),hx=t("code",null,"字符串",-1),fx=t("code",null,"2+",-1),ux={style:{"text-align":"left"}},gx=t("td",{style:{"text-align":"center"}},"993",-1),mx={style:{"text-align":"left"}},yx={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},xx=t("td",{style:{"text-align":"center"}},null,-1),bx={style:{"text-align":"left"}},px=t("code",null,"树",-1),kx=t("code",null,"深度优先搜索",-1),Mx=t("code",null,"广度优先搜索",-1),vx=t("code",null,"1+",-1),Ix={style:{"text-align":"left"}},Ex=t("td",{style:{"text-align":"center"}},"998",-1),wx={style:{"text-align":"left"}},zx={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Ox=t("td",{style:{"text-align":"center"}},null,-1),qx={style:{"text-align":"left"}},jx=t("code",null,"树",-1),Hx=t("code",null,"二叉树",-1),Lx={style:{"text-align":"left"}},Cx=t("td",{style:{"text-align":"center"}},"1008",-1),Nx={style:{"text-align":"left"}},Px={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Kx={style:{"text-align":"center"}},Bx={style:{"text-align":"left"}},Vx=t("code",null,"栈",-1),Tx=t("code",null,"树",-1),Ux=t("code",null,"二叉搜索树",-1),Rx=t("code",null,"3+",-1),Wx={style:{"text-align":"left"}},Gx=t("td",{style:{"text-align":"center"}},"1022",-1),Yx={style:{"text-align":"left"}},Qx={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Sx=t("td",{style:{"text-align":"center"}},null,-1),Dx={style:{"text-align":"left"}},Zx=t("code",null,"树",-1),Ax=t("code",null,"深度优先搜索",-1),Fx=t("code",null,"二叉树",-1),Jx={style:{"text-align":"left"}},Xx=t("td",{style:{"text-align":"center"}},"1026",-1),$x={style:{"text-align":"left"}},tb={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},eb=t("td",{style:{"text-align":"center"}},null,-1),lb={style:{"text-align":"left"}},ob=t("code",null,"树",-1),sb=t("code",null,"深度优先搜索",-1),nb=t("code",null,"二叉树",-1),db={style:{"text-align":"left"}},_b=t("td",{style:{"text-align":"center"}},"1028",-1),cb={style:{"text-align":"left"}},rb={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},ab=t("td",{style:{"text-align":"center"}},null,-1),ib={style:{"text-align":"left"}},hb=t("code",null,"树",-1),fb=t("code",null,"深度优先搜索",-1),ub=t("code",null,"字符串",-1),gb=t("code",null,"1+",-1),mb={style:{"text-align":"left"}},yb=t("td",{style:{"text-align":"center"}},"1038",-1),xb={style:{"text-align":"left"}},bb={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},pb=t("td",{style:{"text-align":"center"}},null,-1),kb={style:{"text-align":"left"}},Mb=t("code",null,"树",-1),vb=t("code",null,"深度优先搜索",-1),Ib=t("code",null,"二叉搜索树",-1),Eb=t("code",null,"1+",-1),wb={style:{"text-align":"left"}},zb=t("td",{style:{"text-align":"center"}},"1080",-1),Ob={style:{"text-align":"left"}},qb={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},jb=t("td",{style:{"text-align":"center"}},null,-1),Hb={style:{"text-align":"left"}},Lb=t("code",null,"树",-1),Cb=t("code",null,"深度优先搜索",-1),Nb=t("code",null,"二叉树",-1),Pb={style:{"text-align":"left"}},Kb=t("td",{style:{"text-align":"center"}},"1104",-1),Bb={style:{"text-align":"left"}},Vb={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},Tb=t("td",{style:{"text-align":"center"}},null,-1),Ub={style:{"text-align":"left"}},Rb=t("code",null,"树",-1),Wb=t("code",null,"数学",-1),Gb=t("code",null,"二叉树",-1),Yb={style:{"text-align":"left"}},Qb=t("td",{style:{"text-align":"center"}},"1110",-1),Sb={style:{"text-align":"left"}},Db={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Zb=t("td",{style:{"text-align":"center"}},null,-1),Ab={style:{"text-align":"left"}},Fb=t("code",null,"树",-1),Jb=t("code",null,"深度优先搜索",-1),Xb=t("code",null,"数组",-1),$b=t("code",null,"2+",-1),t2={style:{"text-align":"left"}},e2=t("td",{style:{"text-align":"center"}},"1120",-1),l2={style:{"text-align":"left"}},o2={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},s2=t("td",{style:{"text-align":"center"}},null,-1),n2={style:{"text-align":"left"}},d2=t("code",null,"树",-1),_2=t("code",null,"深度优先搜索",-1),c2=t("code",null,"二叉树",-1),r2={style:{"text-align":"left"}},a2=t("td",{style:{"text-align":"center"}},"1123",-1),i2={style:{"text-align":"left"}},h2={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},f2=t("td",{style:{"text-align":"center"}},null,-1),u2={style:{"text-align":"left"}},g2=t("code",null,"树",-1),m2=t("code",null,"深度优先搜索",-1),y2=t("code",null,"广度优先搜索",-1),x2=t("code",null,"2+",-1),b2={style:{"text-align":"left"}},p2=t("td",{style:{"text-align":"center"}},"1145",-1),k2={style:{"text-align":"left"}},M2={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},v2=t("td",{style:{"text-align":"center"}},null,-1),I2={style:{"text-align":"left"}},E2=t("code",null,"树",-1),w2=t("code",null,"深度优先搜索",-1),z2=t("code",null,"二叉树",-1),O2={style:{"text-align":"left"}},q2=t("td",{style:{"text-align":"center"}},"1161",-1),j2={style:{"text-align":"left"}},H2={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},L2=t("td",{style:{"text-align":"center"}},null,-1),C2={style:{"text-align":"left"}},N2=t("code",null,"树",-1),P2=t("code",null,"深度优先搜索",-1),K2=t("code",null,"广度优先搜索",-1),B2=t("code",null,"1+",-1),V2={style:{"text-align":"left"}},T2=t("td",{style:{"text-align":"center"}},"1214",-1),U2={style:{"text-align":"left"}},R2={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},W2=t("td",{style:{"text-align":"center"}},null,-1),G2={style:{"text-align":"left"}},Y2=t("code",null,"栈",-1),Q2=t("code",null,"树",-1),S2=t("code",null,"深度优先搜索",-1),D2=t("code",null,"4+",-1),Z2={style:{"text-align":"left"}},A2=t("td",{style:{"text-align":"center"}},"1261",-1),F2={style:{"text-align":"left"}},J2={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},X2=t("td",{style:{"text-align":"center"}},null,-1),$2={style:{"text-align":"left"}},t0=t("code",null,"树",-1),e0=t("code",null,"深度优先搜索",-1),l0=t("code",null,"广度优先搜索",-1),o0=t("code",null,"3+",-1),s0={style:{"text-align":"left"}},n0=t("td",{style:{"text-align":"center"}},"1302",-1),d0={style:{"text-align":"left"}},_0={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},c0=t("td",{style:{"text-align":"center"}},null,-1),r0={style:{"text-align":"left"}},a0=t("code",null,"树",-1),i0=t("code",null,"深度优先搜索",-1),h0=t("code",null,"广度优先搜索",-1),f0=t("code",null,"1+",-1),u0={style:{"text-align":"left"}},g0=t("td",{style:{"text-align":"center"}},"1305",-1),m0={style:{"text-align":"left"}},y0={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},x0=t("td",{style:{"text-align":"center"}},null,-1),b0={style:{"text-align":"left"}},p0=t("code",null,"树",-1),k0=t("code",null,"深度优先搜索",-1),M0=t("code",null,"二叉搜索树",-1),v0=t("code",null,"2+",-1),I0={style:{"text-align":"left"}},E0=t("td",{style:{"text-align":"center"}},"1315",-1),w0={style:{"text-align":"left"}},z0={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},O0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},j0=t("code",null,"树",-1),H0=t("code",null,"深度优先搜索",-1),L0=t("code",null,"广度优先搜索",-1),C0=t("code",null,"1+",-1),N0={style:{"text-align":"left"}},P0=t("td",{style:{"text-align":"center"}},"1325",-1),K0={style:{"text-align":"left"}},B0={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},V0=t("td",{style:{"text-align":"center"}},null,-1),T0={style:{"text-align":"left"}},U0=t("code",null,"树",-1),R0=t("code",null,"深度优先搜索",-1),W0=t("code",null,"二叉树",-1),G0={style:{"text-align":"left"}},Y0=t("td",{style:{"text-align":"center"}},"1339",-1),Q0={style:{"text-align":"left"}},S0={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},D0=t("td",{style:{"text-align":"center"}},null,-1),Z0={style:{"text-align":"left"}},A0=t("code",null,"树",-1),F0=t("code",null,"深度优先搜索",-1),J0=t("code",null,"二叉树",-1),X0={style:{"text-align":"left"}},$0=t("td",{style:{"text-align":"center"}},"1361",-1),tp={style:{"text-align":"left"}},ep={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},lp=t("td",{style:{"text-align":"center"}},null,-1),op={style:{"text-align":"left"}},sp=t("code",null,"树",-1),np=t("code",null,"深度优先搜索",-1),dp=t("code",null,"广度优先搜索",-1),_p=t("code",null,"3+",-1),cp={style:{"text-align":"left"}},rp=t("td",{style:{"text-align":"center"}},"1367",-1),ap={style:{"text-align":"left"}},ip={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},hp=t("td",{style:{"text-align":"center"}},null,-1),fp={style:{"text-align":"left"}},up=t("code",null,"树",-1),gp=t("code",null,"深度优先搜索",-1),mp=t("code",null,"链表",-1),yp=t("code",null,"1+",-1),xp={style:{"text-align":"left"}},bp=t("td",{style:{"text-align":"center"}},"1372",-1),pp={style:{"text-align":"left"}},kp={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Mp=t("td",{style:{"text-align":"center"}},null,-1),vp={style:{"text-align":"left"}},Ip=t("code",null,"树",-1),Ep=t("code",null,"深度优先搜索",-1),wp=t("code",null,"动态规划",-1),zp=t("code",null,"1+",-1),Op={style:{"text-align":"left"}},qp=t("td",{style:{"text-align":"center"}},"1373",-1),jp={style:{"text-align":"left"}},Hp={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Lp=t("td",{style:{"text-align":"center"}},null,-1),Cp={style:{"text-align":"left"}},Np=t("code",null,"树",-1),Pp=t("code",null,"深度优先搜索",-1),Kp=t("code",null,"二叉搜索树",-1),Bp=t("code",null,"2+",-1),Vp={style:{"text-align":"left"}},Tp=t("td",{style:{"text-align":"center"}},"1379",-1),Up={style:{"text-align":"left"}},Rp={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},Wp=t("td",{style:{"text-align":"center"}},null,-1),Gp={style:{"text-align":"left"}},Yp=t("code",null,"树",-1),Qp=t("code",null,"深度优先搜索",-1),Sp=t("code",null,"广度优先搜索",-1),Dp=t("code",null,"1+",-1),Zp={style:{"text-align":"left"}},Ap=t("td",{style:{"text-align":"center"}},"1382",-1),Fp={style:{"text-align":"left"}},Jp={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Xp=t("td",{style:{"text-align":"center"}},null,-1),$p={style:{"text-align":"left"}},t6=t("code",null,"贪心",-1),e6=t("code",null,"树",-1),l6=t("code",null,"深度优先搜索",-1),o6=t("code",null,"3+",-1),s6={style:{"text-align":"left"}},n6=t("td",{style:{"text-align":"center"}},"1430",-1),d6={style:{"text-align":"left"}},_6={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},c6=t("td",{style:{"text-align":"center"}},null,-1),r6={style:{"text-align":"left"}},a6=t("code",null,"树",-1),i6=t("code",null,"深度优先搜索",-1),h6=t("code",null,"广度优先搜索",-1),f6=t("code",null,"1+",-1),u6={style:{"text-align":"left"}},g6=t("td",{style:{"text-align":"center"}},"1448",-1),m6={style:{"text-align":"left"}},y6={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},x6=t("td",{style:{"text-align":"center"}},null,-1),b6={style:{"text-align":"left"}},p6=t("code",null,"树",-1),k6=t("code",null,"深度优先搜索",-1),M6=t("code",null,"广度优先搜索",-1),v6=t("code",null,"1+",-1),I6={style:{"text-align":"left"}},E6=t("td",{style:{"text-align":"center"}},"1457",-1),w6={style:{"text-align":"left"}},z6={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},O6=t("td",{style:{"text-align":"center"}},null,-1),q6={style:{"text-align":"left"}},j6=t("code",null,"位运算",-1),H6=t("code",null,"树",-1),L6=t("code",null,"深度优先搜索",-1),C6=t("code",null,"2+",-1),N6={style:{"text-align":"left"}},P6=t("td",{style:{"text-align":"center"}},"1469",-1),K6={style:{"text-align":"left"}},B6={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},V6=t("td",{style:{"text-align":"center"}},null,-1),T6={style:{"text-align":"left"}},U6=t("code",null,"树",-1),R6=t("code",null,"深度优先搜索",-1),W6=t("code",null,"广度优先搜索",-1),G6=t("code",null,"1+",-1),Y6={style:{"text-align":"left"}},Q6=t("td",{style:{"text-align":"center"}},"1485",-1),S6={style:{"text-align":"left"}},D6={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},Z6=t("td",{style:{"text-align":"center"}},null,-1),A6={style:{"text-align":"left"}},F6=t("code",null,"树",-1),J6=t("code",null,"深度优先搜索",-1),X6=t("code",null,"广度优先搜索",-1),$6=t("code",null,"2+",-1),t8={style:{"text-align":"left"}},e8=t("td",{style:{"text-align":"center"}},"1530",-1),l8={style:{"text-align":"left"}},o8={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},s8=t("td",{style:{"text-align":"center"}},null,-1),n8={style:{"text-align":"left"}},d8=t("code",null,"树",-1),_8=t("code",null,"深度优先搜索",-1),c8=t("code",null,"二叉树",-1),r8={style:{"text-align":"left"}},a8=t("td",{style:{"text-align":"center"}},"1569",-1),i8={style:{"text-align":"left"}},h8={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},f8=t("td",{style:{"text-align":"center"}},null,-1),u8={style:{"text-align":"left"}},g8=t("code",null,"树",-1),m8=t("code",null,"并查集",-1),y8=t("code",null,"二叉搜索树",-1),x8=t("code",null,"7+",-1),b8={style:{"text-align":"left"}},p8=t("td",{style:{"text-align":"center"}},"1586",-1),k8={style:{"text-align":"left"}},M8={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},v8=t("td",{style:{"text-align":"center"}},null,-1),I8={style:{"text-align":"left"}},E8=t("code",null,"栈",-1),w8=t("code",null,"树",-1),z8=t("code",null,"设计",-1),O8=t("code",null,"3+",-1),q8={style:{"text-align":"left"}},j8=t("td",{style:{"text-align":"center"}},"1597",-1),H8={style:{"text-align":"left"}},L8={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},C8=t("td",{style:{"text-align":"center"}},null,-1),N8={style:{"text-align":"left"}},P8=t("code",null,"栈",-1),K8=t("code",null,"树",-1),B8=t("code",null,"字符串",-1),V8=t("code",null,"1+",-1),T8={style:{"text-align":"left"}},U8=t("td",{style:{"text-align":"center"}},"1602",-1),R8={style:{"text-align":"left"}},W8={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},G8=t("td",{style:{"text-align":"center"}},null,-1),Y8={style:{"text-align":"left"}},Q8=t("code",null,"树",-1),S8=t("code",null,"广度优先搜索",-1),D8=t("code",null,"二叉树",-1),Z8={style:{"text-align":"left"}},A8=t("td",{style:{"text-align":"center"}},"1609",-1),F8={style:{"text-align":"left"}},J8={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},X8=t("td",{style:{"text-align":"center"}},null,-1),$8={style:{"text-align":"left"}},t3=t("code",null,"树",-1),e3=t("code",null,"广度优先搜索",-1),l3=t("code",null,"二叉树",-1),o3={style:{"text-align":"left"}},s3=t("td",{style:{"text-align":"center"}},"1612",-1),n3={style:{"text-align":"left"}},d3={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},_3=t("td",{style:{"text-align":"center"}},null,-1),c3={style:{"text-align":"left"}},r3=t("code",null,"树",-1),a3=t("code",null,"深度优先搜索",-1),i3=t("code",null,"哈希表",-1),h3=t("code",null,"2+",-1),f3={style:{"text-align":"left"}},u3=t("td",{style:{"text-align":"center"}},"1628",-1),g3={style:{"text-align":"left"}},m3={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},y3=t("td",{style:{"text-align":"center"}},null,-1),x3={style:{"text-align":"left"}},b3=t("code",null,"栈",-1),p3=t("code",null,"树",-1),k3=t("code",null,"设计",-1),M3=t("code",null,"3+",-1),v3={style:{"text-align":"left"}},I3=t("td",{style:{"text-align":"center"}},"1644",-1),E3={style:{"text-align":"left"}},w3={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},z3=t("td",{style:{"text-align":"center"}},null,-1),O3={style:{"text-align":"left"}},q3=t("code",null,"树",-1),j3=t("code",null,"深度优先搜索",-1),H3=t("code",null,"二叉树",-1),L3={style:{"text-align":"left"}},C3=t("td",{style:{"text-align":"center"}},"1650",-1),N3={style:{"text-align":"left"}},P3={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},K3=t("td",{style:{"text-align":"center"}},null,-1),B3={style:{"text-align":"left"}},V3=t("code",null,"树",-1),T3=t("code",null,"哈希表",-1),U3=t("code",null,"双指针",-1),R3=t("code",null,"1+",-1),W3={style:{"text-align":"left"}},G3=t("td",{style:{"text-align":"center"}},"1660",-1),Y3={style:{"text-align":"left"}},Q3={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},S3=t("td",{style:{"text-align":"center"}},null,-1),D3={style:{"text-align":"left"}},Z3=t("code",null,"树",-1),A3=t("code",null,"深度优先搜索",-1),F3=t("code",null,"广度优先搜索",-1),J3=t("code",null,"2+",-1),X3={style:{"text-align":"left"}},$3=t("td",{style:{"text-align":"center"}},"1666",-1),t5={style:{"text-align":"left"}},e5={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},l5=t("td",{style:{"text-align":"center"}},null,-1),o5={style:{"text-align":"left"}},s5=t("code",null,"树",-1),n5=t("code",null,"深度优先搜索",-1),d5=t("code",null,"二叉树",-1),_5={style:{"text-align":"left"}},c5=t("td",{style:{"text-align":"center"}},"1676",-1),r5={style:{"text-align":"left"}},a5={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},i5=t("td",{style:{"text-align":"center"}},null,-1),h5={style:{"text-align":"left"}},f5=t("code",null,"树",-1),u5=t("code",null,"深度优先搜索",-1),g5=t("code",null,"哈希表",-1),m5=t("code",null,"1+",-1),y5={style:{"text-align":"left"}},x5=t("td",{style:{"text-align":"center"}},"1740",-1),b5={style:{"text-align":"left"}},p5={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},k5=t("td",{style:{"text-align":"center"}},null,-1),M5={style:{"text-align":"left"}},v5=t("code",null,"树",-1),I5=t("code",null,"深度优先搜索",-1),E5=t("code",null,"广度优先搜索",-1),w5=t("code",null,"2+",-1),z5={style:{"text-align":"left"}},O5=t("td",{style:{"text-align":"center"}},"1902",-1),q5={style:{"text-align":"left"}},j5={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},H5=t("td",{style:{"text-align":"center"}},null,-1),L5={style:{"text-align":"left"}},C5=t("code",null,"树",-1),N5=t("code",null,"二叉搜索树",-1),P5=t("code",null,"数组",-1),K5=t("code",null,"2+",-1),B5={style:{"text-align":"left"}},V5=t("td",{style:{"text-align":"center"}},"1932",-1),T5={style:{"text-align":"left"}},U5={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},R5=t("td",{style:{"text-align":"center"}},null,-1),W5={style:{"text-align":"left"}},G5=t("code",null,"树",-1),Y5=t("code",null,"深度优先搜索",-1),Q5=t("code",null,"哈希表",-1),S5=t("code",null,"2+",-1),D5={style:{"text-align":"left"}},Z5=t("td",{style:{"text-align":"center"}},"1973",-1),A5={style:{"text-align":"left"}},F5={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},J5=t("td",{style:{"text-align":"center"}},null,-1),X5={style:{"text-align":"left"}},$5=t("code",null,"树",-1),t4=t("code",null,"深度优先搜索",-1),e4=t("code",null,"二叉树",-1),l4={style:{"text-align":"left"}},o4=t("td",{style:{"text-align":"center"}},"2005",-1),s4={style:{"text-align":"left"}},n4={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},d4=t("td",{style:{"text-align":"center"}},null,-1),_4={style:{"text-align":"left"}},c4=t("code",null,"树",-1),r4=t("code",null,"数学",-1),a4=t("code",null,"动态规划",-1),i4=t("code",null,"2+",-1),h4={style:{"text-align":"left"}},f4=t("td",{style:{"text-align":"center"}},"2049",-1),u4={style:{"text-align":"left"}},g4={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},m4=t("td",{style:{"text-align":"center"}},null,-1),y4={style:{"text-align":"left"}},x4=t("code",null,"树",-1),b4=t("code",null,"深度优先搜索",-1),p4=t("code",null,"数组",-1),k4=t("code",null,"1+",-1),M4={style:{"text-align":"left"}},v4=t("td",{style:{"text-align":"center"}},"2096",-1),I4={style:{"text-align":"left"}},E4={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},w4=t("td",{style:{"text-align":"center"}},null,-1),z4={style:{"text-align":"left"}},O4=t("code",null,"树",-1),q4=t("code",null,"深度优先搜索",-1),j4=t("code",null,"字符串",-1),H4=t("code",null,"1+",-1),L4={style:{"text-align":"left"}},C4=t("td",{style:{"text-align":"center"}},"2196",-1),N4={style:{"text-align":"left"}},P4={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},K4={style:{"text-align":"center"}},B4={style:{"text-align":"left"}},V4=t("code",null,"树",-1),T4=t("code",null,"数组",-1),U4=t("code",null,"哈希表",-1),R4=t("code",null,"1+",-1),W4={style:{"text-align":"left"}},G4=t("td",{style:{"text-align":"center"}},"2236",-1),Y4={style:{"text-align":"left"}},Q4={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},S4=t("td",{style:{"text-align":"center"}},null,-1),D4={style:{"text-align":"left"}},Z4=t("code",null,"树",-1),A4=t("code",null,"二叉树",-1),F4={style:{"text-align":"left"}},J4=t("td",{style:{"text-align":"center"}},"2265",-1),X4={style:{"text-align":"left"}},$4={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},t9=t("td",{style:{"text-align":"center"}},null,-1),e9={style:{"text-align":"left"}},l9=t("code",null,"树",-1),o9=t("code",null,"深度优先搜索",-1),s9=t("code",null,"二叉树",-1),n9={style:{"text-align":"left"}},d9=t("td",{style:{"text-align":"center"}},"2313",-1),_9={style:{"text-align":"left"}},c9={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},r9=t("td",{style:{"text-align":"center"}},null,-1),a9={style:{"text-align":"left"}},i9=t("code",null,"树",-1),h9=t("code",null,"深度优先搜索",-1),f9=t("code",null,"动态规划",-1),u9=t("code",null,"1+",-1),g9={style:{"text-align":"left"}},m9=t("td",{style:{"text-align":"center"}},"2331",-1),y9={style:{"text-align":"left"}},x9={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},b9=t("td",{style:{"text-align":"center"}},null,-1),p9={style:{"text-align":"left"}},k9=t("code",null,"树",-1),M9=t("code",null,"深度优先搜索",-1),v9=t("code",null,"二叉树",-1),I9={style:{"text-align":"left"}},E9=t("td",{style:{"text-align":"center"}},"2385",-1),w9={style:{"text-align":"left"}},z9={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},O9=t("td",{style:{"text-align":"center"}},null,-1),q9={style:{"text-align":"left"}},j9=t("code",null,"树",-1),H9=t("code",null,"深度优先搜索",-1),L9=t("code",null,"广度优先搜索",-1),C9=t("code",null,"2+",-1),N9={style:{"text-align":"left"}},P9=t("td",{style:{"text-align":"center"}},"2415",-1),K9={style:{"text-align":"left"}},B9={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},V9=t("td",{style:{"text-align":"center"}},null,-1),T9={style:{"text-align":"left"}},U9=t("code",null,"树",-1),R9=t("code",null,"深度优先搜索",-1),W9=t("code",null,"广度优先搜索",-1),G9=t("code",null,"1+",-1),Y9={style:{"text-align":"left"}},Q9=t("td",{style:{"text-align":"center"}},"2445",-1),S9={style:{"text-align":"left"}},D9={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},Z9=t("td",{style:{"text-align":"center"}},null,-1),A9={style:{"text-align":"left"}},F9=t("code",null,"树",-1),J9=t("code",null,"深度优先搜索",-1),X9=t("code",null,"广度优先搜索",-1),$9=t("code",null,"1+",-1),t7={style:{"text-align":"left"}},e7=t("td",{style:{"text-align":"center"}},"2458",-1),l7={style:{"text-align":"left"}},o7={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},s7=t("td",{style:{"text-align":"center"}},null,-1),n7={style:{"text-align":"left"}},d7=t("code",null,"树",-1),_7=t("code",null,"深度优先搜索",-1),c7=t("code",null,"广度优先搜索",-1),r7=t("code",null,"2+",-1),a7={style:{"text-align":"left"}},i7=t("td",{style:{"text-align":"center"}},"2471",-1),h7={style:{"text-align":"left"}},f7={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},u7=t("td",{style:{"text-align":"center"}},null,-1),g7={style:{"text-align":"left"}},m7=t("code",null,"树",-1),y7=t("code",null,"广度优先搜索",-1),x7=t("code",null,"二叉树",-1),b7={style:{"text-align":"left"}},p7=t("td",{style:{"text-align":"center"}},"2476",-1),k7={style:{"text-align":"left"}},M7={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},v7=t("td",{style:{"text-align":"center"}},null,-1),I7={style:{"text-align":"left"}},E7=t("code",null,"树",-1),w7=t("code",null,"深度优先搜索",-1),z7=t("code",null,"二叉搜索树",-1),O7=t("code",null,"3+",-1),q7={style:{"text-align":"left"}},j7=t("td",{style:{"text-align":"center"}},"2509",-1),H7={style:{"text-align":"left"}},L7={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},C7=t("td",{style:{"text-align":"center"}},null,-1),N7={style:{"text-align":"left"}},P7=t("code",null,"树",-1),K7=t("code",null,"数组",-1),B7=t("code",null,"二叉树",-1),V7={style:{"text-align":"left"}},T7=t("td",{style:{"text-align":"center"}},"2583",-1),U7={style:{"text-align":"left"}},R7={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},W7=t("td",{style:{"text-align":"center"}},null,-1),G7={style:{"text-align":"left"}},Y7=t("code",null,"树",-1),Q7=t("code",null,"广度优先搜索",-1),S7=t("code",null,"二叉树",-1),D7=t("code",null,"1+",-1),Z7={style:{"text-align":"left"}},A7=t("td",{style:{"text-align":"center"}},"2641",-1),F7={style:{"text-align":"left"}},J7={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},X7=t("td",{style:{"text-align":"center"}},null,-1),$7={style:{"text-align":"left"}},tk=t("code",null,"树",-1),ek=t("code",null,"深度优先搜索",-1),lk=t("code",null,"广度优先搜索",-1),ok=t("code",null,"2+",-1),sk={style:{"text-align":"left"}},nk=t("td",{style:{"text-align":"center"}},"2673",-1),dk={style:{"text-align":"left"}},_k={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ck=t("td",{style:{"text-align":"center"}},null,-1),rk={style:{"text-align":"left"}},ak=t("code",null,"贪心",-1),ik=t("code",null,"树",-1),hk=t("code",null,"数组",-1),fk=t("code",null,"2+",-1),uk={style:{"text-align":"left"}},gk=t("td",{style:{"text-align":"center"}},"2689",-1),mk={style:{"text-align":"left"}},yk={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},xk=t("td",{style:{"text-align":"center"}},null,-1),bk={style:{"text-align":"left"}},pk=t("code",null,"树",-1),kk=t("code",null,"深度优先搜索",-1),Mk=t("code",null,"二叉树",-1),vk={style:{"text-align":"left"}},Ik=t("td",{style:{"text-align":"center"}},"2764",-1),Ek={style:{"text-align":"left"}},wk={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},zk=t("td",{style:{"text-align":"center"}},null,-1),Ok={style:{"text-align":"left"}},qk=t("code",null,"栈",-1),jk=t("code",null,"树",-1),Hk=t("code",null,"深度优先搜索",-1),Lk=t("code",null,"1+",-1),Ck={style:{"text-align":"left"}},Nk=t("td",{style:{"text-align":"center"}},"2773",-1),Pk={style:{"text-align":"left"}},Kk={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},Bk=t("td",{style:{"text-align":"center"}},null,-1),Vk={style:{"text-align":"left"}},Tk=t("code",null,"树",-1),Uk=t("code",null,"深度优先搜索",-1),Rk=t("code",null,"广度优先搜索",-1),Wk=t("code",null,"1+",-1),Gk={style:{"text-align":"left"}},Yk=t("td",{style:{"text-align":"center"}},"2792",-1),Qk={style:{"text-align":"left"}},Sk={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},Dk=t("td",{style:{"text-align":"center"}},null,-1),Zk={style:{"text-align":"left"}},Ak=t("code",null,"树",-1),Fk=t("code",null,"深度优先搜索",-1),Jk=t("code",null,"分治",-1),Xk=t("code",null,"1+",-1),$k={style:{"text-align":"left"}},tM=t("td",{style:{"text-align":"center"}},"3157",-1),eM={style:{"text-align":"left"}},lM={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},oM=t("td",{style:{"text-align":"center"}},null,-1),sM={style:{"text-align":"left"}},nM=t("code",null,"树",-1),dM=t("code",null,"深度优先搜索",-1),_M=t("code",null,"广度优先搜索",-1),cM=t("code",null,"1+",-1),rM={style:{"text-align":"left"}},aM=t("td",{style:{"text-align":"center"}},"3319",-1),iM={style:{"text-align":"left"}},hM={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},fM={style:{"text-align":"center"}},uM={style:{"text-align":"left"}},gM=t("code",null,"树",-1),mM=t("code",null,"深度优先搜索",-1),yM=t("code",null,"二叉树",-1),xM=t("code",null,"1+",-1),bM={style:{"text-align":"left"}},pM=t("td",{style:{"text-align":"center"}},"LCP 10",-1),kM={style:{"text-align":"left"}},MM={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},vM=t("td",{style:{"text-align":"center"}},null,-1),IM={style:{"text-align":"left"}},EM=t("code",null,"树",-1),wM=t("code",null,"深度优先搜索",-1),zM=t("code",null,"动态规划",-1),OM=t("code",null,"1+",-1),qM={style:{"text-align":"left"}},jM=t("td",{style:{"text-align":"center"}},"LCP 26",-1),HM={style:{"text-align":"left"}},LM={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},CM=t("td",{style:{"text-align":"center"}},null,-1),NM={style:{"text-align":"left"}},PM=t("code",null,"树",-1),KM=t("code",null,"动态规划",-1),BM=t("code",null,"二叉树",-1),VM={style:{"text-align":"left"}},TM=t("td",{style:{"text-align":"center"}},"LCP 34",-1),UM={style:{"text-align":"left"}},RM={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},WM=t("td",{style:{"text-align":"center"}},null,-1),GM={style:{"text-align":"left"}},YM=t("code",null,"树",-1),QM=t("code",null,"动态规划",-1),SM=t("code",null,"二叉树",-1),DM={style:{"text-align":"left"}},ZM=t("td",{style:{"text-align":"center"}},"LCP 44",-1),AM={style:{"text-align":"left"}},FM={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},JM=t("td",{style:{"text-align":"center"}},null,-1),XM={style:{"text-align":"left"}},$M=t("code",null,"树",-1),tv=t("code",null,"深度优先搜索",-1),ev=t("code",null,"广度优先搜索",-1),lv=t("code",null,"2+",-1),ov={style:{"text-align":"left"}},sv=t("td",{style:{"text-align":"center"}},"LCP 52",-1),nv={style:{"text-align":"left"}},dv={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},_v=t("td",{style:{"text-align":"center"}},null,-1),cv={style:{"text-align":"left"}},rv=t("code",null,"树",-1),av=t("code",null,"线段树",-1),iv=t("code",null,"二叉搜索树",-1),hv=t("code",null,"4+",-1),fv={style:{"text-align":"left"}},uv=t("td",{style:{"text-align":"center"}},"LCP 60",-1),gv={style:{"text-align":"left"}},mv={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},yv=t("td",{style:{"text-align":"center"}},null,-1),xv={style:{"text-align":"left"}},bv=t("code",null,"树",-1),pv=t("code",null,"动态规划",-1),kv=t("code",null,"二叉树",-1),Mv={style:{"text-align":"left"}},vv=t("td",{style:{"text-align":"center"}},"LCP 64",-1),Iv={style:{"text-align":"left"}},Ev={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},wv=t("td",{style:{"text-align":"center"}},null,-1),zv={style:{"text-align":"left"}},Ov=t("code",null,"树",-1),qv=t("code",null,"深度优先搜索",-1),jv=t("code",null,"动态规划",-1),Hv=t("code",null,"1+",-1),Lv={style:{"text-align":"left"}},Cv=t("td",{style:{"text-align":"center"}},"LCP 67",-1),Nv={style:{"text-align":"left"}},Pv={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},Kv=t("td",{style:{"text-align":"center"}},null,-1),Bv={style:{"text-align":"left"}},Vv=t("code",null,"树",-1),Tv=t("code",null,"深度优先搜索",-1),Uv=t("code",null,"广度优先搜索",-1),Rv=t("code",null,"1+",-1),Wv={style:{"text-align":"left"}},Gv=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),Yv={style:{"text-align":"left"}},Qv={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},Sv={style:{"text-align":"center"}},Dv={style:{"text-align":"left"}},Zv=t("code",null,"树",-1),Av=t("code",null,"深度优先搜索",-1),Fv=t("code",null,"二叉树",-1),Jv={style:{"text-align":"left"}},Xv=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),$v={style:{"text-align":"left"}},tI={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},eI={style:{"text-align":"center"}},lI={style:{"text-align":"left"}},oI=t("code",null,"树",-1),sI=t("code",null,"深度优先搜索",-1),nI=t("code",null,"广度优先搜索",-1),dI=t("code",null,"1+",-1),_I={style:{"text-align":"left"}},cI=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),rI={style:{"text-align":"left"}},aI={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},iI={style:{"text-align":"center"}},hI={style:{"text-align":"left"}},fI=t("code",null,"树",-1),uI=t("code",null,"深度优先搜索",-1),gI=t("code",null,"广度优先搜索",-1),mI=t("code",null,"1+",-1),yI={style:{"text-align":"left"}},xI=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - I",-1),bI={style:{"text-align":"left"}},pI={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},kI={style:{"text-align":"center"}},MI={style:{"text-align":"left"}},vI=t("code",null,"树",-1),II=t("code",null,"广度优先搜索",-1),EI=t("code",null,"二叉树",-1),wI={style:{"text-align":"left"}},zI=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - II",-1),OI={style:{"text-align":"left"}},qI={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},jI={style:{"text-align":"center"}},HI={style:{"text-align":"left"}},LI=t("code",null,"树",-1),CI=t("code",null,"广度优先搜索",-1),NI=t("code",null,"二叉树",-1),PI={style:{"text-align":"left"}},KI=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - III",-1),BI={style:{"text-align":"left"}},VI={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},TI={style:{"text-align":"center"}},UI={style:{"text-align":"left"}},RI=t("code",null,"树",-1),WI=t("code",null,"广度优先搜索",-1),GI=t("code",null,"二叉树",-1),YI={style:{"text-align":"left"}},QI=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),SI={style:{"text-align":"left"}},DI={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},ZI={style:{"text-align":"center"}},AI={style:{"text-align":"left"}},FI=t("code",null,"栈",-1),JI=t("code",null,"树",-1),XI=t("code",null,"二叉搜索树",-1),$I=t("code",null,"4+",-1),tE={style:{"text-align":"left"}},eE=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),lE={style:{"text-align":"left"}},oE={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},sE={style:{"text-align":"center"}},nE={style:{"text-align":"left"}},dE=t("code",null,"树",-1),_E=t("code",null,"深度优先搜索",-1),cE=t("code",null,"回溯",-1),rE=t("code",null,"1+",-1),aE={style:{"text-align":"left"}},iE=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),hE={style:{"text-align":"left"}},fE={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},uE={style:{"text-align":"center"}},gE={style:{"text-align":"left"}},mE=t("code",null,"栈",-1),yE=t("code",null,"树",-1),xE=t("code",null,"深度优先搜索",-1),bE=t("code",null,"4+",-1),pE={style:{"text-align":"left"}},kE=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),ME={style:{"text-align":"left"}},vE={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},IE={style:{"text-align":"center"}},EE={style:{"text-align":"left"}},wE=t("code",null,"树",-1),zE=t("code",null,"深度优先搜索",-1),OE=t("code",null,"广度优先搜索",-1),qE=t("code",null,"3+",-1),jE={style:{"text-align":"left"}},HE=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),LE={style:{"text-align":"left"}},CE={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},NE={style:{"text-align":"center"}},PE={style:{"text-align":"left"}},KE=t("code",null,"树",-1),BE=t("code",null,"深度优先搜索",-1),VE=t("code",null,"二叉搜索树",-1),TE=t("code",null,"1+",-1),UE={style:{"text-align":"left"}},RE=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),WE={style:{"text-align":"left"}},GE={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},YE={style:{"text-align":"center"}},QE={style:{"text-align":"left"}},SE=t("code",null,"树",-1),DE=t("code",null,"深度优先搜索",-1),ZE=t("code",null,"广度优先搜索",-1),AE=t("code",null,"1+",-1),FE={style:{"text-align":"left"}},JE=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),XE={style:{"text-align":"left"}},$E={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},tw=t("td",{style:{"text-align":"center"}},null,-1),ew={style:{"text-align":"left"}},lw=t("code",null,"树",-1),ow=t("code",null,"深度优先搜索",-1),sw=t("code",null,"二叉树",-1),nw={style:{"text-align":"left"}},dw=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),_w={style:{"text-align":"left"}},cw={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},rw=t("td",{style:{"text-align":"center"}},null,-1),aw={style:{"text-align":"left"}},iw=t("code",null,"树",-1),hw=t("code",null,"深度优先搜索",-1),fw=t("code",null,"二叉搜索树",-1),uw=t("code",null,"1+",-1),gw={style:{"text-align":"left"}},mw=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),yw={style:{"text-align":"left"}},xw={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},bw=t("td",{style:{"text-align":"center"}},null,-1),pw={style:{"text-align":"left"}},kw=t("code",null,"树",-1),Mw=t("code",null,"深度优先搜索",-1),vw=t("code",null,"二叉树",-1),Iw={style:{"text-align":"left"}},Ew=t("td",{style:{"text-align":"center"}},"剑指 Offer 7",-1),ww={style:{"text-align":"left"}},zw={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Ow={style:{"text-align":"center"}},qw={style:{"text-align":"left"}},jw=t("code",null,"树",-1),Hw=t("code",null,"数组",-1),Lw=t("code",null,"哈希表",-1),Cw=t("code",null,"2+",-1),Nw={style:{"text-align":"left"}},Pw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),Kw={style:{"text-align":"left"}},Bw={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},Vw=t("td",{style:{"text-align":"center"}},null,-1),Tw={style:{"text-align":"left"}},Uw=t("code",null,"树",-1),Rw=t("code",null,"广度优先搜索",-1),Ww=t("code",null,"设计",-1),Gw=t("code",null,"1+",-1),Yw={style:{"text-align":"left"}},Qw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),Sw={style:{"text-align":"left"}},Dw={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},Zw=t("td",{style:{"text-align":"center"}},null,-1),Aw={style:{"text-align":"left"}},Fw=t("code",null,"树",-1),Jw=t("code",null,"深度优先搜索",-1),Xw=t("code",null,"广度优先搜索",-1),$w=t("code",null,"1+",-1),tz={style:{"text-align":"left"}},ez=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),lz={style:{"text-align":"left"}},oz={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},sz=t("td",{style:{"text-align":"center"}},null,-1),nz={style:{"text-align":"left"}},dz=t("code",null,"树",-1),_z=t("code",null,"深度优先搜索",-1),cz=t("code",null,"广度优先搜索",-1),rz=t("code",null,"1+",-1),az={style:{"text-align":"left"}},iz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),hz={style:{"text-align":"left"}},fz={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},uz=t("td",{style:{"text-align":"center"}},null,-1),gz={style:{"text-align":"left"}},mz=t("code",null,"树",-1),yz=t("code",null,"深度优先搜索",-1),xz=t("code",null,"广度优先搜索",-1),bz=t("code",null,"1+",-1),pz={style:{"text-align":"left"}},kz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),Mz={style:{"text-align":"left"}},vz={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},Iz=t("td",{style:{"text-align":"center"}},null,-1),Ez={style:{"text-align":"left"}},wz=t("code",null,"树",-1),zz=t("code",null,"深度优先搜索",-1),Oz=t("code",null,"二叉树",-1),qz={style:{"text-align":"left"}},jz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),Hz={style:{"text-align":"left"}},Lz={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},Cz=t("td",{style:{"text-align":"center"}},null,-1),Nz={style:{"text-align":"left"}},Pz=t("code",null,"树",-1),Kz=t("code",null,"深度优先搜索",-1),Bz=t("code",null,"广度优先搜索",-1),Vz=t("code",null,"3+",-1),Tz={style:{"text-align":"left"}},Uz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),Rz={style:{"text-align":"left"}},Wz={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},Gz=t("td",{style:{"text-align":"center"}},null,-1),Yz={style:{"text-align":"left"}},Qz=t("code",null,"树",-1),Sz=t("code",null,"深度优先搜索",-1),Dz=t("code",null,"二叉树",-1),Zz={style:{"text-align":"left"}},Az=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),Fz={style:{"text-align":"left"}},Jz={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},Xz=t("td",{style:{"text-align":"center"}},null,-1),$z={style:{"text-align":"left"}},tO=t("code",null,"树",-1),eO=t("code",null,"深度优先搜索",-1),lO=t("code",null,"二叉树",-1),oO={style:{"text-align":"left"}},sO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),nO={style:{"text-align":"left"}},dO={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},_O=t("td",{style:{"text-align":"center"}},null,-1),cO={style:{"text-align":"left"}},rO=t("code",null,"树",-1),aO=t("code",null,"深度优先搜索",-1),iO=t("code",null,"动态规划",-1),hO=t("code",null,"1+",-1),fO={style:{"text-align":"left"}},uO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),gO={style:{"text-align":"left"}},mO={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},yO=t("td",{style:{"text-align":"center"}},null,-1),xO={style:{"text-align":"left"}},bO=t("code",null,"栈",-1),pO=t("code",null,"树",-1),kO=t("code",null,"深度优先搜索",-1),MO=t("code",null,"2+",-1),vO={style:{"text-align":"left"}},IO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),EO={style:{"text-align":"left"}},wO={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},zO=t("td",{style:{"text-align":"center"}},null,-1),OO={style:{"text-align":"left"}},qO=t("code",null,"树",-1),jO=t("code",null,"深度优先搜索",-1),HO=t("code",null,"二叉搜索树",-1),LO=t("code",null,"1+",-1),CO={style:{"text-align":"left"}},NO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),PO={style:{"text-align":"left"}},KO={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},BO=t("td",{style:{"text-align":"center"}},null,-1),VO={style:{"text-align":"left"}},TO=t("code",null,"树",-1),UO=t("code",null,"深度优先搜索",-1),RO=t("code",null,"二叉搜索树",-1),WO=t("code",null,"1+",-1),GO={style:{"text-align":"left"}},YO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),QO={style:{"text-align":"left"}},SO={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},DO=t("td",{style:{"text-align":"center"}},null,-1),ZO={style:{"text-align":"left"}},AO=t("code",null,"栈",-1),FO=t("code",null,"树",-1),JO=t("code",null,"设计",-1),XO=t("code",null,"3+",-1),$O={style:{"text-align":"left"}},tq=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),eq={style:{"text-align":"left"}},lq={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},oq=t("td",{style:{"text-align":"center"}},null,-1),sq={style:{"text-align":"left"}},nq=t("code",null,"树",-1),dq=t("code",null,"设计",-1),_q=t("code",null,"二叉搜索树",-1),cq=t("code",null,"3+",-1),rq={style:{"text-align":"left"}},aq=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),iq={style:{"text-align":"left"}},hq={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},fq=t("td",{style:{"text-align":"center"}},null,-1),uq={style:{"text-align":"left"}},gq=t("code",null,"树",-1),mq=t("code",null,"二叉搜索树",-1),yq=t("code",null,"数组",-1),xq=t("code",null,"2+",-1),bq={style:{"text-align":"left"}},pq=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),kq={style:{"text-align":"left"}},Mq={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},vq=t("td",{style:{"text-align":"center"}},null,-1),Iq={style:{"text-align":"left"}},Eq=t("code",null,"树",-1),wq=t("code",null,"广度优先搜索",-1),zq=t("code",null,"链表",-1),Oq=t("code",null,"1+",-1),qq={style:{"text-align":"left"}},jq=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),Hq={style:{"text-align":"left"}},Lq={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},Cq=t("td",{style:{"text-align":"center"}},null,-1),Nq={style:{"text-align":"left"}},Pq=t("code",null,"树",-1),Kq=t("code",null,"深度优先搜索",-1),Bq=t("code",null,"二叉树",-1),Vq={style:{"text-align":"left"}},Tq=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),Uq={style:{"text-align":"left"}},Rq={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},Wq=t("td",{style:{"text-align":"center"}},null,-1),Gq={style:{"text-align":"left"}},Yq=t("code",null,"树",-1),Qq=t("code",null,"深度优先搜索",-1),Sq=t("code",null,"二叉搜索树",-1),Dq=t("code",null,"1+",-1),Zq={style:{"text-align":"left"}},Aq=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),Fq={style:{"text-align":"left"}},Jq={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},Xq=t("td",{style:{"text-align":"center"}},null,-1),$q={style:{"text-align":"left"}},tj=t("code",null,"树",-1),ej=t("code",null,"深度优先搜索",-1),lj=t("code",null,"二叉搜索树",-1),oj=t("code",null,"1+",-1),sj={style:{"text-align":"left"}},nj=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),dj={style:{"text-align":"left"}},_j={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},cj=t("td",{style:{"text-align":"center"}},null,-1),rj={style:{"text-align":"left"}},aj=t("code",null,"树",-1),ij=t("code",null,"深度优先搜索",-1),hj=t("code",null,"二叉树",-1),fj={style:{"text-align":"left"}},uj=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),gj={style:{"text-align":"left"}},mj={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},yj=t("td",{style:{"text-align":"center"}},null,-1),xj={style:{"text-align":"left"}},bj=t("code",null,"树",-1),pj=t("code",null,"二叉搜索树",-1),kj=t("code",null,"回溯",-1),Mj=t("code",null,"1+",-1),vj={style:{"text-align":"left"}},Ij=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Ej={style:{"text-align":"left"}},wj={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},zj=t("td",{style:{"text-align":"center"}},null,-1),Oj={style:{"text-align":"left"}},qj=t("code",null,"树",-1),jj=t("code",null,"深度优先搜索",-1),Hj=t("code",null,"二叉树",-1),Lj=t("code",null,"2+",-1),Cj={style:{"text-align":"left"}},Nj=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),Pj={style:{"text-align":"left"}},Kj={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},Bj=t("td",{style:{"text-align":"center"}},null,-1),Vj={style:{"text-align":"left"}},Tj=t("code",null,"树",-1),Uj=t("code",null,"深度优先搜索",-1),Rj=t("code",null,"二叉树",-1),Wj={style:{"text-align":"left"}},Gj=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),Yj={style:{"text-align":"left"}},Qj={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},Sj=t("td",{style:{"text-align":"center"}},null,-1),Dj={style:{"text-align":"left"}},Zj=t("code",null,"栈",-1),Aj=t("code",null,"树",-1),Fj=t("code",null,"深度优先搜索",-1),Jj=t("code",null,"3+",-1),Xj={style:{"text-align":"left"}};function $j(tH,eH){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return r(),a("div",null,[f,t("details",null,[u,g,t("p",null,[e(s,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(s,{to:"/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[E]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/tag/string-matching.html"},{default:o(()=>[z]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[O]),_:1}),l(),q,l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[H]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[T]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[U]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[W]),_:1}),l(),e(s,{to:"/tag/suffix-array.html"},{default:o(()=>[G]),_:1})]),Y,t("p",null,[e(s,{to:"/tag/enumeration.html"},{default:o(()=>[Q]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/tag/bucket-sort.html"},{default:o(()=>[X]),_:1}),l(),e(s,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/tag/counting.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/tag/sliding-window.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/tag/rolling-hash.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(s,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(s,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/tag/database.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Ot]),_:1}),l(),e(s,{to:"/tag/data-stream.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/tag/brainteaser.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/tag/interactive.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/tag/iterator.html"},{default:o(()=>[Lt]),_:1}),l(),e(s,{to:"/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),Nt,i(" prettier-ignore "),t("table",null,[Pt,t("tbody",null,[t("tr",null,[Kt,t("td",Bt,[t("a",Vt,[l("二叉树的中序遍历"),e(n)])]),t("td",Tt,[e(s,{to:"/problem/0094.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ut,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Rt]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Wt]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gt]),_:1}),l(),Yt]),t("td",Qt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[St,t("td",Dt,[t("a",Zt,[l("不同的二叉搜索树 II"),e(n)])]),t("td",At,[e(s,{to:"/problem/0095.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ft,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Jt]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Xt]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",se,[l("不同的二叉搜索树"),e(n)])]),t("td",ne,[e(s,{to:"/problem/0096.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",de,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_e]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[ce]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[re]),_:1}),l(),ae]),t("td",ie,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[he,t("td",fe,[t("a",ue,[l("验证二叉搜索树"),e(n)])]),t("td",ge,[e(s,{to:"/problem/0098.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",me,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ye]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xe]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[be]),_:1}),l(),pe]),t("td",ke,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Me,t("td",ve,[t("a",Ie,[l("恢复二叉搜索树"),e(n)])]),t("td",Ee,[e(s,{to:"/problem/0099.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",we,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ze]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Oe]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[qe]),_:1}),l(),je]),t("td",He,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Le,t("td",Ce,[t("a",Ne,[l("相同的树"),e(n)])]),t("td",Pe,[e(s,{to:"/problem/0100.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ke,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Be]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ve]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Te]),_:1}),l(),Ue]),t("td",Re,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[We,t("td",Ge,[t("a",Ye,[l("对称二叉树"),e(n)])]),t("td",Qe,[e(s,{to:"/problem/0101.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Se,[e(s,{to:"/tag/tree.html"},{default:o(()=>[De]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ze]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ae]),_:1}),l(),Fe]),t("td",Je,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xe,t("td",$e,[t("a",tl,[l("二叉树的层序遍历"),e(n)])]),t("td",el,[e(s,{to:"/problem/0102.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ll,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ol]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[sl]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[nl]),_:1})]),t("td",dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_l,t("td",cl,[t("a",rl,[l("二叉树的锯齿形层序遍历"),e(n)])]),t("td",al,[e(s,{to:"/problem/0103.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",il,[e(s,{to:"/tag/tree.html"},{default:o(()=>[hl]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ul]),_:1})]),t("td",gl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ml,t("td",yl,[t("a",xl,[l("二叉树的最大深度"),e(n)])]),t("td",bl,[e(s,{to:"/problem/0104.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",pl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kl]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ml]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[vl]),_:1}),l(),Il]),t("td",El,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wl,t("td",zl,[t("a",Ol,[l("从前序与中序遍历序列构造二叉树"),e(n)])]),t("td",ql,[e(s,{to:"/problem/0105.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Hl]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ll]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Cl]),_:1}),l(),Nl]),t("td",Pl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kl,t("td",Bl,[t("a",Vl,[l("从中序与后序遍历序列构造二叉树"),e(n)])]),t("td",Tl,[e(s,{to:"/problem/0106.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ul,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Rl]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Wl]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Gl]),_:1}),l(),Yl]),t("td",Ql,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Dl,[t("a",Zl,[l("二叉树的层序遍历 II"),e(n)])]),t("td",Al,[e(s,{to:"/problem/0107.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fl,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Jl]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Xl]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[$l]),_:1})]),t("td",to,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eo,t("td",lo,[t("a",oo,[l("将有序数组转换为二叉搜索树"),e(n)])]),t("td",so,[e(s,{to:"/problem/0108.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",no,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_o]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[co]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ro]),_:1}),l(),ao]),t("td",io,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ho,t("td",fo,[t("a",uo,[l("有序链表转换二叉搜索树"),e(n)])]),t("td",go,[e(s,{to:"/problem/0109.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mo,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yo]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[xo]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[bo]),_:1}),l(),po]),t("td",ko,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mo,t("td",vo,[t("a",Io,[l("平衡二叉树"),e(n)])]),t("td",Eo,[e(s,{to:"/problem/0110.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wo,[e(s,{to:"/tag/tree.html"},{default:o(()=>[zo]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Oo]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[qo]),_:1})]),t("td",jo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ho,t("td",Lo,[t("a",Co,[l("二叉树的最小深度"),e(n)])]),t("td",No,[e(s,{to:"/problem/0111.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Po,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ko]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Bo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Vo]),_:1}),l(),To]),t("td",Uo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ro,t("td",Wo,[t("a",Go,[l("路径总和"),e(n)])]),t("td",Yo,[e(s,{to:"/problem/0112.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qo,[e(s,{to:"/tag/tree.html"},{default:o(()=>[So]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Do]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Zo]),_:1}),l(),Ao]),t("td",Fo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Jo,t("td",Xo,[t("a",$o,[l("路径总和 II"),e(n)])]),t("td",ts,[e(s,{to:"/problem/0113.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",es,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ls]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[os]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[ss]),_:1}),l(),ns]),t("td",ds,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_s,t("td",cs,[t("a",rs,[l("二叉树展开为链表"),e(n)])]),t("td",as,[e(s,{to:"/problem/0114.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",is,[e(s,{to:"/tag/stack.html"},{default:o(()=>[hs]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[fs]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[us]),_:1}),l(),gs]),t("td",ms,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",bs,[l("填充每个节点的下一个右侧节点指针"),e(n)])]),t("td",ps,[e(s,{to:"/problem/0116.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ks,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ms]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vs]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Is]),_:1}),l(),Es]),t("td",ws,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zs,t("td",Os,[t("a",qs,[l("填充每个节点的下一个右侧节点指针 II"),e(n)])]),t("td",js,[e(s,{to:"/problem/0117.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hs,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ls]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cs]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ns]),_:1}),l(),Ps]),t("td",Ks,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bs,t("td",Vs,[t("a",Ts,[l("二叉树中的最大路径和"),e(n)])]),t("td",Us,[e(s,{to:"/problem/0124.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rs,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ws]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gs]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ys]),_:1}),l(),Qs]),t("td",Ss,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ds,t("td",Zs,[t("a",As,[l("求根节点到叶节点数字之和"),e(n)])]),t("td",Fs,[e(s,{to:"/problem/0129.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Js,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xs]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$s]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[tn]),_:1})]),t("td",en,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ln,t("td",on,[t("a",sn,[l("二叉树的前序遍历"),e(n)])]),t("td",nn,[e(s,{to:"/problem/0144.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",dn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[_n]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[cn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rn]),_:1}),l(),an]),t("td",hn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fn,t("td",un,[t("a",gn,[l("二叉树的后序遍历"),e(n)])]),t("td",mn,[e(s,{to:"/problem/0145.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[xn]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[bn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[pn]),_:1}),l(),kn]),t("td",Mn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vn,t("td",In,[t("a",En,[l("上下翻转二叉树"),e(n)])]),t("td",wn,[e(s,{to:"/problem/0156.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",zn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[On]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qn]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[jn]),_:1})]),t("td",Hn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ln,t("td",Cn,[t("a",Nn,[l("二叉搜索树迭代器"),e(n)])]),t("td",Pn,[e(s,{to:"/problem/0173.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Kn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Bn]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Vn]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Tn]),_:1}),l(),Un]),t("td",Rn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wn,t("td",Gn,[t("a",Yn,[l("二叉树的右视图"),e(n)])]),t("td",Qn,[e(s,{to:"/problem/0199.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zn]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[An]),_:1}),l(),Fn]),t("td",Jn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xn,t("td",$n,[t("a",td,[l("完全二叉树的节点个数"),e(n)])]),t("td",ed,[e(s,{to:"/problem/0222.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ld,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[od]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[sd]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[nd]),_:1}),l(),dd]),t("td",_d,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cd,t("td",rd,[t("a",ad,[l("翻转二叉树"),e(n)])]),t("td",id,[e(s,{to:"/problem/0226.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ud]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gd]),_:1}),l(),md]),t("td",yd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xd,t("td",bd,[t("a",pd,[l("二叉搜索树中第 K 小的元素"),e(n)])]),t("td",kd,[e(s,{to:"/problem/0230.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Md,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Id]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ed]),_:1}),l(),wd]),t("td",zd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Od,t("td",qd,[t("a",jd,[l("二叉搜索树的最近公共祖先"),e(n)])]),t("td",Hd,[e(s,{to:"/problem/0235.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ld,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Cd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Nd]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Pd]),_:1}),l(),Kd]),t("td",Bd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vd,t("td",Td,[t("a",Ud,[l("二叉树的最近公共祖先"),e(n)])]),t("td",Rd,[e(s,{to:"/problem/0236.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Gd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Yd]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Qd]),_:1})]),t("td",Sd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dd,t("td",Zd,[t("a",Ad,[l("统计同值子树"),e(n)])]),Fd,t("td",Jd,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xd]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$d]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[t_]),_:1})]),t("td",e_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l_,t("td",o_,[t("a",s_,[l("验证二叉搜索树的前序遍历序列"),e(n)])]),n_,t("td",d_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[__]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[c_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[r_]),_:1}),l(),a_]),t("td",i_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h_,t("td",f_,[t("a",u_,[l("二叉树的所有路径"),e(n)])]),t("td",g_,[e(s,{to:"/problem/0257.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",m_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[y_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[x_]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[b_]),_:1}),l(),p_]),t("td",k_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[M_,t("td",v_,[t("a",I_,[l("最接近的二叉搜索树值"),e(n)])]),E_,t("td",w_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[z_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[O_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[q_]),_:1}),l(),j_]),t("td",H_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[L_,t("td",C_,[t("a",N_,[l("最接近的二叉搜索树值 II"),e(n)])]),P_,t("td",K_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[B_]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[V_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[T_]),_:1}),l(),U_]),t("td",R_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W_,t("td",G_,[t("a",Y_,[l("二叉搜索树中的中序后继"),e(n)])]),Q_,t("td",S_,[e(s,{to:"/tag/tree.html"},{default:o(()=>[D_]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Z_]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[A_]),_:1}),l(),F_]),t("td",J_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X_,t("td",$_,[t("a",tc,[l("二叉树的序列化与反序列化"),e(n)])]),t("td",ec,[e(s,{to:"/problem/0297.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[oc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[nc]),_:1}),l(),dc]),t("td",_c,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cc,t("td",rc,[t("a",ac,[l("二叉树最长连续序列"),e(n)])]),ic,t("td",hc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[uc]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[gc]),_:1})]),t("td",mc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yc,t("td",xc,[t("a",bc,[l("二叉树的垂直遍历"),e(n)])]),pc,t("td",kc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Mc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ic]),_:1}),l(),Ec]),t("td",wc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zc,t("td",Oc,[t("a",qc,[l("验证二叉树的前序序列化"),e(n)])]),jc,t("td",Hc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Lc]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Cc]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Nc]),_:1}),l(),Pc]),t("td",Kc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bc,t("td",Vc,[t("a",Tc,[l("最大二叉搜索子树"),e(n)])]),Uc,t("td",Rc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Wc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gc]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Yc]),_:1}),l(),Qc]),t("td",Sc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dc,t("td",Zc,[t("a",Ac,[l("打家劫舍 III"),e(n)])]),Fc,t("td",Jc,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$c]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[tr]),_:1}),l(),er]),t("td",lr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[or,t("td",sr,[t("a",nr,[l("寻找二叉树的叶子节点"),e(n)])]),t("td",dr,[e(s,{to:"/problem/0366.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_r,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rr]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ar]),_:1})]),t("td",ir,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hr,t("td",fr,[t("a",ur,[l("左叶子之和"),e(n)])]),gr,t("td",mr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[yr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xr]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[br]),_:1}),l(),pr]),t("td",kr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mr,t("td",vr,[t("a",Ir,[l("将二叉搜索树转化为排序的双向链表"),e(n)])]),t("td",Er,[e(s,{to:"/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[zr]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Or]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qr]),_:1}),l(),jr]),t("td",Hr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lr,t("td",Cr,[t("a",Nr,[l("将 N 叉树编码为二叉树"),e(n)])]),Pr,t("td",Kr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Br]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vr]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Tr]),_:1}),l(),Ur]),t("td",Rr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wr,t("td",Gr,[t("a",Yr,[l("路径总和 III"),e(n)])]),t("td",Qr,[e(s,{to:"/problem/0437.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sr,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dr]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zr]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Ar]),_:1})]),t("td",Fr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jr,t("td",Xr,[t("a",$r,[l("序列化和反序列化二叉搜索树"),e(n)])]),ta,t("td",ea,[e(s,{to:"/tag/tree.html"},{default:o(()=>[la]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[oa]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[sa]),_:1}),l(),na]),t("td",da,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_a,t("td",ca,[t("a",ra,[l("删除二叉搜索树中的节点"),e(n)])]),t("td",aa,[e(s,{to:"/problem/0450.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ia,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ha]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[fa]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ua]),_:1})]),t("td",ga,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ma,t("td",ya,[t("a",xa,[l("二叉搜索树中的众数"),e(n)])]),ba,t("td",pa,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ka]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ma]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[va]),_:1}),l(),Ia]),t("td",Ea,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wa,t("td",za,[t("a",Oa,[l("出现次数最多的子树元素和"),e(n)])]),qa,t("td",ja,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ha]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[La]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Ca]),_:1}),l(),Na]),t("td",Pa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ka,t("td",Ba,[t("a",Va,[l("二叉搜索树中的中序后继 II"),e(n)])]),Ta,t("td",Ua,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ra]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Wa]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Ga]),_:1})]),t("td",Ya,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qa,t("td",Sa,[t("a",Da,[l("找树左下角的值"),e(n)])]),Za,t("td",Aa,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Fa]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ja]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Xa]),_:1}),l(),$a]),t("td",ti,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ei,t("td",li,[t("a",oi,[l("在每个树行中找最大值"),e(n)])]),si,t("td",ni,[e(s,{to:"/tag/tree.html"},{default:o(()=>[di]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_i]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ci]),_:1}),l(),ri]),t("td",ai,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ii,t("td",hi,[t("a",fi,[l("二叉搜索树的最小绝对差"),e(n)])]),t("td",ui,[e(s,{to:"/problem/0530.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",gi,[e(s,{to:"/tag/tree.html"},{default:o(()=>[mi]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yi]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xi]),_:1}),l(),bi]),t("td",pi,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ki,t("td",Mi,[t("a",vi,[l("从字符串生成二叉树"),e(n)])]),Ii,t("td",Ei,[e(s,{to:"/tag/stack.html"},{default:o(()=>[wi]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[zi]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Oi]),_:1}),l(),qi]),t("td",ji,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hi,t("td",Li,[t("a",Ci,[l("把二叉搜索树转换为累加树"),e(n)])]),Ni,t("td",Pi,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ki]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Bi]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Vi]),_:1}),l(),Ti]),t("td",Ui,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ri,t("td",Wi,[t("a",Gi,[l("二叉树的直径"),e(n)])]),t("td",Yi,[e(s,{to:"/problem/0543.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qi,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Si]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Di]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Zi]),_:1})]),t("td",Ai,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fi,t("td",Ji,[t("a",Xi,[l("二叉树的边界"),e(n)])]),$i,t("td",t1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[e1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[l1]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[o1]),_:1})]),t("td",s1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n1,t("td",d1,[t("a",_1,[l("二叉树最长连续序列 II"),e(n)])]),c1,t("td",r1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[a1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[i1]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[h1]),_:1})]),t("td",f1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u1,t("td",g1,[t("a",m1,[l("二叉树的坡度"),e(n)])]),y1,t("td",x1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[b1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[p1]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[k1]),_:1})]),t("td",M1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[v1,t("td",I1,[t("a",E1,[l("另一棵树的子树"),e(n)])]),t("td",w1,[e(s,{to:"/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",z1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[O1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q1]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[j1]),_:1}),l(),H1]),t("td",L1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[C1,t("td",N1,[t("a",P1,[l("根据二叉树创建字符串"),e(n)])]),K1,t("td",B1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[V1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[T1]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[U1]),_:1}),l(),R1]),t("td",W1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G1,t("td",Y1,[t("a",Q1,[l("合并二叉树"),e(n)])]),t("td",S1,[e(s,{to:"/problem/0617.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",D1,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Z1]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[A1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[F1]),_:1}),l(),J1]),t("td",X1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$1,t("td",th,[t("a",eh,[l("在二叉树中增加一行"),e(n)])]),lh,t("td",oh,[e(s,{to:"/tag/tree.html"},{default:o(()=>[sh]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nh]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dh]),_:1}),l(),_h]),t("td",ch,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rh,t("td",ah,[t("a",ih,[l("二叉树的层平均值"),e(n)])]),t("td",hh,[e(s,{to:"/problem/0637.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fh,[e(s,{to:"/tag/tree.html"},{default:o(()=>[uh]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gh]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[mh]),_:1}),l(),yh]),t("td",xh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bh,t("td",ph,[t("a",kh,[l("寻找重复的子树"),e(n)])]),Mh,t("td",vh,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ih]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Eh]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[wh]),_:1}),l(),zh]),t("td",Oh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qh,t("td",jh,[t("a",Hh,[l("两数之和 IV - 输入二叉搜索树"),e(n)])]),Lh,t("td",Ch,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Nh]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ph]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Kh]),_:1}),l(),Bh]),t("td",Vh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Th,t("td",Uh,[t("a",Rh,[l("最大二叉树"),e(n)])]),t("td",Wh,[e(s,{to:"/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Yh]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Qh]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Sh]),_:1}),l(),Dh]),t("td",Zh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ah,t("td",Fh,[t("a",Jh,[l("输出二叉树"),e(n)])]),Xh,t("td",$h,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ef]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lf]),_:1}),l(),of]),t("td",sf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nf,t("td",df,[t("a",_f,[l("二叉树最大宽度"),e(n)])]),t("td",cf,[e(s,{to:"/problem/0662.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",rf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[af]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ff]),_:1}),l(),uf]),t("td",gf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mf,t("td",yf,[t("a",xf,[l("均匀树划分"),e(n)])]),bf,t("td",pf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Mf]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[vf]),_:1})]),t("td",If,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ef,t("td",wf,[t("a",zf,[l("路径总和 IV"),e(n)])]),Of,t("td",qf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[jf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Hf]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Lf]),_:1}),l(),Cf]),t("td",Nf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pf,t("td",Kf,[t("a",Bf,[l("修剪二叉搜索树"),e(n)])]),Vf,t("td",Tf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Uf]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Rf]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Wf]),_:1}),l(),Gf]),t("td",Yf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qf,t("td",Sf,[t("a",Df,[l("二叉树中第二小的节点"),e(n)])]),Zf,t("td",Af,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ff]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jf]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Xf]),_:1})]),t("td",$f,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[tu,t("td",eu,[t("a",lu,[l("最长同值路径"),e(n)])]),ou,t("td",su,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[du]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[_u]),_:1})]),t("td",cu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ru,t("td",au,[t("a",iu,[l("二叉搜索树中的搜索"),e(n)])]),t("td",hu,[e(s,{to:"/problem/0700.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fu,[e(s,{to:"/tag/tree.html"},{default:o(()=>[uu]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[gu]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[mu]),_:1})]),t("td",yu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xu,t("td",bu,[t("a",pu,[l("二叉搜索树中的插入操作"),e(n)])]),t("td",ku,[e(s,{to:"/problem/0701.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Mu,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vu]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Iu]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Eu]),_:1})]),t("td",wu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zu,t("td",Ou,[t("a",qu,[l("数据流中的第 K 大元素"),e(n)])]),t("td",ju,[e(s,{to:"/problem/0703.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hu,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Lu]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Cu]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Nu]),_:1}),l(),Pu]),t("td",Ku,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Bu,t("td",Vu,[t("a",Tu,[l("二叉树最近的叶节点"),e(n)])]),Uu,t("td",Ru,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Wu]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gu]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Yu]),_:1}),l(),Qu]),t("td",Su,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Du,t("td",Zu,[t("a",Au,[l("拆分二叉搜索树"),e(n)])]),Fu,t("td",Ju,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xu]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[$u]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[tg]),_:1}),l(),eg]),t("td",lg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[og,t("td",sg,[t("a",ng,[l("二叉搜索树节点最小距离"),e(n)])]),t("td",dg,[e(s,{to:"/problem/0783.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_g,[e(s,{to:"/tag/tree.html"},{default:o(()=>[cg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[rg]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ag]),_:1}),l(),ig]),t("td",hg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fg,t("td",ug,[t("a",gg,[l("二叉树剪枝"),e(n)])]),mg,t("td",yg,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bg]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[pg]),_:1})]),t("td",kg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mg,t("td",vg,[t("a",Ig,[l("二叉树中所有距离为 K 的结点"),e(n)])]),Eg,t("td",wg,[e(s,{to:"/tag/tree.html"},{default:o(()=>[zg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Og]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[qg]),_:1}),l(),jg]),t("td",Hg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lg,t("td",Cg,[t("a",Ng,[l("具有所有最深节点的最小子树"),e(n)])]),Pg,t("td",Kg,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Bg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Vg]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Tg]),_:1}),l(),Ug]),t("td",Rg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wg,t("td",Gg,[t("a",Yg,[l("叶子相似的树"),e(n)])]),Qg,t("td",Sg,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Dg]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Zg]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Ag]),_:1})]),t("td",Fg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Jg,t("td",Xg,[t("a",$g,[l("根据前序和后序遍历构造二叉树"),e(n)])]),t("td",tm,[e(s,{to:"/problem/0889.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",em,[e(s,{to:"/tag/tree.html"},{default:o(()=>[lm]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[om]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[sm]),_:1}),l(),nm]),t("td",dm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_m,t("td",cm,[t("a",rm,[l("所有可能的真二叉树"),e(n)])]),am,t("td",im,[e(s,{to:"/tag/tree.html"},{default:o(()=>[hm]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[fm]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[um]),_:1}),l(),gm]),t("td",mm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ym,t("td",xm,[t("a",bm,[l("递增顺序搜索树"),e(n)])]),pm,t("td",km,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Mm]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[vm]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Im]),_:1}),l(),Em]),t("td",wm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zm,t("td",Om,[t("a",qm,[l("完全二叉树插入器"),e(n)])]),jm,t("td",Hm,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Lm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Cm]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Nm]),_:1}),l(),Pm]),t("td",Km,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bm,t("td",Vm,[t("a",Tm,[l("二叉搜索树的范围和"),e(n)])]),Um,t("td",Rm,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Wm]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gm]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ym]),_:1}),l(),Qm]),t("td",Sm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Dm,t("td",Zm,[t("a",Am,[l("翻转等价二叉树"),e(n)])]),Fm,t("td",Jm,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Xm]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$m]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ty]),_:1})]),t("td",ey,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ly,t("td",oy,[t("a",sy,[l("二叉树的完全性检验"),e(n)])]),t("td",ny,[e(s,{to:"/problem/0958.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",dy,[e(s,{to:"/tag/tree.html"},{default:o(()=>[_y]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[cy]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[ry]),_:1})]),t("td",ay,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iy,t("td",hy,[t("a",fy,[l("单值二叉树"),e(n)])]),uy,t("td",gy,[e(s,{to:"/tag/tree.html"},{default:o(()=>[my]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yy]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xy]),_:1}),l(),by]),t("td",py,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ky,t("td",My,[t("a",vy,[l("监控二叉树"),e(n)])]),Iy,t("td",Ey,[e(s,{to:"/tag/tree.html"},{default:o(()=>[wy]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zy]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Oy]),_:1}),l(),qy]),t("td",jy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hy,t("td",Ly,[t("a",Cy,[l("翻转二叉树以匹配先序遍历"),e(n)])]),Ny,t("td",Py,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ky]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[By]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Vy]),_:1})]),t("td",Ty,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uy,t("td",Ry,[t("a",Wy,[l("在二叉树中分配硬币"),e(n)])]),Gy,t("td",Yy,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Qy]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Sy]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Dy]),_:1})]),t("td",Zy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ay,t("td",Fy,[t("a",Jy,[l("二叉树的垂序遍历"),e(n)])]),Xy,t("td",$y,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tx]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ex]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lx]),_:1}),l(),ox]),t("td",sx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nx,t("td",dx,[t("a",_x,[l("从叶结点开始的最小字符串"),e(n)])]),cx,t("td",rx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ax]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ix]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[hx]),_:1}),l(),fx]),t("td",ux,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gx,t("td",mx,[t("a",yx,[l("二叉树的堂兄弟节点"),e(n)])]),xx,t("td",bx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[px]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Mx]),_:1}),l(),vx]),t("td",Ix,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ex,t("td",wx,[t("a",zx,[l("最大二叉树 II"),e(n)])]),Ox,t("td",qx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[jx]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Hx]),_:1})]),t("td",Lx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cx,t("td",Nx,[t("a",Px,[l("前序遍历构造二叉搜索树"),e(n)])]),t("td",Kx,[e(s,{to:"/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bx,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Vx]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Tx]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ux]),_:1}),l(),Rx]),t("td",Wx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gx,t("td",Yx,[t("a",Qx,[l("从根到叶的二进制数之和"),e(n)])]),Sx,t("td",Dx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Zx]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ax]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Fx]),_:1})]),t("td",Jx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xx,t("td",$x,[t("a",tb,[l("节点与其祖先之间的最大差值"),e(n)])]),eb,t("td",lb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ob]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sb]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[nb]),_:1})]),t("td",db,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_b,t("td",cb,[t("a",rb,[l("从先序遍历还原二叉树"),e(n)])]),ab,t("td",ib,[e(s,{to:"/tag/tree.html"},{default:o(()=>[hb]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fb]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[ub]),_:1}),l(),gb]),t("td",mb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yb,t("td",xb,[t("a",bb,[l("从二叉搜索树到更大和树"),e(n)])]),pb,t("td",kb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Mb]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vb]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ib]),_:1}),l(),Eb]),t("td",wb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zb,t("td",Ob,[t("a",qb,[l("根到叶路径上的不足节点"),e(n)])]),jb,t("td",Hb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Lb]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cb]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Nb]),_:1})]),t("td",Pb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kb,t("td",Bb,[t("a",Vb,[l("二叉树寻路"),e(n)])]),Tb,t("td",Ub,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Rb]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Wb]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Gb]),_:1})]),t("td",Yb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qb,t("td",Sb,[t("a",Db,[l("删点成林"),e(n)])]),Zb,t("td",Ab,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Fb]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jb]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Xb]),_:1}),l(),$b]),t("td",t2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e2,t("td",l2,[t("a",o2,[l("子树的最大平均值"),e(n)])]),s2,t("td",n2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[d2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_2]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[c2]),_:1})]),t("td",r2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a2,t("td",i2,[t("a",h2,[l("最深叶节点的最近公共祖先"),e(n)])]),f2,t("td",u2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[g2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[m2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[y2]),_:1}),l(),x2]),t("td",b2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p2,t("td",k2,[t("a",M2,[l("二叉树着色游戏"),e(n)])]),v2,t("td",I2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[E2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[w2]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[z2]),_:1})]),t("td",O2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q2,t("td",j2,[t("a",H2,[l("最大层内元素和"),e(n)])]),L2,t("td",C2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[N2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[P2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[K2]),_:1}),l(),B2]),t("td",V2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T2,t("td",U2,[t("a",R2,[l("查找两棵二叉搜索树之和"),e(n)])]),W2,t("td",G2,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Y2]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Q2]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[S2]),_:1}),l(),D2]),t("td",Z2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A2,t("td",F2,[t("a",J2,[l("在受污染的二叉树中查找元素"),e(n)])]),X2,t("td",$2,[e(s,{to:"/tag/tree.html"},{default:o(()=>[t0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[e0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[l0]),_:1}),l(),o0]),t("td",s0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n0,t("td",d0,[t("a",_0,[l("层数最深叶子节点的和"),e(n)])]),c0,t("td",r0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[a0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[i0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[h0]),_:1}),l(),f0]),t("td",u0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g0,t("td",m0,[t("a",y0,[l("两棵二叉搜索树中的所有元素"),e(n)])]),x0,t("td",b0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[p0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[k0]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[M0]),_:1}),l(),v0]),t("td",I0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E0,t("td",w0,[t("a",z0,[l("祖父节点值为偶数的节点和"),e(n)])]),O0,t("td",q0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[j0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[H0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[L0]),_:1}),l(),C0]),t("td",N0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P0,t("td",K0,[t("a",B0,[l("删除给定值的叶子节点"),e(n)])]),V0,t("td",T0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[U0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[R0]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[W0]),_:1})]),t("td",G0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y0,t("td",Q0,[t("a",S0,[l("分裂二叉树的最大乘积"),e(n)])]),D0,t("td",Z0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[A0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[F0]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[J0]),_:1})]),t("td",X0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$0,t("td",tp,[t("a",ep,[l("验证二叉树"),e(n)])]),lp,t("td",op,[e(s,{to:"/tag/tree.html"},{default:o(()=>[sp]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[np]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dp]),_:1}),l(),_p]),t("td",cp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rp,t("td",ap,[t("a",ip,[l("二叉树中的链表"),e(n)])]),hp,t("td",fp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[up]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[gp]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[mp]),_:1}),l(),yp]),t("td",xp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bp,t("td",pp,[t("a",kp,[l("二叉树中的最长交错路径"),e(n)])]),Mp,t("td",vp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ip]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ep]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[wp]),_:1}),l(),zp]),t("td",Op,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qp,t("td",jp,[t("a",Hp,[l("二叉搜索子树的最大键值和"),e(n)])]),Lp,t("td",Cp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Np]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Pp]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Kp]),_:1}),l(),Bp]),t("td",Vp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tp,t("td",Up,[t("a",Rp,[l("找出克隆二叉树中的相同节点"),e(n)])]),Wp,t("td",Gp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Yp]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qp]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Sp]),_:1}),l(),Dp]),t("td",Zp,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ap,t("td",Fp,[t("a",Jp,[l("将二叉搜索树变平衡"),e(n)])]),Xp,t("td",$p,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[t6]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[e6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[l6]),_:1}),l(),o6]),t("td",s6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n6,t("td",d6,[t("a",_6,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(n)])]),c6,t("td",r6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[a6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[i6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[h6]),_:1}),l(),f6]),t("td",u6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g6,t("td",m6,[t("a",y6,[l("统计二叉树中好节点的数目"),e(n)])]),x6,t("td",b6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[p6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[k6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[M6]),_:1}),l(),v6]),t("td",I6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E6,t("td",w6,[t("a",z6,[l("二叉树中的伪回文路径"),e(n)])]),O6,t("td",q6,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[j6]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[H6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[L6]),_:1}),l(),C6]),t("td",N6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P6,t("td",K6,[t("a",B6,[l("寻找所有的独生节点"),e(n)])]),V6,t("td",T6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[U6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[R6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[W6]),_:1}),l(),G6]),t("td",Y6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Q6,t("td",S6,[t("a",D6,[l("克隆含随机指针的二叉树"),e(n)])]),Z6,t("td",A6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[F6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[J6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[X6]),_:1}),l(),$6]),t("td",t8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e8,t("td",l8,[t("a",o8,[l("好叶子节点对的数量"),e(n)])]),s8,t("td",n8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[d8]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_8]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[c8]),_:1})]),t("td",r8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a8,t("td",i8,[t("a",h8,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(n)])]),f8,t("td",u8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[g8]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[m8]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[y8]),_:1}),l(),x8]),t("td",b8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p8,t("td",k8,[t("a",M8,[l("二叉搜索树迭代器 II"),e(n)])]),v8,t("td",I8,[e(s,{to:"/tag/stack.html"},{default:o(()=>[E8]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[w8]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[z8]),_:1}),l(),O8]),t("td",q8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j8,t("td",H8,[t("a",L8,[l("根据中缀表达式构造二叉表达式树"),e(n)])]),C8,t("td",N8,[e(s,{to:"/tag/stack.html"},{default:o(()=>[P8]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[K8]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[B8]),_:1}),l(),V8]),t("td",T8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U8,t("td",R8,[t("a",W8,[l("找到二叉树中最近的右侧节点"),e(n)])]),G8,t("td",Y8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Q8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[S8]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[D8]),_:1})]),t("td",Z8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A8,t("td",F8,[t("a",J8,[l("奇偶树"),e(n)])]),X8,t("td",$8,[e(s,{to:"/tag/tree.html"},{default:o(()=>[t3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[e3]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[l3]),_:1})]),t("td",o3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s3,t("td",n3,[t("a",d3,[l("检查两棵二叉表达式树是否等价"),e(n)])]),_3,t("td",c3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[r3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[a3]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[i3]),_:1}),l(),h3]),t("td",f3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u3,t("td",g3,[t("a",m3,[l("设计带解析函数的表达式树"),e(n)])]),y3,t("td",x3,[e(s,{to:"/tag/stack.html"},{default:o(()=>[b3]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[p3]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[k3]),_:1}),l(),M3]),t("td",v3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I3,t("td",E3,[t("a",w3,[l("二叉树的最近公共祖先 II"),e(n)])]),z3,t("td",O3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[q3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[j3]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[H3]),_:1})]),t("td",L3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C3,t("td",N3,[t("a",P3,[l("二叉树的最近公共祖先 III"),e(n)])]),K3,t("td",B3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[V3]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[T3]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[U3]),_:1}),l(),R3]),t("td",W3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G3,t("td",Y3,[t("a",Q3,[l("纠正二叉树"),e(n)])]),S3,t("td",D3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Z3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[A3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[F3]),_:1}),l(),J3]),t("td",X3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$3,t("td",t5,[t("a",e5,[l("改变二叉树的根节点"),e(n)])]),l5,t("td",o5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[s5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[n5]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[d5]),_:1})]),t("td",_5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c5,t("td",r5,[t("a",a5,[l("二叉树的最近公共祖先 IV"),e(n)])]),i5,t("td",h5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[f5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[u5]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[g5]),_:1}),l(),m5]),t("td",y5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x5,t("td",b5,[t("a",p5,[l("找到二叉树中的距离"),e(n)])]),k5,t("td",M5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[v5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[I5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[E5]),_:1}),l(),w5]),t("td",z5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O5,t("td",q5,[t("a",j5,[l("给定二叉搜索树的插入顺序求深度"),e(n)])]),H5,t("td",L5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[C5]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[N5]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[P5]),_:1}),l(),K5]),t("td",B5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V5,t("td",T5,[t("a",U5,[l("合并多棵二叉搜索树"),e(n)])]),R5,t("td",W5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[G5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Y5]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Q5]),_:1}),l(),S5]),t("td",D5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Z5,t("td",A5,[t("a",F5,[l("值等于子节点值之和的节点数量"),e(n)])]),J5,t("td",X5,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$5]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[t4]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[e4]),_:1})]),t("td",l4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o4,t("td",s4,[t("a",n4,[l("斐波那契树的移除子树游戏"),e(n)])]),d4,t("td",_4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[c4]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[r4]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[a4]),_:1}),l(),i4]),t("td",h4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f4,t("td",u4,[t("a",g4,[l("统计最高分的节点数目"),e(n)])]),m4,t("td",y4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[x4]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[b4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[p4]),_:1}),l(),k4]),t("td",M4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v4,t("td",I4,[t("a",E4,[l("从二叉树一个节点到另一个节点每一步的方向"),e(n)])]),w4,t("td",z4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[O4]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q4]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[j4]),_:1}),l(),H4]),t("td",L4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C4,t("td",N4,[t("a",P4,[l("根据描述创建二叉树"),e(n)])]),t("td",K4,[e(s,{to:"/problem/2196.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",B4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[V4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[T4]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[U4]),_:1}),l(),R4]),t("td",W4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G4,t("td",Y4,[t("a",Q4,[l("判断根结点是否等于子结点之和"),e(n)])]),S4,t("td",D4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Z4]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[A4]),_:1})]),t("td",F4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[J4,t("td",X4,[t("a",$4,[l("统计值等于子树平均值的节点数"),e(n)])]),t9,t("td",e9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[l9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[o9]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[s9]),_:1})]),t("td",n9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d9,t("td",_9,[t("a",c9,[l("二叉树中得到结果所需的最少翻转次数"),e(n)])]),r9,t("td",a9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[i9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[h9]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[f9]),_:1}),l(),u9]),t("td",g9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m9,t("td",y9,[t("a",x9,[l("计算布尔二叉树的值"),e(n)])]),b9,t("td",p9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[k9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[M9]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[v9]),_:1})]),t("td",I9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[E9,t("td",w9,[t("a",z9,[l("感染二叉树需要的总时间"),e(n)])]),O9,t("td",q9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[j9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[H9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[L9]),_:1}),l(),C9]),t("td",N9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P9,t("td",K9,[t("a",B9,[l("反转二叉树的奇数层"),e(n)])]),V9,t("td",T9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[U9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[R9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[W9]),_:1}),l(),G9]),t("td",Y9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q9,t("td",S9,[t("a",D9,[l("值为 1 的节点数"),e(n)])]),Z9,t("td",A9,[e(s,{to:"/tag/tree.html"},{default:o(()=>[F9]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[J9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[X9]),_:1}),l(),$9]),t("td",t7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e7,t("td",l7,[t("a",o7,[l("移除子树后的二叉树高度"),e(n)])]),s7,t("td",n7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[d7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[c7]),_:1}),l(),r7]),t("td",a7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i7,t("td",h7,[t("a",f7,[l("逐层排序二叉树所需的最少操作数目"),e(n)])]),u7,t("td",g7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[m7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[y7]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[x7]),_:1})]),t("td",b7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p7,t("td",k7,[t("a",M7,[l("二叉搜索树最近节点查询"),e(n)])]),v7,t("td",I7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[E7]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[w7]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[z7]),_:1}),l(),O7]),t("td",q7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j7,t("td",H7,[t("a",L7,[l("查询树中环的长度"),e(n)])]),C7,t("td",N7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[P7]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[K7]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[B7]),_:1})]),t("td",V7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T7,t("td",U7,[t("a",R7,[l("二叉树中的第 K 大层和"),e(n)])]),W7,t("td",G7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Y7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Q7]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[S7]),_:1}),l(),D7]),t("td",Z7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A7,t("td",F7,[t("a",J7,[l("二叉树的堂兄弟节点 II"),e(n)])]),X7,t("td",$7,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tk]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ek]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lk]),_:1}),l(),ok]),t("td",sk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nk,t("td",dk,[t("a",_k,[l("使二叉树所有路径值相等的最小代价"),e(n)])]),ck,t("td",rk,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[ak]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[ik]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[hk]),_:1}),l(),fk]),t("td",uk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gk,t("td",mk,[t("a",yk,[l("从 Rope 树中提取第 K 个字符"),e(n)])]),xk,t("td",bk,[e(s,{to:"/tag/tree.html"},{default:o(()=>[pk]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kk]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Mk]),_:1})]),t("td",vk,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ik,t("td",Ek,[t("a",wk,[l("数组是否表示某二叉树的前序遍历"),e(n)])]),zk,t("td",Ok,[e(s,{to:"/tag/stack.html"},{default:o(()=>[qk]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[jk]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Hk]),_:1}),l(),Lk]),t("td",Ck,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nk,t("td",Pk,[t("a",Kk,[l("特殊二叉树的高度"),e(n)])]),Bk,t("td",Vk,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Tk]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Uk]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Rk]),_:1}),l(),Wk]),t("td",Gk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yk,t("td",Qk,[t("a",Sk,[l("计算足够大的节点数"),e(n)])]),Dk,t("td",Zk,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ak]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Fk]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Jk]),_:1}),l(),Xk]),t("td",$k,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tM,t("td",eM,[t("a",lM,[l("找到具有最小和的树的层数"),e(n)])]),oM,t("td",sM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nM]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dM]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_M]),_:1}),l(),cM]),t("td",rM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aM,t("td",iM,[t("a",hM,[l("第 K 大的完美二叉子树的大小"),e(n)])]),t("td",fM,[e(s,{to:"/problem/3319.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",uM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gM]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mM]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[yM]),_:1}),l(),xM]),t("td",bM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pM,t("td",kM,[t("a",MM,[l("二叉树任务调度"),e(n)])]),vM,t("td",IM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[EM]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[wM]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[zM]),_:1}),l(),OM]),t("td",qM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jM,t("td",HM,[t("a",LM,[l("导航装置"),e(n)])]),CM,t("td",NM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[PM]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[KM]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[BM]),_:1})]),t("td",VM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TM,t("td",UM,[t("a",RM,[l("二叉树染色"),e(n)])]),WM,t("td",GM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[YM]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[QM]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[SM]),_:1})]),t("td",DM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZM,t("td",AM,[t("a",FM,[l("开幕式焰火"),e(n)])]),JM,t("td",XM,[e(s,{to:"/tag/tree.html"},{default:o(()=>[$M]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[tv]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ev]),_:1}),l(),lv]),t("td",ov,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sv,t("td",nv,[t("a",dv,[l("二叉搜索树染色"),e(n)])]),_v,t("td",cv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[rv]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[av]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[iv]),_:1}),l(),hv]),t("td",fv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uv,t("td",gv,[t("a",mv,[l("力扣泡泡龙"),e(n)])]),yv,t("td",xv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[bv]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[pv]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[kv]),_:1})]),t("td",Mv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vv,t("td",Iv,[t("a",Ev,[l("二叉树灯饰"),e(n)])]),wv,t("td",zv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ov]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qv]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[jv]),_:1}),l(),Hv]),t("td",Lv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cv,t("td",Nv,[t("a",Pv,[l("装饰树"),e(n)])]),Kv,t("td",Bv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Vv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Tv]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Uv]),_:1}),l(),Rv]),t("td",Wv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gv,t("td",Yv,[t("a",Qv,[l("树的子结构"),e(n)])]),t("td",Sv,[e(s,{to:"/offer/jz_offer_26_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Dv,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Zv]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Av]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Fv]),_:1})]),t("td",Jv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xv,t("td",$v,[t("a",tI,[l("二叉树的镜像"),e(n)])]),t("td",eI,[e(s,{to:"/offer/jz_offer_27_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[oI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[nI]),_:1}),l(),dI]),t("td",_I,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cI,t("td",rI,[t("a",aI,[l("对称的二叉树"),e(n)])]),t("td",iI,[e(s,{to:"/offer/jz_offer_28_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[fI]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[uI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gI]),_:1}),l(),mI]),t("td",yI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xI,t("td",bI,[t("a",pI,[l("从上到下打印二叉树"),e(n)])]),t("td",kI,[e(s,{to:"/offer/jz_offer_32_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",MI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[vI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[II]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[EI]),_:1})]),t("td",wI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zI,t("td",OI,[t("a",qI,[l("从上到下打印二叉树 II"),e(n)])]),t("td",jI,[e(s,{to:"/offer/jz_offer_32_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",HI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[LI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[CI]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[NI]),_:1})]),t("td",PI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[KI,t("td",BI,[t("a",VI,[l("从上到下打印二叉树 III"),e(n)])]),t("td",TI,[e(s,{to:"/offer/jz_offer_32_3.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",UI,[e(s,{to:"/tag/tree.html"},{default:o(()=>[RI]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[WI]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[GI]),_:1})]),t("td",YI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QI,t("td",SI,[t("a",DI,[l("二叉搜索树的后序遍历序列"),e(n)])]),t("td",ZI,[e(s,{to:"/offer/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",AI,[e(s,{to:"/tag/stack.html"},{default:o(()=>[FI]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[JI]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[XI]),_:1}),l(),$I]),t("td",tE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eE,t("td",lE,[t("a",oE,[l("二叉树中和为某一值的路径"),e(n)])]),t("td",sE,[e(s,{to:"/offer/jz_offer_34_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",nE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[dE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_E]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[cE]),_:1}),l(),rE]),t("td",aE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iE,t("td",hE,[t("a",fE,[l("二叉搜索树与双向链表"),e(n)])]),t("td",uE,[e(s,{to:"/offer/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",gE,[e(s,{to:"/tag/stack.html"},{default:o(()=>[mE]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[yE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[xE]),_:1}),l(),bE]),t("td",pE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kE,t("td",ME,[t("a",vE,[l("序列化二叉树"),e(n)])]),t("td",IE,[e(s,{to:"/offer/jz_offer_37_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",EE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[wE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[OE]),_:1}),l(),qE]),t("td",jE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HE,t("td",LE,[t("a",CE,[l("二叉搜索树的第k大节点"),e(n)])]),t("td",NE,[e(s,{to:"/offer/jz_offer_54_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",PE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[KE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[BE]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[VE]),_:1}),l(),TE]),t("td",UE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[RE,t("td",WE,[t("a",GE,[l("二叉树的深度"),e(n)])]),t("td",YE,[e(s,{to:"/offer/jz_offer_55_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",QE,[e(s,{to:"/tag/tree.html"},{default:o(()=>[SE]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[DE]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ZE]),_:1}),l(),AE]),t("td",FE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[JE,t("td",XE,[t("a",$E,[l("平衡二叉树"),e(n)])]),tw,t("td",ew,[e(s,{to:"/tag/tree.html"},{default:o(()=>[lw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ow]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[sw]),_:1})]),t("td",nw,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[dw,t("td",_w,[t("a",cw,[l("二叉搜索树的最近公共祖先"),e(n)])]),rw,t("td",aw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[iw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hw]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[fw]),_:1}),l(),uw]),t("td",gw,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[mw,t("td",yw,[t("a",xw,[l("二叉树的最近公共祖先"),e(n)])]),bw,t("td",pw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Mw]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[vw]),_:1})]),t("td",Iw,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ew,t("td",ww,[t("a",zw,[l("重建二叉树"),e(n)])]),t("td",Ow,[e(s,{to:"/offer/jz_offer_07_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[jw]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Hw]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[Lw]),_:1}),l(),Cw]),t("td",Nw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pw,t("td",Kw,[t("a",Bw,[l("往完全二叉树添加节点"),e(n)])]),Vw,t("td",Tw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Uw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Rw]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Ww]),_:1}),l(),Gw]),t("td",Yw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qw,t("td",Sw,[t("a",Dw,[l("二叉树每层的最大值"),e(n)])]),Zw,t("td",Aw,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Fw]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jw]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Xw]),_:1}),l(),$w]),t("td",tz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ez,t("td",lz,[t("a",oz,[l("二叉树最底层最左边的值"),e(n)])]),sz,t("td",nz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[dz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_z]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[cz]),_:1}),l(),rz]),t("td",az,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iz,t("td",hz,[t("a",fz,[l("二叉树的右侧视图"),e(n)])]),uz,t("td",gz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[mz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yz]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[xz]),_:1}),l(),bz]),t("td",pz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kz,t("td",Mz,[t("a",vz,[l("二叉树剪枝"),e(n)])]),Iz,t("td",Ez,[e(s,{to:"/tag/tree.html"},{default:o(()=>[wz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zz]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Oz]),_:1})]),t("td",qz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jz,t("td",Hz,[t("a",Lz,[l("序列化与反序列化二叉树"),e(n)])]),Cz,t("td",Nz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Pz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Kz]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Bz]),_:1}),l(),Vz]),t("td",Tz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uz,t("td",Rz,[t("a",Wz,[l("从根节点到叶节点的路径数字之和"),e(n)])]),Gz,t("td",Yz,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Qz]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Sz]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Dz]),_:1})]),t("td",Zz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Az,t("td",Fz,[t("a",Jz,[l("向下的路径节点之和"),e(n)])]),Xz,t("td",$z,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[eO]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[lO]),_:1})]),t("td",oO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sO,t("td",nO,[t("a",dO,[l("节点之和最大的路径"),e(n)])]),_O,t("td",cO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[rO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[aO]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[iO]),_:1}),l(),hO]),t("td",fO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uO,t("td",gO,[t("a",mO,[l("展平二叉搜索树"),e(n)])]),yO,t("td",xO,[e(s,{to:"/tag/stack.html"},{default:o(()=>[bO]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[pO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kO]),_:1}),l(),MO]),t("td",vO,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[IO,t("td",EO,[t("a",wO,[l("二叉搜索树中的中序后继"),e(n)])]),zO,t("td",OO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jO]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[HO]),_:1}),l(),LO]),t("td",CO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NO,t("td",PO,[t("a",KO,[l("所有大于等于节点的值之和"),e(n)])]),BO,t("td",VO,[e(s,{to:"/tag/tree.html"},{default:o(()=>[TO]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[UO]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[RO]),_:1}),l(),WO]),t("td",GO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YO,t("td",QO,[t("a",SO,[l("二叉搜索树迭代器"),e(n)])]),DO,t("td",ZO,[e(s,{to:"/tag/stack.html"},{default:o(()=>[AO]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[FO]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[JO]),_:1}),l(),XO]),t("td",$O,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tq,t("td",eq,[t("a",lq,[l("数据流的第 K 大数值"),e(n)])]),oq,t("td",sq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[nq]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[dq]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[_q]),_:1}),l(),cq]),t("td",rq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[aq,t("td",iq,[t("a",hq,[l("最小高度树"),e(n)])]),fq,t("td",uq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[gq]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[mq]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[yq]),_:1}),l(),xq]),t("td",bq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pq,t("td",kq,[t("a",Mq,[l("特定深度节点链表"),e(n)])]),vq,t("td",Iq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Eq]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[wq]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[zq]),_:1}),l(),Oq]),t("td",qq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jq,t("td",Hq,[t("a",Lq,[l("检查平衡性"),e(n)])]),Cq,t("td",Nq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Pq]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Kq]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Bq]),_:1})]),t("td",Vq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Tq,t("td",Uq,[t("a",Rq,[l("合法二叉搜索树"),e(n)])]),Wq,t("td",Gq,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Yq]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qq]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Sq]),_:1}),l(),Dq]),t("td",Zq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Aq,t("td",Fq,[t("a",Jq,[l("后继者"),e(n)])]),Xq,t("td",$q,[e(s,{to:"/tag/tree.html"},{default:o(()=>[tj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ej]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[lj]),_:1}),l(),oj]),t("td",sj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nj,t("td",dj,[t("a",_j,[l("首个共同祖先"),e(n)])]),cj,t("td",rj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[aj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ij]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[hj]),_:1})]),t("td",fj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uj,t("td",gj,[t("a",mj,[l("二叉搜索树序列"),e(n)])]),yj,t("td",xj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[bj]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[pj]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[kj]),_:1}),l(),Mj]),t("td",vj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ij,t("td",Ej,[t("a",wj,[l("检查子树"),e(n)])]),zj,t("td",Oj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jj]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Hj]),_:1}),l(),Lj]),t("td",Cj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nj,t("td",Pj,[t("a",Kj,[l("求和路径"),e(n)])]),Bj,t("td",Vj,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Tj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Uj]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[Rj]),_:1})]),t("td",Wj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gj,t("td",Yj,[t("a",Qj,[l("BiNode"),e(n)])]),Sj,t("td",Dj,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Zj]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Aj]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Fj]),_:1}),l(),Jj]),t("td",Xj,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const oH=c(h,[["render",$j],["__file","binary-tree.html.vue"]]);export{oH as default};
