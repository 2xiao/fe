import{_ as d,r,o as c,c as i,a as t,b as e,d as o,w as n,f as _,e as h}from"./app-Ob52y8QZ.js";const u={},p=t("h1",{id:"_1-两数之和",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_1-两数之和","aria-hidden":"true"},"#"),e(" 1. 两数之和")],-1),f=t("code",null,"数组",-1),g=t("code",null,"哈希表",-1),m={href:"https://leetcode.cn/problems/two-sum",target:"_blank",rel:"noopener noreferrer"},b=t("code",null,"力扣",-1),y={href:"https://leetcode.com/problems/two-sum",target:"_blank",rel:"noopener noreferrer"},x=t("code",null,"LeetCode",-1),k=h(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given an array of integers <code>nums</code> and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to<code>target</code></em>.</p><p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p><p>You can return the answer in any order.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: nums = [2,7,11,15], target = 9</p><p>Output: [0,1]</p><p>Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums = [3,2,4], target = 6</p><p>Output: [1,2]</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: nums = [3,3], target = 6</p><p>Output: [0,1]</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>2 &lt;= nums.length &lt;= 10^4</code></li><li><code>-10^9 &lt;= nums[i] &lt;= 10^9</code></li><li><code>-10^9 &lt;= target &lt;= 10^9</code></li><li><strong>Only one valid answer exists.</strong></li></ul><p><strong>Follow-up:</strong> Can you come up with an algorithm that is less than <code>O(n^2)</code> time complexity?</p><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>在数组中找到 2 个数之和等于给定值的数字，结果返回 2 个数字在数组中的下标。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>使用哈希表，顺序扫描数组，对每一个元素，在 <code>object</code> 中找能组合给定值的另一半数字，如果找到了，直接返回 2 个数字的下标即可。如果找不到，就把这个数字存入 <code>object</code> 中，等待扫到“另一半”数字的时候，再取出来返回结果。</p><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，其中 <code>n</code> 是字符串的长度。</li><li><strong>空间复杂度</strong>：<code>O(k)</code>，其中 <code>k</code> 是 <code>object</code> 中存放的数字数量，最坏情况下，需要扫描到最后一个数字才能找到结果，此时 <code>k</code> 会趋近 <code>n</code>。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> numsObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> another <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>another <span class="token keyword">in</span> numsObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token punctuation">[</span>numsObj<span class="token punctuation">[</span>another<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		numsObj<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,22),w=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),v=t("td",{style:{"text-align":"center"}},"15",-1),E=t("td",{style:{"text-align":"left"}},"三数之和",-1),q={style:{"text-align":"center"}},I={style:{"text-align":"left"}},O=t("code",null,"数组",-1),j=t("code",null,"双指针",-1),M=t("code",null,"排序",-1),C={style:{"text-align":"left"}},V={style:{"text-align":"center"}},K={href:"https://leetcode.cn/problems/3sum",target:"_blank",rel:"noopener noreferrer"},L={href:"https://leetcode.com/problems/3sum",target:"_blank",rel:"noopener noreferrer"},N=t("td",{style:{"text-align":"center"}},"18",-1),B=t("td",{style:{"text-align":"left"}},"四数之和",-1),R={style:{"text-align":"center"}},S={style:{"text-align":"left"}},Y=t("code",null,"数组",-1),F=t("code",null,"双指针",-1),G=t("code",null,"排序",-1),H={style:{"text-align":"left"}},T={style:{"text-align":"center"}},z={href:"https://leetcode.cn/problems/4sum",target:"_blank",rel:"noopener noreferrer"},A={href:"https://leetcode.com/problems/4sum",target:"_blank",rel:"noopener noreferrer"},D=t("td",{style:{"text-align":"center"}},"167",-1),J=t("td",{style:{"text-align":"left"}},"两数之和 II - 输入有序数组",-1),P={style:{"text-align":"center"}},Q={style:{"text-align":"left"}},U=t("code",null,"数组",-1),W=t("code",null,"双指针",-1),X=t("code",null,"二分查找",-1),Z={style:{"text-align":"left"}},$={style:{"text-align":"center"}},tt={href:"https://leetcode.cn/problems/two-sum-ii-input-array-is-sorted",target:"_blank",rel:"noopener noreferrer"},et={href:"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted",target:"_blank",rel:"noopener noreferrer"},ot=t("td",{style:{"text-align":"center"}},"170",-1),nt=t("td",{style:{"text-align":"left"}},"两数之和 III - 数据结构设计 🔒",-1),st=t("td",{style:{"text-align":"center"}},null,-1),lt={style:{"text-align":"left"}},at=t("code",null,"设计",-1),rt=t("code",null,"数组",-1),dt=t("code",null,"哈希表",-1),ct=t("code",null,"2+",-1),it={style:{"text-align":"left"}},_t={style:{"text-align":"center"}},ht={href:"https://leetcode.cn/problems/two-sum-iii-data-structure-design",target:"_blank",rel:"noopener noreferrer"},ut={href:"https://leetcode.com/problems/two-sum-iii-data-structure-design",target:"_blank",rel:"noopener noreferrer"},pt=t("td",{style:{"text-align":"center"}},"560",-1),ft=t("td",{style:{"text-align":"left"}},"和为 K 的子数组",-1),gt={style:{"text-align":"center"}},mt={style:{"text-align":"left"}},bt=t("code",null,"数组",-1),yt=t("code",null,"哈希表",-1),xt=t("code",null,"前缀和",-1),kt={style:{"text-align":"left"}},wt={style:{"text-align":"center"}},vt={href:"https://leetcode.cn/problems/subarray-sum-equals-k",target:"_blank",rel:"noopener noreferrer"},Et={href:"https://leetcode.com/problems/subarray-sum-equals-k",target:"_blank",rel:"noopener noreferrer"},qt=t("td",{style:{"text-align":"center"}},"653",-1),It=t("td",{style:{"text-align":"left"}},"两数之和 IV - 输入二叉搜索树",-1),Ot=t("td",{style:{"text-align":"center"}},null,-1),jt={style:{"text-align":"left"}},Mt=t("code",null,"树",-1),Ct=t("code",null,"深度优先搜索",-1),Vt=t("code",null,"广度优先搜索",-1),Kt=t("code",null,"4+",-1),Lt={style:{"text-align":"left"}},Nt={style:{"text-align":"center"}},Bt={href:"https://leetcode.cn/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Rt={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},St=t("td",{style:{"text-align":"center"}},"1099",-1),Yt=t("td",{style:{"text-align":"left"}},"小于 K 的两数之和 🔒",-1),Ft=t("td",{style:{"text-align":"center"}},null,-1),Gt={style:{"text-align":"left"}},Ht=t("code",null,"数组",-1),Tt=t("code",null,"双指针",-1),zt=t("code",null,"二分查找",-1),At=t("code",null,"1+",-1),Dt={style:{"text-align":"left"}},Jt={style:{"text-align":"center"}},Pt={href:"https://leetcode.cn/problems/two-sum-less-than-k",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://leetcode.com/problems/two-sum-less-than-k",target:"_blank",rel:"noopener noreferrer"},Ut=t("td",{style:{"text-align":"center"}},"1679",-1),Wt=t("td",{style:{"text-align":"left"}},"K 和数对的最大数目",-1),Xt={style:{"text-align":"center"}},Zt={style:{"text-align":"left"}},$t=t("code",null,"数组",-1),te=t("code",null,"哈希表",-1),ee=t("code",null,"双指针",-1),oe=t("code",null,"1+",-1),ne={style:{"text-align":"left"}},se={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/max-number-of-k-sum-pairs",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://leetcode.com/problems/max-number-of-k-sum-pairs",target:"_blank",rel:"noopener noreferrer"},re=t("td",{style:{"text-align":"center"}},"1711",-1),de=t("td",{style:{"text-align":"left"}},"大餐计数",-1),ce=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},_e=t("code",null,"数组",-1),he=t("code",null,"哈希表",-1),ue={style:{"text-align":"left"}},pe={style:{"text-align":"center"}},fe={href:"https://leetcode.cn/problems/count-good-meals",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://leetcode.com/problems/count-good-meals",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},"2006",-1),be=t("td",{style:{"text-align":"left"}},"差的绝对值为 K 的数对数目",-1),ye=t("td",{style:{"text-align":"center"}},null,-1),xe={style:{"text-align":"left"}},ke=t("code",null,"数组",-1),we=t("code",null,"哈希表",-1),ve=t("code",null,"计数",-1),Ee={style:{"text-align":"left"}},qe={style:{"text-align":"center"}},Ie={href:"https://leetcode.cn/problems/count-number-of-pairs-with-absolute-difference-k",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://leetcode.com/problems/count-number-of-pairs-with-absolute-difference-k",target:"_blank",rel:"noopener noreferrer"},je=t("td",{style:{"text-align":"center"}},"2023",-1),Me=t("td",{style:{"text-align":"left"}},"连接后等于目标字符串的字符串对",-1),Ce=t("td",{style:{"text-align":"center"}},null,-1),Ve={style:{"text-align":"left"}},Ke=t("code",null,"数组",-1),Le=t("code",null,"哈希表",-1),Ne=t("code",null,"字符串",-1),Be=t("code",null,"1+",-1),Re={style:{"text-align":"left"}},Se={style:{"text-align":"center"}},Ye={href:"https://leetcode.cn/problems/number-of-pairs-of-strings-with-concatenation-equal-to-target",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://leetcode.com/problems/number-of-pairs-of-strings-with-concatenation-equal-to-target",target:"_blank",rel:"noopener noreferrer"},Ge=t("td",{style:{"text-align":"center"}},"2200",-1),He=t("td",{style:{"text-align":"left"}},"找出数组中的所有 K 近邻下标",-1),Te=t("td",{style:{"text-align":"center"}},null,-1),ze={style:{"text-align":"left"}},Ae=t("code",null,"数组",-1),De=t("code",null,"双指针",-1),Je={style:{"text-align":"left"}},Pe={style:{"text-align":"center"}},Qe={href:"https://leetcode.cn/problems/find-all-k-distant-indices-in-an-array",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://leetcode.com/problems/find-all-k-distant-indices-in-an-array",target:"_blank",rel:"noopener noreferrer"},We=t("td",{style:{"text-align":"center"}},"2351",-1),Xe=t("td",{style:{"text-align":"left"}},"第一个出现两次的字母",-1),Ze=t("td",{style:{"text-align":"center"}},null,-1),$e={style:{"text-align":"left"}},to=t("code",null,"位运算",-1),eo=t("code",null,"哈希表",-1),oo=t("code",null,"字符串",-1),no=t("code",null,"1+",-1),so={style:{"text-align":"left"}},lo={style:{"text-align":"center"}},ao={href:"https://leetcode.cn/problems/first-letter-to-appear-twice",target:"_blank",rel:"noopener noreferrer"},ro={href:"https://leetcode.com/problems/first-letter-to-appear-twice",target:"_blank",rel:"noopener noreferrer"},co=t("td",{style:{"text-align":"center"}},"2354",-1),io=t("td",{style:{"text-align":"left"}},"优质数对的数目",-1),_o=t("td",{style:{"text-align":"center"}},null,-1),ho={style:{"text-align":"left"}},uo=t("code",null,"位运算",-1),po=t("code",null,"数组",-1),fo=t("code",null,"哈希表",-1),go=t("code",null,"1+",-1),mo={style:{"text-align":"left"}},bo={style:{"text-align":"center"}},yo={href:"https://leetcode.cn/problems/number-of-excellent-pairs",target:"_blank",rel:"noopener noreferrer"},xo={href:"https://leetcode.com/problems/number-of-excellent-pairs",target:"_blank",rel:"noopener noreferrer"},ko=t("td",{style:{"text-align":"center"}},"2367",-1),wo=t("td",{style:{"text-align":"left"}},"等差三元组的数目",-1),vo=t("td",{style:{"text-align":"center"}},null,-1),Eo={style:{"text-align":"left"}},qo=t("code",null,"数组",-1),Io=t("code",null,"哈希表",-1),Oo=t("code",null,"双指针",-1),jo=t("code",null,"1+",-1),Mo={style:{"text-align":"left"}},Co={style:{"text-align":"center"}},Vo={href:"https://leetcode.cn/problems/number-of-arithmetic-triplets",target:"_blank",rel:"noopener noreferrer"},Ko={href:"https://leetcode.com/problems/number-of-arithmetic-triplets",target:"_blank",rel:"noopener noreferrer"},Lo=t("td",{style:{"text-align":"center"}},"2374",-1),No=t("td",{style:{"text-align":"left"}},"边积分最高的节点",-1),Bo=t("td",{style:{"text-align":"center"}},null,-1),Ro={style:{"text-align":"left"}},So=t("code",null,"图",-1),Yo=t("code",null,"哈希表",-1),Fo={style:{"text-align":"left"}},Go={style:{"text-align":"center"}},Ho={href:"https://leetcode.cn/problems/node-with-highest-edge-score",target:"_blank",rel:"noopener noreferrer"},To={href:"https://leetcode.com/problems/node-with-highest-edge-score",target:"_blank",rel:"noopener noreferrer"},zo=t("td",{style:{"text-align":"center"}},"2395",-1),Ao=t("td",{style:{"text-align":"left"}},"和相等的子数组",-1),Do=t("td",{style:{"text-align":"center"}},null,-1),Jo={style:{"text-align":"left"}},Po=t("code",null,"数组",-1),Qo=t("code",null,"哈希表",-1),Uo={style:{"text-align":"left"}},Wo={style:{"text-align":"center"}},Xo={href:"https://leetcode.cn/problems/find-subarrays-with-equal-sum",target:"_blank",rel:"noopener noreferrer"},Zo={href:"https://leetcode.com/problems/find-subarrays-with-equal-sum",target:"_blank",rel:"noopener noreferrer"},$o=t("td",{style:{"text-align":"center"}},"2399",-1),tn=t("td",{style:{"text-align":"left"}},"检查相同字母间的距离",-1),en=t("td",{style:{"text-align":"center"}},null,-1),on={style:{"text-align":"left"}},nn=t("code",null,"数组",-1),sn=t("code",null,"哈希表",-1),ln=t("code",null,"字符串",-1),an={style:{"text-align":"left"}},rn={style:{"text-align":"center"}},dn={href:"https://leetcode.cn/problems/check-distances-between-same-letters",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://leetcode.com/problems/check-distances-between-same-letters",target:"_blank",rel:"noopener noreferrer"},_n=t("td",{style:{"text-align":"center"}},"2441",-1),hn=t("td",{style:{"text-align":"left"}},"与对应负数同时存在的最大正整数",-1),un=t("td",{style:{"text-align":"center"}},null,-1),pn={style:{"text-align":"left"}},fn=t("code",null,"数组",-1),gn=t("code",null,"哈希表",-1),mn=t("code",null,"双指针",-1),bn=t("code",null,"1+",-1),yn={style:{"text-align":"left"}},xn={style:{"text-align":"center"}},kn={href:"https://leetcode.cn/problems/largest-positive-integer-that-exists-with-its-negative",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative",target:"_blank",rel:"noopener noreferrer"},vn=t("td",{style:{"text-align":"center"}},"2465",-1),En=t("td",{style:{"text-align":"left"}},"不同的平均值数目",-1),qn=t("td",{style:{"text-align":"center"}},null,-1),In={style:{"text-align":"left"}},On=t("code",null,"数组",-1),jn=t("code",null,"哈希表",-1),Mn=t("code",null,"双指针",-1),Cn=t("code",null,"1+",-1),Vn={style:{"text-align":"left"}},Kn={style:{"text-align":"center"}},Ln={href:"https://leetcode.cn/problems/number-of-distinct-averages",target:"_blank",rel:"noopener noreferrer"},Nn={href:"https://leetcode.com/problems/number-of-distinct-averages",target:"_blank",rel:"noopener noreferrer"},Bn=t("td",{style:{"text-align":"center"}},"2824",-1),Rn=t("td",{style:{"text-align":"left"}},"统计和小于目标的下标对数目",-1),Sn=t("td",{style:{"text-align":"center"}},null,-1),Yn={style:{"text-align":"left"}},Fn=t("code",null,"数组",-1),Gn=t("code",null,"双指针",-1),Hn=t("code",null,"二分查找",-1),Tn=t("code",null,"1+",-1),zn={style:{"text-align":"left"}},An={style:{"text-align":"center"}},Dn={href:"https://leetcode.cn/problems/count-pairs-whose-sum-is-less-than-target",target:"_blank",rel:"noopener noreferrer"},Jn={href:"https://leetcode.com/problems/count-pairs-whose-sum-is-less-than-target",target:"_blank",rel:"noopener noreferrer"};function Pn(Qn,Un){const a=r("font"),s=r("RouterLink"),l=r("ExternalLinkIcon");return c(),i("div",null,[p,t("p",null,[e("🟢 "),o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1}),e("  🔖  "),o(s,{to:"/tag/array.html"},{default:n(()=>[f]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[g]),_:1}),e("  🔗 "),t("a",m,[b,o(l)]),e(),t("a",y,[x,o(l)])]),k,_(" prettier-ignore "),t("table",null,[w,t("tbody",null,[t("tr",null,[v,E,t("td",q,[o(s,{to:"/problem/0015.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",I,[o(s,{to:"/tag/array.html"},{default:n(()=>[O]),_:1}),e(),o(s,{to:"/tag/two-pointers.html"},{default:n(()=>[j]),_:1}),e(),o(s,{to:"/tag/sorting.html"},{default:n(()=>[M]),_:1})]),t("td",C,[o(a,{color:"#ffb800"},{default:n(()=>[e("Medium")]),_:1})]),t("td",V,[t("a",K,[e("🀄️"),o(l)]),e(),t("a",L,[e("🔗"),o(l)])])]),t("tr",null,[N,B,t("td",R,[o(s,{to:"/problem/0018.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",S,[o(s,{to:"/tag/array.html"},{default:n(()=>[Y]),_:1}),e(),o(s,{to:"/tag/two-pointers.html"},{default:n(()=>[F]),_:1}),e(),o(s,{to:"/tag/sorting.html"},{default:n(()=>[G]),_:1})]),t("td",H,[o(a,{color:"#ffb800"},{default:n(()=>[e("Medium")]),_:1})]),t("td",T,[t("a",z,[e("🀄️"),o(l)]),e(),t("a",A,[e("🔗"),o(l)])])]),t("tr",null,[D,J,t("td",P,[o(s,{to:"/problem/0167.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Q,[o(s,{to:"/tag/array.html"},{default:n(()=>[U]),_:1}),e(),o(s,{to:"/tag/two-pointers.html"},{default:n(()=>[W]),_:1}),e(),o(s,{to:"/tag/binary-search.html"},{default:n(()=>[X]),_:1})]),t("td",Z,[o(a,{color:"#ffb800"},{default:n(()=>[e("Medium")]),_:1})]),t("td",$,[t("a",tt,[e("🀄️"),o(l)]),e(),t("a",et,[e("🔗"),o(l)])])]),t("tr",null,[ot,nt,st,t("td",lt,[o(s,{to:"/tag/design.html"},{default:n(()=>[at]),_:1}),e(),o(s,{to:"/tag/array.html"},{default:n(()=>[rt]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[dt]),_:1}),e(),ct]),t("td",it,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",_t,[t("a",ht,[e("🀄️"),o(l)]),e(),t("a",ut,[e("🔗"),o(l)])])]),t("tr",null,[pt,ft,t("td",gt,[o(s,{to:"/problem/0560.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",mt,[o(s,{to:"/tag/array.html"},{default:n(()=>[bt]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[yt]),_:1}),e(),o(s,{to:"/tag/prefix-sum.html"},{default:n(()=>[xt]),_:1})]),t("td",kt,[o(a,{color:"#ffb800"},{default:n(()=>[e("Medium")]),_:1})]),t("td",wt,[t("a",vt,[e("🀄️"),o(l)]),e(),t("a",Et,[e("🔗"),o(l)])])]),t("tr",null,[qt,It,Ot,t("td",jt,[o(s,{to:"/tag/tree.html"},{default:n(()=>[Mt]),_:1}),e(),o(s,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ct]),_:1}),e(),o(s,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Vt]),_:1}),e(),Kt]),t("td",Lt,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",Nt,[t("a",Bt,[e("🀄️"),o(l)]),e(),t("a",Rt,[e("🔗"),o(l)])])]),t("tr",null,[St,Yt,Ft,t("td",Gt,[o(s,{to:"/tag/array.html"},{default:n(()=>[Ht]),_:1}),e(),o(s,{to:"/tag/two-pointers.html"},{default:n(()=>[Tt]),_:1}),e(),o(s,{to:"/tag/binary-search.html"},{default:n(()=>[zt]),_:1}),e(),At]),t("td",Dt,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",Jt,[t("a",Pt,[e("🀄️"),o(l)]),e(),t("a",Qt,[e("🔗"),o(l)])])]),t("tr",null,[Ut,Wt,t("td",Xt,[o(s,{to:"/problem/1679.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Zt,[o(s,{to:"/tag/array.html"},{default:n(()=>[$t]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[te]),_:1}),e(),o(s,{to:"/tag/two-pointers.html"},{default:n(()=>[ee]),_:1}),e(),oe]),t("td",ne,[o(a,{color:"#ffb800"},{default:n(()=>[e("Medium")]),_:1})]),t("td",se,[t("a",le,[e("🀄️"),o(l)]),e(),t("a",ae,[e("🔗"),o(l)])])]),t("tr",null,[re,de,ce,t("td",ie,[o(s,{to:"/tag/array.html"},{default:n(()=>[_e]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[he]),_:1})]),t("td",ue,[o(a,{color:"#ffb800"},{default:n(()=>[e("Medium")]),_:1})]),t("td",pe,[t("a",fe,[e("🀄️"),o(l)]),e(),t("a",ge,[e("🔗"),o(l)])])]),t("tr",null,[me,be,ye,t("td",xe,[o(s,{to:"/tag/array.html"},{default:n(()=>[ke]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[we]),_:1}),e(),o(s,{to:"/tag/counting.html"},{default:n(()=>[ve]),_:1})]),t("td",Ee,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",qe,[t("a",Ie,[e("🀄️"),o(l)]),e(),t("a",Oe,[e("🔗"),o(l)])])]),t("tr",null,[je,Me,Ce,t("td",Ve,[o(s,{to:"/tag/array.html"},{default:n(()=>[Ke]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[Le]),_:1}),e(),o(s,{to:"/tag/string.html"},{default:n(()=>[Ne]),_:1}),e(),Be]),t("td",Re,[o(a,{color:"#ffb800"},{default:n(()=>[e("Medium")]),_:1})]),t("td",Se,[t("a",Ye,[e("🀄️"),o(l)]),e(),t("a",Fe,[e("🔗"),o(l)])])]),t("tr",null,[Ge,He,Te,t("td",ze,[o(s,{to:"/tag/array.html"},{default:n(()=>[Ae]),_:1}),e(),o(s,{to:"/tag/two-pointers.html"},{default:n(()=>[De]),_:1})]),t("td",Je,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",Pe,[t("a",Qe,[e("🀄️"),o(l)]),e(),t("a",Ue,[e("🔗"),o(l)])])]),t("tr",null,[We,Xe,Ze,t("td",$e,[o(s,{to:"/tag/bit-manipulation.html"},{default:n(()=>[to]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[eo]),_:1}),e(),o(s,{to:"/tag/string.html"},{default:n(()=>[oo]),_:1}),e(),no]),t("td",so,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",lo,[t("a",ao,[e("🀄️"),o(l)]),e(),t("a",ro,[e("🔗"),o(l)])])]),t("tr",null,[co,io,_o,t("td",ho,[o(s,{to:"/tag/bit-manipulation.html"},{default:n(()=>[uo]),_:1}),e(),o(s,{to:"/tag/array.html"},{default:n(()=>[po]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[fo]),_:1}),e(),go]),t("td",mo,[o(a,{color:"#ff334b"},{default:n(()=>[e("Hard")]),_:1})]),t("td",bo,[t("a",yo,[e("🀄️"),o(l)]),e(),t("a",xo,[e("🔗"),o(l)])])]),t("tr",null,[ko,wo,vo,t("td",Eo,[o(s,{to:"/tag/array.html"},{default:n(()=>[qo]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[Io]),_:1}),e(),o(s,{to:"/tag/two-pointers.html"},{default:n(()=>[Oo]),_:1}),e(),jo]),t("td",Mo,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",Co,[t("a",Vo,[e("🀄️"),o(l)]),e(),t("a",Ko,[e("🔗"),o(l)])])]),t("tr",null,[Lo,No,Bo,t("td",Ro,[o(s,{to:"/tag/graph.html"},{default:n(()=>[So]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[Yo]),_:1})]),t("td",Fo,[o(a,{color:"#ffb800"},{default:n(()=>[e("Medium")]),_:1})]),t("td",Go,[t("a",Ho,[e("🀄️"),o(l)]),e(),t("a",To,[e("🔗"),o(l)])])]),t("tr",null,[zo,Ao,Do,t("td",Jo,[o(s,{to:"/tag/array.html"},{default:n(()=>[Po]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[Qo]),_:1})]),t("td",Uo,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",Wo,[t("a",Xo,[e("🀄️"),o(l)]),e(),t("a",Zo,[e("🔗"),o(l)])])]),t("tr",null,[$o,tn,en,t("td",on,[o(s,{to:"/tag/array.html"},{default:n(()=>[nn]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[sn]),_:1}),e(),o(s,{to:"/tag/string.html"},{default:n(()=>[ln]),_:1})]),t("td",an,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",rn,[t("a",dn,[e("🀄️"),o(l)]),e(),t("a",cn,[e("🔗"),o(l)])])]),t("tr",null,[_n,hn,un,t("td",pn,[o(s,{to:"/tag/array.html"},{default:n(()=>[fn]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[gn]),_:1}),e(),o(s,{to:"/tag/two-pointers.html"},{default:n(()=>[mn]),_:1}),e(),bn]),t("td",yn,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",xn,[t("a",kn,[e("🀄️"),o(l)]),e(),t("a",wn,[e("🔗"),o(l)])])]),t("tr",null,[vn,En,qn,t("td",In,[o(s,{to:"/tag/array.html"},{default:n(()=>[On]),_:1}),e(),o(s,{to:"/tag/hash-table.html"},{default:n(()=>[jn]),_:1}),e(),o(s,{to:"/tag/two-pointers.html"},{default:n(()=>[Mn]),_:1}),e(),Cn]),t("td",Vn,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",Kn,[t("a",Ln,[e("🀄️"),o(l)]),e(),t("a",Nn,[e("🔗"),o(l)])])]),t("tr",null,[Bn,Rn,Sn,t("td",Yn,[o(s,{to:"/tag/array.html"},{default:n(()=>[Fn]),_:1}),e(),o(s,{to:"/tag/two-pointers.html"},{default:n(()=>[Gn]),_:1}),e(),o(s,{to:"/tag/binary-search.html"},{default:n(()=>[Hn]),_:1}),e(),Tn]),t("td",zn,[o(a,{color:"#15bd66"},{default:n(()=>[e("Easy")]),_:1})]),t("td",An,[t("a",Dn,[e("🀄️"),o(l)]),e(),t("a",Jn,[e("🔗"),o(l)])])])])])])}const Xn=d(u,[["render",Pn],["__file","0001.html.vue"]]);export{Xn as default};
