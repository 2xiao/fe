import{_ as a,r as _,o as c,c as i,a as t,d as e,w as l,b as o,f as h}from"./app-5FUup5IZ.js";const r={},u=t("h1",{id:"最短路",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#最短路","aria-hidden":"true"},"#"),o(" 最短路")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),p=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),x=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),H=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),B=t("span",{class:"blue"},"最短路",-1),j=t("code",null,"强连通分量",-1),F=t("code",null,"欧拉回路",-1),K=t("code",null,"双连通分量",-1),R=t("code",null,"并查集",-1),D=t("code",null,"字典树",-1),J=t("code",null,"线段树",-1),O=t("code",null,"树状数组",-1),Q=t("code",null,"后缀数组",-1),T=t("p",null,[t("strong",null,"算法")],-1),U=t("code",null,"枚举",-1),X=t("code",null,"递归",-1),A=t("code",null,"分治",-1),G=t("code",null,"回溯",-1),S=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),lt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ut=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),pt=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),xt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),Ht=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),jt=t("td",{style:{"text-align":"center"}},"399",-1),Ft={style:{"text-align":"left"}},Kt={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Rt={style:{"text-align":"center"}},Dt={style:{"text-align":"left"}},Jt=t("code",null,"深度优先搜索",-1),Ot=t("code",null,"广度优先搜索",-1),Qt=t("code",null,"并查集",-1),Tt=t("code",null,"4+",-1),Ut={style:{"text-align":"left"}},Xt=t("td",{style:{"text-align":"center"}},"499",-1),At={style:{"text-align":"left"}},Gt={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},St=t("td",{style:{"text-align":"center"}},null,-1),Wt={style:{"text-align":"left"}},Yt=t("code",null,"深度优先搜索",-1),Zt=t("code",null,"广度优先搜索",-1),$t=t("code",null,"图",-1),te=t("code",null,"5+",-1),ee={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"505",-1),le={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},ne=t("td",{style:{"text-align":"center"}},null,-1),de={style:{"text-align":"left"}},_e=t("code",null,"深度优先搜索",-1),ae=t("code",null,"广度优先搜索",-1),ce=t("code",null,"图",-1),ie=t("code",null,"4+",-1),he={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"743",-1),ue={style:{"text-align":"left"}},fe={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},ge=t("td",{style:{"text-align":"center"}},null,-1),me={style:{"text-align":"left"}},pe=t("code",null,"深度优先搜索",-1),ye=t("code",null,"广度优先搜索",-1),xe=t("code",null,"图",-1),be=t("code",null,"2+",-1),ke={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"787",-1),ve={style:{"text-align":"left"}},Me={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Ie=t("td",{style:{"text-align":"center"}},null,-1),He={style:{"text-align":"left"}},qe=t("code",null,"深度优先搜索",-1),Le=t("code",null,"广度优先搜索",-1),ze=t("code",null,"图",-1),Ce=t("code",null,"3+",-1),Ve={style:{"text-align":"left"}},Ee=t("td",{style:{"text-align":"center"}},"882",-1),Ne={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},null,-1),je={style:{"text-align":"left"}},Fe=t("code",null,"图",-1),Ke=t("code",null,"最短路",-1),Re=t("code",null,"堆（优先队列）",-1),De={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"1334",-1),Oe={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},Te=t("td",{style:{"text-align":"center"}},null,-1),Ue={style:{"text-align":"left"}},Xe=t("code",null,"图",-1),Ae=t("code",null,"动态规划",-1),Ge=t("code",null,"最短路",-1),Se={style:{"text-align":"left"}},We=t("td",{style:{"text-align":"center"}},"1368",-1),Ye={style:{"text-align":"left"}},Ze={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},null,-1),to={style:{"text-align":"left"}},eo=t("code",null,"广度优先搜索",-1),oo=t("code",null,"图",-1),lo=t("code",null,"数组",-1),so=t("code",null,"3+",-1),no={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"1514",-1),ao={style:{"text-align":"left"}},co={href:"https://leetcode.com/problems/path-with-maximum-probability",target:"_blank",rel:"noopener noreferrer"},io=t("td",{style:{"text-align":"center"}},null,-1),ho={style:{"text-align":"left"}},ro=t("code",null,"图",-1),uo=t("code",null,"数组",-1),fo=t("code",null,"最短路",-1),go=t("code",null,"1+",-1),mo={style:{"text-align":"left"}},po=t("td",{style:{"text-align":"center"}},"1786",-1),yo={style:{"text-align":"left"}},xo={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},bo=t("td",{style:{"text-align":"center"}},null,-1),ko={style:{"text-align":"left"}},wo=t("code",null,"图",-1),vo=t("code",null,"拓扑排序",-1),Mo=t("code",null,"动态规划",-1),Io=t("code",null,"2+",-1),Ho={style:{"text-align":"left"}},qo=t("td",{style:{"text-align":"center"}},"1976",-1),Lo={style:{"text-align":"left"}},zo={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},Co=t("td",{style:{"text-align":"center"}},null,-1),Vo={style:{"text-align":"left"}},Eo=t("code",null,"图",-1),No=t("code",null,"拓扑排序",-1),Po=t("code",null,"动态规划",-1),Bo=t("code",null,"1+",-1),jo={style:{"text-align":"left"}},Fo=t("td",{style:{"text-align":"center"}},"2045",-1),Ko={style:{"text-align":"left"}},Ro={href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},Do=t("td",{style:{"text-align":"center"}},null,-1),Jo={style:{"text-align":"left"}},Oo=t("code",null,"广度优先搜索",-1),Qo=t("code",null,"图",-1),To=t("code",null,"最短路",-1),Uo={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"2093",-1),Ao={style:{"text-align":"left"}},Go={href:"https://leetcode.com/problems/minimum-cost-to-reach-city-with-discounts",target:"_blank",rel:"noopener noreferrer"},So=t("td",{style:{"text-align":"center"}},null,-1),Wo={style:{"text-align":"left"}},Yo=t("code",null,"图",-1),Zo=t("code",null,"最短路",-1),$o=t("code",null,"堆（优先队列）",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"2203",-1),ol={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths",target:"_blank",rel:"noopener noreferrer"},sl=t("td",{style:{"text-align":"center"}},null,-1),nl={style:{"text-align":"left"}},dl=t("code",null,"图",-1),_l=t("code",null,"最短路",-1),al={style:{"text-align":"left"}},cl=t("td",{style:{"text-align":"center"}},"2290",-1),il={style:{"text-align":"left"}},hl={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},rl=t("td",{style:{"text-align":"center"}},null,-1),ul={style:{"text-align":"left"}},fl=t("code",null,"广度优先搜索",-1),gl=t("code",null,"图",-1),ml=t("code",null,"数组",-1),pl=t("code",null,"3+",-1),yl={style:{"text-align":"left"}},xl=t("td",{style:{"text-align":"center"}},"2297",-1),bl={style:{"text-align":"left"}},kl={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},wl=t("td",{style:{"text-align":"center"}},null,-1),vl={style:{"text-align":"left"}},Ml=t("code",null,"栈",-1),Il=t("code",null,"图",-1),Hl=t("code",null,"数组",-1),ql=t("code",null,"3+",-1),Ll={style:{"text-align":"left"}},zl=t("td",{style:{"text-align":"center"}},"2473",-1),Cl={style:{"text-align":"left"}},Vl={href:"https://leetcode.com/problems/minimum-cost-to-buy-apples",target:"_blank",rel:"noopener noreferrer"},El=t("td",{style:{"text-align":"center"}},null,-1),Nl={style:{"text-align":"left"}},Pl=t("code",null,"图",-1),Bl=t("code",null,"数组",-1),jl=t("code",null,"最短路",-1),Fl=t("code",null,"1+",-1),Kl={style:{"text-align":"left"}},Rl=t("td",{style:{"text-align":"center"}},"2577",-1),Dl={style:{"text-align":"left"}},Jl={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Ol=t("td",{style:{"text-align":"center"}},null,-1),Ql={style:{"text-align":"left"}},Tl=t("code",null,"广度优先搜索",-1),Ul=t("code",null,"图",-1),Xl=t("code",null,"数组",-1),Al=t("code",null,"3+",-1),Gl={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"2642",-1),Wl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/design-graph-with-shortest-path-calculator",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),$l={style:{"text-align":"left"}},ts=t("code",null,"图",-1),es=t("code",null,"设计",-1),os=t("code",null,"最短路",-1),ls=t("code",null,"1+",-1),ss={style:{"text-align":"left"}},ns=t("td",{style:{"text-align":"center"}},"2662",-1),ds={style:{"text-align":"left"}},_s={href:"https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads",target:"_blank",rel:"noopener noreferrer"},as=t("td",{style:{"text-align":"center"}},null,-1),cs={style:{"text-align":"left"}},is=t("code",null,"图",-1),hs=t("code",null,"数组",-1),rs=t("code",null,"最短路",-1),us=t("code",null,"1+",-1),fs={style:{"text-align":"left"}},gs=t("td",{style:{"text-align":"center"}},"2699",-1),ms={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/modify-graph-edge-weights",target:"_blank",rel:"noopener noreferrer"},ys=t("td",{style:{"text-align":"center"}},null,-1),xs={style:{"text-align":"left"}},bs=t("code",null,"图",-1),ks=t("code",null,"最短路",-1),ws=t("code",null,"堆（优先队列）",-1),vs={style:{"text-align":"left"}},Ms=t("td",{style:{"text-align":"center"}},"2714",-1),Is={style:{"text-align":"left"}},Hs={href:"https://leetcode.com/problems/find-shortest-path-with-k-hops",target:"_blank",rel:"noopener noreferrer"},qs=t("td",{style:{"text-align":"center"}},null,-1),Ls={style:{"text-align":"left"}},zs=t("code",null,"图",-1),Cs=t("code",null,"最短路",-1),Vs=t("code",null,"堆（优先队列）",-1),Es={style:{"text-align":"left"}},Ns=t("td",{style:{"text-align":"center"}},"2737",-1),Ps={style:{"text-align":"left"}},Bs={href:"https://leetcode.com/problems/find-the-closest-marked-node",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},null,-1),Fs={style:{"text-align":"left"}},Ks=t("code",null,"图",-1),Rs=t("code",null,"数组",-1),Ds=t("code",null,"最短路",-1),Js=t("code",null,"1+",-1),Os={style:{"text-align":"left"}},Qs=t("td",{style:{"text-align":"center"}},"2959",-1),Ts={style:{"text-align":"left"}},Us={href:"https://leetcode.com/problems/number-of-possible-sets-of-closing-branches",target:"_blank",rel:"noopener noreferrer"},Xs=t("td",{style:{"text-align":"center"}},null,-1),As={style:{"text-align":"left"}},Gs=t("code",null,"位运算",-1),Ss=t("code",null,"图",-1),Ws=t("code",null,"枚举",-1),Ys=t("code",null,"2+",-1),Zs={style:{"text-align":"left"}},$s=t("td",{style:{"text-align":"center"}},"2976",-1),tn={style:{"text-align":"left"}},en={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-i",target:"_blank",rel:"noopener noreferrer"},on=t("td",{style:{"text-align":"center"}},null,-1),ln={style:{"text-align":"left"}},sn=t("code",null,"图",-1),nn=t("code",null,"数组",-1),dn=t("code",null,"字符串",-1),_n=t("code",null,"1+",-1),an={style:{"text-align":"left"}},cn=t("td",{style:{"text-align":"center"}},"2977",-1),hn={style:{"text-align":"left"}},rn={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},null,-1),fn={style:{"text-align":"left"}},gn=t("code",null,"图",-1),mn=t("code",null,"字典树",-1),pn=t("code",null,"数组",-1),yn=t("code",null,"3+",-1),xn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"3112",-1),kn={style:{"text-align":"left"}},wn={href:"https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes",target:"_blank",rel:"noopener noreferrer"},vn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},In=t("code",null,"图",-1),Hn=t("code",null,"数组",-1),qn=t("code",null,"最短路",-1),Ln=t("code",null,"1+",-1),zn={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"3123",-1),Vn={style:{"text-align":"left"}},En={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},Nn=t("td",{style:{"text-align":"center"}},null,-1),Pn={style:{"text-align":"left"}},Bn=t("code",null,"深度优先搜索",-1),jn=t("code",null,"广度优先搜索",-1),Fn=t("code",null,"图",-1),Kn=t("code",null,"2+",-1),Rn={style:{"text-align":"left"}},Dn=t("td",{style:{"text-align":"center"}},"3286",-1),Jn={style:{"text-align":"left"}},On={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},null,-1),Tn={style:{"text-align":"left"}},Un=t("code",null,"广度优先搜索",-1),Xn=t("code",null,"图",-1),An=t("code",null,"数组",-1),Gn=t("code",null,"3+",-1),Sn={style:{"text-align":"left"}},Wn=t("td",{style:{"text-align":"center"}},"LCP 35",-1),Yn={style:{"text-align":"left"}},Zn={href:"https://leetcode.cn/problems/DFPeFJ",target:"_blank",rel:"noopener noreferrer"},$n=t("td",{style:{"text-align":"center"}},null,-1),td={style:{"text-align":"left"}},ed=t("code",null,"图",-1),od=t("code",null,"最短路",-1),ld=t("code",null,"堆（优先队列）",-1),sd={style:{"text-align":"left"}},nd=t("td",{style:{"text-align":"center"}},"LCP 56",-1),dd={style:{"text-align":"left"}},_d={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},ad=t("td",{style:{"text-align":"center"}},null,-1),cd={style:{"text-align":"left"}},id=t("code",null,"广度优先搜索",-1),hd=t("code",null,"图",-1),rd=t("code",null,"数组",-1),ud=t("code",null,"3+",-1),fd={style:{"text-align":"left"}},gd=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),md={style:{"text-align":"left"}},pd={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},yd=t("td",{style:{"text-align":"center"}},null,-1),xd={style:{"text-align":"left"}},bd=t("code",null,"深度优先搜索",-1),kd=t("code",null,"广度优先搜索",-1),wd=t("code",null,"并查集",-1),vd=t("code",null,"3+",-1),Md={style:{"text-align":"left"}};function Id(Hd,qd){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return c(),i("div",null,[u,t("details",null,[f,g,t("p",null,[e(s,{to:"/tag/array.html"},{default:l(()=>[m]),_:1}),o(),e(s,{to:"/tag/matrix.html"},{default:l(()=>[p]),_:1}),o(),e(s,{to:"/tag/linked-list.html"},{default:l(()=>[y]),_:1}),o(),e(s,{to:"/tag/doubly-linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(s,{to:"/tag/stack.html"},{default:l(()=>[b]),_:1}),o(),e(s,{to:"/tag/monotonic-stack.html"},{default:l(()=>[k]),_:1}),o(),e(s,{to:"/tag/queue.html"},{default:l(()=>[w]),_:1}),o(),e(s,{to:"/tag/monotonic-queue.html"},{default:l(()=>[v]),_:1}),o(),e(s,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[M]),_:1}),o(),e(s,{to:"/tag/hash-table.html"},{default:l(()=>[I]),_:1}),o(),e(s,{to:"/tag/string.html"},{default:l(()=>[H]),_:1}),o(),e(s,{to:"/tag/string-matching.html"},{default:l(()=>[q]),_:1}),o(),e(s,{to:"/tag/tree.html"},{default:l(()=>[L]),_:1}),o(),e(s,{to:"/tag/binary-tree.html"},{default:l(()=>[z]),_:1}),o(),e(s,{to:"/tag/binary-search-tree.html"},{default:l(()=>[C]),_:1}),o(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:l(()=>[V]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[E]),_:1}),o(),e(s,{to:"/tag/ordered-set.html"},{default:l(()=>[N]),_:1}),o(),e(s,{to:"/tag/topological-sort.html"},{default:l(()=>[P]),_:1}),o(),B,o(),e(s,{to:"/tag/strongly-connected-component.html"},{default:l(()=>[j]),_:1}),o(),e(s,{to:"/tag/eulerian-circuit.html"},{default:l(()=>[F]),_:1}),o(),e(s,{to:"/tag/biconnected-component.html"},{default:l(()=>[K]),_:1}),o(),e(s,{to:"/tag/union-find.html"},{default:l(()=>[R]),_:1}),o(),e(s,{to:"/tag/trie.html"},{default:l(()=>[D]),_:1}),o(),e(s,{to:"/tag/segment-tree.html"},{default:l(()=>[J]),_:1}),o(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[O]),_:1}),o(),e(s,{to:"/tag/suffix-array.html"},{default:l(()=>[Q]),_:1})]),T,t("p",null,[e(s,{to:"/tag/enumeration.html"},{default:l(()=>[U]),_:1}),o(),e(s,{to:"/tag/recursion.html"},{default:l(()=>[X]),_:1}),o(),e(s,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[A]),_:1}),o(),e(s,{to:"/tag/backtracking.html"},{default:l(()=>[G]),_:1}),o(),e(s,{to:"/tag/greedy.html"},{default:l(()=>[S]),_:1}),o(),e(s,{to:"/tag/dynamic-programming.html"},{default:l(()=>[W]),_:1}),o(),e(s,{to:"/tag/sorting.html"},{default:l(()=>[Y]),_:1}),o(),e(s,{to:"/tag/bucket-sort.html"},{default:l(()=>[Z]),_:1}),o(),e(s,{to:"/tag/counting-sort.html"},{default:l(()=>[$]),_:1}),o(),e(s,{to:"/tag/radix-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(s,{to:"/tag/merge-sort.html"},{default:l(()=>[et]),_:1}),o(),e(s,{to:"/tag/quickselect.html"},{default:l(()=>[ot]),_:1}),o(),e(s,{to:"/tag/binary-search.html"},{default:l(()=>[lt]),_:1}),o(),e(s,{to:"/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(s,{to:"/tag/depth-first-search.html"},{default:l(()=>[nt]),_:1}),o(),e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(s,{to:"/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(s,{to:"/tag/bit-manipulation.html"},{default:l(()=>[at]),_:1}),o(),e(s,{to:"/tag/prefix-sum.html"},{default:l(()=>[ct]),_:1}),o(),e(s,{to:"/tag/counting.html"},{default:l(()=>[it]),_:1}),o(),e(s,{to:"/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(s,{to:"/tag/bitmask.html"},{default:l(()=>[rt]),_:1}),o(),e(s,{to:"/tag/hash-function.html"},{default:l(()=>[ut]),_:1}),o(),e(s,{to:"/tag/rolling-hash.html"},{default:l(()=>[ft]),_:1}),o(),e(s,{to:"/tag/line-sweep.html"},{default:l(()=>[gt]),_:1})]),mt,t("p",null,[e(s,{to:"/tag/math.html"},{default:l(()=>[pt]),_:1}),o(),e(s,{to:"/tag/number-theory.html"},{default:l(()=>[yt]),_:1}),o(),e(s,{to:"/tag/geometry.html"},{default:l(()=>[xt]),_:1}),o(),e(s,{to:"/tag/game-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(s,{to:"/tag/simulation.html"},{default:l(()=>[kt]),_:1}),o(),e(s,{to:"/tag/combinatorics.html"},{default:l(()=>[wt]),_:1}),o(),e(s,{to:"/tag/randomized.html"},{default:l(()=>[vt]),_:1}),o(),e(s,{to:"/tag/probability-and-statistics.html"},{default:l(()=>[Mt]),_:1}),o(),e(s,{to:"/tag/reservoir-sampling.html"},{default:l(()=>[It]),_:1}),o(),e(s,{to:"/tag/rejection-sampling.html"},{default:l(()=>[Ht]),_:1}),o(),e(s,{to:"/tag/database.html"},{default:l(()=>[qt]),_:1}),o(),e(s,{to:"/tag/design.html"},{default:l(()=>[Lt]),_:1}),o(),e(s,{to:"/tag/data-stream.html"},{default:l(()=>[zt]),_:1}),o(),e(s,{to:"/tag/brainteaser.html"},{default:l(()=>[Ct]),_:1}),o(),e(s,{to:"/tag/interactive.html"},{default:l(()=>[Vt]),_:1}),o(),e(s,{to:"/tag/iterator.html"},{default:l(()=>[Et]),_:1}),o(),e(s,{to:"/tag/concurrency.html"},{default:l(()=>[Nt]),_:1})])]),Pt,h(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[jt,t("td",Ft,[t("a",Kt,[o("除法求值"),e(n)])]),t("td",Rt,[e(s,{to:"/problem/0399.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Dt,[e(s,{to:"/tag/depth-first-search.html"},{default:l(()=>[Jt]),_:1}),o(),e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[Ot]),_:1}),o(),e(s,{to:"/tag/union-find.html"},{default:l(()=>[Qt]),_:1}),o(),Tt]),t("td",Ut,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xt,t("td",At,[t("a",Gt,[o("迷宫 III"),e(n)])]),St,t("td",Wt,[e(s,{to:"/tag/depth-first-search.html"},{default:l(()=>[Yt]),_:1}),o(),e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[Zt]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[$t]),_:1}),o(),te]),t("td",ee,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[oe,t("td",le,[t("a",se,[o("迷宫 II"),e(n)])]),ne,t("td",de,[e(s,{to:"/tag/depth-first-search.html"},{default:l(()=>[_e]),_:1}),o(),e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[ae]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[ce]),_:1}),o(),ie]),t("td",he,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[re,t("td",ue,[t("a",fe,[o("网络延迟时间"),e(n)])]),ge,t("td",me,[e(s,{to:"/tag/depth-first-search.html"},{default:l(()=>[pe]),_:1}),o(),e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[ye]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[xe]),_:1}),o(),be]),t("td",ke,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[we,t("td",ve,[t("a",Me,[o("K 站中转内最便宜的航班"),e(n)])]),Ie,t("td",He,[e(s,{to:"/tag/depth-first-search.html"},{default:l(()=>[qe]),_:1}),o(),e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[Le]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[ze]),_:1}),o(),Ce]),t("td",Ve,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ee,t("td",Ne,[t("a",Pe,[o("细分图中的可到达节点"),e(n)])]),Be,t("td",je,[e(s,{to:"/tag/graph.html"},{default:l(()=>[Fe]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[Ke]),_:1}),o(),e(s,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[Re]),_:1})]),t("td",De,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Je,t("td",Oe,[t("a",Qe,[o("阈值距离内邻居最少的城市"),e(n)])]),Te,t("td",Ue,[e(s,{to:"/tag/graph.html"},{default:l(()=>[Xe]),_:1}),o(),e(s,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Ae]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[Ge]),_:1})]),t("td",Se,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[We,t("td",Ye,[t("a",Ze,[o("使网格图至少有一条有效路径的最小代价"),e(n)])]),$e,t("td",to,[e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[eo]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[oo]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[lo]),_:1}),o(),so]),t("td",no,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_o,t("td",ao,[t("a",co,[o("概率最大的路径"),e(n)])]),io,t("td",ho,[e(s,{to:"/tag/graph.html"},{default:l(()=>[ro]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[uo]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[fo]),_:1}),o(),go]),t("td",mo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[po,t("td",yo,[t("a",xo,[o("从第一个节点出发到最后一个节点的受限路径数"),e(n)])]),bo,t("td",ko,[e(s,{to:"/tag/graph.html"},{default:l(()=>[wo]),_:1}),o(),e(s,{to:"/tag/topological-sort.html"},{default:l(()=>[vo]),_:1}),o(),e(s,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Mo]),_:1}),o(),Io]),t("td",Ho,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qo,t("td",Lo,[t("a",zo,[o("到达目的地的方案数"),e(n)])]),Co,t("td",Vo,[e(s,{to:"/tag/graph.html"},{default:l(()=>[Eo]),_:1}),o(),e(s,{to:"/tag/topological-sort.html"},{default:l(()=>[No]),_:1}),o(),e(s,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Po]),_:1}),o(),Bo]),t("td",jo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fo,t("td",Ko,[t("a",Ro,[o("到达目的地的第二短时间"),e(n)])]),Do,t("td",Jo,[e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[Oo]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[Qo]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[To]),_:1})]),t("td",Uo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Xo,t("td",Ao,[t("a",Go,[o("前往目标城市的最小费用"),e(n)])]),So,t("td",Wo,[e(s,{to:"/tag/graph.html"},{default:l(()=>[Yo]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[Zo]),_:1}),o(),e(s,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[$o]),_:1})]),t("td",tl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[el,t("td",ol,[t("a",ll,[o("得到要求路径的最小带权子图"),e(n)])]),sl,t("td",nl,[e(s,{to:"/tag/graph.html"},{default:l(()=>[dl]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[_l]),_:1})]),t("td",al,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[cl,t("td",il,[t("a",hl,[o("到达角落需要移除障碍物的最小数目"),e(n)])]),rl,t("td",ul,[e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[fl]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[gl]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[ml]),_:1}),o(),pl]),t("td",yl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xl,t("td",bl,[t("a",kl,[o("跳跃游戏 VIII"),e(n)])]),wl,t("td",vl,[e(s,{to:"/tag/stack.html"},{default:l(()=>[Ml]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[Il]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[Hl]),_:1}),o(),ql]),t("td",Ll,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zl,t("td",Cl,[t("a",Vl,[o("购买苹果的最低成本"),e(n)])]),El,t("td",Nl,[e(s,{to:"/tag/graph.html"},{default:l(()=>[Pl]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[Bl]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[jl]),_:1}),o(),Fl]),t("td",Kl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Rl,t("td",Dl,[t("a",Jl,[o("在网格图中访问一个格子的最少时间"),e(n)])]),Ol,t("td",Ql,[e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[Tl]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[Ul]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[Xl]),_:1}),o(),Al]),t("td",Gl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Sl,t("td",Wl,[t("a",Yl,[o("设计可以求最短路径的图类"),e(n)])]),Zl,t("td",$l,[e(s,{to:"/tag/graph.html"},{default:l(()=>[ts]),_:1}),o(),e(s,{to:"/tag/design.html"},{default:l(()=>[es]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[os]),_:1}),o(),ls]),t("td",ss,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ns,t("td",ds,[t("a",_s,[o("前往目标的最小代价"),e(n)])]),as,t("td",cs,[e(s,{to:"/tag/graph.html"},{default:l(()=>[is]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[hs]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[rs]),_:1}),o(),us]),t("td",fs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gs,t("td",ms,[t("a",ps,[o("修改图中的边权"),e(n)])]),ys,t("td",xs,[e(s,{to:"/tag/graph.html"},{default:l(()=>[bs]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[ks]),_:1}),o(),e(s,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[ws]),_:1})]),t("td",vs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ms,t("td",Is,[t("a",Hs,[o("找到 K 次跨越的最短路径"),e(n)])]),qs,t("td",Ls,[e(s,{to:"/tag/graph.html"},{default:l(()=>[zs]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[Cs]),_:1}),o(),e(s,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[Vs]),_:1})]),t("td",Es,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ns,t("td",Ps,[t("a",Bs,[o("找到最近的标记节点"),e(n)])]),js,t("td",Fs,[e(s,{to:"/tag/graph.html"},{default:l(()=>[Ks]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[Rs]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[Ds]),_:1}),o(),Js]),t("td",Os,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Qs,t("td",Ts,[t("a",Us,[o("关闭分部的可行集合数目"),e(n)])]),Xs,t("td",As,[e(s,{to:"/tag/bit-manipulation.html"},{default:l(()=>[Gs]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[Ss]),_:1}),o(),e(s,{to:"/tag/enumeration.html"},{default:l(()=>[Ws]),_:1}),o(),Ys]),t("td",Zs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$s,t("td",tn,[t("a",en,[o("转换字符串的最小成本 I"),e(n)])]),on,t("td",ln,[e(s,{to:"/tag/graph.html"},{default:l(()=>[sn]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[nn]),_:1}),o(),e(s,{to:"/tag/string.html"},{default:l(()=>[dn]),_:1}),o(),_n]),t("td",an,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[cn,t("td",hn,[t("a",rn,[o("转换字符串的最小成本 II"),e(n)])]),un,t("td",fn,[e(s,{to:"/tag/graph.html"},{default:l(()=>[gn]),_:1}),o(),e(s,{to:"/tag/trie.html"},{default:l(()=>[mn]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[pn]),_:1}),o(),yn]),t("td",xn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bn,t("td",kn,[t("a",wn,[o("访问消失节点的最少时间"),e(n)])]),vn,t("td",Mn,[e(s,{to:"/tag/graph.html"},{default:l(()=>[In]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[Hn]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[qn]),_:1}),o(),Ln]),t("td",zn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Cn,t("td",Vn,[t("a",En,[o("最短路径中的边"),e(n)])]),Nn,t("td",Pn,[e(s,{to:"/tag/depth-first-search.html"},{default:l(()=>[Bn]),_:1}),o(),e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[jn]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[Fn]),_:1}),o(),Kn]),t("td",Rn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Dn,t("td",Jn,[t("a",On,[o("穿越网格图的安全路径"),e(n)])]),Qn,t("td",Tn,[e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[Un]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[Xn]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[An]),_:1}),o(),Gn]),t("td",Sn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wn,t("td",Yn,[t("a",Zn,[o("电动车游城市"),e(n)])]),$n,t("td",td,[e(s,{to:"/tag/graph.html"},{default:l(()=>[ed]),_:1}),o(),e(s,{to:"/tag/shortest-path.html"},{default:l(()=>[od]),_:1}),o(),e(s,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[ld]),_:1})]),t("td",sd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[nd,t("td",dd,[t("a",_d,[o("信物传送"),e(n)])]),ad,t("td",cd,[e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[id]),_:1}),o(),e(s,{to:"/tag/graph.html"},{default:l(()=>[hd]),_:1}),o(),e(s,{to:"/tag/array.html"},{default:l(()=>[rd]),_:1}),o(),ud]),t("td",fd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gd,t("td",md,[t("a",pd,[o("计算除法"),e(n)])]),yd,t("td",xd,[e(s,{to:"/tag/depth-first-search.html"},{default:l(()=>[bd]),_:1}),o(),e(s,{to:"/tag/breadth-first-search.html"},{default:l(()=>[kd]),_:1}),o(),e(s,{to:"/tag/union-find.html"},{default:l(()=>[wd]),_:1}),o(),vd]),t("td",Md,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const zd=a(r,[["render",Id],["__file","shortest-path.html.vue"]]);export{zd as default};
