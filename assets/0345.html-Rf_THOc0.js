import{_ as r,r as l,o as i,c as u,a as n,b as s,d as t,w as e,f as d,e as p}from"./app-pBQRj29c.js";const k={},h=n("h1",{id:"_345-反转字符串中的元音字母",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_345-反转字符串中的元音字母","aria-hidden":"true"},"#"),s(" 345. 反转字符串中的元音字母")],-1),_=n("code",null,"双指针",-1),g=n("code",null,"字符串",-1),m={href:"https://leetcode.cn/problems/reverse-vowels-of-a-string",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"力扣",-1),v={href:"https://leetcode.com/problems/reverse-vowels-of-a-string",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"LeetCode",-1),y=p('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given a string <code>s</code>, reverse only all the vowels in the string and return it.</p><p>The vowels are <code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, and <code>&#39;u&#39;</code>, and they can appear in both lower and upper cases, more than once.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: s = &quot;hello&quot;</p><p>Output: &quot;holle&quot;</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: s = &quot;leetcode&quot;</p><p>Output: &quot;leotcede&quot;</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= s.length &lt;= 3 * 105</code></li><li><code>s</code> consist of <strong>printable ASCII</strong> characters.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>题目要求我们反转字符串中的元音字母。需要注意字母大小写。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2>',12),x=p(`<h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">s</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">reverseVowels</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> right <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isVowel</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			left<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isVowel</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			right<span class="token operator">--</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">let</span> temp <span class="token operator">=</span> s<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
			s<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
			s<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
			left<span class="token operator">++</span><span class="token punctuation">;</span>
			right<span class="token operator">--</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">isVowel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	i <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> i <span class="token operator">==</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token string">&#39;e&#39;</span> <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token string">&#39;i&#39;</span> <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token string">&#39;o&#39;</span> <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token string">&#39;u&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,3),w=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"left"}},"难度"),n("th",{style:{"text-align":"center"}},"力扣")])],-1),q=n("td",{style:{"text-align":"center"}},"344",-1),V=n("td",{style:{"text-align":"left"}},"反转字符串",-1),C={style:{"text-align":"center"}},E={style:{"text-align":"left"}},I=n("code",null,"双指针",-1),L=n("code",null,"字符串",-1),N=n("td",{style:{"text-align":"left"}},"🟢",-1),j={style:{"text-align":"center"}},B={href:"https://leetcode.cn/problems/reverse-string",target:"_blank",rel:"noopener noreferrer"},O={href:"https://leetcode.com/problems/reverse-string",target:"_blank",rel:"noopener noreferrer"},R=n("td",{style:{"text-align":"center"}},"1119",-1),S=n("td",{style:{"text-align":"left"}},"删去字符串中的元音 🔒",-1),T=n("td",{style:{"text-align":"center"}},null,-1),A={style:{"text-align":"left"}},G=n("code",null,"字符串",-1),z=n("td",{style:{"text-align":"left"}},"🟢",-1),D={style:{"text-align":"center"}},F={href:"https://leetcode.cn/problems/remove-vowels-from-a-string",target:"_blank",rel:"noopener noreferrer"},H={href:"https://leetcode.com/problems/remove-vowels-from-a-string",target:"_blank",rel:"noopener noreferrer"},J=n("td",{style:{"text-align":"center"}},"2785",-1),K=n("td",{style:{"text-align":"left"}},"将字符串中的元音字母排序",-1),M=n("td",{style:{"text-align":"center"}},null,-1),P={style:{"text-align":"left"}},Q=n("code",null,"字符串",-1),U=n("code",null,"排序",-1),W=n("td",{style:{"text-align":"left"}},"🟠",-1),X={style:{"text-align":"center"}},Y={href:"https://leetcode.cn/problems/sort-vowels-in-a-string",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://leetcode.com/problems/sort-vowels-in-a-string",target:"_blank",rel:"noopener noreferrer"},$=n("td",{style:{"text-align":"center"}},"2810",-1),nn=n("td",{style:{"text-align":"left"}},"故障键盘",-1),sn=n("td",{style:{"text-align":"center"}},null,-1),tn={style:{"text-align":"left"}},en=n("code",null,"字符串",-1),an=n("code",null,"模拟",-1),on=n("td",{style:{"text-align":"left"}},"🟢",-1),ln={style:{"text-align":"center"}},pn={href:"https://leetcode.cn/problems/faulty-keyboard",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://leetcode.com/problems/faulty-keyboard",target:"_blank",rel:"noopener noreferrer"};function rn(un,dn){const c=l("font"),a=l("RouterLink"),o=l("ExternalLinkIcon");return i(),u("div",null,[h,n("p",null,[s("🟢 "),t(c,{color:"#15bd66"},{default:e(()=>[s("Easy")]),_:1}),s("  🔖  "),t(a,{to:"/tag/two-pointers.html"},{default:e(()=>[_]),_:1}),s(),t(a,{to:"/tag/string.html"},{default:e(()=>[g]),_:1}),s("  🔗 "),n("a",m,[f,t(o)]),s(),n("a",v,[b,t(o)])]),y,n("p",null,[s("这一题的解题思路是用 2 个指针，指针对撞的思路，来不断交换首尾元素，即可。这一题和 "),t(a,{to:"/problem/0344.html"},{default:e(()=>[s("第 344 题")]),_:1}),s(" 思路一样。")]),x,d(" prettier-ignore "),n("table",null,[w,n("tbody",null,[n("tr",null,[q,V,n("td",C,[t(a,{to:"/problem/0344.html"},{default:e(()=>[s("[✓]")]),_:1})]),n("td",E,[t(a,{to:"/tag/two-pointers.html"},{default:e(()=>[I]),_:1}),s(),t(a,{to:"/tag/string.html"},{default:e(()=>[L]),_:1})]),N,n("td",j,[n("a",B,[s("🀄️"),t(o)]),s(),n("a",O,[s("🔗"),t(o)])])]),n("tr",null,[R,S,T,n("td",A,[t(a,{to:"/tag/string.html"},{default:e(()=>[G]),_:1})]),z,n("td",D,[n("a",F,[s("🀄️"),t(o)]),s(),n("a",H,[s("🔗"),t(o)])])]),n("tr",null,[J,K,M,n("td",P,[t(a,{to:"/tag/string.html"},{default:e(()=>[Q]),_:1}),s(),t(a,{to:"/tag/sorting.html"},{default:e(()=>[U]),_:1})]),W,n("td",X,[n("a",Y,[s("🀄️"),t(o)]),s(),n("a",Z,[s("🔗"),t(o)])])]),n("tr",null,[$,nn,sn,n("td",tn,[t(a,{to:"/tag/string.html"},{default:e(()=>[en]),_:1}),s(),t(a,{to:"/tag/simulation.html"},{default:e(()=>[an]),_:1})]),on,n("td",ln,[n("a",pn,[s("🀄️"),t(o)]),s(),n("a",cn,[s("🔗"),t(o)])])])])])])}const hn=r(k,[["render",rn],["__file","0345.html.vue"]]);export{hn as default};
