import{_ as r,r as _,o as i,c,a as t,b as e,w as o,d as l,f as a}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"二叉树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#二叉树","aria-hidden":"true"},"#"),l(" 二叉树")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),b=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),E=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),z=t("code",null,"字符串",-1),O=t("code",null,"字符串匹配",-1),q=t("code",null,"树",-1),j=t("span",{class:"blue"},"二叉树",-1),H=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),V=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),D=t("code",null,"递归",-1),Z=t("code",null,"分治",-1),A=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),rt=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),bt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),Et=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),zt=t("code",null,"拒绝采样",-1),Ot=t("code",null,"数据库",-1),qt=t("code",null,"设计",-1),jt=t("code",null,"数据流",-1),Ht=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"94",-1),Vt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Rt={href:"/problem/0094",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"left"}},Gt=t("code",null,"栈",-1),Yt=t("code",null,"树",-1),Qt=t("code",null,"深度优先搜索",-1),St=t("code",null,"1+",-1),Dt={style:{"text-align":"left"}},Zt=t("td",{style:{"text-align":"center"}},"95",-1),At={style:{"text-align":"left"}},Ft={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"center"}},Xt={href:"/problem/0095",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"树",-1),ee=t("code",null,"二叉搜索树",-1),le=t("code",null,"动态规划",-1),oe=t("code",null,"2+",-1),ne={style:{"text-align":"left"}},se=t("td",{style:{"text-align":"center"}},"96",-1),de={style:{"text-align":"left"}},_e={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},re={style:{"text-align":"center"}},ie={href:"/problem/0096",target:"_blank",rel:"noopener noreferrer"},ce={style:{"text-align":"left"}},ae=t("code",null,"树",-1),he=t("code",null,"二叉搜索树",-1),ue=t("code",null,"数学",-1),fe=t("code",null,"2+",-1),ge={style:{"text-align":"left"}},me=t("td",{style:{"text-align":"center"}},"98",-1),ye={style:{"text-align":"left"}},be={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"center"}},pe={href:"/problem/0098",target:"_blank",rel:"noopener noreferrer"},ke={style:{"text-align":"left"}},Me=t("code",null,"树",-1),ve=t("code",null,"深度优先搜索",-1),Ie=t("code",null,"二叉搜索树",-1),Ee=t("code",null,"1+",-1),we={style:{"text-align":"left"}},ze=t("td",{style:{"text-align":"center"}},"99",-1),Oe={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},je={style:{"text-align":"center"}},He={href:"/problem/0099",target:"_blank",rel:"noopener noreferrer"},Le={style:{"text-align":"left"}},Ce=t("code",null,"树",-1),Ne=t("code",null,"深度优先搜索",-1),Pe=t("code",null,"二叉搜索树",-1),Ke=t("code",null,"1+",-1),Be={style:{"text-align":"left"}},Ve=t("td",{style:{"text-align":"center"}},"100",-1),Te={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Re={style:{"text-align":"center"}},We={href:"/problem/0100",target:"_blank",rel:"noopener noreferrer"},Ge={style:{"text-align":"left"}},Ye=t("code",null,"树",-1),Qe=t("code",null,"深度优先搜索",-1),Se=t("code",null,"广度优先搜索",-1),De=t("code",null,"1+",-1),Ze={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"101",-1),Fe={style:{"text-align":"left"}},Je={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Xe={style:{"text-align":"center"}},$e={href:"/problem/0101",target:"_blank",rel:"noopener noreferrer"},tl={style:{"text-align":"left"}},el=t("code",null,"树",-1),ll=t("code",null,"深度优先搜索",-1),ol=t("code",null,"广度优先搜索",-1),nl=t("code",null,"1+",-1),sl={style:{"text-align":"left"}},dl=t("td",{style:{"text-align":"center"}},"102",-1),_l={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},il={style:{"text-align":"center"}},cl={href:"/problem/0102",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"left"}},hl=t("code",null,"树",-1),ul=t("code",null,"广度优先搜索",-1),fl=t("code",null,"二叉树",-1),gl={style:{"text-align":"left"}},ml=t("td",{style:{"text-align":"center"}},"103",-1),yl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},xl={style:{"text-align":"center"}},pl={href:"/problem/0103",target:"_blank",rel:"noopener noreferrer"},kl={style:{"text-align":"left"}},Ml=t("code",null,"树",-1),vl=t("code",null,"广度优先搜索",-1),Il=t("code",null,"二叉树",-1),El={style:{"text-align":"left"}},wl=t("td",{style:{"text-align":"center"}},"104",-1),zl={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},ql={style:{"text-align":"center"}},jl={href:"/problem/0104",target:"_blank",rel:"noopener noreferrer"},Hl={style:{"text-align":"left"}},Ll=t("code",null,"树",-1),Cl=t("code",null,"深度优先搜索",-1),Nl=t("code",null,"广度优先搜索",-1),Pl=t("code",null,"1+",-1),Kl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"105",-1),Vl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ul={style:{"text-align":"center"}},Rl={href:"/problem/0105",target:"_blank",rel:"noopener noreferrer"},Wl={style:{"text-align":"left"}},Gl=t("code",null,"树",-1),Yl=t("code",null,"数组",-1),Ql=t("code",null,"哈希表",-1),Sl=t("code",null,"2+",-1),Dl={style:{"text-align":"left"}},Zl=t("td",{style:{"text-align":"center"}},"106",-1),Al={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Jl={style:{"text-align":"center"}},Xl={href:"/problem/0106",target:"_blank",rel:"noopener noreferrer"},$l={style:{"text-align":"left"}},to=t("code",null,"树",-1),eo=t("code",null,"数组",-1),lo=t("code",null,"哈希表",-1),oo=t("code",null,"2+",-1),no={style:{"text-align":"left"}},so=t("td",{style:{"text-align":"center"}},"107",-1),_o={style:{"text-align":"left"}},ro={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},io={style:{"text-align":"center"}},co={href:"/problem/0107",target:"_blank",rel:"noopener noreferrer"},ao={style:{"text-align":"left"}},ho=t("code",null,"树",-1),uo=t("code",null,"广度优先搜索",-1),fo=t("code",null,"二叉树",-1),go={style:{"text-align":"left"}},mo=t("td",{style:{"text-align":"center"}},"108",-1),yo={style:{"text-align":"left"}},bo={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},xo={style:{"text-align":"center"}},po={href:"/problem/0108",target:"_blank",rel:"noopener noreferrer"},ko={style:{"text-align":"left"}},Mo=t("code",null,"树",-1),vo=t("code",null,"二叉搜索树",-1),Io=t("code",null,"数组",-1),Eo=t("code",null,"2+",-1),wo={style:{"text-align":"left"}},zo=t("td",{style:{"text-align":"center"}},"109",-1),Oo={style:{"text-align":"left"}},qo={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},jo={style:{"text-align":"center"}},Ho={href:"/problem/0109",target:"_blank",rel:"noopener noreferrer"},Lo={style:{"text-align":"left"}},Co=t("code",null,"树",-1),No=t("code",null,"二叉搜索树",-1),Po=t("code",null,"链表",-1),Ko=t("code",null,"2+",-1),Bo={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"110",-1),To={style:{"text-align":"left"}},Uo={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ro={style:{"text-align":"center"}},Wo={href:"/problem/0110",target:"_blank",rel:"noopener noreferrer"},Go={style:{"text-align":"left"}},Yo=t("code",null,"树",-1),Qo=t("code",null,"深度优先搜索",-1),So=t("code",null,"二叉树",-1),Do={style:{"text-align":"left"}},Zo=t("td",{style:{"text-align":"center"}},"111",-1),Ao={style:{"text-align":"left"}},Fo={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jo={style:{"text-align":"center"}},Xo={href:"/problem/0111",target:"_blank",rel:"noopener noreferrer"},$o={style:{"text-align":"left"}},tn=t("code",null,"树",-1),en=t("code",null,"深度优先搜索",-1),ln=t("code",null,"广度优先搜索",-1),on=t("code",null,"1+",-1),nn={style:{"text-align":"left"}},sn=t("td",{style:{"text-align":"center"}},"112",-1),dn={style:{"text-align":"left"}},_n={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},rn={style:{"text-align":"center"}},cn={href:"/problem/0112",target:"_blank",rel:"noopener noreferrer"},an={style:{"text-align":"left"}},hn=t("code",null,"树",-1),un=t("code",null,"深度优先搜索",-1),fn=t("code",null,"广度优先搜索",-1),gn=t("code",null,"1+",-1),mn={style:{"text-align":"left"}},yn=t("td",{style:{"text-align":"center"}},"113",-1),bn={style:{"text-align":"left"}},xn={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},pn={style:{"text-align":"center"}},kn={href:"/problem/0113",target:"_blank",rel:"noopener noreferrer"},Mn={style:{"text-align":"left"}},vn=t("code",null,"树",-1),In=t("code",null,"深度优先搜索",-1),En=t("code",null,"回溯",-1),wn=t("code",null,"1+",-1),zn={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"center"}},"114",-1),qn={style:{"text-align":"left"}},jn={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},Hn={style:{"text-align":"center"}},Ln={href:"/problem/0114",target:"_blank",rel:"noopener noreferrer"},Cn={style:{"text-align":"left"}},Nn=t("code",null,"栈",-1),Pn=t("code",null,"树",-1),Kn=t("code",null,"深度优先搜索",-1),Bn=t("code",null,"2+",-1),Vn={style:{"text-align":"left"}},Tn=t("td",{style:{"text-align":"center"}},"116",-1),Un={style:{"text-align":"left"}},Rn={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},Wn={style:{"text-align":"center"}},Gn={href:"/problem/0116",target:"_blank",rel:"noopener noreferrer"},Yn={style:{"text-align":"left"}},Qn=t("code",null,"树",-1),Sn=t("code",null,"深度优先搜索",-1),Dn=t("code",null,"广度优先搜索",-1),Zn=t("code",null,"2+",-1),An={style:{"text-align":"left"}},Fn=t("td",{style:{"text-align":"center"}},"117",-1),Jn={style:{"text-align":"left"}},Xn={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},$n={style:{"text-align":"center"}},ts={href:"/problem/0117",target:"_blank",rel:"noopener noreferrer"},es={style:{"text-align":"left"}},ls=t("code",null,"树",-1),os=t("code",null,"深度优先搜索",-1),ns=t("code",null,"广度优先搜索",-1),ss=t("code",null,"2+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"124",-1),rs={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},cs={style:{"text-align":"center"}},as={href:"/problem/0124",target:"_blank",rel:"noopener noreferrer"},hs={style:{"text-align":"left"}},us=t("code",null,"树",-1),fs=t("code",null,"深度优先搜索",-1),gs=t("code",null,"动态规划",-1),ms=t("code",null,"1+",-1),ys={style:{"text-align":"left"}},bs=t("td",{style:{"text-align":"center"}},"129",-1),xs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},ks={style:{"text-align":"center"}},Ms={href:"/problem/0129",target:"_blank",rel:"noopener noreferrer"},vs={style:{"text-align":"left"}},Is=t("code",null,"树",-1),Es=t("code",null,"深度优先搜索",-1),ws=t("code",null,"二叉树",-1),zs={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"144",-1),qs={style:{"text-align":"left"}},js={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Hs={style:{"text-align":"center"}},Ls={href:"/problem/0144",target:"_blank",rel:"noopener noreferrer"},Cs={style:{"text-align":"left"}},Ns=t("code",null,"栈",-1),Ps=t("code",null,"树",-1),Ks=t("code",null,"深度优先搜索",-1),Bs=t("code",null,"1+",-1),Vs={style:{"text-align":"left"}},Ts=t("td",{style:{"text-align":"center"}},"145",-1),Us={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ws={style:{"text-align":"center"}},Gs={href:"/problem/0145",target:"_blank",rel:"noopener noreferrer"},Ys={style:{"text-align":"left"}},Qs=t("code",null,"栈",-1),Ss=t("code",null,"树",-1),Ds=t("code",null,"深度优先搜索",-1),Zs=t("code",null,"1+",-1),As={style:{"text-align":"left"}},Fs=t("td",{style:{"text-align":"center"}},"156",-1),Js={style:{"text-align":"left"}},Xs={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},$s={style:{"text-align":"center"}},td={href:"/problem/0156",target:"_blank",rel:"noopener noreferrer"},ed={style:{"text-align":"left"}},ld=t("code",null,"树",-1),od=t("code",null,"深度优先搜索",-1),nd=t("code",null,"二叉树",-1),sd={style:{"text-align":"left"}},dd=t("td",{style:{"text-align":"center"}},"173",-1),_d={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},id={style:{"text-align":"center"}},cd={href:"/problem/0173",target:"_blank",rel:"noopener noreferrer"},ad={style:{"text-align":"left"}},hd=t("code",null,"栈",-1),ud=t("code",null,"树",-1),fd=t("code",null,"设计",-1),gd=t("code",null,"3+",-1),md={style:{"text-align":"left"}},yd=t("td",{style:{"text-align":"center"}},"199",-1),bd={style:{"text-align":"left"}},xd={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},pd={style:{"text-align":"center"}},kd={href:"/problem/0199",target:"_blank",rel:"noopener noreferrer"},Md={style:{"text-align":"left"}},vd=t("code",null,"树",-1),Id=t("code",null,"深度优先搜索",-1),Ed=t("code",null,"广度优先搜索",-1),wd=t("code",null,"1+",-1),zd={style:{"text-align":"left"}},Od=t("td",{style:{"text-align":"center"}},"222",-1),qd={style:{"text-align":"left"}},jd={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},Hd={style:{"text-align":"center"}},Ld={href:"/problem/0222",target:"_blank",rel:"noopener noreferrer"},Cd={style:{"text-align":"left"}},Nd=t("code",null,"位运算",-1),Pd=t("code",null,"树",-1),Kd=t("code",null,"二分查找",-1),Bd=t("code",null,"1+",-1),Vd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"226",-1),Ud={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wd={style:{"text-align":"center"}},Gd={href:"/problem/0226",target:"_blank",rel:"noopener noreferrer"},Yd={style:{"text-align":"left"}},Qd=t("code",null,"树",-1),Sd=t("code",null,"深度优先搜索",-1),Dd=t("code",null,"广度优先搜索",-1),Zd=t("code",null,"1+",-1),Ad={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"230",-1),Jd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},$d={style:{"text-align":"center"}},t_={href:"/problem/0230",target:"_blank",rel:"noopener noreferrer"},e_={style:{"text-align":"left"}},l_=t("code",null,"树",-1),o_=t("code",null,"深度优先搜索",-1),n_=t("code",null,"二叉搜索树",-1),s_=t("code",null,"1+",-1),d_={style:{"text-align":"left"}},__=t("td",{style:{"text-align":"center"}},"235",-1),r_={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},c_={style:{"text-align":"center"}},a_={href:"/problem/0235",target:"_blank",rel:"noopener noreferrer"},h_={style:{"text-align":"left"}},u_=t("code",null,"树",-1),f_=t("code",null,"深度优先搜索",-1),g_=t("code",null,"二叉搜索树",-1),m_=t("code",null,"1+",-1),y_={style:{"text-align":"left"}},b_=t("td",{style:{"text-align":"center"}},"236",-1),x_={style:{"text-align":"left"}},p_={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},k_={style:{"text-align":"center"}},M_={href:"/problem/0236",target:"_blank",rel:"noopener noreferrer"},v_={style:{"text-align":"left"}},I_=t("code",null,"树",-1),E_=t("code",null,"深度优先搜索",-1),w_=t("code",null,"二叉树",-1),z_={style:{"text-align":"left"}},O_=t("td",{style:{"text-align":"center"}},"250",-1),q_={style:{"text-align":"left"}},j_={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},null,-1),L_={style:{"text-align":"left"}},C_=t("code",null,"树",-1),N_=t("code",null,"深度优先搜索",-1),P_=t("code",null,"二叉树",-1),K_={style:{"text-align":"left"}},B_=t("td",{style:{"text-align":"center"}},"255",-1),V_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},U_=t("td",{style:{"text-align":"center"}},null,-1),R_={style:{"text-align":"left"}},W_=t("code",null,"栈",-1),G_=t("code",null,"树",-1),Y_=t("code",null,"二叉搜索树",-1),Q_=t("code",null,"4+",-1),S_={style:{"text-align":"left"}},D_=t("td",{style:{"text-align":"center"}},"257",-1),Z_={style:{"text-align":"left"}},A_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},F_={style:{"text-align":"center"}},J_={href:"/problem/0257",target:"_blank",rel:"noopener noreferrer"},X_={style:{"text-align":"left"}},$_=t("code",null,"树",-1),tr=t("code",null,"深度优先搜索",-1),er=t("code",null,"字符串",-1),lr=t("code",null,"2+",-1),or={style:{"text-align":"left"}},nr=t("td",{style:{"text-align":"center"}},"270",-1),sr={style:{"text-align":"left"}},dr={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},_r=t("td",{style:{"text-align":"center"}},null,-1),rr={style:{"text-align":"left"}},ir=t("code",null,"树",-1),cr=t("code",null,"深度优先搜索",-1),ar=t("code",null,"二叉搜索树",-1),hr=t("code",null,"2+",-1),ur={style:{"text-align":"left"}},fr=t("td",{style:{"text-align":"center"}},"272",-1),gr={style:{"text-align":"left"}},mr={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},yr=t("td",{style:{"text-align":"center"}},null,-1),br={style:{"text-align":"left"}},xr=t("code",null,"栈",-1),pr=t("code",null,"树",-1),kr=t("code",null,"深度优先搜索",-1),Mr=t("code",null,"4+",-1),vr={style:{"text-align":"left"}},Ir=t("td",{style:{"text-align":"center"}},"285",-1),Er={style:{"text-align":"left"}},wr={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},zr=t("td",{style:{"text-align":"center"}},null,-1),Or={style:{"text-align":"left"}},qr=t("code",null,"树",-1),jr=t("code",null,"深度优先搜索",-1),Hr=t("code",null,"二叉搜索树",-1),Lr=t("code",null,"1+",-1),Cr={style:{"text-align":"left"}},Nr=t("td",{style:{"text-align":"center"}},"297",-1),Pr={style:{"text-align":"left"}},Kr={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Br={style:{"text-align":"center"}},Vr={href:"/problem/0297",target:"_blank",rel:"noopener noreferrer"},Tr={style:{"text-align":"left"}},Ur=t("code",null,"树",-1),Rr=t("code",null,"深度优先搜索",-1),Wr=t("code",null,"广度优先搜索",-1),Gr=t("code",null,"3+",-1),Yr={style:{"text-align":"left"}},Qr=t("td",{style:{"text-align":"center"}},"298",-1),Sr={style:{"text-align":"left"}},Dr={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Zr=t("td",{style:{"text-align":"center"}},null,-1),Ar={style:{"text-align":"left"}},Fr=t("code",null,"树",-1),Jr=t("code",null,"深度优先搜索",-1),Xr=t("code",null,"二叉树",-1),$r={style:{"text-align":"left"}},ti=t("td",{style:{"text-align":"center"}},"314",-1),ei={style:{"text-align":"left"}},li={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},oi=t("td",{style:{"text-align":"center"}},null,-1),ni={style:{"text-align":"left"}},si=t("code",null,"树",-1),di=t("code",null,"深度优先搜索",-1),_i=t("code",null,"广度优先搜索",-1),ri=t("code",null,"3+",-1),ii={style:{"text-align":"left"}},ci=t("td",{style:{"text-align":"center"}},"331",-1),ai={style:{"text-align":"left"}},hi={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ui=t("td",{style:{"text-align":"center"}},null,-1),fi={style:{"text-align":"left"}},gi=t("code",null,"栈",-1),mi=t("code",null,"树",-1),yi=t("code",null,"字符串",-1),bi=t("code",null,"1+",-1),xi={style:{"text-align":"left"}},pi=t("td",{style:{"text-align":"center"}},"333",-1),ki={style:{"text-align":"left"}},Mi={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},vi=t("td",{style:{"text-align":"center"}},null,-1),Ii={style:{"text-align":"left"}},Ei=t("code",null,"树",-1),wi=t("code",null,"深度优先搜索",-1),zi=t("code",null,"二叉搜索树",-1),Oi=t("code",null,"2+",-1),qi={style:{"text-align":"left"}},ji=t("td",{style:{"text-align":"center"}},"337",-1),Hi={style:{"text-align":"left"}},Li={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Ci=t("td",{style:{"text-align":"center"}},null,-1),Ni={style:{"text-align":"left"}},Pi=t("code",null,"树",-1),Ki=t("code",null,"深度优先搜索",-1),Bi=t("code",null,"动态规划",-1),Vi=t("code",null,"1+",-1),Ti={style:{"text-align":"left"}},Ui=t("td",{style:{"text-align":"center"}},"366",-1),Ri={style:{"text-align":"left"}},Wi={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gi={style:{"text-align":"center"}},Yi={href:"/problem/0366",target:"_blank",rel:"noopener noreferrer"},Qi={style:{"text-align":"left"}},Si=t("code",null,"树",-1),Di=t("code",null,"深度优先搜索",-1),Zi=t("code",null,"二叉树",-1),Ai={style:{"text-align":"left"}},Fi=t("td",{style:{"text-align":"center"}},"404",-1),Ji={style:{"text-align":"left"}},Xi={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},$i=t("td",{style:{"text-align":"center"}},null,-1),tc={style:{"text-align":"left"}},ec=t("code",null,"树",-1),lc=t("code",null,"深度优先搜索",-1),oc=t("code",null,"广度优先搜索",-1),nc=t("code",null,"1+",-1),sc={style:{"text-align":"left"}},dc=t("td",{style:{"text-align":"center"}},"426",-1),_c={style:{"text-align":"left"}},rc={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ic={style:{"text-align":"center"}},cc={href:"/problem/0426",target:"_blank",rel:"noopener noreferrer"},ac={style:{"text-align":"left"}},hc=t("code",null,"栈",-1),uc=t("code",null,"树",-1),fc=t("code",null,"深度优先搜索",-1),gc=t("code",null,"4+",-1),mc={style:{"text-align":"left"}},yc=t("td",{style:{"text-align":"center"}},"431",-1),bc={style:{"text-align":"left"}},xc={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},pc=t("td",{style:{"text-align":"center"}},null,-1),kc={style:{"text-align":"left"}},Mc=t("code",null,"树",-1),vc=t("code",null,"深度优先搜索",-1),Ic=t("code",null,"广度优先搜索",-1),Ec=t("code",null,"2+",-1),wc={style:{"text-align":"left"}},zc=t("td",{style:{"text-align":"center"}},"437",-1),Oc={style:{"text-align":"left"}},qc={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},jc={style:{"text-align":"center"}},Hc={href:"/problem/0437",target:"_blank",rel:"noopener noreferrer"},Lc={style:{"text-align":"left"}},Cc=t("code",null,"树",-1),Nc=t("code",null,"深度优先搜索",-1),Pc=t("code",null,"二叉树",-1),Kc={style:{"text-align":"left"}},Bc=t("td",{style:{"text-align":"center"}},"449",-1),Vc={style:{"text-align":"left"}},Tc={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Uc=t("td",{style:{"text-align":"center"}},null,-1),Rc={style:{"text-align":"left"}},Wc=t("code",null,"树",-1),Gc=t("code",null,"深度优先搜索",-1),Yc=t("code",null,"广度优先搜索",-1),Qc=t("code",null,"4+",-1),Sc={style:{"text-align":"left"}},Dc=t("td",{style:{"text-align":"center"}},"450",-1),Zc={style:{"text-align":"left"}},Ac={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Fc={style:{"text-align":"center"}},Jc={href:"/problem/0450",target:"_blank",rel:"noopener noreferrer"},Xc={style:{"text-align":"left"}},$c=t("code",null,"树",-1),ta=t("code",null,"二叉搜索树",-1),ea=t("code",null,"二叉树",-1),la={style:{"text-align":"left"}},oa=t("td",{style:{"text-align":"center"}},"501",-1),na={style:{"text-align":"left"}},sa={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},da=t("td",{style:{"text-align":"center"}},null,-1),_a={style:{"text-align":"left"}},ra=t("code",null,"树",-1),ia=t("code",null,"深度优先搜索",-1),ca=t("code",null,"二叉搜索树",-1),aa=t("code",null,"1+",-1),ha={style:{"text-align":"left"}},ua=t("td",{style:{"text-align":"center"}},"508",-1),fa={style:{"text-align":"left"}},ga={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},ma=t("td",{style:{"text-align":"center"}},null,-1),ya={style:{"text-align":"left"}},ba=t("code",null,"树",-1),xa=t("code",null,"深度优先搜索",-1),pa=t("code",null,"哈希表",-1),ka=t("code",null,"1+",-1),Ma={style:{"text-align":"left"}},va=t("td",{style:{"text-align":"center"}},"510",-1),Ia={style:{"text-align":"left"}},Ea={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},wa=t("td",{style:{"text-align":"center"}},null,-1),za={style:{"text-align":"left"}},Oa=t("code",null,"树",-1),qa=t("code",null,"二叉搜索树",-1),ja=t("code",null,"二叉树",-1),Ha={style:{"text-align":"left"}},La=t("td",{style:{"text-align":"center"}},"513",-1),Ca={style:{"text-align":"left"}},Na={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},Ba=t("code",null,"树",-1),Va=t("code",null,"深度优先搜索",-1),Ta=t("code",null,"广度优先搜索",-1),Ua=t("code",null,"1+",-1),Ra={style:{"text-align":"left"}},Wa=t("td",{style:{"text-align":"center"}},"515",-1),Ga={style:{"text-align":"left"}},Ya={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Qa=t("td",{style:{"text-align":"center"}},null,-1),Sa={style:{"text-align":"left"}},Da=t("code",null,"树",-1),Za=t("code",null,"深度优先搜索",-1),Aa=t("code",null,"广度优先搜索",-1),Fa=t("code",null,"1+",-1),Ja={style:{"text-align":"left"}},Xa=t("td",{style:{"text-align":"center"}},"530",-1),$a={style:{"text-align":"left"}},t1={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},e1={style:{"text-align":"center"}},l1={href:"/problem/0530",target:"_blank",rel:"noopener noreferrer"},o1={style:{"text-align":"left"}},n1=t("code",null,"树",-1),s1=t("code",null,"深度优先搜索",-1),d1=t("code",null,"广度优先搜索",-1),_1=t("code",null,"2+",-1),r1={style:{"text-align":"left"}},i1=t("td",{style:{"text-align":"center"}},"536",-1),c1={style:{"text-align":"left"}},a1={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},h1=t("td",{style:{"text-align":"center"}},null,-1),u1={style:{"text-align":"left"}},f1=t("code",null,"栈",-1),g1=t("code",null,"树",-1),m1=t("code",null,"深度优先搜索",-1),y1=t("code",null,"2+",-1),b1={style:{"text-align":"left"}},x1=t("td",{style:{"text-align":"center"}},"538",-1),p1={style:{"text-align":"left"}},k1={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},M1=t("td",{style:{"text-align":"center"}},null,-1),v1={style:{"text-align":"left"}},I1=t("code",null,"树",-1),E1=t("code",null,"深度优先搜索",-1),w1=t("code",null,"二叉搜索树",-1),z1=t("code",null,"1+",-1),O1={style:{"text-align":"left"}},q1=t("td",{style:{"text-align":"center"}},"543",-1),j1={style:{"text-align":"left"}},H1={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},L1={style:{"text-align":"center"}},C1={href:"/problem/0543",target:"_blank",rel:"noopener noreferrer"},N1={style:{"text-align":"left"}},P1=t("code",null,"树",-1),K1=t("code",null,"深度优先搜索",-1),B1=t("code",null,"二叉树",-1),V1={style:{"text-align":"left"}},T1=t("td",{style:{"text-align":"center"}},"545",-1),U1={style:{"text-align":"left"}},R1={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},W1=t("td",{style:{"text-align":"center"}},null,-1),G1={style:{"text-align":"left"}},Y1=t("code",null,"树",-1),Q1=t("code",null,"深度优先搜索",-1),S1=t("code",null,"二叉树",-1),D1={style:{"text-align":"left"}},Z1=t("td",{style:{"text-align":"center"}},"549",-1),A1={style:{"text-align":"left"}},F1={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},J1=t("td",{style:{"text-align":"center"}},null,-1),X1={style:{"text-align":"left"}},$1=t("code",null,"树",-1),th=t("code",null,"深度优先搜索",-1),eh=t("code",null,"二叉树",-1),lh={style:{"text-align":"left"}},oh=t("td",{style:{"text-align":"center"}},"563",-1),nh={style:{"text-align":"left"}},sh={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},dh=t("td",{style:{"text-align":"center"}},null,-1),_h={style:{"text-align":"left"}},rh=t("code",null,"树",-1),ih=t("code",null,"深度优先搜索",-1),ch=t("code",null,"二叉树",-1),ah={style:{"text-align":"left"}},hh=t("td",{style:{"text-align":"center"}},"572",-1),uh={style:{"text-align":"left"}},fh={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},gh={style:{"text-align":"center"}},mh={href:"/problem/0572",target:"_blank",rel:"noopener noreferrer"},yh={style:{"text-align":"left"}},bh=t("code",null,"树",-1),xh=t("code",null,"深度优先搜索",-1),ph=t("code",null,"二叉树",-1),kh=t("code",null,"2+",-1),Mh={style:{"text-align":"left"}},vh=t("td",{style:{"text-align":"center"}},"606",-1),Ih={style:{"text-align":"left"}},Eh={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},wh=t("td",{style:{"text-align":"center"}},null,-1),zh={style:{"text-align":"left"}},Oh=t("code",null,"树",-1),qh=t("code",null,"深度优先搜索",-1),jh=t("code",null,"字符串",-1),Hh=t("code",null,"1+",-1),Lh={style:{"text-align":"left"}},Ch=t("td",{style:{"text-align":"center"}},"617",-1),Nh={style:{"text-align":"left"}},Ph={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},Kh={style:{"text-align":"center"}},Bh={href:"/problem/0617",target:"_blank",rel:"noopener noreferrer"},Vh={style:{"text-align":"left"}},Th=t("code",null,"树",-1),Uh=t("code",null,"深度优先搜索",-1),Rh=t("code",null,"广度优先搜索",-1),Wh=t("code",null,"1+",-1),Gh={style:{"text-align":"left"}},Yh=t("td",{style:{"text-align":"center"}},"623",-1),Qh={style:{"text-align":"left"}},Sh={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Dh=t("td",{style:{"text-align":"center"}},null,-1),Zh={style:{"text-align":"left"}},Ah=t("code",null,"树",-1),Fh=t("code",null,"深度优先搜索",-1),Jh=t("code",null,"广度优先搜索",-1),Xh=t("code",null,"1+",-1),$h={style:{"text-align":"left"}},tu=t("td",{style:{"text-align":"center"}},"637",-1),eu={style:{"text-align":"left"}},lu={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},ou={style:{"text-align":"center"}},nu={href:"/problem/0637",target:"_blank",rel:"noopener noreferrer"},su={style:{"text-align":"left"}},du=t("code",null,"树",-1),_u=t("code",null,"深度优先搜索",-1),ru=t("code",null,"广度优先搜索",-1),iu=t("code",null,"1+",-1),cu={style:{"text-align":"left"}},au=t("td",{style:{"text-align":"center"}},"652",-1),hu={style:{"text-align":"left"}},uu={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},fu=t("td",{style:{"text-align":"center"}},null,-1),gu={style:{"text-align":"left"}},mu=t("code",null,"树",-1),yu=t("code",null,"深度优先搜索",-1),bu=t("code",null,"哈希表",-1),xu=t("code",null,"1+",-1),pu={style:{"text-align":"left"}},ku=t("td",{style:{"text-align":"center"}},"653",-1),Mu={style:{"text-align":"left"}},vu={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Iu=t("td",{style:{"text-align":"center"}},null,-1),Eu={style:{"text-align":"left"}},wu=t("code",null,"树",-1),zu=t("code",null,"深度优先搜索",-1),Ou=t("code",null,"广度优先搜索",-1),qu=t("code",null,"4+",-1),ju={style:{"text-align":"left"}},Hu=t("td",{style:{"text-align":"center"}},"654",-1),Lu={style:{"text-align":"left"}},Cu={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Nu={style:{"text-align":"center"}},Pu={href:"/problem/0654",target:"_blank",rel:"noopener noreferrer"},Ku={style:{"text-align":"left"}},Bu=t("code",null,"栈",-1),Vu=t("code",null,"树",-1),Tu=t("code",null,"数组",-1),Uu=t("code",null,"3+",-1),Ru={style:{"text-align":"left"}},Wu=t("td",{style:{"text-align":"center"}},"655",-1),Gu={style:{"text-align":"left"}},Yu={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qu=t("td",{style:{"text-align":"center"}},null,-1),Su={style:{"text-align":"left"}},Du=t("code",null,"树",-1),Zu=t("code",null,"深度优先搜索",-1),Au=t("code",null,"广度优先搜索",-1),Fu=t("code",null,"1+",-1),Ju={style:{"text-align":"left"}},Xu=t("td",{style:{"text-align":"center"}},"662",-1),$u={style:{"text-align":"left"}},tf={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},ef={style:{"text-align":"center"}},lf={href:"/problem/0662",target:"_blank",rel:"noopener noreferrer"},of={style:{"text-align":"left"}},nf=t("code",null,"树",-1),sf=t("code",null,"深度优先搜索",-1),df=t("code",null,"广度优先搜索",-1),_f=t("code",null,"1+",-1),rf={style:{"text-align":"left"}},cf=t("td",{style:{"text-align":"center"}},"663",-1),af={style:{"text-align":"left"}},hf={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},uf=t("td",{style:{"text-align":"center"}},null,-1),ff={style:{"text-align":"left"}},gf=t("code",null,"树",-1),mf=t("code",null,"深度优先搜索",-1),yf=t("code",null,"二叉树",-1),bf={style:{"text-align":"left"}},xf=t("td",{style:{"text-align":"center"}},"666",-1),pf={style:{"text-align":"left"}},kf={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},Mf=t("td",{style:{"text-align":"center"}},null,-1),vf={style:{"text-align":"left"}},If=t("code",null,"树",-1),Ef=t("code",null,"深度优先搜索",-1),wf=t("code",null,"数组",-1),zf=t("code",null,"2+",-1),Of={style:{"text-align":"left"}},qf=t("td",{style:{"text-align":"center"}},"669",-1),jf={style:{"text-align":"left"}},Hf={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Lf=t("td",{style:{"text-align":"center"}},null,-1),Cf={style:{"text-align":"left"}},Nf=t("code",null,"树",-1),Pf=t("code",null,"深度优先搜索",-1),Kf=t("code",null,"二叉搜索树",-1),Bf=t("code",null,"1+",-1),Vf={style:{"text-align":"left"}},Tf=t("td",{style:{"text-align":"center"}},"671",-1),Uf={style:{"text-align":"left"}},Rf={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wf=t("td",{style:{"text-align":"center"}},null,-1),Gf={style:{"text-align":"left"}},Yf=t("code",null,"树",-1),Qf=t("code",null,"深度优先搜索",-1),Sf=t("code",null,"二叉树",-1),Df={style:{"text-align":"left"}},Zf=t("td",{style:{"text-align":"center"}},"687",-1),Af={style:{"text-align":"left"}},Ff={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Jf=t("td",{style:{"text-align":"center"}},null,-1),Xf={style:{"text-align":"left"}},$f=t("code",null,"树",-1),tg=t("code",null,"深度优先搜索",-1),eg=t("code",null,"二叉树",-1),lg={style:{"text-align":"left"}},og=t("td",{style:{"text-align":"center"}},"700",-1),ng={style:{"text-align":"left"}},sg={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},dg={style:{"text-align":"center"}},_g={href:"/problem/0700",target:"_blank",rel:"noopener noreferrer"},rg={style:{"text-align":"left"}},ig=t("code",null,"树",-1),cg=t("code",null,"二叉搜索树",-1),ag=t("code",null,"二叉树",-1),hg={style:{"text-align":"left"}},ug=t("td",{style:{"text-align":"center"}},"701",-1),fg={style:{"text-align":"left"}},gg={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},mg={style:{"text-align":"center"}},yg={href:"/problem/0701",target:"_blank",rel:"noopener noreferrer"},bg={style:{"text-align":"left"}},xg=t("code",null,"树",-1),pg=t("code",null,"二叉搜索树",-1),kg=t("code",null,"二叉树",-1),Mg={style:{"text-align":"left"}},vg=t("td",{style:{"text-align":"center"}},"703",-1),Ig={style:{"text-align":"left"}},Eg={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},wg={style:{"text-align":"center"}},zg={href:"/problem/0703",target:"_blank",rel:"noopener noreferrer"},Og={style:{"text-align":"left"}},qg=t("code",null,"树",-1),jg=t("code",null,"设计",-1),Hg=t("code",null,"二叉搜索树",-1),Lg=t("code",null,"3+",-1),Cg={style:{"text-align":"left"}},Ng=t("td",{style:{"text-align":"center"}},"742",-1),Pg={style:{"text-align":"left"}},Kg={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Bg=t("td",{style:{"text-align":"center"}},null,-1),Vg={style:{"text-align":"left"}},Tg=t("code",null,"树",-1),Ug=t("code",null,"深度优先搜索",-1),Rg=t("code",null,"广度优先搜索",-1),Wg=t("code",null,"1+",-1),Gg={style:{"text-align":"left"}},Yg=t("td",{style:{"text-align":"center"}},"776",-1),Qg={style:{"text-align":"left"}},Sg={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},Dg=t("td",{style:{"text-align":"center"}},null,-1),Zg={style:{"text-align":"left"}},Ag=t("code",null,"树",-1),Fg=t("code",null,"二叉搜索树",-1),Jg=t("code",null,"递归",-1),Xg=t("code",null,"1+",-1),$g={style:{"text-align":"left"}},tm=t("td",{style:{"text-align":"center"}},"783",-1),em={style:{"text-align":"left"}},lm={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},om={style:{"text-align":"center"}},nm={href:"/problem/0783",target:"_blank",rel:"noopener noreferrer"},sm={style:{"text-align":"left"}},dm=t("code",null,"树",-1),_m=t("code",null,"深度优先搜索",-1),rm=t("code",null,"广度优先搜索",-1),im=t("code",null,"2+",-1),cm={style:{"text-align":"left"}},am=t("td",{style:{"text-align":"center"}},"814",-1),hm={style:{"text-align":"left"}},um={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},fm=t("td",{style:{"text-align":"center"}},null,-1),gm={style:{"text-align":"left"}},mm=t("code",null,"树",-1),ym=t("code",null,"深度优先搜索",-1),bm=t("code",null,"二叉树",-1),xm={style:{"text-align":"left"}},pm=t("td",{style:{"text-align":"center"}},"863",-1),km={style:{"text-align":"left"}},Mm={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},vm=t("td",{style:{"text-align":"center"}},null,-1),Im={style:{"text-align":"left"}},Em=t("code",null,"树",-1),wm=t("code",null,"深度优先搜索",-1),zm=t("code",null,"广度优先搜索",-1),Om=t("code",null,"2+",-1),qm={style:{"text-align":"left"}},jm=t("td",{style:{"text-align":"center"}},"865",-1),Hm={style:{"text-align":"left"}},Lm={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},Cm=t("td",{style:{"text-align":"center"}},null,-1),Nm={style:{"text-align":"left"}},Pm=t("code",null,"树",-1),Km=t("code",null,"深度优先搜索",-1),Bm=t("code",null,"广度优先搜索",-1),Vm=t("code",null,"2+",-1),Tm={style:{"text-align":"left"}},Um=t("td",{style:{"text-align":"center"}},"872",-1),Rm={style:{"text-align":"left"}},Wm={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},Gm=t("td",{style:{"text-align":"center"}},null,-1),Ym={style:{"text-align":"left"}},Qm=t("code",null,"树",-1),Sm=t("code",null,"深度优先搜索",-1),Dm=t("code",null,"二叉树",-1),Zm={style:{"text-align":"left"}},Am=t("td",{style:{"text-align":"center"}},"889",-1),Fm={style:{"text-align":"left"}},Jm={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Xm={style:{"text-align":"center"}},$m={href:"/problem/0889",target:"_blank",rel:"noopener noreferrer"},ty={style:{"text-align":"left"}},ey=t("code",null,"树",-1),ly=t("code",null,"数组",-1),oy=t("code",null,"哈希表",-1),ny=t("code",null,"2+",-1),sy={style:{"text-align":"left"}},dy=t("td",{style:{"text-align":"center"}},"894",-1),_y={style:{"text-align":"left"}},ry={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},iy=t("td",{style:{"text-align":"center"}},null,-1),cy={style:{"text-align":"left"}},ay=t("code",null,"树",-1),hy=t("code",null,"递归",-1),uy=t("code",null,"记忆化搜索",-1),fy=t("code",null,"2+",-1),gy={style:{"text-align":"left"}},my=t("td",{style:{"text-align":"center"}},"897",-1),yy={style:{"text-align":"left"}},by={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},xy=t("td",{style:{"text-align":"center"}},null,-1),py={style:{"text-align":"left"}},ky=t("code",null,"栈",-1),My=t("code",null,"树",-1),vy=t("code",null,"深度优先搜索",-1),Iy=t("code",null,"2+",-1),Ey={style:{"text-align":"left"}},wy=t("td",{style:{"text-align":"center"}},"919",-1),zy={style:{"text-align":"left"}},Oy={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},qy=t("td",{style:{"text-align":"center"}},null,-1),jy={style:{"text-align":"left"}},Hy=t("code",null,"树",-1),Ly=t("code",null,"广度优先搜索",-1),Cy=t("code",null,"设计",-1),Ny=t("code",null,"1+",-1),Py={style:{"text-align":"left"}},Ky=t("td",{style:{"text-align":"center"}},"938",-1),By={style:{"text-align":"left"}},Vy={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},Ty=t("td",{style:{"text-align":"center"}},null,-1),Uy={style:{"text-align":"left"}},Ry=t("code",null,"树",-1),Wy=t("code",null,"深度优先搜索",-1),Gy=t("code",null,"二叉搜索树",-1),Yy=t("code",null,"1+",-1),Qy={style:{"text-align":"left"}},Sy=t("td",{style:{"text-align":"center"}},"951",-1),Dy={style:{"text-align":"left"}},Zy={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Ay=t("td",{style:{"text-align":"center"}},null,-1),Fy={style:{"text-align":"left"}},Jy=t("code",null,"树",-1),Xy=t("code",null,"深度优先搜索",-1),$y=t("code",null,"二叉树",-1),t2={style:{"text-align":"left"}},e2=t("td",{style:{"text-align":"center"}},"958",-1),l2={style:{"text-align":"left"}},o2={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},n2={style:{"text-align":"center"}},s2={href:"/problem/0958",target:"_blank",rel:"noopener noreferrer"},d2={style:{"text-align":"left"}},_2=t("code",null,"树",-1),r2=t("code",null,"广度优先搜索",-1),i2=t("code",null,"二叉树",-1),c2={style:{"text-align":"left"}},a2=t("td",{style:{"text-align":"center"}},"965",-1),h2={style:{"text-align":"left"}},u2={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},f2=t("td",{style:{"text-align":"center"}},null,-1),g2={style:{"text-align":"left"}},m2=t("code",null,"树",-1),y2=t("code",null,"深度优先搜索",-1),b2=t("code",null,"广度优先搜索",-1),x2=t("code",null,"1+",-1),p2={style:{"text-align":"left"}},k2=t("td",{style:{"text-align":"center"}},"968",-1),M2={style:{"text-align":"left"}},v2={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},I2=t("td",{style:{"text-align":"center"}},null,-1),E2={style:{"text-align":"left"}},w2=t("code",null,"树",-1),z2=t("code",null,"深度优先搜索",-1),O2=t("code",null,"动态规划",-1),q2=t("code",null,"1+",-1),j2={style:{"text-align":"left"}},H2=t("td",{style:{"text-align":"center"}},"971",-1),L2={style:{"text-align":"left"}},C2={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},N2=t("td",{style:{"text-align":"center"}},null,-1),P2={style:{"text-align":"left"}},K2=t("code",null,"树",-1),B2=t("code",null,"深度优先搜索",-1),V2=t("code",null,"二叉树",-1),T2={style:{"text-align":"left"}},U2=t("td",{style:{"text-align":"center"}},"979",-1),R2={style:{"text-align":"left"}},W2={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},G2=t("td",{style:{"text-align":"center"}},null,-1),Y2={style:{"text-align":"left"}},Q2=t("code",null,"树",-1),S2=t("code",null,"深度优先搜索",-1),D2=t("code",null,"二叉树",-1),Z2={style:{"text-align":"left"}},A2=t("td",{style:{"text-align":"center"}},"987",-1),F2={style:{"text-align":"left"}},J2={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},X2=t("td",{style:{"text-align":"center"}},null,-1),$2={style:{"text-align":"left"}},tb=t("code",null,"树",-1),eb=t("code",null,"深度优先搜索",-1),lb=t("code",null,"广度优先搜索",-1),ob=t("code",null,"3+",-1),nb={style:{"text-align":"left"}},sb=t("td",{style:{"text-align":"center"}},"988",-1),db={style:{"text-align":"left"}},_b={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},rb=t("td",{style:{"text-align":"center"}},null,-1),ib={style:{"text-align":"left"}},cb=t("code",null,"树",-1),ab=t("code",null,"深度优先搜索",-1),hb=t("code",null,"字符串",-1),ub=t("code",null,"2+",-1),fb={style:{"text-align":"left"}},gb=t("td",{style:{"text-align":"center"}},"993",-1),mb={style:{"text-align":"left"}},yb={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},bb=t("td",{style:{"text-align":"center"}},null,-1),xb={style:{"text-align":"left"}},pb=t("code",null,"树",-1),kb=t("code",null,"深度优先搜索",-1),Mb=t("code",null,"广度优先搜索",-1),vb=t("code",null,"1+",-1),Ib={style:{"text-align":"left"}},Eb=t("td",{style:{"text-align":"center"}},"998",-1),wb={style:{"text-align":"left"}},zb={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Ob=t("td",{style:{"text-align":"center"}},null,-1),qb={style:{"text-align":"left"}},jb=t("code",null,"树",-1),Hb=t("code",null,"二叉树",-1),Lb={style:{"text-align":"left"}},Cb=t("td",{style:{"text-align":"center"}},"1008",-1),Nb={style:{"text-align":"left"}},Pb={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Kb={style:{"text-align":"center"}},Bb={href:"/problem/1008",target:"_blank",rel:"noopener noreferrer"},Vb={style:{"text-align":"left"}},Tb=t("code",null,"栈",-1),Ub=t("code",null,"树",-1),Rb=t("code",null,"二叉搜索树",-1),Wb=t("code",null,"3+",-1),Gb={style:{"text-align":"left"}},Yb=t("td",{style:{"text-align":"center"}},"1022",-1),Qb={style:{"text-align":"left"}},Sb={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Db=t("td",{style:{"text-align":"center"}},null,-1),Zb={style:{"text-align":"left"}},Ab=t("code",null,"树",-1),Fb=t("code",null,"深度优先搜索",-1),Jb=t("code",null,"二叉树",-1),Xb={style:{"text-align":"left"}},$b=t("td",{style:{"text-align":"center"}},"1026",-1),tx={style:{"text-align":"left"}},ex={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},lx=t("td",{style:{"text-align":"center"}},null,-1),ox={style:{"text-align":"left"}},nx=t("code",null,"树",-1),sx=t("code",null,"深度优先搜索",-1),dx=t("code",null,"二叉树",-1),_x={style:{"text-align":"left"}},rx=t("td",{style:{"text-align":"center"}},"1028",-1),ix={style:{"text-align":"left"}},cx={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},ax=t("td",{style:{"text-align":"center"}},null,-1),hx={style:{"text-align":"left"}},ux=t("code",null,"树",-1),fx=t("code",null,"深度优先搜索",-1),gx=t("code",null,"字符串",-1),mx=t("code",null,"1+",-1),yx={style:{"text-align":"left"}},bx=t("td",{style:{"text-align":"center"}},"1038",-1),xx={style:{"text-align":"left"}},px={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},kx=t("td",{style:{"text-align":"center"}},null,-1),Mx={style:{"text-align":"left"}},vx=t("code",null,"树",-1),Ix=t("code",null,"深度优先搜索",-1),Ex=t("code",null,"二叉搜索树",-1),wx=t("code",null,"1+",-1),zx={style:{"text-align":"left"}},Ox=t("td",{style:{"text-align":"center"}},"1080",-1),qx={style:{"text-align":"left"}},jx={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},Hx=t("td",{style:{"text-align":"center"}},null,-1),Lx={style:{"text-align":"left"}},Cx=t("code",null,"树",-1),Nx=t("code",null,"深度优先搜索",-1),Px=t("code",null,"二叉树",-1),Kx={style:{"text-align":"left"}},Bx=t("td",{style:{"text-align":"center"}},"1104",-1),Vx={style:{"text-align":"left"}},Tx={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ux=t("td",{style:{"text-align":"center"}},null,-1),Rx={style:{"text-align":"left"}},Wx=t("code",null,"树",-1),Gx=t("code",null,"数学",-1),Yx=t("code",null,"二叉树",-1),Qx={style:{"text-align":"left"}},Sx=t("td",{style:{"text-align":"center"}},"1110",-1),Dx={style:{"text-align":"left"}},Zx={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Ax=t("td",{style:{"text-align":"center"}},null,-1),Fx={style:{"text-align":"left"}},Jx=t("code",null,"树",-1),Xx=t("code",null,"深度优先搜索",-1),$x=t("code",null,"数组",-1),t0=t("code",null,"2+",-1),e0={style:{"text-align":"left"}},l0=t("td",{style:{"text-align":"center"}},"1120",-1),o0={style:{"text-align":"left"}},n0={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},s0=t("td",{style:{"text-align":"center"}},null,-1),d0={style:{"text-align":"left"}},_0=t("code",null,"树",-1),r0=t("code",null,"深度优先搜索",-1),i0=t("code",null,"二叉树",-1),c0={style:{"text-align":"left"}},a0=t("td",{style:{"text-align":"center"}},"1123",-1),h0={style:{"text-align":"left"}},u0={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},f0=t("td",{style:{"text-align":"center"}},null,-1),g0={style:{"text-align":"left"}},m0=t("code",null,"树",-1),y0=t("code",null,"深度优先搜索",-1),b0=t("code",null,"广度优先搜索",-1),x0=t("code",null,"2+",-1),p0={style:{"text-align":"left"}},k0=t("td",{style:{"text-align":"center"}},"1145",-1),M0={style:{"text-align":"left"}},v0={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},I0=t("td",{style:{"text-align":"center"}},null,-1),E0={style:{"text-align":"left"}},w0=t("code",null,"树",-1),z0=t("code",null,"深度优先搜索",-1),O0=t("code",null,"二叉树",-1),q0={style:{"text-align":"left"}},j0=t("td",{style:{"text-align":"center"}},"1161",-1),H0={style:{"text-align":"left"}},L0={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},C0=t("td",{style:{"text-align":"center"}},null,-1),N0={style:{"text-align":"left"}},P0=t("code",null,"树",-1),K0=t("code",null,"深度优先搜索",-1),B0=t("code",null,"广度优先搜索",-1),V0=t("code",null,"1+",-1),T0={style:{"text-align":"left"}},U0=t("td",{style:{"text-align":"center"}},"1214",-1),R0={style:{"text-align":"left"}},W0={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},G0=t("td",{style:{"text-align":"center"}},null,-1),Y0={style:{"text-align":"left"}},Q0=t("code",null,"栈",-1),S0=t("code",null,"树",-1),D0=t("code",null,"深度优先搜索",-1),Z0=t("code",null,"4+",-1),A0={style:{"text-align":"left"}},F0=t("td",{style:{"text-align":"center"}},"1261",-1),J0={style:{"text-align":"left"}},X0={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},$0=t("td",{style:{"text-align":"center"}},null,-1),tp={style:{"text-align":"left"}},ep=t("code",null,"树",-1),lp=t("code",null,"深度优先搜索",-1),op=t("code",null,"广度优先搜索",-1),np=t("code",null,"3+",-1),sp={style:{"text-align":"left"}},dp=t("td",{style:{"text-align":"center"}},"1302",-1),_p={style:{"text-align":"left"}},rp={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},ip=t("td",{style:{"text-align":"center"}},null,-1),cp={style:{"text-align":"left"}},ap=t("code",null,"树",-1),hp=t("code",null,"深度优先搜索",-1),up=t("code",null,"广度优先搜索",-1),fp=t("code",null,"1+",-1),gp={style:{"text-align":"left"}},mp=t("td",{style:{"text-align":"center"}},"1305",-1),yp={style:{"text-align":"left"}},bp={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},xp=t("td",{style:{"text-align":"center"}},null,-1),pp={style:{"text-align":"left"}},kp=t("code",null,"树",-1),Mp=t("code",null,"深度优先搜索",-1),vp=t("code",null,"二叉搜索树",-1),Ip=t("code",null,"2+",-1),Ep={style:{"text-align":"left"}},wp=t("td",{style:{"text-align":"center"}},"1315",-1),zp={style:{"text-align":"left"}},Op={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},qp=t("td",{style:{"text-align":"center"}},null,-1),jp={style:{"text-align":"left"}},Hp=t("code",null,"树",-1),Lp=t("code",null,"深度优先搜索",-1),Cp=t("code",null,"广度优先搜索",-1),Np=t("code",null,"1+",-1),Pp={style:{"text-align":"left"}},Kp=t("td",{style:{"text-align":"center"}},"1325",-1),Bp={style:{"text-align":"left"}},Vp={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},Tp=t("td",{style:{"text-align":"center"}},null,-1),Up={style:{"text-align":"left"}},Rp=t("code",null,"树",-1),Wp=t("code",null,"深度优先搜索",-1),Gp=t("code",null,"二叉树",-1),Yp={style:{"text-align":"left"}},Qp=t("td",{style:{"text-align":"center"}},"1339",-1),Sp={style:{"text-align":"left"}},Dp={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zp=t("td",{style:{"text-align":"center"}},null,-1),Ap={style:{"text-align":"left"}},Fp=t("code",null,"树",-1),Jp=t("code",null,"深度优先搜索",-1),Xp=t("code",null,"二叉树",-1),$p={style:{"text-align":"left"}},t6=t("td",{style:{"text-align":"center"}},"1361",-1),e6={style:{"text-align":"left"}},l6={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},o6=t("td",{style:{"text-align":"center"}},null,-1),n6={style:{"text-align":"left"}},s6=t("code",null,"树",-1),d6=t("code",null,"深度优先搜索",-1),_6=t("code",null,"广度优先搜索",-1),r6=t("code",null,"3+",-1),i6={style:{"text-align":"left"}},c6=t("td",{style:{"text-align":"center"}},"1367",-1),a6={style:{"text-align":"left"}},h6={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},u6=t("td",{style:{"text-align":"center"}},null,-1),f6={style:{"text-align":"left"}},g6=t("code",null,"树",-1),m6=t("code",null,"深度优先搜索",-1),y6=t("code",null,"链表",-1),b6=t("code",null,"1+",-1),x6={style:{"text-align":"left"}},p6=t("td",{style:{"text-align":"center"}},"1372",-1),k6={style:{"text-align":"left"}},M6={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},v6=t("td",{style:{"text-align":"center"}},null,-1),I6={style:{"text-align":"left"}},E6=t("code",null,"树",-1),w6=t("code",null,"深度优先搜索",-1),z6=t("code",null,"动态规划",-1),O6=t("code",null,"1+",-1),q6={style:{"text-align":"left"}},j6=t("td",{style:{"text-align":"center"}},"1373",-1),H6={style:{"text-align":"left"}},L6={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},C6=t("td",{style:{"text-align":"center"}},null,-1),N6={style:{"text-align":"left"}},P6=t("code",null,"树",-1),K6=t("code",null,"深度优先搜索",-1),B6=t("code",null,"二叉搜索树",-1),V6=t("code",null,"2+",-1),T6={style:{"text-align":"left"}},U6=t("td",{style:{"text-align":"center"}},"1379",-1),R6={style:{"text-align":"left"}},W6={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},G6=t("td",{style:{"text-align":"center"}},null,-1),Y6={style:{"text-align":"left"}},Q6=t("code",null,"树",-1),S6=t("code",null,"深度优先搜索",-1),D6=t("code",null,"广度优先搜索",-1),Z6=t("code",null,"1+",-1),A6={style:{"text-align":"left"}},F6=t("td",{style:{"text-align":"center"}},"1382",-1),J6={style:{"text-align":"left"}},X6={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},$6=t("td",{style:{"text-align":"center"}},null,-1),t8={style:{"text-align":"left"}},e8=t("code",null,"贪心",-1),l8=t("code",null,"树",-1),o8=t("code",null,"深度优先搜索",-1),n8=t("code",null,"3+",-1),s8={style:{"text-align":"left"}},d8=t("td",{style:{"text-align":"center"}},"1430",-1),_8={style:{"text-align":"left"}},r8={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},i8=t("td",{style:{"text-align":"center"}},null,-1),c8={style:{"text-align":"left"}},a8=t("code",null,"树",-1),h8=t("code",null,"深度优先搜索",-1),u8=t("code",null,"广度优先搜索",-1),f8=t("code",null,"1+",-1),g8={style:{"text-align":"left"}},m8=t("td",{style:{"text-align":"center"}},"1448",-1),y8={style:{"text-align":"left"}},b8={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},x8=t("td",{style:{"text-align":"center"}},null,-1),p8={style:{"text-align":"left"}},k8=t("code",null,"树",-1),M8=t("code",null,"深度优先搜索",-1),v8=t("code",null,"广度优先搜索",-1),I8=t("code",null,"1+",-1),E8={style:{"text-align":"left"}},w8=t("td",{style:{"text-align":"center"}},"1457",-1),z8={style:{"text-align":"left"}},O8={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},q8=t("td",{style:{"text-align":"center"}},null,-1),j8={style:{"text-align":"left"}},H8=t("code",null,"位运算",-1),L8=t("code",null,"树",-1),C8=t("code",null,"深度优先搜索",-1),N8=t("code",null,"2+",-1),P8={style:{"text-align":"left"}},K8=t("td",{style:{"text-align":"center"}},"1469",-1),B8={style:{"text-align":"left"}},V8={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},T8=t("td",{style:{"text-align":"center"}},null,-1),U8={style:{"text-align":"left"}},R8=t("code",null,"树",-1),W8=t("code",null,"深度优先搜索",-1),G8=t("code",null,"广度优先搜索",-1),Y8=t("code",null,"1+",-1),Q8={style:{"text-align":"left"}},S8=t("td",{style:{"text-align":"center"}},"1485",-1),D8={style:{"text-align":"left"}},Z8={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},A8=t("td",{style:{"text-align":"center"}},null,-1),F8={style:{"text-align":"left"}},J8=t("code",null,"树",-1),X8=t("code",null,"深度优先搜索",-1),$8=t("code",null,"广度优先搜索",-1),t3=t("code",null,"2+",-1),e3={style:{"text-align":"left"}},l3=t("td",{style:{"text-align":"center"}},"1530",-1),o3={style:{"text-align":"left"}},n3={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},s3=t("td",{style:{"text-align":"center"}},null,-1),d3={style:{"text-align":"left"}},_3=t("code",null,"树",-1),r3=t("code",null,"深度优先搜索",-1),i3=t("code",null,"二叉树",-1),c3={style:{"text-align":"left"}},a3=t("td",{style:{"text-align":"center"}},"1569",-1),h3={style:{"text-align":"left"}},u3={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},f3=t("td",{style:{"text-align":"center"}},null,-1),g3={style:{"text-align":"left"}},m3=t("code",null,"树",-1),y3=t("code",null,"并查集",-1),b3=t("code",null,"二叉搜索树",-1),x3=t("code",null,"7+",-1),p3={style:{"text-align":"left"}},k3=t("td",{style:{"text-align":"center"}},"1586",-1),M3={style:{"text-align":"left"}},v3={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},I3=t("td",{style:{"text-align":"center"}},null,-1),E3={style:{"text-align":"left"}},w3=t("code",null,"栈",-1),z3=t("code",null,"树",-1),O3=t("code",null,"设计",-1),q3=t("code",null,"3+",-1),j3={style:{"text-align":"left"}},H3=t("td",{style:{"text-align":"center"}},"1597",-1),L3={style:{"text-align":"left"}},C3={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},N3=t("td",{style:{"text-align":"center"}},null,-1),P3={style:{"text-align":"left"}},K3=t("code",null,"栈",-1),B3=t("code",null,"树",-1),V3=t("code",null,"字符串",-1),T3=t("code",null,"1+",-1),U3={style:{"text-align":"left"}},R3=t("td",{style:{"text-align":"center"}},"1602",-1),W3={style:{"text-align":"left"}},G3={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Y3=t("td",{style:{"text-align":"center"}},null,-1),Q3={style:{"text-align":"left"}},S3=t("code",null,"树",-1),D3=t("code",null,"广度优先搜索",-1),Z3=t("code",null,"二叉树",-1),A3={style:{"text-align":"left"}},F3=t("td",{style:{"text-align":"center"}},"1609",-1),J3={style:{"text-align":"left"}},X3={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},$3=t("td",{style:{"text-align":"center"}},null,-1),t5={style:{"text-align":"left"}},e5=t("code",null,"树",-1),l5=t("code",null,"广度优先搜索",-1),o5=t("code",null,"二叉树",-1),n5={style:{"text-align":"left"}},s5=t("td",{style:{"text-align":"center"}},"1612",-1),d5={style:{"text-align":"left"}},_5={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},r5=t("td",{style:{"text-align":"center"}},null,-1),i5={style:{"text-align":"left"}},c5=t("code",null,"树",-1),a5=t("code",null,"深度优先搜索",-1),h5=t("code",null,"哈希表",-1),u5=t("code",null,"2+",-1),f5={style:{"text-align":"left"}},g5=t("td",{style:{"text-align":"center"}},"1628",-1),m5={style:{"text-align":"left"}},y5={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},b5=t("td",{style:{"text-align":"center"}},null,-1),x5={style:{"text-align":"left"}},p5=t("code",null,"栈",-1),k5=t("code",null,"树",-1),M5=t("code",null,"设计",-1),v5=t("code",null,"3+",-1),I5={style:{"text-align":"left"}},E5=t("td",{style:{"text-align":"center"}},"1644",-1),w5={style:{"text-align":"left"}},z5={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},O5=t("td",{style:{"text-align":"center"}},null,-1),q5={style:{"text-align":"left"}},j5=t("code",null,"树",-1),H5=t("code",null,"深度优先搜索",-1),L5=t("code",null,"二叉树",-1),C5={style:{"text-align":"left"}},N5=t("td",{style:{"text-align":"center"}},"1650",-1),P5={style:{"text-align":"left"}},K5={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},B5=t("td",{style:{"text-align":"center"}},null,-1),V5={style:{"text-align":"left"}},T5=t("code",null,"树",-1),U5=t("code",null,"哈希表",-1),R5=t("code",null,"双指针",-1),W5=t("code",null,"1+",-1),G5={style:{"text-align":"left"}},Y5=t("td",{style:{"text-align":"center"}},"1660",-1),Q5={style:{"text-align":"left"}},S5={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},D5=t("td",{style:{"text-align":"center"}},null,-1),Z5={style:{"text-align":"left"}},A5=t("code",null,"树",-1),F5=t("code",null,"深度优先搜索",-1),J5=t("code",null,"广度优先搜索",-1),X5=t("code",null,"2+",-1),$5={style:{"text-align":"left"}},t4=t("td",{style:{"text-align":"center"}},"1666",-1),e4={style:{"text-align":"left"}},l4={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},o4=t("td",{style:{"text-align":"center"}},null,-1),n4={style:{"text-align":"left"}},s4=t("code",null,"树",-1),d4=t("code",null,"深度优先搜索",-1),_4=t("code",null,"二叉树",-1),r4={style:{"text-align":"left"}},i4=t("td",{style:{"text-align":"center"}},"1676",-1),c4={style:{"text-align":"left"}},a4={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},h4=t("td",{style:{"text-align":"center"}},null,-1),u4={style:{"text-align":"left"}},f4=t("code",null,"树",-1),g4=t("code",null,"深度优先搜索",-1),m4=t("code",null,"哈希表",-1),y4=t("code",null,"1+",-1),b4={style:{"text-align":"left"}},x4=t("td",{style:{"text-align":"center"}},"1740",-1),p4={style:{"text-align":"left"}},k4={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},M4=t("td",{style:{"text-align":"center"}},null,-1),v4={style:{"text-align":"left"}},I4=t("code",null,"树",-1),E4=t("code",null,"深度优先搜索",-1),w4=t("code",null,"广度优先搜索",-1),z4=t("code",null,"2+",-1),O4={style:{"text-align":"left"}},q4=t("td",{style:{"text-align":"center"}},"1902",-1),j4={style:{"text-align":"left"}},H4={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},L4=t("td",{style:{"text-align":"center"}},null,-1),C4={style:{"text-align":"left"}},N4=t("code",null,"树",-1),P4=t("code",null,"二叉搜索树",-1),K4=t("code",null,"数组",-1),B4=t("code",null,"2+",-1),V4={style:{"text-align":"left"}},T4=t("td",{style:{"text-align":"center"}},"1932",-1),U4={style:{"text-align":"left"}},R4={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},W4=t("td",{style:{"text-align":"center"}},null,-1),G4={style:{"text-align":"left"}},Y4=t("code",null,"树",-1),Q4=t("code",null,"深度优先搜索",-1),S4=t("code",null,"哈希表",-1),D4=t("code",null,"2+",-1),Z4={style:{"text-align":"left"}},A4=t("td",{style:{"text-align":"center"}},"1973",-1),F4={style:{"text-align":"left"}},J4={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},X4=t("td",{style:{"text-align":"center"}},null,-1),$4={style:{"text-align":"left"}},t9=t("code",null,"树",-1),e9=t("code",null,"深度优先搜索",-1),l9=t("code",null,"二叉树",-1),o9={style:{"text-align":"left"}},n9=t("td",{style:{"text-align":"center"}},"2005",-1),s9={style:{"text-align":"left"}},d9={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},_9=t("td",{style:{"text-align":"center"}},null,-1),r9={style:{"text-align":"left"}},i9=t("code",null,"树",-1),c9=t("code",null,"数学",-1),a9=t("code",null,"动态规划",-1),h9=t("code",null,"2+",-1),u9={style:{"text-align":"left"}},f9=t("td",{style:{"text-align":"center"}},"2049",-1),g9={style:{"text-align":"left"}},m9={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},y9=t("td",{style:{"text-align":"center"}},null,-1),b9={style:{"text-align":"left"}},x9=t("code",null,"树",-1),p9=t("code",null,"深度优先搜索",-1),k9=t("code",null,"数组",-1),M9=t("code",null,"1+",-1),v9={style:{"text-align":"left"}},I9=t("td",{style:{"text-align":"center"}},"2096",-1),E9={style:{"text-align":"left"}},w9={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},z9=t("td",{style:{"text-align":"center"}},null,-1),O9={style:{"text-align":"left"}},q9=t("code",null,"树",-1),j9=t("code",null,"深度优先搜索",-1),H9=t("code",null,"字符串",-1),L9=t("code",null,"1+",-1),C9={style:{"text-align":"left"}},N9=t("td",{style:{"text-align":"center"}},"2196",-1),P9={style:{"text-align":"left"}},K9={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},B9={style:{"text-align":"center"}},V9={href:"/problem/2196",target:"_blank",rel:"noopener noreferrer"},T9={style:{"text-align":"left"}},U9=t("code",null,"树",-1),R9=t("code",null,"数组",-1),W9=t("code",null,"哈希表",-1),G9=t("code",null,"1+",-1),Y9={style:{"text-align":"left"}},Q9=t("td",{style:{"text-align":"center"}},"2236",-1),S9={style:{"text-align":"left"}},D9={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},Z9=t("td",{style:{"text-align":"center"}},null,-1),A9={style:{"text-align":"left"}},F9=t("code",null,"树",-1),J9=t("code",null,"二叉树",-1),X9={style:{"text-align":"left"}},$9=t("td",{style:{"text-align":"center"}},"2265",-1),t7={style:{"text-align":"left"}},e7={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},l7=t("td",{style:{"text-align":"center"}},null,-1),o7={style:{"text-align":"left"}},n7=t("code",null,"树",-1),s7=t("code",null,"深度优先搜索",-1),d7=t("code",null,"二叉树",-1),_7={style:{"text-align":"left"}},r7=t("td",{style:{"text-align":"center"}},"2313",-1),i7={style:{"text-align":"left"}},c7={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},a7=t("td",{style:{"text-align":"center"}},null,-1),h7={style:{"text-align":"left"}},u7=t("code",null,"树",-1),f7=t("code",null,"深度优先搜索",-1),g7=t("code",null,"动态规划",-1),m7=t("code",null,"1+",-1),y7={style:{"text-align":"left"}},b7=t("td",{style:{"text-align":"center"}},"2331",-1),x7={style:{"text-align":"left"}},p7={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},k7=t("td",{style:{"text-align":"center"}},null,-1),M7={style:{"text-align":"left"}},v7=t("code",null,"树",-1),I7=t("code",null,"深度优先搜索",-1),E7=t("code",null,"二叉树",-1),w7={style:{"text-align":"left"}},z7=t("td",{style:{"text-align":"center"}},"2385",-1),O7={style:{"text-align":"left"}},q7={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},j7=t("td",{style:{"text-align":"center"}},null,-1),H7={style:{"text-align":"left"}},L7=t("code",null,"树",-1),C7=t("code",null,"深度优先搜索",-1),N7=t("code",null,"广度优先搜索",-1),P7=t("code",null,"2+",-1),K7={style:{"text-align":"left"}},B7=t("td",{style:{"text-align":"center"}},"2415",-1),V7={style:{"text-align":"left"}},T7={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},U7=t("td",{style:{"text-align":"center"}},null,-1),R7={style:{"text-align":"left"}},W7=t("code",null,"树",-1),G7=t("code",null,"深度优先搜索",-1),Y7=t("code",null,"广度优先搜索",-1),Q7=t("code",null,"1+",-1),S7={style:{"text-align":"left"}},D7=t("td",{style:{"text-align":"center"}},"2445",-1),Z7={style:{"text-align":"left"}},A7={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},F7=t("td",{style:{"text-align":"center"}},null,-1),J7={style:{"text-align":"left"}},X7=t("code",null,"树",-1),$7=t("code",null,"深度优先搜索",-1),tk=t("code",null,"广度优先搜索",-1),ek=t("code",null,"1+",-1),lk={style:{"text-align":"left"}},ok=t("td",{style:{"text-align":"center"}},"2458",-1),nk={style:{"text-align":"left"}},sk={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},dk=t("td",{style:{"text-align":"center"}},null,-1),_k={style:{"text-align":"left"}},rk=t("code",null,"树",-1),ik=t("code",null,"深度优先搜索",-1),ck=t("code",null,"广度优先搜索",-1),ak=t("code",null,"2+",-1),hk={style:{"text-align":"left"}},uk=t("td",{style:{"text-align":"center"}},"2471",-1),fk={style:{"text-align":"left"}},gk={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},mk=t("td",{style:{"text-align":"center"}},null,-1),yk={style:{"text-align":"left"}},bk=t("code",null,"树",-1),xk=t("code",null,"广度优先搜索",-1),pk=t("code",null,"二叉树",-1),kk={style:{"text-align":"left"}},Mk=t("td",{style:{"text-align":"center"}},"2476",-1),vk={style:{"text-align":"left"}},Ik={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ek=t("td",{style:{"text-align":"center"}},null,-1),wk={style:{"text-align":"left"}},zk=t("code",null,"树",-1),Ok=t("code",null,"深度优先搜索",-1),qk=t("code",null,"二叉搜索树",-1),jk=t("code",null,"3+",-1),Hk={style:{"text-align":"left"}},Lk=t("td",{style:{"text-align":"center"}},"2509",-1),Ck={style:{"text-align":"left"}},Nk={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Pk=t("td",{style:{"text-align":"center"}},null,-1),Kk={style:{"text-align":"left"}},Bk=t("code",null,"树",-1),Vk=t("code",null,"数组",-1),Tk=t("code",null,"二叉树",-1),Uk={style:{"text-align":"left"}},Rk=t("td",{style:{"text-align":"center"}},"2583",-1),Wk={style:{"text-align":"left"}},Gk={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yk=t("td",{style:{"text-align":"center"}},null,-1),Qk={style:{"text-align":"left"}},Sk=t("code",null,"树",-1),Dk=t("code",null,"广度优先搜索",-1),Zk=t("code",null,"二叉树",-1),Ak=t("code",null,"1+",-1),Fk={style:{"text-align":"left"}},Jk=t("td",{style:{"text-align":"center"}},"2641",-1),Xk={style:{"text-align":"left"}},$k={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},tM=t("td",{style:{"text-align":"center"}},null,-1),eM={style:{"text-align":"left"}},lM=t("code",null,"树",-1),oM=t("code",null,"深度优先搜索",-1),nM=t("code",null,"广度优先搜索",-1),sM=t("code",null,"2+",-1),dM={style:{"text-align":"left"}},_M=t("td",{style:{"text-align":"center"}},"2673",-1),rM={style:{"text-align":"left"}},iM={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},cM=t("td",{style:{"text-align":"center"}},null,-1),aM={style:{"text-align":"left"}},hM=t("code",null,"贪心",-1),uM=t("code",null,"树",-1),fM=t("code",null,"数组",-1),gM=t("code",null,"2+",-1),mM={style:{"text-align":"left"}},yM=t("td",{style:{"text-align":"center"}},"2689",-1),bM={style:{"text-align":"left"}},xM={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},pM=t("td",{style:{"text-align":"center"}},null,-1),kM={style:{"text-align":"left"}},MM=t("code",null,"树",-1),vM=t("code",null,"深度优先搜索",-1),IM=t("code",null,"二叉树",-1),EM={style:{"text-align":"left"}},wM=t("td",{style:{"text-align":"center"}},"2764",-1),zM={style:{"text-align":"left"}},OM={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},qM=t("td",{style:{"text-align":"center"}},null,-1),jM={style:{"text-align":"left"}},HM=t("code",null,"栈",-1),LM=t("code",null,"树",-1),CM=t("code",null,"深度优先搜索",-1),NM=t("code",null,"1+",-1),PM={style:{"text-align":"left"}},KM=t("td",{style:{"text-align":"center"}},"2773",-1),BM={style:{"text-align":"left"}},VM={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},TM=t("td",{style:{"text-align":"center"}},null,-1),UM={style:{"text-align":"left"}},RM=t("code",null,"树",-1),WM=t("code",null,"深度优先搜索",-1),GM=t("code",null,"广度优先搜索",-1),YM=t("code",null,"1+",-1),QM={style:{"text-align":"left"}},SM=t("td",{style:{"text-align":"center"}},"2792",-1),DM={style:{"text-align":"left"}},ZM={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},AM=t("td",{style:{"text-align":"center"}},null,-1),FM={style:{"text-align":"left"}},JM=t("code",null,"树",-1),XM=t("code",null,"深度优先搜索",-1),$M=t("code",null,"分治",-1),tv=t("code",null,"1+",-1),ev={style:{"text-align":"left"}},lv=t("td",{style:{"text-align":"center"}},"3157",-1),ov={style:{"text-align":"left"}},nv={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},sv=t("td",{style:{"text-align":"center"}},null,-1),dv={style:{"text-align":"left"}},_v=t("code",null,"树",-1),rv=t("code",null,"深度优先搜索",-1),iv=t("code",null,"广度优先搜索",-1),cv=t("code",null,"1+",-1),av={style:{"text-align":"left"}},hv=t("td",{style:{"text-align":"center"}},"3319",-1),uv={style:{"text-align":"left"}},fv={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},gv={style:{"text-align":"center"}},mv={href:"/problem/3319",target:"_blank",rel:"noopener noreferrer"},yv={style:{"text-align":"left"}},bv=t("code",null,"树",-1),xv=t("code",null,"深度优先搜索",-1),pv=t("code",null,"二叉树",-1),kv=t("code",null,"1+",-1),Mv={style:{"text-align":"left"}},vv=t("td",{style:{"text-align":"center"}},"LCP 10",-1),Iv={style:{"text-align":"left"}},Ev={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},wv=t("td",{style:{"text-align":"center"}},null,-1),zv={style:{"text-align":"left"}},Ov=t("code",null,"树",-1),qv=t("code",null,"深度优先搜索",-1),jv=t("code",null,"动态规划",-1),Hv=t("code",null,"1+",-1),Lv={style:{"text-align":"left"}},Cv=t("td",{style:{"text-align":"center"}},"LCP 26",-1),Nv={style:{"text-align":"left"}},Pv={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},Kv=t("td",{style:{"text-align":"center"}},null,-1),Bv={style:{"text-align":"left"}},Vv=t("code",null,"树",-1),Tv=t("code",null,"动态规划",-1),Uv=t("code",null,"二叉树",-1),Rv={style:{"text-align":"left"}},Wv=t("td",{style:{"text-align":"center"}},"LCP 34",-1),Gv={style:{"text-align":"left"}},Yv={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},Qv=t("td",{style:{"text-align":"center"}},null,-1),Sv={style:{"text-align":"left"}},Dv=t("code",null,"树",-1),Zv=t("code",null,"动态规划",-1),Av=t("code",null,"二叉树",-1),Fv={style:{"text-align":"left"}},Jv=t("td",{style:{"text-align":"center"}},"LCP 44",-1),Xv={style:{"text-align":"left"}},$v={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},tI=t("td",{style:{"text-align":"center"}},null,-1),eI={style:{"text-align":"left"}},lI=t("code",null,"树",-1),oI=t("code",null,"深度优先搜索",-1),nI=t("code",null,"广度优先搜索",-1),sI=t("code",null,"2+",-1),dI={style:{"text-align":"left"}},_I=t("td",{style:{"text-align":"center"}},"LCP 52",-1),rI={style:{"text-align":"left"}},iI={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},cI=t("td",{style:{"text-align":"center"}},null,-1),aI={style:{"text-align":"left"}},hI=t("code",null,"树",-1),uI=t("code",null,"线段树",-1),fI=t("code",null,"二叉搜索树",-1),gI=t("code",null,"4+",-1),mI={style:{"text-align":"left"}},yI=t("td",{style:{"text-align":"center"}},"LCP 60",-1),bI={style:{"text-align":"left"}},xI={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},pI=t("td",{style:{"text-align":"center"}},null,-1),kI={style:{"text-align":"left"}},MI=t("code",null,"树",-1),vI=t("code",null,"动态规划",-1),II=t("code",null,"二叉树",-1),EI={style:{"text-align":"left"}},wI=t("td",{style:{"text-align":"center"}},"LCP 64",-1),zI={style:{"text-align":"left"}},OI={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},qI=t("td",{style:{"text-align":"center"}},null,-1),jI={style:{"text-align":"left"}},HI=t("code",null,"树",-1),LI=t("code",null,"深度优先搜索",-1),CI=t("code",null,"动态规划",-1),NI=t("code",null,"1+",-1),PI={style:{"text-align":"left"}},KI=t("td",{style:{"text-align":"center"}},"LCP 67",-1),BI={style:{"text-align":"left"}},VI={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},TI=t("td",{style:{"text-align":"center"}},null,-1),UI={style:{"text-align":"left"}},RI=t("code",null,"树",-1),WI=t("code",null,"深度优先搜索",-1),GI=t("code",null,"广度优先搜索",-1),YI=t("code",null,"1+",-1),QI={style:{"text-align":"left"}},SI=t("td",{style:{"text-align":"center"}},"剑指 Offer 07",-1),DI={style:{"text-align":"left"}},ZI={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},AI={style:{"text-align":"center"}},FI={href:"/problem/jz_offer_07_1",target:"_blank",rel:"noopener noreferrer"},JI={style:{"text-align":"left"}},XI=t("code",null,"树",-1),$I=t("code",null,"数组",-1),tE=t("code",null,"哈希表",-1),eE=t("code",null,"2+",-1),lE={style:{"text-align":"left"}},oE=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),nE={style:{"text-align":"left"}},sE={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},dE={style:{"text-align":"center"}},_E={href:"/problem/jz_offer_26_1",target:"_blank",rel:"noopener noreferrer"},rE={style:{"text-align":"left"}},iE=t("code",null,"树",-1),cE=t("code",null,"深度优先搜索",-1),aE=t("code",null,"二叉树",-1),hE={style:{"text-align":"left"}},uE=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),fE={style:{"text-align":"left"}},gE={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},mE={style:{"text-align":"center"}},yE={href:"/problem/jz_offer_27_1",target:"_blank",rel:"noopener noreferrer"},bE={style:{"text-align":"left"}},xE=t("code",null,"树",-1),pE=t("code",null,"深度优先搜索",-1),kE=t("code",null,"广度优先搜索",-1),ME=t("code",null,"1+",-1),vE={style:{"text-align":"left"}},IE=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),EE={style:{"text-align":"left"}},wE={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},zE={style:{"text-align":"center"}},OE={href:"/problem/jz_offer_28_1",target:"_blank",rel:"noopener noreferrer"},qE={style:{"text-align":"left"}},jE=t("code",null,"树",-1),HE=t("code",null,"深度优先搜索",-1),LE=t("code",null,"广度优先搜索",-1),CE=t("code",null,"1+",-1),NE={style:{"text-align":"left"}},PE=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - I",-1),KE={style:{"text-align":"left"}},BE={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},VE={style:{"text-align":"center"}},TE={href:"/problem/jz_offer_32_1",target:"_blank",rel:"noopener noreferrer"},UE={style:{"text-align":"left"}},RE=t("code",null,"树",-1),WE=t("code",null,"广度优先搜索",-1),GE=t("code",null,"二叉树",-1),YE={style:{"text-align":"left"}},QE=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - II",-1),SE={style:{"text-align":"left"}},DE={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},ZE={style:{"text-align":"center"}},AE={href:"/problem/jz_offer_32_2",target:"_blank",rel:"noopener noreferrer"},FE={style:{"text-align":"left"}},JE=t("code",null,"树",-1),XE=t("code",null,"广度优先搜索",-1),$E=t("code",null,"二叉树",-1),tw={style:{"text-align":"left"}},ew=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - III",-1),lw={style:{"text-align":"left"}},ow={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},nw={style:{"text-align":"center"}},sw={href:"/problem/jz_offer_32_3",target:"_blank",rel:"noopener noreferrer"},dw={style:{"text-align":"left"}},_w=t("code",null,"树",-1),rw=t("code",null,"广度优先搜索",-1),iw=t("code",null,"二叉树",-1),cw={style:{"text-align":"left"}},aw=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),hw={style:{"text-align":"left"}},uw={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},fw={style:{"text-align":"center"}},gw={href:"/problem/jz_offer_33_1",target:"_blank",rel:"noopener noreferrer"},mw={style:{"text-align":"left"}},yw=t("code",null,"栈",-1),bw=t("code",null,"树",-1),xw=t("code",null,"二叉搜索树",-1),pw=t("code",null,"4+",-1),kw={style:{"text-align":"left"}},Mw=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),vw={style:{"text-align":"left"}},Iw={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},Ew={style:{"text-align":"center"}},ww={href:"/problem/jz_offer_34_1",target:"_blank",rel:"noopener noreferrer"},zw={style:{"text-align":"left"}},Ow=t("code",null,"树",-1),qw=t("code",null,"深度优先搜索",-1),jw=t("code",null,"回溯",-1),Hw=t("code",null,"1+",-1),Lw={style:{"text-align":"left"}},Cw=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),Nw={style:{"text-align":"left"}},Pw={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},Kw={style:{"text-align":"center"}},Bw={href:"/problem/jz_offer_36_1",target:"_blank",rel:"noopener noreferrer"},Vw={style:{"text-align":"left"}},Tw=t("code",null,"栈",-1),Uw=t("code",null,"树",-1),Rw=t("code",null,"深度优先搜索",-1),Ww=t("code",null,"4+",-1),Gw={style:{"text-align":"left"}},Yw=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),Qw={style:{"text-align":"left"}},Sw={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Dw={style:{"text-align":"center"}},Zw={href:"/problem/jz_offer_37_1",target:"_blank",rel:"noopener noreferrer"},Aw={style:{"text-align":"left"}},Fw=t("code",null,"树",-1),Jw=t("code",null,"深度优先搜索",-1),Xw=t("code",null,"广度优先搜索",-1),$w=t("code",null,"3+",-1),tz={style:{"text-align":"left"}},ez=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),lz={style:{"text-align":"left"}},oz={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},nz={style:{"text-align":"center"}},sz={href:"/problem/jz_offer_54_1",target:"_blank",rel:"noopener noreferrer"},dz={style:{"text-align":"left"}},_z=t("code",null,"树",-1),rz=t("code",null,"深度优先搜索",-1),iz=t("code",null,"二叉搜索树",-1),cz=t("code",null,"1+",-1),az={style:{"text-align":"left"}},hz=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),uz={style:{"text-align":"left"}},fz={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},gz={style:{"text-align":"center"}},mz={href:"/problem/jz_offer_55_1",target:"_blank",rel:"noopener noreferrer"},yz={style:{"text-align":"left"}},bz=t("code",null,"树",-1),xz=t("code",null,"深度优先搜索",-1),pz=t("code",null,"广度优先搜索",-1),kz=t("code",null,"1+",-1),Mz={style:{"text-align":"left"}},vz=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),Iz={style:{"text-align":"left"}},Ez={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},wz=t("td",{style:{"text-align":"center"}},null,-1),zz={style:{"text-align":"left"}},Oz=t("code",null,"树",-1),qz=t("code",null,"深度优先搜索",-1),jz=t("code",null,"二叉树",-1),Hz={style:{"text-align":"left"}},Lz=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),Cz={style:{"text-align":"left"}},Nz={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},Pz=t("td",{style:{"text-align":"center"}},null,-1),Kz={style:{"text-align":"left"}},Bz=t("code",null,"树",-1),Vz=t("code",null,"深度优先搜索",-1),Tz=t("code",null,"二叉搜索树",-1),Uz=t("code",null,"1+",-1),Rz={style:{"text-align":"left"}},Wz=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),Gz={style:{"text-align":"left"}},Yz={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},Qz=t("td",{style:{"text-align":"center"}},null,-1),Sz={style:{"text-align":"left"}},Dz=t("code",null,"树",-1),Zz=t("code",null,"深度优先搜索",-1),Az=t("code",null,"二叉树",-1),Fz={style:{"text-align":"left"}},Jz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),Xz={style:{"text-align":"left"}},$z={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},tO=t("td",{style:{"text-align":"center"}},null,-1),eO={style:{"text-align":"left"}},lO=t("code",null,"树",-1),oO=t("code",null,"广度优先搜索",-1),nO=t("code",null,"设计",-1),sO=t("code",null,"1+",-1),dO={style:{"text-align":"left"}},_O=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),rO={style:{"text-align":"left"}},iO={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},cO=t("td",{style:{"text-align":"center"}},null,-1),aO={style:{"text-align":"left"}},hO=t("code",null,"树",-1),uO=t("code",null,"深度优先搜索",-1),fO=t("code",null,"广度优先搜索",-1),gO=t("code",null,"1+",-1),mO={style:{"text-align":"left"}},yO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),bO={style:{"text-align":"left"}},xO={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},pO=t("td",{style:{"text-align":"center"}},null,-1),kO={style:{"text-align":"left"}},MO=t("code",null,"树",-1),vO=t("code",null,"深度优先搜索",-1),IO=t("code",null,"广度优先搜索",-1),EO=t("code",null,"1+",-1),wO={style:{"text-align":"left"}},zO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),OO={style:{"text-align":"left"}},qO={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},jO=t("td",{style:{"text-align":"center"}},null,-1),HO={style:{"text-align":"left"}},LO=t("code",null,"树",-1),CO=t("code",null,"深度优先搜索",-1),NO=t("code",null,"广度优先搜索",-1),PO=t("code",null,"1+",-1),KO={style:{"text-align":"left"}},BO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),VO={style:{"text-align":"left"}},TO={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},UO=t("td",{style:{"text-align":"center"}},null,-1),RO={style:{"text-align":"left"}},WO=t("code",null,"树",-1),GO=t("code",null,"深度优先搜索",-1),YO=t("code",null,"二叉树",-1),QO={style:{"text-align":"left"}},SO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),DO={style:{"text-align":"left"}},ZO={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},AO=t("td",{style:{"text-align":"center"}},null,-1),FO={style:{"text-align":"left"}},JO=t("code",null,"树",-1),XO=t("code",null,"深度优先搜索",-1),$O=t("code",null,"广度优先搜索",-1),tq=t("code",null,"3+",-1),eq={style:{"text-align":"left"}},lq=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),oq={style:{"text-align":"left"}},nq={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},sq=t("td",{style:{"text-align":"center"}},null,-1),dq={style:{"text-align":"left"}},_q=t("code",null,"树",-1),rq=t("code",null,"深度优先搜索",-1),iq=t("code",null,"二叉树",-1),cq={style:{"text-align":"left"}},aq=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),hq={style:{"text-align":"left"}},uq={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},fq=t("td",{style:{"text-align":"center"}},null,-1),gq={style:{"text-align":"left"}},mq=t("code",null,"树",-1),yq=t("code",null,"深度优先搜索",-1),bq=t("code",null,"二叉树",-1),xq={style:{"text-align":"left"}},pq=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),kq={style:{"text-align":"left"}},Mq={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},vq=t("td",{style:{"text-align":"center"}},null,-1),Iq={style:{"text-align":"left"}},Eq=t("code",null,"树",-1),wq=t("code",null,"深度优先搜索",-1),zq=t("code",null,"动态规划",-1),Oq=t("code",null,"1+",-1),qq={style:{"text-align":"left"}},jq=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),Hq={style:{"text-align":"left"}},Lq={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},Cq=t("td",{style:{"text-align":"center"}},null,-1),Nq={style:{"text-align":"left"}},Pq=t("code",null,"栈",-1),Kq=t("code",null,"树",-1),Bq=t("code",null,"深度优先搜索",-1),Vq=t("code",null,"2+",-1),Tq={style:{"text-align":"left"}},Uq=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),Rq={style:{"text-align":"left"}},Wq={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},Gq=t("td",{style:{"text-align":"center"}},null,-1),Yq={style:{"text-align":"left"}},Qq=t("code",null,"树",-1),Sq=t("code",null,"深度优先搜索",-1),Dq=t("code",null,"二叉搜索树",-1),Zq=t("code",null,"1+",-1),Aq={style:{"text-align":"left"}},Fq=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),Jq={style:{"text-align":"left"}},Xq={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},$q=t("td",{style:{"text-align":"center"}},null,-1),tj={style:{"text-align":"left"}},ej=t("code",null,"树",-1),lj=t("code",null,"深度优先搜索",-1),oj=t("code",null,"二叉搜索树",-1),nj=t("code",null,"1+",-1),sj={style:{"text-align":"left"}},dj=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),_j={style:{"text-align":"left"}},rj={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},ij=t("td",{style:{"text-align":"center"}},null,-1),cj={style:{"text-align":"left"}},aj=t("code",null,"栈",-1),hj=t("code",null,"树",-1),uj=t("code",null,"设计",-1),fj=t("code",null,"3+",-1),gj={style:{"text-align":"left"}},mj=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),yj={style:{"text-align":"left"}},bj={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},xj=t("td",{style:{"text-align":"center"}},null,-1),pj={style:{"text-align":"left"}},kj=t("code",null,"树",-1),Mj=t("code",null,"设计",-1),vj=t("code",null,"二叉搜索树",-1),Ij=t("code",null,"3+",-1),Ej={style:{"text-align":"left"}},wj=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),zj={style:{"text-align":"left"}},Oj={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},qj=t("td",{style:{"text-align":"center"}},null,-1),jj={style:{"text-align":"left"}},Hj=t("code",null,"树",-1),Lj=t("code",null,"二叉搜索树",-1),Cj=t("code",null,"数组",-1),Nj=t("code",null,"2+",-1),Pj={style:{"text-align":"left"}},Kj=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),Bj={style:{"text-align":"left"}},Vj={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},Tj=t("td",{style:{"text-align":"center"}},null,-1),Uj={style:{"text-align":"left"}},Rj=t("code",null,"树",-1),Wj=t("code",null,"广度优先搜索",-1),Gj=t("code",null,"链表",-1),Yj=t("code",null,"1+",-1),Qj={style:{"text-align":"left"}},Sj=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),Dj={style:{"text-align":"left"}},Zj={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},Aj=t("td",{style:{"text-align":"center"}},null,-1),Fj={style:{"text-align":"left"}},Jj=t("code",null,"树",-1),Xj=t("code",null,"深度优先搜索",-1),$j=t("code",null,"二叉树",-1),tH={style:{"text-align":"left"}},eH=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),lH={style:{"text-align":"left"}},oH={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},nH=t("td",{style:{"text-align":"center"}},null,-1),sH={style:{"text-align":"left"}},dH=t("code",null,"树",-1),_H=t("code",null,"深度优先搜索",-1),rH=t("code",null,"二叉搜索树",-1),iH=t("code",null,"1+",-1),cH={style:{"text-align":"left"}},aH=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),hH={style:{"text-align":"left"}},uH={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},fH=t("td",{style:{"text-align":"center"}},null,-1),gH={style:{"text-align":"left"}},mH=t("code",null,"树",-1),yH=t("code",null,"深度优先搜索",-1),bH=t("code",null,"二叉搜索树",-1),xH=t("code",null,"1+",-1),pH={style:{"text-align":"left"}},kH=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),MH={style:{"text-align":"left"}},vH={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},IH=t("td",{style:{"text-align":"center"}},null,-1),EH={style:{"text-align":"left"}},wH=t("code",null,"树",-1),zH=t("code",null,"深度优先搜索",-1),OH=t("code",null,"二叉树",-1),qH={style:{"text-align":"left"}},jH=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),HH={style:{"text-align":"left"}},LH={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},CH=t("td",{style:{"text-align":"center"}},null,-1),NH={style:{"text-align":"left"}},PH=t("code",null,"树",-1),KH=t("code",null,"二叉搜索树",-1),BH=t("code",null,"回溯",-1),VH=t("code",null,"1+",-1),TH={style:{"text-align":"left"}},UH=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),RH={style:{"text-align":"left"}},WH={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},GH=t("td",{style:{"text-align":"center"}},null,-1),YH={style:{"text-align":"left"}},QH=t("code",null,"树",-1),SH=t("code",null,"深度优先搜索",-1),DH=t("code",null,"二叉树",-1),ZH=t("code",null,"2+",-1),AH={style:{"text-align":"left"}},FH=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),JH={style:{"text-align":"left"}},XH={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},$H=t("td",{style:{"text-align":"center"}},null,-1),tL={style:{"text-align":"left"}},eL=t("code",null,"树",-1),lL=t("code",null,"深度优先搜索",-1),oL=t("code",null,"二叉树",-1),nL={style:{"text-align":"left"}},sL=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),dL={style:{"text-align":"left"}},_L={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},rL=t("td",{style:{"text-align":"center"}},null,-1),iL={style:{"text-align":"left"}},cL=t("code",null,"栈",-1),aL=t("code",null,"树",-1),hL=t("code",null,"深度优先搜索",-1),uL=t("code",null,"3+",-1),fL={style:{"text-align":"left"}};function gL(mL,yL){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[q]),_:1}),l(),j,l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[Y]),_:1})]),Q,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[Nt]),_:1})])]),Pt,a(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Bt,t("td",Vt,[t("a",Tt,[l("二叉树的中序遍历"),e(s)])]),t("td",Ut,[t("a",Rt,[l("[✓]"),e(s)])]),t("td",Wt,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Qt]),_:1}),l(),St]),t("td",Dt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zt,t("td",At,[t("a",Ft,[l("不同的二叉搜索树 II"),e(s)])]),t("td",Jt,[t("a",Xt,[l("[✓]"),e(s)])]),t("td",$t,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[ee]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[le]),_:1}),l(),oe]),t("td",ne,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[se,t("td",de,[t("a",_e,[l("不同的二叉搜索树"),e(s)])]),t("td",re,[t("a",ie,[l("[✓]"),e(s)])]),t("td",ce,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[he]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[ue]),_:1}),l(),fe]),t("td",ge,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[me,t("td",ye,[t("a",be,[l("验证二叉搜索树"),e(s)])]),t("td",xe,[t("a",pe,[l("[✓]"),e(s)])]),t("td",ke,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Me]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ve]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Ie]),_:1}),l(),Ee]),t("td",we,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ze,t("td",Oe,[t("a",qe,[l("恢复二叉搜索树"),e(s)])]),t("td",je,[t("a",He,[l("[✓]"),e(s)])]),t("td",Le,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Pe]),_:1}),l(),Ke]),t("td",Be,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ve,t("td",Te,[t("a",Ue,[l("相同的树"),e(s)])]),t("td",Re,[t("a",We,[l("[✓]"),e(s)])]),t("td",Ge,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ye]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Qe]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Se]),_:1}),l(),De]),t("td",Ze,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ae,t("td",Fe,[t("a",Je,[l("对称二叉树"),e(s)])]),t("td",Xe,[t("a",$e,[l("[✓]"),e(s)])]),t("td",tl,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[el]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ll]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ol]),_:1}),l(),nl]),t("td",sl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[dl,t("td",_l,[t("a",rl,[l("二叉树的层序遍历"),e(s)])]),t("td",il,[t("a",cl,[l("[✓]"),e(s)])]),t("td",al,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[hl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ul]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[fl]),_:1})]),t("td",gl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ml,t("td",yl,[t("a",bl,[l("二叉树的锯齿形层序遍历"),e(s)])]),t("td",xl,[t("a",pl,[l("[✓]"),e(s)])]),t("td",kl,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Il]),_:1})]),t("td",El,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wl,t("td",zl,[t("a",Ol,[l("二叉树的最大深度"),e(s)])]),t("td",ql,[t("a",jl,[l("[✓]"),e(s)])]),t("td",Hl,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ll]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Nl]),_:1}),l(),Pl]),t("td",Kl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Bl,t("td",Vl,[t("a",Tl,[l("从前序与中序遍历序列构造二叉树"),e(s)])]),t("td",Ul,[t("a",Rl,[l("[✓]"),e(s)])]),t("td",Wl,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Gl]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yl]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ql]),_:1}),l(),Sl]),t("td",Dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zl,t("td",Al,[t("a",Fl,[l("从中序与后序遍历序列构造二叉树"),e(s)])]),t("td",Jl,[t("a",Xl,[l("[✓]"),e(s)])]),t("td",$l,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[to]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[lo]),_:1}),l(),oo]),t("td",no,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[so,t("td",_o,[t("a",ro,[l("二叉树的层序遍历 II"),e(s)])]),t("td",io,[t("a",co,[l("[✓]"),e(s)])]),t("td",ao,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ho]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[uo]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[fo]),_:1})]),t("td",go,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mo,t("td",yo,[t("a",bo,[l("将有序数组转换为二叉搜索树"),e(s)])]),t("td",xo,[t("a",po,[l("[✓]"),e(s)])]),t("td",ko,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Mo]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[vo]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Io]),_:1}),l(),Eo]),t("td",wo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zo,t("td",Oo,[t("a",qo,[l("有序链表转换二叉搜索树"),e(s)])]),t("td",jo,[t("a",Ho,[l("[✓]"),e(s)])]),t("td",Lo,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Co]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[No]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Po]),_:1}),l(),Ko]),t("td",Bo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vo,t("td",To,[t("a",Uo,[l("平衡二叉树"),e(s)])]),t("td",Ro,[t("a",Wo,[l("[✓]"),e(s)])]),t("td",Go,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Yo]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Qo]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[So]),_:1})]),t("td",Do,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zo,t("td",Ao,[t("a",Fo,[l("二叉树的最小深度"),e(s)])]),t("td",Jo,[t("a",Xo,[l("[✓]"),e(s)])]),t("td",$o,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[tn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[en]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ln]),_:1}),l(),on]),t("td",nn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sn,t("td",dn,[t("a",_n,[l("路径总和"),e(s)])]),t("td",rn,[t("a",cn,[l("[✓]"),e(s)])]),t("td",an,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[hn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[un]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[fn]),_:1}),l(),gn]),t("td",mn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yn,t("td",bn,[t("a",xn,[l("路径总和 II"),e(s)])]),t("td",pn,[t("a",kn,[l("[✓]"),e(s)])]),t("td",Mn,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[In]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[En]),_:1}),l(),wn]),t("td",zn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[On,t("td",qn,[t("a",jn,[l("二叉树展开为链表"),e(s)])]),t("td",Hn,[t("a",Ln,[l("[✓]"),e(s)])]),t("td",Cn,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Nn]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Pn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Kn]),_:1}),l(),Bn]),t("td",Vn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tn,t("td",Un,[t("a",Rn,[l("填充每个节点的下一个右侧节点指针"),e(s)])]),t("td",Wn,[t("a",Gn,[l("[✓]"),e(s)])]),t("td",Yn,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Sn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Dn]),_:1}),l(),Zn]),t("td",An,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fn,t("td",Jn,[t("a",Xn,[l("填充每个节点的下一个右侧节点指针 II"),e(s)])]),t("td",$n,[t("a",ts,[l("[✓]"),e(s)])]),t("td",es,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ns]),_:1}),l(),ss]),t("td",ds,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_s,t("td",rs,[t("a",is,[l("二叉树中的最大路径和"),e(s)])]),t("td",cs,[t("a",as,[l("[✓]"),e(s)])]),t("td",hs,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fs]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[gs]),_:1}),l(),ms]),t("td",ys,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bs,t("td",xs,[t("a",ps,[l("求根节点到叶节点数字之和"),e(s)])]),t("td",ks,[t("a",Ms,[l("[✓]"),e(s)])]),t("td",vs,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Is]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Es]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ws]),_:1})]),t("td",zs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Os,t("td",qs,[t("a",js,[l("二叉树的前序遍历"),e(s)])]),t("td",Hs,[t("a",Ls,[l("[✓]"),e(s)])]),t("td",Cs,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ns]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ps]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ks]),_:1}),l(),Bs]),t("td",Vs,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ts,t("td",Us,[t("a",Rs,[l("二叉树的后序遍历"),e(s)])]),t("td",Ws,[t("a",Gs,[l("[✓]"),e(s)])]),t("td",Ys,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Qs]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ss]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ds]),_:1}),l(),Zs]),t("td",As,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fs,t("td",Js,[t("a",Xs,[l("上下翻转二叉树"),e(s)])]),t("td",$s,[t("a",td,[l("[✓]"),e(s)])]),t("td",ed,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ld]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[od]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[nd]),_:1})]),t("td",sd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dd,t("td",_d,[t("a",rd,[l("二叉搜索树迭代器"),e(s)])]),t("td",id,[t("a",cd,[l("[✓]"),e(s)])]),t("td",ad,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[hd]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ud]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[fd]),_:1}),l(),gd]),t("td",md,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yd,t("td",bd,[t("a",xd,[l("二叉树的右视图"),e(s)])]),t("td",pd,[t("a",kd,[l("[✓]"),e(s)])]),t("td",Md,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vd]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Id]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ed]),_:1}),l(),wd]),t("td",zd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Od,t("td",qd,[t("a",jd,[l("完全二叉树的节点个数"),e(s)])]),t("td",Hd,[t("a",Ld,[l("[✓]"),e(s)])]),t("td",Cd,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Nd]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Kd]),_:1}),l(),Bd]),t("td",Vd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Td,t("td",Ud,[t("a",Rd,[l("翻转二叉树"),e(s)])]),t("td",Wd,[t("a",Gd,[l("[✓]"),e(s)])]),t("td",Yd,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qd]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Sd]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Dd]),_:1}),l(),Zd]),t("td",Ad,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fd,t("td",Jd,[t("a",Xd,[l("二叉搜索树中第 K 小的元素"),e(s)])]),t("td",$d,[t("a",t_,[l("[✓]"),e(s)])]),t("td",e_,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[o_]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[n_]),_:1}),l(),s_]),t("td",d_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[__,t("td",r_,[t("a",i_,[l("二叉搜索树的最近公共祖先"),e(s)])]),t("td",c_,[t("a",a_,[l("[✓]"),e(s)])]),t("td",h_,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[u_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[f_]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[g_]),_:1}),l(),m_]),t("td",y_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b_,t("td",x_,[t("a",p_,[l("二叉树的最近公共祖先"),e(s)])]),t("td",k_,[t("a",M_,[l("[✓]"),e(s)])]),t("td",v_,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[I_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[E_]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[w_]),_:1})]),t("td",z_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O_,t("td",q_,[t("a",j_,[l("统计同值子树"),e(s)])]),H_,t("td",L_,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[C_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[N_]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[P_]),_:1})]),t("td",K_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B_,t("td",V_,[t("a",T_,[l("验证二叉搜索树的前序遍历序列"),e(s)])]),U_,t("td",R_,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[W_]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[G_]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Y_]),_:1}),l(),Q_]),t("td",S_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D_,t("td",Z_,[t("a",A_,[l("二叉树的所有路径"),e(s)])]),t("td",F_,[t("a",J_,[l("[✓]"),e(s)])]),t("td",X_,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tr]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[er]),_:1}),l(),lr]),t("td",or,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[nr,t("td",sr,[t("a",dr,[l("最接近的二叉搜索树值"),e(s)])]),_r,t("td",rr,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ir]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cr]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[ar]),_:1}),l(),hr]),t("td",ur,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fr,t("td",gr,[t("a",mr,[l("最接近的二叉搜索树值 II"),e(s)])]),yr,t("td",br,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[xr]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[pr]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kr]),_:1}),l(),Mr]),t("td",vr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ir,t("td",Er,[t("a",wr,[l("二叉搜索树中的中序后继"),e(s)])]),zr,t("td",Or,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[qr]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jr]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Hr]),_:1}),l(),Lr]),t("td",Cr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nr,t("td",Pr,[t("a",Kr,[l("二叉树的序列化与反序列化"),e(s)])]),t("td",Br,[t("a",Vr,[l("[✓]"),e(s)])]),t("td",Tr,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ur]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Rr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Wr]),_:1}),l(),Gr]),t("td",Yr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qr,t("td",Sr,[t("a",Dr,[l("二叉树最长连续序列"),e(s)])]),Zr,t("td",Ar,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Fr]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jr]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Xr]),_:1})]),t("td",$r,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ti,t("td",ei,[t("a",li,[l("二叉树的垂直遍历"),e(s)])]),oi,t("td",ni,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[si]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[di]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_i]),_:1}),l(),ri]),t("td",ii,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ci,t("td",ai,[t("a",hi,[l("验证二叉树的前序序列化"),e(s)])]),ui,t("td",fi,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[gi]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[mi]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[yi]),_:1}),l(),bi]),t("td",xi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pi,t("td",ki,[t("a",Mi,[l("最大二叉搜索子树"),e(s)])]),vi,t("td",Ii,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ei]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wi]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[zi]),_:1}),l(),Oi]),t("td",qi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ji,t("td",Hi,[t("a",Li,[l("打家劫舍 III"),e(s)])]),Ci,t("td",Ni,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Pi]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ki]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Bi]),_:1}),l(),Vi]),t("td",Ti,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ui,t("td",Ri,[t("a",Wi,[l("寻找二叉树的叶子节点"),e(s)])]),t("td",Gi,[t("a",Yi,[l("[✓]"),e(s)])]),t("td",Qi,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Si]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Di]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Zi]),_:1})]),t("td",Ai,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fi,t("td",Ji,[t("a",Xi,[l("左叶子之和"),e(s)])]),$i,t("td",tc,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ec]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[lc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[oc]),_:1}),l(),nc]),t("td",sc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[dc,t("td",_c,[t("a",rc,[l("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",ic,[t("a",cc,[l("[✓]"),e(s)])]),t("td",ac,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[hc]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[uc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fc]),_:1}),l(),gc]),t("td",mc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yc,t("td",bc,[t("a",xc,[l("将 N 叉树编码为二叉树"),e(s)])]),pc,t("td",kc,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Mc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ic]),_:1}),l(),Ec]),t("td",wc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zc,t("td",Oc,[t("a",qc,[l("路径总和 III"),e(s)])]),t("td",jc,[t("a",Hc,[l("[✓]"),e(s)])]),t("td",Lc,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Cc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Nc]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Pc]),_:1})]),t("td",Kc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bc,t("td",Vc,[t("a",Tc,[l("序列化和反序列化二叉搜索树"),e(s)])]),Uc,t("td",Rc,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Wc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Gc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Yc]),_:1}),l(),Qc]),t("td",Sc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dc,t("td",Zc,[t("a",Ac,[l("删除二叉搜索树中的节点"),e(s)])]),t("td",Fc,[t("a",Jc,[l("[✓]"),e(s)])]),t("td",Xc,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$c]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[ta]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ea]),_:1})]),t("td",la,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oa,t("td",na,[t("a",sa,[l("二叉搜索树中的众数"),e(s)])]),da,t("td",_a,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ra]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ia]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[ca]),_:1}),l(),aa]),t("td",ha,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ua,t("td",fa,[t("a",ga,[l("出现次数最多的子树元素和"),e(s)])]),ma,t("td",ya,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ba]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xa]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[pa]),_:1}),l(),ka]),t("td",Ma,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[va,t("td",Ia,[t("a",Ea,[l("二叉搜索树中的中序后继 II"),e(s)])]),wa,t("td",za,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Oa]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[qa]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ja]),_:1})]),t("td",Ha,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[La,t("td",Ca,[t("a",Na,[l("找树左下角的值"),e(s)])]),Pa,t("td",Ka,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ba]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Va]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ta]),_:1}),l(),Ua]),t("td",Ra,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wa,t("td",Ga,[t("a",Ya,[l("在每个树行中找最大值"),e(s)])]),Qa,t("td",Sa,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Da]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Za]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Aa]),_:1}),l(),Fa]),t("td",Ja,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xa,t("td",$a,[t("a",t1,[l("二叉搜索树的最小绝对差"),e(s)])]),t("td",e1,[t("a",l1,[l("[✓]"),e(s)])]),t("td",o1,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[n1]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[s1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[d1]),_:1}),l(),_1]),t("td",r1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[i1,t("td",c1,[t("a",a1,[l("从字符串生成二叉树"),e(s)])]),h1,t("td",u1,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[f1]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[g1]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[m1]),_:1}),l(),y1]),t("td",b1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x1,t("td",p1,[t("a",k1,[l("把二叉搜索树转换为累加树"),e(s)])]),M1,t("td",v1,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[I1]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[E1]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[w1]),_:1}),l(),z1]),t("td",O1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q1,t("td",j1,[t("a",H1,[l("二叉树的直径"),e(s)])]),t("td",L1,[t("a",C1,[l("[✓]"),e(s)])]),t("td",N1,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[P1]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[K1]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[B1]),_:1})]),t("td",V1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[T1,t("td",U1,[t("a",R1,[l("二叉树的边界"),e(s)])]),W1,t("td",G1,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Y1]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Q1]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[S1]),_:1})]),t("td",D1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z1,t("td",A1,[t("a",F1,[l("二叉树最长连续序列 II"),e(s)])]),J1,t("td",X1,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$1]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[th]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[eh]),_:1})]),t("td",lh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oh,t("td",nh,[t("a",sh,[l("二叉树的坡度"),e(s)])]),dh,t("td",_h,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[rh]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ih]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ch]),_:1})]),t("td",ah,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[hh,t("td",uh,[t("a",fh,[l("另一棵树的子树"),e(s)])]),t("td",gh,[t("a",mh,[l("[✓]"),e(s)])]),t("td",yh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[bh]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xh]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ph]),_:1}),l(),kh]),t("td",Mh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vh,t("td",Ih,[t("a",Eh,[l("根据二叉树创建字符串"),e(s)])]),wh,t("td",zh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Oh]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[qh]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[jh]),_:1}),l(),Hh]),t("td",Lh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ch,t("td",Nh,[t("a",Ph,[l("合并二叉树"),e(s)])]),t("td",Kh,[t("a",Bh,[l("[✓]"),e(s)])]),t("td",Vh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Th]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Uh]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Rh]),_:1}),l(),Wh]),t("td",Gh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Yh,t("td",Qh,[t("a",Sh,[l("在二叉树中增加一行"),e(s)])]),Dh,t("td",Zh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ah]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Fh]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Jh]),_:1}),l(),Xh]),t("td",$h,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tu,t("td",eu,[t("a",lu,[l("二叉树的层平均值"),e(s)])]),t("td",ou,[t("a",nu,[l("[✓]"),e(s)])]),t("td",su,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[du]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_u]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ru]),_:1}),l(),iu]),t("td",cu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[au,t("td",hu,[t("a",uu,[l("寻找重复的子树"),e(s)])]),fu,t("td",gu,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[mu]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yu]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[bu]),_:1}),l(),xu]),t("td",pu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ku,t("td",Mu,[t("a",vu,[l("两数之和 IV - 输入二叉搜索树"),e(s)])]),Iu,t("td",Eu,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[wu]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ou]),_:1}),l(),qu]),t("td",ju,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Hu,t("td",Lu,[t("a",Cu,[l("最大二叉树"),e(s)])]),t("td",Nu,[t("a",Pu,[l("[✓]"),e(s)])]),t("td",Ku,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Bu]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Vu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Tu]),_:1}),l(),Uu]),t("td",Ru,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wu,t("td",Gu,[t("a",Yu,[l("输出二叉树"),e(s)])]),Qu,t("td",Su,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Du]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Zu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Au]),_:1}),l(),Fu]),t("td",Ju,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xu,t("td",$u,[t("a",tf,[l("二叉树最大宽度"),e(s)])]),t("td",ef,[t("a",lf,[l("[✓]"),e(s)])]),t("td",of,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[nf]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sf]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[df]),_:1}),l(),_f]),t("td",rf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cf,t("td",af,[t("a",hf,[l("均匀树划分"),e(s)])]),uf,t("td",ff,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[gf]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[mf]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[yf]),_:1})]),t("td",bf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xf,t("td",pf,[t("a",kf,[l("路径总和 IV"),e(s)])]),Mf,t("td",vf,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[If]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ef]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wf]),_:1}),l(),zf]),t("td",Of,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qf,t("td",jf,[t("a",Hf,[l("修剪二叉搜索树"),e(s)])]),Lf,t("td",Cf,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Nf]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Pf]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Kf]),_:1}),l(),Bf]),t("td",Vf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tf,t("td",Uf,[t("a",Rf,[l("二叉树中第二小的节点"),e(s)])]),Wf,t("td",Gf,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Yf]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Qf]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Sf]),_:1})]),t("td",Df,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zf,t("td",Af,[t("a",Ff,[l("最长同值路径"),e(s)])]),Jf,t("td",Xf,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$f]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tg]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[eg]),_:1})]),t("td",lg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[og,t("td",ng,[t("a",sg,[l("二叉搜索树中的搜索"),e(s)])]),t("td",dg,[t("a",_g,[l("[✓]"),e(s)])]),t("td",rg,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ig]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[cg]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ag]),_:1})]),t("td",hg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ug,t("td",fg,[t("a",gg,[l("二叉搜索树中的插入操作"),e(s)])]),t("td",mg,[t("a",yg,[l("[✓]"),e(s)])]),t("td",bg,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[xg]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[pg]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[kg]),_:1})]),t("td",Mg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vg,t("td",Ig,[t("a",Eg,[l("数据流中的第 K 大元素"),e(s)])]),t("td",wg,[t("a",zg,[l("[✓]"),e(s)])]),t("td",Og,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[qg]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[jg]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Hg]),_:1}),l(),Lg]),t("td",Cg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ng,t("td",Pg,[t("a",Kg,[l("二叉树最近的叶节点"),e(s)])]),Bg,t("td",Vg,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Tg]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ug]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Rg]),_:1}),l(),Wg]),t("td",Gg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yg,t("td",Qg,[t("a",Sg,[l("拆分二叉搜索树"),e(s)])]),Dg,t("td",Zg,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ag]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Fg]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Jg]),_:1}),l(),Xg]),t("td",$g,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tm,t("td",em,[t("a",lm,[l("二叉搜索树节点最小距离"),e(s)])]),t("td",om,[t("a",nm,[l("[✓]"),e(s)])]),t("td",sm,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[dm]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_m]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[rm]),_:1}),l(),im]),t("td",cm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[am,t("td",hm,[t("a",um,[l("二叉树剪枝"),e(s)])]),fm,t("td",gm,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[mm]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ym]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[bm]),_:1})]),t("td",xm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pm,t("td",km,[t("a",Mm,[l("二叉树中所有距离为 K 的结点"),e(s)])]),vm,t("td",Im,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Em]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wm]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[zm]),_:1}),l(),Om]),t("td",qm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jm,t("td",Hm,[t("a",Lm,[l("具有所有最深节点的最小子树"),e(s)])]),Cm,t("td",Nm,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Pm]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Km]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Bm]),_:1}),l(),Vm]),t("td",Tm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Um,t("td",Rm,[t("a",Wm,[l("叶子相似的树"),e(s)])]),Gm,t("td",Ym,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qm]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Sm]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Dm]),_:1})]),t("td",Zm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Am,t("td",Fm,[t("a",Jm,[l("根据前序和后序遍历构造二叉树"),e(s)])]),t("td",Xm,[t("a",$m,[l("[✓]"),e(s)])]),t("td",ty,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ey]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ly]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[oy]),_:1}),l(),ny]),t("td",sy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dy,t("td",_y,[t("a",ry,[l("所有可能的真二叉树"),e(s)])]),iy,t("td",cy,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ay]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[hy]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[uy]),_:1}),l(),fy]),t("td",gy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[my,t("td",yy,[t("a",by,[l("递增顺序搜索树"),e(s)])]),xy,t("td",py,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ky]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[My]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vy]),_:1}),l(),Iy]),t("td",Ey,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wy,t("td",zy,[t("a",Oy,[l("完全二叉树插入器"),e(s)])]),qy,t("td",jy,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Hy]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ly]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Cy]),_:1}),l(),Ny]),t("td",Py,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ky,t("td",By,[t("a",Vy,[l("二叉搜索树的范围和"),e(s)])]),Ty,t("td",Uy,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ry]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Wy]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Gy]),_:1}),l(),Yy]),t("td",Qy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Sy,t("td",Dy,[t("a",Zy,[l("翻转等价二叉树"),e(s)])]),Ay,t("td",Fy,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Jy]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xy]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[$y]),_:1})]),t("td",t2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e2,t("td",l2,[t("a",o2,[l("二叉树的完全性检验"),e(s)])]),t("td",n2,[t("a",s2,[l("[✓]"),e(s)])]),t("td",d2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[r2]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[i2]),_:1})]),t("td",c2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a2,t("td",h2,[t("a",u2,[l("单值二叉树"),e(s)])]),f2,t("td",g2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[m2]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[y2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[b2]),_:1}),l(),x2]),t("td",p2,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[k2,t("td",M2,[t("a",v2,[l("监控二叉树"),e(s)])]),I2,t("td",E2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[w2]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[z2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[O2]),_:1}),l(),q2]),t("td",j2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H2,t("td",L2,[t("a",C2,[l("翻转二叉树以匹配先序遍历"),e(s)])]),N2,t("td",P2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[K2]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[B2]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[V2]),_:1})]),t("td",T2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U2,t("td",R2,[t("a",W2,[l("在二叉树中分配硬币"),e(s)])]),G2,t("td",Y2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Q2]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[S2]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[D2]),_:1})]),t("td",Z2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A2,t("td",F2,[t("a",J2,[l("二叉树的垂序遍历"),e(s)])]),X2,t("td",$2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[tb]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[eb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[lb]),_:1}),l(),ob]),t("td",nb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sb,t("td",db,[t("a",_b,[l("从叶结点开始的最小字符串"),e(s)])]),rb,t("td",ib,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[cb]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ab]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[hb]),_:1}),l(),ub]),t("td",fb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gb,t("td",mb,[t("a",yb,[l("二叉树的堂兄弟节点"),e(s)])]),bb,t("td",xb,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[pb]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Mb]),_:1}),l(),vb]),t("td",Ib,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Eb,t("td",wb,[t("a",zb,[l("最大二叉树 II"),e(s)])]),Ob,t("td",qb,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[jb]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Hb]),_:1})]),t("td",Lb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cb,t("td",Nb,[t("a",Pb,[l("前序遍历构造二叉搜索树"),e(s)])]),t("td",Kb,[t("a",Bb,[l("[✓]"),e(s)])]),t("td",Vb,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Tb]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ub]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Rb]),_:1}),l(),Wb]),t("td",Gb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yb,t("td",Qb,[t("a",Sb,[l("从根到叶的二进制数之和"),e(s)])]),Db,t("td",Zb,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ab]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Fb]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Jb]),_:1})]),t("td",Xb,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$b,t("td",tx,[t("a",ex,[l("节点与其祖先之间的最大差值"),e(s)])]),lx,t("td",ox,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[nx]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sx]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[dx]),_:1})]),t("td",_x,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rx,t("td",ix,[t("a",cx,[l("从先序遍历还原二叉树"),e(s)])]),ax,t("td",hx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ux]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fx]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[gx]),_:1}),l(),mx]),t("td",yx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bx,t("td",xx,[t("a",px,[l("从二叉搜索树到更大和树"),e(s)])]),kx,t("td",Mx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vx]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ix]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Ex]),_:1}),l(),wx]),t("td",zx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ox,t("td",qx,[t("a",jx,[l("根到叶路径上的不足节点"),e(s)])]),Hx,t("td",Lx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Cx]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Nx]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Px]),_:1})]),t("td",Kx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bx,t("td",Vx,[t("a",Tx,[l("二叉树寻路"),e(s)])]),Ux,t("td",Rx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Wx]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Gx]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Yx]),_:1})]),t("td",Qx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sx,t("td",Dx,[t("a",Zx,[l("删点成林"),e(s)])]),Ax,t("td",Fx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Jx]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xx]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$x]),_:1}),l(),t0]),t("td",e0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l0,t("td",o0,[t("a",n0,[l("子树的最大平均值"),e(s)])]),s0,t("td",d0,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_0]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[r0]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[i0]),_:1})]),t("td",c0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a0,t("td",h0,[t("a",u0,[l("最深叶节点的最近公共祖先"),e(s)])]),f0,t("td",g0,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[m0]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[y0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[b0]),_:1}),l(),x0]),t("td",p0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k0,t("td",M0,[t("a",v0,[l("二叉树着色游戏"),e(s)])]),I0,t("td",E0,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[w0]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[z0]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[O0]),_:1})]),t("td",q0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j0,t("td",H0,[t("a",L0,[l("最大层内元素和"),e(s)])]),C0,t("td",N0,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[P0]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[K0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[B0]),_:1}),l(),V0]),t("td",T0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U0,t("td",R0,[t("a",W0,[l("查找两棵二叉搜索树之和"),e(s)])]),G0,t("td",Y0,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Q0]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[S0]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[D0]),_:1}),l(),Z0]),t("td",A0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F0,t("td",J0,[t("a",X0,[l("在受污染的二叉树中查找元素"),e(s)])]),$0,t("td",tp,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ep]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[lp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[op]),_:1}),l(),np]),t("td",sp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dp,t("td",_p,[t("a",rp,[l("层数最深叶子节点的和"),e(s)])]),ip,t("td",cp,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ap]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[hp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[up]),_:1}),l(),fp]),t("td",gp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mp,t("td",yp,[t("a",bp,[l("两棵二叉搜索树中的所有元素"),e(s)])]),xp,t("td",pp,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[kp]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Mp]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[vp]),_:1}),l(),Ip]),t("td",Ep,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wp,t("td",zp,[t("a",Op,[l("祖父节点值为偶数的节点和"),e(s)])]),qp,t("td",jp,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Hp]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Lp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Cp]),_:1}),l(),Np]),t("td",Pp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kp,t("td",Bp,[t("a",Vp,[l("删除给定值的叶子节点"),e(s)])]),Tp,t("td",Up,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Rp]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Wp]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Gp]),_:1})]),t("td",Yp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qp,t("td",Sp,[t("a",Dp,[l("分裂二叉树的最大乘积"),e(s)])]),Zp,t("td",Ap,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Fp]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jp]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Xp]),_:1})]),t("td",$p,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t6,t("td",e6,[t("a",l6,[l("验证二叉树"),e(s)])]),o6,t("td",n6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[s6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[d6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_6]),_:1}),l(),r6]),t("td",i6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c6,t("td",a6,[t("a",h6,[l("二叉树中的链表"),e(s)])]),u6,t("td",f6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[g6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[m6]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[y6]),_:1}),l(),b6]),t("td",x6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p6,t("td",k6,[t("a",M6,[l("二叉树中的最长交错路径"),e(s)])]),v6,t("td",I6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[E6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[w6]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[z6]),_:1}),l(),O6]),t("td",q6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j6,t("td",H6,[t("a",L6,[l("二叉搜索子树的最大键值和"),e(s)])]),C6,t("td",N6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[P6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[K6]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[B6]),_:1}),l(),V6]),t("td",T6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U6,t("td",R6,[t("a",W6,[l("找出克隆二叉树中的相同节点"),e(s)])]),G6,t("td",Y6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Q6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[S6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[D6]),_:1}),l(),Z6]),t("td",A6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[F6,t("td",J6,[t("a",X6,[l("将二叉搜索树变平衡"),e(s)])]),$6,t("td",t8,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[e8]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[l8]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[o8]),_:1}),l(),n8]),t("td",s8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d8,t("td",_8,[t("a",r8,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(s)])]),i8,t("td",c8,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[a8]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[h8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[u8]),_:1}),l(),f8]),t("td",g8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m8,t("td",y8,[t("a",b8,[l("统计二叉树中好节点的数目"),e(s)])]),x8,t("td",p8,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[k8]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[M8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[v8]),_:1}),l(),I8]),t("td",E8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w8,t("td",z8,[t("a",O8,[l("二叉树中的伪回文路径"),e(s)])]),q8,t("td",j8,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[H8]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[L8]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[C8]),_:1}),l(),N8]),t("td",P8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K8,t("td",B8,[t("a",V8,[l("寻找所有的独生节点"),e(s)])]),T8,t("td",U8,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[R8]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[W8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[G8]),_:1}),l(),Y8]),t("td",Q8,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[S8,t("td",D8,[t("a",Z8,[l("克隆含随机指针的二叉树"),e(s)])]),A8,t("td",F8,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[J8]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[X8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$8]),_:1}),l(),t3]),t("td",e3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l3,t("td",o3,[t("a",n3,[l("好叶子节点对的数量"),e(s)])]),s3,t("td",d3,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_3]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[r3]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[i3]),_:1})]),t("td",c3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a3,t("td",h3,[t("a",u3,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),f3,t("td",g3,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[m3]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[y3]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[b3]),_:1}),l(),x3]),t("td",p3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[k3,t("td",M3,[t("a",v3,[l("二叉搜索树迭代器 II"),e(s)])]),I3,t("td",E3,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[w3]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[z3]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[O3]),_:1}),l(),q3]),t("td",j3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H3,t("td",L3,[t("a",C3,[l("根据中缀表达式构造二叉表达式树"),e(s)])]),N3,t("td",P3,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[K3]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[B3]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[V3]),_:1}),l(),T3]),t("td",U3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R3,t("td",W3,[t("a",G3,[l("找到二叉树中最近的右侧节点"),e(s)])]),Y3,t("td",Q3,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[S3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[D3]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Z3]),_:1})]),t("td",A3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F3,t("td",J3,[t("a",X3,[l("奇偶树"),e(s)])]),$3,t("td",t5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[e5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[l5]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[o5]),_:1})]),t("td",n5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s5,t("td",d5,[t("a",_5,[l("检查两棵二叉表达式树是否等价"),e(s)])]),r5,t("td",i5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[c5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[a5]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[h5]),_:1}),l(),u5]),t("td",f5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g5,t("td",m5,[t("a",y5,[l("设计带解析函数的表达式树"),e(s)])]),b5,t("td",x5,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[p5]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[k5]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[M5]),_:1}),l(),v5]),t("td",I5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E5,t("td",w5,[t("a",z5,[l("二叉树的最近公共祖先 II"),e(s)])]),O5,t("td",q5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[j5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[H5]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[L5]),_:1})]),t("td",C5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N5,t("td",P5,[t("a",K5,[l("二叉树的最近公共祖先 III"),e(s)])]),B5,t("td",V5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[T5]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[U5]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[R5]),_:1}),l(),W5]),t("td",G5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y5,t("td",Q5,[t("a",S5,[l("纠正二叉树"),e(s)])]),D5,t("td",Z5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[A5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[F5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[J5]),_:1}),l(),X5]),t("td",$5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t4,t("td",e4,[t("a",l4,[l("改变二叉树的根节点"),e(s)])]),o4,t("td",n4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[s4]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[d4]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[_4]),_:1})]),t("td",r4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i4,t("td",c4,[t("a",a4,[l("二叉树的最近公共祖先 IV"),e(s)])]),h4,t("td",u4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[f4]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[g4]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[m4]),_:1}),l(),y4]),t("td",b4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x4,t("td",p4,[t("a",k4,[l("找到二叉树中的距离"),e(s)])]),M4,t("td",v4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[I4]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[E4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[w4]),_:1}),l(),z4]),t("td",O4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q4,t("td",j4,[t("a",H4,[l("给定二叉搜索树的插入顺序求深度"),e(s)])]),L4,t("td",C4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[N4]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[P4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[K4]),_:1}),l(),B4]),t("td",V4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T4,t("td",U4,[t("a",R4,[l("合并多棵二叉搜索树"),e(s)])]),W4,t("td",G4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Y4]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Q4]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[S4]),_:1}),l(),D4]),t("td",Z4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A4,t("td",F4,[t("a",J4,[l("值等于子节点值之和的节点数量"),e(s)])]),X4,t("td",$4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[t9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[e9]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[l9]),_:1})]),t("td",o9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n9,t("td",s9,[t("a",d9,[l("斐波那契树的移除子树游戏"),e(s)])]),_9,t("td",r9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[i9]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[c9]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[a9]),_:1}),l(),h9]),t("td",u9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f9,t("td",g9,[t("a",m9,[l("统计最高分的节点数目"),e(s)])]),y9,t("td",b9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[x9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[p9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k9]),_:1}),l(),M9]),t("td",v9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I9,t("td",E9,[t("a",w9,[l("从二叉树一个节点到另一个节点每一步的方向"),e(s)])]),z9,t("td",O9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[q9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[j9]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[H9]),_:1}),l(),L9]),t("td",C9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N9,t("td",P9,[t("a",K9,[l("根据描述创建二叉树"),e(s)])]),t("td",B9,[t("a",V9,[l("[✓]"),e(s)])]),t("td",T9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[U9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[R9]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[W9]),_:1}),l(),G9]),t("td",Y9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q9,t("td",S9,[t("a",D9,[l("判断根结点是否等于子结点之和"),e(s)])]),Z9,t("td",A9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[F9]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[J9]),_:1})]),t("td",X9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$9,t("td",t7,[t("a",e7,[l("统计值等于子树平均值的节点数"),e(s)])]),l7,t("td",o7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[n7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[s7]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[d7]),_:1})]),t("td",_7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r7,t("td",i7,[t("a",c7,[l("二叉树中得到结果所需的最少翻转次数"),e(s)])]),a7,t("td",h7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[u7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[f7]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[g7]),_:1}),l(),m7]),t("td",y7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b7,t("td",x7,[t("a",p7,[l("计算布尔二叉树的值"),e(s)])]),k7,t("td",M7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[v7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[I7]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[E7]),_:1})]),t("td",w7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[z7,t("td",O7,[t("a",q7,[l("感染二叉树需要的总时间"),e(s)])]),j7,t("td",H7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[L7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[C7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[N7]),_:1}),l(),P7]),t("td",K7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B7,t("td",V7,[t("a",T7,[l("反转二叉树的奇数层"),e(s)])]),U7,t("td",R7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[W7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[G7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Y7]),_:1}),l(),Q7]),t("td",S7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D7,t("td",Z7,[t("a",A7,[l("值为 1 的节点数"),e(s)])]),F7,t("td",J7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[X7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tk]),_:1}),l(),ek]),t("td",lk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ok,t("td",nk,[t("a",sk,[l("移除子树后的二叉树高度"),e(s)])]),dk,t("td",_k,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[rk]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ik]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ck]),_:1}),l(),ak]),t("td",hk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uk,t("td",fk,[t("a",gk,[l("逐层排序二叉树所需的最少操作数目"),e(s)])]),mk,t("td",yk,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[bk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xk]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[pk]),_:1})]),t("td",kk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mk,t("td",vk,[t("a",Ik,[l("二叉搜索树最近节点查询"),e(s)])]),Ek,t("td",wk,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[zk]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ok]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[qk]),_:1}),l(),jk]),t("td",Hk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lk,t("td",Ck,[t("a",Nk,[l("查询树中环的长度"),e(s)])]),Pk,t("td",Kk,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Bk]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Vk]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Tk]),_:1})]),t("td",Uk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rk,t("td",Wk,[t("a",Gk,[l("二叉树中的第 K 大层和"),e(s)])]),Yk,t("td",Qk,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Sk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Dk]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Zk]),_:1}),l(),Ak]),t("td",Fk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jk,t("td",Xk,[t("a",$k,[l("二叉树的堂兄弟节点 II"),e(s)])]),tM,t("td",eM,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[lM]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[oM]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[nM]),_:1}),l(),sM]),t("td",dM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_M,t("td",rM,[t("a",iM,[l("使二叉树所有路径值相等的最小代价"),e(s)])]),cM,t("td",aM,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[hM]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[uM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fM]),_:1}),l(),gM]),t("td",mM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yM,t("td",bM,[t("a",xM,[l("从 Rope 树中提取第 K 个字符"),e(s)])]),pM,t("td",kM,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[MM]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vM]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[IM]),_:1})]),t("td",EM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wM,t("td",zM,[t("a",OM,[l("数组是否表示某二叉树的前序遍历"),e(s)])]),qM,t("td",jM,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[HM]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[LM]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[CM]),_:1}),l(),NM]),t("td",PM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KM,t("td",BM,[t("a",VM,[l("特殊二叉树的高度"),e(s)])]),TM,t("td",UM,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[RM]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[WM]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[GM]),_:1}),l(),YM]),t("td",QM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SM,t("td",DM,[t("a",ZM,[l("计算足够大的节点数"),e(s)])]),AM,t("td",FM,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[JM]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[XM]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[$M]),_:1}),l(),tv]),t("td",ev,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lv,t("td",ov,[t("a",nv,[l("找到具有最小和的树的层数"),e(s)])]),sv,t("td",dv,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_v]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rv]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[iv]),_:1}),l(),cv]),t("td",av,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hv,t("td",uv,[t("a",fv,[l("第 K 大的完美二叉子树的大小"),e(s)])]),t("td",gv,[t("a",mv,[l("[✓]"),e(s)])]),t("td",yv,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[bv]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xv]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[pv]),_:1}),l(),kv]),t("td",Mv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vv,t("td",Iv,[t("a",Ev,[l("二叉树任务调度"),e(s)])]),wv,t("td",zv,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ov]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[qv]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[jv]),_:1}),l(),Hv]),t("td",Lv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cv,t("td",Nv,[t("a",Pv,[l("导航装置"),e(s)])]),Kv,t("td",Bv,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Vv]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Tv]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Uv]),_:1})]),t("td",Rv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wv,t("td",Gv,[t("a",Yv,[l("二叉树染色"),e(s)])]),Qv,t("td",Sv,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Dv]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Zv]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Av]),_:1})]),t("td",Fv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jv,t("td",Xv,[t("a",$v,[l("开幕式焰火"),e(s)])]),tI,t("td",eI,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[lI]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[oI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[nI]),_:1}),l(),sI]),t("td",dI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[_I,t("td",rI,[t("a",iI,[l("二叉搜索树染色"),e(s)])]),cI,t("td",aI,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[hI]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[uI]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[fI]),_:1}),l(),gI]),t("td",mI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yI,t("td",bI,[t("a",xI,[l("力扣泡泡龙"),e(s)])]),pI,t("td",kI,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[MI]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[vI]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[II]),_:1})]),t("td",EI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wI,t("td",zI,[t("a",OI,[l("二叉树灯饰"),e(s)])]),qI,t("td",jI,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[HI]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[LI]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[CI]),_:1}),l(),NI]),t("td",PI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KI,t("td",BI,[t("a",VI,[l("装饰树"),e(s)])]),TI,t("td",UI,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[RI]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[WI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[GI]),_:1}),l(),YI]),t("td",QI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SI,t("td",DI,[t("a",ZI,[l("重建二叉树"),e(s)])]),t("td",AI,[t("a",FI,[l("[✓]"),e(s)])]),t("td",JI,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[XI]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$I]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[tE]),_:1}),l(),eE]),t("td",lE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oE,t("td",nE,[t("a",sE,[l("树的子结构"),e(s)])]),t("td",dE,[t("a",_E,[l("[✓]"),e(s)])]),t("td",rE,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[iE]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cE]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[aE]),_:1})]),t("td",hE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uE,t("td",fE,[t("a",gE,[l("二叉树的镜像"),e(s)])]),t("td",mE,[t("a",yE,[l("[✓]"),e(s)])]),t("td",bE,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[xE]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kE]),_:1}),l(),ME]),t("td",vE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[IE,t("td",EE,[t("a",wE,[l("对称的二叉树"),e(s)])]),t("td",zE,[t("a",OE,[l("[✓]"),e(s)])]),t("td",qE,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[jE]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[HE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[LE]),_:1}),l(),CE]),t("td",NE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[PE,t("td",KE,[t("a",BE,[l("从上到下打印二叉树"),e(s)])]),t("td",VE,[t("a",TE,[l("[✓]"),e(s)])]),t("td",UE,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[RE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[WE]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[GE]),_:1})]),t("td",YE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QE,t("td",SE,[t("a",DE,[l("从上到下打印二叉树 II"),e(s)])]),t("td",ZE,[t("a",AE,[l("[✓]"),e(s)])]),t("td",FE,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[JE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[XE]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[$E]),_:1})]),t("td",tw,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ew,t("td",lw,[t("a",ow,[l("从上到下打印二叉树 III"),e(s)])]),t("td",nw,[t("a",sw,[l("[✓]"),e(s)])]),t("td",dw,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_w]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[rw]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[iw]),_:1})]),t("td",cw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aw,t("td",hw,[t("a",uw,[l("二叉搜索树的后序遍历序列"),e(s)])]),t("td",fw,[t("a",gw,[l("[✓]"),e(s)])]),t("td",mw,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[yw]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[bw]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[xw]),_:1}),l(),pw]),t("td",kw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mw,t("td",vw,[t("a",Iw,[l("二叉树中和为某一值的路径"),e(s)])]),t("td",Ew,[t("a",ww,[l("[✓]"),e(s)])]),t("td",zw,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ow]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[qw]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[jw]),_:1}),l(),Hw]),t("td",Lw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cw,t("td",Nw,[t("a",Pw,[l("二叉搜索树与双向链表"),e(s)])]),t("td",Kw,[t("a",Bw,[l("[✓]"),e(s)])]),t("td",Vw,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Tw]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Uw]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Rw]),_:1}),l(),Ww]),t("td",Gw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yw,t("td",Qw,[t("a",Sw,[l("序列化二叉树"),e(s)])]),t("td",Dw,[t("a",Zw,[l("[✓]"),e(s)])]),t("td",Aw,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Fw]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jw]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Xw]),_:1}),l(),$w]),t("td",tz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ez,t("td",lz,[t("a",oz,[l("二叉搜索树的第k大节点"),e(s)])]),t("td",nz,[t("a",sz,[l("[✓]"),e(s)])]),t("td",dz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_z]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rz]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[iz]),_:1}),l(),cz]),t("td",az,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[hz,t("td",uz,[t("a",fz,[l("二叉树的深度"),e(s)])]),t("td",gz,[t("a",mz,[l("[✓]"),e(s)])]),t("td",yz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[bz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xz]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[pz]),_:1}),l(),kz]),t("td",Mz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vz,t("td",Iz,[t("a",Ez,[l("平衡二叉树"),e(s)])]),wz,t("td",zz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Oz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[qz]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[jz]),_:1})]),t("td",Hz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Lz,t("td",Cz,[t("a",Nz,[l("二叉搜索树的最近公共祖先"),e(s)])]),Pz,t("td",Kz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Bz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Vz]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Tz]),_:1}),l(),Uz]),t("td",Rz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Wz,t("td",Gz,[t("a",Yz,[l("二叉树的最近公共祖先"),e(s)])]),Qz,t("td",Sz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Dz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Zz]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Az]),_:1})]),t("td",Fz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Jz,t("td",Xz,[t("a",$z,[l("往完全二叉树添加节点"),e(s)])]),tO,t("td",eO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[lO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[oO]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[nO]),_:1}),l(),sO]),t("td",dO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_O,t("td",rO,[t("a",iO,[l("二叉树每层的最大值"),e(s)])]),cO,t("td",aO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[hO]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[uO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[fO]),_:1}),l(),gO]),t("td",mO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yO,t("td",bO,[t("a",xO,[l("二叉树最底层最左边的值"),e(s)])]),pO,t("td",kO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[MO]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[IO]),_:1}),l(),EO]),t("td",wO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zO,t("td",OO,[t("a",qO,[l("二叉树的右侧视图"),e(s)])]),jO,t("td",HO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[LO]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[CO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[NO]),_:1}),l(),PO]),t("td",KO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[BO,t("td",VO,[t("a",TO,[l("二叉树剪枝"),e(s)])]),UO,t("td",RO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[WO]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[GO]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[YO]),_:1})]),t("td",QO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SO,t("td",DO,[t("a",ZO,[l("序列化与反序列化二叉树"),e(s)])]),AO,t("td",FO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[JO]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[XO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$O]),_:1}),l(),tq]),t("td",eq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lq,t("td",oq,[t("a",nq,[l("从根节点到叶节点的路径数字之和"),e(s)])]),sq,t("td",dq,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_q]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rq]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[iq]),_:1})]),t("td",cq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aq,t("td",hq,[t("a",uq,[l("向下的路径节点之和"),e(s)])]),fq,t("td",gq,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[mq]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yq]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[bq]),_:1})]),t("td",xq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pq,t("td",kq,[t("a",Mq,[l("节点之和最大的路径"),e(s)])]),vq,t("td",Iq,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Eq]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wq]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zq]),_:1}),l(),Oq]),t("td",qq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jq,t("td",Hq,[t("a",Lq,[l("展平二叉搜索树"),e(s)])]),Cq,t("td",Nq,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Pq]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Kq]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Bq]),_:1}),l(),Vq]),t("td",Tq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Uq,t("td",Rq,[t("a",Wq,[l("二叉搜索树中的中序后继"),e(s)])]),Gq,t("td",Yq,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qq]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Sq]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Dq]),_:1}),l(),Zq]),t("td",Aq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fq,t("td",Jq,[t("a",Xq,[l("所有大于等于节点的值之和"),e(s)])]),$q,t("td",tj,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ej]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[lj]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[oj]),_:1}),l(),nj]),t("td",sj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dj,t("td",_j,[t("a",rj,[l("二叉搜索树迭代器"),e(s)])]),ij,t("td",cj,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[aj]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[hj]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[uj]),_:1}),l(),fj]),t("td",gj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mj,t("td",yj,[t("a",bj,[l("数据流的第 K 大数值"),e(s)])]),xj,t("td",pj,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[kj]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Mj]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[vj]),_:1}),l(),Ij]),t("td",Ej,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wj,t("td",zj,[t("a",Oj,[l("最小高度树"),e(s)])]),qj,t("td",jj,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Hj]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Lj]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Cj]),_:1}),l(),Nj]),t("td",Pj,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Kj,t("td",Bj,[t("a",Vj,[l("特定深度节点链表"),e(s)])]),Tj,t("td",Uj,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Rj]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Wj]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Gj]),_:1}),l(),Yj]),t("td",Qj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sj,t("td",Dj,[t("a",Zj,[l("检查平衡性"),e(s)])]),Aj,t("td",Fj,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Jj]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xj]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[$j]),_:1})]),t("td",tH,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[eH,t("td",lH,[t("a",oH,[l("合法二叉搜索树"),e(s)])]),nH,t("td",sH,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[dH]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_H]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[rH]),_:1}),l(),iH]),t("td",cH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aH,t("td",hH,[t("a",uH,[l("后继者"),e(s)])]),fH,t("td",gH,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[mH]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yH]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[bH]),_:1}),l(),xH]),t("td",pH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kH,t("td",MH,[t("a",vH,[l("首个共同祖先"),e(s)])]),IH,t("td",EH,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[wH]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zH]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[OH]),_:1})]),t("td",qH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jH,t("td",HH,[t("a",LH,[l("二叉搜索树序列"),e(s)])]),CH,t("td",NH,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[PH]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[KH]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[BH]),_:1}),l(),VH]),t("td",TH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[UH,t("td",RH,[t("a",WH,[l("检查子树"),e(s)])]),GH,t("td",YH,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[QH]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[SH]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[DH]),_:1}),l(),ZH]),t("td",AH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FH,t("td",JH,[t("a",XH,[l("求和路径"),e(s)])]),$H,t("td",tL,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[eL]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[lL]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[oL]),_:1})]),t("td",nL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sL,t("td",dL,[t("a",_L,[l("BiNode"),e(s)])]),rL,t("td",iL,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[cL]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[aL]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[hL]),_:1}),l(),uL]),t("td",fL,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const xL=r(h,[["render",gL],["__file","binary-tree.html.vue"]]);export{xL as default};
