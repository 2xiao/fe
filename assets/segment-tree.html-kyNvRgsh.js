import{_ as a,r as _,o as c,c as i,a as t,d as e,w as o,b as l,f as r}from"./app-JOMdB8bl.js";const h={},u=t("h1",{id:"线段树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#线段树","aria-hidden":"true"},"#"),l(" 线段树")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),H=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),q=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),M=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),j=t("code",null,"最小生成树",-1),K=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),N=t("code",null,"拓扑排序",-1),P=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),E=t("code",null,"欧拉回路",-1),O=t("code",null,"双连通分量",-1),R=t("code",null,"并查集",-1),Q=t("code",null,"字典树",-1),T=t("span",{class:"blue"},"线段树",-1),A=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),J=t("p",null,[t("strong",null,"算法")],-1),D=t("code",null,"枚举",-1),F=t("code",null,"递归",-1),S=t("code",null,"分治",-1),U=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),X=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ut=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Ht=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),qt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),Mt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),jt=t("code",null,"交互",-1),Kt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Nt=t("hr",null,null,-1),Pt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vt=t("td",{style:{"text-align":"center"}},"218",-1),Et={style:{"text-align":"left"}},Ot={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Rt=t("td",{style:{"text-align":"center"}},null,-1),Qt={style:{"text-align":"left"}},Tt=t("code",null,"树状数组",-1),At=t("code",null,"线段树",-1),Gt=t("code",null,"数组",-1),Jt=t("code",null,"4+",-1),Dt={style:{"text-align":"left"}},Ft=t("td",{style:{"text-align":"center"}},"307",-1),St={style:{"text-align":"left"}},Ut={href:"https://leetcode.com/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"center"}},Xt={style:{"text-align":"left"}},Yt=t("code",null,"设计",-1),Zt=t("code",null,"树状数组",-1),$t=t("code",null,"线段树",-1),te=t("code",null,"1+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"308",-1),oe={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),de={style:{"text-align":"left"}},_e=t("code",null,"设计",-1),ae=t("code",null,"树状数组",-1),ce=t("code",null,"线段树",-1),ie=t("code",null,"2+",-1),re={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"315",-1),ue={style:{"text-align":"left"}},fe={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},ge=t("td",{style:{"text-align":"center"}},null,-1),me={style:{"text-align":"left"}},ye=t("code",null,"树状数组",-1),xe=t("code",null,"线段树",-1),be=t("code",null,"数组",-1),pe=t("code",null,"4+",-1),ke={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"327",-1),Ie={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},ve=t("td",{style:{"text-align":"center"}},null,-1),we={style:{"text-align":"left"}},Me=t("code",null,"树状数组",-1),Le=t("code",null,"线段树",-1),ze=t("code",null,"数组",-1),Ce=t("code",null,"4+",-1),je={style:{"text-align":"left"}},Ke=t("td",{style:{"text-align":"center"}},"406",-1),Be={style:{"text-align":"left"}},Ne={href:"https://leetcode.com/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},Pe=t("td",{style:{"text-align":"center"}},null,-1),Ve={style:{"text-align":"left"}},Ee=t("code",null,"树状数组",-1),Oe=t("code",null,"线段树",-1),Re=t("code",null,"数组",-1),Qe=t("code",null,"1+",-1),Te={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"493",-1),Ge={style:{"text-align":"left"}},Je={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},De=t("td",{style:{"text-align":"center"}},null,-1),Fe={style:{"text-align":"left"}},Se=t("code",null,"树状数组",-1),Ue=t("code",null,"线段树",-1),We=t("code",null,"数组",-1),Xe=t("code",null,"4+",-1),Ye={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"673",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},ol=t("code",null,"树状数组",-1),nl=t("code",null,"线段树",-1),sl=t("code",null,"数组",-1),dl=t("code",null,"1+",-1),_l={style:{"text-align":"left"}},al=t("td",{style:{"text-align":"center"}},"683",-1),cl={style:{"text-align":"left"}},il={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},rl=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},ul=t("code",null,"树状数组",-1),fl=t("code",null,"线段树",-1),gl=t("code",null,"队列",-1),ml=t("code",null,"5+",-1),yl={style:{"text-align":"left"}},xl=t("td",{style:{"text-align":"center"}},"699",-1),bl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/falling-squares",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),Hl={style:{"text-align":"left"}},Il=t("code",null,"线段树",-1),ql=t("code",null,"数组",-1),vl=t("code",null,"有序集合",-1),wl={style:{"text-align":"left"}},Ml=t("td",{style:{"text-align":"center"}},"715",-1),Ll={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/range-module",target:"_blank",rel:"noopener noreferrer"},Cl=t("td",{style:{"text-align":"center"}},null,-1),jl={style:{"text-align":"left"}},Kl=t("code",null,"设计",-1),Bl=t("code",null,"线段树",-1),Nl=t("code",null,"有序集合",-1),Pl={style:{"text-align":"left"}},Vl=t("td",{style:{"text-align":"center"}},"729",-1),El={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/my-calendar-i",target:"_blank",rel:"noopener noreferrer"},Rl={style:{"text-align":"center"}},Ql={style:{"text-align":"left"}},Tl=t("code",null,"设计",-1),Al=t("code",null,"线段树",-1),Gl=t("code",null,"数组",-1),Jl=t("code",null,"2+",-1),Dl={style:{"text-align":"left"}},Fl=t("td",{style:{"text-align":"center"}},"731",-1),Sl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/my-calendar-ii",target:"_blank",rel:"noopener noreferrer"},Wl={style:{"text-align":"center"}},Xl={style:{"text-align":"left"}},Yl=t("code",null,"设计",-1),Zl=t("code",null,"线段树",-1),$l=t("code",null,"数组",-1),to=t("code",null,"3+",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"732",-1),oo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/my-calendar-iii",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),_o={style:{"text-align":"left"}},ao=t("code",null,"设计",-1),co=t("code",null,"线段树",-1),io=t("code",null,"二分查找",-1),ro=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"850",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/rectangle-area-ii",target:"_blank",rel:"noopener noreferrer"},mo=t("td",{style:{"text-align":"center"}},null,-1),yo={style:{"text-align":"left"}},xo=t("code",null,"线段树",-1),bo=t("code",null,"数组",-1),po=t("code",null,"有序集合",-1),ko=t("code",null,"1+",-1),Ho={style:{"text-align":"left"}},Io=t("td",{style:{"text-align":"center"}},"1157",-1),qo={style:{"text-align":"left"}},vo={href:"https://leetcode.com/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},null,-1),Mo={style:{"text-align":"left"}},Lo=t("code",null,"设计",-1),zo=t("code",null,"树状数组",-1),Co=t("code",null,"线段树",-1),jo=t("code",null,"2+",-1),Ko={style:{"text-align":"left"}},Bo=t("td",{style:{"text-align":"center"}},"1395",-1),No={style:{"text-align":"left"}},Po={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},Vo=t("td",{style:{"text-align":"center"}},null,-1),Eo={style:{"text-align":"left"}},Oo=t("code",null,"树状数组",-1),Ro=t("code",null,"线段树",-1),Qo=t("code",null,"数组",-1),To=t("code",null,"1+",-1),Ao={style:{"text-align":"left"}},Go=t("td",{style:{"text-align":"center"}},"1505",-1),Jo={style:{"text-align":"left"}},Do={href:"https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},Fo=t("td",{style:{"text-align":"center"}},null,-1),So={style:{"text-align":"left"}},Uo=t("code",null,"贪心",-1),Wo=t("code",null,"树状数组",-1),Xo=t("code",null,"线段树",-1),Yo=t("code",null,"1+",-1),Zo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"1521",-1),tn={style:{"text-align":"left"}},en={href:"https://leetcode.com/problems/find-a-value-of-a-mysterious-function-closest-to-target",target:"_blank",rel:"noopener noreferrer"},ln=t("td",{style:{"text-align":"center"}},null,-1),on={style:{"text-align":"left"}},nn=t("code",null,"位运算",-1),sn=t("code",null,"线段树",-1),dn=t("code",null,"数组",-1),_n=t("code",null,"1+",-1),an={style:{"text-align":"left"}},cn=t("td",{style:{"text-align":"center"}},"1622",-1),rn={style:{"text-align":"left"}},hn={href:"https://leetcode.com/problems/fancy-sequence",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},null,-1),fn={style:{"text-align":"left"}},gn=t("code",null,"设计",-1),mn=t("code",null,"线段树",-1),yn=t("code",null,"数学",-1),xn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"1649",-1),pn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},Hn=t("td",{style:{"text-align":"center"}},null,-1),In={style:{"text-align":"left"}},qn=t("code",null,"树状数组",-1),vn=t("code",null,"线段树",-1),wn=t("code",null,"数组",-1),Mn=t("code",null,"4+",-1),Ln={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"1687",-1),Cn={style:{"text-align":"left"}},jn={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},Kn=t("td",{style:{"text-align":"center"}},null,-1),Bn={style:{"text-align":"left"}},Nn=t("code",null,"线段树",-1),Pn=t("code",null,"队列",-1),Vn=t("code",null,"数组",-1),En=t("code",null,"4+",-1),On={style:{"text-align":"left"}},Rn=t("td",{style:{"text-align":"center"}},"2031",-1),Qn={style:{"text-align":"left"}},Tn={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},An=t("td",{style:{"text-align":"center"}},null,-1),Gn={style:{"text-align":"left"}},Jn=t("code",null,"树状数组",-1),Dn=t("code",null,"线段树",-1),Fn=t("code",null,"数组",-1),Sn=t("code",null,"4+",-1),Un={style:{"text-align":"left"}},Wn=t("td",{style:{"text-align":"center"}},"2080",-1),Xn={style:{"text-align":"left"}},Yn={href:"https://leetcode.com/problems/range-frequency-queries",target:"_blank",rel:"noopener noreferrer"},Zn=t("td",{style:{"text-align":"center"}},null,-1),$n={style:{"text-align":"left"}},ts=t("code",null,"设计",-1),es=t("code",null,"线段树",-1),ls=t("code",null,"数组",-1),os=t("code",null,"2+",-1),ns={style:{"text-align":"left"}},ss=t("td",{style:{"text-align":"center"}},"2158",-1),ds={style:{"text-align":"left"}},_s={href:"https://leetcode.com/problems/amount-of-new-area-painted-each-day",target:"_blank",rel:"noopener noreferrer"},as=t("td",{style:{"text-align":"center"}},null,-1),cs={style:{"text-align":"left"}},is=t("code",null,"线段树",-1),rs=t("code",null,"数组",-1),hs=t("code",null,"有序集合",-1),us={style:{"text-align":"left"}},fs=t("td",{style:{"text-align":"center"}},"2179",-1),gs={style:{"text-align":"left"}},ms={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},ys=t("td",{style:{"text-align":"center"}},null,-1),xs={style:{"text-align":"left"}},bs=t("code",null,"树状数组",-1),ps=t("code",null,"线段树",-1),ks=t("code",null,"数组",-1),Hs=t("code",null,"4+",-1),Is={style:{"text-align":"left"}},qs=t("td",{style:{"text-align":"center"}},"2213",-1),vs={style:{"text-align":"left"}},ws={href:"https://leetcode.com/problems/longest-substring-of-one-repeating-character",target:"_blank",rel:"noopener noreferrer"},Ms=t("td",{style:{"text-align":"center"}},null,-1),Ls={style:{"text-align":"left"}},zs=t("code",null,"线段树",-1),Cs=t("code",null,"数组",-1),js=t("code",null,"字符串",-1),Ks=t("code",null,"1+",-1),Bs={style:{"text-align":"left"}},Ns=t("td",{style:{"text-align":"center"}},"2276",-1),Ps={style:{"text-align":"left"}},Vs={href:"https://leetcode.com/problems/count-integers-in-intervals",target:"_blank",rel:"noopener noreferrer"},Es=t("td",{style:{"text-align":"center"}},null,-1),Os={style:{"text-align":"left"}},Rs=t("code",null,"设计",-1),Qs=t("code",null,"线段树",-1),Ts=t("code",null,"有序集合",-1),As={style:{"text-align":"left"}},Gs=t("td",{style:{"text-align":"center"}},"2286",-1),Js={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},null,-1),Ss={style:{"text-align":"left"}},Us=t("code",null,"设计",-1),Ws=t("code",null,"树状数组",-1),Xs=t("code",null,"线段树",-1),Ys=t("code",null,"1+",-1),Zs={style:{"text-align":"left"}},$s=t("td",{style:{"text-align":"center"}},"2407",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},ld=t("td",{style:{"text-align":"center"}},null,-1),od={style:{"text-align":"left"}},nd=t("code",null,"树状数组",-1),sd=t("code",null,"线段树",-1),dd=t("code",null,"队列",-1),_d=t("code",null,"4+",-1),ad={style:{"text-align":"left"}},cd=t("td",{style:{"text-align":"center"}},"2424",-1),id={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},hd=t("td",{style:{"text-align":"center"}},null,-1),ud={style:{"text-align":"left"}},fd=t("code",null,"并查集",-1),gd=t("code",null,"设计",-1),md=t("code",null,"树状数组",-1),yd=t("code",null,"4+",-1),xd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"2426",-1),pd={style:{"text-align":"left"}},kd={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},Hd=t("td",{style:{"text-align":"center"}},null,-1),Id={style:{"text-align":"left"}},qd=t("code",null,"树状数组",-1),vd=t("code",null,"线段树",-1),wd=t("code",null,"数组",-1),Md=t("code",null,"4+",-1),Ld={style:{"text-align":"left"}},zd=t("td",{style:{"text-align":"center"}},"2519",-1),Cd={style:{"text-align":"left"}},jd={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},Kd=t("td",{style:{"text-align":"center"}},null,-1),Bd={style:{"text-align":"left"}},Nd=t("code",null,"树状数组",-1),Pd=t("code",null,"线段树",-1),Vd=t("code",null,"数组",-1),Ed=t("code",null,"4+",-1),Od={style:{"text-align":"left"}},Rd=t("td",{style:{"text-align":"center"}},"2569",-1),Qd={style:{"text-align":"left"}},Td={href:"https://leetcode.com/problems/handling-sum-queries-after-update",target:"_blank",rel:"noopener noreferrer"},Ad=t("td",{style:{"text-align":"center"}},null,-1),Gd={style:{"text-align":"left"}},Jd=t("code",null,"线段树",-1),Dd=t("code",null,"数组",-1),Fd={style:{"text-align":"left"}},Sd=t("td",{style:{"text-align":"center"}},"2659",-1),Ud={style:{"text-align":"left"}},Wd={href:"https://leetcode.com/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},Xd=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},Zd=t("code",null,"贪心",-1),$d=t("code",null,"树状数组",-1),t_=t("code",null,"线段树",-1),e_=t("code",null,"4+",-1),l_={style:{"text-align":"left"}},o_=t("td",{style:{"text-align":"center"}},"2736",-1),n_={style:{"text-align":"left"}},s_={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},d_=t("td",{style:{"text-align":"center"}},null,-1),__={style:{"text-align":"left"}},a_=t("code",null,"栈",-1),c_=t("code",null,"树状数组",-1),i_=t("code",null,"线段树",-1),r_=t("code",null,"4+",-1),h_={style:{"text-align":"left"}},u_=t("td",{style:{"text-align":"center"}},"2907",-1),f_={style:{"text-align":"left"}},g_={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},m_=t("td",{style:{"text-align":"center"}},null,-1),y_={style:{"text-align":"left"}},x_=t("code",null,"树状数组",-1),b_=t("code",null,"线段树",-1),p_=t("code",null,"数组",-1),k_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"2916",-1),I_={style:{"text-align":"left"}},q_={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},v_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},M_=t("code",null,"树状数组",-1),L_=t("code",null,"线段树",-1),z_=t("code",null,"数组",-1),C_=t("code",null,"1+",-1),j_={style:{"text-align":"left"}},K_=t("td",{style:{"text-align":"center"}},"2921",-1),B_={style:{"text-align":"left"}},N_={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},P_=t("td",{style:{"text-align":"center"}},null,-1),V_={style:{"text-align":"left"}},E_=t("code",null,"树状数组",-1),O_=t("code",null,"线段树",-1),R_=t("code",null,"数组",-1),Q_={style:{"text-align":"left"}},T_=t("td",{style:{"text-align":"center"}},"2926",-1),A_={style:{"text-align":"left"}},G_={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},J_=t("td",{style:{"text-align":"center"}},null,-1),D_={style:{"text-align":"left"}},F_=t("code",null,"树状数组",-1),S_=t("code",null,"线段树",-1),U_=t("code",null,"数组",-1),W_=t("code",null,"2+",-1),X_={style:{"text-align":"left"}},Y_=t("td",{style:{"text-align":"center"}},"2940",-1),Z_={style:{"text-align":"left"}},$_={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},ta=t("td",{style:{"text-align":"center"}},null,-1),ea={style:{"text-align":"left"}},la=t("code",null,"栈",-1),oa=t("code",null,"树状数组",-1),na=t("code",null,"线段树",-1),sa=t("code",null,"4+",-1),da={style:{"text-align":"left"}},_a=t("td",{style:{"text-align":"center"}},"3072",-1),aa={style:{"text-align":"left"}},ca={href:"https://leetcode.com/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},ia=t("td",{style:{"text-align":"center"}},null,-1),ra={style:{"text-align":"left"}},ha=t("code",null,"树状数组",-1),ua=t("code",null,"线段树",-1),fa=t("code",null,"数组",-1),ga=t("code",null,"1+",-1),ma={style:{"text-align":"left"}},ya=t("td",{style:{"text-align":"center"}},"3109",-1),xa={style:{"text-align":"left"}},ba={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},pa=t("td",{style:{"text-align":"center"}},null,-1),ka={style:{"text-align":"left"}},Ha=t("code",null,"树状数组",-1),Ia=t("code",null,"线段树",-1),qa=t("code",null,"数组",-1),va=t("code",null,"4+",-1),wa={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"3117",-1),La={style:{"text-align":"left"}},za={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},Ca=t("td",{style:{"text-align":"center"}},null,-1),ja={style:{"text-align":"left"}},Ka=t("code",null,"位运算",-1),Ba=t("code",null,"线段树",-1),Na=t("code",null,"队列",-1),Pa=t("code",null,"3+",-1),Va={style:{"text-align":"left"}},Ea=t("td",{style:{"text-align":"center"}},"3161",-1),Oa={style:{"text-align":"left"}},Ra={href:"https://leetcode.com/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},Qa=t("td",{style:{"text-align":"center"}},null,-1),Ta={style:{"text-align":"left"}},Aa=t("code",null,"树状数组",-1),Ga=t("code",null,"线段树",-1),Ja=t("code",null,"数组",-1),Da=t("code",null,"1+",-1),Fa={style:{"text-align":"left"}},Sa=t("td",{style:{"text-align":"center"}},"3165",-1),Ua={style:{"text-align":"left"}},Wa={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},Xa=t("td",{style:{"text-align":"center"}},null,-1),Ya={style:{"text-align":"left"}},Za=t("code",null,"线段树",-1),$a=t("code",null,"数组",-1),tc=t("code",null,"分治",-1),ec=t("code",null,"1+",-1),lc={style:{"text-align":"left"}},oc=t("td",{style:{"text-align":"center"}},"3171",-1),nc={style:{"text-align":"left"}},sc={href:"https://leetcode.com/problems/find-subarray-with-bitwise-or-closest-to-k",target:"_blank",rel:"noopener noreferrer"},dc=t("td",{style:{"text-align":"center"}},null,-1),_c={style:{"text-align":"left"}},ac=t("code",null,"位运算",-1),cc=t("code",null,"线段树",-1),ic=t("code",null,"数组",-1),rc=t("code",null,"1+",-1),hc={style:{"text-align":"left"}},uc=t("td",{style:{"text-align":"center"}},"3187",-1),fc={style:{"text-align":"left"}},gc={href:"https://leetcode.com/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},mc=t("td",{style:{"text-align":"center"}},null,-1),yc={style:{"text-align":"left"}},xc=t("code",null,"树状数组",-1),bc=t("code",null,"线段树",-1),pc=t("code",null,"数组",-1),kc={style:{"text-align":"left"}},Hc=t("td",{style:{"text-align":"center"}},"3209",-1),Ic={style:{"text-align":"left"}},qc={href:"https://leetcode.com/problems/number-of-subarrays-with-and-value-of-k",target:"_blank",rel:"noopener noreferrer"},vc=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},Mc=t("code",null,"位运算",-1),Lc=t("code",null,"线段树",-1),zc=t("code",null,"数组",-1),Cc=t("code",null,"1+",-1),jc={style:{"text-align":"left"}},Kc=t("td",{style:{"text-align":"center"}},"3291",-1),Bc={style:{"text-align":"left"}},Nc={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Pc=t("td",{style:{"text-align":"center"}},null,-1),Vc={style:{"text-align":"left"}},Ec=t("code",null,"字典树",-1),Oc=t("code",null,"线段树",-1),Rc=t("code",null,"数组",-1),Qc=t("code",null,"6+",-1),Tc={style:{"text-align":"left"}},Ac=t("td",{style:{"text-align":"center"}},"3292",-1),Gc={style:{"text-align":"left"}},Jc={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Dc=t("td",{style:{"text-align":"center"}},null,-1),Fc={style:{"text-align":"left"}},Sc=t("code",null,"线段树",-1),Uc=t("code",null,"数组",-1),Wc=t("code",null,"字符串",-1),Xc=t("code",null,"5+",-1),Yc={style:{"text-align":"left"}},Zc=t("td",{style:{"text-align":"center"}},"LCP 05",-1),$c={style:{"text-align":"left"}},ti={href:"https://leetcode.cn/problems/coin-bonus",target:"_blank",rel:"noopener noreferrer"},ei=t("td",{style:{"text-align":"center"}},null,-1),li={style:{"text-align":"left"}},oi=t("code",null,"树状数组",-1),ni=t("code",null,"线段树",-1),si=t("code",null,"数组",-1),di={style:{"text-align":"left"}},_i=t("td",{style:{"text-align":"center"}},"LCP 09",-1),ai={style:{"text-align":"left"}},ci={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},ii=t("td",{style:{"text-align":"center"}},null,-1),ri={style:{"text-align":"left"}},hi=t("code",null,"广度优先搜索",-1),ui=t("code",null,"线段树",-1),fi=t("code",null,"数组",-1),gi=t("code",null,"1+",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"LCP 27",-1),xi={style:{"text-align":"left"}},bi={href:"https://leetcode.cn/problems/IQvJ9i",target:"_blank",rel:"noopener noreferrer"},pi=t("td",{style:{"text-align":"center"}},null,-1),ki={style:{"text-align":"left"}},Hi=t("code",null,"设计",-1),Ii=t("code",null,"线段树",-1),qi=t("code",null,"数学",-1),vi=t("code",null,"1+",-1),wi={style:{"text-align":"left"}},Mi=t("td",{style:{"text-align":"center"}},"LCP 52",-1),Li={style:{"text-align":"left"}},zi={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},Ci=t("td",{style:{"text-align":"center"}},null,-1),ji={style:{"text-align":"left"}},Ki=t("code",null,"树",-1),Bi=t("code",null,"线段树",-1),Ni=t("code",null,"二叉搜索树",-1),Pi=t("code",null,"4+",-1),Vi={style:{"text-align":"left"}},Ei=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),Oi={style:{"text-align":"left"}},Ri={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},Qi={style:{"text-align":"center"}},Ti={style:{"text-align":"left"}},Ai=t("code",null,"树状数组",-1),Gi=t("code",null,"线段树",-1),Ji=t("code",null,"数组",-1),Di=t("code",null,"4+",-1),Fi={style:{"text-align":"left"}},Si=t("td",{style:{"text-align":"center"}},"剑指 Offer II 58",-1),Ui={style:{"text-align":"left"}},Wi={href:"https://leetcode.cn/problems/fi9suh",target:"_blank",rel:"noopener noreferrer"},Xi={style:{"text-align":"center"}},Yi={style:{"text-align":"left"}},Zi=t("code",null,"设计",-1),$i=t("code",null,"线段树",-1),tr=t("code",null,"二分查找",-1),er=t("code",null,"1+",-1),lr={style:{"text-align":"left"}};function or(nr,sr){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return c(),i("div",null,[u,t("details",null,[f,g,t("p",null,[e(n,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/tag/shortest-path.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/tag/biconnected-component.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/tag/trie.html"},{default:o(()=>[Q]),_:1}),l(),T,l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[G]),_:1})]),J,t("p",null,[e(n,{to:"/tag/enumeration.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/tag/recursion.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/tag/bucket-sort.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/tag/counting.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/tag/rolling-hash.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(n,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(n,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/tag/database.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/tag/interactive.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/tag/iterator.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Bt]),_:1})])]),Nt,r(" prettier-ignore "),t("table",null,[Pt,t("tbody",null,[t("tr",null,[Vt,t("td",Et,[t("a",Ot,[l("天际线问题"),e(s)])]),Rt,t("td",Qt,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Tt]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[At]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Gt]),_:1}),l(),Jt]),t("td",Dt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ft,t("td",St,[t("a",Ut,[l("区域和检索 - 数组可修改"),e(s)])]),t("td",Wt,[e(n,{to:"/problem/0307.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xt,[e(n,{to:"/tag/design.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",ne,[l("二维区域和检索 - 矩阵可修改"),e(s)])]),se,t("td",de,[e(n,{to:"/tag/design.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[ce]),_:1}),l(),ie]),t("td",re,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[he,t("td",ue,[t("a",fe,[l("计算右侧小于当前元素的个数"),e(s)])]),ge,t("td",me,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[ye]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[be]),_:1}),l(),pe]),t("td",ke,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[He,t("td",Ie,[t("a",qe,[l("区间和的个数"),e(s)])]),ve,t("td",we,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Me]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ze]),_:1}),l(),Ce]),t("td",je,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ke,t("td",Be,[t("a",Ne,[l("根据身高重建队列"),e(s)])]),Pe,t("td",Ve,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Ee]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Oe]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Re]),_:1}),l(),Qe]),t("td",Te,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ae,t("td",Ge,[t("a",Je,[l("翻转对"),e(s)])]),De,t("td",Fe,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Ue]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[We]),_:1}),l(),Xe]),t("td",Ye,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ze,t("td",$e,[t("a",tl,[l("最长递增子序列的个数"),e(s)])]),el,t("td",ll,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[ol]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[sl]),_:1}),l(),dl]),t("td",_l,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[al,t("td",cl,[t("a",il,[l("K 个关闭的灯泡"),e(s)])]),rl,t("td",hl,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[ul]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[gl]),_:1}),l(),ml]),t("td",yl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xl,t("td",bl,[t("a",pl,[l("掉落的方块"),e(s)])]),kl,t("td",Hl,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[vl]),_:1})]),t("td",wl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ml,t("td",Ll,[t("a",zl,[l("Range 模块"),e(s)])]),Cl,t("td",jl,[e(n,{to:"/tag/design.html"},{default:o(()=>[Kl]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Bl]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[Nl]),_:1})]),t("td",Pl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vl,t("td",El,[t("a",Ol,[l("我的日程安排表 I"),e(s)])]),t("td",Rl,[e(n,{to:"/problem/0729.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ql,[e(n,{to:"/tag/design.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Al]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Gl]),_:1}),l(),Jl]),t("td",Dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fl,t("td",Sl,[t("a",Ul,[l("我的日程安排表 II"),e(s)])]),t("td",Wl,[e(n,{to:"/problem/0731.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xl,[e(n,{to:"/tag/design.html"},{default:o(()=>[Yl]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Zl]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[$l]),_:1}),l(),to]),t("td",eo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",no,[l("我的日程安排表 III"),e(s)])]),so,t("td",_o,[e(n,{to:"/tag/design.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[co]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[io]),_:1}),l(),ro]),t("td",ho,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[l("矩形面积 II"),e(s)])]),mo,t("td",yo,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[xo]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[po]),_:1}),l(),ko]),t("td",Ho,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Io,t("td",qo,[t("a",vo,[l("子数组中占绝大多数的元素"),e(s)])]),wo,t("td",Mo,[e(n,{to:"/tag/design.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Co]),_:1}),l(),jo]),t("td",Ko,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bo,t("td",No,[t("a",Po,[l("统计作战单位数"),e(s)])]),Vo,t("td",Eo,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Oo]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Ro]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Qo]),_:1}),l(),To]),t("td",Ao,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Go,t("td",Jo,[t("a",Do,[l("最多 K 次交换相邻数位后得到的最小整数"),e(s)])]),Fo,t("td",So,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Uo]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Wo]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Xo]),_:1}),l(),Yo]),t("td",Zo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$o,t("td",tn,[t("a",en,[l("找到最接近目标值的函数值"),e(s)])]),ln,t("td",on,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[nn]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[dn]),_:1}),l(),_n]),t("td",an,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cn,t("td",rn,[t("a",hn,[l("奇妙序列"),e(s)])]),un,t("td",fn,[e(n,{to:"/tag/design.html"},{default:o(()=>[gn]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[yn]),_:1})]),t("td",xn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bn,t("td",pn,[t("a",kn,[l("通过指令创建有序数组"),e(s)])]),Hn,t("td",In,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[qn]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[vn]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[wn]),_:1}),l(),Mn]),t("td",Ln,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zn,t("td",Cn,[t("a",jn,[l("从仓库到码头运输箱子"),e(s)])]),Kn,t("td",Bn,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Nn]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Pn]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Vn]),_:1}),l(),En]),t("td",On,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rn,t("td",Qn,[t("a",Tn,[l("1 比 0 多的子数组个数"),e(s)])]),An,t("td",Gn,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Jn]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Dn]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Fn]),_:1}),l(),Sn]),t("td",Un,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wn,t("td",Xn,[t("a",Yn,[l("区间内查询数字的频率"),e(s)])]),Zn,t("td",$n,[e(n,{to:"/tag/design.html"},{default:o(()=>[ts]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[es]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ls]),_:1}),l(),os]),t("td",ns,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ss,t("td",ds,[t("a",_s,[l("每天绘制新区域的数量"),e(s)])]),as,t("td",cs,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[is]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[hs]),_:1})]),t("td",us,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fs,t("td",gs,[t("a",ms,[l("统计数组中好三元组数目"),e(s)])]),ys,t("td",xs,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[ps]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ks]),_:1}),l(),Hs]),t("td",Is,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qs,t("td",vs,[t("a",ws,[l("由单个字符重复的最长子字符串"),e(s)])]),Ms,t("td",Ls,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[zs]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Cs]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[js]),_:1}),l(),Ks]),t("td",Bs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ns,t("td",Ps,[t("a",Vs,[l("统计区间中的整数数目"),e(s)])]),Es,t("td",Os,[e(n,{to:"/tag/design.html"},{default:o(()=>[Rs]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Qs]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[Ts]),_:1})]),t("td",As,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gs,t("td",Js,[t("a",Ds,[l("以组为单位订音乐会的门票"),e(s)])]),Fs,t("td",Ss,[e(n,{to:"/tag/design.html"},{default:o(()=>[Us]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Ws]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Xs]),_:1}),l(),Ys]),t("td",Zs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$s,t("td",td,[t("a",ed,[l("最长递增子序列 II"),e(s)])]),ld,t("td",od,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[sd]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[dd]),_:1}),l(),_d]),t("td",ad,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cd,t("td",id,[t("a",rd,[l("最长上传前缀"),e(s)])]),hd,t("td",ud,[e(n,{to:"/tag/union-find.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[md]),_:1}),l(),yd]),t("td",xd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bd,t("td",pd,[t("a",kd,[l("满足不等式的数对数目"),e(s)])]),Hd,t("td",Id,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[qd]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[vd]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[wd]),_:1}),l(),Md]),t("td",Ld,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zd,t("td",Cd,[t("a",jd,[l("统计 K-Big 索引的数量"),e(s)])]),Kd,t("td",Bd,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Nd]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Vd]),_:1}),l(),Ed]),t("td",Od,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rd,t("td",Qd,[t("a",Td,[l("更新数组后处理求和查询"),e(s)])]),Ad,t("td",Gd,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Dd]),_:1})]),t("td",Fd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sd,t("td",Ud,[t("a",Wd,[l("将数组清空"),e(s)])]),Xd,t("td",Yd,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Zd]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[t_]),_:1}),l(),e_]),t("td",l_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o_,t("td",n_,[t("a",s_,[l("最大和查询"),e(s)])]),d_,t("td",__,[e(n,{to:"/tag/stack.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[c_]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[i_]),_:1}),l(),r_]),t("td",h_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[u_,t("td",f_,[t("a",g_,[l("价格递增的最大利润三元组 I"),e(s)])]),m_,t("td",y_,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[x_]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[b_]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[p_]),_:1})]),t("td",k_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H_,t("td",I_,[t("a",q_,[l("子数组不同元素数目的平方和 II"),e(s)])]),v_,t("td",w_,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[M_]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[L_]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[z_]),_:1}),l(),C_]),t("td",j_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K_,t("td",B_,[t("a",N_,[l("价格递增的最大利润三元组 II"),e(s)])]),P_,t("td",V_,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[E_]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[O_]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[R_]),_:1})]),t("td",Q_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T_,t("td",A_,[t("a",G_,[l("平衡子序列的最大和"),e(s)])]),J_,t("td",D_,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[F_]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[S_]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[U_]),_:1}),l(),W_]),t("td",X_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y_,t("td",Z_,[t("a",$_,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(s)])]),ta,t("td",ea,[e(n,{to:"/tag/stack.html"},{default:o(()=>[la]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[oa]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[na]),_:1}),l(),sa]),t("td",da,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_a,t("td",aa,[t("a",ca,[l("将元素分配到两个数组中 II"),e(s)])]),ia,t("td",ra,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[ha]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[ua]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[fa]),_:1}),l(),ga]),t("td",ma,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ya,t("td",xa,[t("a",ba,[l("查找排列的下标"),e(s)])]),pa,t("td",ka,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Ha]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Ia]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[qa]),_:1}),l(),va]),t("td",wa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ma,t("td",La,[t("a",za,[l("划分数组得到最小的值之和"),e(s)])]),Ca,t("td",ja,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Ka]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Ba]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Na]),_:1}),l(),Pa]),t("td",Va,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ea,t("td",Oa,[t("a",Ra,[l("物块放置查询"),e(s)])]),Qa,t("td",Ta,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Aa]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Ga]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ja]),_:1}),l(),Da]),t("td",Fa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sa,t("td",Ua,[t("a",Wa,[l("不包含相邻元素的子序列的最大和"),e(s)])]),Xa,t("td",Ya,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Za]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[$a]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[tc]),_:1}),l(),ec]),t("td",lc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oc,t("td",nc,[t("a",sc,[l("找到按位或最接近 K 的子数组"),e(s)])]),dc,t("td",_c,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[ac]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[cc]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ic]),_:1}),l(),rc]),t("td",hc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uc,t("td",fc,[t("a",gc,[l("数组中的峰值"),e(s)])]),mc,t("td",yc,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[xc]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[bc]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[pc]),_:1})]),t("td",kc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hc,t("td",Ic,[t("a",qc,[l("子数组按位与值为 K 的数目"),e(s)])]),vc,t("td",wc,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Mc]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Lc]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[zc]),_:1}),l(),Cc]),t("td",jc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kc,t("td",Bc,[t("a",Nc,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),Pc,t("td",Vc,[e(n,{to:"/tag/trie.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Oc]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Rc]),_:1}),l(),Qc]),t("td",Tc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ac,t("td",Gc,[t("a",Jc,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),Dc,t("td",Fc,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Sc]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Uc]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Wc]),_:1}),l(),Xc]),t("td",Yc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zc,t("td",$c,[t("a",ti,[l("发 LeetCoin"),e(s)])]),ei,t("td",li,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[oi]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[ni]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[si]),_:1})]),t("td",di,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_i,t("td",ai,[t("a",ci,[l("最小跳跃次数"),e(s)])]),ii,t("td",ri,[e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[hi]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[ui]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[fi]),_:1}),l(),gi]),t("td",mi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yi,t("td",xi,[t("a",bi,[l("黑盒光线反射"),e(s)])]),pi,t("td",ki,[e(n,{to:"/tag/design.html"},{default:o(()=>[Hi]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Ii]),_:1}),l(),e(n,{to:"/tag/math.html"},{default:o(()=>[qi]),_:1}),l(),vi]),t("td",wi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mi,t("td",Li,[t("a",zi,[l("二叉搜索树染色"),e(s)])]),Ci,t("td",ji,[e(n,{to:"/tag/tree.html"},{default:o(()=>[Ki]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Bi]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[Ni]),_:1}),l(),Pi]),t("td",Vi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ei,t("td",Oi,[t("a",Ri,[l("数组中的逆序对"),e(s)])]),t("td",Qi,[e(n,{to:"/offer/jz_offer_51_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ti,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Ai]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Gi]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ji]),_:1}),l(),Di]),t("td",Fi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Si,t("td",Ui,[t("a",Wi,[l("日程表"),e(s)])]),t("td",Xi,[e(n,{to:"/offer2/jz_offer_II_058.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yi,[e(n,{to:"/tag/design.html"},{default:o(()=>[Zi]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[$i]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[tr]),_:1}),l(),er]),t("td",lr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const _r=a(h,[["render",or],["__file","segment-tree.html.vue"]]);export{_r as default};
