import{_ as i,r as _,o as a,c,a as t,b as e,w as o,d as l,f as r}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#栈","aria-hidden":"true"},"#"),l(" 栈")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("span",{class:"blue"},"栈",-1),M=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),E=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),j=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),L=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),C=t("code",null,"最短路",-1),Q=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),Z=t("code",null,"双连通分量",-1),G=t("code",null,"并查集",-1),K=t("code",null,"字典树",-1),S=t("code",null,"线段树",-1),T=t("code",null,"树状数组",-1),U=t("code",null,"后缀数组",-1),X=t("p",null,[t("strong",null,"算法")],-1),Y=t("code",null,"枚举",-1),A=t("code",null,"递归",-1),P=t("code",null,"分治",-1),D=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),W=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),Et=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),jt=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Lt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Qt=t("td",{style:{"text-align":"center"}},"20",-1),Rt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"center"}},Kt={href:"/problem/0020",target:"_blank",rel:"noopener noreferrer"},St={style:{"text-align":"left"}},Tt=t("code",null,"栈",-1),Ut=t("code",null,"字符串",-1),Xt={style:{"text-align":"left"}},Yt=t("td",{style:{"text-align":"center"}},"32",-1),At={style:{"text-align":"left"}},Pt={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"center"}},Ft={href:"/problem/0032",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"left"}},Wt=t("code",null,"栈",-1),$t=t("code",null,"字符串",-1),te=t("code",null,"动态规划",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"42",-1),oe={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},se={style:{"text-align":"center"}},de={href:"/problem/0042",target:"_blank",rel:"noopener noreferrer"},_e={style:{"text-align":"left"}},ie=t("code",null,"栈",-1),ae=t("code",null,"数组",-1),ce=t("code",null,"双指针",-1),re=t("code",null,"2+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"71",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/simplify-path",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={href:"/problem/0071",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"left"}},pe=t("code",null,"栈",-1),be=t("code",null,"字符串",-1),ke={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"84",-1),ve={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},He={style:{"text-align":"center"}},we={href:"/problem/0084",target:"_blank",rel:"noopener noreferrer"},Ee={style:{"text-align":"left"}},qe=t("code",null,"栈",-1),ze=t("code",null,"数组",-1),Oe=t("code",null,"单调栈",-1),je={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"85",-1),Le={style:{"text-align":"left"}},Be={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},Ve={style:{"text-align":"center"}},Ce={href:"/problem/0085",target:"_blank",rel:"noopener noreferrer"},Qe={style:{"text-align":"left"}},Re=t("code",null,"栈",-1),Ze=t("code",null,"数组",-1),Ge=t("code",null,"动态规划",-1),Ke=t("code",null,"2+",-1),Se={style:{"text-align":"left"}},Te=t("td",{style:{"text-align":"center"}},"94",-1),Ue={style:{"text-align":"left"}},Xe={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ye={style:{"text-align":"center"}},Ae={href:"/problem/0094",target:"_blank",rel:"noopener noreferrer"},Pe={style:{"text-align":"left"}},De=t("code",null,"栈",-1),Fe=t("code",null,"树",-1),Je=t("code",null,"深度优先搜索",-1),We=t("code",null,"1+",-1),$e={style:{"text-align":"left"}},tl=t("td",{style:{"text-align":"center"}},"114",-1),el={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},ol={style:{"text-align":"center"}},nl={href:"/problem/0114",target:"_blank",rel:"noopener noreferrer"},sl={style:{"text-align":"left"}},dl=t("code",null,"栈",-1),_l=t("code",null,"树",-1),il=t("code",null,"深度优先搜索",-1),al=t("code",null,"2+",-1),cl={style:{"text-align":"left"}},rl=t("td",{style:{"text-align":"center"}},"143",-1),hl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/reorder-list",target:"_blank",rel:"noopener noreferrer"},fl={style:{"text-align":"center"}},gl={href:"/problem/0143",target:"_blank",rel:"noopener noreferrer"},ml={style:{"text-align":"left"}},yl=t("code",null,"栈",-1),xl=t("code",null,"递归",-1),pl=t("code",null,"链表",-1),bl=t("code",null,"1+",-1),kl={style:{"text-align":"left"}},Ml=t("td",{style:{"text-align":"center"}},"144",-1),vl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Hl={style:{"text-align":"center"}},wl={href:"/problem/0144",target:"_blank",rel:"noopener noreferrer"},El={style:{"text-align":"left"}},ql=t("code",null,"栈",-1),zl=t("code",null,"树",-1),Ol=t("code",null,"深度优先搜索",-1),jl=t("code",null,"1+",-1),Nl={style:{"text-align":"left"}},Ll=t("td",{style:{"text-align":"center"}},"145",-1),Bl={style:{"text-align":"left"}},Vl={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Cl={style:{"text-align":"center"}},Ql={href:"/problem/0145",target:"_blank",rel:"noopener noreferrer"},Rl={style:{"text-align":"left"}},Zl=t("code",null,"栈",-1),Gl=t("code",null,"树",-1),Kl=t("code",null,"深度优先搜索",-1),Sl=t("code",null,"1+",-1),Tl={style:{"text-align":"left"}},Ul=t("td",{style:{"text-align":"center"}},"150",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/evaluate-reverse-polish-notation",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"center"}},Pl={href:"/problem/0150",target:"_blank",rel:"noopener noreferrer"},Dl={style:{"text-align":"left"}},Fl=t("code",null,"栈",-1),Jl=t("code",null,"数组",-1),Wl=t("code",null,"数学",-1),$l={style:{"text-align":"left"}},to=t("td",{style:{"text-align":"center"}},"155",-1),eo={style:{"text-align":"left"}},lo={href:"https://leetcode.com/problems/min-stack",target:"_blank",rel:"noopener noreferrer"},oo={style:{"text-align":"center"}},no={href:"/problem/0155",target:"_blank",rel:"noopener noreferrer"},so={style:{"text-align":"left"}},_o=t("code",null,"栈",-1),io=t("code",null,"设计",-1),ao={style:{"text-align":"left"}},co=t("td",{style:{"text-align":"center"}},"173",-1),ro={style:{"text-align":"left"}},ho={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},uo={style:{"text-align":"center"}},fo={href:"/problem/0173",target:"_blank",rel:"noopener noreferrer"},go={style:{"text-align":"left"}},mo=t("code",null,"栈",-1),yo=t("code",null,"树",-1),xo=t("code",null,"设计",-1),po=t("code",null,"3+",-1),bo={style:{"text-align":"left"}},ko=t("td",{style:{"text-align":"center"}},"224",-1),Mo={style:{"text-align":"left"}},vo={href:"https://leetcode.com/problems/basic-calculator",target:"_blank",rel:"noopener noreferrer"},Io={style:{"text-align":"center"}},Ho={href:"/problem/0224",target:"_blank",rel:"noopener noreferrer"},wo={style:{"text-align":"left"}},Eo=t("code",null,"栈",-1),qo=t("code",null,"递归",-1),zo=t("code",null,"数学",-1),Oo=t("code",null,"1+",-1),jo={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"center"}},"225",-1),Lo={style:{"text-align":"left"}},Bo={href:"https://leetcode.com/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},Vo={style:{"text-align":"center"}},Co={href:"/problem/0225",target:"_blank",rel:"noopener noreferrer"},Qo={style:{"text-align":"left"}},Ro=t("code",null,"栈",-1),Zo=t("code",null,"设计",-1),Go=t("code",null,"队列",-1),Ko={style:{"text-align":"left"}},So=t("td",{style:{"text-align":"center"}},"227",-1),To={style:{"text-align":"left"}},Uo={href:"https://leetcode.com/problems/basic-calculator-ii",target:"_blank",rel:"noopener noreferrer"},Xo={style:{"text-align":"center"}},Yo={href:"/problem/0227",target:"_blank",rel:"noopener noreferrer"},Ao={style:{"text-align":"left"}},Po=t("code",null,"栈",-1),Do=t("code",null,"数学",-1),Fo=t("code",null,"字符串",-1),Jo={style:{"text-align":"left"}},Wo=t("td",{style:{"text-align":"center"}},"232",-1),$o={style:{"text-align":"left"}},tn={href:"https://leetcode.com/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},en={style:{"text-align":"center"}},ln={href:"/problem/0232",target:"_blank",rel:"noopener noreferrer"},on={style:{"text-align":"left"}},nn=t("code",null,"栈",-1),sn=t("code",null,"设计",-1),dn=t("code",null,"队列",-1),_n={style:{"text-align":"left"}},an=t("td",{style:{"text-align":"center"}},"234",-1),cn={style:{"text-align":"left"}},rn={href:"https://leetcode.com/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},hn={style:{"text-align":"center"}},un={href:"/problem/0234",target:"_blank",rel:"noopener noreferrer"},fn={style:{"text-align":"left"}},gn=t("code",null,"栈",-1),mn=t("code",null,"递归",-1),yn=t("code",null,"链表",-1),xn=t("code",null,"1+",-1),pn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"255",-1),kn={style:{"text-align":"left"}},Mn={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},vn=t("td",{style:{"text-align":"center"}},null,-1),In={style:{"text-align":"left"}},Hn=t("code",null,"栈",-1),wn=t("code",null,"树",-1),En=t("code",null,"二叉搜索树",-1),qn=t("code",null,"4+",-1),zn={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"center"}},"272",-1),jn={style:{"text-align":"left"}},Nn={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},Ln=t("td",{style:{"text-align":"center"}},null,-1),Bn={style:{"text-align":"left"}},Vn=t("code",null,"栈",-1),Cn=t("code",null,"树",-1),Qn=t("code",null,"深度优先搜索",-1),Rn=t("code",null,"4+",-1),Zn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"316",-1),Kn={style:{"text-align":"left"}},Sn={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},Tn={style:{"text-align":"center"}},Un={href:"/problem/0316",target:"_blank",rel:"noopener noreferrer"},Xn={style:{"text-align":"left"}},Yn=t("code",null,"栈",-1),An=t("code",null,"贪心",-1),Pn=t("code",null,"字符串",-1),Dn=t("code",null,"1+",-1),Fn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"321",-1),Wn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},ts=t("td",{style:{"text-align":"center"}},null,-1),es={style:{"text-align":"left"}},ls=t("code",null,"栈",-1),os=t("code",null,"贪心",-1),ns=t("code",null,"数组",-1),ss=t("code",null,"2+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"331",-1),is={style:{"text-align":"left"}},as={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},cs=t("td",{style:{"text-align":"center"}},null,-1),rs={style:{"text-align":"left"}},hs=t("code",null,"栈",-1),us=t("code",null,"树",-1),fs=t("code",null,"字符串",-1),gs=t("code",null,"1+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"341",-1),xs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},bs=t("td",{style:{"text-align":"center"}},null,-1),ks={style:{"text-align":"left"}},Ms=t("code",null,"栈",-1),vs=t("code",null,"树",-1),Is=t("code",null,"深度优先搜索",-1),Hs=t("code",null,"3+",-1),ws={style:{"text-align":"left"}},Es=t("td",{style:{"text-align":"center"}},"364",-1),qs={style:{"text-align":"left"}},zs={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},Os=t("td",{style:{"text-align":"center"}},null,-1),js={style:{"text-align":"left"}},Ns=t("code",null,"栈",-1),Ls=t("code",null,"深度优先搜索",-1),Bs=t("code",null,"广度优先搜索",-1),Vs={style:{"text-align":"left"}},Cs=t("td",{style:{"text-align":"center"}},"385",-1),Qs={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},Zs=t("td",{style:{"text-align":"center"}},null,-1),Gs={style:{"text-align":"left"}},Ks=t("code",null,"栈",-1),Ss=t("code",null,"深度优先搜索",-1),Ts=t("code",null,"字符串",-1),Us={style:{"text-align":"left"}},Xs=t("td",{style:{"text-align":"center"}},"388",-1),Ys={style:{"text-align":"left"}},As={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},Ps=t("td",{style:{"text-align":"center"}},null,-1),Ds={style:{"text-align":"left"}},Fs=t("code",null,"栈",-1),Js=t("code",null,"深度优先搜索",-1),Ws=t("code",null,"字符串",-1),$s={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"394",-1),ed={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/decode-string",target:"_blank",rel:"noopener noreferrer"},od={style:{"text-align":"center"}},nd={href:"/problem/0394",target:"_blank",rel:"noopener noreferrer"},sd={style:{"text-align":"left"}},dd=t("code",null,"栈",-1),_d=t("code",null,"递归",-1),id=t("code",null,"字符串",-1),ad={style:{"text-align":"left"}},cd=t("td",{style:{"text-align":"center"}},"402",-1),rd={style:{"text-align":"left"}},hd={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},ud=t("td",{style:{"text-align":"center"}},null,-1),fd={style:{"text-align":"left"}},gd=t("code",null,"栈",-1),md=t("code",null,"贪心",-1),yd=t("code",null,"字符串",-1),xd=t("code",null,"1+",-1),pd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"426",-1),kd={style:{"text-align":"left"}},Md={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},vd={style:{"text-align":"center"}},Id={href:"/problem/0426",target:"_blank",rel:"noopener noreferrer"},Hd={style:{"text-align":"left"}},wd=t("code",null,"栈",-1),Ed=t("code",null,"树",-1),qd=t("code",null,"深度优先搜索",-1),zd=t("code",null,"4+",-1),Od={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"439",-1),Nd={style:{"text-align":"left"}},Ld={href:"https://leetcode.com/problems/ternary-expression-parser",target:"_blank",rel:"noopener noreferrer"},Bd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Cd=t("code",null,"栈",-1),Qd=t("code",null,"递归",-1),Rd=t("code",null,"字符串",-1),Zd={style:{"text-align":"left"}},Gd=t("td",{style:{"text-align":"center"}},"445",-1),Kd={style:{"text-align":"left"}},Sd={href:"https://leetcode.com/problems/add-two-numbers-ii",target:"_blank",rel:"noopener noreferrer"},Td={style:{"text-align":"center"}},Ud={href:"/problem/0445",target:"_blank",rel:"noopener noreferrer"},Xd={style:{"text-align":"left"}},Yd=t("code",null,"栈",-1),Ad=t("code",null,"链表",-1),Pd=t("code",null,"数学",-1),Dd={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"456",-1),Jd={style:{"text-align":"left"}},Wd={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"栈",-1),l_=t("code",null,"数组",-1),o_=t("code",null,"二分查找",-1),n_=t("code",null,"2+",-1),s_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"484",-1),__={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/find-permutation",target:"_blank",rel:"noopener noreferrer"},a_=t("td",{style:{"text-align":"center"}},null,-1),c_={style:{"text-align":"left"}},r_=t("code",null,"栈",-1),h_=t("code",null,"贪心",-1),u_=t("code",null,"数组",-1),f_=t("code",null,"1+",-1),g_={style:{"text-align":"left"}},m_=t("td",{style:{"text-align":"center"}},"488",-1),y_={style:{"text-align":"left"}},x_={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),b_={style:{"text-align":"left"}},k_=t("code",null,"栈",-1),M_=t("code",null,"广度优先搜索",-1),v_=t("code",null,"记忆化搜索",-1),I_=t("code",null,"2+",-1),H_={style:{"text-align":"left"}},w_=t("td",{style:{"text-align":"center"}},"496",-1),E_={style:{"text-align":"left"}},q_={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},z_={style:{"text-align":"center"}},O_={href:"/problem/0496",target:"_blank",rel:"noopener noreferrer"},j_={style:{"text-align":"left"}},N_=t("code",null,"栈",-1),L_=t("code",null,"数组",-1),B_=t("code",null,"哈希表",-1),V_=t("code",null,"1+",-1),C_={style:{"text-align":"left"}},Q_=t("td",{style:{"text-align":"center"}},"503",-1),R_={style:{"text-align":"left"}},Z_={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},G_={style:{"text-align":"center"}},K_={href:"/problem/0503",target:"_blank",rel:"noopener noreferrer"},S_={style:{"text-align":"left"}},T_=t("code",null,"栈",-1),U_=t("code",null,"数组",-1),X_=t("code",null,"单调栈",-1),Y_={style:{"text-align":"left"}},A_=t("td",{style:{"text-align":"center"}},"536",-1),P_={style:{"text-align":"left"}},D_={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},F_=t("td",{style:{"text-align":"center"}},null,-1),J_={style:{"text-align":"left"}},W_=t("code",null,"栈",-1),$_=t("code",null,"树",-1),ti=t("code",null,"深度优先搜索",-1),ei=t("code",null,"2+",-1),li={style:{"text-align":"left"}},oi=t("td",{style:{"text-align":"center"}},"581",-1),ni={style:{"text-align":"left"}},si={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},di=t("td",{style:{"text-align":"center"}},null,-1),_i={style:{"text-align":"left"}},ii=t("code",null,"栈",-1),ai=t("code",null,"贪心",-1),ci=t("code",null,"数组",-1),ri=t("code",null,"3+",-1),hi={style:{"text-align":"left"}},ui=t("td",{style:{"text-align":"center"}},"589",-1),fi={style:{"text-align":"left"}},gi={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},mi={style:{"text-align":"center"}},yi={href:"/problem/0589",target:"_blank",rel:"noopener noreferrer"},xi={style:{"text-align":"left"}},pi=t("code",null,"栈",-1),bi=t("code",null,"树",-1),ki=t("code",null,"深度优先搜索",-1),Mi={style:{"text-align":"left"}},vi=t("td",{style:{"text-align":"center"}},"590",-1),Ii={style:{"text-align":"left"}},Hi={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},wi={style:{"text-align":"center"}},Ei={href:"/problem/0590",target:"_blank",rel:"noopener noreferrer"},qi={style:{"text-align":"left"}},zi=t("code",null,"栈",-1),Oi=t("code",null,"树",-1),ji=t("code",null,"深度优先搜索",-1),Ni={style:{"text-align":"left"}},Li=t("td",{style:{"text-align":"center"}},"591",-1),Bi={style:{"text-align":"left"}},Vi={href:"https://leetcode.com/problems/tag-validator",target:"_blank",rel:"noopener noreferrer"},Ci=t("td",{style:{"text-align":"center"}},null,-1),Qi={style:{"text-align":"left"}},Ri=t("code",null,"栈",-1),Zi=t("code",null,"字符串",-1),Gi={style:{"text-align":"left"}},Ki=t("td",{style:{"text-align":"center"}},"636",-1),Si={style:{"text-align":"left"}},Ti={href:"https://leetcode.com/problems/exclusive-time-of-functions",target:"_blank",rel:"noopener noreferrer"},Ui=t("td",{style:{"text-align":"center"}},null,-1),Xi={style:{"text-align":"left"}},Yi=t("code",null,"栈",-1),Ai=t("code",null,"数组",-1),Pi={style:{"text-align":"left"}},Di=t("td",{style:{"text-align":"center"}},"654",-1),Fi={style:{"text-align":"left"}},Ji={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wi={style:{"text-align":"center"}},$i={href:"/problem/0654",target:"_blank",rel:"noopener noreferrer"},ta={style:{"text-align":"left"}},ea=t("code",null,"栈",-1),la=t("code",null,"树",-1),oa=t("code",null,"数组",-1),na=t("code",null,"3+",-1),sa={style:{"text-align":"left"}},da=t("td",{style:{"text-align":"center"}},"678",-1),_a={style:{"text-align":"left"}},ia={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},aa={style:{"text-align":"center"}},ca={href:"/problem/0678",target:"_blank",rel:"noopener noreferrer"},ra={style:{"text-align":"left"}},ha=t("code",null,"栈",-1),ua=t("code",null,"贪心",-1),fa=t("code",null,"字符串",-1),ga=t("code",null,"1+",-1),ma={style:{"text-align":"left"}},ya=t("td",{style:{"text-align":"center"}},"682",-1),xa={style:{"text-align":"left"}},pa={href:"https://leetcode.com/problems/baseball-game",target:"_blank",rel:"noopener noreferrer"},ba={style:{"text-align":"center"}},ka={href:"/problem/0682",target:"_blank",rel:"noopener noreferrer"},Ma={style:{"text-align":"left"}},va=t("code",null,"栈",-1),Ia=t("code",null,"数组",-1),Ha=t("code",null,"模拟",-1),wa={style:{"text-align":"left"}},Ea=t("td",{style:{"text-align":"center"}},"716",-1),qa={style:{"text-align":"left"}},za={href:"https://leetcode.com/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},null,-1),ja={style:{"text-align":"left"}},Na=t("code",null,"栈",-1),La=t("code",null,"设计",-1),Ba=t("code",null,"链表",-1),Va=t("code",null,"2+",-1),Ca={style:{"text-align":"left"}},Qa=t("td",{style:{"text-align":"center"}},"726",-1),Ra={style:{"text-align":"left"}},Za={href:"https://leetcode.com/problems/number-of-atoms",target:"_blank",rel:"noopener noreferrer"},Ga=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},Sa=t("code",null,"栈",-1),Ta=t("code",null,"哈希表",-1),Ua=t("code",null,"字符串",-1),Xa=t("code",null,"1+",-1),Ya={style:{"text-align":"left"}},Aa=t("td",{style:{"text-align":"center"}},"735",-1),Pa={style:{"text-align":"left"}},Da={href:"https://leetcode.com/problems/asteroid-collision",target:"_blank",rel:"noopener noreferrer"},Fa=t("td",{style:{"text-align":"center"}},null,-1),Ja={style:{"text-align":"left"}},Wa=t("code",null,"栈",-1),$a=t("code",null,"数组",-1),tc=t("code",null,"模拟",-1),ec={style:{"text-align":"left"}},lc=t("td",{style:{"text-align":"center"}},"736",-1),oc={style:{"text-align":"left"}},nc={href:"https://leetcode.com/problems/parse-lisp-expression",target:"_blank",rel:"noopener noreferrer"},sc=t("td",{style:{"text-align":"center"}},null,-1),dc={style:{"text-align":"left"}},_c=t("code",null,"栈",-1),ic=t("code",null,"递归",-1),ac=t("code",null,"哈希表",-1),cc=t("code",null,"1+",-1),rc={style:{"text-align":"left"}},hc=t("td",{style:{"text-align":"center"}},"739",-1),uc={style:{"text-align":"left"}},fc={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},gc={style:{"text-align":"center"}},mc={href:"/problem/0739",target:"_blank",rel:"noopener noreferrer"},yc={style:{"text-align":"left"}},xc=t("code",null,"栈",-1),pc=t("code",null,"数组",-1),bc=t("code",null,"单调栈",-1),kc={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"768",-1),vc={style:{"text-align":"left"}},Ic={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},Hc=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},Ec=t("code",null,"栈",-1),qc=t("code",null,"贪心",-1),zc=t("code",null,"数组",-1),Oc=t("code",null,"2+",-1),jc={style:{"text-align":"left"}},Nc=t("td",{style:{"text-align":"center"}},"769",-1),Lc={style:{"text-align":"left"}},Bc={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},Vc=t("td",{style:{"text-align":"center"}},null,-1),Cc={style:{"text-align":"left"}},Qc=t("code",null,"栈",-1),Rc=t("code",null,"贪心",-1),Zc=t("code",null,"数组",-1),Gc=t("code",null,"2+",-1),Kc={style:{"text-align":"left"}},Sc=t("td",{style:{"text-align":"center"}},"770",-1),Tc={style:{"text-align":"left"}},Uc={href:"https://leetcode.com/problems/basic-calculator-iv",target:"_blank",rel:"noopener noreferrer"},Xc=t("td",{style:{"text-align":"center"}},null,-1),Yc={style:{"text-align":"left"}},Ac=t("code",null,"栈",-1),Pc=t("code",null,"递归",-1),Dc=t("code",null,"哈希表",-1),Fc=t("code",null,"2+",-1),Jc={style:{"text-align":"left"}},Wc=t("td",{style:{"text-align":"center"}},"772",-1),$c={style:{"text-align":"left"}},tr={href:"https://leetcode.com/problems/basic-calculator-iii",target:"_blank",rel:"noopener noreferrer"},er={style:{"text-align":"center"}},lr={href:"/problem/0772",target:"_blank",rel:"noopener noreferrer"},or={style:{"text-align":"left"}},nr=t("code",null,"栈",-1),sr=t("code",null,"递归",-1),dr=t("code",null,"数学",-1),_r=t("code",null,"1+",-1),ir={style:{"text-align":"left"}},ar=t("td",{style:{"text-align":"center"}},"844",-1),cr={style:{"text-align":"left"}},rr={href:"https://leetcode.com/problems/backspace-string-compare",target:"_blank",rel:"noopener noreferrer"},hr={style:{"text-align":"center"}},ur={href:"/problem/0844",target:"_blank",rel:"noopener noreferrer"},fr={style:{"text-align":"left"}},gr=t("code",null,"栈",-1),mr=t("code",null,"双指针",-1),yr=t("code",null,"字符串",-1),xr=t("code",null,"1+",-1),pr={style:{"text-align":"left"}},br=t("td",{style:{"text-align":"center"}},"853",-1),kr={style:{"text-align":"left"}},Mr={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},vr=t("td",{style:{"text-align":"center"}},null,-1),Ir={style:{"text-align":"left"}},Hr=t("code",null,"栈",-1),wr=t("code",null,"数组",-1),Er=t("code",null,"排序",-1),qr=t("code",null,"1+",-1),zr={style:{"text-align":"left"}},Or=t("td",{style:{"text-align":"center"}},"856",-1),jr={style:{"text-align":"left"}},Nr={href:"https://leetcode.com/problems/score-of-parentheses",target:"_blank",rel:"noopener noreferrer"},Lr=t("td",{style:{"text-align":"center"}},null,-1),Br={style:{"text-align":"left"}},Vr=t("code",null,"栈",-1),Cr=t("code",null,"字符串",-1),Qr={style:{"text-align":"left"}},Rr=t("td",{style:{"text-align":"center"}},"880",-1),Zr={style:{"text-align":"left"}},Gr={href:"https://leetcode.com/problems/decoded-string-at-index",target:"_blank",rel:"noopener noreferrer"},Kr={style:{"text-align":"center"}},Sr={href:"/problem/0880",target:"_blank",rel:"noopener noreferrer"},Tr={style:{"text-align":"left"}},Ur=t("code",null,"栈",-1),Xr=t("code",null,"字符串",-1),Yr={style:{"text-align":"left"}},Ar=t("td",{style:{"text-align":"center"}},"895",-1),Pr={style:{"text-align":"left"}},Dr={href:"https://leetcode.com/problems/maximum-frequency-stack",target:"_blank",rel:"noopener noreferrer"},Fr=t("td",{style:{"text-align":"center"}},null,-1),Jr={style:{"text-align":"left"}},Wr=t("code",null,"栈",-1),$r=t("code",null,"设计",-1),t1=t("code",null,"哈希表",-1),e1=t("code",null,"1+",-1),l1={style:{"text-align":"left"}},o1=t("td",{style:{"text-align":"center"}},"897",-1),n1={style:{"text-align":"left"}},s1={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},d1=t("td",{style:{"text-align":"center"}},null,-1),_1={style:{"text-align":"left"}},i1=t("code",null,"栈",-1),a1=t("code",null,"树",-1),c1=t("code",null,"深度优先搜索",-1),r1=t("code",null,"2+",-1),h1={style:{"text-align":"left"}},u1=t("td",{style:{"text-align":"center"}},"901",-1),f1={style:{"text-align":"left"}},g1={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},m1=t("td",{style:{"text-align":"center"}},null,-1),y1={style:{"text-align":"left"}},x1=t("code",null,"栈",-1),p1=t("code",null,"设计",-1),b1=t("code",null,"数据流",-1),k1=t("code",null,"1+",-1),M1={style:{"text-align":"left"}},v1=t("td",{style:{"text-align":"center"}},"907",-1),I1={style:{"text-align":"left"}},H1={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},w1=t("td",{style:{"text-align":"center"}},null,-1),E1={style:{"text-align":"left"}},q1=t("code",null,"栈",-1),z1=t("code",null,"数组",-1),O1=t("code",null,"动态规划",-1),j1=t("code",null,"1+",-1),N1={style:{"text-align":"left"}},L1=t("td",{style:{"text-align":"center"}},"921",-1),B1={style:{"text-align":"left"}},V1={href:"https://leetcode.com/problems/minimum-add-to-make-parentheses-valid",target:"_blank",rel:"noopener noreferrer"},C1={style:{"text-align":"center"}},Q1={href:"/problem/0921",target:"_blank",rel:"noopener noreferrer"},R1={style:{"text-align":"left"}},Z1=t("code",null,"栈",-1),G1=t("code",null,"贪心",-1),K1=t("code",null,"字符串",-1),S1={style:{"text-align":"left"}},T1=t("td",{style:{"text-align":"center"}},"936",-1),U1={style:{"text-align":"left"}},X1={href:"https://leetcode.com/problems/stamping-the-sequence",target:"_blank",rel:"noopener noreferrer"},Y1=t("td",{style:{"text-align":"center"}},null,-1),A1={style:{"text-align":"left"}},P1=t("code",null,"栈",-1),D1=t("code",null,"贪心",-1),F1=t("code",null,"队列",-1),J1=t("code",null,"1+",-1),W1={style:{"text-align":"left"}},$1=t("td",{style:{"text-align":"center"}},"946",-1),th={style:{"text-align":"left"}},eh={href:"https://leetcode.com/problems/validate-stack-sequences",target:"_blank",rel:"noopener noreferrer"},lh={style:{"text-align":"center"}},oh={href:"/problem/0946",target:"_blank",rel:"noopener noreferrer"},nh={style:{"text-align":"left"}},sh=t("code",null,"栈",-1),dh=t("code",null,"数组",-1),_h=t("code",null,"模拟",-1),ih={style:{"text-align":"left"}},ah=t("td",{style:{"text-align":"center"}},"962",-1),ch={style:{"text-align":"left"}},rh={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},hh={style:{"text-align":"center"}},uh={href:"/problem/0962",target:"_blank",rel:"noopener noreferrer"},fh={style:{"text-align":"left"}},gh=t("code",null,"栈",-1),mh=t("code",null,"数组",-1),yh=t("code",null,"单调栈",-1),xh={style:{"text-align":"left"}},ph=t("td",{style:{"text-align":"center"}},"975",-1),bh={style:{"text-align":"left"}},kh={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},Mh=t("td",{style:{"text-align":"center"}},null,-1),vh={style:{"text-align":"left"}},Ih=t("code",null,"栈",-1),Hh=t("code",null,"数组",-1),wh=t("code",null,"动态规划",-1),Eh=t("code",null,"2+",-1),qh={style:{"text-align":"left"}},zh=t("td",{style:{"text-align":"center"}},"1003",-1),Oh={style:{"text-align":"left"}},jh={href:"https://leetcode.com/problems/check-if-word-is-valid-after-substitutions",target:"_blank",rel:"noopener noreferrer"},Nh=t("td",{style:{"text-align":"center"}},null,-1),Lh={style:{"text-align":"left"}},Bh=t("code",null,"栈",-1),Vh=t("code",null,"字符串",-1),Ch={style:{"text-align":"left"}},Qh=t("td",{style:{"text-align":"center"}},"1006",-1),Rh={style:{"text-align":"left"}},Zh={href:"https://leetcode.com/problems/clumsy-factorial",target:"_blank",rel:"noopener noreferrer"},Gh=t("td",{style:{"text-align":"center"}},null,-1),Kh={style:{"text-align":"left"}},Sh=t("code",null,"栈",-1),Th=t("code",null,"数学",-1),Uh=t("code",null,"模拟",-1),Xh={style:{"text-align":"left"}},Yh=t("td",{style:{"text-align":"center"}},"1008",-1),Ah={style:{"text-align":"left"}},Ph={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Dh={style:{"text-align":"center"}},Fh={href:"/problem/1008",target:"_blank",rel:"noopener noreferrer"},Jh={style:{"text-align":"left"}},Wh=t("code",null,"栈",-1),$h=t("code",null,"树",-1),tu=t("code",null,"二叉搜索树",-1),eu=t("code",null,"3+",-1),lu={style:{"text-align":"left"}},ou=t("td",{style:{"text-align":"center"}},"1019",-1),nu={style:{"text-align":"left"}},su={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},du=t("td",{style:{"text-align":"center"}},null,-1),_u={style:{"text-align":"left"}},iu=t("code",null,"栈",-1),au=t("code",null,"数组",-1),cu=t("code",null,"链表",-1),ru=t("code",null,"1+",-1),hu={style:{"text-align":"left"}},uu=t("td",{style:{"text-align":"center"}},"1021",-1),fu={style:{"text-align":"left"}},gu={href:"https://leetcode.com/problems/remove-outermost-parentheses",target:"_blank",rel:"noopener noreferrer"},mu={style:{"text-align":"center"}},yu={href:"/problem/1021",target:"_blank",rel:"noopener noreferrer"},xu={style:{"text-align":"left"}},pu=t("code",null,"栈",-1),bu=t("code",null,"字符串",-1),ku={style:{"text-align":"left"}},Mu=t("td",{style:{"text-align":"center"}},"1047",-1),vu={style:{"text-align":"left"}},Iu={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",target:"_blank",rel:"noopener noreferrer"},Hu={style:{"text-align":"center"}},wu={href:"/problem/1047",target:"_blank",rel:"noopener noreferrer"},Eu={style:{"text-align":"left"}},qu=t("code",null,"栈",-1),zu=t("code",null,"字符串",-1),Ou={style:{"text-align":"left"}},ju=t("td",{style:{"text-align":"center"}},"1063",-1),Nu={style:{"text-align":"left"}},Lu={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Bu=t("td",{style:{"text-align":"center"}},null,-1),Vu={style:{"text-align":"left"}},Cu=t("code",null,"栈",-1),Qu=t("code",null,"数组",-1),Ru=t("code",null,"单调栈",-1),Zu={style:{"text-align":"left"}},Gu=t("td",{style:{"text-align":"center"}},"1081",-1),Ku={style:{"text-align":"left"}},Su={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},Tu={style:{"text-align":"center"}},Uu={href:"/problem/1081",target:"_blank",rel:"noopener noreferrer"},Xu={style:{"text-align":"left"}},Yu=t("code",null,"栈",-1),Au=t("code",null,"贪心",-1),Pu=t("code",null,"字符串",-1),Du=t("code",null,"1+",-1),Fu={style:{"text-align":"left"}},Ju=t("td",{style:{"text-align":"center"}},"1096",-1),Wu={style:{"text-align":"left"}},$u={href:"https://leetcode.com/problems/brace-expansion-ii",target:"_blank",rel:"noopener noreferrer"},tf=t("td",{style:{"text-align":"center"}},null,-1),ef={style:{"text-align":"left"}},lf=t("code",null,"栈",-1),of=t("code",null,"广度优先搜索",-1),nf=t("code",null,"字符串",-1),sf=t("code",null,"1+",-1),df={style:{"text-align":"left"}},_f=t("td",{style:{"text-align":"center"}},"1106",-1),af={style:{"text-align":"left"}},cf={href:"https://leetcode.com/problems/parsing-a-boolean-expression",target:"_blank",rel:"noopener noreferrer"},rf=t("td",{style:{"text-align":"center"}},null,-1),hf={style:{"text-align":"left"}},uf=t("code",null,"栈",-1),ff=t("code",null,"递归",-1),gf=t("code",null,"字符串",-1),mf={style:{"text-align":"left"}},yf=t("td",{style:{"text-align":"center"}},"1111",-1),xf={style:{"text-align":"left"}},pf={href:"https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings",target:"_blank",rel:"noopener noreferrer"},bf=t("td",{style:{"text-align":"center"}},null,-1),kf={style:{"text-align":"left"}},Mf=t("code",null,"栈",-1),vf=t("code",null,"字符串",-1),If={style:{"text-align":"left"}},Hf=t("td",{style:{"text-align":"center"}},"1124",-1),wf={style:{"text-align":"left"}},Ef={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},qf=t("td",{style:{"text-align":"center"}},null,-1),zf={style:{"text-align":"left"}},Of=t("code",null,"栈",-1),jf=t("code",null,"数组",-1),Nf=t("code",null,"哈希表",-1),Lf=t("code",null,"2+",-1),Bf={style:{"text-align":"left"}},Vf=t("td",{style:{"text-align":"center"}},"1130",-1),Cf={style:{"text-align":"left"}},Qf={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},Rf=t("td",{style:{"text-align":"center"}},null,-1),Zf={style:{"text-align":"left"}},Gf=t("code",null,"栈",-1),Kf=t("code",null,"贪心",-1),Sf=t("code",null,"数组",-1),Tf=t("code",null,"2+",-1),Uf={style:{"text-align":"left"}},Xf=t("td",{style:{"text-align":"center"}},"1172",-1),Yf={style:{"text-align":"left"}},Af={href:"https://leetcode.com/problems/dinner-plate-stacks",target:"_blank",rel:"noopener noreferrer"},Pf=t("td",{style:{"text-align":"center"}},null,-1),Df={style:{"text-align":"left"}},Ff=t("code",null,"栈",-1),Jf=t("code",null,"设计",-1),Wf=t("code",null,"哈希表",-1),$f=t("code",null,"1+",-1),tg={style:{"text-align":"left"}},eg=t("td",{style:{"text-align":"center"}},"1190",-1),lg={style:{"text-align":"left"}},og={href:"https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses",target:"_blank",rel:"noopener noreferrer"},ng={style:{"text-align":"center"}},sg={href:"/problem/1190",target:"_blank",rel:"noopener noreferrer"},dg={style:{"text-align":"left"}},_g=t("code",null,"栈",-1),ig=t("code",null,"字符串",-1),ag={style:{"text-align":"left"}},cg=t("td",{style:{"text-align":"center"}},"1209",-1),rg={style:{"text-align":"left"}},hg={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",target:"_blank",rel:"noopener noreferrer"},ug=t("td",{style:{"text-align":"center"}},null,-1),fg={style:{"text-align":"left"}},gg=t("code",null,"栈",-1),mg=t("code",null,"字符串",-1),yg={style:{"text-align":"left"}},xg=t("td",{style:{"text-align":"center"}},"1214",-1),pg={style:{"text-align":"left"}},bg={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},kg=t("td",{style:{"text-align":"center"}},null,-1),Mg={style:{"text-align":"left"}},vg=t("code",null,"栈",-1),Ig=t("code",null,"树",-1),Hg=t("code",null,"深度优先搜索",-1),wg=t("code",null,"4+",-1),Eg={style:{"text-align":"left"}},qg=t("td",{style:{"text-align":"center"}},"1249",-1),zg={style:{"text-align":"left"}},Og={href:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},jg=t("td",{style:{"text-align":"center"}},null,-1),Ng={style:{"text-align":"left"}},Lg=t("code",null,"栈",-1),Bg=t("code",null,"字符串",-1),Vg={style:{"text-align":"left"}},Cg=t("td",{style:{"text-align":"center"}},"1265",-1),Qg={style:{"text-align":"left"}},Rg={href:"https://leetcode.com/problems/print-immutable-linked-list-in-reverse",target:"_blank",rel:"noopener noreferrer"},Zg=t("td",{style:{"text-align":"center"}},null,-1),Gg={style:{"text-align":"left"}},Kg=t("code",null,"栈",-1),Sg=t("code",null,"递归",-1),Tg=t("code",null,"链表",-1),Ug=t("code",null,"1+",-1),Xg={style:{"text-align":"left"}},Yg=t("td",{style:{"text-align":"center"}},"1381",-1),Ag={style:{"text-align":"left"}},Pg={href:"https://leetcode.com/problems/design-a-stack-with-increment-operation",target:"_blank",rel:"noopener noreferrer"},Dg={style:{"text-align":"center"}},Fg={href:"/problem/1381",target:"_blank",rel:"noopener noreferrer"},Jg={style:{"text-align":"left"}},Wg=t("code",null,"栈",-1),$g=t("code",null,"设计",-1),tm=t("code",null,"数组",-1),em={style:{"text-align":"left"}},lm=t("td",{style:{"text-align":"center"}},"1441",-1),om={style:{"text-align":"left"}},nm={href:"https://leetcode.com/problems/build-an-array-with-stack-operations",target:"_blank",rel:"noopener noreferrer"},sm={style:{"text-align":"center"}},dm={href:"/problem/1441",target:"_blank",rel:"noopener noreferrer"},_m={style:{"text-align":"left"}},im=t("code",null,"栈",-1),am=t("code",null,"数组",-1),cm=t("code",null,"模拟",-1),rm={style:{"text-align":"left"}},hm=t("td",{style:{"text-align":"center"}},"1472",-1),um={style:{"text-align":"left"}},fm={href:"https://leetcode.com/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},gm={style:{"text-align":"center"}},mm={href:"/problem/1472",target:"_blank",rel:"noopener noreferrer"},ym={style:{"text-align":"left"}},xm=t("code",null,"栈",-1),pm=t("code",null,"设计",-1),bm=t("code",null,"数组",-1),km=t("code",null,"3+",-1),Mm={style:{"text-align":"left"}},vm=t("td",{style:{"text-align":"center"}},"1475",-1),Im={style:{"text-align":"left"}},Hm={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},wm={style:{"text-align":"center"}},Em={href:"/problem/1475",target:"_blank",rel:"noopener noreferrer"},qm={style:{"text-align":"left"}},zm=t("code",null,"栈",-1),Om=t("code",null,"数组",-1),jm=t("code",null,"单调栈",-1),Nm={style:{"text-align":"left"}},Lm=t("td",{style:{"text-align":"center"}},"1504",-1),Bm={style:{"text-align":"left"}},Vm={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Cm=t("td",{style:{"text-align":"center"}},null,-1),Qm={style:{"text-align":"left"}},Rm=t("code",null,"栈",-1),Zm=t("code",null,"数组",-1),Gm=t("code",null,"动态规划",-1),Km=t("code",null,"2+",-1),Sm={style:{"text-align":"left"}},Tm=t("td",{style:{"text-align":"center"}},"1526",-1),Um={style:{"text-align":"left"}},Xm={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},Ym=t("td",{style:{"text-align":"center"}},null,-1),Am={style:{"text-align":"left"}},Pm=t("code",null,"栈",-1),Dm=t("code",null,"贪心",-1),Fm=t("code",null,"数组",-1),Jm=t("code",null,"2+",-1),Wm={style:{"text-align":"left"}},$m=t("td",{style:{"text-align":"center"}},"1541",-1),ty={style:{"text-align":"left"}},ey={href:"https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string",target:"_blank",rel:"noopener noreferrer"},ly=t("td",{style:{"text-align":"center"}},null,-1),oy={style:{"text-align":"left"}},ny=t("code",null,"栈",-1),sy=t("code",null,"贪心",-1),dy=t("code",null,"字符串",-1),_y={style:{"text-align":"left"}},iy=t("td",{style:{"text-align":"center"}},"1544",-1),ay={style:{"text-align":"left"}},cy={href:"https://leetcode.com/problems/make-the-string-great",target:"_blank",rel:"noopener noreferrer"},ry=t("td",{style:{"text-align":"center"}},null,-1),hy={style:{"text-align":"left"}},uy=t("code",null,"栈",-1),fy=t("code",null,"字符串",-1),gy={style:{"text-align":"left"}},my=t("td",{style:{"text-align":"center"}},"1574",-1),yy={style:{"text-align":"left"}},xy={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},py=t("td",{style:{"text-align":"center"}},null,-1),by={style:{"text-align":"left"}},ky=t("code",null,"栈",-1),My=t("code",null,"数组",-1),vy=t("code",null,"双指针",-1),Iy=t("code",null,"2+",-1),Hy={style:{"text-align":"left"}},wy=t("td",{style:{"text-align":"center"}},"1586",-1),Ey={style:{"text-align":"left"}},qy={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},zy=t("td",{style:{"text-align":"center"}},null,-1),Oy={style:{"text-align":"left"}},jy=t("code",null,"栈",-1),Ny=t("code",null,"树",-1),Ly=t("code",null,"设计",-1),By=t("code",null,"3+",-1),Vy={style:{"text-align":"left"}},Cy=t("td",{style:{"text-align":"center"}},"1597",-1),Qy={style:{"text-align":"left"}},Ry={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},Zy=t("td",{style:{"text-align":"center"}},null,-1),Gy={style:{"text-align":"left"}},Ky=t("code",null,"栈",-1),Sy=t("code",null,"树",-1),Ty=t("code",null,"字符串",-1),Uy=t("code",null,"1+",-1),Xy={style:{"text-align":"left"}},Yy=t("td",{style:{"text-align":"center"}},"1598",-1),Ay={style:{"text-align":"left"}},Py={href:"https://leetcode.com/problems/crawler-log-folder",target:"_blank",rel:"noopener noreferrer"},Dy=t("td",{style:{"text-align":"center"}},null,-1),Fy={style:{"text-align":"left"}},Jy=t("code",null,"栈",-1),Wy=t("code",null,"数组",-1),$y=t("code",null,"字符串",-1),tx={style:{"text-align":"left"}},ex=t("td",{style:{"text-align":"center"}},"1614",-1),lx={style:{"text-align":"left"}},ox={href:"https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses",target:"_blank",rel:"noopener noreferrer"},nx=t("td",{style:{"text-align":"center"}},null,-1),sx={style:{"text-align":"left"}},dx=t("code",null,"栈",-1),_x=t("code",null,"字符串",-1),ix={style:{"text-align":"left"}},ax=t("td",{style:{"text-align":"center"}},"1628",-1),cx={style:{"text-align":"left"}},rx={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},hx=t("td",{style:{"text-align":"center"}},null,-1),ux={style:{"text-align":"left"}},fx=t("code",null,"栈",-1),gx=t("code",null,"树",-1),mx=t("code",null,"设计",-1),yx=t("code",null,"3+",-1),xx={style:{"text-align":"left"}},px=t("td",{style:{"text-align":"center"}},"1653",-1),bx={style:{"text-align":"left"}},kx={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},Mx=t("td",{style:{"text-align":"center"}},null,-1),vx={style:{"text-align":"left"}},Ix=t("code",null,"栈",-1),Hx=t("code",null,"字符串",-1),wx=t("code",null,"动态规划",-1),Ex={style:{"text-align":"left"}},qx=t("td",{style:{"text-align":"center"}},"1673",-1),zx={style:{"text-align":"left"}},Ox={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},jx=t("td",{style:{"text-align":"center"}},null,-1),Nx={style:{"text-align":"left"}},Lx=t("code",null,"栈",-1),Bx=t("code",null,"贪心",-1),Vx=t("code",null,"数组",-1),Cx=t("code",null,"1+",-1),Qx={style:{"text-align":"left"}},Rx=t("td",{style:{"text-align":"center"}},"1700",-1),Zx={style:{"text-align":"left"}},Gx={href:"https://leetcode.com/problems/number-of-students-unable-to-eat-lunch",target:"_blank",rel:"noopener noreferrer"},Kx=t("td",{style:{"text-align":"center"}},null,-1),Sx={style:{"text-align":"left"}},Tx=t("code",null,"栈",-1),Ux=t("code",null,"队列",-1),Xx=t("code",null,"数组",-1),Yx=t("code",null,"1+",-1),Ax={style:{"text-align":"left"}},Px=t("td",{style:{"text-align":"center"}},"1717",-1),Dx={style:{"text-align":"left"}},Fx={href:"https://leetcode.com/problems/maximum-score-from-removing-substrings",target:"_blank",rel:"noopener noreferrer"},Jx=t("td",{style:{"text-align":"center"}},null,-1),Wx={style:{"text-align":"left"}},$x=t("code",null,"栈",-1),tp=t("code",null,"贪心",-1),ep=t("code",null,"字符串",-1),lp={style:{"text-align":"left"}},op=t("td",{style:{"text-align":"center"}},"1756",-1),np={style:{"text-align":"left"}},sp={href:"https://leetcode.com/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},dp=t("td",{style:{"text-align":"center"}},null,-1),_p={style:{"text-align":"left"}},ip=t("code",null,"栈",-1),ap=t("code",null,"设计",-1),cp=t("code",null,"树状数组",-1),rp=t("code",null,"3+",-1),hp={style:{"text-align":"left"}},up=t("td",{style:{"text-align":"center"}},"1762",-1),fp={style:{"text-align":"left"}},gp={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},mp=t("td",{style:{"text-align":"center"}},null,-1),yp={style:{"text-align":"left"}},xp=t("code",null,"栈",-1),pp=t("code",null,"数组",-1),bp=t("code",null,"单调栈",-1),kp={style:{"text-align":"left"}},Mp=t("td",{style:{"text-align":"center"}},"1776",-1),vp={style:{"text-align":"left"}},Ip={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Hp=t("td",{style:{"text-align":"center"}},null,-1),wp={style:{"text-align":"left"}},Ep=t("code",null,"栈",-1),qp=t("code",null,"数组",-1),zp=t("code",null,"数学",-1),Op=t("code",null,"2+",-1),jp={style:{"text-align":"left"}},Np=t("td",{style:{"text-align":"center"}},"1793",-1),Lp={style:{"text-align":"left"}},Bp={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},Vp=t("td",{style:{"text-align":"center"}},null,-1),Cp={style:{"text-align":"left"}},Qp=t("code",null,"栈",-1),Rp=t("code",null,"数组",-1),Zp=t("code",null,"双指针",-1),Gp=t("code",null,"2+",-1),Kp={style:{"text-align":"left"}},Sp=t("td",{style:{"text-align":"center"}},"1856",-1),Tp={style:{"text-align":"left"}},Up={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},Xp=t("td",{style:{"text-align":"center"}},null,-1),Yp={style:{"text-align":"left"}},Ap=t("code",null,"栈",-1),Pp=t("code",null,"数组",-1),Dp=t("code",null,"前缀和",-1),Fp=t("code",null,"1+",-1),Jp={style:{"text-align":"left"}},Wp=t("td",{style:{"text-align":"center"}},"1896",-1),$p={style:{"text-align":"left"}},tb={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},eb=t("td",{style:{"text-align":"center"}},null,-1),lb={style:{"text-align":"left"}},ob=t("code",null,"栈",-1),nb=t("code",null,"数学",-1),sb=t("code",null,"字符串",-1),db=t("code",null,"1+",-1),_b={style:{"text-align":"left"}},ib=t("td",{style:{"text-align":"center"}},"1910",-1),ab={style:{"text-align":"left"}},cb={href:"https://leetcode.com/problems/remove-all-occurrences-of-a-substring",target:"_blank",rel:"noopener noreferrer"},rb=t("td",{style:{"text-align":"center"}},null,-1),hb={style:{"text-align":"left"}},ub=t("code",null,"栈",-1),fb=t("code",null,"字符串",-1),gb=t("code",null,"模拟",-1),mb={style:{"text-align":"left"}},yb=t("td",{style:{"text-align":"center"}},"1944",-1),xb={style:{"text-align":"left"}},pb={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},bb=t("td",{style:{"text-align":"center"}},null,-1),kb={style:{"text-align":"left"}},Mb=t("code",null,"栈",-1),vb=t("code",null,"数组",-1),Ib=t("code",null,"单调栈",-1),Hb={style:{"text-align":"left"}},wb=t("td",{style:{"text-align":"center"}},"1950",-1),Eb={style:{"text-align":"left"}},qb={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},zb=t("td",{style:{"text-align":"center"}},null,-1),Ob={style:{"text-align":"left"}},jb=t("code",null,"栈",-1),Nb=t("code",null,"数组",-1),Lb=t("code",null,"单调栈",-1),Bb={style:{"text-align":"left"}},Vb=t("td",{style:{"text-align":"center"}},"1963",-1),Cb={style:{"text-align":"left"}},Qb={href:"https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced",target:"_blank",rel:"noopener noreferrer"},Rb={style:{"text-align":"center"}},Zb={href:"/problem/1963",target:"_blank",rel:"noopener noreferrer"},Gb={style:{"text-align":"left"}},Kb=t("code",null,"栈",-1),Sb=t("code",null,"贪心",-1),Tb=t("code",null,"双指针",-1),Ub=t("code",null,"1+",-1),Xb={style:{"text-align":"left"}},Yb=t("td",{style:{"text-align":"center"}},"1996",-1),Ab={style:{"text-align":"left"}},Pb={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},Db=t("td",{style:{"text-align":"center"}},null,-1),Fb={style:{"text-align":"left"}},Jb=t("code",null,"栈",-1),Wb=t("code",null,"贪心",-1),$b=t("code",null,"数组",-1),t0=t("code",null,"2+",-1),e0={style:{"text-align":"left"}},l0=t("td",{style:{"text-align":"center"}},"2000",-1),o0={style:{"text-align":"left"}},n0={href:"https://leetcode.com/problems/reverse-prefix-of-word",target:"_blank",rel:"noopener noreferrer"},s0=t("td",{style:{"text-align":"center"}},null,-1),d0={style:{"text-align":"left"}},_0=t("code",null,"栈",-1),i0=t("code",null,"双指针",-1),a0=t("code",null,"字符串",-1),c0={style:{"text-align":"left"}},r0=t("td",{style:{"text-align":"center"}},"2019",-1),h0={style:{"text-align":"left"}},u0={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},f0=t("td",{style:{"text-align":"center"}},null,-1),g0={style:{"text-align":"left"}},m0=t("code",null,"栈",-1),y0=t("code",null,"记忆化搜索",-1),x0=t("code",null,"数组",-1),p0=t("code",null,"3+",-1),b0={style:{"text-align":"left"}},k0=t("td",{style:{"text-align":"center"}},"2030",-1),M0={style:{"text-align":"left"}},v0={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},I0=t("td",{style:{"text-align":"center"}},null,-1),H0={style:{"text-align":"left"}},w0=t("code",null,"栈",-1),E0=t("code",null,"贪心",-1),q0=t("code",null,"字符串",-1),z0=t("code",null,"1+",-1),O0={style:{"text-align":"left"}},j0=t("td",{style:{"text-align":"center"}},"2104",-1),N0={style:{"text-align":"left"}},L0={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},B0=t("td",{style:{"text-align":"center"}},null,-1),V0={style:{"text-align":"left"}},C0=t("code",null,"栈",-1),Q0=t("code",null,"数组",-1),R0=t("code",null,"单调栈",-1),Z0={style:{"text-align":"left"}},G0=t("td",{style:{"text-align":"center"}},"2116",-1),K0={style:{"text-align":"left"}},S0={href:"https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid",target:"_blank",rel:"noopener noreferrer"},T0=t("td",{style:{"text-align":"center"}},null,-1),U0={style:{"text-align":"left"}},X0=t("code",null,"栈",-1),Y0=t("code",null,"贪心",-1),A0=t("code",null,"字符串",-1),P0={style:{"text-align":"left"}},D0=t("td",{style:{"text-align":"center"}},"2130",-1),F0={style:{"text-align":"left"}},J0={href:"https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list",target:"_blank",rel:"noopener noreferrer"},W0=t("td",{style:{"text-align":"center"}},null,-1),$0={style:{"text-align":"left"}},t3=t("code",null,"栈",-1),e3=t("code",null,"链表",-1),l3=t("code",null,"双指针",-1),o3={style:{"text-align":"left"}},n3=t("td",{style:{"text-align":"center"}},"2197",-1),s3={style:{"text-align":"left"}},d3={href:"https://leetcode.com/problems/replace-non-coprime-numbers-in-array",target:"_blank",rel:"noopener noreferrer"},_3=t("td",{style:{"text-align":"center"}},null,-1),i3={style:{"text-align":"left"}},a3=t("code",null,"栈",-1),c3=t("code",null,"数组",-1),r3=t("code",null,"数学",-1),h3=t("code",null,"1+",-1),u3={style:{"text-align":"left"}},f3=t("td",{style:{"text-align":"center"}},"2211",-1),g3={style:{"text-align":"left"}},m3={href:"https://leetcode.com/problems/count-collisions-on-a-road",target:"_blank",rel:"noopener noreferrer"},y3=t("td",{style:{"text-align":"center"}},null,-1),x3={style:{"text-align":"left"}},p3=t("code",null,"栈",-1),b3=t("code",null,"字符串",-1),k3=t("code",null,"模拟",-1),M3={style:{"text-align":"left"}},v3=t("td",{style:{"text-align":"center"}},"2216",-1),I3={style:{"text-align":"left"}},H3={href:"https://leetcode.com/problems/minimum-deletions-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},w3=t("td",{style:{"text-align":"center"}},null,-1),E3={style:{"text-align":"left"}},q3=t("code",null,"栈",-1),z3=t("code",null,"贪心",-1),O3=t("code",null,"数组",-1),j3={style:{"text-align":"left"}},N3=t("td",{style:{"text-align":"center"}},"2254",-1),L3={style:{"text-align":"left"}},B3={href:"https://leetcode.com/problems/design-video-sharing-platform",target:"_blank",rel:"noopener noreferrer"},V3=t("td",{style:{"text-align":"center"}},null,-1),C3={style:{"text-align":"left"}},Q3=t("code",null,"栈",-1),R3=t("code",null,"设计",-1),Z3=t("code",null,"哈希表",-1),G3=t("code",null,"1+",-1),K3={style:{"text-align":"left"}},S3=t("td",{style:{"text-align":"center"}},"2281",-1),T3={style:{"text-align":"left"}},U3={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},X3=t("td",{style:{"text-align":"center"}},null,-1),Y3={style:{"text-align":"left"}},A3=t("code",null,"栈",-1),P3=t("code",null,"数组",-1),D3=t("code",null,"前缀和",-1),F3=t("code",null,"1+",-1),J3={style:{"text-align":"left"}},W3=t("td",{style:{"text-align":"center"}},"2282",-1),$3={style:{"text-align":"left"}},t8={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},e8=t("td",{style:{"text-align":"center"}},null,-1),l8={style:{"text-align":"left"}},o8=t("code",null,"栈",-1),n8=t("code",null,"数组",-1),s8=t("code",null,"矩阵",-1),d8=t("code",null,"1+",-1),_8={style:{"text-align":"left"}},i8=t("td",{style:{"text-align":"center"}},"2289",-1),a8={style:{"text-align":"left"}},c8={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},r8=t("td",{style:{"text-align":"center"}},null,-1),h8={style:{"text-align":"left"}},u8=t("code",null,"栈",-1),f8=t("code",null,"数组",-1),g8=t("code",null,"链表",-1),m8=t("code",null,"1+",-1),y8={style:{"text-align":"left"}},x8=t("td",{style:{"text-align":"center"}},"2296",-1),p8={style:{"text-align":"left"}},b8={href:"https://leetcode.com/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},k8=t("td",{style:{"text-align":"center"}},null,-1),M8={style:{"text-align":"left"}},v8=t("code",null,"栈",-1),I8=t("code",null,"设计",-1),H8=t("code",null,"链表",-1),w8=t("code",null,"3+",-1),E8={style:{"text-align":"left"}},q8=t("td",{style:{"text-align":"center"}},"2297",-1),z8={style:{"text-align":"left"}},O8={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},j8=t("td",{style:{"text-align":"center"}},null,-1),N8={style:{"text-align":"left"}},L8=t("code",null,"栈",-1),B8=t("code",null,"图",-1),V8=t("code",null,"数组",-1),C8=t("code",null,"3+",-1),Q8={style:{"text-align":"left"}},R8=t("td",{style:{"text-align":"center"}},"2334",-1),Z8={style:{"text-align":"left"}},G8={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},K8=t("td",{style:{"text-align":"center"}},null,-1),S8={style:{"text-align":"left"}},T8=t("code",null,"栈",-1),U8=t("code",null,"并查集",-1),X8=t("code",null,"数组",-1),Y8=t("code",null,"1+",-1),A8={style:{"text-align":"left"}},P8=t("td",{style:{"text-align":"center"}},"2345",-1),D8={style:{"text-align":"left"}},F8={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},J8=t("td",{style:{"text-align":"center"}},null,-1),W8={style:{"text-align":"left"}},$8=t("code",null,"栈",-1),t2=t("code",null,"数组",-1),e2=t("code",null,"排序",-1),l2=t("code",null,"1+",-1),o2={style:{"text-align":"left"}},n2=t("td",{style:{"text-align":"center"}},"2355",-1),s2={style:{"text-align":"left"}},d2={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},_2=t("td",{style:{"text-align":"center"}},null,-1),i2={style:{"text-align":"left"}},a2=t("code",null,"栈",-1),c2=t("code",null,"数组",-1),r2=t("code",null,"动态规划",-1),h2=t("code",null,"1+",-1),u2={style:{"text-align":"left"}},f2=t("td",{style:{"text-align":"center"}},"2375",-1),g2={style:{"text-align":"left"}},m2={href:"https://leetcode.com/problems/construct-smallest-number-from-di-string",target:"_blank",rel:"noopener noreferrer"},y2=t("td",{style:{"text-align":"center"}},null,-1),x2={style:{"text-align":"left"}},p2=t("code",null,"栈",-1),b2=t("code",null,"贪心",-1),k2=t("code",null,"字符串",-1),M2=t("code",null,"1+",-1),v2={style:{"text-align":"left"}},I2=t("td",{style:{"text-align":"center"}},"2390",-1),H2={style:{"text-align":"left"}},w2={href:"https://leetcode.com/problems/removing-stars-from-a-string",target:"_blank",rel:"noopener noreferrer"},E2=t("td",{style:{"text-align":"center"}},null,-1),q2={style:{"text-align":"left"}},z2=t("code",null,"栈",-1),O2=t("code",null,"字符串",-1),j2=t("code",null,"模拟",-1),N2={style:{"text-align":"left"}},L2=t("td",{style:{"text-align":"center"}},"2434",-1),B2={style:{"text-align":"left"}},V2={href:"https://leetcode.com/problems/using-a-robot-to-print-the-lexicographically-smallest-string",target:"_blank",rel:"noopener noreferrer"},C2=t("td",{style:{"text-align":"center"}},null,-1),Q2={style:{"text-align":"left"}},R2=t("code",null,"栈",-1),Z2=t("code",null,"贪心",-1),G2=t("code",null,"哈希表",-1),K2=t("code",null,"1+",-1),S2={style:{"text-align":"left"}},T2=t("td",{style:{"text-align":"center"}},"2454",-1),U2={style:{"text-align":"left"}},X2={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},Y2=t("td",{style:{"text-align":"center"}},null,-1),A2={style:{"text-align":"left"}},P2=t("code",null,"栈",-1),D2=t("code",null,"数组",-1),F2=t("code",null,"二分查找",-1),J2=t("code",null,"3+",-1),W2={style:{"text-align":"left"}},$2=t("td",{style:{"text-align":"center"}},"2487",-1),t4={style:{"text-align":"left"}},e4={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},l4=t("td",{style:{"text-align":"center"}},null,-1),o4={style:{"text-align":"left"}},n4=t("code",null,"栈",-1),s4=t("code",null,"递归",-1),d4=t("code",null,"链表",-1),_4=t("code",null,"1+",-1),i4={style:{"text-align":"left"}},a4=t("td",{style:{"text-align":"center"}},"2589",-1),c4={style:{"text-align":"left"}},r4={href:"https://leetcode.com/problems/minimum-time-to-complete-all-tasks",target:"_blank",rel:"noopener noreferrer"},h4=t("td",{style:{"text-align":"center"}},null,-1),u4={style:{"text-align":"left"}},f4=t("code",null,"栈",-1),g4=t("code",null,"贪心",-1),m4=t("code",null,"数组",-1),y4=t("code",null,"2+",-1),x4={style:{"text-align":"left"}},p4=t("td",{style:{"text-align":"center"}},"2617",-1),b4={style:{"text-align":"left"}},k4={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},M4=t("td",{style:{"text-align":"center"}},null,-1),v4={style:{"text-align":"left"}},I4=t("code",null,"栈",-1),H4=t("code",null,"广度优先搜索",-1),w4=t("code",null,"并查集",-1),E4=t("code",null,"5+",-1),q4={style:{"text-align":"left"}},z4=t("td",{style:{"text-align":"center"}},"2645",-1),O4={style:{"text-align":"left"}},j4={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},N4=t("td",{style:{"text-align":"center"}},null,-1),L4={style:{"text-align":"left"}},B4=t("code",null,"栈",-1),V4=t("code",null,"贪心",-1),C4=t("code",null,"字符串",-1),Q4=t("code",null,"1+",-1),R4={style:{"text-align":"left"}},Z4=t("td",{style:{"text-align":"center"}},"2696",-1),G4={style:{"text-align":"left"}},K4={href:"https://leetcode.com/problems/minimum-string-length-after-removing-substrings",target:"_blank",rel:"noopener noreferrer"},S4={style:{"text-align":"center"}},T4={href:"/problem/2696",target:"_blank",rel:"noopener noreferrer"},U4={style:{"text-align":"left"}},X4=t("code",null,"栈",-1),Y4=t("code",null,"字符串",-1),A4=t("code",null,"模拟",-1),P4={style:{"text-align":"left"}},D4=t("td",{style:{"text-align":"center"}},"2736",-1),F4={style:{"text-align":"left"}},J4={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},W4=t("td",{style:{"text-align":"center"}},null,-1),$4={style:{"text-align":"left"}},t6=t("code",null,"栈",-1),e6=t("code",null,"树状数组",-1),l6=t("code",null,"线段树",-1),o6=t("code",null,"4+",-1),n6={style:{"text-align":"left"}},s6=t("td",{style:{"text-align":"center"}},"2751",-1),d6={style:{"text-align":"left"}},_6={href:"https://leetcode.com/problems/robot-collisions",target:"_blank",rel:"noopener noreferrer"},i6=t("td",{style:{"text-align":"center"}},null,-1),a6={style:{"text-align":"left"}},c6=t("code",null,"栈",-1),r6=t("code",null,"数组",-1),h6=t("code",null,"排序",-1),u6=t("code",null,"1+",-1),f6={style:{"text-align":"left"}},g6=t("td",{style:{"text-align":"center"}},"2764",-1),m6={style:{"text-align":"left"}},y6={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},x6=t("td",{style:{"text-align":"center"}},null,-1),p6={style:{"text-align":"left"}},b6=t("code",null,"栈",-1),k6=t("code",null,"树",-1),M6=t("code",null,"深度优先搜索",-1),v6=t("code",null,"1+",-1),I6={style:{"text-align":"left"}},H6=t("td",{style:{"text-align":"center"}},"2813",-1),w6={style:{"text-align":"left"}},E6={href:"https://leetcode.com/problems/maximum-elegance-of-a-k-length-subsequence",target:"_blank",rel:"noopener noreferrer"},q6=t("td",{style:{"text-align":"center"}},null,-1),z6={style:{"text-align":"left"}},O6=t("code",null,"栈",-1),j6=t("code",null,"贪心",-1),N6=t("code",null,"数组",-1),L6=t("code",null,"3+",-1),B6={style:{"text-align":"left"}},V6=t("td",{style:{"text-align":"center"}},"2816",-1),C6={style:{"text-align":"left"}},Q6={href:"https://leetcode.com/problems/double-a-number-represented-as-a-linked-list",target:"_blank",rel:"noopener noreferrer"},R6=t("td",{style:{"text-align":"center"}},null,-1),Z6={style:{"text-align":"left"}},G6=t("code",null,"栈",-1),K6=t("code",null,"链表",-1),S6=t("code",null,"数学",-1),T6={style:{"text-align":"left"}},U6=t("td",{style:{"text-align":"center"}},"2818",-1),X6={style:{"text-align":"left"}},Y6={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},A6=t("td",{style:{"text-align":"center"}},null,-1),P6={style:{"text-align":"left"}},D6=t("code",null,"栈",-1),F6=t("code",null,"贪心",-1),J6=t("code",null,"数组",-1),W6=t("code",null,"3+",-1),$6={style:{"text-align":"left"}},t5=t("td",{style:{"text-align":"center"}},"2832",-1),e5={style:{"text-align":"left"}},l5={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},o5=t("td",{style:{"text-align":"center"}},null,-1),n5={style:{"text-align":"left"}},s5=t("code",null,"栈",-1),d5=t("code",null,"数组",-1),_5=t("code",null,"单调栈",-1),i5={style:{"text-align":"left"}},a5=t("td",{style:{"text-align":"center"}},"2863",-1),c5={style:{"text-align":"left"}},r5={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},h5=t("td",{style:{"text-align":"center"}},null,-1),u5={style:{"text-align":"left"}},f5=t("code",null,"栈",-1),g5=t("code",null,"数组",-1),m5=t("code",null,"排序",-1),y5=t("code",null,"1+",-1),x5={style:{"text-align":"left"}},p5=t("td",{style:{"text-align":"center"}},"2865",-1),b5={style:{"text-align":"left"}},k5={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},M5=t("td",{style:{"text-align":"center"}},null,-1),v5={style:{"text-align":"left"}},I5=t("code",null,"栈",-1),H5=t("code",null,"数组",-1),w5=t("code",null,"单调栈",-1),E5={style:{"text-align":"left"}},q5=t("td",{style:{"text-align":"center"}},"2866",-1),z5={style:{"text-align":"left"}},O5={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},j5=t("td",{style:{"text-align":"center"}},null,-1),N5={style:{"text-align":"left"}},L5=t("code",null,"栈",-1),B5=t("code",null,"数组",-1),V5=t("code",null,"单调栈",-1),C5={style:{"text-align":"left"}},Q5=t("td",{style:{"text-align":"center"}},"2940",-1),R5={style:{"text-align":"left"}},Z5={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},G5=t("td",{style:{"text-align":"center"}},null,-1),K5={style:{"text-align":"left"}},S5=t("code",null,"栈",-1),T5=t("code",null,"树状数组",-1),U5=t("code",null,"线段树",-1),X5=t("code",null,"4+",-1),Y5={style:{"text-align":"left"}},A5=t("td",{style:{"text-align":"center"}},"2945",-1),P5={style:{"text-align":"left"}},D5={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},F5=t("td",{style:{"text-align":"center"}},null,-1),J5={style:{"text-align":"left"}},W5=t("code",null,"栈",-1),$5=t("code",null,"队列",-1),t7=t("code",null,"数组",-1),e7=t("code",null,"4+",-1),l7={style:{"text-align":"left"}},o7=t("td",{style:{"text-align":"center"}},"3113",-1),n7={style:{"text-align":"left"}},s7={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},d7=t("td",{style:{"text-align":"center"}},null,-1),_7={style:{"text-align":"left"}},i7=t("code",null,"栈",-1),a7=t("code",null,"数组",-1),c7=t("code",null,"二分查找",-1),r7=t("code",null,"1+",-1),h7={style:{"text-align":"left"}},u7=t("td",{style:{"text-align":"center"}},"3170",-1),f7={style:{"text-align":"left"}},g7={href:"https://leetcode.com/problems/lexicographically-minimum-string-after-removing-stars",target:"_blank",rel:"noopener noreferrer"},m7=t("td",{style:{"text-align":"center"}},null,-1),y7={style:{"text-align":"left"}},x7=t("code",null,"栈",-1),p7=t("code",null,"贪心",-1),b7=t("code",null,"哈希表",-1),k7=t("code",null,"2+",-1),M7={style:{"text-align":"left"}},v7=t("td",{style:{"text-align":"center"}},"3174",-1),I7={style:{"text-align":"left"}},H7={href:"https://leetcode.com/problems/clear-digits",target:"_blank",rel:"noopener noreferrer"},w7=t("td",{style:{"text-align":"center"}},null,-1),E7={style:{"text-align":"left"}},q7=t("code",null,"栈",-1),z7=t("code",null,"字符串",-1),O7=t("code",null,"模拟",-1),j7={style:{"text-align":"left"}},N7=t("td",{style:{"text-align":"center"}},"3205",-1),L7={style:{"text-align":"left"}},B7={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},V7=t("td",{style:{"text-align":"center"}},null,-1),C7={style:{"text-align":"left"}},Q7=t("code",null,"栈",-1),R7=t("code",null,"贪心",-1),Z7=t("code",null,"数组",-1),G7=t("code",null,"2+",-1),K7={style:{"text-align":"left"}},S7=t("td",{style:{"text-align":"center"}},"3221",-1),T7={style:{"text-align":"left"}},U7={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},X7=t("td",{style:{"text-align":"center"}},null,-1),Y7={style:{"text-align":"left"}},A7=t("code",null,"栈",-1),P7=t("code",null,"贪心",-1),D7=t("code",null,"数组",-1),F7=t("code",null,"1+",-1),J7={style:{"text-align":"left"}},W7=t("td",{style:{"text-align":"center"}},"3229",-1),$7={style:{"text-align":"left"}},t9={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},e9=t("td",{style:{"text-align":"center"}},null,-1),l9={style:{"text-align":"left"}},o9=t("code",null,"栈",-1),n9=t("code",null,"贪心",-1),s9=t("code",null,"数组",-1),d9=t("code",null,"2+",-1),_9={style:{"text-align":"left"}},i9=t("td",{style:{"text-align":"center"}},"剑指 Offer 06",-1),a9={style:{"text-align":"left"}},c9={href:"https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},r9={style:{"text-align":"center"}},h9={href:"/problem/jz_offer_06_1",target:"_blank",rel:"noopener noreferrer"},u9={style:{"text-align":"left"}},f9=t("code",null,"栈",-1),g9=t("code",null,"递归",-1),m9=t("code",null,"链表",-1),y9=t("code",null,"1+",-1),x9={style:{"text-align":"left"}},p9=t("td",{style:{"text-align":"center"}},"剑指 Offer 09",-1),b9={style:{"text-align":"left"}},k9={href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof",target:"_blank",rel:"noopener noreferrer"},M9={style:{"text-align":"center"}},v9={href:"/problem/jz_offer_09_1",target:"_blank",rel:"noopener noreferrer"},I9={style:{"text-align":"left"}},H9=t("code",null,"栈",-1),w9=t("code",null,"设计",-1),E9=t("code",null,"队列",-1),q9={style:{"text-align":"left"}},z9=t("td",{style:{"text-align":"center"}},"剑指 Offer 30",-1),O9={style:{"text-align":"left"}},j9={href:"https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof",target:"_blank",rel:"noopener noreferrer"},N9={style:{"text-align":"center"}},L9={href:"/problem/jz_offer_30_1",target:"_blank",rel:"noopener noreferrer"},B9={style:{"text-align":"left"}},V9=t("code",null,"栈",-1),C9=t("code",null,"设计",-1),Q9={style:{"text-align":"left"}},R9=t("td",{style:{"text-align":"center"}},"剑指 Offer 31",-1),Z9={style:{"text-align":"left"}},G9={href:"https://leetcode.cn/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},K9={style:{"text-align":"center"}},S9={href:"/problem/jz_offer_31_1",target:"_blank",rel:"noopener noreferrer"},T9={style:{"text-align":"left"}},U9=t("code",null,"栈",-1),X9=t("code",null,"数组",-1),Y9=t("code",null,"模拟",-1),A9={style:{"text-align":"left"}},P9=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),D9={style:{"text-align":"left"}},F9={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},J9={style:{"text-align":"center"}},W9={href:"/problem/jz_offer_33_1",target:"_blank",rel:"noopener noreferrer"},$9={style:{"text-align":"left"}},tk=t("code",null,"栈",-1),ek=t("code",null,"树",-1),lk=t("code",null,"二叉搜索树",-1),ok=t("code",null,"4+",-1),nk={style:{"text-align":"left"}},sk=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),dk={style:{"text-align":"left"}},_k={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},ik={style:{"text-align":"center"}},ak={href:"/problem/jz_offer_36_1",target:"_blank",rel:"noopener noreferrer"},ck={style:{"text-align":"left"}},rk=t("code",null,"栈",-1),hk=t("code",null,"树",-1),uk=t("code",null,"深度优先搜索",-1),fk=t("code",null,"4+",-1),gk={style:{"text-align":"left"}},mk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 25",-1),yk={style:{"text-align":"left"}},xk={href:"https://leetcode.cn/problems/lMSNwu",target:"_blank",rel:"noopener noreferrer"},pk=t("td",{style:{"text-align":"center"}},null,-1),bk={style:{"text-align":"left"}},kk=t("code",null,"栈",-1),Mk=t("code",null,"链表",-1),vk=t("code",null,"数学",-1),Ik={style:{"text-align":"left"}},Hk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 26",-1),wk={style:{"text-align":"left"}},Ek={href:"https://leetcode.cn/problems/LGjMqU",target:"_blank",rel:"noopener noreferrer"},qk=t("td",{style:{"text-align":"center"}},null,-1),zk={style:{"text-align":"left"}},Ok=t("code",null,"栈",-1),jk=t("code",null,"递归",-1),Nk=t("code",null,"链表",-1),Lk=t("code",null,"1+",-1),Bk={style:{"text-align":"left"}},Vk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 27",-1),Ck={style:{"text-align":"left"}},Qk={href:"https://leetcode.cn/problems/aMhZSa",target:"_blank",rel:"noopener noreferrer"},Rk={style:{"text-align":"center"}},Zk={href:"/problem/jz_offer_II_027",target:"_blank",rel:"noopener noreferrer"},Gk={style:{"text-align":"left"}},Kk=t("code",null,"栈",-1),Sk=t("code",null,"递归",-1),Tk=t("code",null,"链表",-1),Uk=t("code",null,"1+",-1),Xk={style:{"text-align":"left"}},Yk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 36",-1),Ak={style:{"text-align":"left"}},Pk={href:"https://leetcode.cn/problems/8Zf90G",target:"_blank",rel:"noopener noreferrer"},Dk=t("td",{style:{"text-align":"center"}},null,-1),Fk={style:{"text-align":"left"}},Jk=t("code",null,"栈",-1),Wk=t("code",null,"数组",-1),$k=t("code",null,"数学",-1),tM={style:{"text-align":"left"}},eM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 37",-1),lM={style:{"text-align":"left"}},oM={href:"https://leetcode.cn/problems/XagZNi",target:"_blank",rel:"noopener noreferrer"},nM=t("td",{style:{"text-align":"center"}},null,-1),sM={style:{"text-align":"left"}},dM=t("code",null,"栈",-1),_M=t("code",null,"数组",-1),iM=t("code",null,"模拟",-1),aM={style:{"text-align":"left"}},cM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),rM={style:{"text-align":"left"}},hM={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},uM=t("td",{style:{"text-align":"center"}},null,-1),fM={style:{"text-align":"left"}},gM=t("code",null,"栈",-1),mM=t("code",null,"数组",-1),yM=t("code",null,"单调栈",-1),xM={style:{"text-align":"left"}},pM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),bM={style:{"text-align":"left"}},kM={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},MM=t("td",{style:{"text-align":"center"}},null,-1),vM={style:{"text-align":"left"}},IM=t("code",null,"栈",-1),HM=t("code",null,"数组",-1),wM=t("code",null,"单调栈",-1),EM={style:{"text-align":"left"}},qM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),zM={style:{"text-align":"left"}},OM={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},jM=t("td",{style:{"text-align":"center"}},null,-1),NM={style:{"text-align":"left"}},LM=t("code",null,"栈",-1),BM=t("code",null,"数组",-1),VM=t("code",null,"动态规划",-1),CM=t("code",null,"2+",-1),QM={style:{"text-align":"left"}},RM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),ZM={style:{"text-align":"left"}},GM={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},KM=t("td",{style:{"text-align":"center"}},null,-1),SM={style:{"text-align":"left"}},TM=t("code",null,"栈",-1),UM=t("code",null,"树",-1),XM=t("code",null,"深度优先搜索",-1),YM=t("code",null,"2+",-1),AM={style:{"text-align":"left"}},PM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),DM={style:{"text-align":"left"}},FM={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},JM=t("td",{style:{"text-align":"center"}},null,-1),WM={style:{"text-align":"left"}},$M=t("code",null,"栈",-1),tv=t("code",null,"树",-1),ev=t("code",null,"设计",-1),lv=t("code",null,"3+",-1),ov={style:{"text-align":"left"}},nv=t("td",{style:{"text-align":"center"}},"面试题 02.06",-1),sv={style:{"text-align":"left"}},dv={href:"https://leetcode.cn/problems/palindrome-linked-list-lcci",target:"_blank",rel:"noopener noreferrer"},_v=t("td",{style:{"text-align":"center"}},null,-1),iv={style:{"text-align":"left"}},av=t("code",null,"栈",-1),cv=t("code",null,"递归",-1),rv=t("code",null,"链表",-1),hv=t("code",null,"1+",-1),uv={style:{"text-align":"left"}},fv=t("td",{style:{"text-align":"center"}},"面试题 03.01",-1),gv={style:{"text-align":"left"}},mv={href:"https://leetcode.cn/problems/three-in-one-lcci",target:"_blank",rel:"noopener noreferrer"},yv=t("td",{style:{"text-align":"center"}},null,-1),xv={style:{"text-align":"left"}},pv=t("code",null,"栈",-1),bv=t("code",null,"设计",-1),kv=t("code",null,"数组",-1),Mv={style:{"text-align":"left"}},vv=t("td",{style:{"text-align":"center"}},"面试题 03.02",-1),Iv={style:{"text-align":"left"}},Hv={href:"https://leetcode.cn/problems/min-stack-lcci",target:"_blank",rel:"noopener noreferrer"},wv=t("td",{style:{"text-align":"center"}},null,-1),Ev={style:{"text-align":"left"}},qv=t("code",null,"栈",-1),zv=t("code",null,"设计",-1),Ov={style:{"text-align":"left"}},jv=t("td",{style:{"text-align":"center"}},"面试题 03.03",-1),Nv={style:{"text-align":"left"}},Lv={href:"https://leetcode.cn/problems/stack-of-plates-lcci",target:"_blank",rel:"noopener noreferrer"},Bv=t("td",{style:{"text-align":"center"}},null,-1),Vv={style:{"text-align":"left"}},Cv=t("code",null,"栈",-1),Qv=t("code",null,"设计",-1),Rv=t("code",null,"链表",-1),Zv={style:{"text-align":"left"}},Gv=t("td",{style:{"text-align":"center"}},"面试题 03.04",-1),Kv={style:{"text-align":"left"}},Sv={href:"https://leetcode.cn/problems/implement-queue-using-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Tv=t("td",{style:{"text-align":"center"}},null,-1),Uv={style:{"text-align":"left"}},Xv=t("code",null,"栈",-1),Yv=t("code",null,"设计",-1),Av=t("code",null,"队列",-1),Pv={style:{"text-align":"left"}},Dv=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),Fv={style:{"text-align":"left"}},Jv={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Wv=t("td",{style:{"text-align":"center"}},null,-1),$v={style:{"text-align":"left"}},tI=t("code",null,"栈",-1),eI=t("code",null,"设计",-1),lI=t("code",null,"单调栈",-1),oI={style:{"text-align":"left"}},nI=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),sI={style:{"text-align":"left"}},dI={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},_I=t("td",{style:{"text-align":"center"}},null,-1),iI={style:{"text-align":"left"}},aI=t("code",null,"栈",-1),cI=t("code",null,"贪心",-1),rI=t("code",null,"数组",-1),hI=t("code",null,"3+",-1),uI={style:{"text-align":"left"}},fI=t("td",{style:{"text-align":"center"}},"面试题 16.26",-1),gI={style:{"text-align":"left"}},mI={href:"https://leetcode.cn/problems/calculator-lcci",target:"_blank",rel:"noopener noreferrer"},yI=t("td",{style:{"text-align":"center"}},null,-1),xI={style:{"text-align":"left"}},pI=t("code",null,"栈",-1),bI=t("code",null,"数学",-1),kI=t("code",null,"字符串",-1),MI={style:{"text-align":"left"}},vI=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),II={style:{"text-align":"left"}},HI={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},wI=t("td",{style:{"text-align":"center"}},null,-1),EI={style:{"text-align":"left"}},qI=t("code",null,"栈",-1),zI=t("code",null,"树",-1),OI=t("code",null,"深度优先搜索",-1),jI=t("code",null,"3+",-1),NI={style:{"text-align":"left"}},LI=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),BI={style:{"text-align":"left"}},VI={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},CI=t("td",{style:{"text-align":"center"}},null,-1),QI={style:{"text-align":"left"}},RI=t("code",null,"栈",-1),ZI=t("code",null,"数组",-1),GI=t("code",null,"双指针",-1),KI=t("code",null,"2+",-1),SI={style:{"text-align":"left"}};function TI(UI,XI){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),k,l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[U]),_:1})]),X,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[Bt]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[Ct,t("tbody",null,[t("tr",null,[Qt,t("td",Rt,[t("a",Zt,[l("有效的括号"),e(s)])]),t("td",Gt,[t("a",Kt,[l("[✓]"),e(s)])]),t("td",St,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Tt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ut]),_:1})]),t("td",Xt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Yt,t("td",At,[t("a",Pt,[l("最长有效括号"),e(s)])]),t("td",Dt,[t("a",Ft,[l("[✓]"),e(s)])]),t("td",Jt,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Wt]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[te]),_:1})]),t("td",ee,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",ne,[l("接雨水"),e(s)])]),t("td",se,[t("a",de,[l("[✓]"),e(s)])]),t("td",_e,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[ce]),_:1}),l(),re]),t("td",he,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("简化路径"),e(s)])]),t("td",me,[t("a",ye,[l("[✓]"),e(s)])]),t("td",xe,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[pe]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[be]),_:1})]),t("td",ke,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Me,t("td",ve,[t("a",Ie,[l("柱状图中最大的矩形"),e(s)])]),t("td",He,[t("a",we,[l("[✓]"),e(s)])]),t("td",Ee,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[qe]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ze]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[Oe]),_:1})]),t("td",je,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ne,t("td",Le,[t("a",Be,[l("最大矩形"),e(s)])]),t("td",Ve,[t("a",Ce,[l("[✓]"),e(s)])]),t("td",Qe,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Re]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ze]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ge]),_:1}),l(),Ke]),t("td",Se,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Te,t("td",Ue,[t("a",Xe,[l("二叉树的中序遍历"),e(s)])]),t("td",Ye,[t("a",Ae,[l("[✓]"),e(s)])]),t("td",Pe,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[De]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Fe]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Je]),_:1}),l(),We]),t("td",$e,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[tl,t("td",el,[t("a",ll,[l("二叉树展开为链表"),e(s)])]),t("td",ol,[t("a",nl,[l("[✓]"),e(s)])]),t("td",sl,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[dl]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_l]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[il]),_:1}),l(),al]),t("td",cl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rl,t("td",hl,[t("a",ul,[l("重排链表"),e(s)])]),t("td",fl,[t("a",gl,[l("[✓]"),e(s)])]),t("td",ml,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[xl]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[pl]),_:1}),l(),bl]),t("td",kl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ml,t("td",vl,[t("a",Il,[l("二叉树的前序遍历"),e(s)])]),t("td",Hl,[t("a",wl,[l("[✓]"),e(s)])]),t("td",El,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[zl]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ol]),_:1}),l(),jl]),t("td",Nl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ll,t("td",Bl,[t("a",Vl,[l("二叉树的后序遍历"),e(s)])]),t("td",Cl,[t("a",Ql,[l("[✓]"),e(s)])]),t("td",Rl,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Zl]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Gl]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Kl]),_:1}),l(),Sl]),t("td",Tl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ul,t("td",Xl,[t("a",Yl,[l("逆波兰表达式求值"),e(s)])]),t("td",Al,[t("a",Pl,[l("[✓]"),e(s)])]),t("td",Dl,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Fl]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Wl]),_:1})]),t("td",$l,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[to,t("td",eo,[t("a",lo,[l("最小栈"),e(s)])]),t("td",oo,[t("a",no,[l("[✓]"),e(s)])]),t("td",so,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[_o]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[io]),_:1})]),t("td",ao,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[co,t("td",ro,[t("a",ho,[l("二叉搜索树迭代器"),e(s)])]),t("td",uo,[t("a",fo,[l("[✓]"),e(s)])]),t("td",go,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[mo]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[yo]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[xo]),_:1}),l(),po]),t("td",bo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ko,t("td",Mo,[t("a",vo,[l("基本计算器"),e(s)])]),t("td",Io,[t("a",Ho,[l("[✓]"),e(s)])]),t("td",wo,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Eo]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[qo]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[zo]),_:1}),l(),Oo]),t("td",jo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[No,t("td",Lo,[t("a",Bo,[l("用队列实现栈"),e(s)])]),t("td",Vo,[t("a",Co,[l("[✓]"),e(s)])]),t("td",Qo,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ro]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Zo]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Go]),_:1})]),t("td",Ko,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[So,t("td",To,[t("a",Uo,[l("基本计算器 II"),e(s)])]),t("td",Xo,[t("a",Yo,[l("[✓]"),e(s)])]),t("td",Ao,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Po]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Fo]),_:1})]),t("td",Jo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wo,t("td",$o,[t("a",tn,[l("用栈实现队列"),e(s)])]),t("td",en,[t("a",ln,[l("[✓]"),e(s)])]),t("td",on,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[nn]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[dn]),_:1})]),t("td",_n,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[an,t("td",cn,[t("a",rn,[l("回文链表"),e(s)])]),t("td",hn,[t("a",un,[l("[✓]"),e(s)])]),t("td",fn,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[gn]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[yn]),_:1}),l(),xn]),t("td",pn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bn,t("td",kn,[t("a",Mn,[l("验证二叉搜索树的前序遍历序列"),e(s)])]),vn,t("td",In,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Hn]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[En]),_:1}),l(),qn]),t("td",zn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[On,t("td",jn,[t("a",Nn,[l("最接近的二叉搜索树值 II"),e(s)])]),Ln,t("td",Bn,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Vn]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Cn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Qn]),_:1}),l(),Rn]),t("td",Zn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gn,t("td",Kn,[t("a",Sn,[l("去除重复字母"),e(s)])]),t("td",Tn,[t("a",Un,[l("[✓]"),e(s)])]),t("td",Xn,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Yn]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[An]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Pn]),_:1}),l(),Dn]),t("td",Fn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jn,t("td",Wn,[t("a",$n,[l("拼接最大数"),e(s)])]),ts,t("td",es,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ns]),_:1}),l(),ss]),t("td",ds,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_s,t("td",is,[t("a",as,[l("验证二叉树的前序序列化"),e(s)])]),cs,t("td",rs,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[hs]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[fs]),_:1}),l(),gs]),t("td",ms,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",ps,[l("扁平化嵌套列表迭代器"),e(s)])]),bs,t("td",ks,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ms]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[vs]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Is]),_:1}),l(),Hs]),t("td",ws,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Es,t("td",qs,[t("a",zs,[l("嵌套列表加权和 II"),e(s)])]),Os,t("td",js,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ns]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ls]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Bs]),_:1})]),t("td",Vs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cs,t("td",Qs,[t("a",Rs,[l("迷你语法分析器"),e(s)])]),Zs,t("td",Gs,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ks]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ss]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ts]),_:1})]),t("td",Us,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xs,t("td",Ys,[t("a",As,[l("文件的最长绝对路径"),e(s)])]),Ps,t("td",Ds,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Fs]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Js]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ws]),_:1})]),t("td",$s,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",ld,[l("字符串解码"),e(s)])]),t("td",od,[t("a",nd,[l("[✓]"),e(s)])]),t("td",sd,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[dd]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[_d]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[id]),_:1})]),t("td",ad,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cd,t("td",rd,[t("a",hd,[l("移掉 K 位数字"),e(s)])]),ud,t("td",fd,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[md]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[yd]),_:1}),l(),xd]),t("td",pd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bd,t("td",kd,[t("a",Md,[l("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",vd,[t("a",Id,[l("[✓]"),e(s)])]),t("td",Hd,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[wd]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ed]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[qd]),_:1}),l(),zd]),t("td",Od,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jd,t("td",Nd,[t("a",Ld,[l("三元表达式解析器"),e(s)])]),Bd,t("td",Vd,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Qd]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Rd]),_:1})]),t("td",Zd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gd,t("td",Kd,[t("a",Sd,[l("两数相加 II"),e(s)])]),t("td",Td,[t("a",Ud,[l("[✓]"),e(s)])]),t("td",Xd,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Yd]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Ad]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Pd]),_:1})]),t("td",Dd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fd,t("td",Jd,[t("a",Wd,[l("132 模式"),e(s)])]),$d,t("td",t_,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[o_]),_:1}),l(),n_]),t("td",s_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d_,t("td",__,[t("a",i_,[l("寻找排列"),e(s)])]),a_,t("td",c_,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[r_]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[u_]),_:1}),l(),f_]),t("td",g_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m_,t("td",y_,[t("a",x_,[l("祖玛游戏"),e(s)])]),p_,t("td",b_,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[M_]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[v_]),_:1}),l(),I_]),t("td",H_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[w_,t("td",E_,[t("a",q_,[l("下一个更大元素 I"),e(s)])]),t("td",z_,[t("a",O_,[l("[✓]"),e(s)])]),t("td",j_,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[N_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[L_]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[B_]),_:1}),l(),V_]),t("td",C_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Q_,t("td",R_,[t("a",Z_,[l("下一个更大元素 II"),e(s)])]),t("td",G_,[t("a",K_,[l("[✓]"),e(s)])]),t("td",S_,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[T_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[U_]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[X_]),_:1})]),t("td",Y_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A_,t("td",P_,[t("a",D_,[l("从字符串生成二叉树"),e(s)])]),F_,t("td",J_,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[W_]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ti]),_:1}),l(),ei]),t("td",li,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oi,t("td",ni,[t("a",si,[l("最短无序连续子数组"),e(s)])]),di,t("td",_i,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ii]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[ai]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ci]),_:1}),l(),ri]),t("td",hi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ui,t("td",fi,[t("a",gi,[l("N 叉树的前序遍历"),e(s)])]),t("td",mi,[t("a",yi,[l("[✓]"),e(s)])]),t("td",xi,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[pi]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[bi]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ki]),_:1})]),t("td",Mi,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vi,t("td",Ii,[t("a",Hi,[l("N 叉树的后序遍历"),e(s)])]),t("td",wi,[t("a",Ei,[l("[✓]"),e(s)])]),t("td",qi,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[zi]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ji]),_:1})]),t("td",Ni,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Li,t("td",Bi,[t("a",Vi,[l("标签验证器"),e(s)])]),Ci,t("td",Qi,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ri]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Zi]),_:1})]),t("td",Gi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ki,t("td",Si,[t("a",Ti,[l("函数的独占时间"),e(s)])]),Ui,t("td",Xi,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Yi]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ai]),_:1})]),t("td",Pi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Di,t("td",Fi,[t("a",Ji,[l("最大二叉树"),e(s)])]),t("td",Wi,[t("a",$i,[l("[✓]"),e(s)])]),t("td",ta,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ea]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[la]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oa]),_:1}),l(),na]),t("td",sa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[da,t("td",_a,[t("a",ia,[l("有效的括号字符串"),e(s)])]),t("td",aa,[t("a",ca,[l("[✓]"),e(s)])]),t("td",ra,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ha]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[ua]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[fa]),_:1}),l(),ga]),t("td",ma,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ya,t("td",xa,[t("a",pa,[l("棒球比赛"),e(s)])]),t("td",ba,[t("a",ka,[l("[✓]"),e(s)])]),t("td",Ma,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[va]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ia]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Ha]),_:1})]),t("td",wa,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ea,t("td",qa,[t("a",za,[l("最大栈"),e(s)])]),Oa,t("td",ja,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Na]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[La]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Ba]),_:1}),l(),Va]),t("td",Ca,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qa,t("td",Ra,[t("a",Za,[l("原子的数量"),e(s)])]),Ga,t("td",Ka,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Sa]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ta]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ua]),_:1}),l(),Xa]),t("td",Ya,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Aa,t("td",Pa,[t("a",Da,[l("小行星碰撞"),e(s)])]),Fa,t("td",Ja,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Wa]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$a]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[tc]),_:1})]),t("td",ec,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lc,t("td",oc,[t("a",nc,[l("Lisp 语法解析"),e(s)])]),sc,t("td",dc,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[_c]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[ic]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[ac]),_:1}),l(),cc]),t("td",rc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hc,t("td",uc,[t("a",fc,[l("每日温度"),e(s)])]),t("td",gc,[t("a",mc,[l("[✓]"),e(s)])]),t("td",yc,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[xc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pc]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[bc]),_:1})]),t("td",kc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mc,t("td",vc,[t("a",Ic,[l("最多能完成排序的块 II"),e(s)])]),Hc,t("td",wc,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[qc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zc]),_:1}),l(),Oc]),t("td",jc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nc,t("td",Lc,[t("a",Bc,[l("最多能完成排序的块"),e(s)])]),Vc,t("td",Cc,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Qc]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Rc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zc]),_:1}),l(),Gc]),t("td",Kc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sc,t("td",Tc,[t("a",Uc,[l("基本计算器 IV"),e(s)])]),Xc,t("td",Yc,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ac]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Pc]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Dc]),_:1}),l(),Fc]),t("td",Jc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wc,t("td",$c,[t("a",tr,[l("基本计算器 III"),e(s)])]),t("td",er,[t("a",lr,[l("[✓]"),e(s)])]),t("td",or,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[nr]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[sr]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[dr]),_:1}),l(),_r]),t("td",ir,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ar,t("td",cr,[t("a",rr,[l("比较含退格的字符串"),e(s)])]),t("td",hr,[t("a",ur,[l("[✓]"),e(s)])]),t("td",fr,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[gr]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[mr]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[yr]),_:1}),l(),xr]),t("td",pr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[br,t("td",kr,[t("a",Mr,[l("车队"),e(s)])]),vr,t("td",Ir,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Hr]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wr]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Er]),_:1}),l(),qr]),t("td",zr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Or,t("td",jr,[t("a",Nr,[l("括号的分数"),e(s)])]),Lr,t("td",Br,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Vr]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Cr]),_:1})]),t("td",Qr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rr,t("td",Zr,[t("a",Gr,[l("索引处的解码字符串"),e(s)])]),t("td",Kr,[t("a",Sr,[l("[✓]"),e(s)])]),t("td",Tr,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ur]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Xr]),_:1})]),t("td",Yr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ar,t("td",Pr,[t("a",Dr,[l("最大频率栈"),e(s)])]),Fr,t("td",Jr,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Wr]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[$r]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[t1]),_:1}),l(),e1]),t("td",l1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o1,t("td",n1,[t("a",s1,[l("递增顺序搜索树"),e(s)])]),d1,t("td",_1,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[i1]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[a1]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[c1]),_:1}),l(),r1]),t("td",h1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[u1,t("td",f1,[t("a",g1,[l("股票价格跨度"),e(s)])]),m1,t("td",y1,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[x1]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[p1]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[b1]),_:1}),l(),k1]),t("td",M1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v1,t("td",I1,[t("a",H1,[l("子数组的最小值之和"),e(s)])]),w1,t("td",E1,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[q1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[z1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[O1]),_:1}),l(),j1]),t("td",N1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L1,t("td",B1,[t("a",V1,[l("使括号有效的最少添加"),e(s)])]),t("td",C1,[t("a",Q1,[l("[✓]"),e(s)])]),t("td",R1,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Z1]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[G1]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[K1]),_:1})]),t("td",S1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T1,t("td",U1,[t("a",X1,[l("戳印序列"),e(s)])]),Y1,t("td",A1,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[P1]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[D1]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[F1]),_:1}),l(),J1]),t("td",W1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$1,t("td",th,[t("a",eh,[l("验证栈序列"),e(s)])]),t("td",lh,[t("a",oh,[l("[✓]"),e(s)])]),t("td",nh,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[sh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[dh]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[_h]),_:1})]),t("td",ih,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ah,t("td",ch,[t("a",rh,[l("最大宽度坡"),e(s)])]),t("td",hh,[t("a",uh,[l("[✓]"),e(s)])]),t("td",fh,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[gh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mh]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[yh]),_:1})]),t("td",xh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ph,t("td",bh,[t("a",kh,[l("奇偶跳"),e(s)])]),Mh,t("td",vh,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ih]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Hh]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wh]),_:1}),l(),Eh]),t("td",qh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zh,t("td",Oh,[t("a",jh,[l("检查替换后的词是否有效"),e(s)])]),Nh,t("td",Lh,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Bh]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Vh]),_:1})]),t("td",Ch,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qh,t("td",Rh,[t("a",Zh,[l("笨阶乘"),e(s)])]),Gh,t("td",Kh,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Sh]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Th]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Uh]),_:1})]),t("td",Xh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yh,t("td",Ah,[t("a",Ph,[l("前序遍历构造二叉搜索树"),e(s)])]),t("td",Dh,[t("a",Fh,[l("[✓]"),e(s)])]),t("td",Jh,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Wh]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$h]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[tu]),_:1}),l(),eu]),t("td",lu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ou,t("td",nu,[t("a",su,[l("链表中的下一个更大节点"),e(s)])]),du,t("td",_u,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[iu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[au]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[cu]),_:1}),l(),ru]),t("td",hu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uu,t("td",fu,[t("a",gu,[l("删除最外层的括号"),e(s)])]),t("td",mu,[t("a",yu,[l("[✓]"),e(s)])]),t("td",xu,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[pu]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[bu]),_:1})]),t("td",ku,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mu,t("td",vu,[t("a",Iu,[l("删除字符串中的所有相邻重复项"),e(s)])]),t("td",Hu,[t("a",wu,[l("[✓]"),e(s)])]),t("td",Eu,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[qu]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[zu]),_:1})]),t("td",Ou,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ju,t("td",Nu,[t("a",Lu,[l("有效子数组的数目"),e(s)])]),Bu,t("td",Vu,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Cu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qu]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[Ru]),_:1})]),t("td",Zu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gu,t("td",Ku,[t("a",Su,[l("不同字符的最小子序列"),e(s)])]),t("td",Tu,[t("a",Uu,[l("[✓]"),e(s)])]),t("td",Xu,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Yu]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Au]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Pu]),_:1}),l(),Du]),t("td",Fu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ju,t("td",Wu,[t("a",$u,[l("花括号展开 II"),e(s)])]),tf,t("td",ef,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[lf]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[of]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[nf]),_:1}),l(),sf]),t("td",df,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_f,t("td",af,[t("a",cf,[l("解析布尔表达式"),e(s)])]),rf,t("td",hf,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[uf]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[ff]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[gf]),_:1})]),t("td",mf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yf,t("td",xf,[t("a",pf,[l("有效括号的嵌套深度"),e(s)])]),bf,t("td",kf,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Mf]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[vf]),_:1})]),t("td",If,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hf,t("td",wf,[t("a",Ef,[l("表现良好的最长时间段"),e(s)])]),qf,t("td",zf,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Of]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jf]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Nf]),_:1}),l(),Lf]),t("td",Bf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vf,t("td",Cf,[t("a",Qf,[l("叶值的最小代价生成树"),e(s)])]),Rf,t("td",Zf,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Gf]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Kf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sf]),_:1}),l(),Tf]),t("td",Uf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xf,t("td",Yf,[t("a",Af,[l("餐盘栈"),e(s)])]),Pf,t("td",Df,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ff]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Jf]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Wf]),_:1}),l(),$f]),t("td",tg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eg,t("td",lg,[t("a",og,[l("反转每对括号间的子串"),e(s)])]),t("td",ng,[t("a",sg,[l("[✓]"),e(s)])]),t("td",dg,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[_g]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ig]),_:1})]),t("td",ag,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cg,t("td",rg,[t("a",hg,[l("删除字符串中的所有相邻重复项 II"),e(s)])]),ug,t("td",fg,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[gg]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[mg]),_:1})]),t("td",yg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xg,t("td",pg,[t("a",bg,[l("查找两棵二叉搜索树之和"),e(s)])]),kg,t("td",Mg,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[vg]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ig]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Hg]),_:1}),l(),wg]),t("td",Eg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qg,t("td",zg,[t("a",Og,[l("移除无效的括号"),e(s)])]),jg,t("td",Ng,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Lg]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Bg]),_:1})]),t("td",Vg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cg,t("td",Qg,[t("a",Rg,[l("逆序打印不可变链表"),e(s)])]),Zg,t("td",Gg,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Kg]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Sg]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Tg]),_:1}),l(),Ug]),t("td",Xg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yg,t("td",Ag,[t("a",Pg,[l("设计一个支持增量操作的栈"),e(s)])]),t("td",Dg,[t("a",Fg,[l("[✓]"),e(s)])]),t("td",Jg,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Wg]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[$g]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[tm]),_:1})]),t("td",em,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lm,t("td",om,[t("a",nm,[l("用栈操作构建数组"),e(s)])]),t("td",sm,[t("a",dm,[l("[✓]"),e(s)])]),t("td",_m,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[im]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[am]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[cm]),_:1})]),t("td",rm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hm,t("td",um,[t("a",fm,[l("设计浏览器历史记录"),e(s)])]),t("td",gm,[t("a",mm,[l("[✓]"),e(s)])]),t("td",ym,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[xm]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[pm]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[bm]),_:1}),l(),km]),t("td",Mm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vm,t("td",Im,[t("a",Hm,[l("商品折扣后的最终价格"),e(s)])]),t("td",wm,[t("a",Em,[l("[✓]"),e(s)])]),t("td",qm,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[zm]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Om]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[jm]),_:1})]),t("td",Nm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Lm,t("td",Bm,[t("a",Vm,[l("统计全 1 子矩形"),e(s)])]),Cm,t("td",Qm,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Rm]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zm]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Gm]),_:1}),l(),Km]),t("td",Sm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tm,t("td",Um,[t("a",Xm,[l("形成目标数组的子数组最少增加次数"),e(s)])]),Ym,t("td",Am,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Pm]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Dm]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fm]),_:1}),l(),Jm]),t("td",Wm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$m,t("td",ty,[t("a",ey,[l("平衡括号字符串的最少插入次数"),e(s)])]),ly,t("td",oy,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ny]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[sy]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[dy]),_:1})]),t("td",_y,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iy,t("td",ay,[t("a",cy,[l("整理字符串"),e(s)])]),ry,t("td",hy,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[uy]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[fy]),_:1})]),t("td",gy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[my,t("td",yy,[t("a",xy,[l("删除最短的子数组使剩余数组有序"),e(s)])]),py,t("td",by,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ky]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[My]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[vy]),_:1}),l(),Iy]),t("td",Hy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wy,t("td",Ey,[t("a",qy,[l("二叉搜索树迭代器 II"),e(s)])]),zy,t("td",Oy,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[jy]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ny]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ly]),_:1}),l(),By]),t("td",Vy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cy,t("td",Qy,[t("a",Ry,[l("根据中缀表达式构造二叉表达式树"),e(s)])]),Zy,t("td",Gy,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ky]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Sy]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ty]),_:1}),l(),Uy]),t("td",Xy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yy,t("td",Ay,[t("a",Py,[l("文件夹操作日志搜集器"),e(s)])]),Dy,t("td",Fy,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Jy]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Wy]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[$y]),_:1})]),t("td",tx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ex,t("td",lx,[t("a",ox,[l("括号的最大嵌套深度"),e(s)])]),nx,t("td",sx,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[dx]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[_x]),_:1})]),t("td",ix,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ax,t("td",cx,[t("a",rx,[l("设计带解析函数的表达式树"),e(s)])]),hx,t("td",ux,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[fx]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[gx]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[mx]),_:1}),l(),yx]),t("td",xx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[px,t("td",bx,[t("a",kx,[l("使字符串平衡的最少删除次数"),e(s)])]),Mx,t("td",vx,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ix]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Hx]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[wx]),_:1})]),t("td",Ex,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qx,t("td",zx,[t("a",Ox,[l("找出最具竞争力的子序列"),e(s)])]),jx,t("td",Nx,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Lx]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Bx]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Vx]),_:1}),l(),Cx]),t("td",Qx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rx,t("td",Zx,[t("a",Gx,[l("无法吃午餐的学生数量"),e(s)])]),Kx,t("td",Sx,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Tx]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Ux]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xx]),_:1}),l(),Yx]),t("td",Ax,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Px,t("td",Dx,[t("a",Fx,[l("删除子字符串的最大得分"),e(s)])]),Jx,t("td",Wx,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[$x]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[tp]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ep]),_:1})]),t("td",lp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[op,t("td",np,[t("a",sp,[l("设计最近使用（MRU）队列"),e(s)])]),dp,t("td",_p,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ip]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ap]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[cp]),_:1}),l(),rp]),t("td",hp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[up,t("td",fp,[t("a",gp,[l("能看到海景的建筑物"),e(s)])]),mp,t("td",yp,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[xp]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pp]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[bp]),_:1})]),t("td",kp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mp,t("td",vp,[t("a",Ip,[l("车队 II"),e(s)])]),Hp,t("td",wp,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ep]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qp]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[zp]),_:1}),l(),Op]),t("td",jp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Np,t("td",Lp,[t("a",Bp,[l("好子数组的最大分数"),e(s)])]),Vp,t("td",Cp,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Qp]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Rp]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Zp]),_:1}),l(),Gp]),t("td",Kp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sp,t("td",Tp,[t("a",Up,[l("子数组最小乘积的最大值"),e(s)])]),Xp,t("td",Yp,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ap]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pp]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[Dp]),_:1}),l(),Fp]),t("td",Jp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wp,t("td",$p,[t("a",tb,[l("反转表达式值的最少操作次数"),e(s)])]),eb,t("td",lb,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ob]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[nb]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[sb]),_:1}),l(),db]),t("td",_b,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ib,t("td",ab,[t("a",cb,[l("删除一个字符串中所有出现的给定子字符串"),e(s)])]),rb,t("td",hb,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[ub]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[fb]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[gb]),_:1})]),t("td",mb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yb,t("td",xb,[t("a",pb,[l("队列中可以看到的人数"),e(s)])]),bb,t("td",kb,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Mb]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vb]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[Ib]),_:1})]),t("td",Hb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wb,t("td",Eb,[t("a",qb,[l("所有子数组最小值中的最大值"),e(s)])]),zb,t("td",Ob,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[jb]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Nb]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[Lb]),_:1})]),t("td",Bb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vb,t("td",Cb,[t("a",Qb,[l("使字符串平衡的最小交换次数"),e(s)])]),t("td",Rb,[t("a",Zb,[l("[✓]"),e(s)])]),t("td",Gb,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Kb]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Sb]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Tb]),_:1}),l(),Ub]),t("td",Xb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yb,t("td",Ab,[t("a",Pb,[l("游戏中弱角色的数量"),e(s)])]),Db,t("td",Fb,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Jb]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Wb]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$b]),_:1}),l(),t0]),t("td",e0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l0,t("td",o0,[t("a",n0,[l("反转单词前缀"),e(s)])]),s0,t("td",d0,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[_0]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[i0]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[a0]),_:1})]),t("td",c0,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[r0,t("td",h0,[t("a",u0,[l("解出数学表达式的学生分数"),e(s)])]),f0,t("td",g0,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[m0]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[y0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[x0]),_:1}),l(),p0]),t("td",b0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[k0,t("td",M0,[t("a",v0,[l("含特定字母的最小子序列"),e(s)])]),I0,t("td",H0,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[w0]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[E0]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[q0]),_:1}),l(),z0]),t("td",O0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j0,t("td",N0,[t("a",L0,[l("子数组范围和"),e(s)])]),B0,t("td",V0,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[C0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Q0]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[R0]),_:1})]),t("td",Z0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G0,t("td",K0,[t("a",S0,[l("判断一个括号字符串是否有效"),e(s)])]),T0,t("td",U0,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[X0]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Y0]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[A0]),_:1})]),t("td",P0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D0,t("td",F0,[t("a",J0,[l("链表最大孪生和"),e(s)])]),W0,t("td",$0,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[t3]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[e3]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[l3]),_:1})]),t("td",o3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n3,t("td",s3,[t("a",d3,[l("替换数组中的非互质数"),e(s)])]),_3,t("td",i3,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[a3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[c3]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[r3]),_:1}),l(),h3]),t("td",u3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f3,t("td",g3,[t("a",m3,[l("统计道路上的碰撞次数"),e(s)])]),y3,t("td",x3,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[p3]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[b3]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[k3]),_:1})]),t("td",M3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v3,t("td",I3,[t("a",H3,[l("美化数组的最少删除数"),e(s)])]),w3,t("td",E3,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[q3]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[z3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[O3]),_:1})]),t("td",j3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N3,t("td",L3,[t("a",B3,[l("设计视频共享平台"),e(s)])]),V3,t("td",C3,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Q3]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[R3]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Z3]),_:1}),l(),G3]),t("td",K3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[S3,t("td",T3,[t("a",U3,[l("巫师的总力量和"),e(s)])]),X3,t("td",Y3,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[A3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[P3]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[D3]),_:1}),l(),F3]),t("td",J3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W3,t("td",$3,[t("a",t8,[l("在一个网格中可以看到的人数"),e(s)])]),e8,t("td",l8,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[o8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[n8]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[s8]),_:1}),l(),d8]),t("td",_8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i8,t("td",a8,[t("a",c8,[l("使数组按非递减顺序排列"),e(s)])]),r8,t("td",h8,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[u8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[f8]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[g8]),_:1}),l(),m8]),t("td",y8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x8,t("td",p8,[t("a",b8,[l("设计一个文本编辑器"),e(s)])]),k8,t("td",M8,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[v8]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[I8]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[H8]),_:1}),l(),w8]),t("td",E8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[q8,t("td",z8,[t("a",O8,[l("跳跃游戏 VIII"),e(s)])]),j8,t("td",N8,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[L8]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[B8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[V8]),_:1}),l(),C8]),t("td",Q8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R8,t("td",Z8,[t("a",G8,[l("元素值大于变化阈值的子数组"),e(s)])]),K8,t("td",S8,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[T8]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[U8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[X8]),_:1}),l(),Y8]),t("td",A8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[P8,t("td",D8,[t("a",F8,[l("寻找可见山的数量"),e(s)])]),J8,t("td",W8,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[$8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[t2]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[e2]),_:1}),l(),l2]),t("td",o2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n2,t("td",s2,[t("a",d2,[l("你能拿走的最大图书数量"),e(s)])]),_2,t("td",i2,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[a2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[c2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[r2]),_:1}),l(),h2]),t("td",u2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f2,t("td",g2,[t("a",m2,[l("根据模式串构造最小数字"),e(s)])]),y2,t("td",x2,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[p2]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[b2]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[k2]),_:1}),l(),M2]),t("td",v2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I2,t("td",H2,[t("a",w2,[l("从字符串中移除星号"),e(s)])]),E2,t("td",q2,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[z2]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[O2]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[j2]),_:1})]),t("td",N2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L2,t("td",B2,[t("a",V2,[l("使用机器人打印字典序最小的字符串"),e(s)])]),C2,t("td",Q2,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[R2]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Z2]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[G2]),_:1}),l(),K2]),t("td",S2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T2,t("td",U2,[t("a",X2,[l("下一个更大元素 IV"),e(s)])]),Y2,t("td",A2,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[P2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[D2]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[F2]),_:1}),l(),J2]),t("td",W2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$2,t("td",t4,[t("a",e4,[l("从链表中移除节点"),e(s)])]),l4,t("td",o4,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[n4]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[s4]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[d4]),_:1}),l(),_4]),t("td",i4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a4,t("td",c4,[t("a",r4,[l("完成所有任务的最少时间"),e(s)])]),h4,t("td",u4,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[f4]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[g4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[m4]),_:1}),l(),y4]),t("td",x4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p4,t("td",b4,[t("a",k4,[l("网格图中最少访问的格子数"),e(s)])]),M4,t("td",v4,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[I4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[H4]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[w4]),_:1}),l(),E4]),t("td",q4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z4,t("td",O4,[t("a",j4,[l("构造有效字符串的最少插入数"),e(s)])]),N4,t("td",L4,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[B4]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[V4]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[C4]),_:1}),l(),Q4]),t("td",R4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z4,t("td",G4,[t("a",K4,[l("删除子串后的字符串最小长度"),e(s)])]),t("td",S4,[t("a",T4,[l("[✓]"),e(s)])]),t("td",U4,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[X4]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Y4]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[A4]),_:1})]),t("td",P4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[D4,t("td",F4,[t("a",J4,[l("最大和查询"),e(s)])]),W4,t("td",$4,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[t6]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[e6]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[l6]),_:1}),l(),o6]),t("td",n6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[s6,t("td",d6,[t("a",_6,[l("机器人碰撞"),e(s)])]),i6,t("td",a6,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[c6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[r6]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[h6]),_:1}),l(),u6]),t("td",f6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[g6,t("td",m6,[t("a",y6,[l("数组是否表示某二叉树的前序遍历"),e(s)])]),x6,t("td",p6,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[b6]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[k6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[M6]),_:1}),l(),v6]),t("td",I6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H6,t("td",w6,[t("a",E6,[l("子序列最大优雅度"),e(s)])]),q6,t("td",z6,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[O6]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[j6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[N6]),_:1}),l(),L6]),t("td",B6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V6,t("td",C6,[t("a",Q6,[l("翻倍以链表形式表示的数字"),e(s)])]),R6,t("td",Z6,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[G6]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[K6]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[S6]),_:1})]),t("td",T6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U6,t("td",X6,[t("a",Y6,[l("操作使得分最大"),e(s)])]),A6,t("td",P6,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[D6]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[F6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[J6]),_:1}),l(),W6]),t("td",$6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t5,t("td",e5,[t("a",l5,[l("每个元素为最大值的最大范围"),e(s)])]),o5,t("td",n5,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[s5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[d5]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[_5]),_:1})]),t("td",i5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a5,t("td",c5,[t("a",r5,[l("最长半递减子数组的长度"),e(s)])]),h5,t("td",u5,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[f5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[g5]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[m5]),_:1}),l(),y5]),t("td",x5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p5,t("td",b5,[t("a",k5,[l("美丽塔 I"),e(s)])]),M5,t("td",v5,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[I5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[H5]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[w5]),_:1})]),t("td",E5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q5,t("td",z5,[t("a",O5,[l("美丽塔 II"),e(s)])]),j5,t("td",N5,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[L5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[B5]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[V5]),_:1})]),t("td",C5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q5,t("td",R5,[t("a",Z5,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(s)])]),G5,t("td",K5,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[S5]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[T5]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[U5]),_:1}),l(),X5]),t("td",Y5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A5,t("td",P5,[t("a",D5,[l("找到最大非递减数组的长度"),e(s)])]),F5,t("td",J5,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[W5]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[$5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[t7]),_:1}),l(),e7]),t("td",l7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o7,t("td",n7,[t("a",s7,[l("边界元素是最大值的子数组数目"),e(s)])]),d7,t("td",_7,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[i7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[a7]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[c7]),_:1}),l(),r7]),t("td",h7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[u7,t("td",f7,[t("a",g7,[l("删除星号以后字典序最小的字符串"),e(s)])]),m7,t("td",y7,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[x7]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[p7]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[b7]),_:1}),l(),k7]),t("td",M7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v7,t("td",I7,[t("a",H7,[l("清除数字"),e(s)])]),w7,t("td",E7,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[q7]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[z7]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[O7]),_:1})]),t("td",j7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[N7,t("td",L7,[t("a",B7,[l("最大数组跳跃得分 I"),e(s)])]),V7,t("td",C7,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Q7]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[R7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Z7]),_:1}),l(),G7]),t("td",K7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S7,t("td",T7,[t("a",U7,[l("最大数组跳跃得分 II"),e(s)])]),X7,t("td",Y7,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[A7]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[P7]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[D7]),_:1}),l(),F7]),t("td",J7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W7,t("td",$7,[t("a",t9,[l("使数组等于目标数组所需的最少操作次数"),e(s)])]),e9,t("td",l9,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[o9]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[n9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[s9]),_:1}),l(),d9]),t("td",_9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i9,t("td",a9,[t("a",c9,[l("从尾到头打印链表"),e(s)])]),t("td",r9,[t("a",h9,[l("[✓]"),e(s)])]),t("td",u9,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[f9]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[g9]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[m9]),_:1}),l(),y9]),t("td",x9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[p9,t("td",b9,[t("a",k9,[l("用两个栈实现队列"),e(s)])]),t("td",M9,[t("a",v9,[l("[✓]"),e(s)])]),t("td",I9,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[H9]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[w9]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[E9]),_:1})]),t("td",q9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[z9,t("td",O9,[t("a",j9,[l("包含min函数的栈"),e(s)])]),t("td",N9,[t("a",L9,[l("[✓]"),e(s)])]),t("td",B9,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[V9]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[C9]),_:1})]),t("td",Q9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[R9,t("td",Z9,[t("a",G9,[l("栈的压入、弹出序列"),e(s)])]),t("td",K9,[t("a",S9,[l("[✓]"),e(s)])]),t("td",T9,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[U9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[X9]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Y9]),_:1})]),t("td",A9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P9,t("td",D9,[t("a",F9,[l("二叉搜索树的后序遍历序列"),e(s)])]),t("td",J9,[t("a",W9,[l("[✓]"),e(s)])]),t("td",$9,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[tk]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ek]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[lk]),_:1}),l(),ok]),t("td",nk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sk,t("td",dk,[t("a",_k,[l("二叉搜索树与双向链表"),e(s)])]),t("td",ik,[t("a",ak,[l("[✓]"),e(s)])]),t("td",ck,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[rk]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[hk]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[uk]),_:1}),l(),fk]),t("td",gk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mk,t("td",yk,[t("a",xk,[l("链表中的两数相加"),e(s)])]),pk,t("td",bk,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[kk]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Mk]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[vk]),_:1})]),t("td",Ik,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hk,t("td",wk,[t("a",Ek,[l("重排链表"),e(s)])]),qk,t("td",zk,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Ok]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[jk]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Nk]),_:1}),l(),Lk]),t("td",Bk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vk,t("td",Ck,[t("a",Qk,[l("回文链表"),e(s)])]),t("td",Rk,[t("a",Zk,[l("[✓]"),e(s)])]),t("td",Gk,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Kk]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Sk]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Tk]),_:1}),l(),Uk]),t("td",Xk,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Yk,t("td",Ak,[t("a",Pk,[l("后缀表达式"),e(s)])]),Dk,t("td",Fk,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Jk]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Wk]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[$k]),_:1})]),t("td",tM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eM,t("td",lM,[t("a",oM,[l("小行星碰撞"),e(s)])]),nM,t("td",sM,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[dM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_M]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[iM]),_:1})]),t("td",aM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cM,t("td",rM,[t("a",hM,[l("每日温度"),e(s)])]),uM,t("td",fM,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[gM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[mM]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[yM]),_:1})]),t("td",xM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pM,t("td",bM,[t("a",kM,[l("直方图最大矩形面积"),e(s)])]),MM,t("td",vM,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[IM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[HM]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[wM]),_:1})]),t("td",EM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qM,t("td",zM,[t("a",OM,[l("矩阵中最大的矩形"),e(s)])]),jM,t("td",NM,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[LM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[BM]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[VM]),_:1}),l(),CM]),t("td",QM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RM,t("td",ZM,[t("a",GM,[l("展平二叉搜索树"),e(s)])]),KM,t("td",SM,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[TM]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[UM]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[XM]),_:1}),l(),YM]),t("td",AM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[PM,t("td",DM,[t("a",FM,[l("二叉搜索树迭代器"),e(s)])]),JM,t("td",WM,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[$M]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[tv]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ev]),_:1}),l(),lv]),t("td",ov,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nv,t("td",sv,[t("a",dv,[l("回文链表"),e(s)])]),_v,t("td",iv,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[av]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[cv]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[rv]),_:1}),l(),hv]),t("td",uv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fv,t("td",gv,[t("a",mv,[l("三合一"),e(s)])]),yv,t("td",xv,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[pv]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[bv]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kv]),_:1})]),t("td",Mv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vv,t("td",Iv,[t("a",Hv,[l("栈的最小值"),e(s)])]),wv,t("td",Ev,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[qv]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[zv]),_:1})]),t("td",Ov,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jv,t("td",Nv,[t("a",Lv,[l("堆盘子"),e(s)])]),Bv,t("td",Vv,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Cv]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Qv]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[Rv]),_:1})]),t("td",Zv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gv,t("td",Kv,[t("a",Sv,[l("化栈为队"),e(s)])]),Tv,t("td",Uv,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Xv]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Yv]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Av]),_:1})]),t("td",Pv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Dv,t("td",Fv,[t("a",Jv,[l("栈排序"),e(s)])]),Wv,t("td",$v,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[tI]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[eI]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[lI]),_:1})]),t("td",oI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nI,t("td",sI,[t("a",dI,[l("部分排序"),e(s)])]),_I,t("td",iI,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[aI]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[cI]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rI]),_:1}),l(),hI]),t("td",uI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fI,t("td",gI,[t("a",mI,[l("计算器"),e(s)])]),yI,t("td",xI,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[pI]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[bI]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[kI]),_:1})]),t("td",MI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vI,t("td",II,[t("a",HI,[l("BiNode"),e(s)])]),wI,t("td",EI,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[qI]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[zI]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[OI]),_:1}),l(),jI]),t("td",NI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[LI,t("td",BI,[t("a",VI,[l("直方图的水量"),e(s)])]),CI,t("td",QI,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[RI]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ZI]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[GI]),_:1}),l(),KI]),t("td",SI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const AI=i(h,[["render",TI],["__file","stack.html.vue"]]);export{AI as default};
