import{_ as r,r as d,o as _,c,a as t,d as o,w as s,b as e,f as a}from"./app-pBQRj29c.js";const i={},h=t("h1",{id:"深度优先搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#深度优先搜索","aria-hidden":"true"},"#"),e(" 深度优先搜索")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),u=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),y=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),z=t("code",null,"字符串",-1),j=t("code",null,"字符串匹配",-1),O=t("code",null,"树",-1),q=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),K=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),E=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),W=t("code",null,"树状数组",-1),S=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),F=t("code",null,"枚举",-1),H=t("code",null,"递归",-1),J=t("code",null,"分治",-1),Q=t("code",null,"回溯",-1),R=t("code",null,"贪心",-1),Z=t("code",null,"动态规划",-1),G=t("code",null,"排序",-1),M=t("code",null,"桶排序",-1),X=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),st=t("span",{class:"blue"},"深度优先搜索",-1),nt=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),rt=t("code",null,"位运算",-1),_t=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),ut=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),yt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),zt=t("code",null,"拒绝采样",-1),jt=t("code",null,"数据库",-1),Ot=t("code",null,"设计",-1),qt=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Kt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Bt=t("td",{style:{"text-align":"center"}},"94",-1),Tt=t("td",{style:{"text-align":"left"}},"二叉树的中序遍历",-1),Et={style:{"text-align":"center"}},Ut={style:{"text-align":"left"}},At=t("code",null,"栈",-1),Dt=t("code",null,"树",-1),Wt=t("code",null,"深度优先搜索",-1),St=t("code",null,"1+",-1),Yt=t("td",{style:{"text-align":"left"}},"🟢",-1),Ft={style:{"text-align":"center"}},Ht={href:"https://leetcode.cn/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},"98",-1),Rt=t("td",{style:{"text-align":"left"}},"验证二叉搜索树",-1),Zt={style:{"text-align":"center"}},Gt={style:{"text-align":"left"}},Mt=t("code",null,"树",-1),Xt=t("code",null,"深度优先搜索",-1),$t=t("code",null,"二叉搜索树",-1),te=t("code",null,"1+",-1),ee=t("td",{style:{"text-align":"left"}},"🟠",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},se={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ne=t("td",{style:{"text-align":"center"}},"99",-1),de=t("td",{style:{"text-align":"left"}},"恢复二叉搜索树",-1),re={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"树",-1),ae=t("code",null,"深度优先搜索",-1),ie=t("code",null,"二叉搜索树",-1),he=t("code",null,"1+",-1),fe=t("td",{style:{"text-align":"left"}},"🟠",-1),ge={style:{"text-align":"center"}},ue={href:"https://leetcode.cn/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},pe=t("td",{style:{"text-align":"center"}},"100",-1),ye=t("td",{style:{"text-align":"left"}},"相同的树",-1),xe={style:{"text-align":"center"}},be={style:{"text-align":"left"}},ke=t("code",null,"树",-1),ve=t("code",null,"深度优先搜索",-1),we=t("code",null,"广度优先搜索",-1),Ie=t("code",null,"1+",-1),ze=t("td",{style:{"text-align":"left"}},"🟢",-1),je={style:{"text-align":"center"}},Oe={href:"https://leetcode.cn/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Le=t("td",{style:{"text-align":"center"}},"101",-1),Ce=t("td",{style:{"text-align":"left"}},"对称二叉树",-1),Ne={style:{"text-align":"center"}},Pe={style:{"text-align":"left"}},Ke=t("code",null,"树",-1),Ve=t("code",null,"深度优先搜索",-1),Be=t("code",null,"广度优先搜索",-1),Te=t("code",null,"1+",-1),Ee=t("td",{style:{"text-align":"left"}},"🟢",-1),Ue={style:{"text-align":"center"}},Ae={href:"https://leetcode.cn/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},De={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},We=t("td",{style:{"text-align":"center"}},"104",-1),Se=t("td",{style:{"text-align":"left"}},"二叉树的最大深度",-1),Ye={style:{"text-align":"center"}},Fe={style:{"text-align":"left"}},He=t("code",null,"树",-1),Je=t("code",null,"深度优先搜索",-1),Qe=t("code",null,"广度优先搜索",-1),Re=t("code",null,"1+",-1),Ze=t("td",{style:{"text-align":"left"}},"🟢",-1),Ge={style:{"text-align":"center"}},Me={href:"https://leetcode.cn/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"110",-1),to=t("td",{style:{"text-align":"left"}},"平衡二叉树",-1),eo={style:{"text-align":"center"}},oo={style:{"text-align":"left"}},lo=t("code",null,"树",-1),so=t("code",null,"深度优先搜索",-1),no=t("code",null,"二叉树",-1),ro=t("td",{style:{"text-align":"left"}},"🟢",-1),_o={style:{"text-align":"center"}},co={href:"https://leetcode.cn/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},io=t("td",{style:{"text-align":"center"}},"111",-1),ho=t("td",{style:{"text-align":"left"}},"二叉树的最小深度",-1),fo={style:{"text-align":"center"}},go={style:{"text-align":"left"}},uo=t("code",null,"树",-1),mo=t("code",null,"深度优先搜索",-1),po=t("code",null,"广度优先搜索",-1),yo=t("code",null,"1+",-1),xo=t("td",{style:{"text-align":"left"}},"🟢",-1),bo={style:{"text-align":"center"}},ko={href:"https://leetcode.cn/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},"112",-1),Io=t("td",{style:{"text-align":"left"}},"路径总和",-1),zo={style:{"text-align":"center"}},jo={style:{"text-align":"left"}},Oo=t("code",null,"树",-1),qo=t("code",null,"深度优先搜索",-1),Lo=t("code",null,"广度优先搜索",-1),Co=t("code",null,"1+",-1),No=t("td",{style:{"text-align":"left"}},"🟢",-1),Po={style:{"text-align":"center"}},Ko={href:"https://leetcode.cn/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Vo={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},"113",-1),To=t("td",{style:{"text-align":"left"}},"路径总和 II",-1),Eo={style:{"text-align":"center"}},Uo={style:{"text-align":"left"}},Ao=t("code",null,"树",-1),Do=t("code",null,"深度优先搜索",-1),Wo=t("code",null,"回溯",-1),So=t("code",null,"1+",-1),Yo=t("td",{style:{"text-align":"left"}},"🟠",-1),Fo={style:{"text-align":"center"}},Ho={href:"https://leetcode.cn/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},Jo={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},"114",-1),Ro=t("td",{style:{"text-align":"left"}},"二叉树展开为链表",-1),Zo={style:{"text-align":"center"}},Go={style:{"text-align":"left"}},Mo=t("code",null,"栈",-1),Xo=t("code",null,"树",-1),$o=t("code",null,"深度优先搜索",-1),tl=t("code",null,"2+",-1),el=t("td",{style:{"text-align":"left"}},"🟠",-1),ol={style:{"text-align":"center"}},ll={href:"https://leetcode.cn/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},sl={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},"116",-1),dl=t("td",{style:{"text-align":"left"}},"填充每个节点的下一个右侧节点指针",-1),rl={style:{"text-align":"center"}},_l={style:{"text-align":"left"}},cl=t("code",null,"树",-1),al=t("code",null,"深度优先搜索",-1),il=t("code",null,"广度优先搜索",-1),hl=t("code",null,"2+",-1),fl=t("td",{style:{"text-align":"left"}},"🟠",-1),gl={style:{"text-align":"center"}},ul={href:"https://leetcode.cn/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},ml={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},pl=t("td",{style:{"text-align":"center"}},"117",-1),yl=t("td",{style:{"text-align":"left"}},"填充每个节点的下一个右侧节点指针 II",-1),xl={style:{"text-align":"center"}},bl={style:{"text-align":"left"}},kl=t("code",null,"树",-1),vl=t("code",null,"深度优先搜索",-1),wl=t("code",null,"广度优先搜索",-1),Il=t("code",null,"2+",-1),zl=t("td",{style:{"text-align":"left"}},"🟠",-1),jl={style:{"text-align":"center"}},Ol={href:"https://leetcode.cn/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},Ll=t("td",{style:{"text-align":"center"}},"124",-1),Cl=t("td",{style:{"text-align":"left"}},"二叉树中的最大路径和",-1),Nl={style:{"text-align":"center"}},Pl={style:{"text-align":"left"}},Kl=t("code",null,"树",-1),Vl=t("code",null,"深度优先搜索",-1),Bl=t("code",null,"动态规划",-1),Tl=t("code",null,"1+",-1),El=t("td",{style:{"text-align":"left"}},"🔴",-1),Ul={style:{"text-align":"center"}},Al={href:"https://leetcode.cn/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Dl={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},"129",-1),Sl=t("td",{style:{"text-align":"left"}},"求根节点到叶节点数字之和",-1),Yl={style:{"text-align":"center"}},Fl={style:{"text-align":"left"}},Hl=t("code",null,"树",-1),Jl=t("code",null,"深度优先搜索",-1),Ql=t("code",null,"二叉树",-1),Rl=t("td",{style:{"text-align":"left"}},"🟠",-1),Zl={style:{"text-align":"center"}},Gl={href:"https://leetcode.cn/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Ml={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Xl=t("td",{style:{"text-align":"center"}},"130",-1),$l=t("td",{style:{"text-align":"left"}},"被围绕的区域",-1),ts={style:{"text-align":"center"}},es={style:{"text-align":"left"}},os=t("code",null,"深度优先搜索",-1),ls=t("code",null,"广度优先搜索",-1),ss=t("code",null,"并查集",-1),ns=t("code",null,"2+",-1),ds=t("td",{style:{"text-align":"left"}},"🟠",-1),rs={style:{"text-align":"center"}},_s={href:"https://leetcode.cn/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},cs={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},as=t("td",{style:{"text-align":"center"}},"133",-1),is=t("td",{style:{"text-align":"left"}},"克隆图",-1),hs={style:{"text-align":"center"}},fs={style:{"text-align":"left"}},gs=t("code",null,"深度优先搜索",-1),us=t("code",null,"广度优先搜索",-1),ms=t("code",null,"图",-1),ps=t("code",null,"1+",-1),ys=t("td",{style:{"text-align":"left"}},"🟠",-1),xs={style:{"text-align":"center"}},bs={href:"https://leetcode.cn/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},ks={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},vs=t("td",{style:{"text-align":"center"}},"144",-1),ws=t("td",{style:{"text-align":"left"}},"二叉树的前序遍历",-1),Is={style:{"text-align":"center"}},zs={style:{"text-align":"left"}},js=t("code",null,"栈",-1),Os=t("code",null,"树",-1),qs=t("code",null,"深度优先搜索",-1),Ls=t("code",null,"1+",-1),Cs=t("td",{style:{"text-align":"left"}},"🟢",-1),Ns={style:{"text-align":"center"}},Ps={href:"https://leetcode.cn/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ks={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Vs=t("td",{style:{"text-align":"center"}},"145",-1),Bs=t("td",{style:{"text-align":"left"}},"二叉树的后序遍历",-1),Ts={style:{"text-align":"center"}},Es={style:{"text-align":"left"}},Us=t("code",null,"栈",-1),As=t("code",null,"树",-1),Ds=t("code",null,"深度优先搜索",-1),Ws=t("code",null,"1+",-1),Ss=t("td",{style:{"text-align":"left"}},"🟢",-1),Ys={style:{"text-align":"center"}},Fs={href:"https://leetcode.cn/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Hs={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Js=t("td",{style:{"text-align":"center"}},"156",-1),Qs=t("td",{style:{"text-align":"left"}},"上下翻转二叉树 🔒",-1),Rs={style:{"text-align":"center"}},Zs={style:{"text-align":"left"}},Gs=t("code",null,"树",-1),Ms=t("code",null,"深度优先搜索",-1),Xs=t("code",null,"二叉树",-1),$s=t("td",{style:{"text-align":"left"}},"🟠",-1),tn={style:{"text-align":"center"}},en={href:"https://leetcode.cn/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},on={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},ln=t("td",{style:{"text-align":"center"}},"199",-1),sn=t("td",{style:{"text-align":"left"}},"二叉树的右视图",-1),nn={style:{"text-align":"center"}},dn={style:{"text-align":"left"}},rn=t("code",null,"树",-1),_n=t("code",null,"深度优先搜索",-1),cn=t("code",null,"广度优先搜索",-1),an=t("code",null,"1+",-1),hn=t("td",{style:{"text-align":"left"}},"🟠",-1),fn={style:{"text-align":"center"}},gn={href:"https://leetcode.cn/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},un={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},mn=t("td",{style:{"text-align":"center"}},"200",-1),pn=t("td",{style:{"text-align":"left"}},"岛屿数量",-1),yn={style:{"text-align":"center"}},xn={style:{"text-align":"left"}},bn=t("code",null,"深度优先搜索",-1),kn=t("code",null,"广度优先搜索",-1),vn=t("code",null,"并查集",-1),wn=t("code",null,"2+",-1),In=t("td",{style:{"text-align":"left"}},"🟠",-1),zn={style:{"text-align":"center"}},jn={href:"https://leetcode.cn/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},On={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},"207",-1),Ln=t("td",{style:{"text-align":"left"}},"课程表",-1),Cn={style:{"text-align":"center"}},Nn={style:{"text-align":"left"}},Pn=t("code",null,"深度优先搜索",-1),Kn=t("code",null,"广度优先搜索",-1),Vn=t("code",null,"图",-1),Bn=t("code",null,"1+",-1),Tn=t("td",{style:{"text-align":"left"}},"🟠",-1),En={style:{"text-align":"center"}},Un={href:"https://leetcode.cn/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},An={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Dn=t("td",{style:{"text-align":"center"}},"210",-1),Wn=t("td",{style:{"text-align":"left"}},"课程表 II",-1),Sn={style:{"text-align":"center"}},Yn={style:{"text-align":"left"}},Fn=t("code",null,"深度优先搜索",-1),Hn=t("code",null,"广度优先搜索",-1),Jn=t("code",null,"图",-1),Qn=t("code",null,"1+",-1),Rn=t("td",{style:{"text-align":"left"}},"🟠",-1),Zn={style:{"text-align":"center"}},Gn={href:"https://leetcode.cn/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Xn=t("td",{style:{"text-align":"center"}},"211",-1),$n=t("td",{style:{"text-align":"left"}},"添加与搜索单词 - 数据结构设计",-1),td={style:{"text-align":"center"}},ed={style:{"text-align":"left"}},od=t("code",null,"深度优先搜索",-1),ld=t("code",null,"设计",-1),sd=t("code",null,"字典树",-1),nd=t("code",null,"1+",-1),dd=t("td",{style:{"text-align":"left"}},"🟠",-1),rd={style:{"text-align":"center"}},_d={href:"https://leetcode.cn/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},cd={href:"https://leetcode.com/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},ad=t("td",{style:{"text-align":"center"}},"226",-1),id=t("td",{style:{"text-align":"left"}},"翻转二叉树",-1),hd={style:{"text-align":"center"}},fd={style:{"text-align":"left"}},gd=t("code",null,"树",-1),ud=t("code",null,"深度优先搜索",-1),md=t("code",null,"广度优先搜索",-1),pd=t("code",null,"1+",-1),yd=t("td",{style:{"text-align":"left"}},"🟢",-1),xd={style:{"text-align":"center"}},bd={href:"https://leetcode.cn/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},kd={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},vd=t("td",{style:{"text-align":"center"}},"230",-1),wd=t("td",{style:{"text-align":"left"}},"二叉搜索树中第 K 小的元素",-1),Id={style:{"text-align":"center"}},zd={style:{"text-align":"left"}},jd=t("code",null,"树",-1),Od=t("code",null,"深度优先搜索",-1),qd=t("code",null,"二叉搜索树",-1),Ld=t("code",null,"1+",-1),Cd=t("td",{style:{"text-align":"left"}},"🟠",-1),Nd={style:{"text-align":"center"}},Pd={href:"https://leetcode.cn/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Kd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Vd=t("td",{style:{"text-align":"center"}},"235",-1),Bd=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),Td={style:{"text-align":"center"}},Ed={style:{"text-align":"left"}},Ud=t("code",null,"树",-1),Ad=t("code",null,"深度优先搜索",-1),Dd=t("code",null,"二叉搜索树",-1),Wd=t("code",null,"1+",-1),Sd=t("td",{style:{"text-align":"left"}},"🟠",-1),Yd={style:{"text-align":"center"}},Fd={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Hd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Jd=t("td",{style:{"text-align":"center"}},"236",-1),Qd=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先",-1),Rd={style:{"text-align":"center"}},Zd={style:{"text-align":"left"}},Gd=t("code",null,"树",-1),Md=t("code",null,"深度优先搜索",-1),Xd=t("code",null,"二叉树",-1),$d=t("td",{style:{"text-align":"left"}},"🟠",-1),tr={style:{"text-align":"center"}},er={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},or={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},lr=t("td",{style:{"text-align":"center"}},"250",-1),sr=t("td",{style:{"text-align":"left"}},"统计同值子树 🔒",-1),nr=t("td",{style:{"text-align":"center"}},null,-1),dr={style:{"text-align":"left"}},rr=t("code",null,"树",-1),_r=t("code",null,"深度优先搜索",-1),cr=t("code",null,"二叉树",-1),ar=t("td",{style:{"text-align":"left"}},"🟠",-1),ir={style:{"text-align":"center"}},hr={href:"https://leetcode.cn/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},fr={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},gr=t("td",{style:{"text-align":"center"}},"257",-1),ur=t("td",{style:{"text-align":"left"}},"二叉树的所有路径",-1),mr={style:{"text-align":"center"}},pr={style:{"text-align":"left"}},yr=t("code",null,"树",-1),xr=t("code",null,"深度优先搜索",-1),br=t("code",null,"字符串",-1),kr=t("code",null,"2+",-1),vr=t("td",{style:{"text-align":"left"}},"🟢",-1),wr={style:{"text-align":"center"}},Ir={href:"https://leetcode.cn/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},zr={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},jr=t("td",{style:{"text-align":"center"}},"261",-1),Or=t("td",{style:{"text-align":"left"}},"以图判树 🔒",-1),qr=t("td",{style:{"text-align":"center"}},null,-1),Lr={style:{"text-align":"left"}},Cr=t("code",null,"深度优先搜索",-1),Nr=t("code",null,"广度优先搜索",-1),Pr=t("code",null,"并查集",-1),Kr=t("code",null,"1+",-1),Vr=t("td",{style:{"text-align":"left"}},"🟠",-1),Br={style:{"text-align":"center"}},Tr={href:"https://leetcode.cn/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},Er={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},Ur=t("td",{style:{"text-align":"center"}},"269",-1),Ar=t("td",{style:{"text-align":"left"}},"火星词典 🔒",-1),Dr=t("td",{style:{"text-align":"center"}},null,-1),Wr={style:{"text-align":"left"}},Sr=t("code",null,"深度优先搜索",-1),Yr=t("code",null,"广度优先搜索",-1),Fr=t("code",null,"图",-1),Hr=t("code",null,"3+",-1),Jr=t("td",{style:{"text-align":"left"}},"🔴",-1),Qr={style:{"text-align":"center"}},Rr={href:"https://leetcode.cn/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},Zr={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},Gr=t("td",{style:{"text-align":"center"}},"270",-1),Mr=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 🔒",-1),Xr=t("td",{style:{"text-align":"center"}},null,-1),$r={style:{"text-align":"left"}},t_=t("code",null,"树",-1),e_=t("code",null,"深度优先搜索",-1),o_=t("code",null,"二叉搜索树",-1),l_=t("code",null,"2+",-1),s_=t("td",{style:{"text-align":"left"}},"🟢",-1),n_={style:{"text-align":"center"}},d_={href:"https://leetcode.cn/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},r_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},"272",-1),c_=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 II 🔒",-1),a_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},h_=t("code",null,"栈",-1),f_=t("code",null,"树",-1),g_=t("code",null,"深度优先搜索",-1),u_=t("code",null,"4+",-1),m_=t("td",{style:{"text-align":"left"}},"🔴",-1),p_={style:{"text-align":"center"}},y_={href:"https://leetcode.cn/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},x_={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},b_=t("td",{style:{"text-align":"center"}},"285",-1),k_=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继 🔒",-1),v_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},I_=t("code",null,"树",-1),z_=t("code",null,"深度优先搜索",-1),j_=t("code",null,"二叉搜索树",-1),O_=t("code",null,"1+",-1),q_=t("td",{style:{"text-align":"left"}},"🟠",-1),L_={style:{"text-align":"center"}},C_={href:"https://leetcode.cn/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},N_={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},P_=t("td",{style:{"text-align":"center"}},"297",-1),K_=t("td",{style:{"text-align":"left"}},"二叉树的序列化与反序列化",-1),V_={style:{"text-align":"center"}},B_={style:{"text-align":"left"}},T_=t("code",null,"树",-1),E_=t("code",null,"深度优先搜索",-1),U_=t("code",null,"广度优先搜索",-1),A_=t("code",null,"3+",-1),D_=t("td",{style:{"text-align":"left"}},"🔴",-1),W_={style:{"text-align":"center"}},S_={href:"https://leetcode.cn/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Y_={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},F_=t("td",{style:{"text-align":"center"}},"298",-1),H_=t("td",{style:{"text-align":"left"}},"二叉树最长连续序列 🔒",-1),J_=t("td",{style:{"text-align":"center"}},null,-1),Q_={style:{"text-align":"left"}},R_=t("code",null,"树",-1),Z_=t("code",null,"深度优先搜索",-1),G_=t("code",null,"二叉树",-1),M_=t("td",{style:{"text-align":"left"}},"🟠",-1),X_={style:{"text-align":"center"}},$_={href:"https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},tc={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},ec=t("td",{style:{"text-align":"center"}},"302",-1),oc=t("td",{style:{"text-align":"left"}},"包含全部黑色像素的最小矩形 🔒",-1),lc=t("td",{style:{"text-align":"center"}},null,-1),sc={style:{"text-align":"left"}},nc=t("code",null,"深度优先搜索",-1),dc=t("code",null,"广度优先搜索",-1),rc=t("code",null,"数组",-1),_c=t("code",null,"2+",-1),cc=t("td",{style:{"text-align":"left"}},"🔴",-1),ac={style:{"text-align":"center"}},ic={href:"https://leetcode.cn/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},hc={href:"https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},fc=t("td",{style:{"text-align":"center"}},"310",-1),gc=t("td",{style:{"text-align":"left"}},"最小高度树",-1),uc=t("td",{style:{"text-align":"center"}},null,-1),mc={style:{"text-align":"left"}},pc=t("code",null,"深度优先搜索",-1),yc=t("code",null,"广度优先搜索",-1),xc=t("code",null,"图",-1),bc=t("code",null,"1+",-1),kc=t("td",{style:{"text-align":"left"}},"🟠",-1),vc={style:{"text-align":"center"}},wc={href:"https://leetcode.cn/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},Ic={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},zc=t("td",{style:{"text-align":"center"}},"314",-1),jc=t("td",{style:{"text-align":"left"}},"二叉树的垂直遍历 🔒",-1),Oc=t("td",{style:{"text-align":"center"}},null,-1),qc={style:{"text-align":"left"}},Lc=t("code",null,"树",-1),Cc=t("code",null,"深度优先搜索",-1),Nc=t("code",null,"广度优先搜索",-1),Pc=t("code",null,"3+",-1),Kc=t("td",{style:{"text-align":"left"}},"🟠",-1),Vc={style:{"text-align":"center"}},Bc={href:"https://leetcode.cn/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},Tc={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},Ec=t("td",{style:{"text-align":"center"}},"323",-1),Uc=t("td",{style:{"text-align":"left"}},"无向图中连通分量的数目 🔒",-1),Ac=t("td",{style:{"text-align":"center"}},null,-1),Dc={style:{"text-align":"left"}},Wc=t("code",null,"深度优先搜索",-1),Sc=t("code",null,"广度优先搜索",-1),Yc=t("code",null,"并查集",-1),Fc=t("code",null,"1+",-1),Hc=t("td",{style:{"text-align":"left"}},"🟠",-1),Jc={style:{"text-align":"center"}},Qc={href:"https://leetcode.cn/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Rc={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Zc=t("td",{style:{"text-align":"center"}},"329",-1),Gc=t("td",{style:{"text-align":"left"}},"矩阵中的最长递增路径",-1),Mc=t("td",{style:{"text-align":"center"}},null,-1),Xc={style:{"text-align":"left"}},$c=t("code",null,"深度优先搜索",-1),ta=t("code",null,"广度优先搜索",-1),ea=t("code",null,"图",-1),oa=t("code",null,"5+",-1),la=t("td",{style:{"text-align":"left"}},"🔴",-1),sa={style:{"text-align":"center"}},na={href:"https://leetcode.cn/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},da={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},ra=t("td",{style:{"text-align":"center"}},"332",-1),_a=t("td",{style:{"text-align":"left"}},"重新安排行程",-1),ca=t("td",{style:{"text-align":"center"}},null,-1),aa={style:{"text-align":"left"}},ia=t("code",null,"深度优先搜索",-1),ha=t("code",null,"图",-1),fa=t("code",null,"欧拉回路",-1),ga=t("td",{style:{"text-align":"left"}},"🔴",-1),ua={style:{"text-align":"center"}},ma={href:"https://leetcode.cn/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},pa={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},ya=t("td",{style:{"text-align":"center"}},"333",-1),xa=t("td",{style:{"text-align":"left"}},"最大二叉搜索子树 🔒",-1),ba=t("td",{style:{"text-align":"center"}},null,-1),ka={style:{"text-align":"left"}},va=t("code",null,"树",-1),wa=t("code",null,"深度优先搜索",-1),Ia=t("code",null,"二叉搜索树",-1),za=t("code",null,"2+",-1),ja=t("td",{style:{"text-align":"left"}},"🟠",-1),Oa={style:{"text-align":"center"}},qa={href:"https://leetcode.cn/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},La={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Ca=t("td",{style:{"text-align":"center"}},"337",-1),Na=t("td",{style:{"text-align":"left"}},"打家劫舍 III",-1),Pa=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},Va=t("code",null,"树",-1),Ba=t("code",null,"深度优先搜索",-1),Ta=t("code",null,"动态规划",-1),Ea=t("code",null,"1+",-1),Ua=t("td",{style:{"text-align":"left"}},"🟠",-1),Aa={style:{"text-align":"center"}},Da={href:"https://leetcode.cn/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Wa={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Sa=t("td",{style:{"text-align":"center"}},"339",-1),Ya=t("td",{style:{"text-align":"left"}},"嵌套列表加权和 🔒",-1),Fa=t("td",{style:{"text-align":"center"}},null,-1),Ha={style:{"text-align":"left"}},Ja=t("code",null,"深度优先搜索",-1),Qa=t("code",null,"广度优先搜索",-1),Ra=t("td",{style:{"text-align":"left"}},"🟠",-1),Za={style:{"text-align":"center"}},Ga={href:"https://leetcode.cn/problems/nested-list-weight-sum",target:"_blank",rel:"noopener noreferrer"},Ma={href:"https://leetcode.com/problems/nested-list-weight-sum",target:"_blank",rel:"noopener noreferrer"},Xa=t("td",{style:{"text-align":"center"}},"341",-1),$a=t("td",{style:{"text-align":"left"}},"扁平化嵌套列表迭代器",-1),ti=t("td",{style:{"text-align":"center"}},null,-1),ei={style:{"text-align":"left"}},oi=t("code",null,"栈",-1),li=t("code",null,"树",-1),si=t("code",null,"深度优先搜索",-1),ni=t("code",null,"3+",-1),di=t("td",{style:{"text-align":"left"}},"🟠",-1),ri={style:{"text-align":"center"}},_i={href:"https://leetcode.cn/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},ci={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},ai=t("td",{style:{"text-align":"center"}},"364",-1),ii=t("td",{style:{"text-align":"left"}},"嵌套列表加权和 II 🔒",-1),hi=t("td",{style:{"text-align":"center"}},null,-1),fi={style:{"text-align":"left"}},gi=t("code",null,"栈",-1),ui=t("code",null,"深度优先搜索",-1),mi=t("code",null,"广度优先搜索",-1),pi=t("td",{style:{"text-align":"left"}},"🟠",-1),yi={style:{"text-align":"center"}},xi={href:"https://leetcode.cn/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},bi={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},ki=t("td",{style:{"text-align":"center"}},"365",-1),vi=t("td",{style:{"text-align":"left"}},"水壶问题",-1),wi=t("td",{style:{"text-align":"center"}},null,-1),Ii={style:{"text-align":"left"}},zi=t("code",null,"深度优先搜索",-1),ji=t("code",null,"广度优先搜索",-1),Oi=t("code",null,"数学",-1),qi=t("td",{style:{"text-align":"left"}},"🟠",-1),Li={style:{"text-align":"center"}},Ci={href:"https://leetcode.cn/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},Ni={href:"https://leetcode.com/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},Pi=t("td",{style:{"text-align":"center"}},"366",-1),Ki=t("td",{style:{"text-align":"left"}},"寻找二叉树的叶子节点 🔒",-1),Vi={style:{"text-align":"center"}},Bi={style:{"text-align":"left"}},Ti=t("code",null,"树",-1),Ei=t("code",null,"深度优先搜索",-1),Ui=t("code",null,"二叉树",-1),Ai=t("td",{style:{"text-align":"left"}},"🟠",-1),Di={style:{"text-align":"center"}},Wi={href:"https://leetcode.cn/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Si={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yi=t("td",{style:{"text-align":"center"}},"385",-1),Fi=t("td",{style:{"text-align":"left"}},"迷你语法分析器",-1),Hi=t("td",{style:{"text-align":"center"}},null,-1),Ji={style:{"text-align":"left"}},Qi=t("code",null,"栈",-1),Ri=t("code",null,"深度优先搜索",-1),Zi=t("code",null,"字符串",-1),Gi=t("td",{style:{"text-align":"left"}},"🟠",-1),Mi={style:{"text-align":"center"}},Xi={href:"https://leetcode.cn/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},$i={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},th=t("td",{style:{"text-align":"center"}},"386",-1),eh=t("td",{style:{"text-align":"left"}},"字典序排数",-1),oh=t("td",{style:{"text-align":"center"}},null,-1),lh={style:{"text-align":"left"}},sh=t("code",null,"深度优先搜索",-1),nh=t("code",null,"字典树",-1),dh=t("td",{style:{"text-align":"left"}},"🟠",-1),rh={style:{"text-align":"center"}},_h={href:"https://leetcode.cn/problems/lexicographical-numbers",target:"_blank",rel:"noopener noreferrer"},ch={href:"https://leetcode.com/problems/lexicographical-numbers",target:"_blank",rel:"noopener noreferrer"},ah=t("td",{style:{"text-align":"center"}},"388",-1),ih=t("td",{style:{"text-align":"left"}},"文件的最长绝对路径",-1),hh=t("td",{style:{"text-align":"center"}},null,-1),fh={style:{"text-align":"left"}},gh=t("code",null,"栈",-1),uh=t("code",null,"深度优先搜索",-1),mh=t("code",null,"字符串",-1),ph=t("td",{style:{"text-align":"left"}},"🟠",-1),yh={style:{"text-align":"center"}},xh={href:"https://leetcode.cn/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},bh={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},kh=t("td",{style:{"text-align":"center"}},"399",-1),vh=t("td",{style:{"text-align":"left"}},"除法求值",-1),wh={style:{"text-align":"center"}},Ih={style:{"text-align":"left"}},zh=t("code",null,"深度优先搜索",-1),jh=t("code",null,"广度优先搜索",-1),Oh=t("code",null,"并查集",-1),qh=t("code",null,"4+",-1),Lh=t("td",{style:{"text-align":"left"}},"🟠",-1),Ch={style:{"text-align":"center"}},Nh={href:"https://leetcode.cn/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Ph={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Kh=t("td",{style:{"text-align":"center"}},"404",-1),Vh=t("td",{style:{"text-align":"left"}},"左叶子之和",-1),Bh=t("td",{style:{"text-align":"center"}},null,-1),Th={style:{"text-align":"left"}},Eh=t("code",null,"树",-1),Uh=t("code",null,"深度优先搜索",-1),Ah=t("code",null,"广度优先搜索",-1),Dh=t("code",null,"1+",-1),Wh=t("td",{style:{"text-align":"left"}},"🟢",-1),Sh={style:{"text-align":"center"}},Yh={href:"https://leetcode.cn/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},Fh={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},Hh=t("td",{style:{"text-align":"center"}},"417",-1),Jh=t("td",{style:{"text-align":"left"}},"太平洋大西洋水流问题",-1),Qh=t("td",{style:{"text-align":"center"}},null,-1),Rh={style:{"text-align":"left"}},Zh=t("code",null,"深度优先搜索",-1),Gh=t("code",null,"广度优先搜索",-1),Mh=t("code",null,"数组",-1),Xh=t("code",null,"1+",-1),$h=t("td",{style:{"text-align":"left"}},"🟠",-1),t1={style:{"text-align":"center"}},e1={href:"https://leetcode.cn/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},o1={href:"https://leetcode.com/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},l1=t("td",{style:{"text-align":"center"}},"419",-1),s1=t("td",{style:{"text-align":"left"}},"棋盘上的战舰",-1),n1=t("td",{style:{"text-align":"center"}},null,-1),d1={style:{"text-align":"left"}},r1=t("code",null,"深度优先搜索",-1),_1=t("code",null,"数组",-1),c1=t("code",null,"矩阵",-1),a1=t("td",{style:{"text-align":"left"}},"🟠",-1),i1={style:{"text-align":"center"}},h1={href:"https://leetcode.cn/problems/battleships-in-a-board",target:"_blank",rel:"noopener noreferrer"},f1={href:"https://leetcode.com/problems/battleships-in-a-board",target:"_blank",rel:"noopener noreferrer"},g1=t("td",{style:{"text-align":"center"}},"426",-1),u1=t("td",{style:{"text-align":"left"}},"将二叉搜索树转化为排序的双向链表 🔒",-1),m1={style:{"text-align":"center"}},p1={style:{"text-align":"left"}},y1=t("code",null,"栈",-1),x1=t("code",null,"树",-1),b1=t("code",null,"深度优先搜索",-1),k1=t("code",null,"4+",-1),v1=t("td",{style:{"text-align":"left"}},"🟠",-1),w1={style:{"text-align":"center"}},I1={href:"https://leetcode.cn/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},z1={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},j1=t("td",{style:{"text-align":"center"}},"428",-1),O1=t("td",{style:{"text-align":"left"}},"序列化和反序列化 N 叉树 🔒",-1),q1=t("td",{style:{"text-align":"center"}},null,-1),L1={style:{"text-align":"left"}},C1=t("code",null,"树",-1),N1=t("code",null,"深度优先搜索",-1),P1=t("code",null,"广度优先搜索",-1),K1=t("code",null,"1+",-1),V1=t("td",{style:{"text-align":"left"}},"🔴",-1),B1={style:{"text-align":"center"}},T1={href:"https://leetcode.cn/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},E1={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},U1=t("td",{style:{"text-align":"center"}},"430",-1),A1=t("td",{style:{"text-align":"left"}},"扁平化多级双向链表",-1),D1={style:{"text-align":"center"}},W1={style:{"text-align":"left"}},S1=t("code",null,"深度优先搜索",-1),Y1=t("code",null,"链表",-1),F1=t("code",null,"双向链表",-1),H1=t("td",{style:{"text-align":"left"}},"🟠",-1),J1={style:{"text-align":"center"}},Q1={href:"https://leetcode.cn/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},R1={href:"https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Z1=t("td",{style:{"text-align":"center"}},"431",-1),G1=t("td",{style:{"text-align":"left"}},"将 N 叉树编码为二叉树 🔒",-1),M1=t("td",{style:{"text-align":"center"}},null,-1),X1={style:{"text-align":"left"}},$1=t("code",null,"树",-1),tf=t("code",null,"深度优先搜索",-1),ef=t("code",null,"广度优先搜索",-1),of=t("code",null,"2+",-1),lf=t("td",{style:{"text-align":"left"}},"🔴",-1),sf={style:{"text-align":"center"}},nf={href:"https://leetcode.cn/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},df={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},rf=t("td",{style:{"text-align":"center"}},"437",-1),_f=t("td",{style:{"text-align":"left"}},"路径总和 III",-1),cf={style:{"text-align":"center"}},af={style:{"text-align":"left"}},hf=t("code",null,"树",-1),ff=t("code",null,"深度优先搜索",-1),gf=t("code",null,"二叉树",-1),uf=t("td",{style:{"text-align":"left"}},"🟠",-1),mf={style:{"text-align":"center"}},pf={href:"https://leetcode.cn/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},yf={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},xf=t("td",{style:{"text-align":"center"}},"449",-1),bf=t("td",{style:{"text-align":"left"}},"序列化和反序列化二叉搜索树",-1),kf=t("td",{style:{"text-align":"center"}},null,-1),vf={style:{"text-align":"left"}},wf=t("code",null,"树",-1),If=t("code",null,"深度优先搜索",-1),zf=t("code",null,"广度优先搜索",-1),jf=t("code",null,"4+",-1),Of=t("td",{style:{"text-align":"left"}},"🟠",-1),qf={style:{"text-align":"center"}},Lf={href:"https://leetcode.cn/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Cf={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Nf=t("td",{style:{"text-align":"center"}},"463",-1),Pf=t("td",{style:{"text-align":"left"}},"岛屿的周长",-1),Kf=t("td",{style:{"text-align":"center"}},null,-1),Vf={style:{"text-align":"left"}},Bf=t("code",null,"深度优先搜索",-1),Tf=t("code",null,"广度优先搜索",-1),Ef=t("code",null,"数组",-1),Uf=t("code",null,"1+",-1),Af=t("td",{style:{"text-align":"left"}},"🟢",-1),Df={style:{"text-align":"center"}},Wf={href:"https://leetcode.cn/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},Sf={href:"https://leetcode.com/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},Yf=t("td",{style:{"text-align":"center"}},"472",-1),Ff=t("td",{style:{"text-align":"left"}},"连接词",-1),Hf=t("td",{style:{"text-align":"center"}},null,-1),Jf={style:{"text-align":"left"}},Qf=t("code",null,"深度优先搜索",-1),Rf=t("code",null,"字典树",-1),Zf=t("code",null,"数组",-1),Gf=t("code",null,"2+",-1),Mf=t("td",{style:{"text-align":"left"}},"🔴",-1),Xf={style:{"text-align":"center"}},$f={href:"https://leetcode.cn/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},tg={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},eg=t("td",{style:{"text-align":"center"}},"490",-1),og=t("td",{style:{"text-align":"left"}},"迷宫 🔒",-1),lg=t("td",{style:{"text-align":"center"}},null,-1),sg={style:{"text-align":"left"}},ng=t("code",null,"深度优先搜索",-1),dg=t("code",null,"广度优先搜索",-1),rg=t("code",null,"数组",-1),_g=t("code",null,"1+",-1),cg=t("td",{style:{"text-align":"left"}},"🟠",-1),ag={style:{"text-align":"center"}},ig={href:"https://leetcode.cn/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},hg={href:"https://leetcode.com/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},fg=t("td",{style:{"text-align":"center"}},"499",-1),gg=t("td",{style:{"text-align":"left"}},"迷宫 III 🔒",-1),ug=t("td",{style:{"text-align":"center"}},null,-1),mg={style:{"text-align":"left"}},pg=t("code",null,"深度优先搜索",-1),yg=t("code",null,"广度优先搜索",-1),xg=t("code",null,"图",-1),bg=t("code",null,"5+",-1),kg=t("td",{style:{"text-align":"left"}},"🔴",-1),vg={style:{"text-align":"center"}},wg={href:"https://leetcode.cn/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},Ig={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},zg=t("td",{style:{"text-align":"center"}},"501",-1),jg=t("td",{style:{"text-align":"left"}},"二叉搜索树中的众数",-1),Og=t("td",{style:{"text-align":"center"}},null,-1),qg={style:{"text-align":"left"}},Lg=t("code",null,"树",-1),Cg=t("code",null,"深度优先搜索",-1),Ng=t("code",null,"二叉搜索树",-1),Pg=t("code",null,"1+",-1),Kg=t("td",{style:{"text-align":"left"}},"🟢",-1),Vg={style:{"text-align":"center"}},Bg={href:"https://leetcode.cn/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Tg={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Eg=t("td",{style:{"text-align":"center"}},"505",-1),Ug=t("td",{style:{"text-align":"left"}},"迷宫 II 🔒",-1),Ag=t("td",{style:{"text-align":"center"}},null,-1),Dg={style:{"text-align":"left"}},Wg=t("code",null,"深度优先搜索",-1),Sg=t("code",null,"广度优先搜索",-1),Yg=t("code",null,"图",-1),Fg=t("code",null,"4+",-1),Hg=t("td",{style:{"text-align":"left"}},"🟠",-1),Jg={style:{"text-align":"center"}},Qg={href:"https://leetcode.cn/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},Rg={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},Zg=t("td",{style:{"text-align":"center"}},"508",-1),Gg=t("td",{style:{"text-align":"left"}},"出现次数最多的子树元素和",-1),Mg=t("td",{style:{"text-align":"center"}},null,-1),Xg={style:{"text-align":"left"}},$g=t("code",null,"树",-1),tu=t("code",null,"深度优先搜索",-1),eu=t("code",null,"哈希表",-1),ou=t("code",null,"1+",-1),lu=t("td",{style:{"text-align":"left"}},"🟠",-1),su={style:{"text-align":"center"}},nu={href:"https://leetcode.cn/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},du={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},ru=t("td",{style:{"text-align":"center"}},"513",-1),_u=t("td",{style:{"text-align":"left"}},"找树左下角的值",-1),cu=t("td",{style:{"text-align":"center"}},null,-1),au={style:{"text-align":"left"}},iu=t("code",null,"树",-1),hu=t("code",null,"深度优先搜索",-1),fu=t("code",null,"广度优先搜索",-1),gu=t("code",null,"1+",-1),uu=t("td",{style:{"text-align":"left"}},"🟠",-1),mu={style:{"text-align":"center"}},pu={href:"https://leetcode.cn/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},yu={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},xu=t("td",{style:{"text-align":"center"}},"514",-1),bu=t("td",{style:{"text-align":"left"}},"自由之路",-1),ku={style:{"text-align":"center"}},vu={style:{"text-align":"left"}},wu=t("code",null,"深度优先搜索",-1),Iu=t("code",null,"广度优先搜索",-1),zu=t("code",null,"字符串",-1),ju=t("code",null,"1+",-1),Ou=t("td",{style:{"text-align":"left"}},"🔴",-1),qu={style:{"text-align":"center"}},Lu={href:"https://leetcode.cn/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},Cu={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},Nu=t("td",{style:{"text-align":"center"}},"515",-1),Pu=t("td",{style:{"text-align":"left"}},"在每个树行中找最大值",-1),Ku=t("td",{style:{"text-align":"center"}},null,-1),Vu={style:{"text-align":"left"}},Bu=t("code",null,"树",-1),Tu=t("code",null,"深度优先搜索",-1),Eu=t("code",null,"广度优先搜索",-1),Uu=t("code",null,"1+",-1),Au=t("td",{style:{"text-align":"left"}},"🟠",-1),Du={style:{"text-align":"center"}},Wu={href:"https://leetcode.cn/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Su={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Yu=t("td",{style:{"text-align":"center"}},"529",-1),Fu=t("td",{style:{"text-align":"left"}},"扫雷游戏",-1),Hu=t("td",{style:{"text-align":"center"}},null,-1),Ju={style:{"text-align":"left"}},Qu=t("code",null,"深度优先搜索",-1),Ru=t("code",null,"广度优先搜索",-1),Zu=t("code",null,"数组",-1),Gu=t("code",null,"1+",-1),Mu=t("td",{style:{"text-align":"left"}},"🟠",-1),Xu={style:{"text-align":"center"}},$u={href:"https://leetcode.cn/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},tm={href:"https://leetcode.com/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},em=t("td",{style:{"text-align":"center"}},"530",-1),om=t("td",{style:{"text-align":"left"}},"二叉搜索树的最小绝对差",-1),lm={style:{"text-align":"center"}},sm={style:{"text-align":"left"}},nm=t("code",null,"树",-1),dm=t("code",null,"深度优先搜索",-1),rm=t("code",null,"广度优先搜索",-1),_m=t("code",null,"2+",-1),cm=t("td",{style:{"text-align":"left"}},"🟢",-1),am={style:{"text-align":"center"}},im={href:"https://leetcode.cn/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},hm={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},fm=t("td",{style:{"text-align":"center"}},"536",-1),gm=t("td",{style:{"text-align":"left"}},"从字符串生成二叉树 🔒",-1),um=t("td",{style:{"text-align":"center"}},null,-1),mm={style:{"text-align":"left"}},pm=t("code",null,"栈",-1),ym=t("code",null,"树",-1),xm=t("code",null,"深度优先搜索",-1),bm=t("code",null,"2+",-1),km=t("td",{style:{"text-align":"left"}},"🟠",-1),vm={style:{"text-align":"center"}},wm={href:"https://leetcode.cn/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Im={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},zm=t("td",{style:{"text-align":"center"}},"538",-1),jm=t("td",{style:{"text-align":"left"}},"把二叉搜索树转换为累加树",-1),Om=t("td",{style:{"text-align":"center"}},null,-1),qm={style:{"text-align":"left"}},Lm=t("code",null,"树",-1),Cm=t("code",null,"深度优先搜索",-1),Nm=t("code",null,"二叉搜索树",-1),Pm=t("code",null,"1+",-1),Km=t("td",{style:{"text-align":"left"}},"🟠",-1),Vm={style:{"text-align":"center"}},Bm={href:"https://leetcode.cn/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Tm={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},"543",-1),Um=t("td",{style:{"text-align":"left"}},"二叉树的直径",-1),Am={style:{"text-align":"center"}},Dm={style:{"text-align":"left"}},Wm=t("code",null,"树",-1),Sm=t("code",null,"深度优先搜索",-1),Ym=t("code",null,"二叉树",-1),Fm=t("td",{style:{"text-align":"left"}},"🟢",-1),Hm={style:{"text-align":"center"}},Jm={href:"https://leetcode.cn/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qm={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rm=t("td",{style:{"text-align":"center"}},"545",-1),Zm=t("td",{style:{"text-align":"left"}},"二叉树的边界 🔒",-1),Gm=t("td",{style:{"text-align":"center"}},null,-1),Mm={style:{"text-align":"left"}},Xm=t("code",null,"树",-1),$m=t("code",null,"深度优先搜索",-1),tp=t("code",null,"二叉树",-1),ep=t("td",{style:{"text-align":"left"}},"🟠",-1),op={style:{"text-align":"center"}},lp={href:"https://leetcode.cn/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},sp={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},np=t("td",{style:{"text-align":"center"}},"547",-1),dp=t("td",{style:{"text-align":"left"}},"省份数量",-1),rp=t("td",{style:{"text-align":"center"}},null,-1),_p={style:{"text-align":"left"}},cp=t("code",null,"深度优先搜索",-1),ap=t("code",null,"广度优先搜索",-1),ip=t("code",null,"并查集",-1),hp=t("code",null,"1+",-1),fp=t("td",{style:{"text-align":"left"}},"🟠",-1),gp={style:{"text-align":"center"}},up={href:"https://leetcode.cn/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},mp={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},pp=t("td",{style:{"text-align":"center"}},"549",-1),yp=t("td",{style:{"text-align":"left"}},"二叉树最长连续序列 II 🔒",-1),xp=t("td",{style:{"text-align":"center"}},null,-1),bp={style:{"text-align":"left"}},kp=t("code",null,"树",-1),vp=t("code",null,"深度优先搜索",-1),wp=t("code",null,"二叉树",-1),Ip=t("td",{style:{"text-align":"left"}},"🟠",-1),zp={style:{"text-align":"center"}},jp={href:"https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},Op={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},qp=t("td",{style:{"text-align":"center"}},"559",-1),Lp=t("td",{style:{"text-align":"left"}},"N 叉树的最大深度",-1),Cp={style:{"text-align":"center"}},Np={style:{"text-align":"left"}},Pp=t("code",null,"树",-1),Kp=t("code",null,"深度优先搜索",-1),Vp=t("code",null,"广度优先搜索",-1),Bp=t("td",{style:{"text-align":"left"}},"🟢",-1),Tp={style:{"text-align":"center"}},Ep={href:"https://leetcode.cn/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Up={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Ap=t("td",{style:{"text-align":"center"}},"563",-1),Dp=t("td",{style:{"text-align":"left"}},"二叉树的坡度",-1),Wp=t("td",{style:{"text-align":"center"}},null,-1),Sp={style:{"text-align":"left"}},Yp=t("code",null,"树",-1),Fp=t("code",null,"深度优先搜索",-1),Hp=t("code",null,"二叉树",-1),Jp=t("td",{style:{"text-align":"left"}},"🟢",-1),Qp={style:{"text-align":"center"}},Rp={href:"https://leetcode.cn/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Zp={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Gp=t("td",{style:{"text-align":"center"}},"565",-1),Mp=t("td",{style:{"text-align":"left"}},"数组嵌套",-1),Xp=t("td",{style:{"text-align":"center"}},null,-1),$p={style:{"text-align":"left"}},ty=t("code",null,"深度优先搜索",-1),ey=t("code",null,"数组",-1),oy=t("td",{style:{"text-align":"left"}},"🟠",-1),ly={style:{"text-align":"center"}},sy={href:"https://leetcode.cn/problems/array-nesting",target:"_blank",rel:"noopener noreferrer"},ny={href:"https://leetcode.com/problems/array-nesting",target:"_blank",rel:"noopener noreferrer"},dy=t("td",{style:{"text-align":"center"}},"572",-1),ry=t("td",{style:{"text-align":"left"}},"另一棵树的子树",-1),_y={style:{"text-align":"center"}},cy={style:{"text-align":"left"}},ay=t("code",null,"树",-1),iy=t("code",null,"深度优先搜索",-1),hy=t("code",null,"二叉树",-1),fy=t("code",null,"2+",-1),gy=t("td",{style:{"text-align":"left"}},"🟢",-1),uy={style:{"text-align":"center"}},my={href:"https://leetcode.cn/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},py={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},yy=t("td",{style:{"text-align":"center"}},"582",-1),xy=t("td",{style:{"text-align":"left"}},"杀掉进程 🔒",-1),by=t("td",{style:{"text-align":"center"}},null,-1),ky={style:{"text-align":"left"}},vy=t("code",null,"树",-1),wy=t("code",null,"深度优先搜索",-1),Iy=t("code",null,"广度优先搜索",-1),zy=t("code",null,"2+",-1),jy=t("td",{style:{"text-align":"left"}},"🟠",-1),Oy={style:{"text-align":"center"}},qy={href:"https://leetcode.cn/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},Ly={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},Cy=t("td",{style:{"text-align":"center"}},"589",-1),Ny=t("td",{style:{"text-align":"left"}},"N 叉树的前序遍历",-1),Py={style:{"text-align":"center"}},Ky={style:{"text-align":"left"}},Vy=t("code",null,"栈",-1),By=t("code",null,"树",-1),Ty=t("code",null,"深度优先搜索",-1),Ey=t("td",{style:{"text-align":"left"}},"🟢",-1),Uy={style:{"text-align":"center"}},Ay={href:"https://leetcode.cn/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Dy={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Wy=t("td",{style:{"text-align":"center"}},"590",-1),Sy=t("td",{style:{"text-align":"left"}},"N 叉树的后序遍历",-1),Yy={style:{"text-align":"center"}},Fy={style:{"text-align":"left"}},Hy=t("code",null,"栈",-1),Jy=t("code",null,"树",-1),Qy=t("code",null,"深度优先搜索",-1),Ry=t("td",{style:{"text-align":"left"}},"🟢",-1),Zy={style:{"text-align":"center"}},Gy={href:"https://leetcode.cn/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},My={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Xy=t("td",{style:{"text-align":"center"}},"606",-1),$y=t("td",{style:{"text-align":"left"}},"根据二叉树创建字符串",-1),t2=t("td",{style:{"text-align":"center"}},null,-1),e2={style:{"text-align":"left"}},o2=t("code",null,"树",-1),l2=t("code",null,"深度优先搜索",-1),s2=t("code",null,"字符串",-1),n2=t("code",null,"1+",-1),d2=t("td",{style:{"text-align":"left"}},"🟠",-1),r2={style:{"text-align":"center"}},_2={href:"https://leetcode.cn/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},c2={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},a2=t("td",{style:{"text-align":"center"}},"617",-1),i2=t("td",{style:{"text-align":"left"}},"合并二叉树",-1),h2={style:{"text-align":"center"}},f2={style:{"text-align":"left"}},g2=t("code",null,"树",-1),u2=t("code",null,"深度优先搜索",-1),m2=t("code",null,"广度优先搜索",-1),p2=t("code",null,"1+",-1),y2=t("td",{style:{"text-align":"left"}},"🟢",-1),x2={style:{"text-align":"center"}},b2={href:"https://leetcode.cn/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},k2={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},v2=t("td",{style:{"text-align":"center"}},"623",-1),w2=t("td",{style:{"text-align":"left"}},"在二叉树中增加一行",-1),I2=t("td",{style:{"text-align":"center"}},null,-1),z2={style:{"text-align":"left"}},j2=t("code",null,"树",-1),O2=t("code",null,"深度优先搜索",-1),q2=t("code",null,"广度优先搜索",-1),L2=t("code",null,"1+",-1),C2=t("td",{style:{"text-align":"left"}},"🟠",-1),N2={style:{"text-align":"center"}},P2={href:"https://leetcode.cn/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},K2={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},V2=t("td",{style:{"text-align":"center"}},"637",-1),B2=t("td",{style:{"text-align":"left"}},"二叉树的层平均值",-1),T2={style:{"text-align":"center"}},E2={style:{"text-align":"left"}},U2=t("code",null,"树",-1),A2=t("code",null,"深度优先搜索",-1),D2=t("code",null,"广度优先搜索",-1),W2=t("code",null,"1+",-1),S2=t("td",{style:{"text-align":"left"}},"🟢",-1),Y2={style:{"text-align":"center"}},F2={href:"https://leetcode.cn/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},H2={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},J2=t("td",{style:{"text-align":"center"}},"642",-1),Q2=t("td",{style:{"text-align":"left"}},"设计搜索自动补全系统 🔒",-1),R2=t("td",{style:{"text-align":"center"}},null,-1),Z2={style:{"text-align":"left"}},G2=t("code",null,"深度优先搜索",-1),M2=t("code",null,"设计",-1),X2=t("code",null,"字典树",-1),$2=t("code",null,"4+",-1),t3=t("td",{style:{"text-align":"left"}},"🔴",-1),e3={style:{"text-align":"center"}},o3={href:"https://leetcode.cn/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},l3={href:"https://leetcode.com/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},s3=t("td",{style:{"text-align":"center"}},"652",-1),n3=t("td",{style:{"text-align":"left"}},"寻找重复的子树",-1),d3=t("td",{style:{"text-align":"center"}},null,-1),r3={style:{"text-align":"left"}},_3=t("code",null,"树",-1),c3=t("code",null,"深度优先搜索",-1),a3=t("code",null,"哈希表",-1),i3=t("code",null,"1+",-1),h3=t("td",{style:{"text-align":"left"}},"🟠",-1),f3={style:{"text-align":"center"}},g3={href:"https://leetcode.cn/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},u3={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},m3=t("td",{style:{"text-align":"center"}},"653",-1),p3=t("td",{style:{"text-align":"left"}},"两数之和 IV - 输入二叉搜索树",-1),y3=t("td",{style:{"text-align":"center"}},null,-1),x3={style:{"text-align":"left"}},b3=t("code",null,"树",-1),k3=t("code",null,"深度优先搜索",-1),v3=t("code",null,"广度优先搜索",-1),w3=t("code",null,"4+",-1),I3=t("td",{style:{"text-align":"left"}},"🟢",-1),z3={style:{"text-align":"center"}},j3={href:"https://leetcode.cn/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},O3={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},q3=t("td",{style:{"text-align":"center"}},"655",-1),L3=t("td",{style:{"text-align":"left"}},"输出二叉树",-1),C3=t("td",{style:{"text-align":"center"}},null,-1),N3={style:{"text-align":"left"}},P3=t("code",null,"树",-1),K3=t("code",null,"深度优先搜索",-1),V3=t("code",null,"广度优先搜索",-1),B3=t("code",null,"1+",-1),T3=t("td",{style:{"text-align":"left"}},"🟠",-1),E3={style:{"text-align":"center"}},U3={href:"https://leetcode.cn/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},A3={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},D3=t("td",{style:{"text-align":"center"}},"662",-1),W3=t("td",{style:{"text-align":"left"}},"二叉树最大宽度",-1),S3={style:{"text-align":"center"}},Y3={style:{"text-align":"left"}},F3=t("code",null,"树",-1),H3=t("code",null,"深度优先搜索",-1),J3=t("code",null,"广度优先搜索",-1),Q3=t("code",null,"1+",-1),R3=t("td",{style:{"text-align":"left"}},"🟠",-1),Z3={style:{"text-align":"center"}},G3={href:"https://leetcode.cn/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},M3={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},X3=t("td",{style:{"text-align":"center"}},"663",-1),$3=t("td",{style:{"text-align":"left"}},"均匀树划分 🔒",-1),tx=t("td",{style:{"text-align":"center"}},null,-1),ex={style:{"text-align":"left"}},ox=t("code",null,"树",-1),lx=t("code",null,"深度优先搜索",-1),sx=t("code",null,"二叉树",-1),nx=t("td",{style:{"text-align":"left"}},"🟠",-1),dx={style:{"text-align":"center"}},rx={href:"https://leetcode.cn/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},_x={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},cx=t("td",{style:{"text-align":"center"}},"666",-1),ax=t("td",{style:{"text-align":"left"}},"路径总和 IV 🔒",-1),ix=t("td",{style:{"text-align":"center"}},null,-1),hx={style:{"text-align":"left"}},fx=t("code",null,"树",-1),gx=t("code",null,"深度优先搜索",-1),ux=t("code",null,"数组",-1),mx=t("code",null,"2+",-1),px=t("td",{style:{"text-align":"left"}},"🟠",-1),yx={style:{"text-align":"center"}},xx={href:"https://leetcode.cn/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},bx={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},kx=t("td",{style:{"text-align":"center"}},"669",-1),vx=t("td",{style:{"text-align":"left"}},"修剪二叉搜索树",-1),wx=t("td",{style:{"text-align":"center"}},null,-1),Ix={style:{"text-align":"left"}},zx=t("code",null,"树",-1),jx=t("code",null,"深度优先搜索",-1),Ox=t("code",null,"二叉搜索树",-1),qx=t("code",null,"1+",-1),Lx=t("td",{style:{"text-align":"left"}},"🟠",-1),Cx={style:{"text-align":"center"}},Nx={href:"https://leetcode.cn/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Px={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Kx=t("td",{style:{"text-align":"center"}},"671",-1),Vx=t("td",{style:{"text-align":"left"}},"二叉树中第二小的节点",-1),Bx=t("td",{style:{"text-align":"center"}},null,-1),Tx={style:{"text-align":"left"}},Ex=t("code",null,"树",-1),Ux=t("code",null,"深度优先搜索",-1),Ax=t("code",null,"二叉树",-1),Dx=t("td",{style:{"text-align":"left"}},"🟢",-1),Wx={style:{"text-align":"center"}},Sx={href:"https://leetcode.cn/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yx={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Fx=t("td",{style:{"text-align":"center"}},"672",-1),Hx=t("td",{style:{"text-align":"left"}},"灯泡开关 Ⅱ",-1),Jx=t("td",{style:{"text-align":"center"}},null,-1),Qx={style:{"text-align":"left"}},Rx=t("code",null,"位运算",-1),Zx=t("code",null,"深度优先搜索",-1),Gx=t("code",null,"广度优先搜索",-1),Mx=t("code",null,"1+",-1),Xx=t("td",{style:{"text-align":"left"}},"🟠",-1),$x={style:{"text-align":"center"}},tb={href:"https://leetcode.cn/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},eb={href:"https://leetcode.com/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},ob=t("td",{style:{"text-align":"center"}},"676",-1),lb=t("td",{style:{"text-align":"left"}},"实现一个魔法字典",-1),sb=t("td",{style:{"text-align":"center"}},null,-1),nb={style:{"text-align":"left"}},db=t("code",null,"深度优先搜索",-1),rb=t("code",null,"设计",-1),_b=t("code",null,"字典树",-1),cb=t("code",null,"2+",-1),ab=t("td",{style:{"text-align":"left"}},"🟠",-1),ib={style:{"text-align":"center"}},hb={href:"https://leetcode.cn/problems/implement-magic-dictionary",target:"_blank",rel:"noopener noreferrer"},fb={href:"https://leetcode.com/problems/implement-magic-dictionary",target:"_blank",rel:"noopener noreferrer"},gb=t("td",{style:{"text-align":"center"}},"684",-1),ub=t("td",{style:{"text-align":"left"}},"冗余连接",-1),mb=t("td",{style:{"text-align":"center"}},null,-1),pb={style:{"text-align":"left"}},yb=t("code",null,"深度优先搜索",-1),xb=t("code",null,"广度优先搜索",-1),bb=t("code",null,"并查集",-1),kb=t("code",null,"1+",-1),vb=t("td",{style:{"text-align":"left"}},"🟠",-1),wb={style:{"text-align":"center"}},Ib={href:"https://leetcode.cn/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},zb={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},jb=t("td",{style:{"text-align":"center"}},"685",-1),Ob=t("td",{style:{"text-align":"left"}},"冗余连接 II",-1),qb=t("td",{style:{"text-align":"center"}},null,-1),Lb={style:{"text-align":"left"}},Cb=t("code",null,"深度优先搜索",-1),Nb=t("code",null,"广度优先搜索",-1),Pb=t("code",null,"并查集",-1),Kb=t("code",null,"1+",-1),Vb=t("td",{style:{"text-align":"left"}},"🔴",-1),Bb={style:{"text-align":"center"}},Tb={href:"https://leetcode.cn/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Eb={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Ub=t("td",{style:{"text-align":"center"}},"687",-1),Ab=t("td",{style:{"text-align":"left"}},"最长同值路径",-1),Db=t("td",{style:{"text-align":"center"}},null,-1),Wb={style:{"text-align":"left"}},Sb=t("code",null,"树",-1),Yb=t("code",null,"深度优先搜索",-1),Fb=t("code",null,"二叉树",-1),Hb=t("td",{style:{"text-align":"left"}},"🟠",-1),Jb={style:{"text-align":"center"}},Qb={href:"https://leetcode.cn/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Rb={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Zb=t("td",{style:{"text-align":"center"}},"690",-1),Gb=t("td",{style:{"text-align":"left"}},"员工的重要性",-1),Mb=t("td",{style:{"text-align":"center"}},null,-1),Xb={style:{"text-align":"left"}},$b=t("code",null,"树",-1),t4=t("code",null,"深度优先搜索",-1),e4=t("code",null,"广度优先搜索",-1),o4=t("code",null,"2+",-1),l4=t("td",{style:{"text-align":"left"}},"🟠",-1),s4={style:{"text-align":"center"}},n4={href:"https://leetcode.cn/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},d4={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},r4=t("td",{style:{"text-align":"center"}},"694",-1),_4=t("td",{style:{"text-align":"left"}},"不同岛屿的数量 🔒",-1),c4=t("td",{style:{"text-align":"center"}},null,-1),a4={style:{"text-align":"left"}},i4=t("code",null,"深度优先搜索",-1),h4=t("code",null,"广度优先搜索",-1),f4=t("code",null,"并查集",-1),g4=t("code",null,"2+",-1),u4=t("td",{style:{"text-align":"left"}},"🟠",-1),m4={style:{"text-align":"center"}},p4={href:"https://leetcode.cn/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},y4={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},x4=t("td",{style:{"text-align":"center"}},"695",-1),b4=t("td",{style:{"text-align":"left"}},"岛屿的最大面积",-1),k4={style:{"text-align":"center"}},v4={style:{"text-align":"left"}},w4=t("code",null,"深度优先搜索",-1),I4=t("code",null,"广度优先搜索",-1),z4=t("code",null,"并查集",-1),j4=t("code",null,"2+",-1),O4=t("td",{style:{"text-align":"left"}},"🟠",-1),q4={style:{"text-align":"center"}},L4={href:"https://leetcode.cn/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},C4={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},N4=t("td",{style:{"text-align":"center"}},"711",-1),P4=t("td",{style:{"text-align":"left"}},"不同岛屿的数量 II 🔒",-1),K4=t("td",{style:{"text-align":"center"}},null,-1),V4={style:{"text-align":"left"}},B4=t("code",null,"深度优先搜索",-1),T4=t("code",null,"广度优先搜索",-1),E4=t("code",null,"并查集",-1),U4=t("code",null,"2+",-1),A4=t("td",{style:{"text-align":"left"}},"🔴",-1),D4={style:{"text-align":"center"}},W4={href:"https://leetcode.cn/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},S4={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},Y4=t("td",{style:{"text-align":"center"}},"721",-1),F4=t("td",{style:{"text-align":"left"}},"账户合并",-1),H4=t("td",{style:{"text-align":"center"}},null,-1),J4={style:{"text-align":"left"}},Q4=t("code",null,"深度优先搜索",-1),R4=t("code",null,"广度优先搜索",-1),Z4=t("code",null,"并查集",-1),G4=t("code",null,"4+",-1),M4=t("td",{style:{"text-align":"left"}},"🟠",-1),X4={style:{"text-align":"center"}},$4={href:"https://leetcode.cn/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},t0={href:"https://leetcode.com/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},e0=t("td",{style:{"text-align":"center"}},"733",-1),o0=t("td",{style:{"text-align":"left"}},"图像渲染",-1),l0=t("td",{style:{"text-align":"center"}},null,-1),s0={style:{"text-align":"left"}},n0=t("code",null,"深度优先搜索",-1),d0=t("code",null,"广度优先搜索",-1),r0=t("code",null,"数组",-1),_0=t("code",null,"1+",-1),c0=t("td",{style:{"text-align":"left"}},"🟢",-1),a0={style:{"text-align":"center"}},i0={href:"https://leetcode.cn/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},h0={href:"https://leetcode.com/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},f0=t("td",{style:{"text-align":"center"}},"737",-1),g0=t("td",{style:{"text-align":"left"}},"句子相似性 II 🔒",-1),u0=t("td",{style:{"text-align":"center"}},null,-1),m0={style:{"text-align":"left"}},p0=t("code",null,"深度优先搜索",-1),y0=t("code",null,"广度优先搜索",-1),x0=t("code",null,"并查集",-1),b0=t("code",null,"3+",-1),k0=t("td",{style:{"text-align":"left"}},"🟠",-1),v0={style:{"text-align":"center"}},w0={href:"https://leetcode.cn/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},I0={href:"https://leetcode.com/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},z0=t("td",{style:{"text-align":"center"}},"742",-1),j0=t("td",{style:{"text-align":"left"}},"二叉树最近的叶节点 🔒",-1),O0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},L0=t("code",null,"树",-1),C0=t("code",null,"深度优先搜索",-1),N0=t("code",null,"广度优先搜索",-1),P0=t("code",null,"1+",-1),K0=t("td",{style:{"text-align":"left"}},"🟠",-1),V0={style:{"text-align":"center"}},B0={href:"https://leetcode.cn/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},T0={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},E0=t("td",{style:{"text-align":"center"}},"743",-1),U0=t("td",{style:{"text-align":"left"}},"网络延迟时间",-1),A0=t("td",{style:{"text-align":"center"}},null,-1),D0={style:{"text-align":"left"}},W0=t("code",null,"深度优先搜索",-1),S0=t("code",null,"广度优先搜索",-1),Y0=t("code",null,"图",-1),F0=t("code",null,"2+",-1),H0=t("td",{style:{"text-align":"left"}},"🟠",-1),J0={style:{"text-align":"center"}},Q0={href:"https://leetcode.cn/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},R0={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},Z0=t("td",{style:{"text-align":"center"}},"749",-1),G0=t("td",{style:{"text-align":"left"}},"隔离病毒",-1),M0=t("td",{style:{"text-align":"center"}},null,-1),X0={style:{"text-align":"left"}},$0=t("code",null,"深度优先搜索",-1),t6=t("code",null,"广度优先搜索",-1),e6=t("code",null,"数组",-1),o6=t("code",null,"2+",-1),l6=t("td",{style:{"text-align":"left"}},"🔴",-1),s6={style:{"text-align":"center"}},n6={href:"https://leetcode.cn/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},d6={href:"https://leetcode.com/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},r6=t("td",{style:{"text-align":"center"}},"753",-1),_6=t("td",{style:{"text-align":"left"}},"破解保险箱",-1),c6=t("td",{style:{"text-align":"center"}},null,-1),a6={style:{"text-align":"left"}},i6=t("code",null,"深度优先搜索",-1),h6=t("code",null,"图",-1),f6=t("code",null,"欧拉回路",-1),g6=t("td",{style:{"text-align":"left"}},"🔴",-1),u6={style:{"text-align":"center"}},m6={href:"https://leetcode.cn/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},p6={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},y6=t("td",{style:{"text-align":"center"}},"756",-1),x6=t("td",{style:{"text-align":"left"}},"金字塔转换矩阵",-1),b6=t("td",{style:{"text-align":"center"}},null,-1),k6={style:{"text-align":"left"}},v6=t("code",null,"位运算",-1),w6=t("code",null,"深度优先搜索",-1),I6=t("code",null,"广度优先搜索",-1),z6=t("td",{style:{"text-align":"left"}},"🟠",-1),j6={style:{"text-align":"center"}},O6={href:"https://leetcode.cn/problems/pyramid-transition-matrix",target:"_blank",rel:"noopener noreferrer"},q6={href:"https://leetcode.com/problems/pyramid-transition-matrix",target:"_blank",rel:"noopener noreferrer"},L6=t("td",{style:{"text-align":"center"}},"765",-1),C6=t("td",{style:{"text-align":"left"}},"情侣牵手",-1),N6=t("td",{style:{"text-align":"center"}},null,-1),P6={style:{"text-align":"left"}},K6=t("code",null,"贪心",-1),V6=t("code",null,"深度优先搜索",-1),B6=t("code",null,"广度优先搜索",-1),T6=t("code",null,"2+",-1),E6=t("td",{style:{"text-align":"left"}},"🔴",-1),U6={style:{"text-align":"center"}},A6={href:"https://leetcode.cn/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},D6={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},W6=t("td",{style:{"text-align":"center"}},"778",-1),S6=t("td",{style:{"text-align":"left"}},"水位上升的泳池中游泳",-1),Y6=t("td",{style:{"text-align":"center"}},null,-1),F6={style:{"text-align":"left"}},H6=t("code",null,"深度优先搜索",-1),J6=t("code",null,"广度优先搜索",-1),Q6=t("code",null,"并查集",-1),R6=t("code",null,"4+",-1),Z6=t("td",{style:{"text-align":"left"}},"🔴",-1),G6={style:{"text-align":"center"}},M6={href:"https://leetcode.cn/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},X6={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},$6=t("td",{style:{"text-align":"center"}},"783",-1),t5=t("td",{style:{"text-align":"left"}},"二叉搜索树节点最小距离",-1),e5={style:{"text-align":"center"}},o5={style:{"text-align":"left"}},l5=t("code",null,"树",-1),s5=t("code",null,"深度优先搜索",-1),n5=t("code",null,"广度优先搜索",-1),d5=t("code",null,"2+",-1),r5=t("td",{style:{"text-align":"left"}},"🟢",-1),_5={style:{"text-align":"center"}},c5={href:"https://leetcode.cn/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},a5={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},i5=t("td",{style:{"text-align":"center"}},"785",-1),h5=t("td",{style:{"text-align":"left"}},"判断二分图",-1),f5=t("td",{style:{"text-align":"center"}},null,-1),g5={style:{"text-align":"left"}},u5=t("code",null,"深度优先搜索",-1),m5=t("code",null,"广度优先搜索",-1),p5=t("code",null,"并查集",-1),y5=t("code",null,"1+",-1),x5=t("td",{style:{"text-align":"left"}},"🟠",-1),b5={style:{"text-align":"center"}},k5={href:"https://leetcode.cn/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},v5={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},w5=t("td",{style:{"text-align":"center"}},"787",-1),I5=t("td",{style:{"text-align":"left"}},"K 站中转内最便宜的航班",-1),z5=t("td",{style:{"text-align":"center"}},null,-1),j5={style:{"text-align":"left"}},O5=t("code",null,"深度优先搜索",-1),q5=t("code",null,"广度优先搜索",-1),L5=t("code",null,"图",-1),C5=t("code",null,"3+",-1),N5=t("td",{style:{"text-align":"left"}},"🟠",-1),P5={style:{"text-align":"center"}},K5={href:"https://leetcode.cn/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},V5={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},B5=t("td",{style:{"text-align":"center"}},"797",-1),T5=t("td",{style:{"text-align":"left"}},"所有可能的路径",-1),E5=t("td",{style:{"text-align":"center"}},null,-1),U5={style:{"text-align":"left"}},A5=t("code",null,"深度优先搜索",-1),D5=t("code",null,"广度优先搜索",-1),W5=t("code",null,"图",-1),S5=t("code",null,"1+",-1),Y5=t("td",{style:{"text-align":"left"}},"🟠",-1),F5={style:{"text-align":"center"}},H5={href:"https://leetcode.cn/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},J5={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},Q5=t("td",{style:{"text-align":"center"}},"802",-1),R5=t("td",{style:{"text-align":"left"}},"找到最终的安全状态",-1),Z5=t("td",{style:{"text-align":"center"}},null,-1),G5={style:{"text-align":"left"}},M5=t("code",null,"深度优先搜索",-1),X5=t("code",null,"广度优先搜索",-1),$5=t("code",null,"图",-1),t7=t("code",null,"1+",-1),e7=t("td",{style:{"text-align":"left"}},"🟠",-1),o7={style:{"text-align":"center"}},l7={href:"https://leetcode.cn/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},s7={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},n7=t("td",{style:{"text-align":"center"}},"814",-1),d7=t("td",{style:{"text-align":"left"}},"二叉树剪枝",-1),r7=t("td",{style:{"text-align":"center"}},null,-1),_7={style:{"text-align":"left"}},c7=t("code",null,"树",-1),a7=t("code",null,"深度优先搜索",-1),i7=t("code",null,"二叉树",-1),h7=t("td",{style:{"text-align":"left"}},"🟠",-1),f7={style:{"text-align":"center"}},g7={href:"https://leetcode.cn/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},u7={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},m7=t("td",{style:{"text-align":"center"}},"827",-1),p7=t("td",{style:{"text-align":"left"}},"最大人工岛",-1),y7=t("td",{style:{"text-align":"center"}},null,-1),x7={style:{"text-align":"left"}},b7=t("code",null,"深度优先搜索",-1),k7=t("code",null,"广度优先搜索",-1),v7=t("code",null,"并查集",-1),w7=t("code",null,"2+",-1),I7=t("td",{style:{"text-align":"left"}},"🔴",-1),z7={style:{"text-align":"center"}},j7={href:"https://leetcode.cn/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},O7={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},q7=t("td",{style:{"text-align":"center"}},"834",-1),L7=t("td",{style:{"text-align":"left"}},"树中距离之和",-1),C7=t("td",{style:{"text-align":"center"}},null,-1),N7={style:{"text-align":"left"}},P7=t("code",null,"树",-1),K7=t("code",null,"深度优先搜索",-1),V7=t("code",null,"图",-1),B7=t("code",null,"1+",-1),T7=t("td",{style:{"text-align":"left"}},"🔴",-1),E7={style:{"text-align":"center"}},U7={href:"https://leetcode.cn/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},A7={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},D7=t("td",{style:{"text-align":"center"}},"839",-1),W7=t("td",{style:{"text-align":"left"}},"相似字符串组",-1),S7=t("td",{style:{"text-align":"center"}},null,-1),Y7={style:{"text-align":"left"}},F7=t("code",null,"深度优先搜索",-1),H7=t("code",null,"广度优先搜索",-1),J7=t("code",null,"并查集",-1),Q7=t("code",null,"3+",-1),R7=t("td",{style:{"text-align":"left"}},"🔴",-1),Z7={style:{"text-align":"center"}},G7={href:"https://leetcode.cn/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},M7={href:"https://leetcode.com/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},X7=t("td",{style:{"text-align":"center"}},"841",-1),$7=t("td",{style:{"text-align":"left"}},"钥匙和房间",-1),t9=t("td",{style:{"text-align":"center"}},null,-1),e9={style:{"text-align":"left"}},o9=t("code",null,"深度优先搜索",-1),l9=t("code",null,"广度优先搜索",-1),s9=t("code",null,"图",-1),n9=t("td",{style:{"text-align":"left"}},"🟠",-1),d9={style:{"text-align":"center"}},r9={href:"https://leetcode.cn/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},_9={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},c9=t("td",{style:{"text-align":"center"}},"851",-1),a9=t("td",{style:{"text-align":"left"}},"喧闹和富有",-1),i9=t("td",{style:{"text-align":"center"}},null,-1),h9={style:{"text-align":"left"}},f9=t("code",null,"深度优先搜索",-1),g9=t("code",null,"图",-1),u9=t("code",null,"拓扑排序",-1),m9=t("code",null,"1+",-1),p9=t("td",{style:{"text-align":"left"}},"🟠",-1),y9={style:{"text-align":"center"}},x9={href:"https://leetcode.cn/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},b9={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},k9=t("td",{style:{"text-align":"center"}},"863",-1),v9=t("td",{style:{"text-align":"left"}},"二叉树中所有距离为 K 的结点",-1),w9=t("td",{style:{"text-align":"center"}},null,-1),I9={style:{"text-align":"left"}},z9=t("code",null,"树",-1),j9=t("code",null,"深度优先搜索",-1),O9=t("code",null,"广度优先搜索",-1),q9=t("code",null,"2+",-1),L9=t("td",{style:{"text-align":"left"}},"🟠",-1),C9={style:{"text-align":"center"}},N9={href:"https://leetcode.cn/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},P9={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},K9=t("td",{style:{"text-align":"center"}},"865",-1),V9=t("td",{style:{"text-align":"left"}},"具有所有最深节点的最小子树",-1),B9=t("td",{style:{"text-align":"center"}},null,-1),T9={style:{"text-align":"left"}},E9=t("code",null,"树",-1),U9=t("code",null,"深度优先搜索",-1),A9=t("code",null,"广度优先搜索",-1),D9=t("code",null,"2+",-1),W9=t("td",{style:{"text-align":"left"}},"🟠",-1),S9={style:{"text-align":"center"}},Y9={href:"https://leetcode.cn/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},F9={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},H9=t("td",{style:{"text-align":"center"}},"872",-1),J9=t("td",{style:{"text-align":"left"}},"叶子相似的树",-1),Q9={style:{"text-align":"center"}},R9={style:{"text-align":"left"}},Z9=t("code",null,"树",-1),G9=t("code",null,"深度优先搜索",-1),M9=t("code",null,"二叉树",-1),X9=t("td",{style:{"text-align":"left"}},"🟢",-1),$9={style:{"text-align":"center"}},t8={href:"https://leetcode.cn/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},e8={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},o8=t("td",{style:{"text-align":"center"}},"886",-1),l8=t("td",{style:{"text-align":"left"}},"可能的二分法",-1),s8=t("td",{style:{"text-align":"center"}},null,-1),n8={style:{"text-align":"left"}},d8=t("code",null,"深度优先搜索",-1),r8=t("code",null,"广度优先搜索",-1),_8=t("code",null,"并查集",-1),c8=t("code",null,"1+",-1),a8=t("td",{style:{"text-align":"left"}},"🟠",-1),i8={style:{"text-align":"center"}},h8={href:"https://leetcode.cn/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},f8={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},g8=t("td",{style:{"text-align":"center"}},"897",-1),u8=t("td",{style:{"text-align":"left"}},"递增顺序搜索树",-1),m8=t("td",{style:{"text-align":"center"}},null,-1),p8={style:{"text-align":"left"}},y8=t("code",null,"栈",-1),x8=t("code",null,"树",-1),b8=t("code",null,"深度优先搜索",-1),k8=t("code",null,"2+",-1),v8=t("td",{style:{"text-align":"left"}},"🟢",-1),w8={style:{"text-align":"center"}},I8={href:"https://leetcode.cn/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},z8={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},j8=t("td",{style:{"text-align":"center"}},"924",-1),O8=t("td",{style:{"text-align":"left"}},"尽量减少恶意软件的传播",-1),q8=t("td",{style:{"text-align":"center"}},null,-1),L8={style:{"text-align":"left"}},C8=t("code",null,"深度优先搜索",-1),N8=t("code",null,"广度优先搜索",-1),P8=t("code",null,"并查集",-1),K8=t("code",null,"3+",-1),V8=t("td",{style:{"text-align":"left"}},"🔴",-1),B8={style:{"text-align":"center"}},T8={href:"https://leetcode.cn/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},E8={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},U8=t("td",{style:{"text-align":"center"}},"928",-1),A8=t("td",{style:{"text-align":"left"}},"尽量减少恶意软件的传播 II",-1),D8=t("td",{style:{"text-align":"center"}},null,-1),W8={style:{"text-align":"left"}},S8=t("code",null,"深度优先搜索",-1),Y8=t("code",null,"广度优先搜索",-1),F8=t("code",null,"并查集",-1),H8=t("code",null,"3+",-1),J8=t("td",{style:{"text-align":"left"}},"🔴",-1),Q8={style:{"text-align":"center"}},R8={href:"https://leetcode.cn/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},Z8={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},G8=t("td",{style:{"text-align":"center"}},"934",-1),M8=t("td",{style:{"text-align":"left"}},"最短的桥",-1),X8=t("td",{style:{"text-align":"center"}},null,-1),$8={style:{"text-align":"left"}},tk=t("code",null,"深度优先搜索",-1),ek=t("code",null,"广度优先搜索",-1),ok=t("code",null,"数组",-1),lk=t("code",null,"1+",-1),sk=t("td",{style:{"text-align":"left"}},"🟠",-1),nk={style:{"text-align":"center"}},dk={href:"https://leetcode.cn/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},rk={href:"https://leetcode.com/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},_k=t("td",{style:{"text-align":"center"}},"938",-1),ck=t("td",{style:{"text-align":"left"}},"二叉搜索树的范围和",-1),ak=t("td",{style:{"text-align":"center"}},null,-1),ik={style:{"text-align":"left"}},hk=t("code",null,"树",-1),fk=t("code",null,"深度优先搜索",-1),gk=t("code",null,"二叉搜索树",-1),uk=t("code",null,"1+",-1),mk=t("td",{style:{"text-align":"left"}},"🟢",-1),pk={style:{"text-align":"center"}},yk={href:"https://leetcode.cn/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},xk={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},bk=t("td",{style:{"text-align":"center"}},"947",-1),kk=t("td",{style:{"text-align":"left"}},"移除最多的同行或同列石头",-1),vk=t("td",{style:{"text-align":"center"}},null,-1),wk={style:{"text-align":"left"}},Ik=t("code",null,"深度优先搜索",-1),zk=t("code",null,"并查集",-1),jk=t("code",null,"图",-1),Ok=t("code",null,"1+",-1),qk=t("td",{style:{"text-align":"left"}},"🟠",-1),Lk={style:{"text-align":"center"}},Ck={href:"https://leetcode.cn/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},Nk={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},Pk=t("td",{style:{"text-align":"center"}},"951",-1),Kk=t("td",{style:{"text-align":"left"}},"翻转等价二叉树",-1),Vk={style:{"text-align":"center"}},Bk={style:{"text-align":"left"}},Tk=t("code",null,"树",-1),Ek=t("code",null,"深度优先搜索",-1),Uk=t("code",null,"二叉树",-1),Ak=t("td",{style:{"text-align":"left"}},"🟠",-1),Dk={style:{"text-align":"center"}},Wk={href:"https://leetcode.cn/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Sk={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Yk=t("td",{style:{"text-align":"center"}},"959",-1),Fk=t("td",{style:{"text-align":"left"}},"由斜杠划分区域",-1),Hk=t("td",{style:{"text-align":"center"}},null,-1),Jk={style:{"text-align":"left"}},Qk=t("code",null,"深度优先搜索",-1),Rk=t("code",null,"广度优先搜索",-1),Zk=t("code",null,"并查集",-1),Gk=t("code",null,"3+",-1),Mk=t("td",{style:{"text-align":"left"}},"🟠",-1),Xk={style:{"text-align":"center"}},$k={href:"https://leetcode.cn/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},tv={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},ev=t("td",{style:{"text-align":"center"}},"965",-1),ov=t("td",{style:{"text-align":"left"}},"单值二叉树",-1),lv=t("td",{style:{"text-align":"center"}},null,-1),sv={style:{"text-align":"left"}},nv=t("code",null,"树",-1),dv=t("code",null,"深度优先搜索",-1),rv=t("code",null,"广度优先搜索",-1),_v=t("code",null,"1+",-1),cv=t("td",{style:{"text-align":"left"}},"🟢",-1),av={style:{"text-align":"center"}},iv={href:"https://leetcode.cn/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},hv={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},fv=t("td",{style:{"text-align":"center"}},"968",-1),gv=t("td",{style:{"text-align":"left"}},"监控二叉树",-1),uv=t("td",{style:{"text-align":"center"}},null,-1),mv={style:{"text-align":"left"}},pv=t("code",null,"树",-1),yv=t("code",null,"深度优先搜索",-1),xv=t("code",null,"动态规划",-1),bv=t("code",null,"1+",-1),kv=t("td",{style:{"text-align":"left"}},"🔴",-1),vv={style:{"text-align":"center"}},wv={href:"https://leetcode.cn/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},Iv={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},zv=t("td",{style:{"text-align":"center"}},"971",-1),jv=t("td",{style:{"text-align":"left"}},"翻转二叉树以匹配先序遍历",-1),Ov=t("td",{style:{"text-align":"center"}},null,-1),qv={style:{"text-align":"left"}},Lv=t("code",null,"树",-1),Cv=t("code",null,"深度优先搜索",-1),Nv=t("code",null,"二叉树",-1),Pv=t("td",{style:{"text-align":"left"}},"🟠",-1),Kv={style:{"text-align":"center"}},Vv={href:"https://leetcode.cn/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Bv={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Tv=t("td",{style:{"text-align":"center"}},"979",-1),Ev=t("td",{style:{"text-align":"left"}},"在二叉树中分配硬币",-1),Uv=t("td",{style:{"text-align":"center"}},null,-1),Av={style:{"text-align":"left"}},Dv=t("code",null,"树",-1),Wv=t("code",null,"深度优先搜索",-1),Sv=t("code",null,"二叉树",-1),Yv=t("td",{style:{"text-align":"left"}},"🟠",-1),Fv={style:{"text-align":"center"}},Hv={href:"https://leetcode.cn/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jv={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qv=t("td",{style:{"text-align":"center"}},"987",-1),Rv=t("td",{style:{"text-align":"left"}},"二叉树的垂序遍历",-1),Zv=t("td",{style:{"text-align":"center"}},null,-1),Gv={style:{"text-align":"left"}},Mv=t("code",null,"树",-1),Xv=t("code",null,"深度优先搜索",-1),$v=t("code",null,"广度优先搜索",-1),tw=t("code",null,"3+",-1),ew=t("td",{style:{"text-align":"left"}},"🔴",-1),ow={style:{"text-align":"center"}},lw={href:"https://leetcode.cn/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},sw={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},nw=t("td",{style:{"text-align":"center"}},"988",-1),dw=t("td",{style:{"text-align":"left"}},"从叶结点开始的最小字符串",-1),rw=t("td",{style:{"text-align":"center"}},null,-1),_w={style:{"text-align":"left"}},cw=t("code",null,"树",-1),aw=t("code",null,"深度优先搜索",-1),iw=t("code",null,"字符串",-1),hw=t("code",null,"2+",-1),fw=t("td",{style:{"text-align":"left"}},"🟠",-1),gw={style:{"text-align":"center"}},uw={href:"https://leetcode.cn/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},mw={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},pw=t("td",{style:{"text-align":"center"}},"993",-1),yw=t("td",{style:{"text-align":"left"}},"二叉树的堂兄弟节点",-1),xw=t("td",{style:{"text-align":"center"}},null,-1),bw={style:{"text-align":"left"}},kw=t("code",null,"树",-1),vw=t("code",null,"深度优先搜索",-1),ww=t("code",null,"广度优先搜索",-1),Iw=t("code",null,"1+",-1),zw=t("td",{style:{"text-align":"left"}},"🟢",-1),jw={style:{"text-align":"center"}},Ow={href:"https://leetcode.cn/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},qw={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Lw=t("td",{style:{"text-align":"center"}},"1020",-1),Cw=t("td",{style:{"text-align":"left"}},"飞地的数量",-1),Nw=t("td",{style:{"text-align":"center"}},null,-1),Pw={style:{"text-align":"left"}},Kw=t("code",null,"深度优先搜索",-1),Vw=t("code",null,"广度优先搜索",-1),Bw=t("code",null,"并查集",-1),Tw=t("code",null,"2+",-1),Ew=t("td",{style:{"text-align":"left"}},"🟠",-1),Uw={style:{"text-align":"center"}},Aw={href:"https://leetcode.cn/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},Dw={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},Ww=t("td",{style:{"text-align":"center"}},"1022",-1),Sw=t("td",{style:{"text-align":"left"}},"从根到叶的二进制数之和",-1),Yw=t("td",{style:{"text-align":"center"}},null,-1),Fw={style:{"text-align":"left"}},Hw=t("code",null,"树",-1),Jw=t("code",null,"深度优先搜索",-1),Qw=t("code",null,"二叉树",-1),Rw=t("td",{style:{"text-align":"left"}},"🟢",-1),Zw={style:{"text-align":"center"}},Gw={href:"https://leetcode.cn/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Mw={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Xw=t("td",{style:{"text-align":"center"}},"1026",-1),$w=t("td",{style:{"text-align":"left"}},"节点与其祖先之间的最大差值",-1),tI=t("td",{style:{"text-align":"center"}},null,-1),eI={style:{"text-align":"left"}},oI=t("code",null,"树",-1),lI=t("code",null,"深度优先搜索",-1),sI=t("code",null,"二叉树",-1),nI=t("td",{style:{"text-align":"left"}},"🟠",-1),dI={style:{"text-align":"center"}},rI={href:"https://leetcode.cn/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},_I={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},cI=t("td",{style:{"text-align":"center"}},"1028",-1),aI=t("td",{style:{"text-align":"left"}},"从先序遍历还原二叉树",-1),iI=t("td",{style:{"text-align":"center"}},null,-1),hI={style:{"text-align":"left"}},fI=t("code",null,"树",-1),gI=t("code",null,"深度优先搜索",-1),uI=t("code",null,"字符串",-1),mI=t("code",null,"1+",-1),pI=t("td",{style:{"text-align":"left"}},"🔴",-1),yI={style:{"text-align":"center"}},xI={href:"https://leetcode.cn/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},bI={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},kI=t("td",{style:{"text-align":"center"}},"1034",-1),vI=t("td",{style:{"text-align":"left"}},"边界着色",-1),wI=t("td",{style:{"text-align":"center"}},null,-1),II={style:{"text-align":"left"}},zI=t("code",null,"深度优先搜索",-1),jI=t("code",null,"广度优先搜索",-1),OI=t("code",null,"数组",-1),qI=t("code",null,"1+",-1),LI=t("td",{style:{"text-align":"left"}},"🟠",-1),CI={style:{"text-align":"center"}},NI={href:"https://leetcode.cn/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},PI={href:"https://leetcode.com/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},KI=t("td",{style:{"text-align":"center"}},"1036",-1),VI=t("td",{style:{"text-align":"left"}},"逃离大迷宫",-1),BI=t("td",{style:{"text-align":"center"}},null,-1),TI={style:{"text-align":"left"}},EI=t("code",null,"深度优先搜索",-1),UI=t("code",null,"广度优先搜索",-1),AI=t("code",null,"数组",-1),DI=t("code",null,"1+",-1),WI=t("td",{style:{"text-align":"left"}},"🔴",-1),SI={style:{"text-align":"center"}},YI={href:"https://leetcode.cn/problems/escape-a-large-maze",target:"_blank",rel:"noopener noreferrer"},FI={href:"https://leetcode.com/problems/escape-a-large-maze",target:"_blank",rel:"noopener noreferrer"},HI=t("td",{style:{"text-align":"center"}},"1038",-1),JI=t("td",{style:{"text-align":"left"}},"从二叉搜索树到更大和树",-1),QI=t("td",{style:{"text-align":"center"}},null,-1),RI={style:{"text-align":"left"}},ZI=t("code",null,"树",-1),GI=t("code",null,"深度优先搜索",-1),MI=t("code",null,"二叉搜索树",-1),XI=t("code",null,"1+",-1),$I=t("td",{style:{"text-align":"left"}},"🟠",-1),tz={style:{"text-align":"center"}},ez={href:"https://leetcode.cn/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},oz={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},lz=t("td",{style:{"text-align":"center"}},"1042",-1),sz=t("td",{style:{"text-align":"left"}},"不邻接植花",-1),nz=t("td",{style:{"text-align":"center"}},null,-1),dz={style:{"text-align":"left"}},rz=t("code",null,"深度优先搜索",-1),_z=t("code",null,"广度优先搜索",-1),cz=t("code",null,"图",-1),az=t("td",{style:{"text-align":"left"}},"🟠",-1),iz={style:{"text-align":"center"}},hz={href:"https://leetcode.cn/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},fz={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},gz=t("td",{style:{"text-align":"center"}},"1080",-1),uz=t("td",{style:{"text-align":"left"}},"根到叶路径上的不足节点",-1),mz=t("td",{style:{"text-align":"center"}},null,-1),pz={style:{"text-align":"left"}},yz=t("code",null,"树",-1),xz=t("code",null,"深度优先搜索",-1),bz=t("code",null,"二叉树",-1),kz=t("td",{style:{"text-align":"left"}},"🟠",-1),vz={style:{"text-align":"center"}},wz={href:"https://leetcode.cn/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},Iz={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},zz=t("td",{style:{"text-align":"center"}},"1102",-1),jz=t("td",{style:{"text-align":"left"}},"得分最高的路径 🔒",-1),Oz=t("td",{style:{"text-align":"center"}},null,-1),qz={style:{"text-align":"left"}},Lz=t("code",null,"深度优先搜索",-1),Cz=t("code",null,"广度优先搜索",-1),Nz=t("code",null,"并查集",-1),Pz=t("code",null,"4+",-1),Kz=t("td",{style:{"text-align":"left"}},"🟠",-1),Vz={style:{"text-align":"center"}},Bz={href:"https://leetcode.cn/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},Tz={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},Ez=t("td",{style:{"text-align":"center"}},"1110",-1),Uz=t("td",{style:{"text-align":"left"}},"删点成林",-1),Az=t("td",{style:{"text-align":"center"}},null,-1),Dz={style:{"text-align":"left"}},Wz=t("code",null,"树",-1),Sz=t("code",null,"深度优先搜索",-1),Yz=t("code",null,"数组",-1),Fz=t("code",null,"2+",-1),Hz=t("td",{style:{"text-align":"left"}},"🟠",-1),Jz={style:{"text-align":"center"}},Qz={href:"https://leetcode.cn/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Rz={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Zz=t("td",{style:{"text-align":"center"}},"1120",-1),Gz=t("td",{style:{"text-align":"left"}},"子树的最大平均值 🔒",-1),Mz=t("td",{style:{"text-align":"center"}},null,-1),Xz={style:{"text-align":"left"}},$z=t("code",null,"树",-1),tj=t("code",null,"深度优先搜索",-1),ej=t("code",null,"二叉树",-1),oj=t("td",{style:{"text-align":"left"}},"🟠",-1),lj={style:{"text-align":"center"}},sj={href:"https://leetcode.cn/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},nj={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},dj=t("td",{style:{"text-align":"center"}},"1123",-1),rj=t("td",{style:{"text-align":"left"}},"最深叶节点的最近公共祖先",-1),_j=t("td",{style:{"text-align":"center"}},null,-1),cj={style:{"text-align":"left"}},aj=t("code",null,"树",-1),ij=t("code",null,"深度优先搜索",-1),hj=t("code",null,"广度优先搜索",-1),fj=t("code",null,"2+",-1),gj=t("td",{style:{"text-align":"left"}},"🟠",-1),uj={style:{"text-align":"center"}},mj={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},pj={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},yj=t("td",{style:{"text-align":"center"}},"1145",-1),xj=t("td",{style:{"text-align":"left"}},"二叉树着色游戏",-1),bj=t("td",{style:{"text-align":"center"}},null,-1),kj={style:{"text-align":"left"}},vj=t("code",null,"树",-1),wj=t("code",null,"深度优先搜索",-1),Ij=t("code",null,"二叉树",-1),zj=t("td",{style:{"text-align":"left"}},"🟠",-1),jj={style:{"text-align":"center"}},Oj={href:"https://leetcode.cn/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},qj={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},Lj=t("td",{style:{"text-align":"center"}},"1161",-1),Cj=t("td",{style:{"text-align":"left"}},"最大层内元素和",-1),Nj=t("td",{style:{"text-align":"center"}},null,-1),Pj={style:{"text-align":"left"}},Kj=t("code",null,"树",-1),Vj=t("code",null,"深度优先搜索",-1),Bj=t("code",null,"广度优先搜索",-1),Tj=t("code",null,"1+",-1),Ej=t("td",{style:{"text-align":"left"}},"🟠",-1),Uj={style:{"text-align":"center"}},Aj={href:"https://leetcode.cn/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Dj={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wj=t("td",{style:{"text-align":"center"}},"1192",-1),Sj=t("td",{style:{"text-align":"left"}},"查找集群内的关键连接",-1),Yj=t("td",{style:{"text-align":"center"}},null,-1),Fj={style:{"text-align":"left"}},Hj=t("code",null,"深度优先搜索",-1),Jj=t("code",null,"图",-1),Qj=t("code",null,"双连通分量",-1),Rj=t("td",{style:{"text-align":"left"}},"🔴",-1),Zj={style:{"text-align":"center"}},Gj={href:"https://leetcode.cn/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},Mj={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},Xj=t("td",{style:{"text-align":"center"}},"1202",-1),$j=t("td",{style:{"text-align":"left"}},"交换字符串中的元素",-1),tO=t("td",{style:{"text-align":"center"}},null,-1),eO={style:{"text-align":"left"}},oO=t("code",null,"深度优先搜索",-1),lO=t("code",null,"广度优先搜索",-1),sO=t("code",null,"并查集",-1),nO=t("code",null,"4+",-1),dO=t("td",{style:{"text-align":"left"}},"🟠",-1),rO={style:{"text-align":"center"}},_O={href:"https://leetcode.cn/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},cO={href:"https://leetcode.com/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},aO=t("td",{style:{"text-align":"center"}},"1203",-1),iO=t("td",{style:{"text-align":"left"}},"项目管理",-1),hO=t("td",{style:{"text-align":"center"}},null,-1),fO={style:{"text-align":"left"}},gO=t("code",null,"深度优先搜索",-1),uO=t("code",null,"广度优先搜索",-1),mO=t("code",null,"图",-1),pO=t("code",null,"1+",-1),yO=t("td",{style:{"text-align":"left"}},"🔴",-1),xO={style:{"text-align":"center"}},bO={href:"https://leetcode.cn/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},kO={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},vO=t("td",{style:{"text-align":"center"}},"1214",-1),wO=t("td",{style:{"text-align":"left"}},"查找两棵二叉搜索树之和 🔒",-1),IO=t("td",{style:{"text-align":"center"}},null,-1),zO={style:{"text-align":"left"}},jO=t("code",null,"栈",-1),OO=t("code",null,"树",-1),qO=t("code",null,"深度优先搜索",-1),LO=t("code",null,"4+",-1),CO=t("td",{style:{"text-align":"left"}},"🟠",-1),NO={style:{"text-align":"center"}},PO={href:"https://leetcode.cn/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},KO={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},VO=t("td",{style:{"text-align":"center"}},"1233",-1),BO=t("td",{style:{"text-align":"left"}},"删除子文件夹",-1),TO={style:{"text-align":"center"}},EO={style:{"text-align":"left"}},UO=t("code",null,"深度优先搜索",-1),AO=t("code",null,"字典树",-1),DO=t("code",null,"数组",-1),WO=t("code",null,"1+",-1),SO=t("td",{style:{"text-align":"left"}},"🟠",-1),YO={style:{"text-align":"center"}},FO={href:"https://leetcode.cn/problems/remove-sub-folders-from-the-filesystem",target:"_blank",rel:"noopener noreferrer"},HO={href:"https://leetcode.com/problems/remove-sub-folders-from-the-filesystem",target:"_blank",rel:"noopener noreferrer"},JO=t("td",{style:{"text-align":"center"}},"1236",-1),QO=t("td",{style:{"text-align":"left"}},"网络爬虫 🔒",-1),RO=t("td",{style:{"text-align":"center"}},null,-1),ZO={style:{"text-align":"left"}},GO=t("code",null,"深度优先搜索",-1),MO=t("code",null,"广度优先搜索",-1),XO=t("code",null,"字符串",-1),$O=t("code",null,"1+",-1),tq=t("td",{style:{"text-align":"left"}},"🟠",-1),eq={style:{"text-align":"center"}},oq={href:"https://leetcode.cn/problems/web-crawler",target:"_blank",rel:"noopener noreferrer"},lq={href:"https://leetcode.com/problems/web-crawler",target:"_blank",rel:"noopener noreferrer"},sq=t("td",{style:{"text-align":"center"}},"1242",-1),nq=t("td",{style:{"text-align":"left"}},"多线程网页爬虫 🔒",-1),dq=t("td",{style:{"text-align":"center"}},null,-1),rq={style:{"text-align":"left"}},_q=t("code",null,"深度优先搜索",-1),cq=t("code",null,"广度优先搜索",-1),aq=t("code",null,"多线程",-1),iq=t("td",{style:{"text-align":"left"}},"🟠",-1),hq={style:{"text-align":"center"}},fq={href:"https://leetcode.cn/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},gq={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},uq=t("td",{style:{"text-align":"center"}},"1245",-1),mq=t("td",{style:{"text-align":"left"}},"树的直径 🔒",-1),pq=t("td",{style:{"text-align":"center"}},null,-1),yq={style:{"text-align":"left"}},xq=t("code",null,"树",-1),bq=t("code",null,"深度优先搜索",-1),kq=t("code",null,"广度优先搜索",-1),vq=t("code",null,"2+",-1),wq=t("td",{style:{"text-align":"left"}},"🟠",-1),Iq={style:{"text-align":"center"}},zq={href:"https://leetcode.cn/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},jq={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Oq=t("td",{style:{"text-align":"center"}},"1254",-1),qq=t("td",{style:{"text-align":"left"}},"统计封闭岛屿的数目",-1),Lq=t("td",{style:{"text-align":"center"}},null,-1),Cq={style:{"text-align":"left"}},Nq=t("code",null,"深度优先搜索",-1),Pq=t("code",null,"广度优先搜索",-1),Kq=t("code",null,"并查集",-1),Vq=t("code",null,"2+",-1),Bq=t("td",{style:{"text-align":"left"}},"🟠",-1),Tq={style:{"text-align":"center"}},Eq={href:"https://leetcode.cn/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},Uq={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},Aq=t("td",{style:{"text-align":"center"}},"1257",-1),Dq=t("td",{style:{"text-align":"left"}},"最小公共区域 🔒",-1),Wq=t("td",{style:{"text-align":"center"}},null,-1),Sq={style:{"text-align":"left"}},Yq=t("code",null,"树",-1),Fq=t("code",null,"深度优先搜索",-1),Hq=t("code",null,"广度优先搜索",-1),Jq=t("code",null,"3+",-1),Qq=t("td",{style:{"text-align":"left"}},"🟠",-1),Rq={style:{"text-align":"center"}},Zq={href:"https://leetcode.cn/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},Gq={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},Mq=t("td",{style:{"text-align":"center"}},"1261",-1),Xq=t("td",{style:{"text-align":"left"}},"在受污染的二叉树中查找元素",-1),$q=t("td",{style:{"text-align":"center"}},null,-1),tL={style:{"text-align":"left"}},eL=t("code",null,"树",-1),oL=t("code",null,"深度优先搜索",-1),lL=t("code",null,"广度优先搜索",-1),sL=t("code",null,"3+",-1),nL=t("td",{style:{"text-align":"left"}},"🟠",-1),dL={style:{"text-align":"center"}},rL={href:"https://leetcode.cn/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},_L={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},cL=t("td",{style:{"text-align":"center"}},"1267",-1),aL=t("td",{style:{"text-align":"left"}},"统计参与通信的服务器",-1),iL=t("td",{style:{"text-align":"center"}},null,-1),hL={style:{"text-align":"left"}},fL=t("code",null,"深度优先搜索",-1),gL=t("code",null,"广度优先搜索",-1),uL=t("code",null,"并查集",-1),mL=t("code",null,"3+",-1),pL=t("td",{style:{"text-align":"left"}},"🟠",-1),yL={style:{"text-align":"center"}},xL={href:"https://leetcode.cn/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},bL={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},kL=t("td",{style:{"text-align":"center"}},"1273",-1),vL=t("td",{style:{"text-align":"left"}},"删除树节点 🔒",-1),wL=t("td",{style:{"text-align":"center"}},null,-1),IL={style:{"text-align":"left"}},zL=t("code",null,"树",-1),jL=t("code",null,"深度优先搜索",-1),OL=t("code",null,"广度优先搜索",-1),qL=t("code",null,"1+",-1),LL=t("td",{style:{"text-align":"left"}},"🟠",-1),CL={style:{"text-align":"center"}},NL={href:"https://leetcode.cn/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},PL={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},KL=t("td",{style:{"text-align":"center"}},"1302",-1),VL=t("td",{style:{"text-align":"left"}},"层数最深叶子节点的和",-1),BL=t("td",{style:{"text-align":"center"}},null,-1),TL={style:{"text-align":"left"}},EL=t("code",null,"树",-1),UL=t("code",null,"深度优先搜索",-1),AL=t("code",null,"广度优先搜索",-1),DL=t("code",null,"1+",-1),WL=t("td",{style:{"text-align":"left"}},"🟠",-1),SL={style:{"text-align":"center"}},YL={href:"https://leetcode.cn/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},FL={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},HL=t("td",{style:{"text-align":"center"}},"1305",-1),JL=t("td",{style:{"text-align":"left"}},"两棵二叉搜索树中的所有元素",-1),QL=t("td",{style:{"text-align":"center"}},null,-1),RL={style:{"text-align":"left"}},ZL=t("code",null,"树",-1),GL=t("code",null,"深度优先搜索",-1),ML=t("code",null,"二叉搜索树",-1),XL=t("code",null,"2+",-1),$L=t("td",{style:{"text-align":"left"}},"🟠",-1),tC={style:{"text-align":"center"}},eC={href:"https://leetcode.cn/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},oC={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},lC=t("td",{style:{"text-align":"center"}},"1306",-1),sC=t("td",{style:{"text-align":"left"}},"跳跃游戏 III",-1),nC=t("td",{style:{"text-align":"center"}},null,-1),dC={style:{"text-align":"left"}},rC=t("code",null,"深度优先搜索",-1),_C=t("code",null,"广度优先搜索",-1),cC=t("code",null,"数组",-1),aC=t("td",{style:{"text-align":"left"}},"🟠",-1),iC={style:{"text-align":"center"}},hC={href:"https://leetcode.cn/problems/jump-game-iii",target:"_blank",rel:"noopener noreferrer"},fC={href:"https://leetcode.com/problems/jump-game-iii",target:"_blank",rel:"noopener noreferrer"},gC=t("td",{style:{"text-align":"center"}},"1315",-1),uC=t("td",{style:{"text-align":"left"}},"祖父节点值为偶数的节点和",-1),mC=t("td",{style:{"text-align":"center"}},null,-1),pC={style:{"text-align":"left"}},yC=t("code",null,"树",-1),xC=t("code",null,"深度优先搜索",-1),bC=t("code",null,"广度优先搜索",-1),kC=t("code",null,"1+",-1),vC=t("td",{style:{"text-align":"left"}},"🟠",-1),wC={style:{"text-align":"center"}},IC={href:"https://leetcode.cn/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},zC={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},jC=t("td",{style:{"text-align":"center"}},"1319",-1),OC=t("td",{style:{"text-align":"left"}},"连通网络的操作次数",-1),qC=t("td",{style:{"text-align":"center"}},null,-1),LC={style:{"text-align":"left"}},CC=t("code",null,"深度优先搜索",-1),NC=t("code",null,"广度优先搜索",-1),PC=t("code",null,"并查集",-1),KC=t("code",null,"1+",-1),VC=t("td",{style:{"text-align":"left"}},"🟠",-1),BC={style:{"text-align":"center"}},TC={href:"https://leetcode.cn/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},EC={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},UC=t("td",{style:{"text-align":"center"}},"1325",-1),AC=t("td",{style:{"text-align":"left"}},"删除给定值的叶子节点",-1),DC=t("td",{style:{"text-align":"center"}},null,-1),WC={style:{"text-align":"left"}},SC=t("code",null,"树",-1),YC=t("code",null,"深度优先搜索",-1),FC=t("code",null,"二叉树",-1),HC=t("td",{style:{"text-align":"left"}},"🟠",-1),JC={style:{"text-align":"center"}},QC={href:"https://leetcode.cn/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},RC={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},ZC=t("td",{style:{"text-align":"center"}},"1339",-1),GC=t("td",{style:{"text-align":"left"}},"分裂二叉树的最大乘积",-1),MC=t("td",{style:{"text-align":"center"}},null,-1),XC={style:{"text-align":"left"}},$C=t("code",null,"树",-1),tN=t("code",null,"深度优先搜索",-1),eN=t("code",null,"二叉树",-1),oN=t("td",{style:{"text-align":"left"}},"🟠",-1),lN={style:{"text-align":"center"}},sN={href:"https://leetcode.cn/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},nN={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},dN=t("td",{style:{"text-align":"center"}},"1361",-1),rN=t("td",{style:{"text-align":"left"}},"验证二叉树",-1),_N=t("td",{style:{"text-align":"center"}},null,-1),cN={style:{"text-align":"left"}},aN=t("code",null,"树",-1),iN=t("code",null,"深度优先搜索",-1),hN=t("code",null,"广度优先搜索",-1),fN=t("code",null,"3+",-1),gN=t("td",{style:{"text-align":"left"}},"🟠",-1),uN={style:{"text-align":"center"}},mN={href:"https://leetcode.cn/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},pN={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},yN=t("td",{style:{"text-align":"center"}},"1367",-1),xN=t("td",{style:{"text-align":"left"}},"二叉树中的链表",-1),bN=t("td",{style:{"text-align":"center"}},null,-1),kN={style:{"text-align":"left"}},vN=t("code",null,"树",-1),wN=t("code",null,"深度优先搜索",-1),IN=t("code",null,"链表",-1),zN=t("code",null,"1+",-1),jN=t("td",{style:{"text-align":"left"}},"🟠",-1),ON={style:{"text-align":"center"}},qN={href:"https://leetcode.cn/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},LN={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},CN=t("td",{style:{"text-align":"center"}},"1372",-1),NN=t("td",{style:{"text-align":"left"}},"二叉树中的最长交错路径",-1),PN=t("td",{style:{"text-align":"center"}},null,-1),KN={style:{"text-align":"left"}},VN=t("code",null,"树",-1),BN=t("code",null,"深度优先搜索",-1),TN=t("code",null,"动态规划",-1),EN=t("code",null,"1+",-1),UN=t("td",{style:{"text-align":"left"}},"🟠",-1),AN={style:{"text-align":"center"}},DN={href:"https://leetcode.cn/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},WN={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},SN=t("td",{style:{"text-align":"center"}},"1373",-1),YN=t("td",{style:{"text-align":"left"}},"二叉搜索子树的最大键值和",-1),FN=t("td",{style:{"text-align":"center"}},null,-1),HN={style:{"text-align":"left"}},JN=t("code",null,"树",-1),QN=t("code",null,"深度优先搜索",-1),RN=t("code",null,"二叉搜索树",-1),ZN=t("code",null,"2+",-1),GN=t("td",{style:{"text-align":"left"}},"🔴",-1),MN={style:{"text-align":"center"}},XN={href:"https://leetcode.cn/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},$N={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},tP=t("td",{style:{"text-align":"center"}},"1376",-1),eP=t("td",{style:{"text-align":"left"}},"通知所有员工所需的时间",-1),oP=t("td",{style:{"text-align":"center"}},null,-1),lP={style:{"text-align":"left"}},sP=t("code",null,"树",-1),nP=t("code",null,"深度优先搜索",-1),dP=t("code",null,"广度优先搜索",-1),rP=t("td",{style:{"text-align":"left"}},"🟠",-1),_P={style:{"text-align":"center"}},cP={href:"https://leetcode.cn/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},aP={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},iP=t("td",{style:{"text-align":"center"}},"1377",-1),hP=t("td",{style:{"text-align":"left"}},"T 秒后青蛙的位置",-1),fP=t("td",{style:{"text-align":"center"}},null,-1),gP={style:{"text-align":"left"}},uP=t("code",null,"树",-1),mP=t("code",null,"深度优先搜索",-1),pP=t("code",null,"广度优先搜索",-1),yP=t("code",null,"1+",-1),xP=t("td",{style:{"text-align":"left"}},"🔴",-1),bP={style:{"text-align":"center"}},kP={href:"https://leetcode.cn/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},vP={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},wP=t("td",{style:{"text-align":"center"}},"1379",-1),IP=t("td",{style:{"text-align":"left"}},"找出克隆二叉树中的相同节点",-1),zP=t("td",{style:{"text-align":"center"}},null,-1),jP={style:{"text-align":"left"}},OP=t("code",null,"树",-1),qP=t("code",null,"深度优先搜索",-1),LP=t("code",null,"广度优先搜索",-1),CP=t("code",null,"1+",-1),NP=t("td",{style:{"text-align":"left"}},"🟢",-1),PP={style:{"text-align":"center"}},KP={href:"https://leetcode.cn/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},VP={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},BP=t("td",{style:{"text-align":"center"}},"1382",-1),TP=t("td",{style:{"text-align":"left"}},"将二叉搜索树变平衡",-1),EP=t("td",{style:{"text-align":"center"}},null,-1),UP={style:{"text-align":"left"}},AP=t("code",null,"贪心",-1),DP=t("code",null,"树",-1),WP=t("code",null,"深度优先搜索",-1),SP=t("code",null,"3+",-1),YP=t("td",{style:{"text-align":"left"}},"🟠",-1),FP={style:{"text-align":"center"}},HP={href:"https://leetcode.cn/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},JP={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},QP=t("td",{style:{"text-align":"center"}},"1391",-1),RP=t("td",{style:{"text-align":"left"}},"检查网格中是否存在有效路径",-1),ZP=t("td",{style:{"text-align":"center"}},null,-1),GP={style:{"text-align":"left"}},MP=t("code",null,"深度优先搜索",-1),XP=t("code",null,"广度优先搜索",-1),$P=t("code",null,"并查集",-1),tK=t("code",null,"2+",-1),eK=t("td",{style:{"text-align":"left"}},"🟠",-1),oK={style:{"text-align":"center"}},lK={href:"https://leetcode.cn/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},sK={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},nK=t("td",{style:{"text-align":"center"}},"1430",-1),dK=t("td",{style:{"text-align":"left"}},"判断给定的序列是否是二叉树从根到叶的路径 🔒",-1),rK=t("td",{style:{"text-align":"center"}},null,-1),_K={style:{"text-align":"left"}},cK=t("code",null,"树",-1),aK=t("code",null,"深度优先搜索",-1),iK=t("code",null,"广度优先搜索",-1),hK=t("code",null,"1+",-1),fK=t("td",{style:{"text-align":"left"}},"🟠",-1),gK={style:{"text-align":"center"}},uK={href:"https://leetcode.cn/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},mK={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},pK=t("td",{style:{"text-align":"center"}},"1443",-1),yK=t("td",{style:{"text-align":"left"}},"收集树上所有苹果的最少时间",-1),xK=t("td",{style:{"text-align":"center"}},null,-1),bK={style:{"text-align":"left"}},kK=t("code",null,"树",-1),vK=t("code",null,"深度优先搜索",-1),wK=t("code",null,"广度优先搜索",-1),IK=t("code",null,"1+",-1),zK=t("td",{style:{"text-align":"left"}},"🟠",-1),jK={style:{"text-align":"center"}},OK={href:"https://leetcode.cn/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},qK={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},LK=t("td",{style:{"text-align":"center"}},"1448",-1),CK=t("td",{style:{"text-align":"left"}},"统计二叉树中好节点的数目",-1),NK=t("td",{style:{"text-align":"center"}},null,-1),PK={style:{"text-align":"left"}},KK=t("code",null,"树",-1),VK=t("code",null,"深度优先搜索",-1),BK=t("code",null,"广度优先搜索",-1),TK=t("code",null,"1+",-1),EK=t("td",{style:{"text-align":"left"}},"🟠",-1),UK={style:{"text-align":"center"}},AK={href:"https://leetcode.cn/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},DK={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},WK=t("td",{style:{"text-align":"center"}},"1457",-1),SK=t("td",{style:{"text-align":"left"}},"二叉树中的伪回文路径",-1),YK=t("td",{style:{"text-align":"center"}},null,-1),FK={style:{"text-align":"left"}},HK=t("code",null,"位运算",-1),JK=t("code",null,"树",-1),QK=t("code",null,"深度优先搜索",-1),RK=t("code",null,"2+",-1),ZK=t("td",{style:{"text-align":"left"}},"🟠",-1),GK={style:{"text-align":"center"}},MK={href:"https://leetcode.cn/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},XK={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},$K=t("td",{style:{"text-align":"center"}},"1462",-1),tV=t("td",{style:{"text-align":"left"}},"课程表 IV",-1),eV=t("td",{style:{"text-align":"center"}},null,-1),oV={style:{"text-align":"left"}},lV=t("code",null,"深度优先搜索",-1),sV=t("code",null,"广度优先搜索",-1),nV=t("code",null,"图",-1),dV=t("code",null,"1+",-1),rV=t("td",{style:{"text-align":"left"}},"🟠",-1),_V={style:{"text-align":"center"}},cV={href:"https://leetcode.cn/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},aV={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},iV=t("td",{style:{"text-align":"center"}},"1466",-1),hV=t("td",{style:{"text-align":"left"}},"重新规划路线",-1),fV=t("td",{style:{"text-align":"center"}},null,-1),gV={style:{"text-align":"left"}},uV=t("code",null,"深度优先搜索",-1),mV=t("code",null,"广度优先搜索",-1),pV=t("code",null,"图",-1),yV=t("td",{style:{"text-align":"left"}},"🟠",-1),xV={style:{"text-align":"center"}},bV={href:"https://leetcode.cn/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},kV={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},vV=t("td",{style:{"text-align":"center"}},"1469",-1),wV=t("td",{style:{"text-align":"left"}},"寻找所有的独生节点 🔒",-1),IV=t("td",{style:{"text-align":"center"}},null,-1),zV={style:{"text-align":"left"}},jV=t("code",null,"树",-1),OV=t("code",null,"深度优先搜索",-1),qV=t("code",null,"广度优先搜索",-1),LV=t("code",null,"1+",-1),CV=t("td",{style:{"text-align":"left"}},"🟢",-1),NV={style:{"text-align":"center"}},PV={href:"https://leetcode.cn/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},KV={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},VV=t("td",{style:{"text-align":"center"}},"1483",-1),BV=t("td",{style:{"text-align":"left"}},"树节点的第 K 个祖先",-1),TV=t("td",{style:{"text-align":"center"}},null,-1),EV={style:{"text-align":"left"}},UV=t("code",null,"树",-1),AV=t("code",null,"深度优先搜索",-1),DV=t("code",null,"广度优先搜索",-1),WV=t("code",null,"3+",-1),SV=t("td",{style:{"text-align":"left"}},"🔴",-1),YV={style:{"text-align":"center"}},FV={href:"https://leetcode.cn/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},HV={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},JV=t("td",{style:{"text-align":"center"}},"1485",-1),QV=t("td",{style:{"text-align":"left"}},"克隆含随机指针的二叉树 🔒",-1),RV=t("td",{style:{"text-align":"center"}},null,-1),ZV={style:{"text-align":"left"}},GV=t("code",null,"树",-1),MV=t("code",null,"深度优先搜索",-1),XV=t("code",null,"广度优先搜索",-1),$V=t("code",null,"2+",-1),tB=t("td",{style:{"text-align":"left"}},"🟠",-1),eB={style:{"text-align":"center"}},oB={href:"https://leetcode.cn/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},lB={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},sB=t("td",{style:{"text-align":"center"}},"1490",-1),nB=t("td",{style:{"text-align":"left"}},"克隆 N 叉树 🔒",-1),dB=t("td",{style:{"text-align":"center"}},null,-1),rB={style:{"text-align":"left"}},_B=t("code",null,"树",-1),cB=t("code",null,"深度优先搜索",-1),aB=t("code",null,"广度优先搜索",-1),iB=t("code",null,"1+",-1),hB=t("td",{style:{"text-align":"left"}},"🟠",-1),fB={style:{"text-align":"center"}},gB={href:"https://leetcode.cn/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},uB={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},mB=t("td",{style:{"text-align":"center"}},"1506",-1),pB=t("td",{style:{"text-align":"left"}},"找到 N 叉树的根节点 🔒",-1),yB=t("td",{style:{"text-align":"center"}},null,-1),xB={style:{"text-align":"left"}},bB=t("code",null,"位运算",-1),kB=t("code",null,"树",-1),vB=t("code",null,"深度优先搜索",-1),wB=t("code",null,"1+",-1),IB=t("td",{style:{"text-align":"left"}},"🟠",-1),zB={style:{"text-align":"center"}},jB={href:"https://leetcode.cn/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},OB={href:"https://leetcode.com/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},qB=t("td",{style:{"text-align":"center"}},"1516",-1),LB=t("td",{style:{"text-align":"left"}},"移动 N 叉树的子树 🔒",-1),CB=t("td",{style:{"text-align":"center"}},null,-1),NB={style:{"text-align":"left"}},PB=t("code",null,"树",-1),KB=t("code",null,"深度优先搜索",-1),VB=t("td",{style:{"text-align":"left"}},"🔴",-1),BB={style:{"text-align":"center"}},TB={href:"https://leetcode.cn/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},EB={href:"https://leetcode.com/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},UB=t("td",{style:{"text-align":"center"}},"1519",-1),AB=t("td",{style:{"text-align":"left"}},"子树中标签相同的节点数",-1),DB=t("td",{style:{"text-align":"center"}},null,-1),WB={style:{"text-align":"left"}},SB=t("code",null,"树",-1),YB=t("code",null,"深度优先搜索",-1),FB=t("code",null,"广度优先搜索",-1),HB=t("code",null,"2+",-1),JB=t("td",{style:{"text-align":"left"}},"🟠",-1),QB={style:{"text-align":"center"}},RB={href:"https://leetcode.cn/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},ZB={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},GB=t("td",{style:{"text-align":"center"}},"1522",-1),MB=t("td",{style:{"text-align":"left"}},"N 叉树的直径 🔒",-1),XB={style:{"text-align":"center"}},$B={style:{"text-align":"left"}},tT=t("code",null,"树",-1),eT=t("code",null,"深度优先搜索",-1),oT=t("td",{style:{"text-align":"left"}},"🟠",-1),lT={style:{"text-align":"center"}},sT={href:"https://leetcode.cn/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},nT={href:"https://leetcode.com/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},dT=t("td",{style:{"text-align":"center"}},"1530",-1),rT=t("td",{style:{"text-align":"left"}},"好叶子节点对的数量",-1),_T=t("td",{style:{"text-align":"center"}},null,-1),cT={style:{"text-align":"left"}},aT=t("code",null,"树",-1),iT=t("code",null,"深度优先搜索",-1),hT=t("code",null,"二叉树",-1),fT=t("td",{style:{"text-align":"left"}},"🟠",-1),gT={style:{"text-align":"center"}},uT={href:"https://leetcode.cn/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},mT={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},pT=t("td",{style:{"text-align":"center"}},"1559",-1),yT=t("td",{style:{"text-align":"left"}},"二维网格图中探测环",-1),xT=t("td",{style:{"text-align":"center"}},null,-1),bT={style:{"text-align":"left"}},kT=t("code",null,"深度优先搜索",-1),vT=t("code",null,"广度优先搜索",-1),wT=t("code",null,"并查集",-1),IT=t("code",null,"2+",-1),zT=t("td",{style:{"text-align":"left"}},"🟠",-1),jT={style:{"text-align":"center"}},OT={href:"https://leetcode.cn/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},qT={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},LT=t("td",{style:{"text-align":"center"}},"1568",-1),CT=t("td",{style:{"text-align":"left"}},"使陆地分离的最少天数",-1),NT=t("td",{style:{"text-align":"center"}},null,-1),PT={style:{"text-align":"left"}},KT=t("code",null,"深度优先搜索",-1),VT=t("code",null,"广度优先搜索",-1),BT=t("code",null,"数组",-1),TT=t("code",null,"2+",-1),ET=t("td",{style:{"text-align":"left"}},"🔴",-1),UT={style:{"text-align":"center"}},AT={href:"https://leetcode.cn/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},DT={href:"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},WT=t("td",{style:{"text-align":"center"}},"1600",-1),ST=t("td",{style:{"text-align":"left"}},"王位继承顺序",-1),YT=t("td",{style:{"text-align":"center"}},null,-1),FT={style:{"text-align":"left"}},HT=t("code",null,"树",-1),JT=t("code",null,"深度优先搜索",-1),QT=t("code",null,"设计",-1),RT=t("code",null,"1+",-1),ZT=t("td",{style:{"text-align":"left"}},"🟠",-1),GT={style:{"text-align":"center"}},MT={href:"https://leetcode.cn/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},XT={href:"https://leetcode.com/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},$T=t("td",{style:{"text-align":"center"}},"1612",-1),tE=t("td",{style:{"text-align":"left"}},"检查两棵二叉表达式树是否等价 🔒",-1),eE=t("td",{style:{"text-align":"center"}},null,-1),oE={style:{"text-align":"left"}},lE=t("code",null,"树",-1),sE=t("code",null,"深度优先搜索",-1),nE=t("code",null,"哈希表",-1),dE=t("code",null,"2+",-1),rE=t("td",{style:{"text-align":"left"}},"🟠",-1),_E={style:{"text-align":"center"}},cE={href:"https://leetcode.cn/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},aE={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},iE=t("td",{style:{"text-align":"center"}},"1625",-1),hE=t("td",{style:{"text-align":"left"}},"执行操作后字典序最小的字符串",-1),fE=t("td",{style:{"text-align":"center"}},null,-1),gE={style:{"text-align":"left"}},uE=t("code",null,"深度优先搜索",-1),mE=t("code",null,"广度优先搜索",-1),pE=t("code",null,"字符串",-1),yE=t("code",null,"1+",-1),xE=t("td",{style:{"text-align":"left"}},"🟠",-1),bE={style:{"text-align":"center"}},kE={href:"https://leetcode.cn/problems/lexicographically-smallest-string-after-applying-operations",target:"_blank",rel:"noopener noreferrer"},vE={href:"https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations",target:"_blank",rel:"noopener noreferrer"},wE=t("td",{style:{"text-align":"center"}},"1631",-1),IE=t("td",{style:{"text-align":"left"}},"最小体力消耗路径",-1),zE=t("td",{style:{"text-align":"center"}},null,-1),jE={style:{"text-align":"left"}},OE=t("code",null,"深度优先搜索",-1),qE=t("code",null,"广度优先搜索",-1),LE=t("code",null,"并查集",-1),CE=t("code",null,"4+",-1),NE=t("td",{style:{"text-align":"left"}},"🟠",-1),PE={style:{"text-align":"center"}},KE={href:"https://leetcode.cn/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},VE={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},BE=t("td",{style:{"text-align":"center"}},"1644",-1),TE=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 II 🔒",-1),EE=t("td",{style:{"text-align":"center"}},null,-1),UE={style:{"text-align":"left"}},AE=t("code",null,"树",-1),DE=t("code",null,"深度优先搜索",-1),WE=t("code",null,"二叉树",-1),SE=t("td",{style:{"text-align":"left"}},"🟠",-1),YE={style:{"text-align":"center"}},FE={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},HE={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},JE=t("td",{style:{"text-align":"center"}},"1660",-1),QE=t("td",{style:{"text-align":"left"}},"纠正二叉树 🔒",-1),RE=t("td",{style:{"text-align":"center"}},null,-1),ZE={style:{"text-align":"left"}},GE=t("code",null,"树",-1),ME=t("code",null,"深度优先搜索",-1),XE=t("code",null,"广度优先搜索",-1),$E=t("code",null,"2+",-1),tU=t("td",{style:{"text-align":"left"}},"🟠",-1),eU={style:{"text-align":"center"}},oU={href:"https://leetcode.cn/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},lU={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},sU=t("td",{style:{"text-align":"center"}},"1666",-1),nU=t("td",{style:{"text-align":"left"}},"改变二叉树的根节点 🔒",-1),dU=t("td",{style:{"text-align":"center"}},null,-1),rU={style:{"text-align":"left"}},_U=t("code",null,"树",-1),cU=t("code",null,"深度优先搜索",-1),aU=t("code",null,"二叉树",-1),iU=t("td",{style:{"text-align":"left"}},"🟠",-1),hU={style:{"text-align":"center"}},fU={href:"https://leetcode.cn/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},gU={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},uU=t("td",{style:{"text-align":"center"}},"1676",-1),mU=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先 IV 🔒",-1),pU=t("td",{style:{"text-align":"center"}},null,-1),yU={style:{"text-align":"left"}},xU=t("code",null,"树",-1),bU=t("code",null,"深度优先搜索",-1),kU=t("code",null,"哈希表",-1),vU=t("code",null,"1+",-1),wU=t("td",{style:{"text-align":"left"}},"🟠",-1),IU={style:{"text-align":"center"}},zU={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},jU={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},OU=t("td",{style:{"text-align":"center"}},"1722",-1),qU=t("td",{style:{"text-align":"left"}},"执行交换操作后的最小汉明距离",-1),LU=t("td",{style:{"text-align":"center"}},null,-1),CU={style:{"text-align":"left"}},NU=t("code",null,"深度优先搜索",-1),PU=t("code",null,"并查集",-1),KU=t("code",null,"数组",-1),VU=t("td",{style:{"text-align":"left"}},"🟠",-1),BU={style:{"text-align":"center"}},TU={href:"https://leetcode.cn/problems/minimize-hamming-distance-after-swap-operations",target:"_blank",rel:"noopener noreferrer"},EU={href:"https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations",target:"_blank",rel:"noopener noreferrer"},UU=t("td",{style:{"text-align":"center"}},"1740",-1),AU=t("td",{style:{"text-align":"left"}},"找到二叉树中的距离 🔒",-1),DU=t("td",{style:{"text-align":"center"}},null,-1),WU={style:{"text-align":"left"}},SU=t("code",null,"树",-1),YU=t("code",null,"深度优先搜索",-1),FU=t("code",null,"广度优先搜索",-1),HU=t("code",null,"2+",-1),JU=t("td",{style:{"text-align":"left"}},"🟠",-1),QU={style:{"text-align":"center"}},RU={href:"https://leetcode.cn/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ZU={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},GU=t("td",{style:{"text-align":"center"}},"1743",-1),MU=t("td",{style:{"text-align":"left"}},"从相邻元素对还原数组",-1),XU=t("td",{style:{"text-align":"center"}},null,-1),$U={style:{"text-align":"left"}},tA=t("code",null,"深度优先搜索",-1),eA=t("code",null,"数组",-1),oA=t("code",null,"哈希表",-1),lA=t("td",{style:{"text-align":"left"}},"🟠",-1),sA={style:{"text-align":"center"}},nA={href:"https://leetcode.cn/problems/restore-the-array-from-adjacent-pairs",target:"_blank",rel:"noopener noreferrer"},dA={href:"https://leetcode.com/problems/restore-the-array-from-adjacent-pairs",target:"_blank",rel:"noopener noreferrer"},rA=t("td",{style:{"text-align":"center"}},"1766",-1),_A=t("td",{style:{"text-align":"left"}},"互质树",-1),cA=t("td",{style:{"text-align":"center"}},null,-1),aA={style:{"text-align":"left"}},iA=t("code",null,"树",-1),hA=t("code",null,"深度优先搜索",-1),fA=t("code",null,"数组",-1),gA=t("code",null,"2+",-1),uA=t("td",{style:{"text-align":"left"}},"🔴",-1),mA={style:{"text-align":"center"}},pA={href:"https://leetcode.cn/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},yA={href:"https://leetcode.com/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},xA=t("td",{style:{"text-align":"center"}},"1778",-1),bA=t("td",{style:{"text-align":"left"}},"未知网格中的最短路径 🔒",-1),kA=t("td",{style:{"text-align":"center"}},null,-1),vA={style:{"text-align":"left"}},wA=t("code",null,"深度优先搜索",-1),IA=t("code",null,"广度优先搜索",-1),zA=t("code",null,"图",-1),jA=t("code",null,"1+",-1),OA=t("td",{style:{"text-align":"left"}},"🟠",-1),qA={style:{"text-align":"center"}},LA={href:"https://leetcode.cn/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},CA={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},NA=t("td",{style:{"text-align":"center"}},"1810",-1),PA=t("td",{style:{"text-align":"left"}},"隐藏网格下的最小消耗路径 🔒",-1),KA=t("td",{style:{"text-align":"center"}},null,-1),VA={style:{"text-align":"left"}},BA=t("code",null,"深度优先搜索",-1),TA=t("code",null,"广度优先搜索",-1),EA=t("code",null,"图",-1),UA=t("code",null,"2+",-1),AA=t("td",{style:{"text-align":"left"}},"🟠",-1),DA={style:{"text-align":"center"}},WA={href:"https://leetcode.cn/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},SA={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},YA=t("td",{style:{"text-align":"center"}},"1820",-1),FA=t("td",{style:{"text-align":"left"}},"最多邀请的个数 🔒",-1),HA=t("td",{style:{"text-align":"center"}},null,-1),JA={style:{"text-align":"left"}},QA=t("code",null,"深度优先搜索",-1),RA=t("code",null,"图",-1),ZA=t("code",null,"数组",-1),GA=t("code",null,"1+",-1),MA=t("td",{style:{"text-align":"left"}},"🟠",-1),XA={style:{"text-align":"center"}},$A={href:"https://leetcode.cn/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},tD={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},eD=t("td",{style:{"text-align":"center"}},"1858",-1),oD=t("td",{style:{"text-align":"left"}},"包含所有前缀的最长单词 🔒",-1),lD=t("td",{style:{"text-align":"center"}},null,-1),sD={style:{"text-align":"left"}},nD=t("code",null,"深度优先搜索",-1),dD=t("code",null,"字典树",-1),rD=t("td",{style:{"text-align":"left"}},"🟠",-1),_D={style:{"text-align":"center"}},cD={href:"https://leetcode.cn/problems/longest-word-with-all-prefixes",target:"_blank",rel:"noopener noreferrer"},aD={href:"https://leetcode.com/problems/longest-word-with-all-prefixes",target:"_blank",rel:"noopener noreferrer"},iD=t("td",{style:{"text-align":"center"}},"1905",-1),hD=t("td",{style:{"text-align":"left"}},"统计子岛屿",-1),fD=t("td",{style:{"text-align":"center"}},null,-1),gD={style:{"text-align":"left"}},uD=t("code",null,"深度优先搜索",-1),mD=t("code",null,"广度优先搜索",-1),pD=t("code",null,"并查集",-1),yD=t("code",null,"2+",-1),xD=t("td",{style:{"text-align":"left"}},"🟠",-1),bD={style:{"text-align":"center"}},kD={href:"https://leetcode.cn/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},vD={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},wD=t("td",{style:{"text-align":"center"}},"1932",-1),ID=t("td",{style:{"text-align":"left"}},"合并多棵二叉搜索树",-1),zD=t("td",{style:{"text-align":"center"}},null,-1),jD={style:{"text-align":"left"}},OD=t("code",null,"树",-1),qD=t("code",null,"深度优先搜索",-1),LD=t("code",null,"哈希表",-1),CD=t("code",null,"2+",-1),ND=t("td",{style:{"text-align":"left"}},"🔴",-1),PD={style:{"text-align":"center"}},KD={href:"https://leetcode.cn/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},VD={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},BD=t("td",{style:{"text-align":"center"}},"1938",-1),TD=t("td",{style:{"text-align":"left"}},"查询最大基因差",-1),ED=t("td",{style:{"text-align":"center"}},null,-1),UD={style:{"text-align":"left"}},AD=t("code",null,"位运算",-1),DD=t("code",null,"深度优先搜索",-1),WD=t("code",null,"字典树",-1),SD=t("code",null,"2+",-1),YD=t("td",{style:{"text-align":"left"}},"🔴",-1),FD={style:{"text-align":"center"}},HD={href:"https://leetcode.cn/problems/maximum-genetic-difference-query",target:"_blank",rel:"noopener noreferrer"},JD={href:"https://leetcode.com/problems/maximum-genetic-difference-query",target:"_blank",rel:"noopener noreferrer"},QD=t("td",{style:{"text-align":"center"}},"1970",-1),RD=t("td",{style:{"text-align":"left"}},"你能穿过矩阵的最后一天",-1),ZD=t("td",{style:{"text-align":"center"}},null,-1),GD={style:{"text-align":"left"}},MD=t("code",null,"深度优先搜索",-1),XD=t("code",null,"广度优先搜索",-1),$D=t("code",null,"并查集",-1),tW=t("code",null,"3+",-1),eW=t("td",{style:{"text-align":"left"}},"🔴",-1),oW={style:{"text-align":"center"}},lW={href:"https://leetcode.cn/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},sW={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},nW=t("td",{style:{"text-align":"center"}},"1971",-1),dW=t("td",{style:{"text-align":"left"}},"寻找图中是否存在路径",-1),rW=t("td",{style:{"text-align":"center"}},null,-1),_W={style:{"text-align":"left"}},cW=t("code",null,"深度优先搜索",-1),aW=t("code",null,"广度优先搜索",-1),iW=t("code",null,"并查集",-1),hW=t("code",null,"1+",-1),fW=t("td",{style:{"text-align":"left"}},"🟢",-1),gW={style:{"text-align":"center"}},uW={href:"https://leetcode.cn/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},mW={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},pW=t("td",{style:{"text-align":"center"}},"1973",-1),yW=t("td",{style:{"text-align":"left"}},"值等于子节点值之和的节点数量 🔒",-1),xW=t("td",{style:{"text-align":"center"}},null,-1),bW={style:{"text-align":"left"}},kW=t("code",null,"树",-1),vW=t("code",null,"深度优先搜索",-1),wW=t("code",null,"二叉树",-1),IW=t("td",{style:{"text-align":"left"}},"🟠",-1),zW={style:{"text-align":"center"}},jW={href:"https://leetcode.cn/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},OW={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},qW=t("td",{style:{"text-align":"center"}},"1992",-1),LW=t("td",{style:{"text-align":"left"}},"找到所有的农场组",-1),CW=t("td",{style:{"text-align":"center"}},null,-1),NW={style:{"text-align":"left"}},PW=t("code",null,"深度优先搜索",-1),KW=t("code",null,"广度优先搜索",-1),VW=t("code",null,"数组",-1),BW=t("code",null,"1+",-1),TW=t("td",{style:{"text-align":"left"}},"🟠",-1),EW={style:{"text-align":"center"}},UW={href:"https://leetcode.cn/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},AW={href:"https://leetcode.com/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},DW=t("td",{style:{"text-align":"center"}},"1993",-1),WW=t("td",{style:{"text-align":"left"}},"树上的操作",-1),SW=t("td",{style:{"text-align":"center"}},null,-1),YW={style:{"text-align":"left"}},FW=t("code",null,"树",-1),HW=t("code",null,"深度优先搜索",-1),JW=t("code",null,"广度优先搜索",-1),QW=t("code",null,"3+",-1),RW=t("td",{style:{"text-align":"left"}},"🟠",-1),ZW={style:{"text-align":"center"}},GW={href:"https://leetcode.cn/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},MW={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},XW=t("td",{style:{"text-align":"center"}},"2003",-1),$W=t("td",{style:{"text-align":"left"}},"每棵子树内缺失的最小基因值",-1),tS=t("td",{style:{"text-align":"center"}},null,-1),eS={style:{"text-align":"left"}},oS=t("code",null,"树",-1),lS=t("code",null,"深度优先搜索",-1),sS=t("code",null,"并查集",-1),nS=t("code",null,"1+",-1),dS=t("td",{style:{"text-align":"left"}},"🔴",-1),rS={style:{"text-align":"center"}},_S={href:"https://leetcode.cn/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},cS={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},aS=t("td",{style:{"text-align":"center"}},"2049",-1),iS=t("td",{style:{"text-align":"left"}},"统计最高分的节点数目",-1),hS=t("td",{style:{"text-align":"center"}},null,-1),fS={style:{"text-align":"left"}},gS=t("code",null,"树",-1),uS=t("code",null,"深度优先搜索",-1),mS=t("code",null,"数组",-1),pS=t("code",null,"1+",-1),yS=t("td",{style:{"text-align":"left"}},"🟠",-1),xS={style:{"text-align":"center"}},bS={href:"https://leetcode.cn/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},kS={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},vS=t("td",{style:{"text-align":"center"}},"2092",-1),wS=t("td",{style:{"text-align":"left"}},"找出知晓秘密的所有专家",-1),IS=t("td",{style:{"text-align":"center"}},null,-1),zS={style:{"text-align":"left"}},jS=t("code",null,"深度优先搜索",-1),OS=t("code",null,"广度优先搜索",-1),qS=t("code",null,"并查集",-1),LS=t("code",null,"2+",-1),CS=t("td",{style:{"text-align":"left"}},"🔴",-1),NS={style:{"text-align":"center"}},PS={href:"https://leetcode.cn/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},KS={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},VS=t("td",{style:{"text-align":"center"}},"2096",-1),BS=t("td",{style:{"text-align":"left"}},"从二叉树一个节点到另一个节点每一步的方向",-1),TS=t("td",{style:{"text-align":"center"}},null,-1),ES={style:{"text-align":"left"}},US=t("code",null,"树",-1),AS=t("code",null,"深度优先搜索",-1),DS=t("code",null,"字符串",-1),WS=t("code",null,"1+",-1),SS=t("td",{style:{"text-align":"left"}},"🟠",-1),YS={style:{"text-align":"center"}},FS={href:"https://leetcode.cn/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},HS={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},JS=t("td",{style:{"text-align":"center"}},"2097",-1),QS=t("td",{style:{"text-align":"left"}},"合法重新排列数对",-1),RS=t("td",{style:{"text-align":"center"}},null,-1),ZS={style:{"text-align":"left"}},GS=t("code",null,"深度优先搜索",-1),MS=t("code",null,"图",-1),XS=t("code",null,"欧拉回路",-1),$S=t("td",{style:{"text-align":"left"}},"🔴",-1),tY={style:{"text-align":"center"}},eY={href:"https://leetcode.cn/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},oY={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},lY=t("td",{style:{"text-align":"center"}},"2101",-1),sY=t("td",{style:{"text-align":"left"}},"引爆最多的炸弹",-1),nY=t("td",{style:{"text-align":"center"}},null,-1),dY={style:{"text-align":"left"}},rY=t("code",null,"深度优先搜索",-1),_Y=t("code",null,"广度优先搜索",-1),cY=t("code",null,"图",-1),aY=t("code",null,"3+",-1),iY=t("td",{style:{"text-align":"left"}},"🟠",-1),hY={style:{"text-align":"center"}},fY={href:"https://leetcode.cn/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},gY={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},uY=t("td",{style:{"text-align":"center"}},"2127",-1),mY=t("td",{style:{"text-align":"left"}},"参加会议的最多员工数",-1),pY=t("td",{style:{"text-align":"center"}},null,-1),yY={style:{"text-align":"left"}},xY=t("code",null,"深度优先搜索",-1),bY=t("code",null,"图",-1),kY=t("code",null,"拓扑排序",-1),vY=t("td",{style:{"text-align":"left"}},"🔴",-1),wY={style:{"text-align":"center"}},IY={href:"https://leetcode.cn/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},zY={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},jY=t("td",{style:{"text-align":"center"}},"2192",-1),OY=t("td",{style:{"text-align":"left"}},"有向无环图中一个节点的所有祖先",-1),qY=t("td",{style:{"text-align":"center"}},null,-1),LY={style:{"text-align":"left"}},CY=t("code",null,"深度优先搜索",-1),NY=t("code",null,"广度优先搜索",-1),PY=t("code",null,"图",-1),KY=t("code",null,"1+",-1),VY=t("td",{style:{"text-align":"left"}},"🟠",-1),BY={style:{"text-align":"center"}},TY={href:"https://leetcode.cn/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},EY={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},UY=t("td",{style:{"text-align":"center"}},"2204",-1),AY=t("td",{style:{"text-align":"left"}},"无向图中到环的距离 🔒",-1),DY=t("td",{style:{"text-align":"center"}},null,-1),WY={style:{"text-align":"left"}},SY=t("code",null,"深度优先搜索",-1),YY=t("code",null,"广度优先搜索",-1),FY=t("code",null,"并查集",-1),HY=t("code",null,"1+",-1),JY=t("td",{style:{"text-align":"left"}},"🔴",-1),QY={style:{"text-align":"center"}},RY={href:"https://leetcode.cn/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},ZY={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},GY=t("td",{style:{"text-align":"center"}},"2246",-1),MY=t("td",{style:{"text-align":"left"}},"相邻字符不同的最长路径",-1),XY=t("td",{style:{"text-align":"center"}},null,-1),$Y={style:{"text-align":"left"}},tF=t("code",null,"树",-1),eF=t("code",null,"深度优先搜索",-1),oF=t("code",null,"图",-1),lF=t("code",null,"3+",-1),sF=t("td",{style:{"text-align":"left"}},"🔴",-1),nF={style:{"text-align":"center"}},dF={href:"https://leetcode.cn/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},rF={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},_F=t("td",{style:{"text-align":"center"}},"2265",-1),cF=t("td",{style:{"text-align":"left"}},"统计值等于子树平均值的节点数",-1),aF=t("td",{style:{"text-align":"center"}},null,-1),iF={style:{"text-align":"left"}},hF=t("code",null,"树",-1),fF=t("code",null,"深度优先搜索",-1),gF=t("code",null,"二叉树",-1),uF=t("td",{style:{"text-align":"left"}},"🟠",-1),mF={style:{"text-align":"center"}},pF={href:"https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},yF={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},xF=t("td",{style:{"text-align":"center"}},"2277",-1),bF=t("td",{style:{"text-align":"left"}},"树中最接近路径的节点 🔒",-1),kF=t("td",{style:{"text-align":"center"}},null,-1),vF={style:{"text-align":"left"}},wF=t("code",null,"树",-1),IF=t("code",null,"深度优先搜索",-1),zF=t("code",null,"广度优先搜索",-1),jF=t("code",null,"1+",-1),OF=t("td",{style:{"text-align":"left"}},"🔴",-1),qF={style:{"text-align":"center"}},LF={href:"https://leetcode.cn/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},CF={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},NF=t("td",{style:{"text-align":"center"}},"2307",-1),PF=t("td",{style:{"text-align":"left"}},"检查方程中的矛盾之处 🔒",-1),KF=t("td",{style:{"text-align":"center"}},null,-1),VF={style:{"text-align":"left"}},BF=t("code",null,"深度优先搜索",-1),TF=t("code",null,"并查集",-1),EF=t("code",null,"图",-1),UF=t("code",null,"1+",-1),AF=t("td",{style:{"text-align":"left"}},"🔴",-1),DF={style:{"text-align":"center"}},WF={href:"https://leetcode.cn/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},SF={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},YF=t("td",{style:{"text-align":"center"}},"2313",-1),FF=t("td",{style:{"text-align":"left"}},"二叉树中得到结果所需的最少翻转次数 🔒",-1),HF=t("td",{style:{"text-align":"center"}},null,-1),JF={style:{"text-align":"left"}},QF=t("code",null,"树",-1),RF=t("code",null,"深度优先搜索",-1),ZF=t("code",null,"动态规划",-1),GF=t("code",null,"1+",-1),MF=t("td",{style:{"text-align":"left"}},"🔴",-1),XF={style:{"text-align":"center"}},$F={href:"https://leetcode.cn/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},tH={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},eH=t("td",{style:{"text-align":"center"}},"2316",-1),oH=t("td",{style:{"text-align":"left"}},"统计无向图中无法互相到达点对数",-1),lH=t("td",{style:{"text-align":"center"}},null,-1),sH={style:{"text-align":"left"}},nH=t("code",null,"深度优先搜索",-1),dH=t("code",null,"广度优先搜索",-1),rH=t("code",null,"并查集",-1),_H=t("code",null,"1+",-1),cH=t("td",{style:{"text-align":"left"}},"🟠",-1),aH={style:{"text-align":"center"}},iH={href:"https://leetcode.cn/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},hH={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},fH=t("td",{style:{"text-align":"center"}},"2322",-1),gH=t("td",{style:{"text-align":"left"}},"从树中删除边的最小分数",-1),uH=t("td",{style:{"text-align":"center"}},null,-1),mH={style:{"text-align":"left"}},pH=t("code",null,"位运算",-1),yH=t("code",null,"树",-1),xH=t("code",null,"深度优先搜索",-1),bH=t("code",null,"1+",-1),kH=t("td",{style:{"text-align":"left"}},"🔴",-1),vH={style:{"text-align":"center"}},wH={href:"https://leetcode.cn/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},IH={href:"https://leetcode.com/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},zH=t("td",{style:{"text-align":"center"}},"2328",-1),jH=t("td",{style:{"text-align":"left"}},"网格图中递增路径的数目",-1),OH=t("td",{style:{"text-align":"center"}},null,-1),qH={style:{"text-align":"left"}},LH=t("code",null,"深度优先搜索",-1),CH=t("code",null,"广度优先搜索",-1),NH=t("code",null,"图",-1),PH=t("code",null,"5+",-1),KH=t("td",{style:{"text-align":"left"}},"🔴",-1),VH={style:{"text-align":"center"}},BH={href:"https://leetcode.cn/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},TH={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},EH=t("td",{style:{"text-align":"center"}},"2331",-1),UH=t("td",{style:{"text-align":"left"}},"计算布尔二叉树的值",-1),AH=t("td",{style:{"text-align":"center"}},null,-1),DH={style:{"text-align":"left"}},WH=t("code",null,"树",-1),SH=t("code",null,"深度优先搜索",-1),YH=t("code",null,"二叉树",-1),FH=t("td",{style:{"text-align":"left"}},"🟢",-1),HH={style:{"text-align":"center"}},JH={href:"https://leetcode.cn/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},QH={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},RH=t("td",{style:{"text-align":"center"}},"2359",-1),ZH=t("td",{style:{"text-align":"left"}},"找到离给定两个节点最近的节点",-1),GH=t("td",{style:{"text-align":"center"}},null,-1),MH={style:{"text-align":"left"}},XH=t("code",null,"深度优先搜索",-1),$H=t("code",null,"图",-1),tJ=t("td",{style:{"text-align":"left"}},"🟠",-1),eJ={style:{"text-align":"center"}},oJ={href:"https://leetcode.cn/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},lJ={href:"https://leetcode.com/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},sJ=t("td",{style:{"text-align":"center"}},"2360",-1),nJ=t("td",{style:{"text-align":"left"}},"图中的最长环",-1),dJ=t("td",{style:{"text-align":"center"}},null,-1),rJ={style:{"text-align":"left"}},_J=t("code",null,"深度优先搜索",-1),cJ=t("code",null,"图",-1),aJ=t("code",null,"拓扑排序",-1),iJ=t("td",{style:{"text-align":"left"}},"🔴",-1),hJ={style:{"text-align":"center"}},fJ={href:"https://leetcode.cn/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},gJ={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},uJ=t("td",{style:{"text-align":"center"}},"2368",-1),mJ=t("td",{style:{"text-align":"left"}},"受限条件下可到达节点的数目",-1),pJ=t("td",{style:{"text-align":"center"}},null,-1),yJ={style:{"text-align":"left"}},xJ=t("code",null,"树",-1),bJ=t("code",null,"深度优先搜索",-1),kJ=t("code",null,"广度优先搜索",-1),vJ=t("code",null,"4+",-1),wJ=t("td",{style:{"text-align":"left"}},"🟠",-1),IJ={style:{"text-align":"center"}},zJ={href:"https://leetcode.cn/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},jJ={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},OJ=t("td",{style:{"text-align":"center"}},"2378",-1),qJ=t("td",{style:{"text-align":"left"}},"选择边来最大化树的得分 🔒",-1),LJ=t("td",{style:{"text-align":"center"}},null,-1),CJ={style:{"text-align":"left"}},NJ=t("code",null,"树",-1),PJ=t("code",null,"深度优先搜索",-1),KJ=t("code",null,"动态规划",-1),VJ=t("td",{style:{"text-align":"left"}},"🟠",-1),BJ={style:{"text-align":"center"}},TJ={href:"https://leetcode.cn/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},EJ={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},UJ=t("td",{style:{"text-align":"center"}},"2385",-1),AJ=t("td",{style:{"text-align":"left"}},"感染二叉树需要的总时间",-1),DJ=t("td",{style:{"text-align":"center"}},null,-1),WJ={style:{"text-align":"left"}},SJ=t("code",null,"树",-1),YJ=t("code",null,"深度优先搜索",-1),FJ=t("code",null,"广度优先搜索",-1),HJ=t("code",null,"2+",-1),JJ=t("td",{style:{"text-align":"left"}},"🟠",-1),QJ={style:{"text-align":"center"}},RJ={href:"https://leetcode.cn/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},ZJ={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},GJ=t("td",{style:{"text-align":"center"}},"2415",-1),MJ=t("td",{style:{"text-align":"left"}},"反转二叉树的奇数层",-1),XJ=t("td",{style:{"text-align":"center"}},null,-1),$J={style:{"text-align":"left"}},tQ=t("code",null,"树",-1),eQ=t("code",null,"深度优先搜索",-1),oQ=t("code",null,"广度优先搜索",-1),lQ=t("code",null,"1+",-1),sQ=t("td",{style:{"text-align":"left"}},"🟠",-1),nQ={style:{"text-align":"center"}},dQ={href:"https://leetcode.cn/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},rQ={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},_Q=t("td",{style:{"text-align":"center"}},"2440",-1),cQ=t("td",{style:{"text-align":"left"}},"创建价值相同的连通块",-1),aQ=t("td",{style:{"text-align":"center"}},null,-1),iQ={style:{"text-align":"left"}},hQ=t("code",null,"树",-1),fQ=t("code",null,"深度优先搜索",-1),gQ=t("code",null,"数组",-1),uQ=t("code",null,"2+",-1),mQ=t("td",{style:{"text-align":"left"}},"🔴",-1),pQ={style:{"text-align":"center"}},yQ={href:"https://leetcode.cn/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},xQ={href:"https://leetcode.com/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},bQ=t("td",{style:{"text-align":"center"}},"2445",-1),kQ=t("td",{style:{"text-align":"left"}},"值为 1 的节点数 🔒",-1),vQ=t("td",{style:{"text-align":"center"}},null,-1),wQ={style:{"text-align":"left"}},IQ=t("code",null,"树",-1),zQ=t("code",null,"深度优先搜索",-1),jQ=t("code",null,"广度优先搜索",-1),OQ=t("code",null,"1+",-1),qQ=t("td",{style:{"text-align":"left"}},"🟠",-1),LQ={style:{"text-align":"center"}},CQ={href:"https://leetcode.cn/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},NQ={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},PQ=t("td",{style:{"text-align":"center"}},"2458",-1),KQ=t("td",{style:{"text-align":"left"}},"移除子树后的二叉树高度",-1),VQ={style:{"text-align":"center"}},BQ={style:{"text-align":"left"}},TQ=t("code",null,"树",-1),EQ=t("code",null,"深度优先搜索",-1),UQ=t("code",null,"广度优先搜索",-1),AQ=t("code",null,"2+",-1),DQ=t("td",{style:{"text-align":"left"}},"🔴",-1),WQ={style:{"text-align":"center"}},SQ={href:"https://leetcode.cn/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},YQ={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},FQ=t("td",{style:{"text-align":"center"}},"2467",-1),HQ=t("td",{style:{"text-align":"left"}},"树上最大得分和路径",-1),JQ=t("td",{style:{"text-align":"center"}},null,-1),QQ={style:{"text-align":"left"}},RQ=t("code",null,"树",-1),ZQ=t("code",null,"深度优先搜索",-1),GQ=t("code",null,"广度优先搜索",-1),MQ=t("code",null,"2+",-1),XQ=t("td",{style:{"text-align":"left"}},"🟠",-1),$Q={style:{"text-align":"center"}},tR={href:"https://leetcode.cn/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},eR={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},oR=t("td",{style:{"text-align":"center"}},"2476",-1),lR=t("td",{style:{"text-align":"left"}},"二叉搜索树最近节点查询",-1),sR=t("td",{style:{"text-align":"center"}},null,-1),nR={style:{"text-align":"left"}},dR=t("code",null,"树",-1),rR=t("code",null,"深度优先搜索",-1),_R=t("code",null,"二叉搜索树",-1),cR=t("code",null,"3+",-1),aR=t("td",{style:{"text-align":"left"}},"🟠",-1),iR={style:{"text-align":"center"}},hR={href:"https://leetcode.cn/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},fR={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},gR=t("td",{style:{"text-align":"center"}},"2477",-1),uR=t("td",{style:{"text-align":"left"}},"到达首都的最少油耗",-1),mR=t("td",{style:{"text-align":"center"}},null,-1),pR={style:{"text-align":"left"}},yR=t("code",null,"树",-1),xR=t("code",null,"深度优先搜索",-1),bR=t("code",null,"广度优先搜索",-1),kR=t("code",null,"1+",-1),vR=t("td",{style:{"text-align":"left"}},"🟠",-1),wR={style:{"text-align":"center"}},IR={href:"https://leetcode.cn/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},zR={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},jR=t("td",{style:{"text-align":"center"}},"2479",-1),OR=t("td",{style:{"text-align":"left"}},"两个不重叠子树的最大异或值 🔒",-1),qR=t("td",{style:{"text-align":"center"}},null,-1),LR={style:{"text-align":"left"}},CR=t("code",null,"树",-1),NR=t("code",null,"深度优先搜索",-1),PR=t("code",null,"图",-1),KR=t("code",null,"1+",-1),VR=t("td",{style:{"text-align":"left"}},"🔴",-1),BR={style:{"text-align":"center"}},TR={href:"https://leetcode.cn/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},ER={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},UR=t("td",{style:{"text-align":"center"}},"2492",-1),AR=t("td",{style:{"text-align":"left"}},"两个城市间路径的最小分数",-1),DR=t("td",{style:{"text-align":"center"}},null,-1),WR={style:{"text-align":"left"}},SR=t("code",null,"深度优先搜索",-1),YR=t("code",null,"广度优先搜索",-1),FR=t("code",null,"并查集",-1),HR=t("code",null,"1+",-1),JR=t("td",{style:{"text-align":"left"}},"🟠",-1),QR={style:{"text-align":"center"}},RR={href:"https://leetcode.cn/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},ZR={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},GR=t("td",{style:{"text-align":"center"}},"2538",-1),MR=t("td",{style:{"text-align":"left"}},"最大价值和与最小价值和的差值",-1),XR=t("td",{style:{"text-align":"center"}},null,-1),$R={style:{"text-align":"left"}},tZ=t("code",null,"树",-1),eZ=t("code",null,"深度优先搜索",-1),oZ=t("code",null,"数组",-1),lZ=t("code",null,"1+",-1),sZ=t("td",{style:{"text-align":"left"}},"🔴",-1),nZ={style:{"text-align":"center"}},dZ={href:"https://leetcode.cn/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},rZ={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},_Z=t("td",{style:{"text-align":"center"}},"2556",-1),cZ=t("td",{style:{"text-align":"left"}},"二进制矩阵中翻转最多一次使路径不连通",-1),aZ=t("td",{style:{"text-align":"center"}},null,-1),iZ={style:{"text-align":"left"}},hZ=t("code",null,"深度优先搜索",-1),fZ=t("code",null,"广度优先搜索",-1),gZ=t("code",null,"数组",-1),uZ=t("code",null,"2+",-1),mZ=t("td",{style:{"text-align":"left"}},"🟠",-1),pZ={style:{"text-align":"center"}},yZ={href:"https://leetcode.cn/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},xZ={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},bZ=t("td",{style:{"text-align":"center"}},"2581",-1),kZ=t("td",{style:{"text-align":"left"}},"统计可能的树根数目",-1),vZ=t("td",{style:{"text-align":"center"}},null,-1),wZ={style:{"text-align":"left"}},IZ=t("code",null,"树",-1),zZ=t("code",null,"深度优先搜索",-1),jZ=t("code",null,"数组",-1),OZ=t("code",null,"2+",-1),qZ=t("td",{style:{"text-align":"left"}},"🔴",-1),LZ={style:{"text-align":"center"}},CZ={href:"https://leetcode.cn/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},NZ={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},PZ=t("td",{style:{"text-align":"center"}},"2596",-1),KZ=t("td",{style:{"text-align":"left"}},"检查骑士巡视方案",-1),VZ=t("td",{style:{"text-align":"center"}},null,-1),BZ={style:{"text-align":"left"}},TZ=t("code",null,"深度优先搜索",-1),EZ=t("code",null,"广度优先搜索",-1),UZ=t("code",null,"数组",-1),AZ=t("code",null,"2+",-1),DZ=t("td",{style:{"text-align":"left"}},"🟠",-1),WZ={style:{"text-align":"center"}},SZ={href:"https://leetcode.cn/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},YZ={href:"https://leetcode.com/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},FZ=t("td",{style:{"text-align":"center"}},"2641",-1),HZ=t("td",{style:{"text-align":"left"}},"二叉树的堂兄弟节点 II",-1),JZ={style:{"text-align":"center"}},QZ={style:{"text-align":"left"}},RZ=t("code",null,"树",-1),ZZ=t("code",null,"深度优先搜索",-1),GZ=t("code",null,"广度优先搜索",-1),MZ=t("code",null,"2+",-1),XZ=t("td",{style:{"text-align":"left"}},"🟠",-1),$Z={style:{"text-align":"center"}},tG={href:"https://leetcode.cn/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},eG={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},oG=t("td",{style:{"text-align":"center"}},"2646",-1),lG=t("td",{style:{"text-align":"left"}},"最小化旅行的价格总和",-1),sG=t("td",{style:{"text-align":"center"}},null,-1),nG={style:{"text-align":"left"}},dG=t("code",null,"树",-1),rG=t("code",null,"深度优先搜索",-1),_G=t("code",null,"图",-1),cG=t("code",null,"2+",-1),aG=t("td",{style:{"text-align":"left"}},"🔴",-1),iG={style:{"text-align":"center"}},hG={href:"https://leetcode.cn/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},fG={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},gG=t("td",{style:{"text-align":"center"}},"2658",-1),uG=t("td",{style:{"text-align":"left"}},"网格图中鱼的最大数目",-1),mG=t("td",{style:{"text-align":"center"}},null,-1),pG={style:{"text-align":"left"}},yG=t("code",null,"深度优先搜索",-1),xG=t("code",null,"广度优先搜索",-1),bG=t("code",null,"并查集",-1),kG=t("code",null,"2+",-1),vG=t("td",{style:{"text-align":"left"}},"🟠",-1),wG={style:{"text-align":"center"}},IG={href:"https://leetcode.cn/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},zG={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},jG=t("td",{style:{"text-align":"center"}},"2685",-1),OG=t("td",{style:{"text-align":"left"}},"统计完全连通分量的数量",-1),qG=t("td",{style:{"text-align":"center"}},null,-1),LG={style:{"text-align":"left"}},CG=t("code",null,"深度优先搜索",-1),NG=t("code",null,"广度优先搜索",-1),PG=t("code",null,"图",-1),KG=t("td",{style:{"text-align":"left"}},"🟠",-1),VG={style:{"text-align":"center"}},BG={href:"https://leetcode.cn/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},TG={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},EG=t("td",{style:{"text-align":"center"}},"2689",-1),UG=t("td",{style:{"text-align":"left"}},"从 Rope 树中提取第 K 个字符 🔒",-1),AG=t("td",{style:{"text-align":"center"}},null,-1),DG={style:{"text-align":"left"}},WG=t("code",null,"树",-1),SG=t("code",null,"深度优先搜索",-1),YG=t("code",null,"二叉树",-1),FG=t("td",{style:{"text-align":"left"}},"🟢",-1),HG={style:{"text-align":"center"}},JG={href:"https://leetcode.cn/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},QG={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},RG=t("td",{style:{"text-align":"center"}},"2764",-1),ZG=t("td",{style:{"text-align":"left"}},"数组是否表示某二叉树的前序遍历 🔒",-1),GG=t("td",{style:{"text-align":"center"}},null,-1),MG={style:{"text-align":"left"}},XG=t("code",null,"栈",-1),$G=t("code",null,"树",-1),tM=t("code",null,"深度优先搜索",-1),eM=t("code",null,"1+",-1),oM=t("td",{style:{"text-align":"left"}},"🟠",-1),lM={style:{"text-align":"center"}},sM={href:"https://leetcode.cn/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},nM={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},dM=t("td",{style:{"text-align":"center"}},"2773",-1),rM=t("td",{style:{"text-align":"left"}},"特殊二叉树的高度 🔒",-1),_M=t("td",{style:{"text-align":"center"}},null,-1),cM={style:{"text-align":"left"}},aM=t("code",null,"树",-1),iM=t("code",null,"深度优先搜索",-1),hM=t("code",null,"广度优先搜索",-1),fM=t("code",null,"1+",-1),gM=t("td",{style:{"text-align":"left"}},"🟠",-1),uM={style:{"text-align":"center"}},mM={href:"https://leetcode.cn/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},pM={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},yM=t("td",{style:{"text-align":"center"}},"2791",-1),xM=t("td",{style:{"text-align":"left"}},"树中可以形成回文的路径数",-1),bM=t("td",{style:{"text-align":"center"}},null,-1),kM={style:{"text-align":"left"}},vM=t("code",null,"位运算",-1),wM=t("code",null,"树",-1),IM=t("code",null,"深度优先搜索",-1),zM=t("code",null,"2+",-1),jM=t("td",{style:{"text-align":"left"}},"🔴",-1),OM={style:{"text-align":"center"}},qM={href:"https://leetcode.cn/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},LM={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},CM=t("td",{style:{"text-align":"center"}},"2792",-1),NM=t("td",{style:{"text-align":"left"}},"计算足够大的节点数 🔒",-1),PM=t("td",{style:{"text-align":"center"}},null,-1),KM={style:{"text-align":"left"}},VM=t("code",null,"树",-1),BM=t("code",null,"深度优先搜索",-1),TM=t("code",null,"分治",-1),EM=t("code",null,"1+",-1),UM=t("td",{style:{"text-align":"left"}},"🔴",-1),AM={style:{"text-align":"center"}},DM={href:"https://leetcode.cn/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},WM={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},SM=t("td",{style:{"text-align":"center"}},"2852",-1),YM=t("td",{style:{"text-align":"left"}},"所有单元格的远离程度之和 🔒",-1),FM=t("td",{style:{"text-align":"center"}},null,-1),HM={style:{"text-align":"left"}},JM=t("code",null,"深度优先搜索",-1),QM=t("code",null,"广度优先搜索",-1),RM=t("code",null,"并查集",-1),ZM=t("code",null,"3+",-1),GM=t("td",{style:{"text-align":"left"}},"🟠",-1),MM={style:{"text-align":"center"}},XM={href:"https://leetcode.cn/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},$M={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},tX=t("td",{style:{"text-align":"center"}},"2858",-1),eX=t("td",{style:{"text-align":"left"}},"可以到达每一个节点的最少边反转次数",-1),oX=t("td",{style:{"text-align":"center"}},null,-1),lX={style:{"text-align":"left"}},sX=t("code",null,"深度优先搜索",-1),nX=t("code",null,"广度优先搜索",-1),dX=t("code",null,"图",-1),rX=t("code",null,"1+",-1),_X=t("td",{style:{"text-align":"left"}},"🔴",-1),cX={style:{"text-align":"center"}},aX={href:"https://leetcode.cn/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},iX={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},hX=t("td",{style:{"text-align":"center"}},"2867",-1),fX=t("td",{style:{"text-align":"left"}},"统计树中的合法路径数目",-1),gX=t("td",{style:{"text-align":"center"}},null,-1),uX={style:{"text-align":"left"}},mX=t("code",null,"树",-1),pX=t("code",null,"深度优先搜索",-1),yX=t("code",null,"数学",-1),xX=t("code",null,"2+",-1),bX=t("td",{style:{"text-align":"left"}},"🔴",-1),kX={style:{"text-align":"center"}},vX={href:"https://leetcode.cn/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},wX={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},IX=t("td",{style:{"text-align":"center"}},"2872",-1),zX=t("td",{style:{"text-align":"left"}},"可以被 K 整除连通块的最大数目",-1),jX=t("td",{style:{"text-align":"center"}},null,-1),OX={style:{"text-align":"left"}},qX=t("code",null,"树",-1),LX=t("code",null,"深度优先搜索",-1),CX=t("td",{style:{"text-align":"left"}},"🔴",-1),NX={style:{"text-align":"center"}},PX={href:"https://leetcode.cn/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},KX={href:"https://leetcode.com/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},VX=t("td",{style:{"text-align":"center"}},"2920",-1),BX=t("td",{style:{"text-align":"left"}},"收集所有金币可获得的最大积分",-1),TX=t("td",{style:{"text-align":"center"}},null,-1),EX={style:{"text-align":"left"}},UX=t("code",null,"位运算",-1),AX=t("code",null,"树",-1),DX=t("code",null,"深度优先搜索",-1),WX=t("code",null,"2+",-1),SX=t("td",{style:{"text-align":"left"}},"🔴",-1),YX={style:{"text-align":"center"}},FX={href:"https://leetcode.cn/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},HX={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},JX=t("td",{style:{"text-align":"center"}},"2925",-1),QX=t("td",{style:{"text-align":"left"}},"在树上执行操作以后得到的最大分数",-1),RX=t("td",{style:{"text-align":"center"}},null,-1),ZX={style:{"text-align":"left"}},GX=t("code",null,"树",-1),MX=t("code",null,"深度优先搜索",-1),XX=t("code",null,"动态规划",-1),$X=t("td",{style:{"text-align":"left"}},"🟠",-1),t$={style:{"text-align":"center"}},e$={href:"https://leetcode.cn/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},o$={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},l$=t("td",{style:{"text-align":"center"}},"2973",-1),s$=t("td",{style:{"text-align":"left"}},"树中每个节点放置的金币数目",-1),n$=t("td",{style:{"text-align":"center"}},null,-1),d$={style:{"text-align":"left"}},r$=t("code",null,"树",-1),_$=t("code",null,"深度优先搜索",-1),c$=t("code",null,"动态规划",-1),a$=t("code",null,"2+",-1),i$=t("td",{style:{"text-align":"left"}},"🔴",-1),h$={style:{"text-align":"center"}},f$={href:"https://leetcode.cn/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},g$={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},u$=t("td",{style:{"text-align":"center"}},"3004",-1),m$=t("td",{style:{"text-align":"left"}},"相同颜色的最大子树 🔒",-1),p$=t("td",{style:{"text-align":"center"}},null,-1),y$={style:{"text-align":"left"}},x$=t("code",null,"树",-1),b$=t("code",null,"深度优先搜索",-1),k$=t("code",null,"数组",-1),v$=t("code",null,"1+",-1),w$=t("td",{style:{"text-align":"left"}},"🟠",-1),I$={style:{"text-align":"center"}},z$={href:"https://leetcode.cn/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},j$={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},O$=t("td",{style:{"text-align":"center"}},"3067",-1),q$=t("td",{style:{"text-align":"left"}},"在带权树网络中统计可连接服务器对数目",-1),L$=t("td",{style:{"text-align":"center"}},null,-1),C$={style:{"text-align":"left"}},N$=t("code",null,"树",-1),P$=t("code",null,"深度优先搜索",-1),K$=t("code",null,"数组",-1),V$=t("td",{style:{"text-align":"left"}},"🟠",-1),B$={style:{"text-align":"center"}},T$={href:"https://leetcode.cn/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},E$={href:"https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},U$=t("td",{style:{"text-align":"center"}},"3123",-1),A$=t("td",{style:{"text-align":"left"}},"最短路径中的边",-1),D$=t("td",{style:{"text-align":"center"}},null,-1),W$={style:{"text-align":"left"}},S$=t("code",null,"深度优先搜索",-1),Y$=t("code",null,"广度优先搜索",-1),F$=t("code",null,"图",-1),H$=t("code",null,"2+",-1),J$=t("td",{style:{"text-align":"left"}},"🔴",-1),Q$={style:{"text-align":"center"}},R$={href:"https://leetcode.cn/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},Z$={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},G$=t("td",{style:{"text-align":"center"}},"3157",-1),M$=t("td",{style:{"text-align":"left"}},"找到具有最小和的树的层数 🔒",-1),X$=t("td",{style:{"text-align":"center"}},null,-1),$$={style:{"text-align":"left"}},ttt=t("code",null,"树",-1),ett=t("code",null,"深度优先搜索",-1),ott=t("code",null,"广度优先搜索",-1),ltt=t("code",null,"1+",-1),stt=t("td",{style:{"text-align":"left"}},"🟠",-1),ntt={style:{"text-align":"center"}},dtt={href:"https://leetcode.cn/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},rtt={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},_tt=t("td",{style:{"text-align":"center"}},"3203",-1),ctt=t("td",{style:{"text-align":"left"}},"合并两棵树后的最小直径",-1),att=t("td",{style:{"text-align":"center"}},null,-1),itt={style:{"text-align":"left"}},htt=t("code",null,"树",-1),ftt=t("code",null,"深度优先搜索",-1),gtt=t("code",null,"广度优先搜索",-1),utt=t("code",null,"1+",-1),mtt=t("td",{style:{"text-align":"left"}},"🔴",-1),ptt={style:{"text-align":"center"}},ytt={href:"https://leetcode.cn/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},xtt={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},btt=t("td",{style:{"text-align":"center"}},"3235",-1),ktt=t("td",{style:{"text-align":"left"}},"判断矩形的两个角落是否可达",-1),vtt=t("td",{style:{"text-align":"center"}},null,-1),wtt={style:{"text-align":"left"}},Itt=t("code",null,"深度优先搜索",-1),ztt=t("code",null,"广度优先搜索",-1),jtt=t("code",null,"并查集",-1),Ott=t("code",null,"3+",-1),qtt=t("td",{style:{"text-align":"left"}},"🔴",-1),Ltt={style:{"text-align":"center"}},Ctt={href:"https://leetcode.cn/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},Ntt={href:"https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},Ptt=t("td",{style:{"text-align":"center"}},"3241",-1),Ktt=t("td",{style:{"text-align":"left"}},"标记所有节点需要的时间",-1),Vtt=t("td",{style:{"text-align":"center"}},null,-1),Btt={style:{"text-align":"left"}},Ttt=t("code",null,"树",-1),Ett=t("code",null,"深度优先搜索",-1),Utt=t("code",null,"图",-1),Att=t("code",null,"1+",-1),Dtt=t("td",{style:{"text-align":"left"}},"🔴",-1),Wtt={style:{"text-align":"center"}},Stt={href:"https://leetcode.cn/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},Ytt={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},Ftt=t("td",{style:{"text-align":"center"}},"3249",-1),Htt=t("td",{style:{"text-align":"left"}},"统计好节点的数目",-1),Jtt=t("td",{style:{"text-align":"center"}},null,-1),Qtt={style:{"text-align":"left"}},Rtt=t("code",null,"树",-1),Ztt=t("code",null,"深度优先搜索",-1),Gtt=t("td",{style:{"text-align":"left"}},"🟠",-1),Mtt={style:{"text-align":"center"}},Xtt={href:"https://leetcode.cn/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},$tt={href:"https://leetcode.com/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},tet=t("td",{style:{"text-align":"center"}},"3310",-1),eet=t("td",{style:{"text-align":"left"}},"移除可疑的方法",-1),oet=t("td",{style:{"text-align":"center"}},null,-1),set={style:{"text-align":"left"}},net=t("code",null,"深度优先搜索",-1),det=t("code",null,"广度优先搜索",-1),ret=t("code",null,"图",-1),_et=t("td",{style:{"text-align":"left"}},"🟠",-1),cet={style:{"text-align":"center"}},aet={href:"https://leetcode.cn/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},iet={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},het=t("td",{style:{"text-align":"center"}},"3313",-1),fet=t("td",{style:{"text-align":"left"}},"查找树中最后标记的节点 🔒",-1),get=t("td",{style:{"text-align":"center"}},null,-1),uet={style:{"text-align":"left"}},met=t("code",null,"树",-1),pet=t("code",null,"深度优先搜索",-1),yet=t("td",{style:{"text-align":"left"}},"🔴",-1),xet={style:{"text-align":"center"}},bet={href:"https://leetcode.cn/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},ket={href:"https://leetcode.com/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},vet=t("td",{style:{"text-align":"center"}},"3319",-1),wet=t("td",{style:{"text-align":"left"}},"第 K 大的完美二叉子树的大小",-1),Iet={style:{"text-align":"center"}},zet={style:{"text-align":"left"}},jet=t("code",null,"树",-1),Oet=t("code",null,"深度优先搜索",-1),qet=t("code",null,"二叉树",-1),Let=t("code",null,"1+",-1),Cet=t("td",{style:{"text-align":"left"}},"🟠",-1),Net={style:{"text-align":"center"}},Pet={href:"https://leetcode.cn/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ket={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vet=t("td",{style:{"text-align":"center"}},"3327",-1),Bet=t("td",{style:{"text-align":"left"}},"判断 DFS 字符串是否是回文串",-1),Tet=t("td",{style:{"text-align":"center"}},null,-1),Eet={style:{"text-align":"left"}},Uet=t("code",null,"树",-1),Aet=t("code",null,"深度优先搜索",-1),Det=t("code",null,"数组",-1),Wet=t("code",null,"3+",-1),Set=t("td",{style:{"text-align":"left"}},"🔴",-1),Yet={style:{"text-align":"center"}},Fet={href:"https://leetcode.cn/problems/check-if-dfs-strings-are-palindromes",target:"_blank",rel:"noopener noreferrer"},Het={href:"https://leetcode.com/problems/check-if-dfs-strings-are-palindromes",target:"_blank",rel:"noopener noreferrer"},Jet=t("td",{style:{"text-align":"center"}},"LCP 07",-1),Qet=t("td",{style:{"text-align":"left"}},"传递信息",-1),Ret=t("td",{style:{"text-align":"center"}},null,-1),Zet={style:{"text-align":"left"}},Get=t("code",null,"深度优先搜索",-1),Met=t("code",null,"广度优先搜索",-1),Xet=t("code",null,"图",-1),$et=t("code",null,"1+",-1),tot=t("td",{style:{"text-align":"left"}},"🟢",-1),eot={style:{"text-align":"center"}},oot={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},lot=t("td",{style:{"text-align":"center"}},"LCP 10",-1),sot=t("td",{style:{"text-align":"left"}},"二叉树任务调度",-1),not=t("td",{style:{"text-align":"center"}},null,-1),dot={style:{"text-align":"left"}},rot=t("code",null,"树",-1),_ot=t("code",null,"深度优先搜索",-1),cot=t("code",null,"动态规划",-1),aot=t("code",null,"1+",-1),iot=t("td",{style:{"text-align":"left"}},"🔴",-1),hot={style:{"text-align":"center"}},fot={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},got=t("td",{style:{"text-align":"center"}},"LCP 21",-1),uot=t("td",{style:{"text-align":"left"}},"追逐游戏",-1),mot=t("td",{style:{"text-align":"center"}},null,-1),pot={style:{"text-align":"left"}},yot=t("code",null,"深度优先搜索",-1),xot=t("code",null,"广度优先搜索",-1),bot=t("code",null,"图",-1),kot=t("code",null,"1+",-1),vot=t("td",{style:{"text-align":"left"}},"🔴",-1),wot={style:{"text-align":"center"}},Iot={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},zot=t("td",{style:{"text-align":"center"}},"LCP 31",-1),jot=t("td",{style:{"text-align":"left"}},"变换的迷宫",-1),Oot=t("td",{style:{"text-align":"center"}},null,-1),qot={style:{"text-align":"left"}},Lot=t("code",null,"深度优先搜索",-1),Cot=t("code",null,"广度优先搜索",-1),Not=t("code",null,"数组",-1),Pot=t("code",null,"2+",-1),Kot=t("td",{style:{"text-align":"left"}},"🔴",-1),Vot={style:{"text-align":"center"}},Bot={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},Tot=t("td",{style:{"text-align":"center"}},"LCP 44",-1),Eot=t("td",{style:{"text-align":"left"}},"开幕式焰火",-1),Uot=t("td",{style:{"text-align":"center"}},null,-1),Aot={style:{"text-align":"left"}},Dot=t("code",null,"树",-1),Wot=t("code",null,"深度优先搜索",-1),Sot=t("code",null,"广度优先搜索",-1),Yot=t("code",null,"2+",-1),Fot=t("td",{style:{"text-align":"left"}},"🟢",-1),Hot={style:{"text-align":"center"}},Jot={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},Qot=t("td",{style:{"text-align":"center"}},"LCP 45",-1),Rot=t("td",{style:{"text-align":"left"}},"自行车炫技赛场",-1),Zot=t("td",{style:{"text-align":"center"}},null,-1),Got={style:{"text-align":"left"}},Mot=t("code",null,"深度优先搜索",-1),Xot=t("code",null,"广度优先搜索",-1),$ot=t("code",null,"记忆化搜索",-1),tlt=t("code",null,"3+",-1),elt=t("td",{style:{"text-align":"left"}},"🟠",-1),olt={style:{"text-align":"center"}},llt={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},slt=t("td",{style:{"text-align":"center"}},"LCP 63",-1),nlt=t("td",{style:{"text-align":"left"}},"弹珠游戏",-1),dlt=t("td",{style:{"text-align":"center"}},null,-1),rlt={style:{"text-align":"left"}},_lt=t("code",null,"深度优先搜索",-1),clt=t("code",null,"广度优先搜索",-1),alt=t("code",null,"图",-1),ilt=t("code",null,"5+",-1),hlt=t("td",{style:{"text-align":"left"}},"🟠",-1),flt={style:{"text-align":"center"}},glt={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},ult=t("td",{style:{"text-align":"center"}},"LCP 64",-1),mlt=t("td",{style:{"text-align":"left"}},"二叉树灯饰",-1),plt=t("td",{style:{"text-align":"center"}},null,-1),ylt={style:{"text-align":"left"}},xlt=t("code",null,"树",-1),blt=t("code",null,"深度优先搜索",-1),klt=t("code",null,"动态规划",-1),vlt=t("code",null,"1+",-1),wlt=t("td",{style:{"text-align":"left"}},"🟠",-1),Ilt={style:{"text-align":"center"}},zlt={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},jlt=t("td",{style:{"text-align":"center"}},"LCP 67",-1),Olt=t("td",{style:{"text-align":"left"}},"装饰树",-1),qlt=t("td",{style:{"text-align":"center"}},null,-1),Llt={style:{"text-align":"left"}},Clt=t("code",null,"树",-1),Nlt=t("code",null,"深度优先搜索",-1),Plt=t("code",null,"广度优先搜索",-1),Klt=t("code",null,"1+",-1),Vlt=t("td",{style:{"text-align":"left"}},"🟠",-1),Blt={style:{"text-align":"center"}},Tlt={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},Elt=t("td",{style:{"text-align":"center"}},"LCS 03",-1),Ult=t("td",{style:{"text-align":"left"}},"主题空间",-1),Alt=t("td",{style:{"text-align":"center"}},null,-1),Dlt={style:{"text-align":"left"}},Wlt=t("code",null,"深度优先搜索",-1),Slt=t("code",null,"广度优先搜索",-1),Ylt=t("code",null,"并查集",-1),Flt=t("code",null,"2+",-1),Hlt=t("td",{style:{"text-align":"left"}},"🟠",-1),Jlt={style:{"text-align":"center"}},Qlt={href:"https://leetcode.cn/problems/YesdPw",target:"_blank",rel:"noopener noreferrer"},Rlt=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),Zlt=t("td",{style:{"text-align":"left"}},"机器人的运动范围",-1),Glt={style:{"text-align":"center"}},Mlt={style:{"text-align":"left"}},Xlt=t("code",null,"深度优先搜索",-1),$lt=t("code",null,"广度优先搜索",-1),tst=t("code",null,"动态规划",-1),est=t("td",{style:{"text-align":"left"}},"🟠",-1),ost={style:{"text-align":"center"}},lst={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},sst=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),nst=t("td",{style:{"text-align":"left"}},"树的子结构",-1),dst={style:{"text-align":"center"}},rst={style:{"text-align":"left"}},_st=t("code",null,"树",-1),cst=t("code",null,"深度优先搜索",-1),ast=t("code",null,"二叉树",-1),ist=t("td",{style:{"text-align":"left"}},"🟠",-1),hst={style:{"text-align":"center"}},fst={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},gst=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),ust=t("td",{style:{"text-align":"left"}},"二叉树的镜像",-1),mst={style:{"text-align":"center"}},pst={style:{"text-align":"left"}},yst=t("code",null,"树",-1),xst=t("code",null,"深度优先搜索",-1),bst=t("code",null,"广度优先搜索",-1),kst=t("code",null,"1+",-1),vst=t("td",{style:{"text-align":"left"}},"🟢",-1),wst={style:{"text-align":"center"}},Ist={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},zst=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),jst=t("td",{style:{"text-align":"left"}},"对称的二叉树",-1),Ost={style:{"text-align":"center"}},qst={style:{"text-align":"left"}},Lst=t("code",null,"树",-1),Cst=t("code",null,"深度优先搜索",-1),Nst=t("code",null,"广度优先搜索",-1),Pst=t("code",null,"1+",-1),Kst=t("td",{style:{"text-align":"left"}},"🟢",-1),Vst={style:{"text-align":"center"}},Bst={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Tst=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),Est=t("td",{style:{"text-align":"left"}},"二叉树中和为某一值的路径",-1),Ust={style:{"text-align":"center"}},Ast={style:{"text-align":"left"}},Dst=t("code",null,"树",-1),Wst=t("code",null,"深度优先搜索",-1),Sst=t("code",null,"回溯",-1),Yst=t("code",null,"1+",-1),Fst=t("td",{style:{"text-align":"left"}},"🟠",-1),Hst={style:{"text-align":"center"}},Jst={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},Qst=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),Rst=t("td",{style:{"text-align":"left"}},"二叉搜索树与双向链表",-1),Zst={style:{"text-align":"center"}},Gst={style:{"text-align":"left"}},Mst=t("code",null,"栈",-1),Xst=t("code",null,"树",-1),$st=t("code",null,"深度优先搜索",-1),tnt=t("code",null,"4+",-1),ent=t("td",{style:{"text-align":"left"}},"🟠",-1),ont={style:{"text-align":"center"}},lnt={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},snt=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),nnt=t("td",{style:{"text-align":"left"}},"序列化二叉树",-1),dnt={style:{"text-align":"center"}},rnt={style:{"text-align":"left"}},_nt=t("code",null,"树",-1),cnt=t("code",null,"深度优先搜索",-1),ant=t("code",null,"广度优先搜索",-1),int=t("code",null,"3+",-1),hnt=t("td",{style:{"text-align":"left"}},"🔴",-1),fnt={style:{"text-align":"center"}},gnt={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},unt=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),mnt=t("td",{style:{"text-align":"left"}},"二叉搜索树的第k大节点",-1),pnt={style:{"text-align":"center"}},ynt={style:{"text-align":"left"}},xnt=t("code",null,"树",-1),bnt=t("code",null,"深度优先搜索",-1),knt=t("code",null,"二叉搜索树",-1),vnt=t("code",null,"1+",-1),wnt=t("td",{style:{"text-align":"left"}},"🟢",-1),Int={style:{"text-align":"center"}},znt={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},jnt=t("td",{style:{"text-align":"center"}},"剑指 Offer 55",-1),Ont=t("td",{style:{"text-align":"left"}},"二叉树的深度",-1),qnt={style:{"text-align":"center"}},Lnt={style:{"text-align":"left"}},Cnt=t("code",null,"树",-1),Nnt=t("code",null,"深度优先搜索",-1),Pnt=t("code",null,"广度优先搜索",-1),Knt=t("code",null,"1+",-1),Vnt=t("td",{style:{"text-align":"left"}},"🟢",-1),Bnt={style:{"text-align":"center"}},Tnt={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},Ent=t("td",{style:{"text-align":"center"}},"剑指 Offer 55-II",-1),Unt=t("td",{style:{"text-align":"left"}},"平衡二叉树",-1),Ant={style:{"text-align":"center"}},Dnt={style:{"text-align":"left"}},Wnt=t("code",null,"树",-1),Snt=t("code",null,"深度优先搜索",-1),Ynt=t("code",null,"二叉树",-1),Fnt=t("td",{style:{"text-align":"left"}},"🟢",-1),Hnt={style:{"text-align":"center"}},Jnt={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Qnt=t("td",{style:{"text-align":"center"}},"剑指 Offer 68",-1),Rnt=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),Znt={style:{"text-align":"center"}},Gnt={style:{"text-align":"left"}},Mnt=t("code",null,"树",-1),Xnt=t("code",null,"深度优先搜索",-1),$nt=t("code",null,"二叉搜索树",-1),tdt=t("code",null,"1+",-1),edt=t("td",{style:{"text-align":"left"}},"🟢",-1),odt={style:{"text-align":"center"}},ldt={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},sdt=t("td",{style:{"text-align":"center"}},"剑指 Offer 68-II",-1),ndt=t("td",{style:{"text-align":"left"}},"二叉树的最近公共祖先",-1),ddt={style:{"text-align":"center"}},rdt={style:{"text-align":"left"}},_dt=t("code",null,"树",-1),cdt=t("code",null,"深度优先搜索",-1),adt=t("code",null,"二叉树",-1),idt=t("td",{style:{"text-align":"left"}},"🟢",-1),hdt={style:{"text-align":"center"}},fdt={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},gdt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 105",-1),udt=t("td",{style:{"text-align":"left"}},"岛屿的最大面积",-1),mdt={style:{"text-align":"center"}},pdt={style:{"text-align":"left"}},ydt=t("code",null,"深度优先搜索",-1),xdt=t("code",null,"广度优先搜索",-1),bdt=t("code",null,"并查集",-1),kdt=t("code",null,"2+",-1),vdt=t("td",{style:{"text-align":"left"}},"🟠",-1),wdt={style:{"text-align":"center"}},Idt={href:"https://leetcode.cn/problems/ZL6zAn",target:"_blank",rel:"noopener noreferrer"},zdt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),jdt=t("td",{style:{"text-align":"left"}},"二分图",-1),Odt=t("td",{style:{"text-align":"center"}},null,-1),qdt={style:{"text-align":"left"}},Ldt=t("code",null,"深度优先搜索",-1),Cdt=t("code",null,"广度优先搜索",-1),Ndt=t("code",null,"并查集",-1),Pdt=t("code",null,"1+",-1),Kdt=t("td",{style:{"text-align":"left"}},"🟠",-1),Vdt={style:{"text-align":"center"}},Bdt={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},Tdt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),Edt=t("td",{style:{"text-align":"left"}},"所有路径",-1),Udt=t("td",{style:{"text-align":"center"}},null,-1),Adt={style:{"text-align":"left"}},Ddt=t("code",null,"深度优先搜索",-1),Wdt=t("code",null,"广度优先搜索",-1),Sdt=t("code",null,"图",-1),Ydt=t("code",null,"1+",-1),Fdt=t("td",{style:{"text-align":"left"}},"🟠",-1),Hdt={style:{"text-align":"center"}},Jdt={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},Qdt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),Rdt=t("td",{style:{"text-align":"left"}},"计算除法",-1),Zdt={style:{"text-align":"center"}},Gdt={style:{"text-align":"left"}},Mdt=t("code",null,"深度优先搜索",-1),Xdt=t("code",null,"广度优先搜索",-1),$dt=t("code",null,"并查集",-1),trt=t("code",null,"3+",-1),ert=t("td",{style:{"text-align":"left"}},"🟠",-1),ort={style:{"text-align":"center"}},lrt={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},srt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),nrt=t("td",{style:{"text-align":"left"}},"最长递增路径",-1),drt=t("td",{style:{"text-align":"center"}},null,-1),rrt={style:{"text-align":"left"}},_rt=t("code",null,"深度优先搜索",-1),crt=t("code",null,"广度优先搜索",-1),art=t("code",null,"图",-1),irt=t("code",null,"5+",-1),hrt=t("td",{style:{"text-align":"left"}},"🔴",-1),frt={style:{"text-align":"center"}},grt={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},urt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),mrt=t("td",{style:{"text-align":"left"}},"课程顺序",-1),prt={style:{"text-align":"center"}},yrt={style:{"text-align":"left"}},xrt=t("code",null,"深度优先搜索",-1),brt=t("code",null,"广度优先搜索",-1),krt=t("code",null,"图",-1),vrt=t("code",null,"1+",-1),wrt=t("td",{style:{"text-align":"left"}},"🟠",-1),Irt={style:{"text-align":"center"}},zrt={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},jrt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),Ort=t("td",{style:{"text-align":"left"}},"外星文字典",-1),qrt=t("td",{style:{"text-align":"center"}},null,-1),Lrt={style:{"text-align":"left"}},Crt=t("code",null,"深度优先搜索",-1),Nrt=t("code",null,"广度优先搜索",-1),Prt=t("code",null,"图",-1),Krt=t("code",null,"3+",-1),Vrt=t("td",{style:{"text-align":"left"}},"🔴",-1),Brt={style:{"text-align":"center"}},Trt={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},Ert=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),Urt=t("td",{style:{"text-align":"left"}},"省份数量",-1),Art=t("td",{style:{"text-align":"center"}},null,-1),Drt={style:{"text-align":"left"}},Wrt=t("code",null,"深度优先搜索",-1),Srt=t("code",null,"广度优先搜索",-1),Yrt=t("code",null,"并查集",-1),Frt=t("code",null,"1+",-1),Hrt=t("td",{style:{"text-align":"left"}},"🟠",-1),Jrt={style:{"text-align":"center"}},Qrt={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},Rrt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 117",-1),Zrt=t("td",{style:{"text-align":"left"}},"相似的字符串",-1),Grt=t("td",{style:{"text-align":"center"}},null,-1),Mrt={style:{"text-align":"left"}},Xrt=t("code",null,"深度优先搜索",-1),$rt=t("code",null,"广度优先搜索",-1),t_t=t("code",null,"并查集",-1),e_t=t("code",null,"3+",-1),o_t=t("td",{style:{"text-align":"left"}},"🔴",-1),l_t={style:{"text-align":"center"}},s_t={href:"https://leetcode.cn/problems/H6lPxb",target:"_blank",rel:"noopener noreferrer"},n_t=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),d_t=t("td",{style:{"text-align":"left"}},"多余的边",-1),r_t=t("td",{style:{"text-align":"center"}},null,-1),__t={style:{"text-align":"left"}},c_t=t("code",null,"深度优先搜索",-1),a_t=t("code",null,"广度优先搜索",-1),i_t=t("code",null,"并查集",-1),h_t=t("code",null,"1+",-1),f_t=t("td",{style:{"text-align":"left"}},"🟠",-1),g_t={style:{"text-align":"center"}},u_t={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},m_t=t("td",{style:{"text-align":"center"}},"剑指 Offer II 28",-1),p_t=t("td",{style:{"text-align":"left"}},"展平多级双向链表",-1),y_t={style:{"text-align":"center"}},x_t={style:{"text-align":"left"}},b_t=t("code",null,"深度优先搜索",-1),k_t=t("code",null,"链表",-1),v_t=t("code",null,"双向链表",-1),w_t=t("td",{style:{"text-align":"left"}},"🟠",-1),I_t={style:{"text-align":"center"}},z_t={href:"https://leetcode.cn/problems/Qv1Da2",target:"_blank",rel:"noopener noreferrer"},j_t=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),O_t=t("td",{style:{"text-align":"left"}},"二叉树每层的最大值",-1),q_t=t("td",{style:{"text-align":"center"}},null,-1),L_t={style:{"text-align":"left"}},C_t=t("code",null,"树",-1),N_t=t("code",null,"深度优先搜索",-1),P_t=t("code",null,"广度优先搜索",-1),K_t=t("code",null,"1+",-1),V_t=t("td",{style:{"text-align":"left"}},"🟠",-1),B_t={style:{"text-align":"center"}},T_t={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},E_t=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),U_t=t("td",{style:{"text-align":"left"}},"二叉树最底层最左边的值",-1),A_t=t("td",{style:{"text-align":"center"}},null,-1),D_t={style:{"text-align":"left"}},W_t=t("code",null,"树",-1),S_t=t("code",null,"深度优先搜索",-1),Y_t=t("code",null,"广度优先搜索",-1),F_t=t("code",null,"1+",-1),H_t=t("td",{style:{"text-align":"left"}},"🟠",-1),J_t={style:{"text-align":"center"}},Q_t={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},R_t=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),Z_t=t("td",{style:{"text-align":"left"}},"二叉树的右侧视图",-1),G_t={style:{"text-align":"center"}},M_t={style:{"text-align":"left"}},X_t=t("code",null,"树",-1),$_t=t("code",null,"深度优先搜索",-1),tct=t("code",null,"广度优先搜索",-1),ect=t("code",null,"1+",-1),oct=t("td",{style:{"text-align":"left"}},"🟠",-1),lct={style:{"text-align":"center"}},sct={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},nct=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),dct=t("td",{style:{"text-align":"left"}},"二叉树剪枝",-1),rct=t("td",{style:{"text-align":"center"}},null,-1),_ct={style:{"text-align":"left"}},cct=t("code",null,"树",-1),act=t("code",null,"深度优先搜索",-1),ict=t("code",null,"二叉树",-1),hct=t("td",{style:{"text-align":"left"}},"🟠",-1),fct={style:{"text-align":"center"}},gct={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},uct=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),mct=t("td",{style:{"text-align":"left"}},"序列化与反序列化二叉树",-1),pct={style:{"text-align":"center"}},yct={style:{"text-align":"left"}},xct=t("code",null,"树",-1),bct=t("code",null,"深度优先搜索",-1),kct=t("code",null,"广度优先搜索",-1),vct=t("code",null,"3+",-1),wct=t("td",{style:{"text-align":"left"}},"🔴",-1),Ict={style:{"text-align":"center"}},zct={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},jct=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),Oct=t("td",{style:{"text-align":"left"}},"从根节点到叶节点的路径数字之和",-1),qct={style:{"text-align":"center"}},Lct={style:{"text-align":"left"}},Cct=t("code",null,"树",-1),Nct=t("code",null,"深度优先搜索",-1),Pct=t("code",null,"二叉树",-1),Kct=t("td",{style:{"text-align":"left"}},"🟠",-1),Vct={style:{"text-align":"center"}},Bct={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},Tct=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),Ect=t("td",{style:{"text-align":"left"}},"向下的路径节点之和",-1),Uct={style:{"text-align":"center"}},Act={style:{"text-align":"left"}},Dct=t("code",null,"树",-1),Wct=t("code",null,"深度优先搜索",-1),Sct=t("code",null,"二叉树",-1),Yct=t("td",{style:{"text-align":"left"}},"🟠",-1),Fct={style:{"text-align":"center"}},Hct={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},Jct=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),Qct=t("td",{style:{"text-align":"left"}},"节点之和最大的路径",-1),Rct={style:{"text-align":"center"}},Zct={style:{"text-align":"left"}},Gct=t("code",null,"树",-1),Mct=t("code",null,"深度优先搜索",-1),Xct=t("code",null,"动态规划",-1),$ct=t("code",null,"1+",-1),tat=t("td",{style:{"text-align":"left"}},"🔴",-1),eat={style:{"text-align":"center"}},oat={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},lat=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),sat=t("td",{style:{"text-align":"left"}},"展平二叉搜索树",-1),nat=t("td",{style:{"text-align":"center"}},null,-1),dat={style:{"text-align":"left"}},rat=t("code",null,"栈",-1),_at=t("code",null,"树",-1),cat=t("code",null,"深度优先搜索",-1),aat=t("code",null,"2+",-1),iat=t("td",{style:{"text-align":"left"}},"🟢",-1),hat={style:{"text-align":"center"}},fat={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},gat=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),uat=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继",-1),mat=t("td",{style:{"text-align":"center"}},null,-1),pat={style:{"text-align":"left"}},yat=t("code",null,"树",-1),xat=t("code",null,"深度优先搜索",-1),bat=t("code",null,"二叉搜索树",-1),kat=t("code",null,"1+",-1),vat=t("td",{style:{"text-align":"left"}},"🟠",-1),wat={style:{"text-align":"center"}},Iat={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},zat=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),jat=t("td",{style:{"text-align":"left"}},"所有大于等于节点的值之和",-1),Oat=t("td",{style:{"text-align":"center"}},null,-1),qat={style:{"text-align":"left"}},Lat=t("code",null,"树",-1),Cat=t("code",null,"深度优先搜索",-1),Nat=t("code",null,"二叉搜索树",-1),Pat=t("code",null,"1+",-1),Kat=t("td",{style:{"text-align":"left"}},"🟠",-1),Vat={style:{"text-align":"center"}},Bat={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},Tat=t("td",{style:{"text-align":"center"}},"剑指 Offer II 64",-1),Eat=t("td",{style:{"text-align":"left"}},"神奇的字典",-1),Uat=t("td",{style:{"text-align":"center"}},null,-1),Aat={style:{"text-align":"left"}},Dat=t("code",null,"深度优先搜索",-1),Wat=t("code",null,"设计",-1),Sat=t("code",null,"字典树",-1),Yat=t("code",null,"2+",-1),Fat=t("td",{style:{"text-align":"left"}},"🟠",-1),Hat={style:{"text-align":"center"}},Jat={href:"https://leetcode.cn/problems/US1pGT",target:"_blank",rel:"noopener noreferrer"},Qat=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),Rat=t("td",{style:{"text-align":"left"}},"分割回文子字符串",-1),Zat={style:{"text-align":"center"}},Gat={style:{"text-align":"left"}},Mat=t("code",null,"深度优先搜索",-1),Xat=t("code",null,"广度优先搜索",-1),$at=t("code",null,"图",-1),tit=t("code",null,"1+",-1),eit=t("td",{style:{"text-align":"left"}},"🟠",-1),oit={style:{"text-align":"center"}},lit={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},sit=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),nit=t("td",{style:{"text-align":"left"}},"节点间通路",-1),dit=t("td",{style:{"text-align":"center"}},null,-1),rit={style:{"text-align":"left"}},_it=t("code",null,"深度优先搜索",-1),cit=t("code",null,"广度优先搜索",-1),ait=t("code",null,"图",-1),iit=t("td",{style:{"text-align":"left"}},"🟠",-1),hit={style:{"text-align":"center"}},fit={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},git=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),uit=t("td",{style:{"text-align":"left"}},"检查平衡性",-1),mit=t("td",{style:{"text-align":"center"}},null,-1),pit={style:{"text-align":"left"}},yit=t("code",null,"树",-1),xit=t("code",null,"深度优先搜索",-1),bit=t("code",null,"二叉树",-1),kit=t("td",{style:{"text-align":"left"}},"🟢",-1),vit={style:{"text-align":"center"}},wit={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},Iit=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),zit=t("td",{style:{"text-align":"left"}},"合法二叉搜索树",-1),jit=t("td",{style:{"text-align":"center"}},null,-1),Oit={style:{"text-align":"left"}},qit=t("code",null,"树",-1),Lit=t("code",null,"深度优先搜索",-1),Cit=t("code",null,"二叉搜索树",-1),Nit=t("code",null,"1+",-1),Pit=t("td",{style:{"text-align":"left"}},"🟠",-1),Kit={style:{"text-align":"center"}},Vit={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},Bit=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),Tit=t("td",{style:{"text-align":"left"}},"后继者",-1),Eit=t("td",{style:{"text-align":"center"}},null,-1),Uit={style:{"text-align":"left"}},Ait=t("code",null,"树",-1),Dit=t("code",null,"深度优先搜索",-1),Wit=t("code",null,"二叉搜索树",-1),Sit=t("code",null,"1+",-1),Yit=t("td",{style:{"text-align":"left"}},"🟠",-1),Fit={style:{"text-align":"center"}},Hit={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},Jit=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),Qit=t("td",{style:{"text-align":"left"}},"首个共同祖先",-1),Rit=t("td",{style:{"text-align":"center"}},null,-1),Zit={style:{"text-align":"left"}},Git=t("code",null,"树",-1),Mit=t("code",null,"深度优先搜索",-1),Xit=t("code",null,"二叉树",-1),$it=t("td",{style:{"text-align":"left"}},"🟠",-1),tht={style:{"text-align":"center"}},eht={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},oht=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),lht=t("td",{style:{"text-align":"left"}},"检查子树",-1),sht=t("td",{style:{"text-align":"center"}},null,-1),nht={style:{"text-align":"left"}},dht=t("code",null,"树",-1),rht=t("code",null,"深度优先搜索",-1),_ht=t("code",null,"二叉树",-1),cht=t("code",null,"2+",-1),aht=t("td",{style:{"text-align":"left"}},"🟠",-1),iht={style:{"text-align":"center"}},hht={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},fht=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),ght=t("td",{style:{"text-align":"left"}},"求和路径",-1),uht=t("td",{style:{"text-align":"center"}},null,-1),mht={style:{"text-align":"left"}},pht=t("code",null,"树",-1),yht=t("code",null,"深度优先搜索",-1),xht=t("code",null,"二叉树",-1),bht=t("td",{style:{"text-align":"left"}},"🟠",-1),kht={style:{"text-align":"center"}},vht={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},wht=t("td",{style:{"text-align":"center"}},"面试题 08.10",-1),Iht=t("td",{style:{"text-align":"left"}},"颜色填充",-1),zht=t("td",{style:{"text-align":"center"}},null,-1),jht={style:{"text-align":"left"}},Oht=t("code",null,"深度优先搜索",-1),qht=t("code",null,"广度优先搜索",-1),Lht=t("code",null,"数组",-1),Cht=t("code",null,"1+",-1),Nht=t("td",{style:{"text-align":"left"}},"🟢",-1),Pht={style:{"text-align":"center"}},Kht={href:"https://leetcode.cn/problems/color-fill-lcci",target:"_blank",rel:"noopener noreferrer"},Vht=t("td",{style:{"text-align":"center"}},"面试题 16.19",-1),Bht=t("td",{style:{"text-align":"left"}},"水域大小",-1),Tht=t("td",{style:{"text-align":"center"}},null,-1),Eht={style:{"text-align":"left"}},Uht=t("code",null,"深度优先搜索",-1),Aht=t("code",null,"广度优先搜索",-1),Dht=t("code",null,"并查集",-1),Wht=t("code",null,"2+",-1),Sht=t("td",{style:{"text-align":"left"}},"🟠",-1),Yht={style:{"text-align":"center"}},Fht={href:"https://leetcode.cn/problems/pond-sizes-lcci",target:"_blank",rel:"noopener noreferrer"},Hht=t("td",{style:{"text-align":"center"}},"面试题 17.07",-1),Jht=t("td",{style:{"text-align":"left"}},"婴儿名字",-1),Qht=t("td",{style:{"text-align":"center"}},null,-1),Rht={style:{"text-align":"left"}},Zht=t("code",null,"深度优先搜索",-1),Ght=t("code",null,"广度优先搜索",-1),Mht=t("code",null,"并查集",-1),Xht=t("code",null,"4+",-1),$ht=t("td",{style:{"text-align":"left"}},"🟠",-1),t1t={style:{"text-align":"center"}},e1t={href:"https://leetcode.cn/problems/baby-names-lcci",target:"_blank",rel:"noopener noreferrer"},o1t=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),l1t=t("td",{style:{"text-align":"left"}},"BiNode",-1),s1t=t("td",{style:{"text-align":"center"}},null,-1),n1t={style:{"text-align":"left"}},d1t=t("code",null,"栈",-1),r1t=t("code",null,"树",-1),_1t=t("code",null,"深度优先搜索",-1),c1t=t("code",null,"3+",-1),a1t=t("td",{style:{"text-align":"left"}},"🟢",-1),i1t={style:{"text-align":"center"}},h1t={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"};function f1t(g1t,u1t){const l=d("RouterLink"),n=d("ExternalLinkIcon");return _(),c("div",null,[h,t("details",null,[f,g,t("p",null,[o(l,{to:"/tag/array.html"},{default:s(()=>[u]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:s(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:s(()=>[p]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:s(()=>[y]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:s(()=>[x]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:s(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:s(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:s(()=>[v]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:s(()=>[w]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:s(()=>[I]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[z]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:s(()=>[j]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[O]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[q]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[L]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:s(()=>[C]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[N]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:s(()=>[P]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:s(()=>[K]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:s(()=>[V]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:s(()=>[B]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:s(()=>[T]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:s(()=>[E]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[U]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[A]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:s(()=>[D]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:s(()=>[W]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:s(()=>[S]),_:1})]),Y,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:s(()=>[F]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:s(()=>[H]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:s(()=>[J]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:s(()=>[Q]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:s(()=>[R]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[Z]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:s(()=>[G]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:s(()=>[M]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:s(()=>[X]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:s(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:s(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:s(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:s(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:s(()=>[lt]),_:1}),e(),st,e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[nt]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:s(()=>[dt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:s(()=>[rt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:s(()=>[_t]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:s(()=>[ct]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:s(()=>[at]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:s(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:s(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:s(()=>[ft]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:s(()=>[gt]),_:1})]),ut,t("p",null,[o(l,{to:"/tag/math.html"},{default:s(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:s(()=>[pt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:s(()=>[yt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:s(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:s(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:s(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:s(()=>[vt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:s(()=>[wt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:s(()=>[It]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:s(()=>[zt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:s(()=>[jt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[Ot]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:s(()=>[qt]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:s(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:s(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:s(()=>[Nt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:s(()=>[Pt]),_:1})])]),Kt,a(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Bt,Tt,t("td",Et,[o(l,{to:"/problem/0094.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Ut,[o(l,{to:"/tag/stack.html"},{default:s(()=>[At]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[Dt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Wt]),_:1}),e(),St]),Yt,t("td",Ft,[t("a",Ht,[e("🀄️"),o(n)]),e(),t("a",Jt,[e("🔗"),o(n)])])]),t("tr",null,[Qt,Rt,t("td",Zt,[o(l,{to:"/problem/0098.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Gt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Mt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Xt]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(n)]),e(),t("a",se,[e("🔗"),o(n)])])]),t("tr",null,[ne,de,t("td",re,[o(l,{to:"/problem/0099.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",_e,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ce]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ae]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[ie]),_:1}),e(),he]),fe,t("td",ge,[t("a",ue,[e("🀄️"),o(n)]),e(),t("a",me,[e("🔗"),o(n)])])]),t("tr",null,[pe,ye,t("td",xe,[o(l,{to:"/problem/0100.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",be,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ke]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ve]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[we]),_:1}),e(),Ie]),ze,t("td",je,[t("a",Oe,[e("🀄️"),o(n)]),e(),t("a",qe,[e("🔗"),o(n)])])]),t("tr",null,[Le,Ce,t("td",Ne,[o(l,{to:"/problem/0101.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Pe,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Ke]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ve]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Be]),_:1}),e(),Te]),Ee,t("td",Ue,[t("a",Ae,[e("🀄️"),o(n)]),e(),t("a",De,[e("🔗"),o(n)])])]),t("tr",null,[We,Se,t("td",Ye,[o(l,{to:"/problem/0104.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Fe,[o(l,{to:"/tag/tree.html"},{default:s(()=>[He]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Je]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Qe]),_:1}),e(),Re]),Ze,t("td",Ge,[t("a",Me,[e("🀄️"),o(n)]),e(),t("a",Xe,[e("🔗"),o(n)])])]),t("tr",null,[$e,to,t("td",eo,[o(l,{to:"/problem/0110.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",oo,[o(l,{to:"/tag/tree.html"},{default:s(()=>[lo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[so]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[no]),_:1})]),ro,t("td",_o,[t("a",co,[e("🀄️"),o(n)]),e(),t("a",ao,[e("🔗"),o(n)])])]),t("tr",null,[io,ho,t("td",fo,[o(l,{to:"/problem/0111.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",go,[o(l,{to:"/tag/tree.html"},{default:s(()=>[uo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[mo]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[po]),_:1}),e(),yo]),xo,t("td",bo,[t("a",ko,[e("🀄️"),o(n)]),e(),t("a",vo,[e("🔗"),o(n)])])]),t("tr",null,[wo,Io,t("td",zo,[o(l,{to:"/problem/0112.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",jo,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Oo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[qo]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Lo]),_:1}),e(),Co]),No,t("td",Po,[t("a",Ko,[e("🀄️"),o(n)]),e(),t("a",Vo,[e("🔗"),o(n)])])]),t("tr",null,[Bo,To,t("td",Eo,[o(l,{to:"/problem/0113.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Uo,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Ao]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Do]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:s(()=>[Wo]),_:1}),e(),So]),Yo,t("td",Fo,[t("a",Ho,[e("🀄️"),o(n)]),e(),t("a",Jo,[e("🔗"),o(n)])])]),t("tr",null,[Qo,Ro,t("td",Zo,[o(l,{to:"/problem/0114.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Go,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Mo]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[Xo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[$o]),_:1}),e(),tl]),el,t("td",ol,[t("a",ll,[e("🀄️"),o(n)]),e(),t("a",sl,[e("🔗"),o(n)])])]),t("tr",null,[nl,dl,t("td",rl,[o(l,{to:"/problem/0116.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",_l,[o(l,{to:"/tag/tree.html"},{default:s(()=>[cl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[al]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[il]),_:1}),e(),hl]),fl,t("td",gl,[t("a",ul,[e("🀄️"),o(n)]),e(),t("a",ml,[e("🔗"),o(n)])])]),t("tr",null,[pl,yl,t("td",xl,[o(l,{to:"/problem/0117.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",bl,[o(l,{to:"/tag/tree.html"},{default:s(()=>[kl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[vl]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[wl]),_:1}),e(),Il]),zl,t("td",jl,[t("a",Ol,[e("🀄️"),o(n)]),e(),t("a",ql,[e("🔗"),o(n)])])]),t("tr",null,[Ll,Cl,t("td",Nl,[o(l,{to:"/problem/0124.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Pl,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Kl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Vl]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[Bl]),_:1}),e(),Tl]),El,t("td",Ul,[t("a",Al,[e("🀄️"),o(n)]),e(),t("a",Dl,[e("🔗"),o(n)])])]),t("tr",null,[Wl,Sl,t("td",Yl,[o(l,{to:"/problem/0129.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Fl,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Hl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Jl]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Ql]),_:1})]),Rl,t("td",Zl,[t("a",Gl,[e("🀄️"),o(n)]),e(),t("a",Ml,[e("🔗"),o(n)])])]),t("tr",null,[Xl,$l,t("td",ts,[o(l,{to:"/problem/0130.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",es,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[os]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ls]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[ss]),_:1}),e(),ns]),ds,t("td",rs,[t("a",_s,[e("🀄️"),o(n)]),e(),t("a",cs,[e("🔗"),o(n)])])]),t("tr",null,[as,is,t("td",hs,[o(l,{to:"/problem/0133.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",fs,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[gs]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[us]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[ms]),_:1}),e(),ps]),ys,t("td",xs,[t("a",bs,[e("🀄️"),o(n)]),e(),t("a",ks,[e("🔗"),o(n)])])]),t("tr",null,[vs,ws,t("td",Is,[o(l,{to:"/problem/0144.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",zs,[o(l,{to:"/tag/stack.html"},{default:s(()=>[js]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[Os]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[qs]),_:1}),e(),Ls]),Cs,t("td",Ns,[t("a",Ps,[e("🀄️"),o(n)]),e(),t("a",Ks,[e("🔗"),o(n)])])]),t("tr",null,[Vs,Bs,t("td",Ts,[o(l,{to:"/problem/0145.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Es,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Us]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[As]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ds]),_:1}),e(),Ws]),Ss,t("td",Ys,[t("a",Fs,[e("🀄️"),o(n)]),e(),t("a",Hs,[e("🔗"),o(n)])])]),t("tr",null,[Js,Qs,t("td",Rs,[o(l,{to:"/problem/0156.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Zs,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Gs]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ms]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Xs]),_:1})]),$s,t("td",tn,[t("a",en,[e("🀄️"),o(n)]),e(),t("a",on,[e("🔗"),o(n)])])]),t("tr",null,[ln,sn,t("td",nn,[o(l,{to:"/problem/0199.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",dn,[o(l,{to:"/tag/tree.html"},{default:s(()=>[rn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[_n]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[cn]),_:1}),e(),an]),hn,t("td",fn,[t("a",gn,[e("🀄️"),o(n)]),e(),t("a",un,[e("🔗"),o(n)])])]),t("tr",null,[mn,pn,t("td",yn,[o(l,{to:"/problem/0200.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",xn,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[bn]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[kn]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[vn]),_:1}),e(),wn]),In,t("td",zn,[t("a",jn,[e("🀄️"),o(n)]),e(),t("a",On,[e("🔗"),o(n)])])]),t("tr",null,[qn,Ln,t("td",Cn,[o(l,{to:"/problem/0207.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Nn,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Pn]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Kn]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[Vn]),_:1}),e(),Bn]),Tn,t("td",En,[t("a",Un,[e("🀄️"),o(n)]),e(),t("a",An,[e("🔗"),o(n)])])]),t("tr",null,[Dn,Wn,t("td",Sn,[o(l,{to:"/problem/0210.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Yn,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Fn]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Hn]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[Jn]),_:1}),e(),Qn]),Rn,t("td",Zn,[t("a",Gn,[e("🀄️"),o(n)]),e(),t("a",Mn,[e("🔗"),o(n)])])]),t("tr",null,[Xn,$n,t("td",td,[o(l,{to:"/problem/0211.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",ed,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[od]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[ld]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[sd]),_:1}),e(),nd]),dd,t("td",rd,[t("a",_d,[e("🀄️"),o(n)]),e(),t("a",cd,[e("🔗"),o(n)])])]),t("tr",null,[ad,id,t("td",hd,[o(l,{to:"/problem/0226.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",fd,[o(l,{to:"/tag/tree.html"},{default:s(()=>[gd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ud]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[md]),_:1}),e(),pd]),yd,t("td",xd,[t("a",bd,[e("🀄️"),o(n)]),e(),t("a",kd,[e("🔗"),o(n)])])]),t("tr",null,[vd,wd,t("td",Id,[o(l,{to:"/problem/0230.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",zd,[o(l,{to:"/tag/tree.html"},{default:s(()=>[jd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Od]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[qd]),_:1}),e(),Ld]),Cd,t("td",Nd,[t("a",Pd,[e("🀄️"),o(n)]),e(),t("a",Kd,[e("🔗"),o(n)])])]),t("tr",null,[Vd,Bd,t("td",Td,[o(l,{to:"/problem/0235.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Ed,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Ud]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ad]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Dd]),_:1}),e(),Wd]),Sd,t("td",Yd,[t("a",Fd,[e("🀄️"),o(n)]),e(),t("a",Hd,[e("🔗"),o(n)])])]),t("tr",null,[Jd,Qd,t("td",Rd,[o(l,{to:"/problem/0236.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Zd,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Gd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Md]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Xd]),_:1})]),$d,t("td",tr,[t("a",er,[e("🀄️"),o(n)]),e(),t("a",or,[e("🔗"),o(n)])])]),t("tr",null,[lr,sr,nr,t("td",dr,[o(l,{to:"/tag/tree.html"},{default:s(()=>[rr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[_r]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[cr]),_:1})]),ar,t("td",ir,[t("a",hr,[e("🀄️"),o(n)]),e(),t("a",fr,[e("🔗"),o(n)])])]),t("tr",null,[gr,ur,t("td",mr,[o(l,{to:"/problem/0257.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",pr,[o(l,{to:"/tag/tree.html"},{default:s(()=>[yr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xr]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[br]),_:1}),e(),kr]),vr,t("td",wr,[t("a",Ir,[e("🀄️"),o(n)]),e(),t("a",zr,[e("🔗"),o(n)])])]),t("tr",null,[jr,Or,qr,t("td",Lr,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Cr]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Nr]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Pr]),_:1}),e(),Kr]),Vr,t("td",Br,[t("a",Tr,[e("🀄️"),o(n)]),e(),t("a",Er,[e("🔗"),o(n)])])]),t("tr",null,[Ur,Ar,Dr,t("td",Wr,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Sr]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Yr]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[Fr]),_:1}),e(),Hr]),Jr,t("td",Qr,[t("a",Rr,[e("🀄️"),o(n)]),e(),t("a",Zr,[e("🔗"),o(n)])])]),t("tr",null,[Gr,Mr,Xr,t("td",$r,[o(l,{to:"/tag/tree.html"},{default:s(()=>[t_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[e_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[o_]),_:1}),e(),l_]),s_,t("td",n_,[t("a",d_,[e("🀄️"),o(n)]),e(),t("a",r_,[e("🔗"),o(n)])])]),t("tr",null,[__,c_,a_,t("td",i_,[o(l,{to:"/tag/stack.html"},{default:s(()=>[h_]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[f_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[g_]),_:1}),e(),u_]),m_,t("td",p_,[t("a",y_,[e("🀄️"),o(n)]),e(),t("a",x_,[e("🔗"),o(n)])])]),t("tr",null,[b_,k_,v_,t("td",w_,[o(l,{to:"/tag/tree.html"},{default:s(()=>[I_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[z_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[j_]),_:1}),e(),O_]),q_,t("td",L_,[t("a",C_,[e("🀄️"),o(n)]),e(),t("a",N_,[e("🔗"),o(n)])])]),t("tr",null,[P_,K_,t("td",V_,[o(l,{to:"/problem/0297.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",B_,[o(l,{to:"/tag/tree.html"},{default:s(()=>[T_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[E_]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[U_]),_:1}),e(),A_]),D_,t("td",W_,[t("a",S_,[e("🀄️"),o(n)]),e(),t("a",Y_,[e("🔗"),o(n)])])]),t("tr",null,[F_,H_,J_,t("td",Q_,[o(l,{to:"/tag/tree.html"},{default:s(()=>[R_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Z_]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[G_]),_:1})]),M_,t("td",X_,[t("a",$_,[e("🀄️"),o(n)]),e(),t("a",tc,[e("🔗"),o(n)])])]),t("tr",null,[ec,oc,lc,t("td",sc,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[nc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[dc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[rc]),_:1}),e(),_c]),cc,t("td",ac,[t("a",ic,[e("🀄️"),o(n)]),e(),t("a",hc,[e("🔗"),o(n)])])]),t("tr",null,[fc,gc,uc,t("td",mc,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[pc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[yc]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[xc]),_:1}),e(),bc]),kc,t("td",vc,[t("a",wc,[e("🀄️"),o(n)]),e(),t("a",Ic,[e("🔗"),o(n)])])]),t("tr",null,[zc,jc,Oc,t("td",qc,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Lc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Cc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Nc]),_:1}),e(),Pc]),Kc,t("td",Vc,[t("a",Bc,[e("🀄️"),o(n)]),e(),t("a",Tc,[e("🔗"),o(n)])])]),t("tr",null,[Ec,Uc,Ac,t("td",Dc,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Wc]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Sc]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Yc]),_:1}),e(),Fc]),Hc,t("td",Jc,[t("a",Qc,[e("🀄️"),o(n)]),e(),t("a",Rc,[e("🔗"),o(n)])])]),t("tr",null,[Zc,Gc,Mc,t("td",Xc,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[$c]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ta]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[ea]),_:1}),e(),oa]),la,t("td",sa,[t("a",na,[e("🀄️"),o(n)]),e(),t("a",da,[e("🔗"),o(n)])])]),t("tr",null,[ra,_a,ca,t("td",aa,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ia]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[ha]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:s(()=>[fa]),_:1})]),ga,t("td",ua,[t("a",ma,[e("🀄️"),o(n)]),e(),t("a",pa,[e("🔗"),o(n)])])]),t("tr",null,[ya,xa,ba,t("td",ka,[o(l,{to:"/tag/tree.html"},{default:s(()=>[va]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[wa]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Ia]),_:1}),e(),za]),ja,t("td",Oa,[t("a",qa,[e("🀄️"),o(n)]),e(),t("a",La,[e("🔗"),o(n)])])]),t("tr",null,[Ca,Na,Pa,t("td",Ka,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Va]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ba]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[Ta]),_:1}),e(),Ea]),Ua,t("td",Aa,[t("a",Da,[e("🀄️"),o(n)]),e(),t("a",Wa,[e("🔗"),o(n)])])]),t("tr",null,[Sa,Ya,Fa,t("td",Ha,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ja]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Qa]),_:1})]),Ra,t("td",Za,[t("a",Ga,[e("🀄️"),o(n)]),e(),t("a",Ma,[e("🔗"),o(n)])])]),t("tr",null,[Xa,$a,ti,t("td",ei,[o(l,{to:"/tag/stack.html"},{default:s(()=>[oi]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[li]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[si]),_:1}),e(),ni]),di,t("td",ri,[t("a",_i,[e("🀄️"),o(n)]),e(),t("a",ci,[e("🔗"),o(n)])])]),t("tr",null,[ai,ii,hi,t("td",fi,[o(l,{to:"/tag/stack.html"},{default:s(()=>[gi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ui]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[mi]),_:1})]),pi,t("td",yi,[t("a",xi,[e("🀄️"),o(n)]),e(),t("a",bi,[e("🔗"),o(n)])])]),t("tr",null,[ki,vi,wi,t("td",Ii,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[zi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ji]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:s(()=>[Oi]),_:1})]),qi,t("td",Li,[t("a",Ci,[e("🀄️"),o(n)]),e(),t("a",Ni,[e("🔗"),o(n)])])]),t("tr",null,[Pi,Ki,t("td",Vi,[o(l,{to:"/problem/0366.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Bi,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Ti]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ei]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Ui]),_:1})]),Ai,t("td",Di,[t("a",Wi,[e("🀄️"),o(n)]),e(),t("a",Si,[e("🔗"),o(n)])])]),t("tr",null,[Yi,Fi,Hi,t("td",Ji,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Qi]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ri]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[Zi]),_:1})]),Gi,t("td",Mi,[t("a",Xi,[e("🀄️"),o(n)]),e(),t("a",$i,[e("🔗"),o(n)])])]),t("tr",null,[th,eh,oh,t("td",lh,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[sh]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[nh]),_:1})]),dh,t("td",rh,[t("a",_h,[e("🀄️"),o(n)]),e(),t("a",ch,[e("🔗"),o(n)])])]),t("tr",null,[ah,ih,hh,t("td",fh,[o(l,{to:"/tag/stack.html"},{default:s(()=>[gh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[uh]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[mh]),_:1})]),ph,t("td",yh,[t("a",xh,[e("🀄️"),o(n)]),e(),t("a",bh,[e("🔗"),o(n)])])]),t("tr",null,[kh,vh,t("td",wh,[o(l,{to:"/problem/0399.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Ih,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[zh]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[jh]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Oh]),_:1}),e(),qh]),Lh,t("td",Ch,[t("a",Nh,[e("🀄️"),o(n)]),e(),t("a",Ph,[e("🔗"),o(n)])])]),t("tr",null,[Kh,Vh,Bh,t("td",Th,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Eh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Uh]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Ah]),_:1}),e(),Dh]),Wh,t("td",Sh,[t("a",Yh,[e("🀄️"),o(n)]),e(),t("a",Fh,[e("🔗"),o(n)])])]),t("tr",null,[Hh,Jh,Qh,t("td",Rh,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Zh]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Gh]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[Mh]),_:1}),e(),Xh]),$h,t("td",t1,[t("a",e1,[e("🀄️"),o(n)]),e(),t("a",o1,[e("🔗"),o(n)])])]),t("tr",null,[l1,s1,n1,t("td",d1,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[r1]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[_1]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:s(()=>[c1]),_:1})]),a1,t("td",i1,[t("a",h1,[e("🀄️"),o(n)]),e(),t("a",f1,[e("🔗"),o(n)])])]),t("tr",null,[g1,u1,t("td",m1,[o(l,{to:"/problem/0426.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",p1,[o(l,{to:"/tag/stack.html"},{default:s(()=>[y1]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[x1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[b1]),_:1}),e(),k1]),v1,t("td",w1,[t("a",I1,[e("🀄️"),o(n)]),e(),t("a",z1,[e("🔗"),o(n)])])]),t("tr",null,[j1,O1,q1,t("td",L1,[o(l,{to:"/tag/tree.html"},{default:s(()=>[C1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[N1]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[P1]),_:1}),e(),K1]),V1,t("td",B1,[t("a",T1,[e("🀄️"),o(n)]),e(),t("a",E1,[e("🔗"),o(n)])])]),t("tr",null,[U1,A1,t("td",D1,[o(l,{to:"/problem/0430.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",W1,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[S1]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:s(()=>[Y1]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:s(()=>[F1]),_:1})]),H1,t("td",J1,[t("a",Q1,[e("🀄️"),o(n)]),e(),t("a",R1,[e("🔗"),o(n)])])]),t("tr",null,[Z1,G1,M1,t("td",X1,[o(l,{to:"/tag/tree.html"},{default:s(()=>[$1]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[tf]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ef]),_:1}),e(),of]),lf,t("td",sf,[t("a",nf,[e("🀄️"),o(n)]),e(),t("a",df,[e("🔗"),o(n)])])]),t("tr",null,[rf,_f,t("td",cf,[o(l,{to:"/problem/0437.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",af,[o(l,{to:"/tag/tree.html"},{default:s(()=>[hf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ff]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[gf]),_:1})]),uf,t("td",mf,[t("a",pf,[e("🀄️"),o(n)]),e(),t("a",yf,[e("🔗"),o(n)])])]),t("tr",null,[xf,bf,kf,t("td",vf,[o(l,{to:"/tag/tree.html"},{default:s(()=>[wf]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[If]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[zf]),_:1}),e(),jf]),Of,t("td",qf,[t("a",Lf,[e("🀄️"),o(n)]),e(),t("a",Cf,[e("🔗"),o(n)])])]),t("tr",null,[Nf,Pf,Kf,t("td",Vf,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Bf]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Tf]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[Ef]),_:1}),e(),Uf]),Af,t("td",Df,[t("a",Wf,[e("🀄️"),o(n)]),e(),t("a",Sf,[e("🔗"),o(n)])])]),t("tr",null,[Yf,Ff,Hf,t("td",Jf,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Qf]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[Rf]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[Zf]),_:1}),e(),Gf]),Mf,t("td",Xf,[t("a",$f,[e("🀄️"),o(n)]),e(),t("a",tg,[e("🔗"),o(n)])])]),t("tr",null,[eg,og,lg,t("td",sg,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ng]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[dg]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[rg]),_:1}),e(),_g]),cg,t("td",ag,[t("a",ig,[e("🀄️"),o(n)]),e(),t("a",hg,[e("🔗"),o(n)])])]),t("tr",null,[fg,gg,ug,t("td",mg,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[pg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[yg]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[xg]),_:1}),e(),bg]),kg,t("td",vg,[t("a",wg,[e("🀄️"),o(n)]),e(),t("a",Ig,[e("🔗"),o(n)])])]),t("tr",null,[zg,jg,Og,t("td",qg,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Lg]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Cg]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Ng]),_:1}),e(),Pg]),Kg,t("td",Vg,[t("a",Bg,[e("🀄️"),o(n)]),e(),t("a",Tg,[e("🔗"),o(n)])])]),t("tr",null,[Eg,Ug,Ag,t("td",Dg,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Wg]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Sg]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[Yg]),_:1}),e(),Fg]),Hg,t("td",Jg,[t("a",Qg,[e("🀄️"),o(n)]),e(),t("a",Rg,[e("🔗"),o(n)])])]),t("tr",null,[Zg,Gg,Mg,t("td",Xg,[o(l,{to:"/tag/tree.html"},{default:s(()=>[$g]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[tu]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:s(()=>[eu]),_:1}),e(),ou]),lu,t("td",su,[t("a",nu,[e("🀄️"),o(n)]),e(),t("a",du,[e("🔗"),o(n)])])]),t("tr",null,[ru,_u,cu,t("td",au,[o(l,{to:"/tag/tree.html"},{default:s(()=>[iu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[hu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[fu]),_:1}),e(),gu]),uu,t("td",mu,[t("a",pu,[e("🀄️"),o(n)]),e(),t("a",yu,[e("🔗"),o(n)])])]),t("tr",null,[xu,bu,t("td",ku,[o(l,{to:"/problem/0514.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",vu,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[wu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Iu]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[zu]),_:1}),e(),ju]),Ou,t("td",qu,[t("a",Lu,[e("🀄️"),o(n)]),e(),t("a",Cu,[e("🔗"),o(n)])])]),t("tr",null,[Nu,Pu,Ku,t("td",Vu,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Bu]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Tu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Eu]),_:1}),e(),Uu]),Au,t("td",Du,[t("a",Wu,[e("🀄️"),o(n)]),e(),t("a",Su,[e("🔗"),o(n)])])]),t("tr",null,[Yu,Fu,Hu,t("td",Ju,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Qu]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Ru]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[Zu]),_:1}),e(),Gu]),Mu,t("td",Xu,[t("a",$u,[e("🀄️"),o(n)]),e(),t("a",tm,[e("🔗"),o(n)])])]),t("tr",null,[em,om,t("td",lm,[o(l,{to:"/problem/0530.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",sm,[o(l,{to:"/tag/tree.html"},{default:s(()=>[nm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[dm]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[rm]),_:1}),e(),_m]),cm,t("td",am,[t("a",im,[e("🀄️"),o(n)]),e(),t("a",hm,[e("🔗"),o(n)])])]),t("tr",null,[fm,gm,um,t("td",mm,[o(l,{to:"/tag/stack.html"},{default:s(()=>[pm]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[ym]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xm]),_:1}),e(),bm]),km,t("td",vm,[t("a",wm,[e("🀄️"),o(n)]),e(),t("a",Im,[e("🔗"),o(n)])])]),t("tr",null,[zm,jm,Om,t("td",qm,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Lm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Cm]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Nm]),_:1}),e(),Pm]),Km,t("td",Vm,[t("a",Bm,[e("🀄️"),o(n)]),e(),t("a",Tm,[e("🔗"),o(n)])])]),t("tr",null,[Em,Um,t("td",Am,[o(l,{to:"/problem/0543.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Dm,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Wm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Sm]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Ym]),_:1})]),Fm,t("td",Hm,[t("a",Jm,[e("🀄️"),o(n)]),e(),t("a",Qm,[e("🔗"),o(n)])])]),t("tr",null,[Rm,Zm,Gm,t("td",Mm,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Xm]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[$m]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[tp]),_:1})]),ep,t("td",op,[t("a",lp,[e("🀄️"),o(n)]),e(),t("a",sp,[e("🔗"),o(n)])])]),t("tr",null,[np,dp,rp,t("td",_p,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[cp]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ap]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[ip]),_:1}),e(),hp]),fp,t("td",gp,[t("a",up,[e("🀄️"),o(n)]),e(),t("a",mp,[e("🔗"),o(n)])])]),t("tr",null,[pp,yp,xp,t("td",bp,[o(l,{to:"/tag/tree.html"},{default:s(()=>[kp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[vp]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[wp]),_:1})]),Ip,t("td",zp,[t("a",jp,[e("🀄️"),o(n)]),e(),t("a",Op,[e("🔗"),o(n)])])]),t("tr",null,[qp,Lp,t("td",Cp,[o(l,{to:"/problem/0559.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Np,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Pp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Kp]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Vp]),_:1})]),Bp,t("td",Tp,[t("a",Ep,[e("🀄️"),o(n)]),e(),t("a",Up,[e("🔗"),o(n)])])]),t("tr",null,[Ap,Dp,Wp,t("td",Sp,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Yp]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Fp]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Hp]),_:1})]),Jp,t("td",Qp,[t("a",Rp,[e("🀄️"),o(n)]),e(),t("a",Zp,[e("🔗"),o(n)])])]),t("tr",null,[Gp,Mp,Xp,t("td",$p,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ty]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[ey]),_:1})]),oy,t("td",ly,[t("a",sy,[e("🀄️"),o(n)]),e(),t("a",ny,[e("🔗"),o(n)])])]),t("tr",null,[dy,ry,t("td",_y,[o(l,{to:"/problem/0572.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",cy,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ay]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[iy]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[hy]),_:1}),e(),fy]),gy,t("td",uy,[t("a",my,[e("🀄️"),o(n)]),e(),t("a",py,[e("🔗"),o(n)])])]),t("tr",null,[yy,xy,by,t("td",ky,[o(l,{to:"/tag/tree.html"},{default:s(()=>[vy]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[wy]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Iy]),_:1}),e(),zy]),jy,t("td",Oy,[t("a",qy,[e("🀄️"),o(n)]),e(),t("a",Ly,[e("🔗"),o(n)])])]),t("tr",null,[Cy,Ny,t("td",Py,[o(l,{to:"/problem/0589.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Ky,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Vy]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[By]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ty]),_:1})]),Ey,t("td",Uy,[t("a",Ay,[e("🀄️"),o(n)]),e(),t("a",Dy,[e("🔗"),o(n)])])]),t("tr",null,[Wy,Sy,t("td",Yy,[o(l,{to:"/problem/0590.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Fy,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Hy]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[Jy]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Qy]),_:1})]),Ry,t("td",Zy,[t("a",Gy,[e("🀄️"),o(n)]),e(),t("a",My,[e("🔗"),o(n)])])]),t("tr",null,[Xy,$y,t2,t("td",e2,[o(l,{to:"/tag/tree.html"},{default:s(()=>[o2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[l2]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[s2]),_:1}),e(),n2]),d2,t("td",r2,[t("a",_2,[e("🀄️"),o(n)]),e(),t("a",c2,[e("🔗"),o(n)])])]),t("tr",null,[a2,i2,t("td",h2,[o(l,{to:"/problem/0617.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",f2,[o(l,{to:"/tag/tree.html"},{default:s(()=>[g2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[u2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[m2]),_:1}),e(),p2]),y2,t("td",x2,[t("a",b2,[e("🀄️"),o(n)]),e(),t("a",k2,[e("🔗"),o(n)])])]),t("tr",null,[v2,w2,I2,t("td",z2,[o(l,{to:"/tag/tree.html"},{default:s(()=>[j2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[O2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[q2]),_:1}),e(),L2]),C2,t("td",N2,[t("a",P2,[e("🀄️"),o(n)]),e(),t("a",K2,[e("🔗"),o(n)])])]),t("tr",null,[V2,B2,t("td",T2,[o(l,{to:"/problem/0637.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",E2,[o(l,{to:"/tag/tree.html"},{default:s(()=>[U2]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[A2]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[D2]),_:1}),e(),W2]),S2,t("td",Y2,[t("a",F2,[e("🀄️"),o(n)]),e(),t("a",H2,[e("🔗"),o(n)])])]),t("tr",null,[J2,Q2,R2,t("td",Z2,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[G2]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[M2]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[X2]),_:1}),e(),$2]),t3,t("td",e3,[t("a",o3,[e("🀄️"),o(n)]),e(),t("a",l3,[e("🔗"),o(n)])])]),t("tr",null,[s3,n3,d3,t("td",r3,[o(l,{to:"/tag/tree.html"},{default:s(()=>[_3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[c3]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:s(()=>[a3]),_:1}),e(),i3]),h3,t("td",f3,[t("a",g3,[e("🀄️"),o(n)]),e(),t("a",u3,[e("🔗"),o(n)])])]),t("tr",null,[m3,p3,y3,t("td",x3,[o(l,{to:"/tag/tree.html"},{default:s(()=>[b3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[k3]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[v3]),_:1}),e(),w3]),I3,t("td",z3,[t("a",j3,[e("🀄️"),o(n)]),e(),t("a",O3,[e("🔗"),o(n)])])]),t("tr",null,[q3,L3,C3,t("td",N3,[o(l,{to:"/tag/tree.html"},{default:s(()=>[P3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[K3]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[V3]),_:1}),e(),B3]),T3,t("td",E3,[t("a",U3,[e("🀄️"),o(n)]),e(),t("a",A3,[e("🔗"),o(n)])])]),t("tr",null,[D3,W3,t("td",S3,[o(l,{to:"/problem/0662.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Y3,[o(l,{to:"/tag/tree.html"},{default:s(()=>[F3]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[H3]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[J3]),_:1}),e(),Q3]),R3,t("td",Z3,[t("a",G3,[e("🀄️"),o(n)]),e(),t("a",M3,[e("🔗"),o(n)])])]),t("tr",null,[X3,$3,tx,t("td",ex,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ox]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[lx]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[sx]),_:1})]),nx,t("td",dx,[t("a",rx,[e("🀄️"),o(n)]),e(),t("a",_x,[e("🔗"),o(n)])])]),t("tr",null,[cx,ax,ix,t("td",hx,[o(l,{to:"/tag/tree.html"},{default:s(()=>[fx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[gx]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[ux]),_:1}),e(),mx]),px,t("td",yx,[t("a",xx,[e("🀄️"),o(n)]),e(),t("a",bx,[e("🔗"),o(n)])])]),t("tr",null,[kx,vx,wx,t("td",Ix,[o(l,{to:"/tag/tree.html"},{default:s(()=>[zx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[jx]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Ox]),_:1}),e(),qx]),Lx,t("td",Cx,[t("a",Nx,[e("🀄️"),o(n)]),e(),t("a",Px,[e("🔗"),o(n)])])]),t("tr",null,[Kx,Vx,Bx,t("td",Tx,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Ex]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ux]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Ax]),_:1})]),Dx,t("td",Wx,[t("a",Sx,[e("🀄️"),o(n)]),e(),t("a",Yx,[e("🔗"),o(n)])])]),t("tr",null,[Fx,Hx,Jx,t("td",Qx,[o(l,{to:"/tag/bit-manipulation.html"},{default:s(()=>[Rx]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Zx]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Gx]),_:1}),e(),Mx]),Xx,t("td",$x,[t("a",tb,[e("🀄️"),o(n)]),e(),t("a",eb,[e("🔗"),o(n)])])]),t("tr",null,[ob,lb,sb,t("td",nb,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[db]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[rb]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[_b]),_:1}),e(),cb]),ab,t("td",ib,[t("a",hb,[e("🀄️"),o(n)]),e(),t("a",fb,[e("🔗"),o(n)])])]),t("tr",null,[gb,ub,mb,t("td",pb,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[yb]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[xb]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[bb]),_:1}),e(),kb]),vb,t("td",wb,[t("a",Ib,[e("🀄️"),o(n)]),e(),t("a",zb,[e("🔗"),o(n)])])]),t("tr",null,[jb,Ob,qb,t("td",Lb,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Cb]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Nb]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Pb]),_:1}),e(),Kb]),Vb,t("td",Bb,[t("a",Tb,[e("🀄️"),o(n)]),e(),t("a",Eb,[e("🔗"),o(n)])])]),t("tr",null,[Ub,Ab,Db,t("td",Wb,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Sb]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Yb]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Fb]),_:1})]),Hb,t("td",Jb,[t("a",Qb,[e("🀄️"),o(n)]),e(),t("a",Rb,[e("🔗"),o(n)])])]),t("tr",null,[Zb,Gb,Mb,t("td",Xb,[o(l,{to:"/tag/tree.html"},{default:s(()=>[$b]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[t4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[e4]),_:1}),e(),o4]),l4,t("td",s4,[t("a",n4,[e("🀄️"),o(n)]),e(),t("a",d4,[e("🔗"),o(n)])])]),t("tr",null,[r4,_4,c4,t("td",a4,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[i4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[h4]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[f4]),_:1}),e(),g4]),u4,t("td",m4,[t("a",p4,[e("🀄️"),o(n)]),e(),t("a",y4,[e("🔗"),o(n)])])]),t("tr",null,[x4,b4,t("td",k4,[o(l,{to:"/problem/0695.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",v4,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[w4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[I4]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[z4]),_:1}),e(),j4]),O4,t("td",q4,[t("a",L4,[e("🀄️"),o(n)]),e(),t("a",C4,[e("🔗"),o(n)])])]),t("tr",null,[N4,P4,K4,t("td",V4,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[B4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[T4]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[E4]),_:1}),e(),U4]),A4,t("td",D4,[t("a",W4,[e("🀄️"),o(n)]),e(),t("a",S4,[e("🔗"),o(n)])])]),t("tr",null,[Y4,F4,H4,t("td",J4,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Q4]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[R4]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Z4]),_:1}),e(),G4]),M4,t("td",X4,[t("a",$4,[e("🀄️"),o(n)]),e(),t("a",t0,[e("🔗"),o(n)])])]),t("tr",null,[e0,o0,l0,t("td",s0,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[n0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[d0]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[r0]),_:1}),e(),_0]),c0,t("td",a0,[t("a",i0,[e("🀄️"),o(n)]),e(),t("a",h0,[e("🔗"),o(n)])])]),t("tr",null,[f0,g0,u0,t("td",m0,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[p0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[y0]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[x0]),_:1}),e(),b0]),k0,t("td",v0,[t("a",w0,[e("🀄️"),o(n)]),e(),t("a",I0,[e("🔗"),o(n)])])]),t("tr",null,[z0,j0,O0,t("td",q0,[o(l,{to:"/tag/tree.html"},{default:s(()=>[L0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[C0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[N0]),_:1}),e(),P0]),K0,t("td",V0,[t("a",B0,[e("🀄️"),o(n)]),e(),t("a",T0,[e("🔗"),o(n)])])]),t("tr",null,[E0,U0,A0,t("td",D0,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[W0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[S0]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[Y0]),_:1}),e(),F0]),H0,t("td",J0,[t("a",Q0,[e("🀄️"),o(n)]),e(),t("a",R0,[e("🔗"),o(n)])])]),t("tr",null,[Z0,G0,M0,t("td",X0,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[$0]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[t6]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[e6]),_:1}),e(),o6]),l6,t("td",s6,[t("a",n6,[e("🀄️"),o(n)]),e(),t("a",d6,[e("🔗"),o(n)])])]),t("tr",null,[r6,_6,c6,t("td",a6,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[i6]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[h6]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:s(()=>[f6]),_:1})]),g6,t("td",u6,[t("a",m6,[e("🀄️"),o(n)]),e(),t("a",p6,[e("🔗"),o(n)])])]),t("tr",null,[y6,x6,b6,t("td",k6,[o(l,{to:"/tag/bit-manipulation.html"},{default:s(()=>[v6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[w6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[I6]),_:1})]),z6,t("td",j6,[t("a",O6,[e("🀄️"),o(n)]),e(),t("a",q6,[e("🔗"),o(n)])])]),t("tr",null,[L6,C6,N6,t("td",P6,[o(l,{to:"/tag/greedy.html"},{default:s(()=>[K6]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[V6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[B6]),_:1}),e(),T6]),E6,t("td",U6,[t("a",A6,[e("🀄️"),o(n)]),e(),t("a",D6,[e("🔗"),o(n)])])]),t("tr",null,[W6,S6,Y6,t("td",F6,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[H6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[J6]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Q6]),_:1}),e(),R6]),Z6,t("td",G6,[t("a",M6,[e("🀄️"),o(n)]),e(),t("a",X6,[e("🔗"),o(n)])])]),t("tr",null,[$6,t5,t("td",e5,[o(l,{to:"/problem/0783.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",o5,[o(l,{to:"/tag/tree.html"},{default:s(()=>[l5]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[s5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[n5]),_:1}),e(),d5]),r5,t("td",_5,[t("a",c5,[e("🀄️"),o(n)]),e(),t("a",a5,[e("🔗"),o(n)])])]),t("tr",null,[i5,h5,f5,t("td",g5,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[u5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[m5]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[p5]),_:1}),e(),y5]),x5,t("td",b5,[t("a",k5,[e("🀄️"),o(n)]),e(),t("a",v5,[e("🔗"),o(n)])])]),t("tr",null,[w5,I5,z5,t("td",j5,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[O5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[q5]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[L5]),_:1}),e(),C5]),N5,t("td",P5,[t("a",K5,[e("🀄️"),o(n)]),e(),t("a",V5,[e("🔗"),o(n)])])]),t("tr",null,[B5,T5,E5,t("td",U5,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[A5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[D5]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[W5]),_:1}),e(),S5]),Y5,t("td",F5,[t("a",H5,[e("🀄️"),o(n)]),e(),t("a",J5,[e("🔗"),o(n)])])]),t("tr",null,[Q5,R5,Z5,t("td",G5,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[M5]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[X5]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[$5]),_:1}),e(),t7]),e7,t("td",o7,[t("a",l7,[e("🀄️"),o(n)]),e(),t("a",s7,[e("🔗"),o(n)])])]),t("tr",null,[n7,d7,r7,t("td",_7,[o(l,{to:"/tag/tree.html"},{default:s(()=>[c7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[a7]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[i7]),_:1})]),h7,t("td",f7,[t("a",g7,[e("🀄️"),o(n)]),e(),t("a",u7,[e("🔗"),o(n)])])]),t("tr",null,[m7,p7,y7,t("td",x7,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[b7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[k7]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[v7]),_:1}),e(),w7]),I7,t("td",z7,[t("a",j7,[e("🀄️"),o(n)]),e(),t("a",O7,[e("🔗"),o(n)])])]),t("tr",null,[q7,L7,C7,t("td",N7,[o(l,{to:"/tag/tree.html"},{default:s(()=>[P7]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[K7]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[V7]),_:1}),e(),B7]),T7,t("td",E7,[t("a",U7,[e("🀄️"),o(n)]),e(),t("a",A7,[e("🔗"),o(n)])])]),t("tr",null,[D7,W7,S7,t("td",Y7,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[F7]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[H7]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[J7]),_:1}),e(),Q7]),R7,t("td",Z7,[t("a",G7,[e("🀄️"),o(n)]),e(),t("a",M7,[e("🔗"),o(n)])])]),t("tr",null,[X7,$7,t9,t("td",e9,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[o9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[l9]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[s9]),_:1})]),n9,t("td",d9,[t("a",r9,[e("🀄️"),o(n)]),e(),t("a",_9,[e("🔗"),o(n)])])]),t("tr",null,[c9,a9,i9,t("td",h9,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[f9]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[g9]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:s(()=>[u9]),_:1}),e(),m9]),p9,t("td",y9,[t("a",x9,[e("🀄️"),o(n)]),e(),t("a",b9,[e("🔗"),o(n)])])]),t("tr",null,[k9,v9,w9,t("td",I9,[o(l,{to:"/tag/tree.html"},{default:s(()=>[z9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[j9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[O9]),_:1}),e(),q9]),L9,t("td",C9,[t("a",N9,[e("🀄️"),o(n)]),e(),t("a",P9,[e("🔗"),o(n)])])]),t("tr",null,[K9,V9,B9,t("td",T9,[o(l,{to:"/tag/tree.html"},{default:s(()=>[E9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[U9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[A9]),_:1}),e(),D9]),W9,t("td",S9,[t("a",Y9,[e("🀄️"),o(n)]),e(),t("a",F9,[e("🔗"),o(n)])])]),t("tr",null,[H9,J9,t("td",Q9,[o(l,{to:"/problem/0872.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",R9,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Z9]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[G9]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[M9]),_:1})]),X9,t("td",$9,[t("a",t8,[e("🀄️"),o(n)]),e(),t("a",e8,[e("🔗"),o(n)])])]),t("tr",null,[o8,l8,s8,t("td",n8,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[d8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[r8]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[_8]),_:1}),e(),c8]),a8,t("td",i8,[t("a",h8,[e("🀄️"),o(n)]),e(),t("a",f8,[e("🔗"),o(n)])])]),t("tr",null,[g8,u8,m8,t("td",p8,[o(l,{to:"/tag/stack.html"},{default:s(()=>[y8]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[x8]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[b8]),_:1}),e(),k8]),v8,t("td",w8,[t("a",I8,[e("🀄️"),o(n)]),e(),t("a",z8,[e("🔗"),o(n)])])]),t("tr",null,[j8,O8,q8,t("td",L8,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[C8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[N8]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[P8]),_:1}),e(),K8]),V8,t("td",B8,[t("a",T8,[e("🀄️"),o(n)]),e(),t("a",E8,[e("🔗"),o(n)])])]),t("tr",null,[U8,A8,D8,t("td",W8,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[S8]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Y8]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[F8]),_:1}),e(),H8]),J8,t("td",Q8,[t("a",R8,[e("🀄️"),o(n)]),e(),t("a",Z8,[e("🔗"),o(n)])])]),t("tr",null,[G8,M8,X8,t("td",$8,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[tk]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ek]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[ok]),_:1}),e(),lk]),sk,t("td",nk,[t("a",dk,[e("🀄️"),o(n)]),e(),t("a",rk,[e("🔗"),o(n)])])]),t("tr",null,[_k,ck,ak,t("td",ik,[o(l,{to:"/tag/tree.html"},{default:s(()=>[hk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[fk]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[gk]),_:1}),e(),uk]),mk,t("td",pk,[t("a",yk,[e("🀄️"),o(n)]),e(),t("a",xk,[e("🔗"),o(n)])])]),t("tr",null,[bk,kk,vk,t("td",wk,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ik]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[zk]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[jk]),_:1}),e(),Ok]),qk,t("td",Lk,[t("a",Ck,[e("🀄️"),o(n)]),e(),t("a",Nk,[e("🔗"),o(n)])])]),t("tr",null,[Pk,Kk,t("td",Vk,[o(l,{to:"/problem/0951.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Bk,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Tk]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ek]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Uk]),_:1})]),Ak,t("td",Dk,[t("a",Wk,[e("🀄️"),o(n)]),e(),t("a",Sk,[e("🔗"),o(n)])])]),t("tr",null,[Yk,Fk,Hk,t("td",Jk,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Qk]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Rk]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Zk]),_:1}),e(),Gk]),Mk,t("td",Xk,[t("a",$k,[e("🀄️"),o(n)]),e(),t("a",tv,[e("🔗"),o(n)])])]),t("tr",null,[ev,ov,lv,t("td",sv,[o(l,{to:"/tag/tree.html"},{default:s(()=>[nv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[dv]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[rv]),_:1}),e(),_v]),cv,t("td",av,[t("a",iv,[e("🀄️"),o(n)]),e(),t("a",hv,[e("🔗"),o(n)])])]),t("tr",null,[fv,gv,uv,t("td",mv,[o(l,{to:"/tag/tree.html"},{default:s(()=>[pv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[yv]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[xv]),_:1}),e(),bv]),kv,t("td",vv,[t("a",wv,[e("🀄️"),o(n)]),e(),t("a",Iv,[e("🔗"),o(n)])])]),t("tr",null,[zv,jv,Ov,t("td",qv,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Lv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Cv]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Nv]),_:1})]),Pv,t("td",Kv,[t("a",Vv,[e("🀄️"),o(n)]),e(),t("a",Bv,[e("🔗"),o(n)])])]),t("tr",null,[Tv,Ev,Uv,t("td",Av,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Dv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Wv]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Sv]),_:1})]),Yv,t("td",Fv,[t("a",Hv,[e("🀄️"),o(n)]),e(),t("a",Jv,[e("🔗"),o(n)])])]),t("tr",null,[Qv,Rv,Zv,t("td",Gv,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Mv]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Xv]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[$v]),_:1}),e(),tw]),ew,t("td",ow,[t("a",lw,[e("🀄️"),o(n)]),e(),t("a",sw,[e("🔗"),o(n)])])]),t("tr",null,[nw,dw,rw,t("td",_w,[o(l,{to:"/tag/tree.html"},{default:s(()=>[cw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[aw]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[iw]),_:1}),e(),hw]),fw,t("td",gw,[t("a",uw,[e("🀄️"),o(n)]),e(),t("a",mw,[e("🔗"),o(n)])])]),t("tr",null,[pw,yw,xw,t("td",bw,[o(l,{to:"/tag/tree.html"},{default:s(()=>[kw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[vw]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ww]),_:1}),e(),Iw]),zw,t("td",jw,[t("a",Ow,[e("🀄️"),o(n)]),e(),t("a",qw,[e("🔗"),o(n)])])]),t("tr",null,[Lw,Cw,Nw,t("td",Pw,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Kw]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Vw]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Bw]),_:1}),e(),Tw]),Ew,t("td",Uw,[t("a",Aw,[e("🀄️"),o(n)]),e(),t("a",Dw,[e("🔗"),o(n)])])]),t("tr",null,[Ww,Sw,Yw,t("td",Fw,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Hw]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Jw]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Qw]),_:1})]),Rw,t("td",Zw,[t("a",Gw,[e("🀄️"),o(n)]),e(),t("a",Mw,[e("🔗"),o(n)])])]),t("tr",null,[Xw,$w,tI,t("td",eI,[o(l,{to:"/tag/tree.html"},{default:s(()=>[oI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[lI]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[sI]),_:1})]),nI,t("td",dI,[t("a",rI,[e("🀄️"),o(n)]),e(),t("a",_I,[e("🔗"),o(n)])])]),t("tr",null,[cI,aI,iI,t("td",hI,[o(l,{to:"/tag/tree.html"},{default:s(()=>[fI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[gI]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[uI]),_:1}),e(),mI]),pI,t("td",yI,[t("a",xI,[e("🀄️"),o(n)]),e(),t("a",bI,[e("🔗"),o(n)])])]),t("tr",null,[kI,vI,wI,t("td",II,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[zI]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[jI]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[OI]),_:1}),e(),qI]),LI,t("td",CI,[t("a",NI,[e("🀄️"),o(n)]),e(),t("a",PI,[e("🔗"),o(n)])])]),t("tr",null,[KI,VI,BI,t("td",TI,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[EI]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[UI]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[AI]),_:1}),e(),DI]),WI,t("td",SI,[t("a",YI,[e("🀄️"),o(n)]),e(),t("a",FI,[e("🔗"),o(n)])])]),t("tr",null,[HI,JI,QI,t("td",RI,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ZI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[GI]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[MI]),_:1}),e(),XI]),$I,t("td",tz,[t("a",ez,[e("🀄️"),o(n)]),e(),t("a",oz,[e("🔗"),o(n)])])]),t("tr",null,[lz,sz,nz,t("td",dz,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[rz]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[_z]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[cz]),_:1})]),az,t("td",iz,[t("a",hz,[e("🀄️"),o(n)]),e(),t("a",fz,[e("🔗"),o(n)])])]),t("tr",null,[gz,uz,mz,t("td",pz,[o(l,{to:"/tag/tree.html"},{default:s(()=>[yz]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xz]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[bz]),_:1})]),kz,t("td",vz,[t("a",wz,[e("🀄️"),o(n)]),e(),t("a",Iz,[e("🔗"),o(n)])])]),t("tr",null,[zz,jz,Oz,t("td",qz,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Lz]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Cz]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Nz]),_:1}),e(),Pz]),Kz,t("td",Vz,[t("a",Bz,[e("🀄️"),o(n)]),e(),t("a",Tz,[e("🔗"),o(n)])])]),t("tr",null,[Ez,Uz,Az,t("td",Dz,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Wz]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Sz]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[Yz]),_:1}),e(),Fz]),Hz,t("td",Jz,[t("a",Qz,[e("🀄️"),o(n)]),e(),t("a",Rz,[e("🔗"),o(n)])])]),t("tr",null,[Zz,Gz,Mz,t("td",Xz,[o(l,{to:"/tag/tree.html"},{default:s(()=>[$z]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[tj]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[ej]),_:1})]),oj,t("td",lj,[t("a",sj,[e("🀄️"),o(n)]),e(),t("a",nj,[e("🔗"),o(n)])])]),t("tr",null,[dj,rj,_j,t("td",cj,[o(l,{to:"/tag/tree.html"},{default:s(()=>[aj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ij]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[hj]),_:1}),e(),fj]),gj,t("td",uj,[t("a",mj,[e("🀄️"),o(n)]),e(),t("a",pj,[e("🔗"),o(n)])])]),t("tr",null,[yj,xj,bj,t("td",kj,[o(l,{to:"/tag/tree.html"},{default:s(()=>[vj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[wj]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Ij]),_:1})]),zj,t("td",jj,[t("a",Oj,[e("🀄️"),o(n)]),e(),t("a",qj,[e("🔗"),o(n)])])]),t("tr",null,[Lj,Cj,Nj,t("td",Pj,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Kj]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Vj]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Bj]),_:1}),e(),Tj]),Ej,t("td",Uj,[t("a",Aj,[e("🀄️"),o(n)]),e(),t("a",Dj,[e("🔗"),o(n)])])]),t("tr",null,[Wj,Sj,Yj,t("td",Fj,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Hj]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[Jj]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:s(()=>[Qj]),_:1})]),Rj,t("td",Zj,[t("a",Gj,[e("🀄️"),o(n)]),e(),t("a",Mj,[e("🔗"),o(n)])])]),t("tr",null,[Xj,$j,tO,t("td",eO,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[oO]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[lO]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[sO]),_:1}),e(),nO]),dO,t("td",rO,[t("a",_O,[e("🀄️"),o(n)]),e(),t("a",cO,[e("🔗"),o(n)])])]),t("tr",null,[aO,iO,hO,t("td",fO,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[gO]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[uO]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[mO]),_:1}),e(),pO]),yO,t("td",xO,[t("a",bO,[e("🀄️"),o(n)]),e(),t("a",kO,[e("🔗"),o(n)])])]),t("tr",null,[vO,wO,IO,t("td",zO,[o(l,{to:"/tag/stack.html"},{default:s(()=>[jO]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[OO]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[qO]),_:1}),e(),LO]),CO,t("td",NO,[t("a",PO,[e("🀄️"),o(n)]),e(),t("a",KO,[e("🔗"),o(n)])])]),t("tr",null,[VO,BO,t("td",TO,[o(l,{to:"/problem/1233.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",EO,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[UO]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[AO]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[DO]),_:1}),e(),WO]),SO,t("td",YO,[t("a",FO,[e("🀄️"),o(n)]),e(),t("a",HO,[e("🔗"),o(n)])])]),t("tr",null,[JO,QO,RO,t("td",ZO,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[GO]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[MO]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[XO]),_:1}),e(),$O]),tq,t("td",eq,[t("a",oq,[e("🀄️"),o(n)]),e(),t("a",lq,[e("🔗"),o(n)])])]),t("tr",null,[sq,nq,dq,t("td",rq,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[_q]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[cq]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:s(()=>[aq]),_:1})]),iq,t("td",hq,[t("a",fq,[e("🀄️"),o(n)]),e(),t("a",gq,[e("🔗"),o(n)])])]),t("tr",null,[uq,mq,pq,t("td",yq,[o(l,{to:"/tag/tree.html"},{default:s(()=>[xq]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[bq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[kq]),_:1}),e(),vq]),wq,t("td",Iq,[t("a",zq,[e("🀄️"),o(n)]),e(),t("a",jq,[e("🔗"),o(n)])])]),t("tr",null,[Oq,qq,Lq,t("td",Cq,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Nq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Pq]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Kq]),_:1}),e(),Vq]),Bq,t("td",Tq,[t("a",Eq,[e("🀄️"),o(n)]),e(),t("a",Uq,[e("🔗"),o(n)])])]),t("tr",null,[Aq,Dq,Wq,t("td",Sq,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Yq]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Fq]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Hq]),_:1}),e(),Jq]),Qq,t("td",Rq,[t("a",Zq,[e("🀄️"),o(n)]),e(),t("a",Gq,[e("🔗"),o(n)])])]),t("tr",null,[Mq,Xq,$q,t("td",tL,[o(l,{to:"/tag/tree.html"},{default:s(()=>[eL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[oL]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[lL]),_:1}),e(),sL]),nL,t("td",dL,[t("a",rL,[e("🀄️"),o(n)]),e(),t("a",_L,[e("🔗"),o(n)])])]),t("tr",null,[cL,aL,iL,t("td",hL,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[fL]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[gL]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[uL]),_:1}),e(),mL]),pL,t("td",yL,[t("a",xL,[e("🀄️"),o(n)]),e(),t("a",bL,[e("🔗"),o(n)])])]),t("tr",null,[kL,vL,wL,t("td",IL,[o(l,{to:"/tag/tree.html"},{default:s(()=>[zL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[jL]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[OL]),_:1}),e(),qL]),LL,t("td",CL,[t("a",NL,[e("🀄️"),o(n)]),e(),t("a",PL,[e("🔗"),o(n)])])]),t("tr",null,[KL,VL,BL,t("td",TL,[o(l,{to:"/tag/tree.html"},{default:s(()=>[EL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[UL]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[AL]),_:1}),e(),DL]),WL,t("td",SL,[t("a",YL,[e("🀄️"),o(n)]),e(),t("a",FL,[e("🔗"),o(n)])])]),t("tr",null,[HL,JL,QL,t("td",RL,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ZL]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[GL]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[ML]),_:1}),e(),XL]),$L,t("td",tC,[t("a",eC,[e("🀄️"),o(n)]),e(),t("a",oC,[e("🔗"),o(n)])])]),t("tr",null,[lC,sC,nC,t("td",dC,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[rC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[_C]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[cC]),_:1})]),aC,t("td",iC,[t("a",hC,[e("🀄️"),o(n)]),e(),t("a",fC,[e("🔗"),o(n)])])]),t("tr",null,[gC,uC,mC,t("td",pC,[o(l,{to:"/tag/tree.html"},{default:s(()=>[yC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[bC]),_:1}),e(),kC]),vC,t("td",wC,[t("a",IC,[e("🀄️"),o(n)]),e(),t("a",zC,[e("🔗"),o(n)])])]),t("tr",null,[jC,OC,qC,t("td",LC,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[CC]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[NC]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[PC]),_:1}),e(),KC]),VC,t("td",BC,[t("a",TC,[e("🀄️"),o(n)]),e(),t("a",EC,[e("🔗"),o(n)])])]),t("tr",null,[UC,AC,DC,t("td",WC,[o(l,{to:"/tag/tree.html"},{default:s(()=>[SC]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[YC]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[FC]),_:1})]),HC,t("td",JC,[t("a",QC,[e("🀄️"),o(n)]),e(),t("a",RC,[e("🔗"),o(n)])])]),t("tr",null,[ZC,GC,MC,t("td",XC,[o(l,{to:"/tag/tree.html"},{default:s(()=>[$C]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[tN]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[eN]),_:1})]),oN,t("td",lN,[t("a",sN,[e("🀄️"),o(n)]),e(),t("a",nN,[e("🔗"),o(n)])])]),t("tr",null,[dN,rN,_N,t("td",cN,[o(l,{to:"/tag/tree.html"},{default:s(()=>[aN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[iN]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[hN]),_:1}),e(),fN]),gN,t("td",uN,[t("a",mN,[e("🀄️"),o(n)]),e(),t("a",pN,[e("🔗"),o(n)])])]),t("tr",null,[yN,xN,bN,t("td",kN,[o(l,{to:"/tag/tree.html"},{default:s(()=>[vN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[wN]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:s(()=>[IN]),_:1}),e(),zN]),jN,t("td",ON,[t("a",qN,[e("🀄️"),o(n)]),e(),t("a",LN,[e("🔗"),o(n)])])]),t("tr",null,[CN,NN,PN,t("td",KN,[o(l,{to:"/tag/tree.html"},{default:s(()=>[VN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[BN]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[TN]),_:1}),e(),EN]),UN,t("td",AN,[t("a",DN,[e("🀄️"),o(n)]),e(),t("a",WN,[e("🔗"),o(n)])])]),t("tr",null,[SN,YN,FN,t("td",HN,[o(l,{to:"/tag/tree.html"},{default:s(()=>[JN]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[QN]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[RN]),_:1}),e(),ZN]),GN,t("td",MN,[t("a",XN,[e("🀄️"),o(n)]),e(),t("a",$N,[e("🔗"),o(n)])])]),t("tr",null,[tP,eP,oP,t("td",lP,[o(l,{to:"/tag/tree.html"},{default:s(()=>[sP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[nP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[dP]),_:1})]),rP,t("td",_P,[t("a",cP,[e("🀄️"),o(n)]),e(),t("a",aP,[e("🔗"),o(n)])])]),t("tr",null,[iP,hP,fP,t("td",gP,[o(l,{to:"/tag/tree.html"},{default:s(()=>[uP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[mP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[pP]),_:1}),e(),yP]),xP,t("td",bP,[t("a",kP,[e("🀄️"),o(n)]),e(),t("a",vP,[e("🔗"),o(n)])])]),t("tr",null,[wP,IP,zP,t("td",jP,[o(l,{to:"/tag/tree.html"},{default:s(()=>[OP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[qP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[LP]),_:1}),e(),CP]),NP,t("td",PP,[t("a",KP,[e("🀄️"),o(n)]),e(),t("a",VP,[e("🔗"),o(n)])])]),t("tr",null,[BP,TP,EP,t("td",UP,[o(l,{to:"/tag/greedy.html"},{default:s(()=>[AP]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[DP]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[WP]),_:1}),e(),SP]),YP,t("td",FP,[t("a",HP,[e("🀄️"),o(n)]),e(),t("a",JP,[e("🔗"),o(n)])])]),t("tr",null,[QP,RP,ZP,t("td",GP,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[MP]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[XP]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[$P]),_:1}),e(),tK]),eK,t("td",oK,[t("a",lK,[e("🀄️"),o(n)]),e(),t("a",sK,[e("🔗"),o(n)])])]),t("tr",null,[nK,dK,rK,t("td",_K,[o(l,{to:"/tag/tree.html"},{default:s(()=>[cK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[aK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[iK]),_:1}),e(),hK]),fK,t("td",gK,[t("a",uK,[e("🀄️"),o(n)]),e(),t("a",mK,[e("🔗"),o(n)])])]),t("tr",null,[pK,yK,xK,t("td",bK,[o(l,{to:"/tag/tree.html"},{default:s(()=>[kK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[vK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[wK]),_:1}),e(),IK]),zK,t("td",jK,[t("a",OK,[e("🀄️"),o(n)]),e(),t("a",qK,[e("🔗"),o(n)])])]),t("tr",null,[LK,CK,NK,t("td",PK,[o(l,{to:"/tag/tree.html"},{default:s(()=>[KK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[VK]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[BK]),_:1}),e(),TK]),EK,t("td",UK,[t("a",AK,[e("🀄️"),o(n)]),e(),t("a",DK,[e("🔗"),o(n)])])]),t("tr",null,[WK,SK,YK,t("td",FK,[o(l,{to:"/tag/bit-manipulation.html"},{default:s(()=>[HK]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[JK]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[QK]),_:1}),e(),RK]),ZK,t("td",GK,[t("a",MK,[e("🀄️"),o(n)]),e(),t("a",XK,[e("🔗"),o(n)])])]),t("tr",null,[$K,tV,eV,t("td",oV,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[lV]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[sV]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[nV]),_:1}),e(),dV]),rV,t("td",_V,[t("a",cV,[e("🀄️"),o(n)]),e(),t("a",aV,[e("🔗"),o(n)])])]),t("tr",null,[iV,hV,fV,t("td",gV,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[uV]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[mV]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[pV]),_:1})]),yV,t("td",xV,[t("a",bV,[e("🀄️"),o(n)]),e(),t("a",kV,[e("🔗"),o(n)])])]),t("tr",null,[vV,wV,IV,t("td",zV,[o(l,{to:"/tag/tree.html"},{default:s(()=>[jV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[OV]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[qV]),_:1}),e(),LV]),CV,t("td",NV,[t("a",PV,[e("🀄️"),o(n)]),e(),t("a",KV,[e("🔗"),o(n)])])]),t("tr",null,[VV,BV,TV,t("td",EV,[o(l,{to:"/tag/tree.html"},{default:s(()=>[UV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[AV]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[DV]),_:1}),e(),WV]),SV,t("td",YV,[t("a",FV,[e("🀄️"),o(n)]),e(),t("a",HV,[e("🔗"),o(n)])])]),t("tr",null,[JV,QV,RV,t("td",ZV,[o(l,{to:"/tag/tree.html"},{default:s(()=>[GV]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[MV]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[XV]),_:1}),e(),$V]),tB,t("td",eB,[t("a",oB,[e("🀄️"),o(n)]),e(),t("a",lB,[e("🔗"),o(n)])])]),t("tr",null,[sB,nB,dB,t("td",rB,[o(l,{to:"/tag/tree.html"},{default:s(()=>[_B]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[cB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[aB]),_:1}),e(),iB]),hB,t("td",fB,[t("a",gB,[e("🀄️"),o(n)]),e(),t("a",uB,[e("🔗"),o(n)])])]),t("tr",null,[mB,pB,yB,t("td",xB,[o(l,{to:"/tag/bit-manipulation.html"},{default:s(()=>[bB]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[kB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[vB]),_:1}),e(),wB]),IB,t("td",zB,[t("a",jB,[e("🀄️"),o(n)]),e(),t("a",OB,[e("🔗"),o(n)])])]),t("tr",null,[qB,LB,CB,t("td",NB,[o(l,{to:"/tag/tree.html"},{default:s(()=>[PB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[KB]),_:1})]),VB,t("td",BB,[t("a",TB,[e("🀄️"),o(n)]),e(),t("a",EB,[e("🔗"),o(n)])])]),t("tr",null,[UB,AB,DB,t("td",WB,[o(l,{to:"/tag/tree.html"},{default:s(()=>[SB]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[YB]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[FB]),_:1}),e(),HB]),JB,t("td",QB,[t("a",RB,[e("🀄️"),o(n)]),e(),t("a",ZB,[e("🔗"),o(n)])])]),t("tr",null,[GB,MB,t("td",XB,[o(l,{to:"/problem/1522.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",$B,[o(l,{to:"/tag/tree.html"},{default:s(()=>[tT]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[eT]),_:1})]),oT,t("td",lT,[t("a",sT,[e("🀄️"),o(n)]),e(),t("a",nT,[e("🔗"),o(n)])])]),t("tr",null,[dT,rT,_T,t("td",cT,[o(l,{to:"/tag/tree.html"},{default:s(()=>[aT]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[iT]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[hT]),_:1})]),fT,t("td",gT,[t("a",uT,[e("🀄️"),o(n)]),e(),t("a",mT,[e("🔗"),o(n)])])]),t("tr",null,[pT,yT,xT,t("td",bT,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[kT]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[vT]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[wT]),_:1}),e(),IT]),zT,t("td",jT,[t("a",OT,[e("🀄️"),o(n)]),e(),t("a",qT,[e("🔗"),o(n)])])]),t("tr",null,[LT,CT,NT,t("td",PT,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[KT]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[VT]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[BT]),_:1}),e(),TT]),ET,t("td",UT,[t("a",AT,[e("🀄️"),o(n)]),e(),t("a",DT,[e("🔗"),o(n)])])]),t("tr",null,[WT,ST,YT,t("td",FT,[o(l,{to:"/tag/tree.html"},{default:s(()=>[HT]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[JT]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[QT]),_:1}),e(),RT]),ZT,t("td",GT,[t("a",MT,[e("🀄️"),o(n)]),e(),t("a",XT,[e("🔗"),o(n)])])]),t("tr",null,[$T,tE,eE,t("td",oE,[o(l,{to:"/tag/tree.html"},{default:s(()=>[lE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[sE]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:s(()=>[nE]),_:1}),e(),dE]),rE,t("td",_E,[t("a",cE,[e("🀄️"),o(n)]),e(),t("a",aE,[e("🔗"),o(n)])])]),t("tr",null,[iE,hE,fE,t("td",gE,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[uE]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[mE]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[pE]),_:1}),e(),yE]),xE,t("td",bE,[t("a",kE,[e("🀄️"),o(n)]),e(),t("a",vE,[e("🔗"),o(n)])])]),t("tr",null,[wE,IE,zE,t("td",jE,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[OE]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[qE]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[LE]),_:1}),e(),CE]),NE,t("td",PE,[t("a",KE,[e("🀄️"),o(n)]),e(),t("a",VE,[e("🔗"),o(n)])])]),t("tr",null,[BE,TE,EE,t("td",UE,[o(l,{to:"/tag/tree.html"},{default:s(()=>[AE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[DE]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[WE]),_:1})]),SE,t("td",YE,[t("a",FE,[e("🀄️"),o(n)]),e(),t("a",HE,[e("🔗"),o(n)])])]),t("tr",null,[JE,QE,RE,t("td",ZE,[o(l,{to:"/tag/tree.html"},{default:s(()=>[GE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ME]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[XE]),_:1}),e(),$E]),tU,t("td",eU,[t("a",oU,[e("🀄️"),o(n)]),e(),t("a",lU,[e("🔗"),o(n)])])]),t("tr",null,[sU,nU,dU,t("td",rU,[o(l,{to:"/tag/tree.html"},{default:s(()=>[_U]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[cU]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[aU]),_:1})]),iU,t("td",hU,[t("a",fU,[e("🀄️"),o(n)]),e(),t("a",gU,[e("🔗"),o(n)])])]),t("tr",null,[uU,mU,pU,t("td",yU,[o(l,{to:"/tag/tree.html"},{default:s(()=>[xU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[bU]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:s(()=>[kU]),_:1}),e(),vU]),wU,t("td",IU,[t("a",zU,[e("🀄️"),o(n)]),e(),t("a",jU,[e("🔗"),o(n)])])]),t("tr",null,[OU,qU,LU,t("td",CU,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[NU]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[PU]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[KU]),_:1})]),VU,t("td",BU,[t("a",TU,[e("🀄️"),o(n)]),e(),t("a",EU,[e("🔗"),o(n)])])]),t("tr",null,[UU,AU,DU,t("td",WU,[o(l,{to:"/tag/tree.html"},{default:s(()=>[SU]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[YU]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[FU]),_:1}),e(),HU]),JU,t("td",QU,[t("a",RU,[e("🀄️"),o(n)]),e(),t("a",ZU,[e("🔗"),o(n)])])]),t("tr",null,[GU,MU,XU,t("td",$U,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[tA]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[eA]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:s(()=>[oA]),_:1})]),lA,t("td",sA,[t("a",nA,[e("🀄️"),o(n)]),e(),t("a",dA,[e("🔗"),o(n)])])]),t("tr",null,[rA,_A,cA,t("td",aA,[o(l,{to:"/tag/tree.html"},{default:s(()=>[iA]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[hA]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[fA]),_:1}),e(),gA]),uA,t("td",mA,[t("a",pA,[e("🀄️"),o(n)]),e(),t("a",yA,[e("🔗"),o(n)])])]),t("tr",null,[xA,bA,kA,t("td",vA,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[wA]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[IA]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[zA]),_:1}),e(),jA]),OA,t("td",qA,[t("a",LA,[e("🀄️"),o(n)]),e(),t("a",CA,[e("🔗"),o(n)])])]),t("tr",null,[NA,PA,KA,t("td",VA,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[BA]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[TA]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[EA]),_:1}),e(),UA]),AA,t("td",DA,[t("a",WA,[e("🀄️"),o(n)]),e(),t("a",SA,[e("🔗"),o(n)])])]),t("tr",null,[YA,FA,HA,t("td",JA,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[QA]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[RA]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[ZA]),_:1}),e(),GA]),MA,t("td",XA,[t("a",$A,[e("🀄️"),o(n)]),e(),t("a",tD,[e("🔗"),o(n)])])]),t("tr",null,[eD,oD,lD,t("td",sD,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[nD]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[dD]),_:1})]),rD,t("td",_D,[t("a",cD,[e("🀄️"),o(n)]),e(),t("a",aD,[e("🔗"),o(n)])])]),t("tr",null,[iD,hD,fD,t("td",gD,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[uD]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[mD]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[pD]),_:1}),e(),yD]),xD,t("td",bD,[t("a",kD,[e("🀄️"),o(n)]),e(),t("a",vD,[e("🔗"),o(n)])])]),t("tr",null,[wD,ID,zD,t("td",jD,[o(l,{to:"/tag/tree.html"},{default:s(()=>[OD]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[qD]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:s(()=>[LD]),_:1}),e(),CD]),ND,t("td",PD,[t("a",KD,[e("🀄️"),o(n)]),e(),t("a",VD,[e("🔗"),o(n)])])]),t("tr",null,[BD,TD,ED,t("td",UD,[o(l,{to:"/tag/bit-manipulation.html"},{default:s(()=>[AD]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[DD]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[WD]),_:1}),e(),SD]),YD,t("td",FD,[t("a",HD,[e("🀄️"),o(n)]),e(),t("a",JD,[e("🔗"),o(n)])])]),t("tr",null,[QD,RD,ZD,t("td",GD,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[MD]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[XD]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[$D]),_:1}),e(),tW]),eW,t("td",oW,[t("a",lW,[e("🀄️"),o(n)]),e(),t("a",sW,[e("🔗"),o(n)])])]),t("tr",null,[nW,dW,rW,t("td",_W,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[cW]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[aW]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[iW]),_:1}),e(),hW]),fW,t("td",gW,[t("a",uW,[e("🀄️"),o(n)]),e(),t("a",mW,[e("🔗"),o(n)])])]),t("tr",null,[pW,yW,xW,t("td",bW,[o(l,{to:"/tag/tree.html"},{default:s(()=>[kW]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[vW]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[wW]),_:1})]),IW,t("td",zW,[t("a",jW,[e("🀄️"),o(n)]),e(),t("a",OW,[e("🔗"),o(n)])])]),t("tr",null,[qW,LW,CW,t("td",NW,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[PW]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[KW]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[VW]),_:1}),e(),BW]),TW,t("td",EW,[t("a",UW,[e("🀄️"),o(n)]),e(),t("a",AW,[e("🔗"),o(n)])])]),t("tr",null,[DW,WW,SW,t("td",YW,[o(l,{to:"/tag/tree.html"},{default:s(()=>[FW]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[HW]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[JW]),_:1}),e(),QW]),RW,t("td",ZW,[t("a",GW,[e("🀄️"),o(n)]),e(),t("a",MW,[e("🔗"),o(n)])])]),t("tr",null,[XW,$W,tS,t("td",eS,[o(l,{to:"/tag/tree.html"},{default:s(()=>[oS]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[lS]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[sS]),_:1}),e(),nS]),dS,t("td",rS,[t("a",_S,[e("🀄️"),o(n)]),e(),t("a",cS,[e("🔗"),o(n)])])]),t("tr",null,[aS,iS,hS,t("td",fS,[o(l,{to:"/tag/tree.html"},{default:s(()=>[gS]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[uS]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[mS]),_:1}),e(),pS]),yS,t("td",xS,[t("a",bS,[e("🀄️"),o(n)]),e(),t("a",kS,[e("🔗"),o(n)])])]),t("tr",null,[vS,wS,IS,t("td",zS,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[jS]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[OS]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[qS]),_:1}),e(),LS]),CS,t("td",NS,[t("a",PS,[e("🀄️"),o(n)]),e(),t("a",KS,[e("🔗"),o(n)])])]),t("tr",null,[VS,BS,TS,t("td",ES,[o(l,{to:"/tag/tree.html"},{default:s(()=>[US]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[AS]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[DS]),_:1}),e(),WS]),SS,t("td",YS,[t("a",FS,[e("🀄️"),o(n)]),e(),t("a",HS,[e("🔗"),o(n)])])]),t("tr",null,[JS,QS,RS,t("td",ZS,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[GS]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[MS]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:s(()=>[XS]),_:1})]),$S,t("td",tY,[t("a",eY,[e("🀄️"),o(n)]),e(),t("a",oY,[e("🔗"),o(n)])])]),t("tr",null,[lY,sY,nY,t("td",dY,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[rY]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[_Y]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[cY]),_:1}),e(),aY]),iY,t("td",hY,[t("a",fY,[e("🀄️"),o(n)]),e(),t("a",gY,[e("🔗"),o(n)])])]),t("tr",null,[uY,mY,pY,t("td",yY,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xY]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[bY]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:s(()=>[kY]),_:1})]),vY,t("td",wY,[t("a",IY,[e("🀄️"),o(n)]),e(),t("a",zY,[e("🔗"),o(n)])])]),t("tr",null,[jY,OY,qY,t("td",LY,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[CY]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[NY]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[PY]),_:1}),e(),KY]),VY,t("td",BY,[t("a",TY,[e("🀄️"),o(n)]),e(),t("a",EY,[e("🔗"),o(n)])])]),t("tr",null,[UY,AY,DY,t("td",WY,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[SY]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[YY]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[FY]),_:1}),e(),HY]),JY,t("td",QY,[t("a",RY,[e("🀄️"),o(n)]),e(),t("a",ZY,[e("🔗"),o(n)])])]),t("tr",null,[GY,MY,XY,t("td",$Y,[o(l,{to:"/tag/tree.html"},{default:s(()=>[tF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[eF]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[oF]),_:1}),e(),lF]),sF,t("td",nF,[t("a",dF,[e("🀄️"),o(n)]),e(),t("a",rF,[e("🔗"),o(n)])])]),t("tr",null,[_F,cF,aF,t("td",iF,[o(l,{to:"/tag/tree.html"},{default:s(()=>[hF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[fF]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[gF]),_:1})]),uF,t("td",mF,[t("a",pF,[e("🀄️"),o(n)]),e(),t("a",yF,[e("🔗"),o(n)])])]),t("tr",null,[xF,bF,kF,t("td",vF,[o(l,{to:"/tag/tree.html"},{default:s(()=>[wF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[IF]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[zF]),_:1}),e(),jF]),OF,t("td",qF,[t("a",LF,[e("🀄️"),o(n)]),e(),t("a",CF,[e("🔗"),o(n)])])]),t("tr",null,[NF,PF,KF,t("td",VF,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[BF]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[TF]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[EF]),_:1}),e(),UF]),AF,t("td",DF,[t("a",WF,[e("🀄️"),o(n)]),e(),t("a",SF,[e("🔗"),o(n)])])]),t("tr",null,[YF,FF,HF,t("td",JF,[o(l,{to:"/tag/tree.html"},{default:s(()=>[QF]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[RF]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[ZF]),_:1}),e(),GF]),MF,t("td",XF,[t("a",$F,[e("🀄️"),o(n)]),e(),t("a",tH,[e("🔗"),o(n)])])]),t("tr",null,[eH,oH,lH,t("td",sH,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[nH]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[dH]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[rH]),_:1}),e(),_H]),cH,t("td",aH,[t("a",iH,[e("🀄️"),o(n)]),e(),t("a",hH,[e("🔗"),o(n)])])]),t("tr",null,[fH,gH,uH,t("td",mH,[o(l,{to:"/tag/bit-manipulation.html"},{default:s(()=>[pH]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[yH]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xH]),_:1}),e(),bH]),kH,t("td",vH,[t("a",wH,[e("🀄️"),o(n)]),e(),t("a",IH,[e("🔗"),o(n)])])]),t("tr",null,[zH,jH,OH,t("td",qH,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[LH]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[CH]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[NH]),_:1}),e(),PH]),KH,t("td",VH,[t("a",BH,[e("🀄️"),o(n)]),e(),t("a",TH,[e("🔗"),o(n)])])]),t("tr",null,[EH,UH,AH,t("td",DH,[o(l,{to:"/tag/tree.html"},{default:s(()=>[WH]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[SH]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[YH]),_:1})]),FH,t("td",HH,[t("a",JH,[e("🀄️"),o(n)]),e(),t("a",QH,[e("🔗"),o(n)])])]),t("tr",null,[RH,ZH,GH,t("td",MH,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[XH]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[$H]),_:1})]),tJ,t("td",eJ,[t("a",oJ,[e("🀄️"),o(n)]),e(),t("a",lJ,[e("🔗"),o(n)])])]),t("tr",null,[sJ,nJ,dJ,t("td",rJ,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[_J]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[cJ]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:s(()=>[aJ]),_:1})]),iJ,t("td",hJ,[t("a",fJ,[e("🀄️"),o(n)]),e(),t("a",gJ,[e("🔗"),o(n)])])]),t("tr",null,[uJ,mJ,pJ,t("td",yJ,[o(l,{to:"/tag/tree.html"},{default:s(()=>[xJ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[bJ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[kJ]),_:1}),e(),vJ]),wJ,t("td",IJ,[t("a",zJ,[e("🀄️"),o(n)]),e(),t("a",jJ,[e("🔗"),o(n)])])]),t("tr",null,[OJ,qJ,LJ,t("td",CJ,[o(l,{to:"/tag/tree.html"},{default:s(()=>[NJ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[PJ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[KJ]),_:1})]),VJ,t("td",BJ,[t("a",TJ,[e("🀄️"),o(n)]),e(),t("a",EJ,[e("🔗"),o(n)])])]),t("tr",null,[UJ,AJ,DJ,t("td",WJ,[o(l,{to:"/tag/tree.html"},{default:s(()=>[SJ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[YJ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[FJ]),_:1}),e(),HJ]),JJ,t("td",QJ,[t("a",RJ,[e("🀄️"),o(n)]),e(),t("a",ZJ,[e("🔗"),o(n)])])]),t("tr",null,[GJ,MJ,XJ,t("td",$J,[o(l,{to:"/tag/tree.html"},{default:s(()=>[tQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[eQ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[oQ]),_:1}),e(),lQ]),sQ,t("td",nQ,[t("a",dQ,[e("🀄️"),o(n)]),e(),t("a",rQ,[e("🔗"),o(n)])])]),t("tr",null,[_Q,cQ,aQ,t("td",iQ,[o(l,{to:"/tag/tree.html"},{default:s(()=>[hQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[fQ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[gQ]),_:1}),e(),uQ]),mQ,t("td",pQ,[t("a",yQ,[e("🀄️"),o(n)]),e(),t("a",xQ,[e("🔗"),o(n)])])]),t("tr",null,[bQ,kQ,vQ,t("td",wQ,[o(l,{to:"/tag/tree.html"},{default:s(()=>[IQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[zQ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[jQ]),_:1}),e(),OQ]),qQ,t("td",LQ,[t("a",CQ,[e("🀄️"),o(n)]),e(),t("a",NQ,[e("🔗"),o(n)])])]),t("tr",null,[PQ,KQ,t("td",VQ,[o(l,{to:"/problem/2458.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",BQ,[o(l,{to:"/tag/tree.html"},{default:s(()=>[TQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[EQ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[UQ]),_:1}),e(),AQ]),DQ,t("td",WQ,[t("a",SQ,[e("🀄️"),o(n)]),e(),t("a",YQ,[e("🔗"),o(n)])])]),t("tr",null,[FQ,HQ,JQ,t("td",QQ,[o(l,{to:"/tag/tree.html"},{default:s(()=>[RQ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ZQ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[GQ]),_:1}),e(),MQ]),XQ,t("td",$Q,[t("a",tR,[e("🀄️"),o(n)]),e(),t("a",eR,[e("🔗"),o(n)])])]),t("tr",null,[oR,lR,sR,t("td",nR,[o(l,{to:"/tag/tree.html"},{default:s(()=>[dR]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[rR]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[_R]),_:1}),e(),cR]),aR,t("td",iR,[t("a",hR,[e("🀄️"),o(n)]),e(),t("a",fR,[e("🔗"),o(n)])])]),t("tr",null,[gR,uR,mR,t("td",pR,[o(l,{to:"/tag/tree.html"},{default:s(()=>[yR]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xR]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[bR]),_:1}),e(),kR]),vR,t("td",wR,[t("a",IR,[e("🀄️"),o(n)]),e(),t("a",zR,[e("🔗"),o(n)])])]),t("tr",null,[jR,OR,qR,t("td",LR,[o(l,{to:"/tag/tree.html"},{default:s(()=>[CR]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[NR]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[PR]),_:1}),e(),KR]),VR,t("td",BR,[t("a",TR,[e("🀄️"),o(n)]),e(),t("a",ER,[e("🔗"),o(n)])])]),t("tr",null,[UR,AR,DR,t("td",WR,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[SR]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[YR]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[FR]),_:1}),e(),HR]),JR,t("td",QR,[t("a",RR,[e("🀄️"),o(n)]),e(),t("a",ZR,[e("🔗"),o(n)])])]),t("tr",null,[GR,MR,XR,t("td",$R,[o(l,{to:"/tag/tree.html"},{default:s(()=>[tZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[eZ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[oZ]),_:1}),e(),lZ]),sZ,t("td",nZ,[t("a",dZ,[e("🀄️"),o(n)]),e(),t("a",rZ,[e("🔗"),o(n)])])]),t("tr",null,[_Z,cZ,aZ,t("td",iZ,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[hZ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[fZ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[gZ]),_:1}),e(),uZ]),mZ,t("td",pZ,[t("a",yZ,[e("🀄️"),o(n)]),e(),t("a",xZ,[e("🔗"),o(n)])])]),t("tr",null,[bZ,kZ,vZ,t("td",wZ,[o(l,{to:"/tag/tree.html"},{default:s(()=>[IZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[zZ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[jZ]),_:1}),e(),OZ]),qZ,t("td",LZ,[t("a",CZ,[e("🀄️"),o(n)]),e(),t("a",NZ,[e("🔗"),o(n)])])]),t("tr",null,[PZ,KZ,VZ,t("td",BZ,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[TZ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[EZ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[UZ]),_:1}),e(),AZ]),DZ,t("td",WZ,[t("a",SZ,[e("🀄️"),o(n)]),e(),t("a",YZ,[e("🔗"),o(n)])])]),t("tr",null,[FZ,HZ,t("td",JZ,[o(l,{to:"/problem/2641.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",QZ,[o(l,{to:"/tag/tree.html"},{default:s(()=>[RZ]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ZZ]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[GZ]),_:1}),e(),MZ]),XZ,t("td",$Z,[t("a",tG,[e("🀄️"),o(n)]),e(),t("a",eG,[e("🔗"),o(n)])])]),t("tr",null,[oG,lG,sG,t("td",nG,[o(l,{to:"/tag/tree.html"},{default:s(()=>[dG]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[rG]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[_G]),_:1}),e(),cG]),aG,t("td",iG,[t("a",hG,[e("🀄️"),o(n)]),e(),t("a",fG,[e("🔗"),o(n)])])]),t("tr",null,[gG,uG,mG,t("td",pG,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[yG]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[xG]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[bG]),_:1}),e(),kG]),vG,t("td",wG,[t("a",IG,[e("🀄️"),o(n)]),e(),t("a",zG,[e("🔗"),o(n)])])]),t("tr",null,[jG,OG,qG,t("td",LG,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[CG]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[NG]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[PG]),_:1})]),KG,t("td",VG,[t("a",BG,[e("🀄️"),o(n)]),e(),t("a",TG,[e("🔗"),o(n)])])]),t("tr",null,[EG,UG,AG,t("td",DG,[o(l,{to:"/tag/tree.html"},{default:s(()=>[WG]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[SG]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[YG]),_:1})]),FG,t("td",HG,[t("a",JG,[e("🀄️"),o(n)]),e(),t("a",QG,[e("🔗"),o(n)])])]),t("tr",null,[RG,ZG,GG,t("td",MG,[o(l,{to:"/tag/stack.html"},{default:s(()=>[XG]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[$G]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[tM]),_:1}),e(),eM]),oM,t("td",lM,[t("a",sM,[e("🀄️"),o(n)]),e(),t("a",nM,[e("🔗"),o(n)])])]),t("tr",null,[dM,rM,_M,t("td",cM,[o(l,{to:"/tag/tree.html"},{default:s(()=>[aM]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[iM]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[hM]),_:1}),e(),fM]),gM,t("td",uM,[t("a",mM,[e("🀄️"),o(n)]),e(),t("a",pM,[e("🔗"),o(n)])])]),t("tr",null,[yM,xM,bM,t("td",kM,[o(l,{to:"/tag/bit-manipulation.html"},{default:s(()=>[vM]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[wM]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[IM]),_:1}),e(),zM]),jM,t("td",OM,[t("a",qM,[e("🀄️"),o(n)]),e(),t("a",LM,[e("🔗"),o(n)])])]),t("tr",null,[CM,NM,PM,t("td",KM,[o(l,{to:"/tag/tree.html"},{default:s(()=>[VM]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[BM]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:s(()=>[TM]),_:1}),e(),EM]),UM,t("td",AM,[t("a",DM,[e("🀄️"),o(n)]),e(),t("a",WM,[e("🔗"),o(n)])])]),t("tr",null,[SM,YM,FM,t("td",HM,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[JM]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[QM]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[RM]),_:1}),e(),ZM]),GM,t("td",MM,[t("a",XM,[e("🀄️"),o(n)]),e(),t("a",$M,[e("🔗"),o(n)])])]),t("tr",null,[tX,eX,oX,t("td",lX,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[sX]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[nX]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[dX]),_:1}),e(),rX]),_X,t("td",cX,[t("a",aX,[e("🀄️"),o(n)]),e(),t("a",iX,[e("🔗"),o(n)])])]),t("tr",null,[hX,fX,gX,t("td",uX,[o(l,{to:"/tag/tree.html"},{default:s(()=>[mX]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[pX]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:s(()=>[yX]),_:1}),e(),xX]),bX,t("td",kX,[t("a",vX,[e("🀄️"),o(n)]),e(),t("a",wX,[e("🔗"),o(n)])])]),t("tr",null,[IX,zX,jX,t("td",OX,[o(l,{to:"/tag/tree.html"},{default:s(()=>[qX]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[LX]),_:1})]),CX,t("td",NX,[t("a",PX,[e("🀄️"),o(n)]),e(),t("a",KX,[e("🔗"),o(n)])])]),t("tr",null,[VX,BX,TX,t("td",EX,[o(l,{to:"/tag/bit-manipulation.html"},{default:s(()=>[UX]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[AX]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[DX]),_:1}),e(),WX]),SX,t("td",YX,[t("a",FX,[e("🀄️"),o(n)]),e(),t("a",HX,[e("🔗"),o(n)])])]),t("tr",null,[JX,QX,RX,t("td",ZX,[o(l,{to:"/tag/tree.html"},{default:s(()=>[GX]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[MX]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[XX]),_:1})]),$X,t("td",t$,[t("a",e$,[e("🀄️"),o(n)]),e(),t("a",o$,[e("🔗"),o(n)])])]),t("tr",null,[l$,s$,n$,t("td",d$,[o(l,{to:"/tag/tree.html"},{default:s(()=>[r$]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[_$]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[c$]),_:1}),e(),a$]),i$,t("td",h$,[t("a",f$,[e("🀄️"),o(n)]),e(),t("a",g$,[e("🔗"),o(n)])])]),t("tr",null,[u$,m$,p$,t("td",y$,[o(l,{to:"/tag/tree.html"},{default:s(()=>[x$]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[b$]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[k$]),_:1}),e(),v$]),w$,t("td",I$,[t("a",z$,[e("🀄️"),o(n)]),e(),t("a",j$,[e("🔗"),o(n)])])]),t("tr",null,[O$,q$,L$,t("td",C$,[o(l,{to:"/tag/tree.html"},{default:s(()=>[N$]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[P$]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[K$]),_:1})]),V$,t("td",B$,[t("a",T$,[e("🀄️"),o(n)]),e(),t("a",E$,[e("🔗"),o(n)])])]),t("tr",null,[U$,A$,D$,t("td",W$,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[S$]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Y$]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[F$]),_:1}),e(),H$]),J$,t("td",Q$,[t("a",R$,[e("🀄️"),o(n)]),e(),t("a",Z$,[e("🔗"),o(n)])])]),t("tr",null,[G$,M$,X$,t("td",$$,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ttt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ett]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ott]),_:1}),e(),ltt]),stt,t("td",ntt,[t("a",dtt,[e("🀄️"),o(n)]),e(),t("a",rtt,[e("🔗"),o(n)])])]),t("tr",null,[_tt,ctt,att,t("td",itt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[htt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ftt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[gtt]),_:1}),e(),utt]),mtt,t("td",ptt,[t("a",ytt,[e("🀄️"),o(n)]),e(),t("a",xtt,[e("🔗"),o(n)])])]),t("tr",null,[btt,ktt,vtt,t("td",wtt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Itt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ztt]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[jtt]),_:1}),e(),Ott]),qtt,t("td",Ltt,[t("a",Ctt,[e("🀄️"),o(n)]),e(),t("a",Ntt,[e("🔗"),o(n)])])]),t("tr",null,[Ptt,Ktt,Vtt,t("td",Btt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Ttt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ett]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[Utt]),_:1}),e(),Att]),Dtt,t("td",Wtt,[t("a",Stt,[e("🀄️"),o(n)]),e(),t("a",Ytt,[e("🔗"),o(n)])])]),t("tr",null,[Ftt,Htt,Jtt,t("td",Qtt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Rtt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ztt]),_:1})]),Gtt,t("td",Mtt,[t("a",Xtt,[e("🀄️"),o(n)]),e(),t("a",$tt,[e("🔗"),o(n)])])]),t("tr",null,[tet,eet,oet,t("td",set,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[net]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[det]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[ret]),_:1})]),_et,t("td",cet,[t("a",aet,[e("🀄️"),o(n)]),e(),t("a",iet,[e("🔗"),o(n)])])]),t("tr",null,[het,fet,get,t("td",uet,[o(l,{to:"/tag/tree.html"},{default:s(()=>[met]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[pet]),_:1})]),yet,t("td",xet,[t("a",bet,[e("🀄️"),o(n)]),e(),t("a",ket,[e("🔗"),o(n)])])]),t("tr",null,[vet,wet,t("td",Iet,[o(l,{to:"/problem/3319.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",zet,[o(l,{to:"/tag/tree.html"},{default:s(()=>[jet]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Oet]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[qet]),_:1}),e(),Let]),Cet,t("td",Net,[t("a",Pet,[e("🀄️"),o(n)]),e(),t("a",Ket,[e("🔗"),o(n)])])]),t("tr",null,[Vet,Bet,Tet,t("td",Eet,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Uet]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Aet]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[Det]),_:1}),e(),Wet]),Set,t("td",Yet,[t("a",Fet,[e("🀄️"),o(n)]),e(),t("a",Het,[e("🔗"),o(n)])])]),t("tr",null,[Jet,Qet,Ret,t("td",Zet,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Get]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Met]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[Xet]),_:1}),e(),$et]),tot,t("td",eot,[t("a",oot,[e("🀄️"),o(n)])])]),t("tr",null,[lot,sot,not,t("td",dot,[o(l,{to:"/tag/tree.html"},{default:s(()=>[rot]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[_ot]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[cot]),_:1}),e(),aot]),iot,t("td",hot,[t("a",fot,[e("🀄️"),o(n)])])]),t("tr",null,[got,uot,mot,t("td",pot,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[yot]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[xot]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[bot]),_:1}),e(),kot]),vot,t("td",wot,[t("a",Iot,[e("🀄️"),o(n)])])]),t("tr",null,[zot,jot,Oot,t("td",qot,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Lot]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Cot]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[Not]),_:1}),e(),Pot]),Kot,t("td",Vot,[t("a",Bot,[e("🀄️"),o(n)])])]),t("tr",null,[Tot,Eot,Uot,t("td",Aot,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Dot]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Wot]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Sot]),_:1}),e(),Yot]),Fot,t("td",Hot,[t("a",Jot,[e("🀄️"),o(n)])])]),t("tr",null,[Qot,Rot,Zot,t("td",Got,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Mot]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Xot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:s(()=>[$ot]),_:1}),e(),tlt]),elt,t("td",olt,[t("a",llt,[e("🀄️"),o(n)])])]),t("tr",null,[slt,nlt,dlt,t("td",rlt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[_lt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[clt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[alt]),_:1}),e(),ilt]),hlt,t("td",flt,[t("a",glt,[e("🀄️"),o(n)])])]),t("tr",null,[ult,mlt,plt,t("td",ylt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[xlt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[blt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[klt]),_:1}),e(),vlt]),wlt,t("td",Ilt,[t("a",zlt,[e("🀄️"),o(n)])])]),t("tr",null,[jlt,Olt,qlt,t("td",Llt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Clt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Nlt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Plt]),_:1}),e(),Klt]),Vlt,t("td",Blt,[t("a",Tlt,[e("🀄️"),o(n)])])]),t("tr",null,[Elt,Ult,Alt,t("td",Dlt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Wlt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Slt]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Ylt]),_:1}),e(),Flt]),Hlt,t("td",Jlt,[t("a",Qlt,[e("🀄️"),o(n)])])]),t("tr",null,[Rlt,Zlt,t("td",Glt,[o(l,{to:"/offer/jz_offer_13_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Mlt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Xlt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[$lt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[tst]),_:1})]),est,t("td",ost,[t("a",lst,[e("🀄️"),o(n)])])]),t("tr",null,[sst,nst,t("td",dst,[o(l,{to:"/offer/jz_offer_26_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",rst,[o(l,{to:"/tag/tree.html"},{default:s(()=>[_st]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[cst]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[ast]),_:1})]),ist,t("td",hst,[t("a",fst,[e("🀄️"),o(n)])])]),t("tr",null,[gst,ust,t("td",mst,[o(l,{to:"/offer/jz_offer_27_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",pst,[o(l,{to:"/tag/tree.html"},{default:s(()=>[yst]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xst]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[bst]),_:1}),e(),kst]),vst,t("td",wst,[t("a",Ist,[e("🀄️"),o(n)])])]),t("tr",null,[zst,jst,t("td",Ost,[o(l,{to:"/offer/jz_offer_28_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",qst,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Lst]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Cst]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Nst]),_:1}),e(),Pst]),Kst,t("td",Vst,[t("a",Bst,[e("🀄️"),o(n)])])]),t("tr",null,[Tst,Est,t("td",Ust,[o(l,{to:"/offer/jz_offer_34_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Ast,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Dst]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Wst]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:s(()=>[Sst]),_:1}),e(),Yst]),Fst,t("td",Hst,[t("a",Jst,[e("🀄️"),o(n)])])]),t("tr",null,[Qst,Rst,t("td",Zst,[o(l,{to:"/offer/jz_offer_36_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Gst,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Mst]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[Xst]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[$st]),_:1}),e(),tnt]),ent,t("td",ont,[t("a",lnt,[e("🀄️"),o(n)])])]),t("tr",null,[snt,nnt,t("td",dnt,[o(l,{to:"/offer/jz_offer_37_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",rnt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[_nt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[cnt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ant]),_:1}),e(),int]),hnt,t("td",fnt,[t("a",gnt,[e("🀄️"),o(n)])])]),t("tr",null,[unt,mnt,t("td",pnt,[o(l,{to:"/offer/jz_offer_54_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",ynt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[xnt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[bnt]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[knt]),_:1}),e(),vnt]),wnt,t("td",Int,[t("a",znt,[e("🀄️"),o(n)])])]),t("tr",null,[jnt,Ont,t("td",qnt,[o(l,{to:"/offer/jz_offer_55_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Lnt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Cnt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Nnt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Pnt]),_:1}),e(),Knt]),Vnt,t("td",Bnt,[t("a",Tnt,[e("🀄️"),o(n)])])]),t("tr",null,[Ent,Unt,t("td",Ant,[o(l,{to:"/offer/jz_offer_55_2.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Dnt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Wnt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Snt]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Ynt]),_:1})]),Fnt,t("td",Hnt,[t("a",Jnt,[e("🀄️"),o(n)])])]),t("tr",null,[Qnt,Rnt,t("td",Znt,[o(l,{to:"/offer/jz_offer_68_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Gnt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Mnt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Xnt]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[$nt]),_:1}),e(),tdt]),edt,t("td",odt,[t("a",ldt,[e("🀄️"),o(n)])])]),t("tr",null,[sdt,ndt,t("td",ddt,[o(l,{to:"/offer/jz_offer_68_2.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",rdt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[_dt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[cdt]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[adt]),_:1})]),idt,t("td",hdt,[t("a",fdt,[e("🀄️"),o(n)])])]),t("tr",null,[gdt,udt,t("td",mdt,[o(l,{to:"/offer2/jz_offer_II_105.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",pdt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ydt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[xdt]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[bdt]),_:1}),e(),kdt]),vdt,t("td",wdt,[t("a",Idt,[e("🀄️"),o(n)])])]),t("tr",null,[zdt,jdt,Odt,t("td",qdt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ldt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Cdt]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Ndt]),_:1}),e(),Pdt]),Kdt,t("td",Vdt,[t("a",Bdt,[e("🀄️"),o(n)])])]),t("tr",null,[Tdt,Edt,Udt,t("td",Adt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ddt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Wdt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[Sdt]),_:1}),e(),Ydt]),Fdt,t("td",Hdt,[t("a",Jdt,[e("🀄️"),o(n)])])]),t("tr",null,[Qdt,Rdt,t("td",Zdt,[o(l,{to:"/offer2/jz_offer_II_111.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Gdt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Mdt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Xdt]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[$dt]),_:1}),e(),trt]),ert,t("td",ort,[t("a",lrt,[e("🀄️"),o(n)])])]),t("tr",null,[srt,nrt,drt,t("td",rrt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[_rt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[crt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[art]),_:1}),e(),irt]),hrt,t("td",frt,[t("a",grt,[e("🀄️"),o(n)])])]),t("tr",null,[urt,mrt,t("td",prt,[o(l,{to:"/offer2/jz_offer_II_113.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",yrt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xrt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[brt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[krt]),_:1}),e(),vrt]),wrt,t("td",Irt,[t("a",zrt,[e("🀄️"),o(n)])])]),t("tr",null,[jrt,Ort,qrt,t("td",Lrt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Crt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Nrt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[Prt]),_:1}),e(),Krt]),Vrt,t("td",Brt,[t("a",Trt,[e("🀄️"),o(n)])])]),t("tr",null,[Ert,Urt,Art,t("td",Drt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Wrt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Srt]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Yrt]),_:1}),e(),Frt]),Hrt,t("td",Jrt,[t("a",Qrt,[e("🀄️"),o(n)])])]),t("tr",null,[Rrt,Zrt,Grt,t("td",Mrt,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Xrt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[$rt]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[t_t]),_:1}),e(),e_t]),o_t,t("td",l_t,[t("a",s_t,[e("🀄️"),o(n)])])]),t("tr",null,[n_t,d_t,r_t,t("td",__t,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[c_t]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[a_t]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[i_t]),_:1}),e(),h_t]),f_t,t("td",g_t,[t("a",u_t,[e("🀄️"),o(n)])])]),t("tr",null,[m_t,p_t,t("td",y_t,[o(l,{to:"/offer2/jz_offer_II_028.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",x_t,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[b_t]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:s(()=>[k_t]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:s(()=>[v_t]),_:1})]),w_t,t("td",I_t,[t("a",z_t,[e("🀄️"),o(n)])])]),t("tr",null,[j_t,O_t,q_t,t("td",L_t,[o(l,{to:"/tag/tree.html"},{default:s(()=>[C_t]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[N_t]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[P_t]),_:1}),e(),K_t]),V_t,t("td",B_t,[t("a",T_t,[e("🀄️"),o(n)])])]),t("tr",null,[E_t,U_t,A_t,t("td",D_t,[o(l,{to:"/tag/tree.html"},{default:s(()=>[W_t]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[S_t]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Y_t]),_:1}),e(),F_t]),H_t,t("td",J_t,[t("a",Q_t,[e("🀄️"),o(n)])])]),t("tr",null,[R_t,Z_t,t("td",G_t,[o(l,{to:"/offer2/jz_offer_II_046.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",M_t,[o(l,{to:"/tag/tree.html"},{default:s(()=>[X_t]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[$_t]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[tct]),_:1}),e(),ect]),oct,t("td",lct,[t("a",sct,[e("🀄️"),o(n)])])]),t("tr",null,[nct,dct,rct,t("td",_ct,[o(l,{to:"/tag/tree.html"},{default:s(()=>[cct]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[act]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[ict]),_:1})]),hct,t("td",fct,[t("a",gct,[e("🀄️"),o(n)])])]),t("tr",null,[uct,mct,t("td",pct,[o(l,{to:"/offer2/jz_offer_II_048.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",yct,[o(l,{to:"/tag/tree.html"},{default:s(()=>[xct]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[bct]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[kct]),_:1}),e(),vct]),wct,t("td",Ict,[t("a",zct,[e("🀄️"),o(n)])])]),t("tr",null,[jct,Oct,t("td",qct,[o(l,{to:"/offer2/jz_offer_II_049.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Lct,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Cct]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Nct]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Pct]),_:1})]),Kct,t("td",Vct,[t("a",Bct,[e("🀄️"),o(n)])])]),t("tr",null,[Tct,Ect,t("td",Uct,[o(l,{to:"/offer2/jz_offer_II_050.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Act,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Dct]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Wct]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Sct]),_:1})]),Yct,t("td",Fct,[t("a",Hct,[e("🀄️"),o(n)])])]),t("tr",null,[Jct,Qct,t("td",Rct,[o(l,{to:"/offer2/jz_offer_II_051.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Zct,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Gct]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Mct]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[Xct]),_:1}),e(),$ct]),tat,t("td",eat,[t("a",oat,[e("🀄️"),o(n)])])]),t("tr",null,[lat,sat,nat,t("td",dat,[o(l,{to:"/tag/stack.html"},{default:s(()=>[rat]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[_at]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[cat]),_:1}),e(),aat]),iat,t("td",hat,[t("a",fat,[e("🀄️"),o(n)])])]),t("tr",null,[gat,uat,mat,t("td",pat,[o(l,{to:"/tag/tree.html"},{default:s(()=>[yat]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xat]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[bat]),_:1}),e(),kat]),vat,t("td",wat,[t("a",Iat,[e("🀄️"),o(n)])])]),t("tr",null,[zat,jat,Oat,t("td",qat,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Lat]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Cat]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Nat]),_:1}),e(),Pat]),Kat,t("td",Vat,[t("a",Bat,[e("🀄️"),o(n)])])]),t("tr",null,[Tat,Eat,Uat,t("td",Aat,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Dat]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[Wat]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[Sat]),_:1}),e(),Yat]),Fat,t("td",Hat,[t("a",Jat,[e("🀄️"),o(n)])])]),t("tr",null,[Qat,Rat,t("td",Zat,[o(l,{to:"/offer2/jz_offer_II_086.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Gat,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Mat]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Xat]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[$at]),_:1}),e(),tit]),eit,t("td",oit,[t("a",lit,[e("🀄️"),o(n)])])]),t("tr",null,[sit,nit,dit,t("td",rit,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[_it]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[cit]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[ait]),_:1})]),iit,t("td",hit,[t("a",fit,[e("🀄️"),o(n)])])]),t("tr",null,[git,uit,mit,t("td",pit,[o(l,{to:"/tag/tree.html"},{default:s(()=>[yit]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xit]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[bit]),_:1})]),kit,t("td",vit,[t("a",wit,[e("🀄️"),o(n)])])]),t("tr",null,[Iit,zit,jit,t("td",Oit,[o(l,{to:"/tag/tree.html"},{default:s(()=>[qit]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Lit]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Cit]),_:1}),e(),Nit]),Pit,t("td",Kit,[t("a",Vit,[e("🀄️"),o(n)])])]),t("tr",null,[Bit,Tit,Eit,t("td",Uit,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Ait]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Dit]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Wit]),_:1}),e(),Sit]),Yit,t("td",Fit,[t("a",Hit,[e("🀄️"),o(n)])])]),t("tr",null,[Jit,Qit,Rit,t("td",Zit,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Git]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Mit]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Xit]),_:1})]),$it,t("td",tht,[t("a",eht,[e("🀄️"),o(n)])])]),t("tr",null,[oht,lht,sht,t("td",nht,[o(l,{to:"/tag/tree.html"},{default:s(()=>[dht]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[rht]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[_ht]),_:1}),e(),cht]),aht,t("td",iht,[t("a",hht,[e("🀄️"),o(n)])])]),t("tr",null,[fht,ght,uht,t("td",mht,[o(l,{to:"/tag/tree.html"},{default:s(()=>[pht]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[yht]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[xht]),_:1})]),bht,t("td",kht,[t("a",vht,[e("🀄️"),o(n)])])]),t("tr",null,[wht,Iht,zht,t("td",jht,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Oht]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[qht]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[Lht]),_:1}),e(),Cht]),Nht,t("td",Pht,[t("a",Kht,[e("🀄️"),o(n)])])]),t("tr",null,[Vht,Bht,Tht,t("td",Eht,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Uht]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Aht]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Dht]),_:1}),e(),Wht]),Sht,t("td",Yht,[t("a",Fht,[e("🀄️"),o(n)])])]),t("tr",null,[Hht,Jht,Qht,t("td",Rht,[o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Zht]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Ght]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Mht]),_:1}),e(),Xht]),$ht,t("td",t1t,[t("a",e1t,[e("🀄️"),o(n)])])]),t("tr",null,[o1t,l1t,s1t,t("td",n1t,[o(l,{to:"/tag/stack.html"},{default:s(()=>[d1t]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[r1t]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[_1t]),_:1}),e(),c1t]),a1t,t("td",i1t,[t("a",h1t,[e("🀄️"),o(n)])])])])])])}const p1t=r(i,[["render",f1t],["__file","depth-first-search.html.vue"]]);export{p1t as default};
