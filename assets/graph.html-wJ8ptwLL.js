import{_ as a,r as _,o as c,c as i,a as t,b as e,w as o,d as l,f as r}from"./app-Fucr7yuT.js";const h={},f=t("h1",{id:"图",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#图","aria-hidden":"true"},"#"),l(" 图")],-1),u=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),x=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),H=t("code",null,"队列",-1),M=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),v=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),P=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),E=t("span",{class:"blue"},"图",-1),O=t("code",null,"有序集合",-1),j=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),D=t("code",null,"强连通分量",-1),J=t("code",null,"欧拉回路",-1),K=t("code",null,"双连通分量",-1),A=t("code",null,"并查集",-1),B=t("code",null,"字典树",-1),N=t("code",null,"线段树",-1),T=t("code",null,"树状数组",-1),F=t("code",null,"后缀数组",-1),W=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),R=t("code",null,"递归",-1),U=t("code",null,"分治",-1),X=t("code",null,"回溯",-1),Z=t("code",null,"贪心",-1),G=t("code",null,"动态规划",-1),S=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),xt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Ht=t("code",null,"组合数学",-1),Mt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),vt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Pt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),Ot=t("code",null,"多线程",-1),jt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Dt=t("td",{style:{"text-align":"center"}},"133",-1),Jt={style:{"text-align":"left"}},Kt={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},At={style:{"text-align":"center"}},Bt={style:{"text-align":"left"}},Nt=t("code",null,"深度优先搜索",-1),Tt=t("code",null,"广度优先搜索",-1),Ft=t("code",null,"图",-1),Wt=t("code",null,"1+",-1),Qt={style:{"text-align":"left"}},Rt=t("td",{style:{"text-align":"center"}},"207",-1),Ut={style:{"text-align":"left"}},Xt={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"center"}},Gt={style:{"text-align":"left"}},St=t("code",null,"深度优先搜索",-1),Yt=t("code",null,"广度优先搜索",-1),$t=t("code",null,"图",-1),te=t("code",null,"1+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"210",-1),oe={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},ne={style:{"text-align":"center"}},de={style:{"text-align":"left"}},_e=t("code",null,"深度优先搜索",-1),ae=t("code",null,"广度优先搜索",-1),ce=t("code",null,"图",-1),ie=t("code",null,"1+",-1),re={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"261",-1),fe={style:{"text-align":"left"}},ue={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},ge=t("td",{style:{"text-align":"center"}},null,-1),me={style:{"text-align":"left"}},ye=t("code",null,"深度优先搜索",-1),pe=t("code",null,"广度优先搜索",-1),xe=t("code",null,"并查集",-1),be=t("code",null,"1+",-1),ke={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"269",-1),Me={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),ve={style:{"text-align":"left"}},qe=t("code",null,"深度优先搜索",-1),Le=t("code",null,"广度优先搜索",-1),ze=t("code",null,"图",-1),Pe=t("code",null,"3+",-1),Ce={style:{"text-align":"left"}},Ee=t("td",{style:{"text-align":"center"}},"277",-1),Oe={style:{"text-align":"left"}},je={href:"https://leetcode.com/problems/find-the-celebrity",target:"_blank",rel:"noopener noreferrer"},Ve=t("td",{style:{"text-align":"center"}},null,-1),De={style:{"text-align":"left"}},Je=t("code",null,"图",-1),Ke=t("code",null,"双指针",-1),Ae=t("code",null,"交互",-1),Be={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"310",-1),Te={style:{"text-align":"left"}},Fe={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},We=t("td",{style:{"text-align":"center"}},null,-1),Qe={style:{"text-align":"left"}},Re=t("code",null,"深度优先搜索",-1),Ue=t("code",null,"广度优先搜索",-1),Xe=t("code",null,"图",-1),Ze=t("code",null,"1+",-1),Ge={style:{"text-align":"left"}},Se=t("td",{style:{"text-align":"center"}},"323",-1),Ye={style:{"text-align":"left"}},$e={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},tl=t("td",{style:{"text-align":"center"}},null,-1),el={style:{"text-align":"left"}},ll=t("code",null,"深度优先搜索",-1),ol=t("code",null,"广度优先搜索",-1),sl=t("code",null,"并查集",-1),nl=t("code",null,"1+",-1),dl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"329",-1),al={style:{"text-align":"left"}},cl={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},il=t("td",{style:{"text-align":"center"}},null,-1),rl={style:{"text-align":"left"}},hl=t("code",null,"深度优先搜索",-1),fl=t("code",null,"广度优先搜索",-1),ul=t("code",null,"图",-1),gl=t("code",null,"5+",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"332",-1),pl={style:{"text-align":"left"}},xl={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},bl=t("td",{style:{"text-align":"center"}},null,-1),kl={style:{"text-align":"left"}},Hl=t("code",null,"深度优先搜索",-1),Ml=t("code",null,"图",-1),Il=t("code",null,"欧拉回路",-1),wl={style:{"text-align":"left"}},vl=t("td",{style:{"text-align":"center"}},"399",-1),ql={style:{"text-align":"left"}},Ll={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},zl={style:{"text-align":"center"}},Pl={style:{"text-align":"left"}},Cl=t("code",null,"深度优先搜索",-1),El=t("code",null,"广度优先搜索",-1),Ol=t("code",null,"并查集",-1),jl=t("code",null,"4+",-1),Vl={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"444",-1),Jl={style:{"text-align":"left"}},Kl={href:"https://leetcode.com/problems/sequence-reconstruction",target:"_blank",rel:"noopener noreferrer"},Al=t("td",{style:{"text-align":"center"}},null,-1),Bl={style:{"text-align":"left"}},Nl=t("code",null,"图",-1),Tl=t("code",null,"拓扑排序",-1),Fl=t("code",null,"数组",-1),Wl={style:{"text-align":"left"}},Ql=t("td",{style:{"text-align":"center"}},"499",-1),Rl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},Xl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},Gl=t("code",null,"深度优先搜索",-1),Sl=t("code",null,"广度优先搜索",-1),Yl=t("code",null,"图",-1),$l=t("code",null,"5+",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"505",-1),lo={style:{"text-align":"left"}},oo={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),no={style:{"text-align":"left"}},_o=t("code",null,"深度优先搜索",-1),ao=t("code",null,"广度优先搜索",-1),co=t("code",null,"图",-1),io=t("code",null,"4+",-1),ro={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"547",-1),fo={style:{"text-align":"left"}},uo={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},go=t("td",{style:{"text-align":"center"}},null,-1),mo={style:{"text-align":"left"}},yo=t("code",null,"深度优先搜索",-1),po=t("code",null,"广度优先搜索",-1),xo=t("code",null,"并查集",-1),bo=t("code",null,"1+",-1),ko={style:{"text-align":"left"}},Ho=t("td",{style:{"text-align":"center"}},"631",-1),Mo={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/design-excel-sum-formula",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},null,-1),vo={style:{"text-align":"left"}},qo=t("code",null,"图",-1),Lo=t("code",null,"设计",-1),zo=t("code",null,"拓扑排序",-1),Po=t("code",null,"2+",-1),Co={style:{"text-align":"left"}},Eo=t("td",{style:{"text-align":"center"}},"684",-1),Oo={style:{"text-align":"left"}},jo={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},Vo=t("td",{style:{"text-align":"center"}},null,-1),Do={style:{"text-align":"left"}},Jo=t("code",null,"深度优先搜索",-1),Ko=t("code",null,"广度优先搜索",-1),Ao=t("code",null,"并查集",-1),Bo=t("code",null,"1+",-1),No={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"685",-1),Fo={style:{"text-align":"left"}},Wo={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},null,-1),Ro={style:{"text-align":"left"}},Uo=t("code",null,"深度优先搜索",-1),Xo=t("code",null,"广度优先搜索",-1),Zo=t("code",null,"并查集",-1),Go=t("code",null,"1+",-1),So={style:{"text-align":"left"}},Yo=t("td",{style:{"text-align":"center"}},"743",-1),$o={style:{"text-align":"left"}},ts={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},es=t("td",{style:{"text-align":"center"}},null,-1),ls={style:{"text-align":"left"}},os=t("code",null,"深度优先搜索",-1),ss=t("code",null,"广度优先搜索",-1),ns=t("code",null,"图",-1),ds=t("code",null,"2+",-1),_s={style:{"text-align":"left"}},as=t("td",{style:{"text-align":"center"}},"753",-1),cs={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},rs=t("td",{style:{"text-align":"center"}},null,-1),hs={style:{"text-align":"left"}},fs=t("code",null,"深度优先搜索",-1),us=t("code",null,"图",-1),gs=t("code",null,"欧拉回路",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"765",-1),ps={style:{"text-align":"left"}},xs={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},bs=t("td",{style:{"text-align":"center"}},null,-1),ks={style:{"text-align":"left"}},Hs=t("code",null,"贪心",-1),Ms=t("code",null,"深度优先搜索",-1),Is=t("code",null,"广度优先搜索",-1),ws=t("code",null,"2+",-1),vs={style:{"text-align":"left"}},qs=t("td",{style:{"text-align":"center"}},"785",-1),Ls={style:{"text-align":"left"}},zs={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},Ps=t("td",{style:{"text-align":"center"}},null,-1),Cs={style:{"text-align":"left"}},Es=t("code",null,"深度优先搜索",-1),Os=t("code",null,"广度优先搜索",-1),js=t("code",null,"并查集",-1),Vs=t("code",null,"1+",-1),Ds={style:{"text-align":"left"}},Js=t("td",{style:{"text-align":"center"}},"787",-1),Ks={style:{"text-align":"left"}},As={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Bs=t("td",{style:{"text-align":"center"}},null,-1),Ns={style:{"text-align":"left"}},Ts=t("code",null,"深度优先搜索",-1),Fs=t("code",null,"广度优先搜索",-1),Ws=t("code",null,"图",-1),Qs=t("code",null,"3+",-1),Rs={style:{"text-align":"left"}},Us=t("td",{style:{"text-align":"center"}},"797",-1),Xs={style:{"text-align":"left"}},Zs={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},Gs=t("td",{style:{"text-align":"center"}},null,-1),Ss={style:{"text-align":"left"}},Ys=t("code",null,"深度优先搜索",-1),$s=t("code",null,"广度优先搜索",-1),tn=t("code",null,"图",-1),en=t("code",null,"1+",-1),ln={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"802",-1),sn={style:{"text-align":"left"}},nn={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},null,-1),_n={style:{"text-align":"left"}},an=t("code",null,"深度优先搜索",-1),cn=t("code",null,"广度优先搜索",-1),rn=t("code",null,"图",-1),hn=t("code",null,"1+",-1),fn={style:{"text-align":"left"}},un=t("td",{style:{"text-align":"center"}},"834",-1),gn={style:{"text-align":"left"}},mn={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},yn=t("td",{style:{"text-align":"center"}},null,-1),pn={style:{"text-align":"left"}},xn=t("code",null,"树",-1),bn=t("code",null,"深度优先搜索",-1),kn=t("code",null,"图",-1),Hn=t("code",null,"1+",-1),Mn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"841",-1),wn={style:{"text-align":"left"}},vn={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},null,-1),Ln={style:{"text-align":"left"}},zn=t("code",null,"深度优先搜索",-1),Pn=t("code",null,"广度优先搜索",-1),Cn=t("code",null,"图",-1),En={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"center"}},"847",-1),jn={style:{"text-align":"left"}},Vn={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},Dn=t("td",{style:{"text-align":"center"}},null,-1),Jn={style:{"text-align":"left"}},Kn=t("code",null,"位运算",-1),An=t("code",null,"广度优先搜索",-1),Bn=t("code",null,"图",-1),Nn=t("code",null,"2+",-1),Tn={style:{"text-align":"left"}},Fn=t("td",{style:{"text-align":"center"}},"851",-1),Wn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},null,-1),Un={style:{"text-align":"left"}},Xn=t("code",null,"深度优先搜索",-1),Zn=t("code",null,"图",-1),Gn=t("code",null,"拓扑排序",-1),Sn=t("code",null,"1+",-1),Yn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"882",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph",target:"_blank",rel:"noopener noreferrer"},ld=t("td",{style:{"text-align":"center"}},null,-1),od={style:{"text-align":"left"}},sd=t("code",null,"图",-1),nd=t("code",null,"最短路",-1),dd=t("code",null,"堆（优先队列）",-1),_d={style:{"text-align":"left"}},ad=t("td",{style:{"text-align":"center"}},"886",-1),cd={style:{"text-align":"left"}},id={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},rd=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},fd=t("code",null,"深度优先搜索",-1),ud=t("code",null,"广度优先搜索",-1),gd=t("code",null,"并查集",-1),md=t("code",null,"1+",-1),yd={style:{"text-align":"left"}},pd=t("td",{style:{"text-align":"center"}},"913",-1),xd={style:{"text-align":"left"}},bd={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},null,-1),Hd={style:{"text-align":"left"}},Md=t("code",null,"图",-1),Id=t("code",null,"拓扑排序",-1),wd=t("code",null,"记忆化搜索",-1),vd=t("code",null,"3+",-1),qd={style:{"text-align":"left"}},Ld=t("td",{style:{"text-align":"center"}},"924",-1),zd={style:{"text-align":"left"}},Pd={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},Cd=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},Od=t("code",null,"深度优先搜索",-1),jd=t("code",null,"广度优先搜索",-1),Vd=t("code",null,"并查集",-1),Dd=t("code",null,"3+",-1),Jd={style:{"text-align":"left"}},Kd=t("td",{style:{"text-align":"center"}},"928",-1),Ad={style:{"text-align":"left"}},Bd={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},Nd=t("td",{style:{"text-align":"center"}},null,-1),Td={style:{"text-align":"left"}},Fd=t("code",null,"深度优先搜索",-1),Wd=t("code",null,"广度优先搜索",-1),Qd=t("code",null,"并查集",-1),Rd=t("code",null,"3+",-1),Ud={style:{"text-align":"left"}},Xd=t("td",{style:{"text-align":"center"}},"947",-1),Zd={style:{"text-align":"left"}},Gd={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},Sd=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},$d=t("code",null,"深度优先搜索",-1),t_=t("code",null,"并查集",-1),e_=t("code",null,"图",-1),l_=t("code",null,"1+",-1),o_={style:{"text-align":"left"}},s_=t("td",{style:{"text-align":"center"}},"990",-1),n_={style:{"text-align":"left"}},d_={href:"https://leetcode.com/problems/satisfiability-of-equality-equations",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},null,-1),a_={style:{"text-align":"left"}},c_=t("code",null,"并查集",-1),i_=t("code",null,"图",-1),r_=t("code",null,"数组",-1),h_=t("code",null,"1+",-1),f_={style:{"text-align":"left"}},u_=t("td",{style:{"text-align":"center"}},"997",-1),g_={style:{"text-align":"left"}},m_={href:"https://leetcode.com/problems/find-the-town-judge",target:"_blank",rel:"noopener noreferrer"},y_=t("td",{style:{"text-align":"center"}},null,-1),p_={style:{"text-align":"left"}},x_=t("code",null,"图",-1),b_=t("code",null,"数组",-1),k_=t("code",null,"哈希表",-1),H_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"1042",-1),I_={style:{"text-align":"left"}},w_={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},v_=t("td",{style:{"text-align":"center"}},null,-1),q_={style:{"text-align":"left"}},L_=t("code",null,"深度优先搜索",-1),z_=t("code",null,"广度优先搜索",-1),P_=t("code",null,"图",-1),C_={style:{"text-align":"left"}},E_=t("td",{style:{"text-align":"center"}},"1059",-1),O_={style:{"text-align":"left"}},j_={href:"https://leetcode.com/problems/all-paths-from-source-lead-to-destination",target:"_blank",rel:"noopener noreferrer"},V_=t("td",{style:{"text-align":"center"}},null,-1),D_={style:{"text-align":"left"}},J_=t("code",null,"图",-1),K_=t("code",null,"拓扑排序",-1),A_={style:{"text-align":"left"}},B_=t("td",{style:{"text-align":"center"}},"1129",-1),N_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/shortest-path-with-alternating-colors",target:"_blank",rel:"noopener noreferrer"},F_=t("td",{style:{"text-align":"center"}},null,-1),W_={style:{"text-align":"left"}},Q_=t("code",null,"广度优先搜索",-1),R_=t("code",null,"图",-1),U_={style:{"text-align":"left"}},X_=t("td",{style:{"text-align":"center"}},"1135",-1),Z_={style:{"text-align":"left"}},G_={href:"https://leetcode.com/problems/connecting-cities-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},S_=t("td",{style:{"text-align":"center"}},null,-1),Y_={style:{"text-align":"left"}},$_=t("code",null,"并查集",-1),ta=t("code",null,"图",-1),ea=t("code",null,"最小生成树",-1),la=t("code",null,"1+",-1),oa={style:{"text-align":"left"}},sa=t("td",{style:{"text-align":"center"}},"1136",-1),na={style:{"text-align":"left"}},da={href:"https://leetcode.com/problems/parallel-courses",target:"_blank",rel:"noopener noreferrer"},_a=t("td",{style:{"text-align":"center"}},null,-1),aa={style:{"text-align":"left"}},ca=t("code",null,"图",-1),ia=t("code",null,"拓扑排序",-1),ra={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"1168",-1),fa={style:{"text-align":"left"}},ua={href:"https://leetcode.com/problems/optimize-water-distribution-in-a-village",target:"_blank",rel:"noopener noreferrer"},ga=t("td",{style:{"text-align":"center"}},null,-1),ma={style:{"text-align":"left"}},ya=t("code",null,"并查集",-1),pa=t("code",null,"图",-1),xa=t("code",null,"最小生成树",-1),ba=t("code",null,"1+",-1),ka={style:{"text-align":"left"}},Ha=t("td",{style:{"text-align":"center"}},"1192",-1),Ma={style:{"text-align":"left"}},Ia={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},wa=t("td",{style:{"text-align":"center"}},null,-1),va={style:{"text-align":"left"}},qa=t("code",null,"深度优先搜索",-1),La=t("code",null,"图",-1),za=t("code",null,"双连通分量",-1),Pa={style:{"text-align":"left"}},Ca=t("td",{style:{"text-align":"center"}},"1203",-1),Ea={style:{"text-align":"left"}},Oa={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},ja=t("td",{style:{"text-align":"center"}},null,-1),Va={style:{"text-align":"left"}},Da=t("code",null,"深度优先搜索",-1),Ja=t("code",null,"广度优先搜索",-1),Ka=t("code",null,"图",-1),Aa=t("code",null,"1+",-1),Ba={style:{"text-align":"left"}},Na=t("td",{style:{"text-align":"center"}},"1245",-1),Ta={style:{"text-align":"left"}},Fa={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},null,-1),Qa={style:{"text-align":"left"}},Ra=t("code",null,"树",-1),Ua=t("code",null,"深度优先搜索",-1),Xa=t("code",null,"广度优先搜索",-1),Za=t("code",null,"2+",-1),Ga={style:{"text-align":"left"}},Sa=t("td",{style:{"text-align":"center"}},"1298",-1),Ya={style:{"text-align":"left"}},$a={href:"https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes",target:"_blank",rel:"noopener noreferrer"},tc=t("td",{style:{"text-align":"center"}},null,-1),ec={style:{"text-align":"left"}},lc=t("code",null,"广度优先搜索",-1),oc=t("code",null,"图",-1),sc=t("code",null,"数组",-1),nc={style:{"text-align":"left"}},dc=t("td",{style:{"text-align":"center"}},"1311",-1),_c={style:{"text-align":"left"}},ac={href:"https://leetcode.com/problems/get-watched-videos-by-your-friends",target:"_blank",rel:"noopener noreferrer"},cc=t("td",{style:{"text-align":"center"}},null,-1),ic={style:{"text-align":"left"}},rc=t("code",null,"广度优先搜索",-1),hc=t("code",null,"图",-1),fc=t("code",null,"数组",-1),uc=t("code",null,"2+",-1),gc={style:{"text-align":"left"}},mc=t("td",{style:{"text-align":"center"}},"1319",-1),yc={style:{"text-align":"left"}},pc={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},xc=t("td",{style:{"text-align":"center"}},null,-1),bc={style:{"text-align":"left"}},kc=t("code",null,"深度优先搜索",-1),Hc=t("code",null,"广度优先搜索",-1),Mc=t("code",null,"并查集",-1),Ic=t("code",null,"1+",-1),wc={style:{"text-align":"left"}},vc=t("td",{style:{"text-align":"center"}},"1334",-1),qc={style:{"text-align":"left"}},Lc={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},zc=t("td",{style:{"text-align":"center"}},null,-1),Pc={style:{"text-align":"left"}},Cc=t("code",null,"图",-1),Ec=t("code",null,"动态规划",-1),Oc=t("code",null,"最短路",-1),jc={style:{"text-align":"left"}},Vc=t("td",{style:{"text-align":"center"}},"1361",-1),Dc={style:{"text-align":"left"}},Jc={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},Kc=t("td",{style:{"text-align":"center"}},null,-1),Ac={style:{"text-align":"left"}},Bc=t("code",null,"树",-1),Nc=t("code",null,"深度优先搜索",-1),Tc=t("code",null,"广度优先搜索",-1),Fc=t("code",null,"3+",-1),Wc={style:{"text-align":"left"}},Qc=t("td",{style:{"text-align":"center"}},"1368",-1),Rc={style:{"text-align":"left"}},Uc={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Xc=t("td",{style:{"text-align":"center"}},null,-1),Zc={style:{"text-align":"left"}},Gc=t("code",null,"广度优先搜索",-1),Sc=t("code",null,"图",-1),Yc=t("code",null,"数组",-1),$c=t("code",null,"3+",-1),ti={style:{"text-align":"left"}},ei=t("td",{style:{"text-align":"center"}},"1377",-1),li={style:{"text-align":"left"}},oi={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},si=t("td",{style:{"text-align":"center"}},null,-1),ni={style:{"text-align":"left"}},di=t("code",null,"树",-1),_i=t("code",null,"深度优先搜索",-1),ai=t("code",null,"广度优先搜索",-1),ci=t("code",null,"1+",-1),ii={style:{"text-align":"left"}},ri=t("td",{style:{"text-align":"center"}},"1462",-1),hi={style:{"text-align":"left"}},fi={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},ui=t("td",{style:{"text-align":"center"}},null,-1),gi={style:{"text-align":"left"}},mi=t("code",null,"深度优先搜索",-1),yi=t("code",null,"广度优先搜索",-1),pi=t("code",null,"图",-1),xi=t("code",null,"1+",-1),bi={style:{"text-align":"left"}},ki=t("td",{style:{"text-align":"center"}},"1466",-1),Hi={style:{"text-align":"left"}},Mi={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},Ii=t("td",{style:{"text-align":"center"}},null,-1),wi={style:{"text-align":"left"}},vi=t("code",null,"深度优先搜索",-1),qi=t("code",null,"广度优先搜索",-1),Li=t("code",null,"图",-1),zi={style:{"text-align":"left"}},Pi=t("td",{style:{"text-align":"center"}},"1489",-1),Ci={style:{"text-align":"left"}},Ei={href:"https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",target:"_blank",rel:"noopener noreferrer"},Oi=t("td",{style:{"text-align":"center"}},null,-1),ji={style:{"text-align":"left"}},Vi=t("code",null,"并查集",-1),Di=t("code",null,"图",-1),Ji=t("code",null,"最小生成树",-1),Ki=t("code",null,"2+",-1),Ai={style:{"text-align":"left"}},Bi=t("td",{style:{"text-align":"center"}},"1494",-1),Ni={style:{"text-align":"left"}},Ti={href:"https://leetcode.com/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},Fi=t("td",{style:{"text-align":"center"}},null,-1),Wi={style:{"text-align":"left"}},Qi=t("code",null,"位运算",-1),Ri=t("code",null,"图",-1),Ui=t("code",null,"动态规划",-1),Xi=t("code",null,"1+",-1),Zi={style:{"text-align":"left"}},Gi=t("td",{style:{"text-align":"center"}},"1514",-1),Si={style:{"text-align":"left"}},Yi={href:"https://leetcode.com/problems/path-with-maximum-probability",target:"_blank",rel:"noopener noreferrer"},$i=t("td",{style:{"text-align":"center"}},null,-1),tr={style:{"text-align":"left"}},er=t("code",null,"图",-1),lr=t("code",null,"数组",-1),or=t("code",null,"最短路",-1),sr=t("code",null,"1+",-1),nr={style:{"text-align":"left"}},dr=t("td",{style:{"text-align":"center"}},"1548",-1),_r={style:{"text-align":"left"}},ar={href:"https://leetcode.com/problems/the-most-similar-path-in-a-graph",target:"_blank",rel:"noopener noreferrer"},cr=t("td",{style:{"text-align":"center"}},null,-1),ir={style:{"text-align":"left"}},rr=t("code",null,"图",-1),hr=t("code",null,"动态规划",-1),fr={style:{"text-align":"left"}},ur=t("td",{style:{"text-align":"center"}},"1557",-1),gr={style:{"text-align":"left"}},mr={href:"https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes",target:"_blank",rel:"noopener noreferrer"},yr=t("td",{style:{"text-align":"center"}},null,-1),pr={style:{"text-align":"left"}},xr=t("code",null,"图",-1),br={style:{"text-align":"left"}},kr=t("td",{style:{"text-align":"center"}},"1579",-1),Hr={style:{"text-align":"left"}},Mr={href:"https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable",target:"_blank",rel:"noopener noreferrer"},Ir=t("td",{style:{"text-align":"center"}},null,-1),wr={style:{"text-align":"left"}},vr=t("code",null,"并查集",-1),qr=t("code",null,"图",-1),Lr={style:{"text-align":"left"}},zr=t("td",{style:{"text-align":"center"}},"1584",-1),Pr={style:{"text-align":"left"}},Cr={href:"https://leetcode.com/problems/min-cost-to-connect-all-points",target:"_blank",rel:"noopener noreferrer"},Er=t("td",{style:{"text-align":"center"}},null,-1),Or={style:{"text-align":"left"}},jr=t("code",null,"并查集",-1),Vr=t("code",null,"图",-1),Dr=t("code",null,"数组",-1),Jr=t("code",null,"1+",-1),Kr={style:{"text-align":"left"}},Ar=t("td",{style:{"text-align":"center"}},"1591",-1),Br={style:{"text-align":"left"}},Nr={href:"https://leetcode.com/problems/strange-printer-ii",target:"_blank",rel:"noopener noreferrer"},Tr=t("td",{style:{"text-align":"center"}},null,-1),Fr={style:{"text-align":"left"}},Wr=t("code",null,"图",-1),Qr=t("code",null,"拓扑排序",-1),Rr=t("code",null,"数组",-1),Ur=t("code",null,"1+",-1),Xr={style:{"text-align":"left"}},Zr=t("td",{style:{"text-align":"center"}},"1615",-1),Gr={style:{"text-align":"left"}},Sr={href:"https://leetcode.com/problems/maximal-network-rank",target:"_blank",rel:"noopener noreferrer"},Yr=t("td",{style:{"text-align":"center"}},null,-1),$r={style:{"text-align":"left"}},th=t("code",null,"图",-1),eh={style:{"text-align":"left"}},lh=t("td",{style:{"text-align":"center"}},"1632",-1),oh={style:{"text-align":"left"}},sh={href:"https://leetcode.com/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},nh=t("td",{style:{"text-align":"center"}},null,-1),dh={style:{"text-align":"left"}},_h=t("code",null,"并查集",-1),ah=t("code",null,"图",-1),ch=t("code",null,"拓扑排序",-1),ih=t("code",null,"3+",-1),rh={style:{"text-align":"left"}},hh=t("td",{style:{"text-align":"center"}},"1697",-1),fh={style:{"text-align":"left"}},uh={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths",target:"_blank",rel:"noopener noreferrer"},gh=t("td",{style:{"text-align":"center"}},null,-1),mh={style:{"text-align":"left"}},yh=t("code",null,"并查集",-1),ph=t("code",null,"图",-1),xh=t("code",null,"数组",-1),bh=t("code",null,"2+",-1),kh={style:{"text-align":"left"}},Hh=t("td",{style:{"text-align":"center"}},"1719",-1),Mh={style:{"text-align":"left"}},Ih={href:"https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree",target:"_blank",rel:"noopener noreferrer"},wh=t("td",{style:{"text-align":"center"}},null,-1),vh={style:{"text-align":"left"}},qh=t("code",null,"树",-1),Lh=t("code",null,"图",-1),zh={style:{"text-align":"left"}},Ph=t("td",{style:{"text-align":"center"}},"1724",-1),Ch={style:{"text-align":"left"}},Eh={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths-ii",target:"_blank",rel:"noopener noreferrer"},Oh=t("td",{style:{"text-align":"center"}},null,-1),jh={style:{"text-align":"left"}},Vh=t("code",null,"并查集",-1),Dh=t("code",null,"图",-1),Jh=t("code",null,"最小生成树",-1),Kh={style:{"text-align":"left"}},Ah=t("td",{style:{"text-align":"center"}},"1728",-1),Bh={style:{"text-align":"left"}},Nh={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},Th=t("td",{style:{"text-align":"center"}},null,-1),Fh={style:{"text-align":"left"}},Wh=t("code",null,"图",-1),Qh=t("code",null,"拓扑排序",-1),Rh=t("code",null,"记忆化搜索",-1),Uh=t("code",null,"5+",-1),Xh={style:{"text-align":"left"}},Zh=t("td",{style:{"text-align":"center"}},"1761",-1),Gh={style:{"text-align":"left"}},Sh={href:"https://leetcode.com/problems/minimum-degree-of-a-connected-trio-in-a-graph",target:"_blank",rel:"noopener noreferrer"},Yh=t("td",{style:{"text-align":"center"}},null,-1),$h={style:{"text-align":"left"}},t1=t("code",null,"图",-1),e1={style:{"text-align":"left"}},l1=t("td",{style:{"text-align":"center"}},"1778",-1),o1={style:{"text-align":"left"}},s1={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},n1=t("td",{style:{"text-align":"center"}},null,-1),d1={style:{"text-align":"left"}},_1=t("code",null,"深度优先搜索",-1),a1=t("code",null,"广度优先搜索",-1),c1=t("code",null,"图",-1),i1=t("code",null,"1+",-1),r1={style:{"text-align":"left"}},h1=t("td",{style:{"text-align":"center"}},"1782",-1),f1={style:{"text-align":"left"}},u1={href:"https://leetcode.com/problems/count-pairs-of-nodes",target:"_blank",rel:"noopener noreferrer"},g1=t("td",{style:{"text-align":"center"}},null,-1),m1={style:{"text-align":"left"}},y1=t("code",null,"图",-1),p1=t("code",null,"数组",-1),x1=t("code",null,"双指针",-1),b1=t("code",null,"2+",-1),k1={style:{"text-align":"left"}},H1=t("td",{style:{"text-align":"center"}},"1786",-1),M1={style:{"text-align":"left"}},I1={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},w1=t("td",{style:{"text-align":"center"}},null,-1),v1={style:{"text-align":"left"}},q1=t("code",null,"图",-1),L1=t("code",null,"拓扑排序",-1),z1=t("code",null,"动态规划",-1),P1=t("code",null,"2+",-1),C1={style:{"text-align":"left"}},E1=t("td",{style:{"text-align":"center"}},"1791",-1),O1={style:{"text-align":"left"}},j1={href:"https://leetcode.com/problems/find-center-of-star-graph",target:"_blank",rel:"noopener noreferrer"},V1=t("td",{style:{"text-align":"center"}},null,-1),D1={style:{"text-align":"left"}},J1=t("code",null,"图",-1),K1={style:{"text-align":"left"}},A1=t("td",{style:{"text-align":"center"}},"1810",-1),B1={style:{"text-align":"left"}},N1={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},T1=t("td",{style:{"text-align":"center"}},null,-1),F1={style:{"text-align":"left"}},W1=t("code",null,"深度优先搜索",-1),Q1=t("code",null,"广度优先搜索",-1),R1=t("code",null,"图",-1),U1=t("code",null,"2+",-1),X1={style:{"text-align":"left"}},Z1=t("td",{style:{"text-align":"center"}},"1820",-1),G1={style:{"text-align":"left"}},S1={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},Y1=t("td",{style:{"text-align":"center"}},null,-1),$1={style:{"text-align":"left"}},tf=t("code",null,"深度优先搜索",-1),ef=t("code",null,"图",-1),lf=t("code",null,"数组",-1),of=t("code",null,"1+",-1),sf={style:{"text-align":"left"}},nf=t("td",{style:{"text-align":"center"}},"1857",-1),df={style:{"text-align":"left"}},_f={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},af=t("td",{style:{"text-align":"center"}},null,-1),cf={style:{"text-align":"left"}},rf=t("code",null,"图",-1),hf=t("code",null,"拓扑排序",-1),ff=t("code",null,"记忆化搜索",-1),uf=t("code",null,"3+",-1),gf={style:{"text-align":"left"}},mf=t("td",{style:{"text-align":"center"}},"1916",-1),yf={style:{"text-align":"left"}},pf={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},xf=t("td",{style:{"text-align":"center"}},null,-1),bf={style:{"text-align":"left"}},kf=t("code",null,"树",-1),Hf=t("code",null,"图",-1),Mf=t("code",null,"拓扑排序",-1),If=t("code",null,"3+",-1),wf={style:{"text-align":"left"}},vf=t("td",{style:{"text-align":"center"}},"1928",-1),qf={style:{"text-align":"left"}},Lf={href:"https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time",target:"_blank",rel:"noopener noreferrer"},zf=t("td",{style:{"text-align":"center"}},null,-1),Pf={style:{"text-align":"left"}},Cf=t("code",null,"图",-1),Ef=t("code",null,"数组",-1),Of=t("code",null,"动态规划",-1),jf={style:{"text-align":"left"}},Vf=t("td",{style:{"text-align":"center"}},"1971",-1),Df={style:{"text-align":"left"}},Jf={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},Kf=t("td",{style:{"text-align":"center"}},null,-1),Af={style:{"text-align":"left"}},Bf=t("code",null,"深度优先搜索",-1),Nf=t("code",null,"广度优先搜索",-1),Tf=t("code",null,"并查集",-1),Ff=t("code",null,"1+",-1),Wf={style:{"text-align":"left"}},Qf=t("td",{style:{"text-align":"center"}},"1976",-1),Rf={style:{"text-align":"left"}},Uf={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},Xf=t("td",{style:{"text-align":"center"}},null,-1),Zf={style:{"text-align":"left"}},Gf=t("code",null,"图",-1),Sf=t("code",null,"拓扑排序",-1),Yf=t("code",null,"动态规划",-1),$f=t("code",null,"1+",-1),tu={style:{"text-align":"left"}},eu=t("td",{style:{"text-align":"center"}},"2039",-1),lu={style:{"text-align":"left"}},ou={href:"https://leetcode.com/problems/the-time-when-the-network-becomes-idle",target:"_blank",rel:"noopener noreferrer"},su=t("td",{style:{"text-align":"center"}},null,-1),nu={style:{"text-align":"left"}},du=t("code",null,"广度优先搜索",-1),_u=t("code",null,"图",-1),au=t("code",null,"数组",-1),cu={style:{"text-align":"left"}},iu=t("td",{style:{"text-align":"center"}},"2045",-1),ru={style:{"text-align":"left"}},hu={href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},fu=t("td",{style:{"text-align":"center"}},null,-1),uu={style:{"text-align":"left"}},gu=t("code",null,"广度优先搜索",-1),mu=t("code",null,"图",-1),yu=t("code",null,"最短路",-1),pu={style:{"text-align":"left"}},xu=t("td",{style:{"text-align":"center"}},"2050",-1),bu={style:{"text-align":"left"}},ku={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},Hu=t("td",{style:{"text-align":"center"}},null,-1),Mu={style:{"text-align":"left"}},Iu=t("code",null,"图",-1),wu=t("code",null,"拓扑排序",-1),vu=t("code",null,"数组",-1),qu=t("code",null,"1+",-1),Lu={style:{"text-align":"left"}},zu=t("td",{style:{"text-align":"center"}},"2065",-1),Pu={style:{"text-align":"left"}},Cu={href:"https://leetcode.com/problems/maximum-path-quality-of-a-graph",target:"_blank",rel:"noopener noreferrer"},Eu=t("td",{style:{"text-align":"center"}},null,-1),Ou={style:{"text-align":"left"}},ju=t("code",null,"图",-1),Vu=t("code",null,"数组",-1),Du=t("code",null,"回溯",-1),Ju={style:{"text-align":"left"}},Ku=t("td",{style:{"text-align":"center"}},"2076",-1),Au={style:{"text-align":"left"}},Bu={href:"https://leetcode.com/problems/process-restricted-friend-requests",target:"_blank",rel:"noopener noreferrer"},Nu=t("td",{style:{"text-align":"center"}},null,-1),Tu={style:{"text-align":"left"}},Fu=t("code",null,"并查集",-1),Wu=t("code",null,"图",-1),Qu={style:{"text-align":"left"}},Ru=t("td",{style:{"text-align":"center"}},"2077",-1),Uu={style:{"text-align":"left"}},Xu={href:"https://leetcode.com/problems/paths-in-maze-that-lead-to-same-room",target:"_blank",rel:"noopener noreferrer"},Zu=t("td",{style:{"text-align":"center"}},null,-1),Gu={style:{"text-align":"left"}},Su=t("code",null,"图",-1),Yu={style:{"text-align":"left"}},$u=t("td",{style:{"text-align":"center"}},"2092",-1),tg={style:{"text-align":"left"}},eg={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},lg=t("td",{style:{"text-align":"center"}},null,-1),og={style:{"text-align":"left"}},sg=t("code",null,"深度优先搜索",-1),ng=t("code",null,"广度优先搜索",-1),dg=t("code",null,"并查集",-1),_g=t("code",null,"2+",-1),ag={style:{"text-align":"left"}},cg=t("td",{style:{"text-align":"center"}},"2093",-1),ig={style:{"text-align":"left"}},rg={href:"https://leetcode.com/problems/minimum-cost-to-reach-city-with-discounts",target:"_blank",rel:"noopener noreferrer"},hg=t("td",{style:{"text-align":"center"}},null,-1),fg={style:{"text-align":"left"}},ug=t("code",null,"图",-1),gg=t("code",null,"最短路",-1),mg=t("code",null,"堆（优先队列）",-1),yg={style:{"text-align":"left"}},pg=t("td",{style:{"text-align":"center"}},"2097",-1),xg={style:{"text-align":"left"}},bg={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},kg=t("td",{style:{"text-align":"center"}},null,-1),Hg={style:{"text-align":"left"}},Mg=t("code",null,"深度优先搜索",-1),Ig=t("code",null,"图",-1),wg=t("code",null,"欧拉回路",-1),vg={style:{"text-align":"left"}},qg=t("td",{style:{"text-align":"center"}},"2101",-1),Lg={style:{"text-align":"left"}},zg={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},Pg=t("td",{style:{"text-align":"center"}},null,-1),Cg={style:{"text-align":"left"}},Eg=t("code",null,"深度优先搜索",-1),Og=t("code",null,"广度优先搜索",-1),jg=t("code",null,"图",-1),Vg=t("code",null,"3+",-1),Dg={style:{"text-align":"left"}},Jg=t("td",{style:{"text-align":"center"}},"2115",-1),Kg={style:{"text-align":"left"}},Ag={href:"https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies",target:"_blank",rel:"noopener noreferrer"},Bg=t("td",{style:{"text-align":"center"}},null,-1),Ng={style:{"text-align":"left"}},Tg=t("code",null,"图",-1),Fg=t("code",null,"拓扑排序",-1),Wg=t("code",null,"数组",-1),Qg=t("code",null,"2+",-1),Rg={style:{"text-align":"left"}},Ug=t("td",{style:{"text-align":"center"}},"2123",-1),Xg={style:{"text-align":"left"}},Zg={href:"https://leetcode.com/problems/minimum-operations-to-remove-adjacent-ones-in-matrix",target:"_blank",rel:"noopener noreferrer"},Gg=t("td",{style:{"text-align":"center"}},null,-1),Sg={style:{"text-align":"left"}},Yg=t("code",null,"图",-1),$g=t("code",null,"数组",-1),tm=t("code",null,"矩阵",-1),em={style:{"text-align":"left"}},lm=t("td",{style:{"text-align":"center"}},"2127",-1),om={style:{"text-align":"left"}},sm={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},nm=t("td",{style:{"text-align":"center"}},null,-1),dm={style:{"text-align":"left"}},_m=t("code",null,"深度优先搜索",-1),am=t("code",null,"图",-1),cm=t("code",null,"拓扑排序",-1),im={style:{"text-align":"left"}},rm=t("td",{style:{"text-align":"center"}},"2192",-1),hm={style:{"text-align":"left"}},fm={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},um=t("td",{style:{"text-align":"center"}},null,-1),gm={style:{"text-align":"left"}},mm=t("code",null,"深度优先搜索",-1),ym=t("code",null,"广度优先搜索",-1),pm=t("code",null,"图",-1),xm=t("code",null,"1+",-1),bm={style:{"text-align":"left"}},km=t("td",{style:{"text-align":"center"}},"2203",-1),Hm={style:{"text-align":"left"}},Mm={href:"https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths",target:"_blank",rel:"noopener noreferrer"},Im=t("td",{style:{"text-align":"center"}},null,-1),wm={style:{"text-align":"left"}},vm=t("code",null,"图",-1),qm=t("code",null,"最短路",-1),Lm={style:{"text-align":"left"}},zm=t("td",{style:{"text-align":"center"}},"2204",-1),Pm={style:{"text-align":"left"}},Cm={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},null,-1),Om={style:{"text-align":"left"}},jm=t("code",null,"深度优先搜索",-1),Vm=t("code",null,"广度优先搜索",-1),Dm=t("code",null,"并查集",-1),Jm=t("code",null,"1+",-1),Km={style:{"text-align":"left"}},Am=t("td",{style:{"text-align":"center"}},"2242",-1),Bm={style:{"text-align":"left"}},Nm={href:"https://leetcode.com/problems/maximum-score-of-a-node-sequence",target:"_blank",rel:"noopener noreferrer"},Tm=t("td",{style:{"text-align":"center"}},null,-1),Fm={style:{"text-align":"left"}},Wm=t("code",null,"图",-1),Qm=t("code",null,"数组",-1),Rm=t("code",null,"枚举",-1),Um=t("code",null,"1+",-1),Xm={style:{"text-align":"left"}},Zm=t("td",{style:{"text-align":"center"}},"2246",-1),Gm={style:{"text-align":"left"}},Sm={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},Ym=t("td",{style:{"text-align":"center"}},null,-1),$m={style:{"text-align":"left"}},ty=t("code",null,"树",-1),ey=t("code",null,"深度优先搜索",-1),ly=t("code",null,"图",-1),oy=t("code",null,"3+",-1),sy={style:{"text-align":"left"}},ny=t("td",{style:{"text-align":"center"}},"2247",-1),dy={style:{"text-align":"left"}},_y={href:"https://leetcode.com/problems/maximum-cost-of-trip-with-k-highways",target:"_blank",rel:"noopener noreferrer"},ay=t("td",{style:{"text-align":"center"}},null,-1),cy={style:{"text-align":"left"}},iy=t("code",null,"位运算",-1),ry=t("code",null,"图",-1),hy=t("code",null,"动态规划",-1),fy=t("code",null,"1+",-1),uy={style:{"text-align":"left"}},gy=t("td",{style:{"text-align":"center"}},"2285",-1),my={style:{"text-align":"left"}},yy={href:"https://leetcode.com/problems/maximum-total-importance-of-roads",target:"_blank",rel:"noopener noreferrer"},py=t("td",{style:{"text-align":"center"}},null,-1),xy={style:{"text-align":"left"}},by=t("code",null,"贪心",-1),ky=t("code",null,"图",-1),Hy=t("code",null,"排序",-1),My=t("code",null,"1+",-1),Iy={style:{"text-align":"left"}},wy=t("td",{style:{"text-align":"center"}},"2290",-1),vy={style:{"text-align":"left"}},qy={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},Ly=t("td",{style:{"text-align":"center"}},null,-1),zy={style:{"text-align":"left"}},Py=t("code",null,"广度优先搜索",-1),Cy=t("code",null,"图",-1),Ey=t("code",null,"数组",-1),Oy=t("code",null,"3+",-1),jy={style:{"text-align":"left"}},Vy=t("td",{style:{"text-align":"center"}},"2297",-1),Dy={style:{"text-align":"left"}},Jy={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Ky=t("td",{style:{"text-align":"center"}},null,-1),Ay={style:{"text-align":"left"}},By=t("code",null,"栈",-1),Ny=t("code",null,"图",-1),Ty=t("code",null,"数组",-1),Fy=t("code",null,"3+",-1),Wy={style:{"text-align":"left"}},Qy=t("td",{style:{"text-align":"center"}},"2307",-1),Ry={style:{"text-align":"left"}},Uy={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},Xy=t("td",{style:{"text-align":"center"}},null,-1),Zy={style:{"text-align":"left"}},Gy=t("code",null,"深度优先搜索",-1),Sy=t("code",null,"并查集",-1),Yy=t("code",null,"图",-1),$y=t("code",null,"1+",-1),tp={style:{"text-align":"left"}},ep=t("td",{style:{"text-align":"center"}},"2316",-1),lp={style:{"text-align":"left"}},op={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},sp=t("td",{style:{"text-align":"center"}},null,-1),np={style:{"text-align":"left"}},dp=t("code",null,"深度优先搜索",-1),_p=t("code",null,"广度优先搜索",-1),ap=t("code",null,"并查集",-1),cp=t("code",null,"1+",-1),ip={style:{"text-align":"left"}},rp=t("td",{style:{"text-align":"center"}},"2328",-1),hp={style:{"text-align":"left"}},fp={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},up=t("td",{style:{"text-align":"center"}},null,-1),gp={style:{"text-align":"left"}},mp=t("code",null,"深度优先搜索",-1),yp=t("code",null,"广度优先搜索",-1),pp=t("code",null,"图",-1),xp=t("code",null,"5+",-1),bp={style:{"text-align":"left"}},kp=t("td",{style:{"text-align":"center"}},"2359",-1),Hp={style:{"text-align":"left"}},Mp={href:"https://leetcode.com/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},Ip=t("td",{style:{"text-align":"center"}},null,-1),wp={style:{"text-align":"left"}},vp=t("code",null,"深度优先搜索",-1),qp=t("code",null,"图",-1),Lp={style:{"text-align":"left"}},zp=t("td",{style:{"text-align":"center"}},"2360",-1),Pp={style:{"text-align":"left"}},Cp={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},Ep=t("td",{style:{"text-align":"center"}},null,-1),Op={style:{"text-align":"left"}},jp=t("code",null,"深度优先搜索",-1),Vp=t("code",null,"图",-1),Dp=t("code",null,"拓扑排序",-1),Jp={style:{"text-align":"left"}},Kp=t("td",{style:{"text-align":"center"}},"2368",-1),Ap={style:{"text-align":"left"}},Bp={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},Np=t("td",{style:{"text-align":"center"}},null,-1),Tp={style:{"text-align":"left"}},Fp=t("code",null,"树",-1),Wp=t("code",null,"深度优先搜索",-1),Qp=t("code",null,"广度优先搜索",-1),Rp=t("code",null,"4+",-1),Up={style:{"text-align":"left"}},Xp=t("td",{style:{"text-align":"center"}},"2371",-1),Zp={style:{"text-align":"left"}},Gp={href:"https://leetcode.com/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Sp=t("td",{style:{"text-align":"center"}},null,-1),Yp={style:{"text-align":"left"}},$p=t("code",null,"并查集",-1),tx=t("code",null,"图",-1),ex=t("code",null,"拓扑排序",-1),lx=t("code",null,"3+",-1),ox={style:{"text-align":"left"}},sx=t("td",{style:{"text-align":"center"}},"2374",-1),nx={style:{"text-align":"left"}},dx={href:"https://leetcode.com/problems/node-with-highest-edge-score",target:"_blank",rel:"noopener noreferrer"},_x=t("td",{style:{"text-align":"center"}},null,-1),ax={style:{"text-align":"left"}},cx=t("code",null,"图",-1),ix=t("code",null,"哈希表",-1),rx={style:{"text-align":"left"}},hx=t("td",{style:{"text-align":"center"}},"2392",-1),fx={style:{"text-align":"left"}},ux={href:"https://leetcode.com/problems/build-a-matrix-with-conditions",target:"_blank",rel:"noopener noreferrer"},gx=t("td",{style:{"text-align":"center"}},null,-1),mx={style:{"text-align":"left"}},yx=t("code",null,"图",-1),px=t("code",null,"拓扑排序",-1),xx=t("code",null,"数组",-1),bx=t("code",null,"1+",-1),kx={style:{"text-align":"left"}},Hx=t("td",{style:{"text-align":"center"}},"2421",-1),Mx={style:{"text-align":"left"}},Ix={href:"https://leetcode.com/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},wx=t("td",{style:{"text-align":"center"}},null,-1),vx={style:{"text-align":"left"}},qx=t("code",null,"树",-1),Lx=t("code",null,"并查集",-1),zx=t("code",null,"图",-1),Px=t("code",null,"3+",-1),Cx={style:{"text-align":"left"}},Ex=t("td",{style:{"text-align":"center"}},"2467",-1),Ox={style:{"text-align":"left"}},jx={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Vx=t("td",{style:{"text-align":"center"}},null,-1),Dx={style:{"text-align":"left"}},Jx=t("code",null,"树",-1),Kx=t("code",null,"深度优先搜索",-1),Ax=t("code",null,"广度优先搜索",-1),Bx=t("code",null,"2+",-1),Nx={style:{"text-align":"left"}},Tx=t("td",{style:{"text-align":"center"}},"2473",-1),Fx={style:{"text-align":"left"}},Wx={href:"https://leetcode.com/problems/minimum-cost-to-buy-apples",target:"_blank",rel:"noopener noreferrer"},Qx=t("td",{style:{"text-align":"center"}},null,-1),Rx={style:{"text-align":"left"}},Ux=t("code",null,"图",-1),Xx=t("code",null,"数组",-1),Zx=t("code",null,"最短路",-1),Gx=t("code",null,"1+",-1),Sx={style:{"text-align":"left"}},Yx=t("td",{style:{"text-align":"center"}},"2477",-1),$x={style:{"text-align":"left"}},t3={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},e3=t("td",{style:{"text-align":"center"}},null,-1),l3={style:{"text-align":"left"}},o3=t("code",null,"树",-1),s3=t("code",null,"深度优先搜索",-1),n3=t("code",null,"广度优先搜索",-1),d3=t("code",null,"1+",-1),_3={style:{"text-align":"left"}},a3=t("td",{style:{"text-align":"center"}},"2479",-1),c3={style:{"text-align":"left"}},i3={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},r3=t("td",{style:{"text-align":"center"}},null,-1),h3={style:{"text-align":"left"}},f3=t("code",null,"树",-1),u3=t("code",null,"深度优先搜索",-1),g3=t("code",null,"图",-1),m3=t("code",null,"1+",-1),y3={style:{"text-align":"left"}},p3=t("td",{style:{"text-align":"center"}},"2492",-1),x3={style:{"text-align":"left"}},b3={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},k3=t("td",{style:{"text-align":"center"}},null,-1),H3={style:{"text-align":"left"}},M3=t("code",null,"深度优先搜索",-1),I3=t("code",null,"广度优先搜索",-1),w3=t("code",null,"并查集",-1),v3=t("code",null,"1+",-1),q3={style:{"text-align":"left"}},L3=t("td",{style:{"text-align":"center"}},"2493",-1),z3={style:{"text-align":"left"}},P3={href:"https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups",target:"_blank",rel:"noopener noreferrer"},C3=t("td",{style:{"text-align":"center"}},null,-1),E3={style:{"text-align":"left"}},O3=t("code",null,"广度优先搜索",-1),j3=t("code",null,"并查集",-1),V3=t("code",null,"图",-1),D3={style:{"text-align":"left"}},J3=t("td",{style:{"text-align":"center"}},"2497",-1),K3={style:{"text-align":"left"}},A3={href:"https://leetcode.com/problems/maximum-star-sum-of-a-graph",target:"_blank",rel:"noopener noreferrer"},B3=t("td",{style:{"text-align":"center"}},null,-1),N3={style:{"text-align":"left"}},T3=t("code",null,"贪心",-1),F3=t("code",null,"图",-1),W3=t("code",null,"数组",-1),Q3=t("code",null,"2+",-1),R3={style:{"text-align":"left"}},U3=t("td",{style:{"text-align":"center"}},"2508",-1),X3={style:{"text-align":"left"}},Z3={href:"https://leetcode.com/problems/add-edges-to-make-degrees-of-all-nodes-even",target:"_blank",rel:"noopener noreferrer"},G3=t("td",{style:{"text-align":"center"}},null,-1),S3={style:{"text-align":"left"}},Y3=t("code",null,"图",-1),$3=t("code",null,"哈希表",-1),tb={style:{"text-align":"left"}},eb=t("td",{style:{"text-align":"center"}},"2577",-1),lb={style:{"text-align":"left"}},ob={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},sb=t("td",{style:{"text-align":"center"}},null,-1),nb={style:{"text-align":"left"}},db=t("code",null,"广度优先搜索",-1),_b=t("code",null,"图",-1),ab=t("code",null,"数组",-1),cb=t("code",null,"3+",-1),ib={style:{"text-align":"left"}},rb=t("td",{style:{"text-align":"center"}},"2603",-1),hb={style:{"text-align":"left"}},fb={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},ub=t("td",{style:{"text-align":"center"}},null,-1),gb={style:{"text-align":"left"}},mb=t("code",null,"树",-1),yb=t("code",null,"图",-1),pb=t("code",null,"拓扑排序",-1),xb=t("code",null,"1+",-1),bb={style:{"text-align":"left"}},kb=t("td",{style:{"text-align":"center"}},"2608",-1),Hb={style:{"text-align":"left"}},Mb={href:"https://leetcode.com/problems/shortest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},Ib=t("td",{style:{"text-align":"center"}},null,-1),wb={style:{"text-align":"left"}},vb=t("code",null,"广度优先搜索",-1),qb=t("code",null,"图",-1),Lb={style:{"text-align":"left"}},zb=t("td",{style:{"text-align":"center"}},"2642",-1),Pb={style:{"text-align":"left"}},Cb={href:"https://leetcode.com/problems/design-graph-with-shortest-path-calculator",target:"_blank",rel:"noopener noreferrer"},Eb=t("td",{style:{"text-align":"center"}},null,-1),Ob={style:{"text-align":"left"}},jb=t("code",null,"图",-1),Vb=t("code",null,"设计",-1),Db=t("code",null,"最短路",-1),Jb=t("code",null,"1+",-1),Kb={style:{"text-align":"left"}},Ab=t("td",{style:{"text-align":"center"}},"2646",-1),Bb={style:{"text-align":"left"}},Nb={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},Tb=t("td",{style:{"text-align":"center"}},null,-1),Fb={style:{"text-align":"left"}},Wb=t("code",null,"树",-1),Qb=t("code",null,"深度优先搜索",-1),Rb=t("code",null,"图",-1),Ub=t("code",null,"2+",-1),Xb={style:{"text-align":"left"}},Zb=t("td",{style:{"text-align":"center"}},"2662",-1),Gb={style:{"text-align":"left"}},Sb={href:"https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads",target:"_blank",rel:"noopener noreferrer"},Yb=t("td",{style:{"text-align":"center"}},null,-1),$b={style:{"text-align":"left"}},t4=t("code",null,"图",-1),e4=t("code",null,"数组",-1),l4=t("code",null,"最短路",-1),o4=t("code",null,"1+",-1),s4={style:{"text-align":"left"}},n4=t("td",{style:{"text-align":"center"}},"2685",-1),d4={style:{"text-align":"left"}},_4={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},a4=t("td",{style:{"text-align":"center"}},null,-1),c4={style:{"text-align":"left"}},i4=t("code",null,"深度优先搜索",-1),r4=t("code",null,"广度优先搜索",-1),h4=t("code",null,"图",-1),f4={style:{"text-align":"left"}},u4=t("td",{style:{"text-align":"center"}},"2699",-1),g4={style:{"text-align":"left"}},m4={href:"https://leetcode.com/problems/modify-graph-edge-weights",target:"_blank",rel:"noopener noreferrer"},y4=t("td",{style:{"text-align":"center"}},null,-1),p4={style:{"text-align":"left"}},x4=t("code",null,"图",-1),b4=t("code",null,"最短路",-1),k4=t("code",null,"堆（优先队列）",-1),H4={style:{"text-align":"left"}},M4=t("td",{style:{"text-align":"center"}},"2714",-1),I4={style:{"text-align":"left"}},w4={href:"https://leetcode.com/problems/find-shortest-path-with-k-hops",target:"_blank",rel:"noopener noreferrer"},v4=t("td",{style:{"text-align":"center"}},null,-1),q4={style:{"text-align":"left"}},L4=t("code",null,"图",-1),z4=t("code",null,"最短路",-1),P4=t("code",null,"堆（优先队列）",-1),C4={style:{"text-align":"left"}},E4=t("td",{style:{"text-align":"center"}},"2737",-1),O4={style:{"text-align":"left"}},j4={href:"https://leetcode.com/problems/find-the-closest-marked-node",target:"_blank",rel:"noopener noreferrer"},V4=t("td",{style:{"text-align":"center"}},null,-1),D4={style:{"text-align":"left"}},J4=t("code",null,"图",-1),K4=t("code",null,"数组",-1),A4=t("code",null,"最短路",-1),B4=t("code",null,"1+",-1),N4={style:{"text-align":"left"}},T4=t("td",{style:{"text-align":"center"}},"2846",-1),F4={style:{"text-align":"left"}},W4={href:"https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Q4=t("td",{style:{"text-align":"center"}},null,-1),R4={style:{"text-align":"left"}},U4=t("code",null,"树",-1),X4=t("code",null,"图",-1),Z4=t("code",null,"数组",-1),G4=t("code",null,"1+",-1),S4={style:{"text-align":"left"}},Y4=t("td",{style:{"text-align":"center"}},"2858",-1),$4={style:{"text-align":"left"}},t2={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},e2=t("td",{style:{"text-align":"center"}},null,-1),l2={style:{"text-align":"left"}},o2=t("code",null,"深度优先搜索",-1),s2=t("code",null,"广度优先搜索",-1),n2=t("code",null,"图",-1),d2=t("code",null,"1+",-1),_2={style:{"text-align":"left"}},a2=t("td",{style:{"text-align":"center"}},"2876",-1),c2={style:{"text-align":"left"}},i2={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},r2=t("td",{style:{"text-align":"center"}},null,-1),h2={style:{"text-align":"left"}},f2=t("code",null,"图",-1),u2=t("code",null,"记忆化搜索",-1),g2=t("code",null,"动态规划",-1),m2={style:{"text-align":"left"}},y2=t("td",{style:{"text-align":"center"}},"2924",-1),p2={style:{"text-align":"left"}},x2={href:"https://leetcode.com/problems/find-champion-ii",target:"_blank",rel:"noopener noreferrer"},b2=t("td",{style:{"text-align":"center"}},null,-1),k2={style:{"text-align":"left"}},H2=t("code",null,"图",-1),M2={style:{"text-align":"left"}},I2=t("td",{style:{"text-align":"center"}},"2959",-1),w2={style:{"text-align":"left"}},v2={href:"https://leetcode.com/problems/number-of-possible-sets-of-closing-branches",target:"_blank",rel:"noopener noreferrer"},q2=t("td",{style:{"text-align":"center"}},null,-1),L2={style:{"text-align":"left"}},z2=t("code",null,"位运算",-1),P2=t("code",null,"图",-1),C2=t("code",null,"枚举",-1),E2=t("code",null,"2+",-1),O2={style:{"text-align":"left"}},j2=t("td",{style:{"text-align":"center"}},"2976",-1),V2={style:{"text-align":"left"}},D2={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-i",target:"_blank",rel:"noopener noreferrer"},J2=t("td",{style:{"text-align":"center"}},null,-1),K2={style:{"text-align":"left"}},A2=t("code",null,"图",-1),B2=t("code",null,"数组",-1),N2=t("code",null,"字符串",-1),T2=t("code",null,"1+",-1),F2={style:{"text-align":"left"}},W2=t("td",{style:{"text-align":"center"}},"2977",-1),Q2={style:{"text-align":"left"}},R2={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},U2=t("td",{style:{"text-align":"center"}},null,-1),X2={style:{"text-align":"left"}},Z2=t("code",null,"图",-1),G2=t("code",null,"字典树",-1),S2=t("code",null,"数组",-1),Y2=t("code",null,"3+",-1),$2={style:{"text-align":"left"}},t0=t("td",{style:{"text-align":"center"}},"3015",-1),e0={style:{"text-align":"left"}},l0={href:"https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-i",target:"_blank",rel:"noopener noreferrer"},o0=t("td",{style:{"text-align":"center"}},null,-1),s0={style:{"text-align":"left"}},n0=t("code",null,"广度优先搜索",-1),d0=t("code",null,"图",-1),_0=t("code",null,"前缀和",-1),a0={style:{"text-align":"left"}},c0=t("td",{style:{"text-align":"center"}},"3017",-1),i0={style:{"text-align":"left"}},r0={href:"https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-ii",target:"_blank",rel:"noopener noreferrer"},h0=t("td",{style:{"text-align":"center"}},null,-1),f0={style:{"text-align":"left"}},u0=t("code",null,"图",-1),g0=t("code",null,"前缀和",-1),m0={style:{"text-align":"left"}},y0=t("td",{style:{"text-align":"center"}},"3108",-1),p0={style:{"text-align":"left"}},x0={href:"https://leetcode.com/problems/minimum-cost-walk-in-weighted-graph",target:"_blank",rel:"noopener noreferrer"},b0=t("td",{style:{"text-align":"center"}},null,-1),k0={style:{"text-align":"left"}},H0=t("code",null,"位运算",-1),M0=t("code",null,"并查集",-1),I0=t("code",null,"图",-1),w0=t("code",null,"1+",-1),v0={style:{"text-align":"left"}},q0=t("td",{style:{"text-align":"center"}},"3112",-1),L0={style:{"text-align":"left"}},z0={href:"https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes",target:"_blank",rel:"noopener noreferrer"},P0=t("td",{style:{"text-align":"center"}},null,-1),C0={style:{"text-align":"left"}},E0=t("code",null,"图",-1),O0=t("code",null,"数组",-1),j0=t("code",null,"最短路",-1),V0=t("code",null,"1+",-1),D0={style:{"text-align":"left"}},J0=t("td",{style:{"text-align":"center"}},"3123",-1),K0={style:{"text-align":"left"}},A0={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},B0=t("td",{style:{"text-align":"center"}},null,-1),N0={style:{"text-align":"left"}},T0=t("code",null,"深度优先搜索",-1),F0=t("code",null,"广度优先搜索",-1),W0=t("code",null,"图",-1),Q0=t("code",null,"2+",-1),R0={style:{"text-align":"left"}},U0=t("td",{style:{"text-align":"center"}},"3203",-1),X0={style:{"text-align":"left"}},Z0={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},G0=t("td",{style:{"text-align":"center"}},null,-1),S0={style:{"text-align":"left"}},Y0=t("code",null,"树",-1),$0=t("code",null,"深度优先搜索",-1),t6=t("code",null,"广度优先搜索",-1),e6=t("code",null,"1+",-1),l6={style:{"text-align":"left"}},o6=t("td",{style:{"text-align":"center"}},"3241",-1),s6={style:{"text-align":"left"}},n6={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},d6=t("td",{style:{"text-align":"center"}},null,-1),_6={style:{"text-align":"left"}},a6=t("code",null,"树",-1),c6=t("code",null,"深度优先搜索",-1),i6=t("code",null,"图",-1),r6=t("code",null,"1+",-1),h6={style:{"text-align":"left"}},f6=t("td",{style:{"text-align":"center"}},"3243",-1),u6={style:{"text-align":"left"}},g6={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-i",target:"_blank",rel:"noopener noreferrer"},m6=t("td",{style:{"text-align":"center"}},null,-1),y6={style:{"text-align":"left"}},p6=t("code",null,"广度优先搜索",-1),x6=t("code",null,"图",-1),b6=t("code",null,"数组",-1),k6={style:{"text-align":"left"}},H6=t("td",{style:{"text-align":"center"}},"3244",-1),M6={style:{"text-align":"left"}},I6={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-ii",target:"_blank",rel:"noopener noreferrer"},w6=t("td",{style:{"text-align":"center"}},null,-1),v6={style:{"text-align":"left"}},q6=t("code",null,"贪心",-1),L6=t("code",null,"图",-1),z6=t("code",null,"数组",-1),P6=t("code",null,"1+",-1),C6={style:{"text-align":"left"}},E6=t("td",{style:{"text-align":"center"}},"3286",-1),O6={style:{"text-align":"left"}},j6={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},V6=t("td",{style:{"text-align":"center"}},null,-1),D6={style:{"text-align":"left"}},J6=t("code",null,"广度优先搜索",-1),K6=t("code",null,"图",-1),A6=t("code",null,"数组",-1),B6=t("code",null,"3+",-1),N6={style:{"text-align":"left"}},T6=t("td",{style:{"text-align":"center"}},"3310",-1),F6={style:{"text-align":"left"}},W6={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},Q6=t("td",{style:{"text-align":"center"}},null,-1),R6={style:{"text-align":"left"}},U6=t("code",null,"深度优先搜索",-1),X6=t("code",null,"广度优先搜索",-1),Z6=t("code",null,"图",-1),G6={style:{"text-align":"left"}},S6=t("td",{style:{"text-align":"center"}},"3311",-1),Y6={style:{"text-align":"left"}},$6={href:"https://leetcode.com/problems/construct-2d-grid-matching-graph-layout",target:"_blank",rel:"noopener noreferrer"},t5=t("td",{style:{"text-align":"center"}},null,-1),e5={style:{"text-align":"left"}},l5=t("code",null,"图",-1),o5=t("code",null,"数组",-1),s5=t("code",null,"哈希表",-1),n5=t("code",null,"1+",-1),d5={style:{"text-align":"left"}},_5=t("td",{style:{"text-align":"center"}},"LCP 04",-1),a5={style:{"text-align":"left"}},c5={href:"https://leetcode.cn/problems/broken-board-dominoes",target:"_blank",rel:"noopener noreferrer"},i5=t("td",{style:{"text-align":"center"}},null,-1),r5={style:{"text-align":"left"}},h5=t("code",null,"位运算",-1),f5=t("code",null,"图",-1),u5=t("code",null,"数组",-1),g5=t("code",null,"2+",-1),m5={style:{"text-align":"left"}},y5=t("td",{style:{"text-align":"center"}},"LCP 07",-1),p5={style:{"text-align":"left"}},x5={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},b5=t("td",{style:{"text-align":"center"}},null,-1),k5={style:{"text-align":"left"}},H5=t("code",null,"深度优先搜索",-1),M5=t("code",null,"广度优先搜索",-1),I5=t("code",null,"图",-1),w5=t("code",null,"1+",-1),v5={style:{"text-align":"left"}},q5=t("td",{style:{"text-align":"center"}},"LCP 16",-1),L5={style:{"text-align":"left"}},z5={href:"https://leetcode.cn/problems/you-le-yuan-de-you-lan-ji-hua",target:"_blank",rel:"noopener noreferrer"},P5=t("td",{style:{"text-align":"center"}},null,-1),C5={style:{"text-align":"left"}},E5=t("code",null,"图",-1),O5=t("code",null,"几何",-1),j5=t("code",null,"数学",-1),V5={style:{"text-align":"left"}},D5=t("td",{style:{"text-align":"center"}},"LCP 21",-1),J5={style:{"text-align":"left"}},K5={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},A5=t("td",{style:{"text-align":"center"}},null,-1),B5={style:{"text-align":"left"}},N5=t("code",null,"深度优先搜索",-1),T5=t("code",null,"广度优先搜索",-1),F5=t("code",null,"图",-1),W5=t("code",null,"1+",-1),Q5={style:{"text-align":"left"}},R5=t("td",{style:{"text-align":"center"}},"LCP 35",-1),U5={style:{"text-align":"left"}},X5={href:"https://leetcode.cn/problems/DFPeFJ",target:"_blank",rel:"noopener noreferrer"},Z5=t("td",{style:{"text-align":"center"}},null,-1),G5={style:{"text-align":"left"}},S5=t("code",null,"图",-1),Y5=t("code",null,"最短路",-1),$5=t("code",null,"堆（优先队列）",-1),t8={style:{"text-align":"left"}},e8=t("td",{style:{"text-align":"center"}},"LCP 46",-1),l8={style:{"text-align":"left"}},o8={href:"https://leetcode.cn/problems/05ZEDJ",target:"_blank",rel:"noopener noreferrer"},s8=t("td",{style:{"text-align":"center"}},null,-1),n8={style:{"text-align":"left"}},d8=t("code",null,"图",-1),_8=t("code",null,"数组",-1),a8=t("code",null,"数学",-1),c8={style:{"text-align":"left"}},i8=t("td",{style:{"text-align":"center"}},"LCP 54",-1),r8={style:{"text-align":"left"}},h8={href:"https://leetcode.cn/problems/s5kipK",target:"_blank",rel:"noopener noreferrer"},f8=t("td",{style:{"text-align":"center"}},null,-1),u8={style:{"text-align":"left"}},g8=t("code",null,"图",-1),m8=t("code",null,"数组",-1),y8=t("code",null,"双连通分量",-1),p8={style:{"text-align":"left"}},x8=t("td",{style:{"text-align":"center"}},"LCP 56",-1),b8={style:{"text-align":"left"}},k8={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},H8=t("td",{style:{"text-align":"center"}},null,-1),M8={style:{"text-align":"left"}},I8=t("code",null,"广度优先搜索",-1),w8=t("code",null,"图",-1),v8=t("code",null,"数组",-1),q8=t("code",null,"3+",-1),L8={style:{"text-align":"left"}},z8=t("td",{style:{"text-align":"center"}},"LCP 62",-1),P8={style:{"text-align":"left"}},C8={href:"https://leetcode.cn/problems/D9PW8w",target:"_blank",rel:"noopener noreferrer"},E8=t("td",{style:{"text-align":"center"}},null,-1),O8={style:{"text-align":"left"}},j8=t("code",null,"图",-1),V8={style:{"text-align":"left"}},D8=t("td",{style:{"text-align":"center"}},"LCP 63",-1),J8={style:{"text-align":"left"}},K8={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},A8=t("td",{style:{"text-align":"center"}},null,-1),B8={style:{"text-align":"left"}},N8=t("code",null,"深度优先搜索",-1),T8=t("code",null,"广度优先搜索",-1),F8=t("code",null,"图",-1),W8=t("code",null,"5+",-1),Q8={style:{"text-align":"left"}},R8=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),U8={style:{"text-align":"left"}},X8={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},Z8=t("td",{style:{"text-align":"center"}},null,-1),G8={style:{"text-align":"left"}},S8=t("code",null,"深度优先搜索",-1),Y8=t("code",null,"广度优先搜索",-1),$8=t("code",null,"并查集",-1),t7=t("code",null,"1+",-1),e7={style:{"text-align":"left"}},l7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),o7={style:{"text-align":"left"}},s7={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},n7=t("td",{style:{"text-align":"center"}},null,-1),d7={style:{"text-align":"left"}},_7=t("code",null,"深度优先搜索",-1),a7=t("code",null,"广度优先搜索",-1),c7=t("code",null,"图",-1),i7=t("code",null,"1+",-1),r7={style:{"text-align":"left"}},h7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),f7={style:{"text-align":"left"}},u7={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},g7=t("td",{style:{"text-align":"center"}},null,-1),m7={style:{"text-align":"left"}},y7=t("code",null,"深度优先搜索",-1),p7=t("code",null,"广度优先搜索",-1),x7=t("code",null,"并查集",-1),b7=t("code",null,"3+",-1),k7={style:{"text-align":"left"}},H7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),M7={style:{"text-align":"left"}},I7={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},w7=t("td",{style:{"text-align":"center"}},null,-1),v7={style:{"text-align":"left"}},q7=t("code",null,"深度优先搜索",-1),L7=t("code",null,"广度优先搜索",-1),z7=t("code",null,"图",-1),P7=t("code",null,"5+",-1),C7={style:{"text-align":"left"}},E7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),O7={style:{"text-align":"left"}},j7={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},V7=t("td",{style:{"text-align":"center"}},null,-1),D7={style:{"text-align":"left"}},J7=t("code",null,"深度优先搜索",-1),K7=t("code",null,"广度优先搜索",-1),A7=t("code",null,"图",-1),B7=t("code",null,"1+",-1),N7={style:{"text-align":"left"}},T7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),F7={style:{"text-align":"left"}},W7={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},Q7=t("td",{style:{"text-align":"center"}},null,-1),R7={style:{"text-align":"left"}},U7=t("code",null,"深度优先搜索",-1),X7=t("code",null,"广度优先搜索",-1),Z7=t("code",null,"图",-1),G7=t("code",null,"3+",-1),S7={style:{"text-align":"left"}},Y7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 115",-1),$7={style:{"text-align":"left"}},t9={href:"https://leetcode.cn/problems/ur2n8P",target:"_blank",rel:"noopener noreferrer"},e9=t("td",{style:{"text-align":"center"}},null,-1),l9={style:{"text-align":"left"}},o9=t("code",null,"图",-1),s9=t("code",null,"拓扑排序",-1),n9=t("code",null,"数组",-1),d9={style:{"text-align":"left"}},_9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),a9={style:{"text-align":"left"}},c9={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},i9=t("td",{style:{"text-align":"center"}},null,-1),r9={style:{"text-align":"left"}},h9=t("code",null,"深度优先搜索",-1),f9=t("code",null,"广度优先搜索",-1),u9=t("code",null,"并查集",-1),g9=t("code",null,"1+",-1),m9={style:{"text-align":"left"}},y9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),p9={style:{"text-align":"left"}},x9={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},b9=t("td",{style:{"text-align":"center"}},null,-1),k9={style:{"text-align":"left"}},H9=t("code",null,"深度优先搜索",-1),M9=t("code",null,"广度优先搜索",-1),I9=t("code",null,"并查集",-1),w9=t("code",null,"1+",-1),v9={style:{"text-align":"left"}},q9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),L9={style:{"text-align":"left"}},z9={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},P9=t("td",{style:{"text-align":"center"}},null,-1),C9={style:{"text-align":"left"}},E9=t("code",null,"深度优先搜索",-1),O9=t("code",null,"广度优先搜索",-1),j9=t("code",null,"图",-1),V9=t("code",null,"1+",-1),D9={style:{"text-align":"left"}},J9=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),K9={style:{"text-align":"left"}},A9={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},B9=t("td",{style:{"text-align":"center"}},null,-1),N9={style:{"text-align":"left"}},T9=t("code",null,"深度优先搜索",-1),F9=t("code",null,"广度优先搜索",-1),W9=t("code",null,"图",-1),Q9={style:{"text-align":"left"}};function R9(U9,X9){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return c(),i("div",null,[f,t("details",null,[u,g,t("p",null,[e(s,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(s,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/tag/stack.html"},{default:o(()=>[b]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[H]),_:1}),l(),e(s,{to:"/tag/monotonic-queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[C]),_:1}),l(),E,l(),e(s,{to:"/tag/ordered-set.html"},{default:o(()=>[O]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[T]),_:1}),l(),e(s,{to:"/tag/suffix-array.html"},{default:o(()=>[F]),_:1})]),W,t("p",null,[e(s,{to:"/tag/enumeration.html"},{default:o(()=>[Q]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[U]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[X]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[G]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/tag/bucket-sort.html"},{default:o(()=>[Y]),_:1}),l(),e(s,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/tag/counting.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/tag/sliding-window.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/tag/rolling-hash.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(s,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(s,{to:"/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/tag/geometry.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/tag/game-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/tag/combinatorics.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/tag/randomized.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/tag/rejection-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(s,{to:"/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/tag/brainteaser.html"},{default:o(()=>[Pt]),_:1}),l(),e(s,{to:"/tag/interactive.html"},{default:o(()=>[Ct]),_:1}),l(),e(s,{to:"/tag/iterator.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/tag/concurrency.html"},{default:o(()=>[Ot]),_:1})])]),jt,r(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Dt,t("td",Jt,[t("a",Kt,[l("克隆图"),e(n)])]),t("td",At,[e(s,{to:"/problem/0133.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bt,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Nt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Tt]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Ft]),_:1}),l(),Wt]),t("td",Qt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rt,t("td",Ut,[t("a",Xt,[l("课程表"),e(n)])]),t("td",Zt,[e(s,{to:"/problem/0207.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gt,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[St]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Yt]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",se,[l("课程表 II"),e(n)])]),t("td",ne,[e(s,{to:"/problem/0210.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",de,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_e]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ae]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ce]),_:1}),l(),ie]),t("td",re,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[he,t("td",fe,[t("a",ue,[l("以图判树"),e(n)])]),ge,t("td",me,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ye]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[pe]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[xe]),_:1}),l(),be]),t("td",ke,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[He,t("td",Me,[t("a",Ie,[l("火星词典"),e(n)])]),we,t("td",ve,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qe]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Le]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ze]),_:1}),l(),Pe]),t("td",Ce,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ee,t("td",Oe,[t("a",je,[l("搜寻名人"),e(n)])]),Ve,t("td",De,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Je]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[Ke]),_:1}),l(),e(s,{to:"/tag/interactive.html"},{default:o(()=>[Ae]),_:1})]),t("td",Be,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ne,t("td",Te,[t("a",Fe,[l("最小高度树"),e(n)])]),We,t("td",Qe,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Re]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ue]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Xe]),_:1}),l(),Ze]),t("td",Ge,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Se,t("td",Ye,[t("a",$e,[l("无向图中连通分量的数目"),e(n)])]),tl,t("td",el,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ll]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ol]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[sl]),_:1}),l(),nl]),t("td",dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_l,t("td",al,[t("a",cl,[l("矩阵中的最长递增路径"),e(n)])]),il,t("td",rl,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[hl]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ul]),_:1}),l(),gl]),t("td",ml,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yl,t("td",pl,[t("a",xl,[l("重新安排行程"),e(n)])]),bl,t("td",kl,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Hl]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Ml]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[Il]),_:1})]),t("td",wl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vl,t("td",ql,[t("a",Ll,[l("除法求值"),e(n)])]),t("td",zl,[e(s,{to:"/problem/0399.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pl,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Cl]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[El]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Ol]),_:1}),l(),jl]),t("td",Vl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dl,t("td",Jl,[t("a",Kl,[l("序列重建"),e(n)])]),Al,t("td",Bl,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Nl]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[Tl]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Fl]),_:1})]),t("td",Wl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ql,t("td",Rl,[t("a",Ul,[l("迷宫 III"),e(n)])]),Xl,t("td",Zl,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gl]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Sl]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Yl]),_:1}),l(),$l]),t("td",to,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eo,t("td",lo,[t("a",oo,[l("迷宫 II"),e(n)])]),so,t("td",no,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_o]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ao]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[co]),_:1}),l(),io]),t("td",ro,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ho,t("td",fo,[t("a",uo,[l("省份数量"),e(n)])]),go,t("td",mo,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[yo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[po]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[xo]),_:1}),l(),bo]),t("td",ko,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ho,t("td",Mo,[t("a",Io,[l("设计 Excel 求和公式"),e(n)])]),wo,t("td",vo,[e(s,{to:"/tag/graph.html"},{default:o(()=>[qo]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Lo]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[zo]),_:1}),l(),Po]),t("td",Co,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Eo,t("td",Oo,[t("a",jo,[l("冗余连接"),e(n)])]),Vo,t("td",Do,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Jo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ko]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Ao]),_:1}),l(),Bo]),t("td",No,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[To,t("td",Fo,[t("a",Wo,[l("冗余连接 II"),e(n)])]),Qo,t("td",Ro,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Uo]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Xo]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Zo]),_:1}),l(),Go]),t("td",So,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yo,t("td",$o,[t("a",ts,[l("网络延迟时间"),e(n)])]),es,t("td",ls,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[os]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ss]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ns]),_:1}),l(),ds]),t("td",_s,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[as,t("td",cs,[t("a",is,[l("破解保险箱"),e(n)])]),rs,t("td",hs,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fs]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[us]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[gs]),_:1})]),t("td",ms,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ys,t("td",ps,[t("a",xs,[l("情侣牵手"),e(n)])]),bs,t("td",ks,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[Hs]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ms]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Is]),_:1}),l(),ws]),t("td",vs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qs,t("td",Ls,[t("a",zs,[l("判断二分图"),e(n)])]),Ps,t("td",Cs,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Es]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Os]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[js]),_:1}),l(),Vs]),t("td",Ds,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Js,t("td",Ks,[t("a",As,[l("K 站中转内最便宜的航班"),e(n)])]),Bs,t("td",Ns,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ts]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Fs]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Ws]),_:1}),l(),Qs]),t("td",Rs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Us,t("td",Xs,[t("a",Zs,[l("所有可能的路径"),e(n)])]),Gs,t("td",Ss,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ys]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[$s]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[tn]),_:1}),l(),en]),t("td",ln,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[on,t("td",sn,[t("a",nn,[l("找到最终的安全状态"),e(n)])]),dn,t("td",_n,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[an]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[cn]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[rn]),_:1}),l(),hn]),t("td",fn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[un,t("td",gn,[t("a",mn,[l("树中距离之和"),e(n)])]),yn,t("td",pn,[e(s,{to:"/tag/tree.html"},{default:o(()=>[xn]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[bn]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[kn]),_:1}),l(),Hn]),t("td",Mn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[In,t("td",wn,[t("a",vn,[l("钥匙和房间"),e(n)])]),qn,t("td",Ln,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[zn]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Pn]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Cn]),_:1})]),t("td",En,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[On,t("td",jn,[t("a",Vn,[l("访问所有节点的最短路径"),e(n)])]),Dn,t("td",Jn,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Kn]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[An]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Bn]),_:1}),l(),Nn]),t("td",Tn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fn,t("td",Wn,[t("a",Qn,[l("喧闹和富有"),e(n)])]),Rn,t("td",Un,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Xn]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Zn]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[Gn]),_:1}),l(),Sn]),t("td",Yn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$n,t("td",td,[t("a",ed,[l("细分图中的可到达节点"),e(n)])]),ld,t("td",od,[e(s,{to:"/tag/graph.html"},{default:o(()=>[sd]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[nd]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[dd]),_:1})]),t("td",_d,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ad,t("td",cd,[t("a",id,[l("可能的二分法"),e(n)])]),rd,t("td",hd,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[fd]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ud]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[gd]),_:1}),l(),md]),t("td",yd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pd,t("td",xd,[t("a",bd,[l("猫和老鼠"),e(n)])]),kd,t("td",Hd,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Md]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[Id]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[wd]),_:1}),l(),vd]),t("td",qd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ld,t("td",zd,[t("a",Pd,[l("尽量减少恶意软件的传播"),e(n)])]),Cd,t("td",Ed,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Od]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[jd]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Vd]),_:1}),l(),Dd]),t("td",Jd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kd,t("td",Ad,[t("a",Bd,[l("尽量减少恶意软件的传播 II"),e(n)])]),Nd,t("td",Td,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Fd]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Wd]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Qd]),_:1}),l(),Rd]),t("td",Ud,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xd,t("td",Zd,[t("a",Gd,[l("移除最多的同行或同列石头"),e(n)])]),Sd,t("td",Yd,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$d]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[t_]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[e_]),_:1}),l(),l_]),t("td",o_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s_,t("td",n_,[t("a",d_,[l("等式方程的可满足性"),e(n)])]),__,t("td",a_,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[c_]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[i_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[r_]),_:1}),l(),h_]),t("td",f_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u_,t("td",g_,[t("a",m_,[l("找到小镇的法官"),e(n)])]),y_,t("td",p_,[e(s,{to:"/tag/graph.html"},{default:o(()=>[x_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[b_]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[k_]),_:1})]),t("td",H_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[M_,t("td",I_,[t("a",w_,[l("不邻接植花"),e(n)])]),v_,t("td",q_,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[L_]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[z_]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[P_]),_:1})]),t("td",C_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E_,t("td",O_,[t("a",j_,[l("从始点到终点的所有路径"),e(n)])]),V_,t("td",D_,[e(s,{to:"/tag/graph.html"},{default:o(()=>[J_]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[K_]),_:1})]),t("td",A_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B_,t("td",N_,[t("a",T_,[l("颜色交替的最短路径"),e(n)])]),F_,t("td",W_,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Q_]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[R_]),_:1})]),t("td",U_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X_,t("td",Z_,[t("a",G_,[l("最低成本连通所有城市"),e(n)])]),S_,t("td",Y_,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[$_]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ta]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[ea]),_:1}),l(),la]),t("td",oa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sa,t("td",na,[t("a",da,[l("并行课程"),e(n)])]),_a,t("td",aa,[e(s,{to:"/tag/graph.html"},{default:o(()=>[ca]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[ia]),_:1})]),t("td",ra,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ha,t("td",fa,[t("a",ua,[l("水资源分配优化"),e(n)])]),ga,t("td",ma,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[ya]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[pa]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[xa]),_:1}),l(),ba]),t("td",ka,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ha,t("td",Ma,[t("a",Ia,[l("查找集群内的关键连接"),e(n)])]),wa,t("td",va,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[qa]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[La]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[za]),_:1})]),t("td",Pa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ca,t("td",Ea,[t("a",Oa,[l("项目管理"),e(n)])]),ja,t("td",Va,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Da]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ja]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Ka]),_:1}),l(),Aa]),t("td",Ba,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Na,t("td",Ta,[t("a",Fa,[l("树的直径"),e(n)])]),Wa,t("td",Qa,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Ra]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Ua]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Xa]),_:1}),l(),Za]),t("td",Ga,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sa,t("td",Ya,[t("a",$a,[l("你能从盒子里获得的最大糖果数"),e(n)])]),tc,t("td",ec,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[lc]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[oc]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[sc]),_:1})]),t("td",nc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dc,t("td",_c,[t("a",ac,[l("获取你好友已观看的视频"),e(n)])]),cc,t("td",ic,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[rc]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[hc]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[fc]),_:1}),l(),uc]),t("td",gc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mc,t("td",yc,[t("a",pc,[l("连通网络的操作次数"),e(n)])]),xc,t("td",bc,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[kc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Hc]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Mc]),_:1}),l(),Ic]),t("td",wc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vc,t("td",qc,[t("a",Lc,[l("阈值距离内邻居最少的城市"),e(n)])]),zc,t("td",Pc,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Cc]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ec]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[Oc]),_:1})]),t("td",jc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vc,t("td",Dc,[t("a",Jc,[l("验证二叉树"),e(n)])]),Kc,t("td",Ac,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Bc]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Nc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Tc]),_:1}),l(),Fc]),t("td",Wc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qc,t("td",Rc,[t("a",Uc,[l("使网格图至少有一条有效路径的最小代价"),e(n)])]),Xc,t("td",Zc,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Gc]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Sc]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Yc]),_:1}),l(),$c]),t("td",ti,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ei,t("td",li,[t("a",oi,[l("T 秒后青蛙的位置"),e(n)])]),si,t("td",ni,[e(s,{to:"/tag/tree.html"},{default:o(()=>[di]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_i]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ai]),_:1}),l(),ci]),t("td",ii,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ri,t("td",hi,[t("a",fi,[l("课程表 IV"),e(n)])]),ui,t("td",gi,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mi]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[yi]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[pi]),_:1}),l(),xi]),t("td",bi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ki,t("td",Hi,[t("a",Mi,[l("重新规划路线"),e(n)])]),Ii,t("td",wi,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vi]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[qi]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Li]),_:1})]),t("td",zi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pi,t("td",Ci,[t("a",Ei,[l("找到最小生成树里的关键边和伪关键边"),e(n)])]),Oi,t("td",ji,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[Vi]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Di]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[Ji]),_:1}),l(),Ki]),t("td",Ai,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bi,t("td",Ni,[t("a",Ti,[l("并行课程 II"),e(n)])]),Fi,t("td",Wi,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Qi]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Ri]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Ui]),_:1}),l(),Xi]),t("td",Zi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gi,t("td",Si,[t("a",Yi,[l("概率最大的路径"),e(n)])]),$i,t("td",tr,[e(s,{to:"/tag/graph.html"},{default:o(()=>[er]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[lr]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[or]),_:1}),l(),sr]),t("td",nr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dr,t("td",_r,[t("a",ar,[l("图中最相似的路径"),e(n)])]),cr,t("td",ir,[e(s,{to:"/tag/graph.html"},{default:o(()=>[rr]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[hr]),_:1})]),t("td",fr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ur,t("td",gr,[t("a",mr,[l("可以到达所有点的最少点数目"),e(n)])]),yr,t("td",pr,[e(s,{to:"/tag/graph.html"},{default:o(()=>[xr]),_:1})]),t("td",br,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kr,t("td",Hr,[t("a",Mr,[l("保证图可完全遍历"),e(n)])]),Ir,t("td",wr,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[vr]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[qr]),_:1})]),t("td",Lr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zr,t("td",Pr,[t("a",Cr,[l("连接所有点的最小费用"),e(n)])]),Er,t("td",Or,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[jr]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Vr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Dr]),_:1}),l(),Jr]),t("td",Kr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ar,t("td",Br,[t("a",Nr,[l("奇怪的打印机 II"),e(n)])]),Tr,t("td",Fr,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Wr]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[Qr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Rr]),_:1}),l(),Ur]),t("td",Xr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zr,t("td",Gr,[t("a",Sr,[l("最大网络秩"),e(n)])]),Yr,t("td",$r,[e(s,{to:"/tag/graph.html"},{default:o(()=>[th]),_:1})]),t("td",eh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lh,t("td",oh,[t("a",sh,[l("矩阵转换后的秩"),e(n)])]),nh,t("td",dh,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[_h]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ah]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[ch]),_:1}),l(),ih]),t("td",rh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hh,t("td",fh,[t("a",uh,[l("检查边长度限制的路径是否存在"),e(n)])]),gh,t("td",mh,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[yh]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ph]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[xh]),_:1}),l(),bh]),t("td",kh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hh,t("td",Mh,[t("a",Ih,[l("重构一棵树的方案数"),e(n)])]),wh,t("td",vh,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qh]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Lh]),_:1})]),t("td",zh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ph,t("td",Ch,[t("a",Eh,[l("检查边长度限制的路径是否存在 II"),e(n)])]),Oh,t("td",jh,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[Vh]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Dh]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[Jh]),_:1})]),t("td",Kh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ah,t("td",Bh,[t("a",Nh,[l("猫和老鼠 II"),e(n)])]),Th,t("td",Fh,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Wh]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[Qh]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[Rh]),_:1}),l(),Uh]),t("td",Xh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zh,t("td",Gh,[t("a",Sh,[l("一个图中连通三元组的最小度数"),e(n)])]),Yh,t("td",$h,[e(s,{to:"/tag/graph.html"},{default:o(()=>[t1]),_:1})]),t("td",e1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l1,t("td",o1,[t("a",s1,[l("未知网格中的最短路径"),e(n)])]),n1,t("td",d1,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[a1]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[c1]),_:1}),l(),i1]),t("td",r1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h1,t("td",f1,[t("a",u1,[l("统计点对的数目"),e(n)])]),g1,t("td",m1,[e(s,{to:"/tag/graph.html"},{default:o(()=>[y1]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[p1]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[x1]),_:1}),l(),b1]),t("td",k1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H1,t("td",M1,[t("a",I1,[l("从第一个节点出发到最后一个节点的受限路径数"),e(n)])]),w1,t("td",v1,[e(s,{to:"/tag/graph.html"},{default:o(()=>[q1]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[L1]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[z1]),_:1}),l(),P1]),t("td",C1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E1,t("td",O1,[t("a",j1,[l("找出星型图的中心节点"),e(n)])]),V1,t("td",D1,[e(s,{to:"/tag/graph.html"},{default:o(()=>[J1]),_:1})]),t("td",K1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[A1,t("td",B1,[t("a",N1,[l("隐藏网格下的最小消耗路径"),e(n)])]),T1,t("td",F1,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[W1]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Q1]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[R1]),_:1}),l(),U1]),t("td",X1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z1,t("td",G1,[t("a",S1,[l("最多邀请的个数"),e(n)])]),Y1,t("td",$1,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[tf]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ef]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[lf]),_:1}),l(),of]),t("td",sf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nf,t("td",df,[t("a",_f,[l("有向图中最大颜色值"),e(n)])]),af,t("td",cf,[e(s,{to:"/tag/graph.html"},{default:o(()=>[rf]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[hf]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[ff]),_:1}),l(),uf]),t("td",gf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mf,t("td",yf,[t("a",pf,[l("统计为蚁群构筑房间的不同顺序"),e(n)])]),xf,t("td",bf,[e(s,{to:"/tag/tree.html"},{default:o(()=>[kf]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Hf]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[Mf]),_:1}),l(),If]),t("td",wf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vf,t("td",qf,[t("a",Lf,[l("规定时间内到达终点的最小花费"),e(n)])]),zf,t("td",Pf,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Cf]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ef]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Of]),_:1})]),t("td",jf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vf,t("td",Df,[t("a",Jf,[l("寻找图中是否存在路径"),e(n)])]),Kf,t("td",Af,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Bf]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Nf]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Tf]),_:1}),l(),Ff]),t("td",Wf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qf,t("td",Rf,[t("a",Uf,[l("到达目的地的方案数"),e(n)])]),Xf,t("td",Zf,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Gf]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[Sf]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Yf]),_:1}),l(),$f]),t("td",tu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eu,t("td",lu,[t("a",ou,[l("网络空闲的时刻"),e(n)])]),su,t("td",nu,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[du]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[_u]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[au]),_:1})]),t("td",cu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iu,t("td",ru,[t("a",hu,[l("到达目的地的第二短时间"),e(n)])]),fu,t("td",uu,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[gu]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[mu]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[yu]),_:1})]),t("td",pu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xu,t("td",bu,[t("a",ku,[l("并行课程 III"),e(n)])]),Hu,t("td",Mu,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Iu]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[wu]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[vu]),_:1}),l(),qu]),t("td",Lu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zu,t("td",Pu,[t("a",Cu,[l("最大化一张图中的路径价值"),e(n)])]),Eu,t("td",Ou,[e(s,{to:"/tag/graph.html"},{default:o(()=>[ju]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Vu]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[Du]),_:1})]),t("td",Ju,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ku,t("td",Au,[t("a",Bu,[l("处理含限制条件的好友请求"),e(n)])]),Nu,t("td",Tu,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[Fu]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Wu]),_:1})]),t("td",Qu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ru,t("td",Uu,[t("a",Xu,[l("殊途同归"),e(n)])]),Zu,t("td",Gu,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Su]),_:1})]),t("td",Yu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$u,t("td",tg,[t("a",eg,[l("找出知晓秘密的所有专家"),e(n)])]),lg,t("td",og,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[sg]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ng]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[dg]),_:1}),l(),_g]),t("td",ag,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cg,t("td",ig,[t("a",rg,[l("前往目标城市的最小费用"),e(n)])]),hg,t("td",fg,[e(s,{to:"/tag/graph.html"},{default:o(()=>[ug]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[gg]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[mg]),_:1})]),t("td",yg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pg,t("td",xg,[t("a",bg,[l("合法重新排列数对"),e(n)])]),kg,t("td",Hg,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Mg]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Ig]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[wg]),_:1})]),t("td",vg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qg,t("td",Lg,[t("a",zg,[l("引爆最多的炸弹"),e(n)])]),Pg,t("td",Cg,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Eg]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Og]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[jg]),_:1}),l(),Vg]),t("td",Dg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jg,t("td",Kg,[t("a",Ag,[l("从给定原材料中找到所有可以做出的菜"),e(n)])]),Bg,t("td",Ng,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Tg]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[Fg]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Wg]),_:1}),l(),Qg]),t("td",Rg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ug,t("td",Xg,[t("a",Zg,[l("使矩阵中的 1 互不相邻的最小操作数"),e(n)])]),Gg,t("td",Sg,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Yg]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[$g]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[tm]),_:1})]),t("td",em,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lm,t("td",om,[t("a",sm,[l("参加会议的最多员工数"),e(n)])]),nm,t("td",dm,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_m]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[am]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[cm]),_:1})]),t("td",im,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rm,t("td",hm,[t("a",fm,[l("有向无环图中一个节点的所有祖先"),e(n)])]),um,t("td",gm,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[ym]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[pm]),_:1}),l(),xm]),t("td",bm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[km,t("td",Hm,[t("a",Mm,[l("得到要求路径的最小带权子图"),e(n)])]),Im,t("td",wm,[e(s,{to:"/tag/graph.html"},{default:o(()=>[vm]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[qm]),_:1})]),t("td",Lm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zm,t("td",Pm,[t("a",Cm,[l("无向图中到环的距离"),e(n)])]),Em,t("td",Om,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jm]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Vm]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Dm]),_:1}),l(),Jm]),t("td",Km,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Am,t("td",Bm,[t("a",Nm,[l("节点序列的最大得分"),e(n)])]),Tm,t("td",Fm,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Wm]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Qm]),_:1}),l(),e(s,{to:"/tag/enumeration.html"},{default:o(()=>[Rm]),_:1}),l(),Um]),t("td",Xm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zm,t("td",Gm,[t("a",Sm,[l("相邻字符不同的最长路径"),e(n)])]),Ym,t("td",$m,[e(s,{to:"/tag/tree.html"},{default:o(()=>[ty]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[ey]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ly]),_:1}),l(),oy]),t("td",sy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ny,t("td",dy,[t("a",_y,[l("K 条高速公路的最大旅行费用"),e(n)])]),ay,t("td",cy,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[iy]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ry]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[hy]),_:1}),l(),fy]),t("td",uy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gy,t("td",my,[t("a",yy,[l("道路的最大总重要性"),e(n)])]),py,t("td",xy,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[by]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ky]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[Hy]),_:1}),l(),My]),t("td",Iy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wy,t("td",vy,[t("a",qy,[l("到达角落需要移除障碍物的最小数目"),e(n)])]),Ly,t("td",zy,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Py]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Cy]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ey]),_:1}),l(),Oy]),t("td",jy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vy,t("td",Dy,[t("a",Jy,[l("跳跃游戏 VIII"),e(n)])]),Ky,t("td",Ay,[e(s,{to:"/tag/stack.html"},{default:o(()=>[By]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Ny]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ty]),_:1}),l(),Fy]),t("td",Wy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qy,t("td",Ry,[t("a",Uy,[l("检查方程中的矛盾之处"),e(n)])]),Xy,t("td",Zy,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Gy]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Sy]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Yy]),_:1}),l(),$y]),t("td",tp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ep,t("td",lp,[t("a",op,[l("统计无向图中无法互相到达点对数"),e(n)])]),sp,t("td",np,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[dp]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[_p]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[ap]),_:1}),l(),cp]),t("td",ip,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rp,t("td",hp,[t("a",fp,[l("网格图中递增路径的数目"),e(n)])]),up,t("td",gp,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[mp]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[yp]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[pp]),_:1}),l(),xp]),t("td",bp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kp,t("td",Hp,[t("a",Mp,[l("找到离给定两个节点最近的节点"),e(n)])]),Ip,t("td",wp,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[vp]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[qp]),_:1})]),t("td",Lp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zp,t("td",Pp,[t("a",Cp,[l("图中的最长环"),e(n)])]),Ep,t("td",Op,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[jp]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Vp]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[Dp]),_:1})]),t("td",Jp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kp,t("td",Ap,[t("a",Bp,[l("受限条件下可到达节点的数目"),e(n)])]),Np,t("td",Tp,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Fp]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Wp]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Qp]),_:1}),l(),Rp]),t("td",Up,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xp,t("td",Zp,[t("a",Gp,[l("最小化网格中的最大值"),e(n)])]),Sp,t("td",Yp,[e(s,{to:"/tag/union-find.html"},{default:o(()=>[$p]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[tx]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[ex]),_:1}),l(),lx]),t("td",ox,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sx,t("td",nx,[t("a",dx,[l("边积分最高的节点"),e(n)])]),_x,t("td",ax,[e(s,{to:"/tag/graph.html"},{default:o(()=>[cx]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[ix]),_:1})]),t("td",rx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hx,t("td",fx,[t("a",ux,[l("给定条件下构造矩阵"),e(n)])]),gx,t("td",mx,[e(s,{to:"/tag/graph.html"},{default:o(()=>[yx]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[px]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[xx]),_:1}),l(),bx]),t("td",kx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hx,t("td",Mx,[t("a",Ix,[l("好路径的数目"),e(n)])]),wx,t("td",vx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[qx]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Lx]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[zx]),_:1}),l(),Px]),t("td",Cx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ex,t("td",Ox,[t("a",jx,[l("树上最大得分和路径"),e(n)])]),Vx,t("td",Dx,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Jx]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Kx]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Ax]),_:1}),l(),Bx]),t("td",Nx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tx,t("td",Fx,[t("a",Wx,[l("购买苹果的最低成本"),e(n)])]),Qx,t("td",Rx,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Ux]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Xx]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[Zx]),_:1}),l(),Gx]),t("td",Sx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yx,t("td",$x,[t("a",t3,[l("到达首都的最少油耗"),e(n)])]),e3,t("td",l3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[o3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[s3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[n3]),_:1}),l(),d3]),t("td",_3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a3,t("td",c3,[t("a",i3,[l("两个不重叠子树的最大异或值"),e(n)])]),r3,t("td",h3,[e(s,{to:"/tag/tree.html"},{default:o(()=>[f3]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[u3]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[g3]),_:1}),l(),m3]),t("td",y3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p3,t("td",x3,[t("a",b3,[l("两个城市间路径的最小分数"),e(n)])]),k3,t("td",H3,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[M3]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[I3]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[w3]),_:1}),l(),v3]),t("td",q3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L3,t("td",z3,[t("a",P3,[l("将节点分成尽可能多的组"),e(n)])]),C3,t("td",E3,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[O3]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[j3]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[V3]),_:1})]),t("td",D3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J3,t("td",K3,[t("a",A3,[l("图中最大星和"),e(n)])]),B3,t("td",N3,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[T3]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[F3]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[W3]),_:1}),l(),Q3]),t("td",R3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U3,t("td",X3,[t("a",Z3,[l("添加边使所有节点度数都为偶数"),e(n)])]),G3,t("td",S3,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Y3]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[$3]),_:1})]),t("td",tb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eb,t("td",lb,[t("a",ob,[l("在网格图中访问一个格子的最少时间"),e(n)])]),sb,t("td",nb,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[db]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[_b]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ab]),_:1}),l(),cb]),t("td",ib,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rb,t("td",hb,[t("a",fb,[l("收集树中金币"),e(n)])]),ub,t("td",gb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[mb]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[yb]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[pb]),_:1}),l(),xb]),t("td",bb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kb,t("td",Hb,[t("a",Mb,[l("图中的最短环"),e(n)])]),Ib,t("td",wb,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[vb]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[qb]),_:1})]),t("td",Lb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zb,t("td",Pb,[t("a",Cb,[l("设计可以求最短路径的图类"),e(n)])]),Eb,t("td",Ob,[e(s,{to:"/tag/graph.html"},{default:o(()=>[jb]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Vb]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[Db]),_:1}),l(),Jb]),t("td",Kb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ab,t("td",Bb,[t("a",Nb,[l("最小化旅行的价格总和"),e(n)])]),Tb,t("td",Fb,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Wb]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[Qb]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Rb]),_:1}),l(),Ub]),t("td",Xb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zb,t("td",Gb,[t("a",Sb,[l("前往目标的最小代价"),e(n)])]),Yb,t("td",$b,[e(s,{to:"/tag/graph.html"},{default:o(()=>[t4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[e4]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[l4]),_:1}),l(),o4]),t("td",s4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n4,t("td",d4,[t("a",_4,[l("统计完全连通分量的数量"),e(n)])]),a4,t("td",c4,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[i4]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[r4]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[h4]),_:1})]),t("td",f4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u4,t("td",g4,[t("a",m4,[l("修改图中的边权"),e(n)])]),y4,t("td",p4,[e(s,{to:"/tag/graph.html"},{default:o(()=>[x4]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[b4]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[k4]),_:1})]),t("td",H4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[M4,t("td",I4,[t("a",w4,[l("找到 K 次跨越的最短路径"),e(n)])]),v4,t("td",q4,[e(s,{to:"/tag/graph.html"},{default:o(()=>[L4]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[z4]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[P4]),_:1})]),t("td",C4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E4,t("td",O4,[t("a",j4,[l("找到最近的标记节点"),e(n)])]),V4,t("td",D4,[e(s,{to:"/tag/graph.html"},{default:o(()=>[J4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[K4]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[A4]),_:1}),l(),B4]),t("td",N4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T4,t("td",F4,[t("a",W4,[l("边权重均等查询"),e(n)])]),Q4,t("td",R4,[e(s,{to:"/tag/tree.html"},{default:o(()=>[U4]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[X4]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Z4]),_:1}),l(),G4]),t("td",S4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y4,t("td",$4,[t("a",t2,[l("可以到达每一个节点的最少边反转次数"),e(n)])]),e2,t("td",l2,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[o2]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[s2]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[n2]),_:1}),l(),d2]),t("td",_2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[a2,t("td",c2,[t("a",i2,[l("有向图访问计数"),e(n)])]),r2,t("td",h2,[e(s,{to:"/tag/graph.html"},{default:o(()=>[f2]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[u2]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[g2]),_:1})]),t("td",m2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y2,t("td",p2,[t("a",x2,[l("找到冠军 II"),e(n)])]),b2,t("td",k2,[e(s,{to:"/tag/graph.html"},{default:o(()=>[H2]),_:1})]),t("td",M2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I2,t("td",w2,[t("a",v2,[l("关闭分部的可行集合数目"),e(n)])]),q2,t("td",L2,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[z2]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[P2]),_:1}),l(),e(s,{to:"/tag/enumeration.html"},{default:o(()=>[C2]),_:1}),l(),E2]),t("td",O2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j2,t("td",V2,[t("a",D2,[l("转换字符串的最小成本 I"),e(n)])]),J2,t("td",K2,[e(s,{to:"/tag/graph.html"},{default:o(()=>[A2]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[B2]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[N2]),_:1}),l(),T2]),t("td",F2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W2,t("td",Q2,[t("a",R2,[l("转换字符串的最小成本 II"),e(n)])]),U2,t("td",X2,[e(s,{to:"/tag/graph.html"},{default:o(()=>[Z2]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[G2]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[S2]),_:1}),l(),Y2]),t("td",$2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t0,t("td",e0,[t("a",l0,[l("按距离统计房屋对数目 I"),e(n)])]),o0,t("td",s0,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[n0]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[d0]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[_0]),_:1})]),t("td",a0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c0,t("td",i0,[t("a",r0,[l("按距离统计房屋对数目 II"),e(n)])]),h0,t("td",f0,[e(s,{to:"/tag/graph.html"},{default:o(()=>[u0]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[g0]),_:1})]),t("td",m0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y0,t("td",p0,[t("a",x0,[l("带权图里旅途的最小代价"),e(n)])]),b0,t("td",k0,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[H0]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[M0]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[I0]),_:1}),l(),w0]),t("td",v0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[q0,t("td",L0,[t("a",z0,[l("访问消失节点的最少时间"),e(n)])]),P0,t("td",C0,[e(s,{to:"/tag/graph.html"},{default:o(()=>[E0]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[O0]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[j0]),_:1}),l(),V0]),t("td",D0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J0,t("td",K0,[t("a",A0,[l("最短路径中的边"),e(n)])]),B0,t("td",N0,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[T0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[F0]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[W0]),_:1}),l(),Q0]),t("td",R0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U0,t("td",X0,[t("a",Z0,[l("合并两棵树后的最小直径"),e(n)])]),G0,t("td",S0,[e(s,{to:"/tag/tree.html"},{default:o(()=>[Y0]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[$0]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[t6]),_:1}),l(),e6]),t("td",l6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o6,t("td",s6,[t("a",n6,[l("标记所有节点需要的时间"),e(n)])]),d6,t("td",_6,[e(s,{to:"/tag/tree.html"},{default:o(()=>[a6]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[c6]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[i6]),_:1}),l(),r6]),t("td",h6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f6,t("td",u6,[t("a",g6,[l("新增道路查询后的最短距离 I"),e(n)])]),m6,t("td",y6,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[p6]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[x6]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[b6]),_:1})]),t("td",k6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H6,t("td",M6,[t("a",I6,[l("新增道路查询后的最短距离 II"),e(n)])]),w6,t("td",v6,[e(s,{to:"/tag/greedy.html"},{default:o(()=>[q6]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[L6]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[z6]),_:1}),l(),P6]),t("td",C6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E6,t("td",O6,[t("a",j6,[l("穿越网格图的安全路径"),e(n)])]),V6,t("td",D6,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[J6]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[K6]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[A6]),_:1}),l(),B6]),t("td",N6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T6,t("td",F6,[t("a",W6,[l("移除可疑的方法"),e(n)])]),Q6,t("td",R6,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[U6]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[X6]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Z6]),_:1})]),t("td",G6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S6,t("td",Y6,[t("a",$6,[l("构造符合图结构的二维矩阵"),e(n)])]),t5,t("td",e5,[e(s,{to:"/tag/graph.html"},{default:o(()=>[l5]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[o5]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[s5]),_:1}),l(),n5]),t("td",d5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_5,t("td",a5,[t("a",c5,[l("覆盖"),e(n)])]),i5,t("td",r5,[e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[h5]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[f5]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[u5]),_:1}),l(),g5]),t("td",m5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y5,t("td",p5,[t("a",x5,[l("传递信息"),e(n)])]),b5,t("td",k5,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[H5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[M5]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[I5]),_:1}),l(),w5]),t("td",v5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[q5,t("td",L5,[t("a",z5,[l("游乐园的游览计划"),e(n)])]),P5,t("td",C5,[e(s,{to:"/tag/graph.html"},{default:o(()=>[E5]),_:1}),l(),e(s,{to:"/tag/geometry.html"},{default:o(()=>[O5]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[j5]),_:1})]),t("td",V5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D5,t("td",J5,[t("a",K5,[l("追逐游戏"),e(n)])]),A5,t("td",B5,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[N5]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[T5]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[F5]),_:1}),l(),W5]),t("td",Q5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R5,t("td",U5,[t("a",X5,[l("电动车游城市"),e(n)])]),Z5,t("td",G5,[e(s,{to:"/tag/graph.html"},{default:o(()=>[S5]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[Y5]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[$5]),_:1})]),t("td",t8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e8,t("td",l8,[t("a",o8,[l("志愿者调配"),e(n)])]),s8,t("td",n8,[e(s,{to:"/tag/graph.html"},{default:o(()=>[d8]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[_8]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[a8]),_:1})]),t("td",c8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i8,t("td",r8,[t("a",h8,[l("夺回据点"),e(n)])]),f8,t("td",u8,[e(s,{to:"/tag/graph.html"},{default:o(()=>[g8]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[m8]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[y8]),_:1})]),t("td",p8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x8,t("td",b8,[t("a",k8,[l("信物传送"),e(n)])]),H8,t("td",M8,[e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[I8]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[w8]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[v8]),_:1}),l(),q8]),t("td",L8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z8,t("td",P8,[t("a",C8,[l("交通枢纽"),e(n)])]),E8,t("td",O8,[e(s,{to:"/tag/graph.html"},{default:o(()=>[j8]),_:1})]),t("td",V8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D8,t("td",J8,[t("a",K8,[l("弹珠游戏"),e(n)])]),A8,t("td",B8,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[N8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[T8]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[F8]),_:1}),l(),W8]),t("td",Q8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R8,t("td",U8,[t("a",X8,[l("二分图"),e(n)])]),Z8,t("td",G8,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[S8]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Y8]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[$8]),_:1}),l(),t7]),t("td",e7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l7,t("td",o7,[t("a",s7,[l("所有路径"),e(n)])]),n7,t("td",d7,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[_7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[a7]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[c7]),_:1}),l(),i7]),t("td",r7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h7,t("td",f7,[t("a",u7,[l("计算除法"),e(n)])]),g7,t("td",m7,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[y7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[p7]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[x7]),_:1}),l(),b7]),t("td",k7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H7,t("td",M7,[t("a",I7,[l("最长递增路径"),e(n)])]),w7,t("td",v7,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[q7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[L7]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[z7]),_:1}),l(),P7]),t("td",C7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E7,t("td",O7,[t("a",j7,[l("课程顺序"),e(n)])]),V7,t("td",D7,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[J7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[K7]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[A7]),_:1}),l(),B7]),t("td",N7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T7,t("td",F7,[t("a",W7,[l("外星文字典"),e(n)])]),Q7,t("td",R7,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[U7]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[X7]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[Z7]),_:1}),l(),G7]),t("td",S7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y7,t("td",$7,[t("a",t9,[l("重建序列"),e(n)])]),e9,t("td",l9,[e(s,{to:"/tag/graph.html"},{default:o(()=>[o9]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[s9]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[n9]),_:1})]),t("td",d9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_9,t("td",a9,[t("a",c9,[l("省份数量"),e(n)])]),i9,t("td",r9,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[h9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[f9]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[u9]),_:1}),l(),g9]),t("td",m9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y9,t("td",p9,[t("a",x9,[l("多余的边"),e(n)])]),b9,t("td",k9,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[H9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[M9]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[I9]),_:1}),l(),w9]),t("td",v9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q9,t("td",L9,[t("a",z9,[l("分割回文子字符串"),e(n)])]),P9,t("td",C9,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[E9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[O9]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[j9]),_:1}),l(),V9]),t("td",D9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J9,t("td",K9,[t("a",A9,[l("节点间通路"),e(n)])]),B9,t("td",N9,[e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[T9]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[F9]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[W9]),_:1})]),t("td",Q9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const G9=a(h,[["render",R9],["__file","graph.html.vue"]]);export{G9 as default};
