import{_ as a,r as _,o as c,c as i,a as t,d as e,w as o,b as l,f as r}from"./app-5LzGvT4H.js";const h={},u=t("h1",{id:"队列",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#队列","aria-hidden":"true"},"#"),l(" 队列")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),q=t("span",{class:"blue"},"队列",-1),M=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),H=t("code",null,"哈希表",-1),v=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),I=t("code",null,"树",-1),E=t("code",null,"二叉树",-1),j=t("code",null,"二叉搜索树",-1),O=t("code",null,"最小生成树",-1),K=t("code",null,"图",-1),L=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),C=t("code",null,"最短路",-1),N=t("code",null,"强连通分量",-1),B=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),P=t("code",null,"字典树",-1),Q=t("code",null,"线段树",-1),T=t("code",null,"树状数组",-1),U=t("code",null,"后缀数组",-1),A=t("p",null,[t("strong",null,"算法")],-1),F=t("code",null,"枚举",-1),G=t("code",null,"递归",-1),J=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),X=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ut=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),qt=t("code",null,"组合数学",-1),Mt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),Ht=t("code",null,"水塘抽样",-1),vt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),It=t("code",null,"设计",-1),Et=t("code",null,"数据流",-1),jt=t("code",null,"脑筋急转弯",-1),Ot=t("code",null,"交互",-1),Kt=t("code",null,"迭代器",-1),Lt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Nt=t("td",{style:{"text-align":"center"}},"225",-1),Bt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"center"}},Pt={style:{"text-align":"left"}},Qt=t("code",null,"栈",-1),Tt=t("code",null,"设计",-1),Ut=t("code",null,"队列",-1),At={style:{"text-align":"left"}},Ft=t("td",{style:{"text-align":"center"}},"232",-1),Gt={style:{"text-align":"left"}},Jt={href:"https://leetcode.com/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},St={style:{"text-align":"center"}},Wt={style:{"text-align":"left"}},Xt=t("code",null,"栈",-1),Yt=t("code",null,"设计",-1),Zt=t("code",null,"队列",-1),$t={style:{"text-align":"left"}},te=t("td",{style:{"text-align":"center"}},"239",-1),ee={style:{"text-align":"left"}},le={href:"https://leetcode.com/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},oe={style:{"text-align":"center"}},ne={style:{"text-align":"left"}},se=t("code",null,"队列",-1),de=t("code",null,"数组",-1),_e=t("code",null,"滑动窗口",-1),ae=t("code",null,"2+",-1),ce={style:{"text-align":"left"}},ie=t("td",{style:{"text-align":"center"}},"281",-1),re={style:{"text-align":"left"}},he={href:"https://leetcode.com/problems/zigzag-iterator",target:"_blank",rel:"noopener noreferrer"},ue=t("td",{style:{"text-align":"center"}},null,-1),fe={style:{"text-align":"left"}},ge=t("code",null,"设计",-1),me=t("code",null,"队列",-1),ye=t("code",null,"数组",-1),xe=t("code",null,"1+",-1),be={style:{"text-align":"left"}},pe=t("td",{style:{"text-align":"center"}},"341",-1),ke={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},null,-1),we={style:{"text-align":"left"}},He=t("code",null,"栈",-1),ve=t("code",null,"树",-1),ze=t("code",null,"深度优先搜索",-1),Ie=t("code",null,"3+",-1),Ee={style:{"text-align":"left"}},je=t("td",{style:{"text-align":"center"}},"346",-1),Oe={style:{"text-align":"left"}},Ke={href:"https://leetcode.com/problems/moving-average-from-data-stream",target:"_blank",rel:"noopener noreferrer"},Le={style:{"text-align":"center"}},Ve={style:{"text-align":"left"}},Ce=t("code",null,"设计",-1),Ne=t("code",null,"队列",-1),Be=t("code",null,"数组",-1),Re=t("code",null,"1+",-1),De={style:{"text-align":"left"}},Pe=t("td",{style:{"text-align":"center"}},"353",-1),Qe={style:{"text-align":"left"}},Te={href:"https://leetcode.com/problems/design-snake-game",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},null,-1),Ae={style:{"text-align":"left"}},Fe=t("code",null,"设计",-1),Ge=t("code",null,"队列",-1),Je=t("code",null,"数组",-1),Se=t("code",null,"2+",-1),We={style:{"text-align":"left"}},Xe=t("td",{style:{"text-align":"center"}},"362",-1),Ye={style:{"text-align":"left"}},Ze={href:"https://leetcode.com/problems/design-hit-counter",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},null,-1),tl={style:{"text-align":"left"}},el=t("code",null,"设计",-1),ll=t("code",null,"队列",-1),ol=t("code",null,"数组",-1),nl=t("code",null,"2+",-1),sl={style:{"text-align":"left"}},dl=t("td",{style:{"text-align":"center"}},"379",-1),_l={style:{"text-align":"left"}},al={href:"https://leetcode.com/problems/design-phone-directory",target:"_blank",rel:"noopener noreferrer"},cl={style:{"text-align":"center"}},il={style:{"text-align":"left"}},rl=t("code",null,"设计",-1),hl=t("code",null,"队列",-1),ul=t("code",null,"数组",-1),fl=t("code",null,"2+",-1),gl={style:{"text-align":"left"}},ml=t("td",{style:{"text-align":"center"}},"387",-1),yl={style:{"text-align":"left"}},xl={href:"https://leetcode.com/problems/first-unique-character-in-a-string",target:"_blank",rel:"noopener noreferrer"},bl=t("td",{style:{"text-align":"center"}},null,-1),pl={style:{"text-align":"left"}},kl=t("code",null,"队列",-1),ql=t("code",null,"哈希表",-1),Ml=t("code",null,"字符串",-1),wl=t("code",null,"1+",-1),Hl={style:{"text-align":"left"}},vl=t("td",{style:{"text-align":"center"}},"622",-1),zl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/design-circular-queue",target:"_blank",rel:"noopener noreferrer"},El={style:{"text-align":"center"}},jl={style:{"text-align":"left"}},Ol=t("code",null,"设计",-1),Kl=t("code",null,"队列",-1),Ll=t("code",null,"数组",-1),Vl=t("code",null,"1+",-1),Cl={style:{"text-align":"left"}},Nl=t("td",{style:{"text-align":"center"}},"641",-1),Bl={style:{"text-align":"left"}},Rl={href:"https://leetcode.com/problems/design-circular-deque",target:"_blank",rel:"noopener noreferrer"},Dl={style:{"text-align":"center"}},Pl={style:{"text-align":"left"}},Ql=t("code",null,"设计",-1),Tl=t("code",null,"队列",-1),Ul=t("code",null,"数组",-1),Al=t("code",null,"1+",-1),Fl={style:{"text-align":"left"}},Gl=t("td",{style:{"text-align":"center"}},"649",-1),Jl={style:{"text-align":"left"}},Sl={href:"https://leetcode.com/problems/dota2-senate",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},null,-1),Xl={style:{"text-align":"left"}},Yl=t("code",null,"贪心",-1),Zl=t("code",null,"队列",-1),$l=t("code",null,"字符串",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"683",-1),lo={style:{"text-align":"left"}},oo={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},no=t("td",{style:{"text-align":"center"}},null,-1),so={style:{"text-align":"left"}},_o=t("code",null,"树状数组",-1),ao=t("code",null,"线段树",-1),co=t("code",null,"队列",-1),io=t("code",null,"5+",-1),ro={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"862",-1),uo={style:{"text-align":"left"}},fo={href:"https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k",target:"_blank",rel:"noopener noreferrer"},go=t("td",{style:{"text-align":"center"}},null,-1),mo={style:{"text-align":"left"}},yo=t("code",null,"队列",-1),xo=t("code",null,"数组",-1),bo=t("code",null,"二分查找",-1),po=t("code",null,"4+",-1),ko={style:{"text-align":"left"}},qo=t("td",{style:{"text-align":"center"}},"918",-1),Mo={style:{"text-align":"left"}},wo={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},Ho={style:{"text-align":"center"}},vo={style:{"text-align":"left"}},zo=t("code",null,"队列",-1),Io=t("code",null,"数组",-1),Eo=t("code",null,"分治",-1),jo=t("code",null,"2+",-1),Oo={style:{"text-align":"left"}},Ko=t("td",{style:{"text-align":"center"}},"933",-1),Lo={style:{"text-align":"left"}},Vo={href:"https://leetcode.com/problems/number-of-recent-calls",target:"_blank",rel:"noopener noreferrer"},Co=t("td",{style:{"text-align":"center"}},null,-1),No={style:{"text-align":"left"}},Bo=t("code",null,"设计",-1),Ro=t("code",null,"队列",-1),Do=t("code",null,"数据流",-1),Po={style:{"text-align":"left"}},Qo=t("td",{style:{"text-align":"center"}},"936",-1),To={style:{"text-align":"left"}},Uo={href:"https://leetcode.com/problems/stamping-the-sequence",target:"_blank",rel:"noopener noreferrer"},Ao=t("td",{style:{"text-align":"center"}},null,-1),Fo={style:{"text-align":"left"}},Go=t("code",null,"栈",-1),Jo=t("code",null,"贪心",-1),So=t("code",null,"队列",-1),Wo=t("code",null,"1+",-1),Xo={style:{"text-align":"left"}},Yo=t("td",{style:{"text-align":"center"}},"950",-1),Zo={style:{"text-align":"left"}},$o={href:"https://leetcode.com/problems/reveal-cards-in-increasing-order",target:"_blank",rel:"noopener noreferrer"},tn=t("td",{style:{"text-align":"center"}},null,-1),en={style:{"text-align":"left"}},ln=t("code",null,"队列",-1),on=t("code",null,"数组",-1),nn=t("code",null,"排序",-1),sn=t("code",null,"1+",-1),dn={style:{"text-align":"left"}},_n=t("td",{style:{"text-align":"center"}},"995",-1),an={style:{"text-align":"left"}},cn={href:"https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips",target:"_blank",rel:"noopener noreferrer"},rn=t("td",{style:{"text-align":"center"}},null,-1),hn={style:{"text-align":"left"}},un=t("code",null,"位运算",-1),fn=t("code",null,"队列",-1),gn=t("code",null,"数组",-1),mn=t("code",null,"2+",-1),yn={style:{"text-align":"left"}},xn=t("td",{style:{"text-align":"center"}},"1352",-1),bn={style:{"text-align":"left"}},pn={href:"https://leetcode.com/problems/product-of-the-last-k-numbers",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},null,-1),qn={style:{"text-align":"left"}},Mn=t("code",null,"设计",-1),wn=t("code",null,"队列",-1),Hn=t("code",null,"数组",-1),vn=t("code",null,"2+",-1),zn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"1425",-1),En={style:{"text-align":"left"}},jn={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},null,-1),Kn={style:{"text-align":"left"}},Ln=t("code",null,"队列",-1),Vn=t("code",null,"数组",-1),Cn=t("code",null,"动态规划",-1),Nn=t("code",null,"3+",-1),Bn={style:{"text-align":"left"}},Rn=t("td",{style:{"text-align":"center"}},"1429",-1),Dn={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/first-unique-number",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},null,-1),Tn={style:{"text-align":"left"}},Un=t("code",null,"设计",-1),An=t("code",null,"队列",-1),Fn=t("code",null,"数组",-1),Gn=t("code",null,"2+",-1),Jn={style:{"text-align":"left"}},Sn=t("td",{style:{"text-align":"center"}},"1438",-1),Wn={style:{"text-align":"left"}},Xn={href:"https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",target:"_blank",rel:"noopener noreferrer"},Yn=t("td",{style:{"text-align":"center"}},null,-1),Zn={style:{"text-align":"left"}},$n=t("code",null,"队列",-1),ts=t("code",null,"数组",-1),es=t("code",null,"有序集合",-1),ls=t("code",null,"3+",-1),os={style:{"text-align":"left"}},ns=t("td",{style:{"text-align":"center"}},"1499",-1),ss={style:{"text-align":"left"}},ds={href:"https://leetcode.com/problems/max-value-of-equation",target:"_blank",rel:"noopener noreferrer"},_s=t("td",{style:{"text-align":"center"}},null,-1),as={style:{"text-align":"left"}},cs=t("code",null,"队列",-1),is=t("code",null,"数组",-1),rs=t("code",null,"滑动窗口",-1),hs=t("code",null,"2+",-1),us={style:{"text-align":"left"}},fs=t("td",{style:{"text-align":"center"}},"1670",-1),gs={style:{"text-align":"left"}},ms={href:"https://leetcode.com/problems/design-front-middle-back-queue",target:"_blank",rel:"noopener noreferrer"},ys=t("td",{style:{"text-align":"center"}},null,-1),xs={style:{"text-align":"left"}},bs=t("code",null,"设计",-1),ps=t("code",null,"队列",-1),ks=t("code",null,"数组",-1),qs=t("code",null,"2+",-1),Ms={style:{"text-align":"left"}},ws=t("td",{style:{"text-align":"center"}},"1687",-1),Hs={style:{"text-align":"left"}},vs={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},zs=t("td",{style:{"text-align":"center"}},null,-1),Is={style:{"text-align":"left"}},Es=t("code",null,"线段树",-1),js=t("code",null,"队列",-1),Os=t("code",null,"数组",-1),Ks=t("code",null,"4+",-1),Ls={style:{"text-align":"left"}},Vs=t("td",{style:{"text-align":"center"}},"1696",-1),Cs={style:{"text-align":"left"}},Ns={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},Bs=t("td",{style:{"text-align":"center"}},null,-1),Rs={style:{"text-align":"left"}},Ds=t("code",null,"队列",-1),Ps=t("code",null,"数组",-1),Qs=t("code",null,"动态规划",-1),Ts=t("code",null,"2+",-1),Us={style:{"text-align":"left"}},As=t("td",{style:{"text-align":"center"}},"1700",-1),Fs={style:{"text-align":"left"}},Gs={href:"https://leetcode.com/problems/number-of-students-unable-to-eat-lunch",target:"_blank",rel:"noopener noreferrer"},Js=t("td",{style:{"text-align":"center"}},null,-1),Ss={style:{"text-align":"left"}},Ws=t("code",null,"栈",-1),Xs=t("code",null,"队列",-1),Ys=t("code",null,"数组",-1),Zs=t("code",null,"1+",-1),$s={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"1823",-1),ed={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/find-the-winner-of-the-circular-game",target:"_blank",rel:"noopener noreferrer"},od=t("td",{style:{"text-align":"center"}},null,-1),nd={style:{"text-align":"left"}},sd=t("code",null,"递归",-1),dd=t("code",null,"队列",-1),_d=t("code",null,"数组",-1),ad=t("code",null,"2+",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"1825",-1),rd={style:{"text-align":"left"}},hd={href:"https://leetcode.com/problems/finding-mk-average",target:"_blank",rel:"noopener noreferrer"},ud=t("td",{style:{"text-align":"center"}},null,-1),fd={style:{"text-align":"left"}},gd=t("code",null,"设计",-1),md=t("code",null,"队列",-1),yd=t("code",null,"数据流",-1),xd=t("code",null,"2+",-1),bd={style:{"text-align":"left"}},pd=t("td",{style:{"text-align":"center"}},"2071",-1),kd={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/maximum-number-of-tasks-you-can-assign",target:"_blank",rel:"noopener noreferrer"},Md=t("td",{style:{"text-align":"center"}},null,-1),wd={style:{"text-align":"left"}},Hd=t("code",null,"贪心",-1),vd=t("code",null,"队列",-1),zd=t("code",null,"数组",-1),Id=t("code",null,"3+",-1),Ed={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"2073",-1),Od={style:{"text-align":"left"}},Kd={href:"https://leetcode.com/problems/time-needed-to-buy-tickets",target:"_blank",rel:"noopener noreferrer"},Ld=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Cd=t("code",null,"队列",-1),Nd=t("code",null,"数组",-1),Bd=t("code",null,"模拟",-1),Rd={style:{"text-align":"left"}},Dd=t("td",{style:{"text-align":"center"}},"2327",-1),Pd={style:{"text-align":"left"}},Qd={href:"https://leetcode.com/problems/number-of-people-aware-of-a-secret",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},null,-1),Ud={style:{"text-align":"left"}},Ad=t("code",null,"队列",-1),Fd=t("code",null,"动态规划",-1),Gd=t("code",null,"模拟",-1),Jd={style:{"text-align":"left"}},Sd=t("td",{style:{"text-align":"center"}},"2398",-1),Wd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/maximum-number-of-robots-within-budget",target:"_blank",rel:"noopener noreferrer"},Yd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},$d=t("code",null,"队列",-1),t_=t("code",null,"数组",-1),e_=t("code",null,"二分查找",-1),l_=t("code",null,"4+",-1),o_={style:{"text-align":"left"}},n_=t("td",{style:{"text-align":"center"}},"2407",-1),s_={style:{"text-align":"left"}},d_={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},null,-1),a_={style:{"text-align":"left"}},c_=t("code",null,"树状数组",-1),i_=t("code",null,"线段树",-1),r_=t("code",null,"队列",-1),h_=t("code",null,"4+",-1),u_={style:{"text-align":"left"}},f_=t("td",{style:{"text-align":"center"}},"2444",-1),g_={style:{"text-align":"left"}},m_={href:"https://leetcode.com/problems/count-subarrays-with-fixed-bounds",target:"_blank",rel:"noopener noreferrer"},y_=t("td",{style:{"text-align":"center"}},null,-1),x_={style:{"text-align":"left"}},b_=t("code",null,"队列",-1),p_=t("code",null,"数组",-1),k_=t("code",null,"滑动窗口",-1),q_=t("code",null,"1+",-1),M_={style:{"text-align":"left"}},w_=t("td",{style:{"text-align":"center"}},"2526",-1),H_={style:{"text-align":"left"}},v_={href:"https://leetcode.com/problems/find-consecutive-integers-from-a-data-stream",target:"_blank",rel:"noopener noreferrer"},z_=t("td",{style:{"text-align":"center"}},null,-1),I_={style:{"text-align":"left"}},E_=t("code",null,"设计",-1),j_=t("code",null,"队列",-1),O_=t("code",null,"哈希表",-1),K_=t("code",null,"2+",-1),L_={style:{"text-align":"left"}},V_=t("td",{style:{"text-align":"center"}},"2528",-1),C_={style:{"text-align":"left"}},N_={href:"https://leetcode.com/problems/maximize-the-minimum-powered-city",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},null,-1),R_={style:{"text-align":"left"}},D_=t("code",null,"贪心",-1),P_=t("code",null,"队列",-1),Q_=t("code",null,"数组",-1),T_=t("code",null,"3+",-1),U_={style:{"text-align":"left"}},A_=t("td",{style:{"text-align":"center"}},"2534",-1),F_={style:{"text-align":"left"}},G_={href:"https://leetcode.com/problems/time-taken-to-cross-the-door",target:"_blank",rel:"noopener noreferrer"},J_=t("td",{style:{"text-align":"center"}},null,-1),S_={style:{"text-align":"left"}},W_=t("code",null,"队列",-1),X_=t("code",null,"数组",-1),Y_=t("code",null,"模拟",-1),Z_={style:{"text-align":"left"}},$_=t("td",{style:{"text-align":"center"}},"2762",-1),ta={style:{"text-align":"left"}},ea={href:"https://leetcode.com/problems/continuous-subarrays",target:"_blank",rel:"noopener noreferrer"},la=t("td",{style:{"text-align":"center"}},null,-1),oa={style:{"text-align":"left"}},na=t("code",null,"队列",-1),sa=t("code",null,"数组",-1),da=t("code",null,"有序集合",-1),_a=t("code",null,"3+",-1),aa={style:{"text-align":"left"}},ca=t("td",{style:{"text-align":"center"}},"2944",-1),ia={style:{"text-align":"left"}},ra={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},ha=t("td",{style:{"text-align":"center"}},null,-1),ua={style:{"text-align":"left"}},fa=t("code",null,"队列",-1),ga=t("code",null,"数组",-1),ma=t("code",null,"动态规划",-1),ya=t("code",null,"2+",-1),xa={style:{"text-align":"left"}},ba=t("td",{style:{"text-align":"center"}},"2945",-1),pa={style:{"text-align":"left"}},ka={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},qa=t("td",{style:{"text-align":"center"}},null,-1),Ma={style:{"text-align":"left"}},wa=t("code",null,"栈",-1),Ha=t("code",null,"队列",-1),va=t("code",null,"数组",-1),za=t("code",null,"4+",-1),Ia={style:{"text-align":"left"}},Ea=t("td",{style:{"text-align":"center"}},"2969",-1),ja={style:{"text-align":"left"}},Oa={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},Ka=t("td",{style:{"text-align":"center"}},null,-1),La={style:{"text-align":"left"}},Va=t("code",null,"队列",-1),Ca=t("code",null,"数组",-1),Na=t("code",null,"动态规划",-1),Ba=t("code",null,"2+",-1),Ra={style:{"text-align":"left"}},Da=t("td",{style:{"text-align":"center"}},"3117",-1),Pa={style:{"text-align":"left"}},Qa={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},Ta=t("td",{style:{"text-align":"center"}},null,-1),Ua={style:{"text-align":"left"}},Aa=t("code",null,"位运算",-1),Fa=t("code",null,"线段树",-1),Ga=t("code",null,"队列",-1),Ja=t("code",null,"3+",-1),Sa={style:{"text-align":"left"}},Wa=t("td",{style:{"text-align":"center"}},"3191",-1),Xa={style:{"text-align":"left"}},Ya={href:"https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-i",target:"_blank",rel:"noopener noreferrer"},Za=t("td",{style:{"text-align":"center"}},null,-1),$a={style:{"text-align":"left"}},tc=t("code",null,"位运算",-1),ec=t("code",null,"队列",-1),lc=t("code",null,"数组",-1),oc=t("code",null,"2+",-1),nc={style:{"text-align":"left"}},sc=t("td",{style:{"text-align":"center"}},"LCP 23",-1),dc={style:{"text-align":"left"}},_c={href:"https://leetcode.cn/problems/er94lq",target:"_blank",rel:"noopener noreferrer"},ac=t("td",{style:{"text-align":"center"}},null,-1),cc={style:{"text-align":"left"}},ic=t("code",null,"队列",-1),rc=t("code",null,"数组",-1),hc=t("code",null,"模拟",-1),uc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"剑指 Offer 50",-1),gc={style:{"text-align":"left"}},mc={href:"https://leetcode.cn/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",target:"_blank",rel:"noopener noreferrer"},yc={style:{"text-align":"center"}},xc={style:{"text-align":"left"}},bc=t("code",null,"队列",-1),pc=t("code",null,"哈希表",-1),kc=t("code",null,"字符串",-1),qc=t("code",null,"1+",-1),Mc={style:{"text-align":"left"}},wc=t("td",{style:{"text-align":"center"}},"剑指 Offer 59",-1),Hc={style:{"text-align":"left"}},vc={href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},zc={style:{"text-align":"center"}},Ic={style:{"text-align":"left"}},Ec=t("code",null,"队列",-1),jc=t("code",null,"数组",-1),Oc=t("code",null,"滑动窗口",-1),Kc=t("code",null,"2+",-1),Lc={style:{"text-align":"left"}},Vc=t("td",{style:{"text-align":"center"}},"剑指 Offer 59-II",-1),Cc={style:{"text-align":"left"}},Nc={href:"https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},Bc={style:{"text-align":"center"}},Rc={style:{"text-align":"left"}},Dc=t("code",null,"设计",-1),Pc=t("code",null,"队列",-1),Qc=t("code",null,"单调队列",-1),Tc={style:{"text-align":"left"}},Uc=t("td",{style:{"text-align":"center"}},"剑指 Offer 9",-1),Ac={style:{"text-align":"left"}},Fc={href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof",target:"_blank",rel:"noopener noreferrer"},Gc={style:{"text-align":"center"}},Jc={style:{"text-align":"left"}},Sc=t("code",null,"栈",-1),Wc=t("code",null,"设计",-1),Xc=t("code",null,"队列",-1),Yc={style:{"text-align":"left"}},Zc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 41",-1),$c={style:{"text-align":"left"}},ti={href:"https://leetcode.cn/problems/qIsx9U",target:"_blank",rel:"noopener noreferrer"},ei={style:{"text-align":"center"}},li={style:{"text-align":"left"}},oi=t("code",null,"设计",-1),ni=t("code",null,"队列",-1),si=t("code",null,"数组",-1),di=t("code",null,"1+",-1),_i={style:{"text-align":"left"}},ai=t("td",{style:{"text-align":"center"}},"剑指 Offer II 42",-1),ci={style:{"text-align":"left"}},ii={href:"https://leetcode.cn/problems/H8086Q",target:"_blank",rel:"noopener noreferrer"},ri=t("td",{style:{"text-align":"center"}},null,-1),hi={style:{"text-align":"left"}},ui=t("code",null,"设计",-1),fi=t("code",null,"队列",-1),gi=t("code",null,"数据流",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"面试题 03.04",-1),xi={style:{"text-align":"left"}},bi={href:"https://leetcode.cn/problems/implement-queue-using-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},pi=t("td",{style:{"text-align":"center"}},null,-1),ki={style:{"text-align":"left"}},qi=t("code",null,"栈",-1),Mi=t("code",null,"设计",-1),wi=t("code",null,"队列",-1),Hi={style:{"text-align":"left"}},vi=t("td",{style:{"text-align":"center"}},"面试题 03.06",-1),zi={style:{"text-align":"left"}},Ii={href:"https://leetcode.cn/problems/animal-shelter-lcci",target:"_blank",rel:"noopener noreferrer"},Ei=t("td",{style:{"text-align":"center"}},null,-1),ji={style:{"text-align":"left"}},Oi=t("code",null,"设计",-1),Ki=t("code",null,"队列",-1),Li={style:{"text-align":"left"}};function Vi(Ci,Ni){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return c(),i("div",null,[u,t("details",null,[f,g,t("p",null,[e(n,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(n,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),q,l(),e(n,{to:"/tag/monotonic-queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/tag/string-matching.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/tag/binary-tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/tag/binary-search-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/tag/graph.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/tag/topological-sort.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/tag/shortest-path.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/tag/biconnected-component.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/tag/union-find.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/tag/trie.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/tag/suffix-array.html"},{default:o(()=>[U]),_:1})]),A,t("p",null,[e(n,{to:"/tag/enumeration.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/tag/recursion.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/tag/backtracking.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/tag/bucket-sort.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/tag/counting.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/tag/hash-function.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/tag/rolling-hash.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(n,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(n,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/tag/combinatorics.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/tag/randomized.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/tag/rejection-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/tag/database.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/tag/brainteaser.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/tag/interactive.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/tag/iterator.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/tag/concurrency.html"},{default:o(()=>[Lt]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[Ct,t("tbody",null,[t("tr",null,[Nt,t("td",Bt,[t("a",Rt,[l("用队列实现栈"),e(s)])]),t("td",Dt,[e(n,{to:"/problem/0225.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pt,[e(n,{to:"/tag/stack.html"},{default:o(()=>[Qt]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[Tt]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Ut]),_:1})]),t("td",At,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ft,t("td",Gt,[t("a",Jt,[l("用栈实现队列"),e(s)])]),t("td",St,[e(n,{to:"/problem/0232.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wt,[e(n,{to:"/tag/stack.html"},{default:o(()=>[Xt]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Zt]),_:1})]),t("td",$t,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[te,t("td",ee,[t("a",le,[l("滑动窗口最大值"),e(s)])]),t("td",oe,[e(n,{to:"/problem/0239.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ne,[e(n,{to:"/tag/queue.html"},{default:o(()=>[se]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[de]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[_e]),_:1}),l(),ae]),t("td",ce,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ie,t("td",re,[t("a",he,[l("锯齿迭代器 🔒"),e(s)])]),ue,t("td",fe,[e(n,{to:"/tag/design.html"},{default:o(()=>[ge]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[me]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ye]),_:1}),l(),xe]),t("td",be,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pe,t("td",ke,[t("a",qe,[l("扁平化嵌套列表迭代器"),e(s)])]),Me,t("td",we,[e(n,{to:"/tag/stack.html"},{default:o(()=>[He]),_:1}),l(),e(n,{to:"/tag/tree.html"},{default:o(()=>[ve]),_:1}),l(),e(n,{to:"/tag/depth-first-search.html"},{default:o(()=>[ze]),_:1}),l(),Ie]),t("td",Ee,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[je,t("td",Oe,[t("a",Ke,[l("数据流中的移动平均值 🔒"),e(s)])]),t("td",Le,[e(n,{to:"/problem/0346.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ve,[e(n,{to:"/tag/design.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Be]),_:1}),l(),Re]),t("td",De,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Pe,t("td",Qe,[t("a",Te,[l("贪吃蛇 🔒"),e(s)])]),Ue,t("td",Ae,[e(n,{to:"/tag/design.html"},{default:o(()=>[Fe]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Ge]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Je]),_:1}),l(),Se]),t("td",We,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xe,t("td",Ye,[t("a",Ze,[l("敲击计数器 🔒"),e(s)])]),$e,t("td",tl,[e(n,{to:"/tag/design.html"},{default:o(()=>[el]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[ll]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ol]),_:1}),l(),nl]),t("td",sl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dl,t("td",_l,[t("a",al,[l("电话目录管理系统 🔒"),e(s)])]),t("td",cl,[e(n,{to:"/problem/0379.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",il,[e(n,{to:"/tag/design.html"},{default:o(()=>[rl]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[hl]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ul]),_:1}),l(),fl]),t("td",gl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ml,t("td",yl,[t("a",xl,[l("字符串中的第一个唯一字符"),e(s)])]),bl,t("td",pl,[e(n,{to:"/tag/queue.html"},{default:o(()=>[kl]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[Ml]),_:1}),l(),wl]),t("td",Hl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vl,t("td",zl,[t("a",Il,[l("设计循环队列"),e(s)])]),t("td",El,[e(n,{to:"/problem/0622.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jl,[e(n,{to:"/tag/design.html"},{default:o(()=>[Ol]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Kl]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ll]),_:1}),l(),Vl]),t("td",Cl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nl,t("td",Bl,[t("a",Rl,[l("设计循环双端队列"),e(s)])]),t("td",Dl,[e(n,{to:"/problem/0641.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pl,[e(n,{to:"/tag/design.html"},{default:o(()=>[Ql]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ul]),_:1}),l(),Al]),t("td",Fl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gl,t("td",Jl,[t("a",Sl,[l("Dota2 参议院"),e(s)])]),Wl,t("td",Xl,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Yl]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Zl]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[$l]),_:1})]),t("td",to,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eo,t("td",lo,[t("a",oo,[l("K 个关闭的灯泡 🔒"),e(s)])]),no,t("td",so,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[_o]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[co]),_:1}),l(),io]),t("td",ro,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ho,t("td",uo,[t("a",fo,[l("和至少为 K 的最短子数组"),e(s)])]),go,t("td",mo,[e(n,{to:"/tag/queue.html"},{default:o(()=>[yo]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[xo]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[bo]),_:1}),l(),po]),t("td",ko,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qo,t("td",Mo,[t("a",wo,[l("环形子数组的最大和"),e(s)])]),t("td",Ho,[e(n,{to:"/problem/0918.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vo,[e(n,{to:"/tag/queue.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Io]),_:1}),l(),e(n,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[Eo]),_:1}),l(),jo]),t("td",Oo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ko,t("td",Lo,[t("a",Vo,[l("最近的请求次数"),e(s)])]),Co,t("td",No,[e(n,{to:"/tag/design.html"},{default:o(()=>[Bo]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Ro]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[Do]),_:1})]),t("td",Po,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qo,t("td",To,[t("a",Uo,[l("戳印序列"),e(s)])]),Ao,t("td",Fo,[e(n,{to:"/tag/stack.html"},{default:o(()=>[Go]),_:1}),l(),e(n,{to:"/tag/greedy.html"},{default:o(()=>[Jo]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[So]),_:1}),l(),Wo]),t("td",Xo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yo,t("td",Zo,[t("a",$o,[l("按递增顺序显示卡牌"),e(s)])]),tn,t("td",en,[e(n,{to:"/tag/queue.html"},{default:o(()=>[ln]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[on]),_:1}),l(),e(n,{to:"/tag/sorting.html"},{default:o(()=>[nn]),_:1}),l(),sn]),t("td",dn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_n,t("td",an,[t("a",cn,[l("K 连续位的最小翻转次数"),e(s)])]),rn,t("td",hn,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[un]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[fn]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[gn]),_:1}),l(),mn]),t("td",yn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xn,t("td",bn,[t("a",pn,[l("最后 K 个数的乘积"),e(s)])]),kn,t("td",qn,[e(n,{to:"/tag/design.html"},{default:o(()=>[Mn]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Hn]),_:1}),l(),vn]),t("td",zn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[In,t("td",En,[t("a",jn,[l("带限制的子序列和"),e(s)])]),On,t("td",Kn,[e(n,{to:"/tag/queue.html"},{default:o(()=>[Ln]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Vn]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Cn]),_:1}),l(),Nn]),t("td",Bn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rn,t("td",Dn,[t("a",Pn,[l("第一个唯一数字 🔒"),e(s)])]),Qn,t("td",Tn,[e(n,{to:"/tag/design.html"},{default:o(()=>[Un]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[An]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Fn]),_:1}),l(),Gn]),t("td",Jn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sn,t("td",Wn,[t("a",Xn,[l("绝对差不超过限制的最长连续子数组"),e(s)])]),Yn,t("td",Zn,[e(n,{to:"/tag/queue.html"},{default:o(()=>[$n]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ts]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[es]),_:1}),l(),ls]),t("td",os,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ns,t("td",ss,[t("a",ds,[l("满足不等式的最大值"),e(s)])]),_s,t("td",as,[e(n,{to:"/tag/queue.html"},{default:o(()=>[cs]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[is]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[rs]),_:1}),l(),hs]),t("td",us,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fs,t("td",gs,[t("a",ms,[l("设计前中后队列"),e(s)])]),ys,t("td",xs,[e(n,{to:"/tag/design.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[ps]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ks]),_:1}),l(),qs]),t("td",Ms,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ws,t("td",Hs,[t("a",vs,[l("从仓库到码头运输箱子"),e(s)])]),zs,t("td",Is,[e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Es]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[js]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Os]),_:1}),l(),Ks]),t("td",Ls,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vs,t("td",Cs,[t("a",Ns,[l("跳跃游戏 VI"),e(s)])]),Bs,t("td",Rs,[e(n,{to:"/tag/queue.html"},{default:o(()=>[Ds]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ps]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Qs]),_:1}),l(),Ts]),t("td",Us,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[As,t("td",Fs,[t("a",Gs,[l("无法吃午餐的学生数量"),e(s)])]),Js,t("td",Ss,[e(n,{to:"/tag/stack.html"},{default:o(()=>[Ws]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Xs]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ys]),_:1}),l(),Zs]),t("td",$s,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",ld,[l("找出游戏的获胜者"),e(s)])]),od,t("td",nd,[e(n,{to:"/tag/recursion.html"},{default:o(()=>[sd]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[dd]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[_d]),_:1}),l(),ad]),t("td",cd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[id,t("td",rd,[t("a",hd,[l("求出 MK 平均值"),e(s)])]),ud,t("td",fd,[e(n,{to:"/tag/design.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[md]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[yd]),_:1}),l(),xd]),t("td",bd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pd,t("td",kd,[t("a",qd,[l("你可以安排的最多任务数目"),e(s)])]),Md,t("td",wd,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[Hd]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[vd]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[zd]),_:1}),l(),Id]),t("td",Ed,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jd,t("td",Od,[t("a",Kd,[l("买票需要的时间"),e(s)])]),Ld,t("td",Vd,[e(n,{to:"/tag/queue.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Nd]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[Bd]),_:1})]),t("td",Rd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Dd,t("td",Pd,[t("a",Qd,[l("知道秘密的人数"),e(s)])]),Td,t("td",Ud,[e(n,{to:"/tag/queue.html"},{default:o(()=>[Ad]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Fd]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[Gd]),_:1})]),t("td",Jd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sd,t("td",Wd,[t("a",Xd,[l("预算内的最多机器人数目"),e(s)])]),Yd,t("td",Zd,[e(n,{to:"/tag/queue.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[t_]),_:1}),l(),e(n,{to:"/tag/binary-search.html"},{default:o(()=>[e_]),_:1}),l(),l_]),t("td",o_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n_,t("td",s_,[t("a",d_,[l("最长递增子序列 II"),e(s)])]),__,t("td",a_,[e(n,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[c_]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[i_]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[r_]),_:1}),l(),h_]),t("td",u_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f_,t("td",g_,[t("a",m_,[l("统计定界子数组的数目"),e(s)])]),y_,t("td",x_,[e(n,{to:"/tag/queue.html"},{default:o(()=>[b_]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[p_]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[k_]),_:1}),l(),q_]),t("td",M_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[w_,t("td",H_,[t("a",v_,[l("找到数据流中的连续整数"),e(s)])]),z_,t("td",I_,[e(n,{to:"/tag/design.html"},{default:o(()=>[E_]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[j_]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[O_]),_:1}),l(),K_]),t("td",L_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V_,t("td",C_,[t("a",N_,[l("最大化城市的最小电量"),e(s)])]),B_,t("td",R_,[e(n,{to:"/tag/greedy.html"},{default:o(()=>[D_]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[P_]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Q_]),_:1}),l(),T_]),t("td",U_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A_,t("td",F_,[t("a",G_,[l("通过门的时间 🔒"),e(s)])]),J_,t("td",S_,[e(n,{to:"/tag/queue.html"},{default:o(()=>[W_]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[Y_]),_:1})]),t("td",Z_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$_,t("td",ta,[t("a",ea,[l("不间断子数组"),e(s)])]),la,t("td",oa,[e(n,{to:"/tag/queue.html"},{default:o(()=>[na]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[sa]),_:1}),l(),e(n,{to:"/tag/ordered-set.html"},{default:o(()=>[da]),_:1}),l(),_a]),t("td",aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ca,t("td",ia,[t("a",ra,[l("购买水果需要的最少金币数"),e(s)])]),ha,t("td",ua,[e(n,{to:"/tag/queue.html"},{default:o(()=>[fa]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[ga]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ma]),_:1}),l(),ya]),t("td",xa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ba,t("td",pa,[t("a",ka,[l("找到最大非递减数组的长度"),e(s)])]),qa,t("td",Ma,[e(n,{to:"/tag/stack.html"},{default:o(()=>[wa]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Ha]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[va]),_:1}),l(),za]),t("td",Ia,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ea,t("td",ja,[t("a",Oa,[l("购买水果需要的最少金币数 II 🔒"),e(s)])]),Ka,t("td",La,[e(n,{to:"/tag/queue.html"},{default:o(()=>[Va]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[Ca]),_:1}),l(),e(n,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Na]),_:1}),l(),Ba]),t("td",Ra,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Da,t("td",Pa,[t("a",Qa,[l("划分数组得到最小的值之和"),e(s)])]),Ta,t("td",Ua,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[Aa]),_:1}),l(),e(n,{to:"/tag/segment-tree.html"},{default:o(()=>[Fa]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Ga]),_:1}),l(),Ja]),t("td",Sa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wa,t("td",Xa,[t("a",Ya,[l("使二进制数组全部等于 1 的最少操作次数 I"),e(s)])]),Za,t("td",$a,[e(n,{to:"/tag/bit-manipulation.html"},{default:o(()=>[tc]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[ec]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[lc]),_:1}),l(),oc]),t("td",nc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sc,t("td",dc,[t("a",_c,[l("魔术排列"),e(s)])]),ac,t("td",cc,[e(n,{to:"/tag/queue.html"},{default:o(()=>[ic]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[rc]),_:1}),l(),e(n,{to:"/tag/simulation.html"},{default:o(()=>[hc]),_:1})]),t("td",uc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fc,t("td",gc,[t("a",mc,[l("第一个只出现一次的字符"),e(s)])]),t("td",yc,[e(n,{to:"/offer/jz_offer_50_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xc,[e(n,{to:"/tag/queue.html"},{default:o(()=>[bc]),_:1}),l(),e(n,{to:"/tag/hash-table.html"},{default:o(()=>[pc]),_:1}),l(),e(n,{to:"/tag/string.html"},{default:o(()=>[kc]),_:1}),l(),qc]),t("td",Mc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wc,t("td",Hc,[t("a",vc,[l("滑动窗口的最大值"),e(s)])]),t("td",zc,[e(n,{to:"/offer/jz_offer_59_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ic,[e(n,{to:"/tag/queue.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[jc]),_:1}),l(),e(n,{to:"/tag/sliding-window.html"},{default:o(()=>[Oc]),_:1}),l(),Kc]),t("td",Lc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vc,t("td",Cc,[t("a",Nc,[l("队列的最大值"),e(s)])]),t("td",Bc,[e(n,{to:"/offer/jz_offer_59_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rc,[e(n,{to:"/tag/design.html"},{default:o(()=>[Dc]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Pc]),_:1}),l(),e(n,{to:"/tag/monotonic-queue.html"},{default:o(()=>[Qc]),_:1})]),t("td",Tc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uc,t("td",Ac,[t("a",Fc,[l("用两个栈实现队列"),e(s)])]),t("td",Gc,[e(n,{to:"/offer/jz_offer_09_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jc,[e(n,{to:"/tag/stack.html"},{default:o(()=>[Sc]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[Wc]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Xc]),_:1})]),t("td",Yc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zc,t("td",$c,[t("a",ti,[l("滑动窗口的平均值"),e(s)])]),t("td",ei,[e(n,{to:"/offer2/jz_offer_II_041.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",li,[e(n,{to:"/tag/design.html"},{default:o(()=>[oi]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[ni]),_:1}),l(),e(n,{to:"/tag/array.html"},{default:o(()=>[si]),_:1}),l(),di]),t("td",_i,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ai,t("td",ci,[t("a",ii,[l("最近请求次数"),e(s)])]),ri,t("td",hi,[e(n,{to:"/tag/design.html"},{default:o(()=>[ui]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[fi]),_:1}),l(),e(n,{to:"/tag/data-stream.html"},{default:o(()=>[gi]),_:1})]),t("td",mi,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yi,t("td",xi,[t("a",bi,[l("化栈为队"),e(s)])]),pi,t("td",ki,[e(n,{to:"/tag/stack.html"},{default:o(()=>[qi]),_:1}),l(),e(n,{to:"/tag/design.html"},{default:o(()=>[Mi]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[wi]),_:1})]),t("td",Hi,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vi,t("td",zi,[t("a",Ii,[l("动物收容所"),e(s)])]),Ei,t("td",ji,[e(n,{to:"/tag/design.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/tag/queue.html"},{default:o(()=>[Ki]),_:1})]),t("td",Li,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const Ri=a(h,[["render",Vi],["__file","queue.html.vue"]]);export{Ri as default};
