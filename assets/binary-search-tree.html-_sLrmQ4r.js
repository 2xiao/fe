import{_,r as d,o as r,c,a as t,d as o,w as s,b as e,f as a}from"./app-pBQRj29c.js";const i={},h=t("h1",{id:"二叉搜索树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#二叉搜索树","aria-hidden":"true"},"#"),e(" 二叉搜索树")],-1),u=t("summary",null,"全部标签",-1),f=t("p",null,[t("strong",null,"数据结构")],-1),g=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),x=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),B=t("span",{class:"blue"},"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),L=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),T=t("code",null,"强连通分量",-1),E=t("code",null,"欧拉回路",-1),P=t("code",null,"双连通分量",-1),Q=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),S=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),A=t("p",null,[t("strong",null,"算法")],-1),D=t("code",null,"枚举",-1),F=t("code",null,"递归",-1),H=t("code",null,"分治",-1),J=t("code",null,"回溯",-1),M=t("code",null,"贪心",-1),U=t("code",null,"动态规划",-1),W=t("code",null,"排序",-1),X=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),nt=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),it=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),ut=t("code",null,"滚动哈希",-1),ft=t("code",null,"扫描线",-1),gt=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),xt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),Bt=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),Lt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Tt=t("td",{style:{"text-align":"center"}},"95",-1),Et=t("td",{style:{"text-align":"left"}},"不同的二叉搜索树 II",-1),Pt={style:{"text-align":"center"}},Qt={style:{"text-align":"left"}},Rt=t("code",null,"树",-1),Gt=t("code",null,"二叉搜索树",-1),St=t("code",null,"动态规划",-1),Yt=t("code",null,"2+",-1),At=t("td",{style:{"text-align":"left"}},"🟠",-1),Dt={style:{"text-align":"center"}},Ft={href:"https://leetcode.cn/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Ht={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Jt=t("td",{style:{"text-align":"center"}},"96",-1),Mt=t("td",{style:{"text-align":"left"}},"不同的二叉搜索树",-1),Ut={style:{"text-align":"center"}},Wt={style:{"text-align":"left"}},Xt=t("code",null,"树",-1),Zt=t("code",null,"二叉搜索树",-1),$t=t("code",null,"数学",-1),te=t("code",null,"2+",-1),ee=t("td",{style:{"text-align":"left"}},"🟠",-1),oe={style:{"text-align":"center"}},le={href:"https://leetcode.cn/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},se={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},ne=t("td",{style:{"text-align":"center"}},"98",-1),de=t("td",{style:{"text-align":"left"}},"验证二叉搜索树",-1),_e={style:{"text-align":"center"}},re={style:{"text-align":"left"}},ce=t("code",null,"树",-1),ae=t("code",null,"深度优先搜索",-1),ie=t("code",null,"二叉搜索树",-1),he=t("code",null,"1+",-1),ue=t("td",{style:{"text-align":"left"}},"🟠",-1),fe={style:{"text-align":"center"}},ge={href:"https://leetcode.cn/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},me={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},"99",-1),pe=t("td",{style:{"text-align":"left"}},"恢复二叉搜索树",-1),be={style:{"text-align":"center"}},xe={style:{"text-align":"left"}},ke=t("code",null,"树",-1),ve=t("code",null,"深度优先搜索",-1),Ie=t("code",null,"二叉搜索树",-1),we=t("code",null,"1+",-1),qe=t("td",{style:{"text-align":"left"}},"🟠",-1),ze={style:{"text-align":"center"}},je={href:"https://leetcode.cn/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},"108",-1),Ne=t("td",{style:{"text-align":"left"}},"将有序数组转换为二叉搜索树",-1),Ce={style:{"text-align":"center"}},Le={style:{"text-align":"left"}},Ve=t("code",null,"树",-1),Ke=t("code",null,"二叉搜索树",-1),Te=t("code",null,"数组",-1),Ee=t("code",null,"2+",-1),Pe=t("td",{style:{"text-align":"left"}},"🟢",-1),Qe={style:{"text-align":"center"}},Re={href:"https://leetcode.cn/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Se=t("td",{style:{"text-align":"center"}},"109",-1),Ye=t("td",{style:{"text-align":"left"}},"有序链表转换二叉搜索树",-1),Ae={style:{"text-align":"center"}},De={style:{"text-align":"left"}},Fe=t("code",null,"树",-1),He=t("code",null,"二叉搜索树",-1),Je=t("code",null,"链表",-1),Me=t("code",null,"2+",-1),Ue=t("td",{style:{"text-align":"left"}},"🟠",-1),We={style:{"text-align":"center"}},Xe={href:"https://leetcode.cn/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"173",-1),to=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器",-1),eo={style:{"text-align":"center"}},oo={style:{"text-align":"left"}},lo=t("code",null,"栈",-1),so=t("code",null,"树",-1),no=t("code",null,"设计",-1),_o=t("code",null,"3+",-1),ro=t("td",{style:{"text-align":"left"}},"🟠",-1),co={style:{"text-align":"center"}},ao={href:"https://leetcode.cn/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},io={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},"230",-1),uo=t("td",{style:{"text-align":"left"}},"二叉搜索树中第 K 小的元素",-1),fo={style:{"text-align":"center"}},go={style:{"text-align":"left"}},mo=t("code",null,"树",-1),yo=t("code",null,"深度优先搜索",-1),po=t("code",null,"二叉搜索树",-1),bo=t("code",null,"1+",-1),xo=t("td",{style:{"text-align":"left"}},"🟠",-1),ko={style:{"text-align":"center"}},vo={href:"https://leetcode.cn/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Io={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},"235",-1),qo=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),zo={style:{"text-align":"center"}},jo={style:{"text-align":"left"}},Oo=t("code",null,"树",-1),Bo=t("code",null,"深度优先搜索",-1),No=t("code",null,"二叉搜索树",-1),Co=t("code",null,"1+",-1),Lo=t("td",{style:{"text-align":"left"}},"🟠",-1),Vo={style:{"text-align":"center"}},Ko={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},To={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",{style:{"text-align":"center"}},"255",-1),Po=t("td",{style:{"text-align":"left"}},"验证二叉搜索树的前序遍历序列 🔒",-1),Qo=t("td",{style:{"text-align":"center"}},null,-1),Ro={style:{"text-align":"left"}},Go=t("code",null,"栈",-1),So=t("code",null,"树",-1),Yo=t("code",null,"二叉搜索树",-1),Ao=t("code",null,"4+",-1),Do=t("td",{style:{"text-align":"left"}},"🟠",-1),Fo={style:{"text-align":"center"}},Ho={href:"https://leetcode.cn/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Jo={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Mo=t("td",{style:{"text-align":"center"}},"270",-1),Uo=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 🔒",-1),Wo=t("td",{style:{"text-align":"center"}},null,-1),Xo={style:{"text-align":"left"}},Zo=t("code",null,"树",-1),$o=t("code",null,"深度优先搜索",-1),tl=t("code",null,"二叉搜索树",-1),el=t("code",null,"2+",-1),ol=t("td",{style:{"text-align":"left"}},"🟢",-1),ll={style:{"text-align":"center"}},sl={href:"https://leetcode.cn/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},nl={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},dl=t("td",{style:{"text-align":"center"}},"272",-1),_l=t("td",{style:{"text-align":"left"}},"最接近的二叉搜索树值 II 🔒",-1),rl=t("td",{style:{"text-align":"center"}},null,-1),cl={style:{"text-align":"left"}},al=t("code",null,"栈",-1),il=t("code",null,"树",-1),hl=t("code",null,"深度优先搜索",-1),ul=t("code",null,"4+",-1),fl=t("td",{style:{"text-align":"left"}},"🔴",-1),gl={style:{"text-align":"center"}},ml={href:"https://leetcode.cn/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},yl={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},pl=t("td",{style:{"text-align":"center"}},"285",-1),bl=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继 🔒",-1),xl=t("td",{style:{"text-align":"center"}},null,-1),kl={style:{"text-align":"left"}},vl=t("code",null,"树",-1),Il=t("code",null,"深度优先搜索",-1),wl=t("code",null,"二叉搜索树",-1),ql=t("code",null,"1+",-1),zl=t("td",{style:{"text-align":"left"}},"🟠",-1),jl={style:{"text-align":"center"}},Ol={href:"https://leetcode.cn/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},Bl={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},Nl=t("td",{style:{"text-align":"center"}},"333",-1),Cl=t("td",{style:{"text-align":"left"}},"最大二叉搜索子树 🔒",-1),Ll=t("td",{style:{"text-align":"center"}},null,-1),Vl={style:{"text-align":"left"}},Kl=t("code",null,"树",-1),Tl=t("code",null,"深度优先搜索",-1),El=t("code",null,"二叉搜索树",-1),Pl=t("code",null,"2+",-1),Ql=t("td",{style:{"text-align":"left"}},"🟠",-1),Rl={style:{"text-align":"center"}},Gl={href:"https://leetcode.cn/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Sl={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Yl=t("td",{style:{"text-align":"center"}},"426",-1),Al=t("td",{style:{"text-align":"left"}},"将二叉搜索树转化为排序的双向链表 🔒",-1),Dl={style:{"text-align":"center"}},Fl={style:{"text-align":"left"}},Hl=t("code",null,"栈",-1),Jl=t("code",null,"树",-1),Ml=t("code",null,"深度优先搜索",-1),Ul=t("code",null,"4+",-1),Wl=t("td",{style:{"text-align":"left"}},"🟠",-1),Xl={style:{"text-align":"center"}},Zl={href:"https://leetcode.cn/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},$l={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ts=t("td",{style:{"text-align":"center"}},"449",-1),es=t("td",{style:{"text-align":"left"}},"序列化和反序列化二叉搜索树",-1),os=t("td",{style:{"text-align":"center"}},null,-1),ls={style:{"text-align":"left"}},ss=t("code",null,"树",-1),ns=t("code",null,"深度优先搜索",-1),ds=t("code",null,"广度优先搜索",-1),_s=t("code",null,"4+",-1),rs=t("td",{style:{"text-align":"left"}},"🟠",-1),cs={style:{"text-align":"center"}},as={href:"https://leetcode.cn/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},is={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},hs=t("td",{style:{"text-align":"center"}},"450",-1),us=t("td",{style:{"text-align":"left"}},"删除二叉搜索树中的节点",-1),fs={style:{"text-align":"center"}},gs={style:{"text-align":"left"}},ms=t("code",null,"树",-1),ys=t("code",null,"二叉搜索树",-1),ps=t("code",null,"二叉树",-1),bs=t("td",{style:{"text-align":"left"}},"🟠",-1),xs={style:{"text-align":"center"}},ks={href:"https://leetcode.cn/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},vs={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Is=t("td",{style:{"text-align":"center"}},"501",-1),ws=t("td",{style:{"text-align":"left"}},"二叉搜索树中的众数",-1),qs=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},js=t("code",null,"树",-1),Os=t("code",null,"深度优先搜索",-1),Bs=t("code",null,"二叉搜索树",-1),Ns=t("code",null,"1+",-1),Cs=t("td",{style:{"text-align":"left"}},"🟢",-1),Ls={style:{"text-align":"center"}},Vs={href:"https://leetcode.cn/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ks={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ts=t("td",{style:{"text-align":"center"}},"510",-1),Es=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继 II 🔒",-1),Ps=t("td",{style:{"text-align":"center"}},null,-1),Qs={style:{"text-align":"left"}},Rs=t("code",null,"树",-1),Gs=t("code",null,"二叉搜索树",-1),Ss=t("code",null,"二叉树",-1),Ys=t("td",{style:{"text-align":"left"}},"🟠",-1),As={style:{"text-align":"center"}},Ds={href:"https://leetcode.cn/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},Fs={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},Hs=t("td",{style:{"text-align":"center"}},"530",-1),Js=t("td",{style:{"text-align":"left"}},"二叉搜索树的最小绝对差",-1),Ms={style:{"text-align":"center"}},Us={style:{"text-align":"left"}},Ws=t("code",null,"树",-1),Xs=t("code",null,"深度优先搜索",-1),Zs=t("code",null,"广度优先搜索",-1),$s=t("code",null,"2+",-1),tn=t("td",{style:{"text-align":"left"}},"🟢",-1),en={style:{"text-align":"center"}},on={href:"https://leetcode.cn/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},sn=t("td",{style:{"text-align":"center"}},"538",-1),nn=t("td",{style:{"text-align":"left"}},"把二叉搜索树转换为累加树",-1),dn=t("td",{style:{"text-align":"center"}},null,-1),_n={style:{"text-align":"left"}},rn=t("code",null,"树",-1),cn=t("code",null,"深度优先搜索",-1),an=t("code",null,"二叉搜索树",-1),hn=t("code",null,"1+",-1),un=t("td",{style:{"text-align":"left"}},"🟠",-1),fn={style:{"text-align":"center"}},gn={href:"https://leetcode.cn/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},yn=t("td",{style:{"text-align":"center"}},"653",-1),pn=t("td",{style:{"text-align":"left"}},"两数之和 IV - 输入二叉搜索树",-1),bn=t("td",{style:{"text-align":"center"}},null,-1),xn={style:{"text-align":"left"}},kn=t("code",null,"树",-1),vn=t("code",null,"深度优先搜索",-1),In=t("code",null,"广度优先搜索",-1),wn=t("code",null,"4+",-1),qn=t("td",{style:{"text-align":"left"}},"🟢",-1),zn={style:{"text-align":"center"}},jn={href:"https://leetcode.cn/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},On={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Bn=t("td",{style:{"text-align":"center"}},"669",-1),Nn=t("td",{style:{"text-align":"left"}},"修剪二叉搜索树",-1),Cn=t("td",{style:{"text-align":"center"}},null,-1),Ln={style:{"text-align":"left"}},Vn=t("code",null,"树",-1),Kn=t("code",null,"深度优先搜索",-1),Tn=t("code",null,"二叉搜索树",-1),En=t("code",null,"1+",-1),Pn=t("td",{style:{"text-align":"left"}},"🟠",-1),Qn={style:{"text-align":"center"}},Rn={href:"https://leetcode.cn/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},"700",-1),Yn=t("td",{style:{"text-align":"left"}},"二叉搜索树中的搜索",-1),An={style:{"text-align":"center"}},Dn={style:{"text-align":"left"}},Fn=t("code",null,"树",-1),Hn=t("code",null,"二叉搜索树",-1),Jn=t("code",null,"二叉树",-1),Mn=t("td",{style:{"text-align":"left"}},"🟢",-1),Un={style:{"text-align":"center"}},Wn={href:"https://leetcode.cn/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Zn=t("td",{style:{"text-align":"center"}},"701",-1),$n=t("td",{style:{"text-align":"left"}},"二叉搜索树中的插入操作",-1),td={style:{"text-align":"center"}},ed={style:{"text-align":"left"}},od=t("code",null,"树",-1),ld=t("code",null,"二叉搜索树",-1),sd=t("code",null,"二叉树",-1),nd=t("td",{style:{"text-align":"left"}},"🟠",-1),dd={style:{"text-align":"center"}},_d={href:"https://leetcode.cn/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},rd={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},cd=t("td",{style:{"text-align":"center"}},"703",-1),ad=t("td",{style:{"text-align":"left"}},"数据流中的第 K 大元素",-1),id={style:{"text-align":"center"}},hd={style:{"text-align":"left"}},ud=t("code",null,"树",-1),fd=t("code",null,"设计",-1),gd=t("code",null,"二叉搜索树",-1),md=t("code",null,"3+",-1),yd=t("td",{style:{"text-align":"left"}},"🟢",-1),pd={style:{"text-align":"center"}},bd={href:"https://leetcode.cn/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},xd={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},"776",-1),vd=t("td",{style:{"text-align":"left"}},"拆分二叉搜索树 🔒",-1),Id=t("td",{style:{"text-align":"center"}},null,-1),wd={style:{"text-align":"left"}},qd=t("code",null,"树",-1),zd=t("code",null,"二叉搜索树",-1),jd=t("code",null,"递归",-1),Od=t("code",null,"1+",-1),Bd=t("td",{style:{"text-align":"left"}},"🟠",-1),Nd={style:{"text-align":"center"}},Cd={href:"https://leetcode.cn/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},Ld={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},Vd=t("td",{style:{"text-align":"center"}},"783",-1),Kd=t("td",{style:{"text-align":"left"}},"二叉搜索树节点最小距离",-1),Td={style:{"text-align":"center"}},Ed={style:{"text-align":"left"}},Pd=t("code",null,"树",-1),Qd=t("code",null,"深度优先搜索",-1),Rd=t("code",null,"广度优先搜索",-1),Gd=t("code",null,"2+",-1),Sd=t("td",{style:{"text-align":"left"}},"🟢",-1),Yd={style:{"text-align":"center"}},Ad={href:"https://leetcode.cn/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},Dd={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},"897",-1),Hd=t("td",{style:{"text-align":"left"}},"递增顺序搜索树",-1),Jd=t("td",{style:{"text-align":"center"}},null,-1),Md={style:{"text-align":"left"}},Ud=t("code",null,"栈",-1),Wd=t("code",null,"树",-1),Xd=t("code",null,"深度优先搜索",-1),Zd=t("code",null,"2+",-1),$d=t("td",{style:{"text-align":"left"}},"🟢",-1),t_={style:{"text-align":"center"}},e_={href:"https://leetcode.cn/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},o_={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},l_=t("td",{style:{"text-align":"center"}},"938",-1),s_=t("td",{style:{"text-align":"left"}},"二叉搜索树的范围和",-1),n_=t("td",{style:{"text-align":"center"}},null,-1),d_={style:{"text-align":"left"}},__=t("code",null,"树",-1),r_=t("code",null,"深度优先搜索",-1),c_=t("code",null,"二叉搜索树",-1),a_=t("code",null,"1+",-1),i_=t("td",{style:{"text-align":"left"}},"🟢",-1),h_={style:{"text-align":"center"}},u_={href:"https://leetcode.cn/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},f_={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},g_=t("td",{style:{"text-align":"center"}},"1008",-1),m_=t("td",{style:{"text-align":"left"}},"前序遍历构造二叉搜索树",-1),y_={style:{"text-align":"center"}},p_={style:{"text-align":"left"}},b_=t("code",null,"栈",-1),x_=t("code",null,"树",-1),k_=t("code",null,"二叉搜索树",-1),v_=t("code",null,"3+",-1),I_=t("td",{style:{"text-align":"left"}},"🟠",-1),w_={style:{"text-align":"center"}},q_={href:"https://leetcode.cn/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},z_={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},j_=t("td",{style:{"text-align":"center"}},"1038",-1),O_=t("td",{style:{"text-align":"left"}},"从二叉搜索树到更大和树",-1),B_=t("td",{style:{"text-align":"center"}},null,-1),N_={style:{"text-align":"left"}},C_=t("code",null,"树",-1),L_=t("code",null,"深度优先搜索",-1),V_=t("code",null,"二叉搜索树",-1),K_=t("code",null,"1+",-1),T_=t("td",{style:{"text-align":"left"}},"🟠",-1),E_={style:{"text-align":"center"}},P_={href:"https://leetcode.cn/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},Q_={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},R_=t("td",{style:{"text-align":"center"}},"1214",-1),G_=t("td",{style:{"text-align":"left"}},"查找两棵二叉搜索树之和 🔒",-1),S_=t("td",{style:{"text-align":"center"}},null,-1),Y_={style:{"text-align":"left"}},A_=t("code",null,"栈",-1),D_=t("code",null,"树",-1),F_=t("code",null,"深度优先搜索",-1),H_=t("code",null,"4+",-1),J_=t("td",{style:{"text-align":"left"}},"🟠",-1),M_={style:{"text-align":"center"}},U_={href:"https://leetcode.cn/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},W_={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},X_=t("td",{style:{"text-align":"center"}},"1305",-1),Z_=t("td",{style:{"text-align":"left"}},"两棵二叉搜索树中的所有元素",-1),$_=t("td",{style:{"text-align":"center"}},null,-1),tr={style:{"text-align":"left"}},er=t("code",null,"树",-1),or=t("code",null,"深度优先搜索",-1),lr=t("code",null,"二叉搜索树",-1),sr=t("code",null,"2+",-1),nr=t("td",{style:{"text-align":"left"}},"🟠",-1),dr={style:{"text-align":"center"}},_r={href:"https://leetcode.cn/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},cr=t("td",{style:{"text-align":"center"}},"1373",-1),ar=t("td",{style:{"text-align":"left"}},"二叉搜索子树的最大键值和",-1),ir=t("td",{style:{"text-align":"center"}},null,-1),hr={style:{"text-align":"left"}},ur=t("code",null,"树",-1),fr=t("code",null,"深度优先搜索",-1),gr=t("code",null,"二叉搜索树",-1),mr=t("code",null,"2+",-1),yr=t("td",{style:{"text-align":"left"}},"🔴",-1),pr={style:{"text-align":"center"}},br={href:"https://leetcode.cn/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},xr={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},kr=t("td",{style:{"text-align":"center"}},"1382",-1),vr=t("td",{style:{"text-align":"left"}},"将二叉搜索树变平衡",-1),Ir=t("td",{style:{"text-align":"center"}},null,-1),wr={style:{"text-align":"left"}},qr=t("code",null,"贪心",-1),zr=t("code",null,"树",-1),jr=t("code",null,"深度优先搜索",-1),Or=t("code",null,"3+",-1),Br=t("td",{style:{"text-align":"left"}},"🟠",-1),Nr={style:{"text-align":"center"}},Cr={href:"https://leetcode.cn/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Lr={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Vr=t("td",{style:{"text-align":"center"}},"1569",-1),Kr=t("td",{style:{"text-align":"left"}},"将子数组重新排序得到同一个二叉搜索树的方案数",-1),Tr=t("td",{style:{"text-align":"center"}},null,-1),Er={style:{"text-align":"left"}},Pr=t("code",null,"树",-1),Qr=t("code",null,"并查集",-1),Rr=t("code",null,"二叉搜索树",-1),Gr=t("code",null,"7+",-1),Sr=t("td",{style:{"text-align":"left"}},"🔴",-1),Yr={style:{"text-align":"center"}},Ar={href:"https://leetcode.cn/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},Dr={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},Fr=t("td",{style:{"text-align":"center"}},"1586",-1),Hr=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器 II 🔒",-1),Jr=t("td",{style:{"text-align":"center"}},null,-1),Mr={style:{"text-align":"left"}},Ur=t("code",null,"栈",-1),Wr=t("code",null,"树",-1),Xr=t("code",null,"设计",-1),Zr=t("code",null,"3+",-1),$r=t("td",{style:{"text-align":"left"}},"🟠",-1),tc={style:{"text-align":"center"}},ec={href:"https://leetcode.cn/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},oc={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},lc=t("td",{style:{"text-align":"center"}},"1902",-1),sc=t("td",{style:{"text-align":"left"}},"给定二叉搜索树的插入顺序求深度 🔒",-1),nc=t("td",{style:{"text-align":"center"}},null,-1),dc={style:{"text-align":"left"}},_c=t("code",null,"树",-1),rc=t("code",null,"二叉搜索树",-1),cc=t("code",null,"数组",-1),ac=t("code",null,"2+",-1),ic=t("td",{style:{"text-align":"left"}},"🟠",-1),hc={style:{"text-align":"center"}},uc={href:"https://leetcode.cn/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},fc={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},gc=t("td",{style:{"text-align":"center"}},"2476",-1),mc=t("td",{style:{"text-align":"left"}},"二叉搜索树最近节点查询",-1),yc=t("td",{style:{"text-align":"center"}},null,-1),pc={style:{"text-align":"left"}},bc=t("code",null,"树",-1),xc=t("code",null,"深度优先搜索",-1),kc=t("code",null,"二叉搜索树",-1),vc=t("code",null,"3+",-1),Ic=t("td",{style:{"text-align":"left"}},"🟠",-1),wc={style:{"text-align":"center"}},qc={href:"https://leetcode.cn/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},zc={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},jc=t("td",{style:{"text-align":"center"}},"LCP 52",-1),Oc=t("td",{style:{"text-align":"left"}},"二叉搜索树染色",-1),Bc=t("td",{style:{"text-align":"center"}},null,-1),Nc={style:{"text-align":"left"}},Cc=t("code",null,"树",-1),Lc=t("code",null,"线段树",-1),Vc=t("code",null,"二叉搜索树",-1),Kc=t("code",null,"4+",-1),Tc=t("td",{style:{"text-align":"left"}},"🟠",-1),Ec={style:{"text-align":"center"}},Pc={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},Qc=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),Rc=t("td",{style:{"text-align":"left"}},"二叉搜索树的后序遍历序列",-1),Gc={style:{"text-align":"center"}},Sc={style:{"text-align":"left"}},Yc=t("code",null,"栈",-1),Ac=t("code",null,"树",-1),Dc=t("code",null,"二叉搜索树",-1),Fc=t("code",null,"4+",-1),Hc=t("td",{style:{"text-align":"left"}},"🟠",-1),Jc={style:{"text-align":"center"}},Mc={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},Uc=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),Wc=t("td",{style:{"text-align":"left"}},"二叉搜索树与双向链表",-1),Xc={style:{"text-align":"center"}},Zc={style:{"text-align":"left"}},$c=t("code",null,"栈",-1),ta=t("code",null,"树",-1),ea=t("code",null,"深度优先搜索",-1),oa=t("code",null,"4+",-1),la=t("td",{style:{"text-align":"left"}},"🟠",-1),sa={style:{"text-align":"center"}},na={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},da=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),_a=t("td",{style:{"text-align":"left"}},"二叉搜索树的第k大节点",-1),ra={style:{"text-align":"center"}},ca={style:{"text-align":"left"}},aa=t("code",null,"树",-1),ia=t("code",null,"深度优先搜索",-1),ha=t("code",null,"二叉搜索树",-1),ua=t("code",null,"1+",-1),fa=t("td",{style:{"text-align":"left"}},"🟢",-1),ga={style:{"text-align":"center"}},ma={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},ya=t("td",{style:{"text-align":"center"}},"剑指 Offer 68",-1),pa=t("td",{style:{"text-align":"left"}},"二叉搜索树的最近公共祖先",-1),ba={style:{"text-align":"center"}},xa={style:{"text-align":"left"}},ka=t("code",null,"树",-1),va=t("code",null,"深度优先搜索",-1),Ia=t("code",null,"二叉搜索树",-1),wa=t("code",null,"1+",-1),qa=t("td",{style:{"text-align":"left"}},"🟢",-1),za={style:{"text-align":"center"}},ja={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),Ba=t("td",{style:{"text-align":"left"}},"展平二叉搜索树",-1),Na=t("td",{style:{"text-align":"center"}},null,-1),Ca={style:{"text-align":"left"}},La=t("code",null,"栈",-1),Va=t("code",null,"树",-1),Ka=t("code",null,"深度优先搜索",-1),Ta=t("code",null,"2+",-1),Ea=t("td",{style:{"text-align":"left"}},"🟢",-1),Pa={style:{"text-align":"center"}},Qa={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},Ra=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),Ga=t("td",{style:{"text-align":"left"}},"二叉搜索树中的中序后继",-1),Sa=t("td",{style:{"text-align":"center"}},null,-1),Ya={style:{"text-align":"left"}},Aa=t("code",null,"树",-1),Da=t("code",null,"深度优先搜索",-1),Fa=t("code",null,"二叉搜索树",-1),Ha=t("code",null,"1+",-1),Ja=t("td",{style:{"text-align":"left"}},"🟠",-1),Ma={style:{"text-align":"center"}},Ua={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),Xa=t("td",{style:{"text-align":"left"}},"所有大于等于节点的值之和",-1),Za=t("td",{style:{"text-align":"center"}},null,-1),$a={style:{"text-align":"left"}},ti=t("code",null,"树",-1),ei=t("code",null,"深度优先搜索",-1),oi=t("code",null,"二叉搜索树",-1),li=t("code",null,"1+",-1),si=t("td",{style:{"text-align":"left"}},"🟠",-1),ni={style:{"text-align":"center"}},di={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},_i=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),ri=t("td",{style:{"text-align":"left"}},"二叉搜索树迭代器",-1),ci={style:{"text-align":"center"}},ai={style:{"text-align":"left"}},ii=t("code",null,"栈",-1),hi=t("code",null,"树",-1),ui=t("code",null,"设计",-1),fi=t("code",null,"3+",-1),gi=t("td",{style:{"text-align":"left"}},"🟠",-1),mi={style:{"text-align":"center"}},yi={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},pi=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),bi=t("td",{style:{"text-align":"left"}},"数据流的第 K 大数值",-1),xi={style:{"text-align":"center"}},ki={style:{"text-align":"left"}},vi=t("code",null,"树",-1),Ii=t("code",null,"设计",-1),wi=t("code",null,"二叉搜索树",-1),qi=t("code",null,"3+",-1),zi=t("td",{style:{"text-align":"left"}},"🟢",-1),ji={style:{"text-align":"center"}},Oi={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},Bi=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),Ni=t("td",{style:{"text-align":"left"}},"最小高度树",-1),Ci=t("td",{style:{"text-align":"center"}},null,-1),Li={style:{"text-align":"left"}},Vi=t("code",null,"树",-1),Ki=t("code",null,"二叉搜索树",-1),Ti=t("code",null,"数组",-1),Ei=t("code",null,"2+",-1),Pi=t("td",{style:{"text-align":"left"}},"🟢",-1),Qi={style:{"text-align":"center"}},Ri={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},Gi=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),Si=t("td",{style:{"text-align":"left"}},"合法二叉搜索树",-1),Yi=t("td",{style:{"text-align":"center"}},null,-1),Ai={style:{"text-align":"left"}},Di=t("code",null,"树",-1),Fi=t("code",null,"深度优先搜索",-1),Hi=t("code",null,"二叉搜索树",-1),Ji=t("code",null,"1+",-1),Mi=t("td",{style:{"text-align":"left"}},"🟠",-1),Ui={style:{"text-align":"center"}},Wi={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},Xi=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),Zi=t("td",{style:{"text-align":"left"}},"后继者",-1),$i=t("td",{style:{"text-align":"center"}},null,-1),th={style:{"text-align":"left"}},eh=t("code",null,"树",-1),oh=t("code",null,"深度优先搜索",-1),lh=t("code",null,"二叉搜索树",-1),sh=t("code",null,"1+",-1),nh=t("td",{style:{"text-align":"left"}},"🟠",-1),dh={style:{"text-align":"center"}},_h={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},rh=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),ch=t("td",{style:{"text-align":"left"}},"二叉搜索树序列",-1),ah=t("td",{style:{"text-align":"center"}},null,-1),ih={style:{"text-align":"left"}},hh=t("code",null,"树",-1),uh=t("code",null,"二叉搜索树",-1),fh=t("code",null,"回溯",-1),gh=t("code",null,"1+",-1),mh=t("td",{style:{"text-align":"left"}},"🔴",-1),yh={style:{"text-align":"center"}},ph={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},bh=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),xh=t("td",{style:{"text-align":"left"}},"BiNode",-1),kh=t("td",{style:{"text-align":"center"}},null,-1),vh={style:{"text-align":"left"}},Ih=t("code",null,"栈",-1),wh=t("code",null,"树",-1),qh=t("code",null,"深度优先搜索",-1),zh=t("code",null,"3+",-1),jh=t("td",{style:{"text-align":"left"}},"🟢",-1),Oh={style:{"text-align":"center"}},Bh={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"};function Nh(Ch,Lh){const l=d("RouterLink"),n=d("ExternalLinkIcon");return r(),c("div",null,[h,t("details",null,[u,f,t("p",null,[o(l,{to:"/tag/array.html"},{default:s(()=>[g]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:s(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:s(()=>[y]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:s(()=>[p]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:s(()=>[b]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:s(()=>[x]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:s(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:s(()=>[v]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:s(()=>[I]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:s(()=>[w]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:s(()=>[q]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:s(()=>[z]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[j]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[O]),_:1}),e(),B,e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:s(()=>[N]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:s(()=>[C]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:s(()=>[L]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:s(()=>[V]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:s(()=>[K]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:s(()=>[T]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:s(()=>[E]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:s(()=>[P]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Q]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:s(()=>[R]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:s(()=>[G]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:s(()=>[S]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:s(()=>[Y]),_:1})]),A,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:s(()=>[D]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:s(()=>[F]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:s(()=>[H]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:s(()=>[J]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:s(()=>[M]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[U]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:s(()=>[W]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:s(()=>[X]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:s(()=>[Z]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:s(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:s(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:s(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:s(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:s(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[st]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[nt]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:s(()=>[dt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:s(()=>[_t]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:s(()=>[rt]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:s(()=>[ct]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:s(()=>[at]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:s(()=>[it]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:s(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:s(()=>[ut]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:s(()=>[ft]),_:1})]),gt,t("p",null,[o(l,{to:"/tag/math.html"},{default:s(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:s(()=>[yt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:s(()=>[pt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:s(()=>[bt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:s(()=>[xt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:s(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:s(()=>[vt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:s(()=>[It]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:s(()=>[wt]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:s(()=>[qt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:s(()=>[zt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[jt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:s(()=>[Ot]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:s(()=>[Bt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:s(()=>[Nt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:s(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:s(()=>[Lt]),_:1})])]),Vt,a(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Tt,Et,t("td",Pt,[o(l,{to:"/problem/0095.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Qt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Rt]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Gt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:s(()=>[St]),_:1}),e(),Yt]),At,t("td",Dt,[t("a",Ft,[e("🀄️"),o(n)]),e(),t("a",Ht,[e("🔗"),o(n)])])]),t("tr",null,[Jt,Mt,t("td",Ut,[o(l,{to:"/problem/0096.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Wt,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Xt]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Zt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:s(()=>[$t]),_:1}),e(),te]),ee,t("td",oe,[t("a",le,[e("🀄️"),o(n)]),e(),t("a",se,[e("🔗"),o(n)])])]),t("tr",null,[ne,de,t("td",_e,[o(l,{to:"/problem/0098.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",re,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ce]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ae]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[ie]),_:1}),e(),he]),ue,t("td",fe,[t("a",ge,[e("🀄️"),o(n)]),e(),t("a",me,[e("🔗"),o(n)])])]),t("tr",null,[ye,pe,t("td",be,[o(l,{to:"/problem/0099.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",xe,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ke]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ve]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Ie]),_:1}),e(),we]),qe,t("td",ze,[t("a",je,[e("🀄️"),o(n)]),e(),t("a",Oe,[e("🔗"),o(n)])])]),t("tr",null,[Be,Ne,t("td",Ce,[o(l,{to:"/problem/0108.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Le,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Ve]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Ke]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[Te]),_:1}),e(),Ee]),Pe,t("td",Qe,[t("a",Re,[e("🀄️"),o(n)]),e(),t("a",Ge,[e("🔗"),o(n)])])]),t("tr",null,[Se,Ye,t("td",Ae,[o(l,{to:"/problem/0109.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",De,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Fe]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[He]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:s(()=>[Je]),_:1}),e(),Me]),Ue,t("td",We,[t("a",Xe,[e("🀄️"),o(n)]),e(),t("a",Ze,[e("🔗"),o(n)])])]),t("tr",null,[$e,to,t("td",eo,[o(l,{to:"/problem/0173.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",oo,[o(l,{to:"/tag/stack.html"},{default:s(()=>[lo]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[so]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[no]),_:1}),e(),_o]),ro,t("td",co,[t("a",ao,[e("🀄️"),o(n)]),e(),t("a",io,[e("🔗"),o(n)])])]),t("tr",null,[ho,uo,t("td",fo,[o(l,{to:"/problem/0230.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",go,[o(l,{to:"/tag/tree.html"},{default:s(()=>[mo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[yo]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[po]),_:1}),e(),bo]),xo,t("td",ko,[t("a",vo,[e("🀄️"),o(n)]),e(),t("a",Io,[e("🔗"),o(n)])])]),t("tr",null,[wo,qo,t("td",zo,[o(l,{to:"/problem/0235.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",jo,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Oo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Bo]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[No]),_:1}),e(),Co]),Lo,t("td",Vo,[t("a",Ko,[e("🀄️"),o(n)]),e(),t("a",To,[e("🔗"),o(n)])])]),t("tr",null,[Eo,Po,Qo,t("td",Ro,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Go]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[So]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Yo]),_:1}),e(),Ao]),Do,t("td",Fo,[t("a",Ho,[e("🀄️"),o(n)]),e(),t("a",Jo,[e("🔗"),o(n)])])]),t("tr",null,[Mo,Uo,Wo,t("td",Xo,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Zo]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[$o]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[tl]),_:1}),e(),el]),ol,t("td",ll,[t("a",sl,[e("🀄️"),o(n)]),e(),t("a",nl,[e("🔗"),o(n)])])]),t("tr",null,[dl,_l,rl,t("td",cl,[o(l,{to:"/tag/stack.html"},{default:s(()=>[al]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[il]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[hl]),_:1}),e(),ul]),fl,t("td",gl,[t("a",ml,[e("🀄️"),o(n)]),e(),t("a",yl,[e("🔗"),o(n)])])]),t("tr",null,[pl,bl,xl,t("td",kl,[o(l,{to:"/tag/tree.html"},{default:s(()=>[vl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Il]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[wl]),_:1}),e(),ql]),zl,t("td",jl,[t("a",Ol,[e("🀄️"),o(n)]),e(),t("a",Bl,[e("🔗"),o(n)])])]),t("tr",null,[Nl,Cl,Ll,t("td",Vl,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Kl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Tl]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[El]),_:1}),e(),Pl]),Ql,t("td",Rl,[t("a",Gl,[e("🀄️"),o(n)]),e(),t("a",Sl,[e("🔗"),o(n)])])]),t("tr",null,[Yl,Al,t("td",Dl,[o(l,{to:"/problem/0426.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Fl,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Hl]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[Jl]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ml]),_:1}),e(),Ul]),Wl,t("td",Xl,[t("a",Zl,[e("🀄️"),o(n)]),e(),t("a",$l,[e("🔗"),o(n)])])]),t("tr",null,[ts,es,os,t("td",ls,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ss]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ns]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[ds]),_:1}),e(),_s]),rs,t("td",cs,[t("a",as,[e("🀄️"),o(n)]),e(),t("a",is,[e("🔗"),o(n)])])]),t("tr",null,[hs,us,t("td",fs,[o(l,{to:"/problem/0450.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",gs,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ms]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[ys]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[ps]),_:1})]),bs,t("td",xs,[t("a",ks,[e("🀄️"),o(n)]),e(),t("a",vs,[e("🔗"),o(n)])])]),t("tr",null,[Is,ws,qs,t("td",zs,[o(l,{to:"/tag/tree.html"},{default:s(()=>[js]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Os]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Bs]),_:1}),e(),Ns]),Cs,t("td",Ls,[t("a",Vs,[e("🀄️"),o(n)]),e(),t("a",Ks,[e("🔗"),o(n)])])]),t("tr",null,[Ts,Es,Ps,t("td",Qs,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Rs]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Gs]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Ss]),_:1})]),Ys,t("td",As,[t("a",Ds,[e("🀄️"),o(n)]),e(),t("a",Fs,[e("🔗"),o(n)])])]),t("tr",null,[Hs,Js,t("td",Ms,[o(l,{to:"/problem/0530.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Us,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Ws]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Xs]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Zs]),_:1}),e(),$s]),tn,t("td",en,[t("a",on,[e("🀄️"),o(n)]),e(),t("a",ln,[e("🔗"),o(n)])])]),t("tr",null,[sn,nn,dn,t("td",_n,[o(l,{to:"/tag/tree.html"},{default:s(()=>[rn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[cn]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[an]),_:1}),e(),hn]),un,t("td",fn,[t("a",gn,[e("🀄️"),o(n)]),e(),t("a",mn,[e("🔗"),o(n)])])]),t("tr",null,[yn,pn,bn,t("td",xn,[o(l,{to:"/tag/tree.html"},{default:s(()=>[kn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[vn]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[In]),_:1}),e(),wn]),qn,t("td",zn,[t("a",jn,[e("🀄️"),o(n)]),e(),t("a",On,[e("🔗"),o(n)])])]),t("tr",null,[Bn,Nn,Cn,t("td",Ln,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Vn]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Kn]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Tn]),_:1}),e(),En]),Pn,t("td",Qn,[t("a",Rn,[e("🀄️"),o(n)]),e(),t("a",Gn,[e("🔗"),o(n)])])]),t("tr",null,[Sn,Yn,t("td",An,[o(l,{to:"/problem/0700.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Dn,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Fn]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Hn]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[Jn]),_:1})]),Mn,t("td",Un,[t("a",Wn,[e("🀄️"),o(n)]),e(),t("a",Xn,[e("🔗"),o(n)])])]),t("tr",null,[Zn,$n,t("td",td,[o(l,{to:"/problem/0701.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",ed,[o(l,{to:"/tag/tree.html"},{default:s(()=>[od]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[ld]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:s(()=>[sd]),_:1})]),nd,t("td",dd,[t("a",_d,[e("🀄️"),o(n)]),e(),t("a",rd,[e("🔗"),o(n)])])]),t("tr",null,[cd,ad,t("td",id,[o(l,{to:"/problem/0703.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",hd,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ud]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[fd]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[gd]),_:1}),e(),md]),yd,t("td",pd,[t("a",bd,[e("🀄️"),o(n)]),e(),t("a",xd,[e("🔗"),o(n)])])]),t("tr",null,[kd,vd,Id,t("td",wd,[o(l,{to:"/tag/tree.html"},{default:s(()=>[qd]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[zd]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:s(()=>[jd]),_:1}),e(),Od]),Bd,t("td",Nd,[t("a",Cd,[e("🀄️"),o(n)]),e(),t("a",Ld,[e("🔗"),o(n)])])]),t("tr",null,[Vd,Kd,t("td",Td,[o(l,{to:"/problem/0783.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Ed,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Pd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Qd]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:s(()=>[Rd]),_:1}),e(),Gd]),Sd,t("td",Yd,[t("a",Ad,[e("🀄️"),o(n)]),e(),t("a",Dd,[e("🔗"),o(n)])])]),t("tr",null,[Fd,Hd,Jd,t("td",Md,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Ud]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[Wd]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Xd]),_:1}),e(),Zd]),$d,t("td",t_,[t("a",e_,[e("🀄️"),o(n)]),e(),t("a",o_,[e("🔗"),o(n)])])]),t("tr",null,[l_,s_,n_,t("td",d_,[o(l,{to:"/tag/tree.html"},{default:s(()=>[__]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[r_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[c_]),_:1}),e(),a_]),i_,t("td",h_,[t("a",u_,[e("🀄️"),o(n)]),e(),t("a",f_,[e("🔗"),o(n)])])]),t("tr",null,[g_,m_,t("td",y_,[o(l,{to:"/problem/1008.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",p_,[o(l,{to:"/tag/stack.html"},{default:s(()=>[b_]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[x_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[k_]),_:1}),e(),v_]),I_,t("td",w_,[t("a",q_,[e("🀄️"),o(n)]),e(),t("a",z_,[e("🔗"),o(n)])])]),t("tr",null,[j_,O_,B_,t("td",N_,[o(l,{to:"/tag/tree.html"},{default:s(()=>[C_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[L_]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[V_]),_:1}),e(),K_]),T_,t("td",E_,[t("a",P_,[e("🀄️"),o(n)]),e(),t("a",Q_,[e("🔗"),o(n)])])]),t("tr",null,[R_,G_,S_,t("td",Y_,[o(l,{to:"/tag/stack.html"},{default:s(()=>[A_]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[D_]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[F_]),_:1}),e(),H_]),J_,t("td",M_,[t("a",U_,[e("🀄️"),o(n)]),e(),t("a",W_,[e("🔗"),o(n)])])]),t("tr",null,[X_,Z_,$_,t("td",tr,[o(l,{to:"/tag/tree.html"},{default:s(()=>[er]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[or]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[lr]),_:1}),e(),sr]),nr,t("td",dr,[t("a",_r,[e("🀄️"),o(n)]),e(),t("a",rr,[e("🔗"),o(n)])])]),t("tr",null,[cr,ar,ir,t("td",hr,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ur]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[fr]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[gr]),_:1}),e(),mr]),yr,t("td",pr,[t("a",br,[e("🀄️"),o(n)]),e(),t("a",xr,[e("🔗"),o(n)])])]),t("tr",null,[kr,vr,Ir,t("td",wr,[o(l,{to:"/tag/greedy.html"},{default:s(()=>[qr]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[zr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[jr]),_:1}),e(),Or]),Br,t("td",Nr,[t("a",Cr,[e("🀄️"),o(n)]),e(),t("a",Lr,[e("🔗"),o(n)])])]),t("tr",null,[Vr,Kr,Tr,t("td",Er,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Pr]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:s(()=>[Qr]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Rr]),_:1}),e(),Gr]),Sr,t("td",Yr,[t("a",Ar,[e("🀄️"),o(n)]),e(),t("a",Dr,[e("🔗"),o(n)])])]),t("tr",null,[Fr,Hr,Jr,t("td",Mr,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Ur]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[Wr]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[Xr]),_:1}),e(),Zr]),$r,t("td",tc,[t("a",ec,[e("🀄️"),o(n)]),e(),t("a",oc,[e("🔗"),o(n)])])]),t("tr",null,[lc,sc,nc,t("td",dc,[o(l,{to:"/tag/tree.html"},{default:s(()=>[_c]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[rc]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[cc]),_:1}),e(),ac]),ic,t("td",hc,[t("a",uc,[e("🀄️"),o(n)]),e(),t("a",fc,[e("🔗"),o(n)])])]),t("tr",null,[gc,mc,yc,t("td",pc,[o(l,{to:"/tag/tree.html"},{default:s(()=>[bc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[xc]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[kc]),_:1}),e(),vc]),Ic,t("td",wc,[t("a",qc,[e("🀄️"),o(n)]),e(),t("a",zc,[e("🔗"),o(n)])])]),t("tr",null,[jc,Oc,Bc,t("td",Nc,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Cc]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:s(()=>[Lc]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Vc]),_:1}),e(),Kc]),Tc,t("td",Ec,[t("a",Pc,[e("🀄️"),o(n)])])]),t("tr",null,[Qc,Rc,t("td",Gc,[o(l,{to:"/offer/jz_offer_33_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Sc,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Yc]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[Ac]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Dc]),_:1}),e(),Fc]),Hc,t("td",Jc,[t("a",Mc,[e("🀄️"),o(n)])])]),t("tr",null,[Uc,Wc,t("td",Xc,[o(l,{to:"/offer/jz_offer_36_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",Zc,[o(l,{to:"/tag/stack.html"},{default:s(()=>[$c]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[ta]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ea]),_:1}),e(),oa]),la,t("td",sa,[t("a",na,[e("🀄️"),o(n)])])]),t("tr",null,[da,_a,t("td",ra,[o(l,{to:"/offer/jz_offer_54_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",ca,[o(l,{to:"/tag/tree.html"},{default:s(()=>[aa]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ia]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[ha]),_:1}),e(),ua]),fa,t("td",ga,[t("a",ma,[e("🀄️"),o(n)])])]),t("tr",null,[ya,pa,t("td",ba,[o(l,{to:"/offer/jz_offer_68_1.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",xa,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ka]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[va]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Ia]),_:1}),e(),wa]),qa,t("td",za,[t("a",ja,[e("🀄️"),o(n)])])]),t("tr",null,[Oa,Ba,Na,t("td",Ca,[o(l,{to:"/tag/stack.html"},{default:s(()=>[La]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[Va]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Ka]),_:1}),e(),Ta]),Ea,t("td",Pa,[t("a",Qa,[e("🀄️"),o(n)])])]),t("tr",null,[Ra,Ga,Sa,t("td",Ya,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Aa]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Da]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Fa]),_:1}),e(),Ha]),Ja,t("td",Ma,[t("a",Ua,[e("🀄️"),o(n)])])]),t("tr",null,[Wa,Xa,Za,t("td",$a,[o(l,{to:"/tag/tree.html"},{default:s(()=>[ti]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[ei]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[oi]),_:1}),e(),li]),si,t("td",ni,[t("a",di,[e("🀄️"),o(n)])])]),t("tr",null,[_i,ri,t("td",ci,[o(l,{to:"/offer2/jz_offer_II_055.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",ai,[o(l,{to:"/tag/stack.html"},{default:s(()=>[ii]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[hi]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[ui]),_:1}),e(),fi]),gi,t("td",mi,[t("a",yi,[e("🀄️"),o(n)])])]),t("tr",null,[pi,bi,t("td",xi,[o(l,{to:"/offer2/jz_offer_II_059.html"},{default:s(()=>[e("[✓]")]),_:1})]),t("td",ki,[o(l,{to:"/tag/tree.html"},{default:s(()=>[vi]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:s(()=>[Ii]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[wi]),_:1}),e(),qi]),zi,t("td",ji,[t("a",Oi,[e("🀄️"),o(n)])])]),t("tr",null,[Bi,Ni,Ci,t("td",Li,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Vi]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Ki]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:s(()=>[Ti]),_:1}),e(),Ei]),Pi,t("td",Qi,[t("a",Ri,[e("🀄️"),o(n)])])]),t("tr",null,[Gi,Si,Yi,t("td",Ai,[o(l,{to:"/tag/tree.html"},{default:s(()=>[Di]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[Fi]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[Hi]),_:1}),e(),Ji]),Mi,t("td",Ui,[t("a",Wi,[e("🀄️"),o(n)])])]),t("tr",null,[Xi,Zi,$i,t("td",th,[o(l,{to:"/tag/tree.html"},{default:s(()=>[eh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[oh]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[lh]),_:1}),e(),sh]),nh,t("td",dh,[t("a",_h,[e("🀄️"),o(n)])])]),t("tr",null,[rh,ch,ah,t("td",ih,[o(l,{to:"/tag/tree.html"},{default:s(()=>[hh]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:s(()=>[uh]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:s(()=>[fh]),_:1}),e(),gh]),mh,t("td",yh,[t("a",ph,[e("🀄️"),o(n)])])]),t("tr",null,[bh,xh,kh,t("td",vh,[o(l,{to:"/tag/stack.html"},{default:s(()=>[Ih]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:s(()=>[wh]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:s(()=>[qh]),_:1}),e(),zh]),jh,t("td",Oh,[t("a",Bh,[e("🀄️"),o(n)])])])])])])}const Kh=_(i,[["render",Nh],["__file","binary-search-tree.html.vue"]]);export{Kh as default};
