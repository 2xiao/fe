import{_ as i,r as _,o as r,c as a,a as t,b as e,w as o,d as l,f as c}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"广度优先搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#广度优先搜索","aria-hidden":"true"},"#"),l(" 广度优先搜索")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),z=t("code",null,"字符串",-1),E=t("code",null,"字符串匹配",-1),O=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),j=t("code",null,"最小生成树",-1),P=t("code",null,"图",-1),q=t("code",null,"有序集合",-1),N=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),B=t("code",null,"并查集",-1),D=t("code",null,"字典树",-1),J=t("code",null,"线段树",-1),U=t("code",null,"树状数组",-1),W=t("code",null,"后缀数组",-1),X=t("p",null,[t("strong",null,"算法")],-1),Y=t("code",null,"枚举",-1),Z=t("code",null,"递归",-1),F=t("code",null,"分治",-1),Q=t("code",null,"回溯",-1),R=t("code",null,"贪心",-1),S=t("code",null,"动态规划",-1),G=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("span",{class:"blue"},"广度优先搜索",-1),it=t("code",null,"双指针",-1),rt=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),zt=t("code",null,"拒绝采样",-1),Et=t("code",null,"数据库",-1),Ot=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),jt=t("code",null,"交互",-1),Pt=t("code",null,"迭代器",-1),qt=t("code",null,"多线程",-1),Nt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"100",-1),Tt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Bt={style:{"text-align":"center"}},Dt={href:"/problem/0100",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"left"}},Ut=t("code",null,"树",-1),Wt=t("code",null,"深度优先搜索",-1),Xt=t("code",null,"广度优先搜索",-1),Yt=t("code",null,"1+",-1),Zt={style:{"text-align":"left"}},Ft=t("td",{style:{"text-align":"center"}},"101",-1),Qt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},St={style:{"text-align":"center"}},Gt={href:"/problem/0101",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"树",-1),ee=t("code",null,"深度优先搜索",-1),le=t("code",null,"广度优先搜索",-1),oe=t("code",null,"1+",-1),ne={style:{"text-align":"left"}},se=t("td",{style:{"text-align":"center"}},"102",-1),de={style:{"text-align":"left"}},_e={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},ie={style:{"text-align":"center"}},re={href:"/problem/0102",target:"_blank",rel:"noopener noreferrer"},ae={style:{"text-align":"left"}},ce=t("code",null,"树",-1),he=t("code",null,"广度优先搜索",-1),ue=t("code",null,"二叉树",-1),fe={style:{"text-align":"left"}},ge=t("td",{style:{"text-align":"center"}},"103",-1),me={style:{"text-align":"left"}},ye={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"center"}},be={href:"/problem/0103",target:"_blank",rel:"noopener noreferrer"},pe={style:{"text-align":"left"}},ke=t("code",null,"树",-1),Me=t("code",null,"广度优先搜索",-1),Ie=t("code",null,"二叉树",-1),ve={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"104",-1),we={style:{"text-align":"left"}},ze={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ee={style:{"text-align":"center"}},Oe={href:"/problem/0104",target:"_blank",rel:"noopener noreferrer"},Le={style:{"text-align":"left"}},Ce=t("code",null,"树",-1),je=t("code",null,"深度优先搜索",-1),Pe=t("code",null,"广度优先搜索",-1),qe=t("code",null,"1+",-1),Ne={style:{"text-align":"left"}},Ve=t("td",{style:{"text-align":"center"}},"107",-1),Ke={style:{"text-align":"left"}},Te={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},Ae={style:{"text-align":"center"}},Be={href:"/problem/0107",target:"_blank",rel:"noopener noreferrer"},De={style:{"text-align":"left"}},Je=t("code",null,"树",-1),Ue=t("code",null,"广度优先搜索",-1),We=t("code",null,"二叉树",-1),Xe={style:{"text-align":"left"}},Ye=t("td",{style:{"text-align":"center"}},"111",-1),Ze={style:{"text-align":"left"}},Fe={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qe={style:{"text-align":"center"}},Re={href:"/problem/0111",target:"_blank",rel:"noopener noreferrer"},Se={style:{"text-align":"left"}},Ge=t("code",null,"树",-1),$e=t("code",null,"深度优先搜索",-1),tl=t("code",null,"广度优先搜索",-1),el=t("code",null,"1+",-1),ll={style:{"text-align":"left"}},ol=t("td",{style:{"text-align":"center"}},"112",-1),nl={style:{"text-align":"left"}},sl={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},dl={style:{"text-align":"center"}},_l={href:"/problem/0112",target:"_blank",rel:"noopener noreferrer"},il={style:{"text-align":"left"}},rl=t("code",null,"树",-1),al=t("code",null,"深度优先搜索",-1),cl=t("code",null,"广度优先搜索",-1),hl=t("code",null,"1+",-1),ul={style:{"text-align":"left"}},fl=t("td",{style:{"text-align":"center"}},"116",-1),gl={style:{"text-align":"left"}},ml={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},yl={style:{"text-align":"center"}},xl={href:"/problem/0116",target:"_blank",rel:"noopener noreferrer"},bl={style:{"text-align":"left"}},pl=t("code",null,"树",-1),kl=t("code",null,"深度优先搜索",-1),Ml=t("code",null,"广度优先搜索",-1),Il=t("code",null,"2+",-1),vl={style:{"text-align":"left"}},Hl=t("td",{style:{"text-align":"center"}},"117",-1),wl={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},El={style:{"text-align":"center"}},Ol={href:"/problem/0117",target:"_blank",rel:"noopener noreferrer"},Ll={style:{"text-align":"left"}},Cl=t("code",null,"树",-1),jl=t("code",null,"深度优先搜索",-1),Pl=t("code",null,"广度优先搜索",-1),ql=t("code",null,"2+",-1),Nl={style:{"text-align":"left"}},Vl=t("td",{style:{"text-align":"center"}},"126",-1),Kl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/word-ladder-ii",target:"_blank",rel:"noopener noreferrer"},Al=t("td",{style:{"text-align":"center"}},null,-1),Bl={style:{"text-align":"left"}},Dl=t("code",null,"广度优先搜索",-1),Jl=t("code",null,"哈希表",-1),Ul=t("code",null,"字符串",-1),Wl=t("code",null,"1+",-1),Xl={style:{"text-align":"left"}},Yl=t("td",{style:{"text-align":"center"}},"127",-1),Zl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/word-ladder",target:"_blank",rel:"noopener noreferrer"},Ql={style:{"text-align":"center"}},Rl={href:"/problem/0127",target:"_blank",rel:"noopener noreferrer"},Sl={style:{"text-align":"left"}},Gl=t("code",null,"广度优先搜索",-1),$l=t("code",null,"哈希表",-1),to=t("code",null,"字符串",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"130",-1),oo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},so={style:{"text-align":"center"}},_o={href:"/problem/0130",target:"_blank",rel:"noopener noreferrer"},io={style:{"text-align":"left"}},ro=t("code",null,"深度优先搜索",-1),ao=t("code",null,"广度优先搜索",-1),co=t("code",null,"并查集",-1),ho=t("code",null,"2+",-1),uo={style:{"text-align":"left"}},fo=t("td",{style:{"text-align":"center"}},"133",-1),go={style:{"text-align":"left"}},mo={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},yo={style:{"text-align":"center"}},xo={href:"/problem/0133",target:"_blank",rel:"noopener noreferrer"},bo={style:{"text-align":"left"}},po=t("code",null,"深度优先搜索",-1),ko=t("code",null,"广度优先搜索",-1),Mo=t("code",null,"图",-1),Io=t("code",null,"1+",-1),vo={style:{"text-align":"left"}},Ho=t("td",{style:{"text-align":"center"}},"199",-1),wo={style:{"text-align":"left"}},zo={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},Eo={style:{"text-align":"center"}},Oo={href:"/problem/0199",target:"_blank",rel:"noopener noreferrer"},Lo={style:{"text-align":"left"}},Co=t("code",null,"树",-1),jo=t("code",null,"深度优先搜索",-1),Po=t("code",null,"广度优先搜索",-1),qo=t("code",null,"1+",-1),No={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"200",-1),Ko={style:{"text-align":"left"}},To={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},Ao={style:{"text-align":"center"}},Bo={href:"/problem/0200",target:"_blank",rel:"noopener noreferrer"},Do={style:{"text-align":"left"}},Jo=t("code",null,"深度优先搜索",-1),Uo=t("code",null,"广度优先搜索",-1),Wo=t("code",null,"并查集",-1),Xo=t("code",null,"2+",-1),Yo={style:{"text-align":"left"}},Zo=t("td",{style:{"text-align":"center"}},"207",-1),Fo={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Ro={style:{"text-align":"center"}},So={href:"/problem/0207",target:"_blank",rel:"noopener noreferrer"},Go={style:{"text-align":"left"}},$o=t("code",null,"深度优先搜索",-1),tn=t("code",null,"广度优先搜索",-1),en=t("code",null,"图",-1),ln=t("code",null,"1+",-1),on={style:{"text-align":"left"}},nn=t("td",{style:{"text-align":"center"}},"210",-1),sn={style:{"text-align":"left"}},dn={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},_n={style:{"text-align":"center"}},rn={href:"/problem/0210",target:"_blank",rel:"noopener noreferrer"},an={style:{"text-align":"left"}},cn=t("code",null,"深度优先搜索",-1),hn=t("code",null,"广度优先搜索",-1),un=t("code",null,"图",-1),fn=t("code",null,"1+",-1),gn={style:{"text-align":"left"}},mn=t("td",{style:{"text-align":"center"}},"226",-1),yn={style:{"text-align":"left"}},xn={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},bn={style:{"text-align":"center"}},pn={href:"/problem/0226",target:"_blank",rel:"noopener noreferrer"},kn={style:{"text-align":"left"}},Mn=t("code",null,"树",-1),In=t("code",null,"深度优先搜索",-1),vn=t("code",null,"广度优先搜索",-1),Hn=t("code",null,"1+",-1),wn={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"261",-1),En={style:{"text-align":"left"}},On={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},Ln=t("td",{style:{"text-align":"center"}},null,-1),Cn={style:{"text-align":"left"}},jn=t("code",null,"深度优先搜索",-1),Pn=t("code",null,"广度优先搜索",-1),qn=t("code",null,"并查集",-1),Nn=t("code",null,"1+",-1),Vn={style:{"text-align":"left"}},Kn=t("td",{style:{"text-align":"center"}},"269",-1),Tn={style:{"text-align":"left"}},An={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},Bn=t("td",{style:{"text-align":"center"}},null,-1),Dn={style:{"text-align":"left"}},Jn=t("code",null,"深度优先搜索",-1),Un=t("code",null,"广度优先搜索",-1),Wn=t("code",null,"图",-1),Xn=t("code",null,"3+",-1),Yn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"279",-1),Fn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/perfect-squares",target:"_blank",rel:"noopener noreferrer"},Rn={style:{"text-align":"center"}},Sn={href:"/problem/0279",target:"_blank",rel:"noopener noreferrer"},Gn={style:{"text-align":"left"}},$n=t("code",null,"广度优先搜索",-1),ts=t("code",null,"数学",-1),es=t("code",null,"动态规划",-1),ls={style:{"text-align":"left"}},os=t("td",{style:{"text-align":"center"}},"286",-1),ns={style:{"text-align":"left"}},ss={href:"https://leetcode.com/problems/walls-and-gates",target:"_blank",rel:"noopener noreferrer"},ds=t("td",{style:{"text-align":"center"}},null,-1),_s={style:{"text-align":"left"}},is=t("code",null,"广度优先搜索",-1),rs=t("code",null,"数组",-1),as=t("code",null,"矩阵",-1),cs={style:{"text-align":"left"}},hs=t("td",{style:{"text-align":"center"}},"297",-1),us={style:{"text-align":"left"}},fs={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},gs={style:{"text-align":"center"}},ms={href:"/problem/0297",target:"_blank",rel:"noopener noreferrer"},ys={style:{"text-align":"left"}},xs=t("code",null,"树",-1),bs=t("code",null,"深度优先搜索",-1),ps=t("code",null,"广度优先搜索",-1),ks=t("code",null,"3+",-1),Ms={style:{"text-align":"left"}},Is=t("td",{style:{"text-align":"center"}},"301",-1),vs={style:{"text-align":"left"}},Hs={href:"https://leetcode.com/problems/remove-invalid-parentheses",target:"_blank",rel:"noopener noreferrer"},ws=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Es=t("code",null,"广度优先搜索",-1),Os=t("code",null,"字符串",-1),Ls=t("code",null,"回溯",-1),Cs={style:{"text-align":"left"}},js=t("td",{style:{"text-align":"center"}},"302",-1),Ps={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),Vs={style:{"text-align":"left"}},Ks=t("code",null,"深度优先搜索",-1),Ts=t("code",null,"广度优先搜索",-1),As=t("code",null,"数组",-1),Bs=t("code",null,"2+",-1),Ds={style:{"text-align":"left"}},Js=t("td",{style:{"text-align":"center"}},"310",-1),Us={style:{"text-align":"left"}},Ws={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},Xs=t("td",{style:{"text-align":"center"}},null,-1),Ys={style:{"text-align":"left"}},Zs=t("code",null,"深度优先搜索",-1),Fs=t("code",null,"广度优先搜索",-1),Qs=t("code",null,"图",-1),Rs=t("code",null,"1+",-1),Ss={style:{"text-align":"left"}},Gs=t("td",{style:{"text-align":"center"}},"314",-1),$s={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},null,-1),ld={style:{"text-align":"left"}},od=t("code",null,"树",-1),nd=t("code",null,"深度优先搜索",-1),sd=t("code",null,"广度优先搜索",-1),dd=t("code",null,"3+",-1),_d={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"317",-1),rd={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/shortest-distance-from-all-buildings",target:"_blank",rel:"noopener noreferrer"},cd=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},ud=t("code",null,"广度优先搜索",-1),fd=t("code",null,"数组",-1),gd=t("code",null,"矩阵",-1),md={style:{"text-align":"left"}},yd=t("td",{style:{"text-align":"center"}},"322",-1),xd={style:{"text-align":"left"}},bd={href:"https://leetcode.com/problems/coin-change",target:"_blank",rel:"noopener noreferrer"},pd={style:{"text-align":"center"}},kd={href:"/problem/0322",target:"_blank",rel:"noopener noreferrer"},Md={style:{"text-align":"left"}},Id=t("code",null,"广度优先搜索",-1),vd=t("code",null,"数组",-1),Hd=t("code",null,"动态规划",-1),wd={style:{"text-align":"left"}},zd=t("td",{style:{"text-align":"center"}},"323",-1),Ed={style:{"text-align":"left"}},Od={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Ld=t("td",{style:{"text-align":"center"}},null,-1),Cd={style:{"text-align":"left"}},jd=t("code",null,"深度优先搜索",-1),Pd=t("code",null,"广度优先搜索",-1),qd=t("code",null,"并查集",-1),Nd=t("code",null,"1+",-1),Vd={style:{"text-align":"left"}},Kd=t("td",{style:{"text-align":"center"}},"329",-1),Td={style:{"text-align":"left"}},Ad={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Bd=t("td",{style:{"text-align":"center"}},null,-1),Dd={style:{"text-align":"left"}},Jd=t("code",null,"深度优先搜索",-1),Ud=t("code",null,"广度优先搜索",-1),Wd=t("code",null,"图",-1),Xd=t("code",null,"5+",-1),Yd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"339",-1),Fd={style:{"text-align":"left"}},Qd={href:"https://leetcode.com/problems/nested-list-weight-sum",target:"_blank",rel:"noopener noreferrer"},Rd=t("td",{style:{"text-align":"center"}},null,-1),Sd={style:{"text-align":"left"}},Gd=t("code",null,"深度优先搜索",-1),$d=t("code",null,"广度优先搜索",-1),t_={style:{"text-align":"left"}},e_=t("td",{style:{"text-align":"center"}},"364",-1),l_={style:{"text-align":"left"}},o_={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},n_=t("td",{style:{"text-align":"center"}},null,-1),s_={style:{"text-align":"left"}},d_=t("code",null,"栈",-1),__=t("code",null,"深度优先搜索",-1),i_=t("code",null,"广度优先搜索",-1),r_={style:{"text-align":"left"}},a_=t("td",{style:{"text-align":"center"}},"365",-1),c_={style:{"text-align":"left"}},h_={href:"https://leetcode.com/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},u_=t("td",{style:{"text-align":"center"}},null,-1),f_={style:{"text-align":"left"}},g_=t("code",null,"深度优先搜索",-1),m_=t("code",null,"广度优先搜索",-1),y_=t("code",null,"数学",-1),x_={style:{"text-align":"left"}},b_=t("td",{style:{"text-align":"center"}},"399",-1),p_={style:{"text-align":"left"}},k_={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},M_={style:{"text-align":"center"}},I_={href:"/problem/0399",target:"_blank",rel:"noopener noreferrer"},v_={style:{"text-align":"left"}},H_=t("code",null,"深度优先搜索",-1),w_=t("code",null,"广度优先搜索",-1),z_=t("code",null,"并查集",-1),E_=t("code",null,"4+",-1),O_={style:{"text-align":"left"}},L_=t("td",{style:{"text-align":"center"}},"404",-1),C_={style:{"text-align":"left"}},j_={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},P_=t("td",{style:{"text-align":"center"}},null,-1),q_={style:{"text-align":"left"}},N_=t("code",null,"树",-1),V_=t("code",null,"深度优先搜索",-1),K_=t("code",null,"广度优先搜索",-1),T_=t("code",null,"1+",-1),A_={style:{"text-align":"left"}},B_=t("td",{style:{"text-align":"center"}},"407",-1),D_={style:{"text-align":"left"}},J_={href:"https://leetcode.com/problems/trapping-rain-water-ii",target:"_blank",rel:"noopener noreferrer"},U_=t("td",{style:{"text-align":"center"}},null,-1),W_={style:{"text-align":"left"}},X_=t("code",null,"广度优先搜索",-1),Y_=t("code",null,"数组",-1),Z_=t("code",null,"矩阵",-1),F_=t("code",null,"1+",-1),Q_={style:{"text-align":"left"}},R_=t("td",{style:{"text-align":"center"}},"417",-1),S_={style:{"text-align":"left"}},G_={href:"https://leetcode.com/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},$_=t("td",{style:{"text-align":"center"}},null,-1),ti={style:{"text-align":"left"}},ei=t("code",null,"深度优先搜索",-1),li=t("code",null,"广度优先搜索",-1),oi=t("code",null,"数组",-1),ni=t("code",null,"1+",-1),si={style:{"text-align":"left"}},di=t("td",{style:{"text-align":"center"}},"428",-1),_i={style:{"text-align":"left"}},ii={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},ri=t("td",{style:{"text-align":"center"}},null,-1),ai={style:{"text-align":"left"}},ci=t("code",null,"树",-1),hi=t("code",null,"深度优先搜索",-1),ui=t("code",null,"广度优先搜索",-1),fi=t("code",null,"1+",-1),gi={style:{"text-align":"left"}},mi=t("td",{style:{"text-align":"center"}},"429",-1),yi={style:{"text-align":"left"}},xi={href:"https://leetcode.com/problems/n-ary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},bi=t("td",{style:{"text-align":"center"}},null,-1),pi={style:{"text-align":"left"}},ki=t("code",null,"树",-1),Mi=t("code",null,"广度优先搜索",-1),Ii={style:{"text-align":"left"}},vi=t("td",{style:{"text-align":"center"}},"431",-1),Hi={style:{"text-align":"left"}},wi={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},zi=t("td",{style:{"text-align":"center"}},null,-1),Ei={style:{"text-align":"left"}},Oi=t("code",null,"树",-1),Li=t("code",null,"深度优先搜索",-1),Ci=t("code",null,"广度优先搜索",-1),ji=t("code",null,"2+",-1),Pi={style:{"text-align":"left"}},qi=t("td",{style:{"text-align":"center"}},"433",-1),Ni={style:{"text-align":"left"}},Vi={href:"https://leetcode.com/problems/minimum-genetic-mutation",target:"_blank",rel:"noopener noreferrer"},Ki={style:{"text-align":"center"}},Ti={href:"/problem/0433",target:"_blank",rel:"noopener noreferrer"},Ai={style:{"text-align":"left"}},Bi=t("code",null,"广度优先搜索",-1),Di=t("code",null,"哈希表",-1),Ji=t("code",null,"字符串",-1),Ui={style:{"text-align":"left"}},Wi=t("td",{style:{"text-align":"center"}},"449",-1),Xi={style:{"text-align":"left"}},Yi={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Zi=t("td",{style:{"text-align":"center"}},null,-1),Fi={style:{"text-align":"left"}},Qi=t("code",null,"树",-1),Ri=t("code",null,"深度优先搜索",-1),Si=t("code",null,"广度优先搜索",-1),Gi=t("code",null,"4+",-1),$i={style:{"text-align":"left"}},tr=t("td",{style:{"text-align":"center"}},"463",-1),er={style:{"text-align":"left"}},lr={href:"https://leetcode.com/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},or=t("td",{style:{"text-align":"center"}},null,-1),nr={style:{"text-align":"left"}},sr=t("code",null,"深度优先搜索",-1),dr=t("code",null,"广度优先搜索",-1),_r=t("code",null,"数组",-1),ir=t("code",null,"1+",-1),rr={style:{"text-align":"left"}},ar=t("td",{style:{"text-align":"center"}},"488",-1),cr={style:{"text-align":"left"}},hr={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},ur=t("td",{style:{"text-align":"center"}},null,-1),fr={style:{"text-align":"left"}},gr=t("code",null,"栈",-1),mr=t("code",null,"广度优先搜索",-1),yr=t("code",null,"记忆化搜索",-1),xr=t("code",null,"2+",-1),br={style:{"text-align":"left"}},pr=t("td",{style:{"text-align":"center"}},"490",-1),kr={style:{"text-align":"left"}},Mr={href:"https://leetcode.com/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},Ir=t("td",{style:{"text-align":"center"}},null,-1),vr={style:{"text-align":"left"}},Hr=t("code",null,"深度优先搜索",-1),wr=t("code",null,"广度优先搜索",-1),zr=t("code",null,"数组",-1),Er=t("code",null,"1+",-1),Or={style:{"text-align":"left"}},Lr=t("td",{style:{"text-align":"center"}},"499",-1),Cr={style:{"text-align":"left"}},jr={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},Pr=t("td",{style:{"text-align":"center"}},null,-1),qr={style:{"text-align":"left"}},Nr=t("code",null,"深度优先搜索",-1),Vr=t("code",null,"广度优先搜索",-1),Kr=t("code",null,"图",-1),Tr=t("code",null,"5+",-1),Ar={style:{"text-align":"left"}},Br=t("td",{style:{"text-align":"center"}},"505",-1),Dr={style:{"text-align":"left"}},Jr={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},Ur=t("td",{style:{"text-align":"center"}},null,-1),Wr={style:{"text-align":"left"}},Xr=t("code",null,"深度优先搜索",-1),Yr=t("code",null,"广度优先搜索",-1),Zr=t("code",null,"图",-1),Fr=t("code",null,"4+",-1),Qr={style:{"text-align":"left"}},Rr=t("td",{style:{"text-align":"center"}},"513",-1),Sr={style:{"text-align":"left"}},Gr={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},$r=t("td",{style:{"text-align":"center"}},null,-1),ta={style:{"text-align":"left"}},ea=t("code",null,"树",-1),la=t("code",null,"深度优先搜索",-1),oa=t("code",null,"广度优先搜索",-1),na=t("code",null,"1+",-1),sa={style:{"text-align":"left"}},da=t("td",{style:{"text-align":"center"}},"514",-1),_a={style:{"text-align":"left"}},ia={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},ra={style:{"text-align":"center"}},aa={href:"/problem/0514",target:"_blank",rel:"noopener noreferrer"},ca={style:{"text-align":"left"}},ha=t("code",null,"深度优先搜索",-1),ua=t("code",null,"广度优先搜索",-1),fa=t("code",null,"字符串",-1),ga=t("code",null,"1+",-1),ma={style:{"text-align":"left"}},ya=t("td",{style:{"text-align":"center"}},"515",-1),xa={style:{"text-align":"left"}},ba={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},pa=t("td",{style:{"text-align":"center"}},null,-1),ka={style:{"text-align":"left"}},Ma=t("code",null,"树",-1),Ia=t("code",null,"深度优先搜索",-1),va=t("code",null,"广度优先搜索",-1),Ha=t("code",null,"1+",-1),wa={style:{"text-align":"left"}},za=t("td",{style:{"text-align":"center"}},"529",-1),Ea={style:{"text-align":"left"}},Oa={href:"https://leetcode.com/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},La=t("td",{style:{"text-align":"center"}},null,-1),Ca={style:{"text-align":"left"}},ja=t("code",null,"深度优先搜索",-1),Pa=t("code",null,"广度优先搜索",-1),qa=t("code",null,"数组",-1),Na=t("code",null,"1+",-1),Va={style:{"text-align":"left"}},Ka=t("td",{style:{"text-align":"center"}},"530",-1),Ta={style:{"text-align":"left"}},Aa={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},Ba={style:{"text-align":"center"}},Da={href:"/problem/0530",target:"_blank",rel:"noopener noreferrer"},Ja={style:{"text-align":"left"}},Ua=t("code",null,"树",-1),Wa=t("code",null,"深度优先搜索",-1),Xa=t("code",null,"广度优先搜索",-1),Ya=t("code",null,"2+",-1),Za={style:{"text-align":"left"}},Fa=t("td",{style:{"text-align":"center"}},"542",-1),Qa={style:{"text-align":"left"}},Ra={href:"https://leetcode.com/problems/01-matrix",target:"_blank",rel:"noopener noreferrer"},Sa=t("td",{style:{"text-align":"center"}},null,-1),Ga={style:{"text-align":"left"}},$a=t("code",null,"广度优先搜索",-1),tc=t("code",null,"数组",-1),ec=t("code",null,"动态规划",-1),lc=t("code",null,"1+",-1),oc={style:{"text-align":"left"}},nc=t("td",{style:{"text-align":"center"}},"547",-1),sc={style:{"text-align":"left"}},dc={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},_c=t("td",{style:{"text-align":"center"}},null,-1),ic={style:{"text-align":"left"}},rc=t("code",null,"深度优先搜索",-1),ac=t("code",null,"广度优先搜索",-1),cc=t("code",null,"并查集",-1),hc=t("code",null,"1+",-1),uc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"559",-1),gc={style:{"text-align":"left"}},mc={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},yc={style:{"text-align":"center"}},xc={href:"/problem/0559",target:"_blank",rel:"noopener noreferrer"},bc={style:{"text-align":"left"}},pc=t("code",null,"树",-1),kc=t("code",null,"深度优先搜索",-1),Mc=t("code",null,"广度优先搜索",-1),Ic={style:{"text-align":"left"}},vc=t("td",{style:{"text-align":"center"}},"582",-1),Hc={style:{"text-align":"left"}},wc={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},zc=t("td",{style:{"text-align":"center"}},null,-1),Ec={style:{"text-align":"left"}},Oc=t("code",null,"树",-1),Lc=t("code",null,"深度优先搜索",-1),Cc=t("code",null,"广度优先搜索",-1),jc=t("code",null,"2+",-1),Pc={style:{"text-align":"left"}},qc=t("td",{style:{"text-align":"center"}},"617",-1),Nc={style:{"text-align":"left"}},Vc={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},Kc={style:{"text-align":"center"}},Tc={href:"/problem/0617",target:"_blank",rel:"noopener noreferrer"},Ac={style:{"text-align":"left"}},Bc=t("code",null,"树",-1),Dc=t("code",null,"深度优先搜索",-1),Jc=t("code",null,"广度优先搜索",-1),Uc=t("code",null,"1+",-1),Wc={style:{"text-align":"left"}},Xc=t("td",{style:{"text-align":"center"}},"623",-1),Yc={style:{"text-align":"left"}},Zc={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},null,-1),Qc={style:{"text-align":"left"}},Rc=t("code",null,"树",-1),Sc=t("code",null,"深度优先搜索",-1),Gc=t("code",null,"广度优先搜索",-1),$c=t("code",null,"1+",-1),th={style:{"text-align":"left"}},eh=t("td",{style:{"text-align":"center"}},"637",-1),lh={style:{"text-align":"left"}},oh={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},nh={style:{"text-align":"center"}},sh={href:"/problem/0637",target:"_blank",rel:"noopener noreferrer"},dh={style:{"text-align":"left"}},_h=t("code",null,"树",-1),ih=t("code",null,"深度优先搜索",-1),rh=t("code",null,"广度优先搜索",-1),ah=t("code",null,"1+",-1),ch={style:{"text-align":"left"}},hh=t("td",{style:{"text-align":"center"}},"653",-1),uh={style:{"text-align":"left"}},fh={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},gh=t("td",{style:{"text-align":"center"}},null,-1),mh={style:{"text-align":"left"}},yh=t("code",null,"树",-1),xh=t("code",null,"深度优先搜索",-1),bh=t("code",null,"广度优先搜索",-1),ph=t("code",null,"4+",-1),kh={style:{"text-align":"left"}},Mh=t("td",{style:{"text-align":"center"}},"655",-1),Ih={style:{"text-align":"left"}},vh={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Hh=t("td",{style:{"text-align":"center"}},null,-1),wh={style:{"text-align":"left"}},zh=t("code",null,"树",-1),Eh=t("code",null,"深度优先搜索",-1),Oh=t("code",null,"广度优先搜索",-1),Lh=t("code",null,"1+",-1),Ch={style:{"text-align":"left"}},jh=t("td",{style:{"text-align":"center"}},"662",-1),Ph={style:{"text-align":"left"}},qh={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Nh={style:{"text-align":"center"}},Vh={href:"/problem/0662",target:"_blank",rel:"noopener noreferrer"},Kh={style:{"text-align":"left"}},Th=t("code",null,"树",-1),Ah=t("code",null,"深度优先搜索",-1),Bh=t("code",null,"广度优先搜索",-1),Dh=t("code",null,"1+",-1),Jh={style:{"text-align":"left"}},Uh=t("td",{style:{"text-align":"center"}},"672",-1),Wh={style:{"text-align":"left"}},Xh={href:"https://leetcode.com/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},Yh=t("td",{style:{"text-align":"center"}},null,-1),Zh={style:{"text-align":"left"}},Fh=t("code",null,"位运算",-1),Qh=t("code",null,"深度优先搜索",-1),Rh=t("code",null,"广度优先搜索",-1),Sh=t("code",null,"1+",-1),Gh={style:{"text-align":"left"}},$h=t("td",{style:{"text-align":"center"}},"675",-1),t1={style:{"text-align":"left"}},e1={href:"https://leetcode.com/problems/cut-off-trees-for-golf-event",target:"_blank",rel:"noopener noreferrer"},l1=t("td",{style:{"text-align":"center"}},null,-1),o1={style:{"text-align":"left"}},n1=t("code",null,"广度优先搜索",-1),s1=t("code",null,"数组",-1),d1=t("code",null,"矩阵",-1),_1=t("code",null,"1+",-1),i1={style:{"text-align":"left"}},r1=t("td",{style:{"text-align":"center"}},"684",-1),a1={style:{"text-align":"left"}},c1={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},h1=t("td",{style:{"text-align":"center"}},null,-1),u1={style:{"text-align":"left"}},f1=t("code",null,"深度优先搜索",-1),g1=t("code",null,"广度优先搜索",-1),m1=t("code",null,"并查集",-1),y1=t("code",null,"1+",-1),x1={style:{"text-align":"left"}},b1=t("td",{style:{"text-align":"center"}},"685",-1),p1={style:{"text-align":"left"}},k1={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},M1=t("td",{style:{"text-align":"center"}},null,-1),I1={style:{"text-align":"left"}},v1=t("code",null,"深度优先搜索",-1),H1=t("code",null,"广度优先搜索",-1),w1=t("code",null,"并查集",-1),z1=t("code",null,"1+",-1),E1={style:{"text-align":"left"}},O1=t("td",{style:{"text-align":"center"}},"690",-1),L1={style:{"text-align":"left"}},C1={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},j1=t("td",{style:{"text-align":"center"}},null,-1),P1={style:{"text-align":"left"}},q1=t("code",null,"树",-1),N1=t("code",null,"深度优先搜索",-1),V1=t("code",null,"广度优先搜索",-1),K1=t("code",null,"2+",-1),T1={style:{"text-align":"left"}},A1=t("td",{style:{"text-align":"center"}},"694",-1),B1={style:{"text-align":"left"}},D1={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},J1=t("td",{style:{"text-align":"center"}},null,-1),U1={style:{"text-align":"left"}},W1=t("code",null,"深度优先搜索",-1),X1=t("code",null,"广度优先搜索",-1),Y1=t("code",null,"并查集",-1),Z1=t("code",null,"2+",-1),F1={style:{"text-align":"left"}},Q1=t("td",{style:{"text-align":"center"}},"695",-1),R1={style:{"text-align":"left"}},S1={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},G1={style:{"text-align":"center"}},$1={href:"/problem/0695",target:"_blank",rel:"noopener noreferrer"},tu={style:{"text-align":"left"}},eu=t("code",null,"深度优先搜索",-1),lu=t("code",null,"广度优先搜索",-1),ou=t("code",null,"并查集",-1),nu=t("code",null,"2+",-1),su={style:{"text-align":"left"}},du=t("td",{style:{"text-align":"center"}},"711",-1),_u={style:{"text-align":"left"}},iu={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},ru=t("td",{style:{"text-align":"center"}},null,-1),au={style:{"text-align":"left"}},cu=t("code",null,"深度优先搜索",-1),hu=t("code",null,"广度优先搜索",-1),uu=t("code",null,"并查集",-1),fu=t("code",null,"2+",-1),gu={style:{"text-align":"left"}},mu=t("td",{style:{"text-align":"center"}},"721",-1),yu={style:{"text-align":"left"}},xu={href:"https://leetcode.com/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},bu=t("td",{style:{"text-align":"center"}},null,-1),pu={style:{"text-align":"left"}},ku=t("code",null,"深度优先搜索",-1),Mu=t("code",null,"广度优先搜索",-1),Iu=t("code",null,"并查集",-1),vu=t("code",null,"4+",-1),Hu={style:{"text-align":"left"}},wu=t("td",{style:{"text-align":"center"}},"733",-1),zu={style:{"text-align":"left"}},Eu={href:"https://leetcode.com/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},Ou=t("td",{style:{"text-align":"center"}},null,-1),Lu={style:{"text-align":"left"}},Cu=t("code",null,"深度优先搜索",-1),ju=t("code",null,"广度优先搜索",-1),Pu=t("code",null,"数组",-1),qu=t("code",null,"1+",-1),Nu={style:{"text-align":"left"}},Vu=t("td",{style:{"text-align":"center"}},"737",-1),Ku={style:{"text-align":"left"}},Tu={href:"https://leetcode.com/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},Au=t("td",{style:{"text-align":"center"}},null,-1),Bu={style:{"text-align":"left"}},Du=t("code",null,"深度优先搜索",-1),Ju=t("code",null,"广度优先搜索",-1),Uu=t("code",null,"并查集",-1),Wu=t("code",null,"3+",-1),Xu={style:{"text-align":"left"}},Yu=t("td",{style:{"text-align":"center"}},"742",-1),Zu={style:{"text-align":"left"}},Fu={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qu=t("td",{style:{"text-align":"center"}},null,-1),Ru={style:{"text-align":"left"}},Su=t("code",null,"树",-1),Gu=t("code",null,"深度优先搜索",-1),$u=t("code",null,"广度优先搜索",-1),tf=t("code",null,"1+",-1),ef={style:{"text-align":"left"}},lf=t("td",{style:{"text-align":"center"}},"743",-1),of={style:{"text-align":"left"}},nf={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},sf=t("td",{style:{"text-align":"center"}},null,-1),df={style:{"text-align":"left"}},_f=t("code",null,"深度优先搜索",-1),rf=t("code",null,"广度优先搜索",-1),af=t("code",null,"图",-1),cf=t("code",null,"2+",-1),hf={style:{"text-align":"left"}},uf=t("td",{style:{"text-align":"center"}},"749",-1),ff={style:{"text-align":"left"}},gf={href:"https://leetcode.com/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},mf=t("td",{style:{"text-align":"center"}},null,-1),yf={style:{"text-align":"left"}},xf=t("code",null,"深度优先搜索",-1),bf=t("code",null,"广度优先搜索",-1),pf=t("code",null,"数组",-1),kf=t("code",null,"2+",-1),Mf={style:{"text-align":"left"}},If=t("td",{style:{"text-align":"center"}},"752",-1),vf={style:{"text-align":"left"}},Hf={href:"https://leetcode.com/problems/open-the-lock",target:"_blank",rel:"noopener noreferrer"},wf=t("td",{style:{"text-align":"center"}},null,-1),zf={style:{"text-align":"left"}},Ef=t("code",null,"广度优先搜索",-1),Of=t("code",null,"数组",-1),Lf=t("code",null,"哈希表",-1),Cf=t("code",null,"1+",-1),jf={style:{"text-align":"left"}},Pf=t("td",{style:{"text-align":"center"}},"756",-1),qf={style:{"text-align":"left"}},Nf={href:"https://leetcode.com/problems/pyramid-transition-matrix",target:"_blank",rel:"noopener noreferrer"},Vf=t("td",{style:{"text-align":"center"}},null,-1),Kf={style:{"text-align":"left"}},Tf=t("code",null,"位运算",-1),Af=t("code",null,"深度优先搜索",-1),Bf=t("code",null,"广度优先搜索",-1),Df={style:{"text-align":"left"}},Jf=t("td",{style:{"text-align":"center"}},"765",-1),Uf={style:{"text-align":"left"}},Wf={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},Xf=t("td",{style:{"text-align":"center"}},null,-1),Yf={style:{"text-align":"left"}},Zf=t("code",null,"贪心",-1),Ff=t("code",null,"深度优先搜索",-1),Qf=t("code",null,"广度优先搜索",-1),Rf=t("code",null,"2+",-1),Sf={style:{"text-align":"left"}},Gf=t("td",{style:{"text-align":"center"}},"773",-1),$f={style:{"text-align":"left"}},tg={href:"https://leetcode.com/problems/sliding-puzzle",target:"_blank",rel:"noopener noreferrer"},eg=t("td",{style:{"text-align":"center"}},null,-1),lg={style:{"text-align":"left"}},og=t("code",null,"广度优先搜索",-1),ng=t("code",null,"数组",-1),sg=t("code",null,"矩阵",-1),dg={style:{"text-align":"left"}},_g=t("td",{style:{"text-align":"center"}},"778",-1),ig={style:{"text-align":"left"}},rg={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},ag=t("td",{style:{"text-align":"center"}},null,-1),cg={style:{"text-align":"left"}},hg=t("code",null,"深度优先搜索",-1),ug=t("code",null,"广度优先搜索",-1),fg=t("code",null,"并查集",-1),gg=t("code",null,"4+",-1),mg={style:{"text-align":"left"}},yg=t("td",{style:{"text-align":"center"}},"783",-1),xg={style:{"text-align":"left"}},bg={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},pg={style:{"text-align":"center"}},kg={href:"/problem/0783",target:"_blank",rel:"noopener noreferrer"},Mg={style:{"text-align":"left"}},Ig=t("code",null,"树",-1),vg=t("code",null,"深度优先搜索",-1),Hg=t("code",null,"广度优先搜索",-1),wg=t("code",null,"2+",-1),zg={style:{"text-align":"left"}},Eg=t("td",{style:{"text-align":"center"}},"785",-1),Og={style:{"text-align":"left"}},Lg={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},Cg=t("td",{style:{"text-align":"center"}},null,-1),jg={style:{"text-align":"left"}},Pg=t("code",null,"深度优先搜索",-1),qg=t("code",null,"广度优先搜索",-1),Ng=t("code",null,"并查集",-1),Vg=t("code",null,"1+",-1),Kg={style:{"text-align":"left"}},Tg=t("td",{style:{"text-align":"center"}},"787",-1),Ag={style:{"text-align":"left"}},Bg={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Dg=t("td",{style:{"text-align":"center"}},null,-1),Jg={style:{"text-align":"left"}},Ug=t("code",null,"深度优先搜索",-1),Wg=t("code",null,"广度优先搜索",-1),Xg=t("code",null,"图",-1),Yg=t("code",null,"3+",-1),Zg={style:{"text-align":"left"}},Fg=t("td",{style:{"text-align":"center"}},"797",-1),Qg={style:{"text-align":"left"}},Rg={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},Sg=t("td",{style:{"text-align":"center"}},null,-1),Gg={style:{"text-align":"left"}},$g=t("code",null,"深度优先搜索",-1),tm=t("code",null,"广度优先搜索",-1),em=t("code",null,"图",-1),lm=t("code",null,"1+",-1),om={style:{"text-align":"left"}},nm=t("td",{style:{"text-align":"center"}},"802",-1),sm={style:{"text-align":"left"}},dm={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},_m=t("td",{style:{"text-align":"center"}},null,-1),im={style:{"text-align":"left"}},rm=t("code",null,"深度优先搜索",-1),am=t("code",null,"广度优先搜索",-1),cm=t("code",null,"图",-1),hm=t("code",null,"1+",-1),um={style:{"text-align":"left"}},fm=t("td",{style:{"text-align":"center"}},"815",-1),gm={style:{"text-align":"left"}},mm={href:"https://leetcode.com/problems/bus-routes",target:"_blank",rel:"noopener noreferrer"},ym=t("td",{style:{"text-align":"center"}},null,-1),xm={style:{"text-align":"left"}},bm=t("code",null,"广度优先搜索",-1),pm=t("code",null,"数组",-1),km=t("code",null,"哈希表",-1),Mm={style:{"text-align":"left"}},Im=t("td",{style:{"text-align":"center"}},"827",-1),vm={style:{"text-align":"left"}},Hm={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},wm=t("td",{style:{"text-align":"center"}},null,-1),zm={style:{"text-align":"left"}},Em=t("code",null,"深度优先搜索",-1),Om=t("code",null,"广度优先搜索",-1),Lm=t("code",null,"并查集",-1),Cm=t("code",null,"2+",-1),jm={style:{"text-align":"left"}},Pm=t("td",{style:{"text-align":"center"}},"839",-1),qm={style:{"text-align":"left"}},Nm={href:"https://leetcode.com/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},Vm=t("td",{style:{"text-align":"center"}},null,-1),Km={style:{"text-align":"left"}},Tm=t("code",null,"深度优先搜索",-1),Am=t("code",null,"广度优先搜索",-1),Bm=t("code",null,"并查集",-1),Dm=t("code",null,"3+",-1),Jm={style:{"text-align":"left"}},Um=t("td",{style:{"text-align":"center"}},"841",-1),Wm={style:{"text-align":"left"}},Xm={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},Ym=t("td",{style:{"text-align":"center"}},null,-1),Zm={style:{"text-align":"left"}},Fm=t("code",null,"深度优先搜索",-1),Qm=t("code",null,"广度优先搜索",-1),Rm=t("code",null,"图",-1),Sm={style:{"text-align":"left"}},Gm=t("td",{style:{"text-align":"center"}},"847",-1),$m={style:{"text-align":"left"}},t2={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},e2=t("td",{style:{"text-align":"center"}},null,-1),l2={style:{"text-align":"left"}},o2=t("code",null,"位运算",-1),n2=t("code",null,"广度优先搜索",-1),s2=t("code",null,"图",-1),d2=t("code",null,"2+",-1),_2={style:{"text-align":"left"}},i2=t("td",{style:{"text-align":"center"}},"854",-1),r2={style:{"text-align":"left"}},a2={href:"https://leetcode.com/problems/k-similar-strings",target:"_blank",rel:"noopener noreferrer"},c2=t("td",{style:{"text-align":"center"}},null,-1),h2={style:{"text-align":"left"}},u2=t("code",null,"广度优先搜索",-1),f2=t("code",null,"字符串",-1),g2={style:{"text-align":"left"}},m2=t("td",{style:{"text-align":"center"}},"863",-1),y2={style:{"text-align":"left"}},x2={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},b2=t("td",{style:{"text-align":"center"}},null,-1),p2={style:{"text-align":"left"}},k2=t("code",null,"树",-1),M2=t("code",null,"深度优先搜索",-1),I2=t("code",null,"广度优先搜索",-1),v2=t("code",null,"2+",-1),H2={style:{"text-align":"left"}},w2=t("td",{style:{"text-align":"center"}},"864",-1),z2={style:{"text-align":"left"}},E2={href:"https://leetcode.com/problems/shortest-path-to-get-all-keys",target:"_blank",rel:"noopener noreferrer"},O2=t("td",{style:{"text-align":"center"}},null,-1),L2={style:{"text-align":"left"}},C2=t("code",null,"位运算",-1),j2=t("code",null,"广度优先搜索",-1),P2=t("code",null,"数组",-1),q2=t("code",null,"1+",-1),N2={style:{"text-align":"left"}},V2=t("td",{style:{"text-align":"center"}},"865",-1),K2={style:{"text-align":"left"}},T2={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},A2=t("td",{style:{"text-align":"center"}},null,-1),B2={style:{"text-align":"left"}},D2=t("code",null,"树",-1),J2=t("code",null,"深度优先搜索",-1),U2=t("code",null,"广度优先搜索",-1),W2=t("code",null,"2+",-1),X2={style:{"text-align":"left"}},Y2=t("td",{style:{"text-align":"center"}},"886",-1),Z2={style:{"text-align":"left"}},F2={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},Q2=t("td",{style:{"text-align":"center"}},null,-1),R2={style:{"text-align":"left"}},S2=t("code",null,"深度优先搜索",-1),G2=t("code",null,"广度优先搜索",-1),$2=t("code",null,"并查集",-1),ty=t("code",null,"1+",-1),ey={style:{"text-align":"left"}},ly=t("td",{style:{"text-align":"center"}},"909",-1),oy={style:{"text-align":"left"}},ny={href:"https://leetcode.com/problems/snakes-and-ladders",target:"_blank",rel:"noopener noreferrer"},sy={style:{"text-align":"center"}},dy={href:"/problem/0909",target:"_blank",rel:"noopener noreferrer"},_y={style:{"text-align":"left"}},iy=t("code",null,"广度优先搜索",-1),ry=t("code",null,"数组",-1),ay=t("code",null,"矩阵",-1),cy={style:{"text-align":"left"}},hy=t("td",{style:{"text-align":"center"}},"919",-1),uy={style:{"text-align":"left"}},fy={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},gy=t("td",{style:{"text-align":"center"}},null,-1),my={style:{"text-align":"left"}},yy=t("code",null,"树",-1),xy=t("code",null,"广度优先搜索",-1),by=t("code",null,"设计",-1),py=t("code",null,"1+",-1),ky={style:{"text-align":"left"}},My=t("td",{style:{"text-align":"center"}},"924",-1),Iy={style:{"text-align":"left"}},vy={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},Hy=t("td",{style:{"text-align":"center"}},null,-1),wy={style:{"text-align":"left"}},zy=t("code",null,"深度优先搜索",-1),Ey=t("code",null,"广度优先搜索",-1),Oy=t("code",null,"并查集",-1),Ly=t("code",null,"3+",-1),Cy={style:{"text-align":"left"}},jy=t("td",{style:{"text-align":"center"}},"928",-1),Py={style:{"text-align":"left"}},qy={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},Ny=t("td",{style:{"text-align":"center"}},null,-1),Vy={style:{"text-align":"left"}},Ky=t("code",null,"深度优先搜索",-1),Ty=t("code",null,"广度优先搜索",-1),Ay=t("code",null,"并查集",-1),By=t("code",null,"3+",-1),Dy={style:{"text-align":"left"}},Jy=t("td",{style:{"text-align":"center"}},"934",-1),Uy={style:{"text-align":"left"}},Wy={href:"https://leetcode.com/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},Xy=t("td",{style:{"text-align":"center"}},null,-1),Yy={style:{"text-align":"left"}},Zy=t("code",null,"深度优先搜索",-1),Fy=t("code",null,"广度优先搜索",-1),Qy=t("code",null,"数组",-1),Ry=t("code",null,"1+",-1),Sy={style:{"text-align":"left"}},Gy=t("td",{style:{"text-align":"center"}},"958",-1),$y={style:{"text-align":"left"}},tx={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ex={style:{"text-align":"center"}},lx={href:"/problem/0958",target:"_blank",rel:"noopener noreferrer"},ox={style:{"text-align":"left"}},nx=t("code",null,"树",-1),sx=t("code",null,"广度优先搜索",-1),dx=t("code",null,"二叉树",-1),_x={style:{"text-align":"left"}},ix=t("td",{style:{"text-align":"center"}},"959",-1),rx={style:{"text-align":"left"}},ax={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},cx=t("td",{style:{"text-align":"center"}},null,-1),hx={style:{"text-align":"left"}},ux=t("code",null,"深度优先搜索",-1),fx=t("code",null,"广度优先搜索",-1),gx=t("code",null,"并查集",-1),mx=t("code",null,"3+",-1),yx={style:{"text-align":"left"}},xx=t("td",{style:{"text-align":"center"}},"965",-1),bx={style:{"text-align":"left"}},px={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},kx=t("td",{style:{"text-align":"center"}},null,-1),Mx={style:{"text-align":"left"}},Ix=t("code",null,"树",-1),vx=t("code",null,"深度优先搜索",-1),Hx=t("code",null,"广度优先搜索",-1),wx=t("code",null,"1+",-1),zx={style:{"text-align":"left"}},Ex=t("td",{style:{"text-align":"center"}},"967",-1),Ox={style:{"text-align":"left"}},Lx={href:"https://leetcode.com/problems/numbers-with-same-consecutive-differences",target:"_blank",rel:"noopener noreferrer"},Cx=t("td",{style:{"text-align":"center"}},null,-1),jx={style:{"text-align":"left"}},Px=t("code",null,"广度优先搜索",-1),qx=t("code",null,"回溯",-1),Nx={style:{"text-align":"left"}},Vx=t("td",{style:{"text-align":"center"}},"987",-1),Kx={style:{"text-align":"left"}},Tx={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ax=t("td",{style:{"text-align":"center"}},null,-1),Bx={style:{"text-align":"left"}},Dx=t("code",null,"树",-1),Jx=t("code",null,"深度优先搜索",-1),Ux=t("code",null,"广度优先搜索",-1),Wx=t("code",null,"3+",-1),Xx={style:{"text-align":"left"}},Yx=t("td",{style:{"text-align":"center"}},"993",-1),Zx={style:{"text-align":"left"}},Fx={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qx=t("td",{style:{"text-align":"center"}},null,-1),Rx={style:{"text-align":"left"}},Sx=t("code",null,"树",-1),Gx=t("code",null,"深度优先搜索",-1),$x=t("code",null,"广度优先搜索",-1),tb=t("code",null,"1+",-1),eb={style:{"text-align":"left"}},lb=t("td",{style:{"text-align":"center"}},"994",-1),ob={style:{"text-align":"left"}},nb={href:"https://leetcode.com/problems/rotting-oranges",target:"_blank",rel:"noopener noreferrer"},sb={style:{"text-align":"center"}},db={href:"/problem/0994",target:"_blank",rel:"noopener noreferrer"},_b={style:{"text-align":"left"}},ib=t("code",null,"广度优先搜索",-1),rb=t("code",null,"数组",-1),ab=t("code",null,"矩阵",-1),cb={style:{"text-align":"left"}},hb=t("td",{style:{"text-align":"center"}},"1020",-1),ub={style:{"text-align":"left"}},fb={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},gb=t("td",{style:{"text-align":"center"}},null,-1),mb={style:{"text-align":"left"}},yb=t("code",null,"深度优先搜索",-1),xb=t("code",null,"广度优先搜索",-1),bb=t("code",null,"并查集",-1),pb=t("code",null,"2+",-1),kb={style:{"text-align":"left"}},Mb=t("td",{style:{"text-align":"center"}},"1034",-1),Ib={style:{"text-align":"left"}},vb={href:"https://leetcode.com/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},Hb=t("td",{style:{"text-align":"center"}},null,-1),wb={style:{"text-align":"left"}},zb=t("code",null,"深度优先搜索",-1),Eb=t("code",null,"广度优先搜索",-1),Ob=t("code",null,"数组",-1),Lb=t("code",null,"1+",-1),Cb={style:{"text-align":"left"}},jb=t("td",{style:{"text-align":"center"}},"1036",-1),Pb={style:{"text-align":"left"}},qb={href:"https://leetcode.com/problems/escape-a-large-maze",target:"_blank",rel:"noopener noreferrer"},Nb=t("td",{style:{"text-align":"center"}},null,-1),Vb={style:{"text-align":"left"}},Kb=t("code",null,"深度优先搜索",-1),Tb=t("code",null,"广度优先搜索",-1),Ab=t("code",null,"数组",-1),Bb=t("code",null,"1+",-1),Db={style:{"text-align":"left"}},Jb=t("td",{style:{"text-align":"center"}},"1042",-1),Ub={style:{"text-align":"left"}},Wb={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},Xb=t("td",{style:{"text-align":"center"}},null,-1),Yb={style:{"text-align":"left"}},Zb=t("code",null,"深度优先搜索",-1),Fb=t("code",null,"广度优先搜索",-1),Qb=t("code",null,"图",-1),Rb={style:{"text-align":"left"}},Sb=t("td",{style:{"text-align":"center"}},"1087",-1),Gb={style:{"text-align":"left"}},$b={href:"https://leetcode.com/problems/brace-expansion",target:"_blank",rel:"noopener noreferrer"},tp=t("td",{style:{"text-align":"center"}},null,-1),ep={style:{"text-align":"left"}},lp=t("code",null,"广度优先搜索",-1),op=t("code",null,"字符串",-1),np=t("code",null,"回溯",-1),sp={style:{"text-align":"left"}},dp=t("td",{style:{"text-align":"center"}},"1091",-1),_p={style:{"text-align":"left"}},ip={href:"https://leetcode.com/problems/shortest-path-in-binary-matrix",target:"_blank",rel:"noopener noreferrer"},rp=t("td",{style:{"text-align":"center"}},null,-1),ap={style:{"text-align":"left"}},cp=t("code",null,"广度优先搜索",-1),hp=t("code",null,"数组",-1),up=t("code",null,"矩阵",-1),fp={style:{"text-align":"left"}},gp=t("td",{style:{"text-align":"center"}},"1096",-1),mp={style:{"text-align":"left"}},yp={href:"https://leetcode.com/problems/brace-expansion-ii",target:"_blank",rel:"noopener noreferrer"},xp=t("td",{style:{"text-align":"center"}},null,-1),bp={style:{"text-align":"left"}},pp=t("code",null,"栈",-1),kp=t("code",null,"广度优先搜索",-1),Mp=t("code",null,"字符串",-1),Ip=t("code",null,"1+",-1),vp={style:{"text-align":"left"}},Hp=t("td",{style:{"text-align":"center"}},"1102",-1),wp={style:{"text-align":"left"}},zp={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},Ep=t("td",{style:{"text-align":"center"}},null,-1),Op={style:{"text-align":"left"}},Lp=t("code",null,"深度优先搜索",-1),Cp=t("code",null,"广度优先搜索",-1),jp=t("code",null,"并查集",-1),Pp=t("code",null,"4+",-1),qp={style:{"text-align":"left"}},Np=t("td",{style:{"text-align":"center"}},"1123",-1),Vp={style:{"text-align":"left"}},Kp={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},Tp=t("td",{style:{"text-align":"center"}},null,-1),Ap={style:{"text-align":"left"}},Bp=t("code",null,"树",-1),Dp=t("code",null,"深度优先搜索",-1),Jp=t("code",null,"广度优先搜索",-1),Up=t("code",null,"2+",-1),Wp={style:{"text-align":"left"}},Xp=t("td",{style:{"text-align":"center"}},"1129",-1),Yp={style:{"text-align":"left"}},Zp={href:"https://leetcode.com/problems/shortest-path-with-alternating-colors",target:"_blank",rel:"noopener noreferrer"},Fp=t("td",{style:{"text-align":"center"}},null,-1),Qp={style:{"text-align":"left"}},Rp=t("code",null,"广度优先搜索",-1),Sp=t("code",null,"图",-1),Gp={style:{"text-align":"left"}},$p=t("td",{style:{"text-align":"center"}},"1161",-1),t0={style:{"text-align":"left"}},e0={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},l0=t("td",{style:{"text-align":"center"}},null,-1),o0={style:{"text-align":"left"}},n0=t("code",null,"树",-1),s0=t("code",null,"深度优先搜索",-1),d0=t("code",null,"广度优先搜索",-1),_0=t("code",null,"1+",-1),i0={style:{"text-align":"left"}},r0=t("td",{style:{"text-align":"center"}},"1162",-1),a0={style:{"text-align":"left"}},c0={href:"https://leetcode.com/problems/as-far-from-land-as-possible",target:"_blank",rel:"noopener noreferrer"},h0=t("td",{style:{"text-align":"center"}},null,-1),u0={style:{"text-align":"left"}},f0=t("code",null,"广度优先搜索",-1),g0=t("code",null,"数组",-1),m0=t("code",null,"动态规划",-1),y0=t("code",null,"1+",-1),x0={style:{"text-align":"left"}},b0=t("td",{style:{"text-align":"center"}},"1197",-1),p0={style:{"text-align":"left"}},k0={href:"https://leetcode.com/problems/minimum-knight-moves",target:"_blank",rel:"noopener noreferrer"},M0=t("td",{style:{"text-align":"center"}},null,-1),I0={style:{"text-align":"left"}},v0=t("code",null,"广度优先搜索",-1),H0={style:{"text-align":"left"}},w0=t("td",{style:{"text-align":"center"}},"1202",-1),z0={style:{"text-align":"left"}},E0={href:"https://leetcode.com/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},O0=t("td",{style:{"text-align":"center"}},null,-1),L0={style:{"text-align":"left"}},C0=t("code",null,"深度优先搜索",-1),j0=t("code",null,"广度优先搜索",-1),P0=t("code",null,"并查集",-1),q0=t("code",null,"4+",-1),N0={style:{"text-align":"left"}},V0=t("td",{style:{"text-align":"center"}},"1203",-1),K0={style:{"text-align":"left"}},T0={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},A0=t("td",{style:{"text-align":"center"}},null,-1),B0={style:{"text-align":"left"}},D0=t("code",null,"深度优先搜索",-1),J0=t("code",null,"广度优先搜索",-1),U0=t("code",null,"图",-1),W0=t("code",null,"1+",-1),X0={style:{"text-align":"left"}},Y0=t("td",{style:{"text-align":"center"}},"1210",-1),Z0={style:{"text-align":"left"}},F0={href:"https://leetcode.com/problems/minimum-moves-to-reach-target-with-rotations",target:"_blank",rel:"noopener noreferrer"},Q0=t("td",{style:{"text-align":"center"}},null,-1),R0={style:{"text-align":"left"}},S0=t("code",null,"广度优先搜索",-1),G0=t("code",null,"数组",-1),$0=t("code",null,"矩阵",-1),t3={style:{"text-align":"left"}},e3=t("td",{style:{"text-align":"center"}},"1215",-1),l3={style:{"text-align":"left"}},o3={href:"https://leetcode.com/problems/stepping-numbers",target:"_blank",rel:"noopener noreferrer"},n3=t("td",{style:{"text-align":"center"}},null,-1),s3={style:{"text-align":"left"}},d3=t("code",null,"广度优先搜索",-1),_3=t("code",null,"数学",-1),i3=t("code",null,"回溯",-1),r3={style:{"text-align":"left"}},a3=t("td",{style:{"text-align":"center"}},"1236",-1),c3={style:{"text-align":"left"}},h3={href:"https://leetcode.com/problems/web-crawler",target:"_blank",rel:"noopener noreferrer"},u3=t("td",{style:{"text-align":"center"}},null,-1),f3={style:{"text-align":"left"}},g3=t("code",null,"深度优先搜索",-1),m3=t("code",null,"广度优先搜索",-1),y3=t("code",null,"字符串",-1),x3=t("code",null,"1+",-1),b3={style:{"text-align":"left"}},p3=t("td",{style:{"text-align":"center"}},"1242",-1),k3={style:{"text-align":"left"}},M3={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},I3=t("td",{style:{"text-align":"center"}},null,-1),v3={style:{"text-align":"left"}},H3=t("code",null,"深度优先搜索",-1),w3=t("code",null,"广度优先搜索",-1),z3=t("code",null,"多线程",-1),E3={style:{"text-align":"left"}},O3=t("td",{style:{"text-align":"center"}},"1245",-1),L3={style:{"text-align":"left"}},C3={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},j3=t("td",{style:{"text-align":"center"}},null,-1),P3={style:{"text-align":"left"}},q3=t("code",null,"树",-1),N3=t("code",null,"深度优先搜索",-1),V3=t("code",null,"广度优先搜索",-1),K3=t("code",null,"2+",-1),T3={style:{"text-align":"left"}},A3=t("td",{style:{"text-align":"center"}},"1254",-1),B3={style:{"text-align":"left"}},D3={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},J3=t("td",{style:{"text-align":"center"}},null,-1),U3={style:{"text-align":"left"}},W3=t("code",null,"深度优先搜索",-1),X3=t("code",null,"广度优先搜索",-1),Y3=t("code",null,"并查集",-1),Z3=t("code",null,"2+",-1),F3={style:{"text-align":"left"}},Q3=t("td",{style:{"text-align":"center"}},"1257",-1),R3={style:{"text-align":"left"}},S3={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},G3=t("td",{style:{"text-align":"center"}},null,-1),$3={style:{"text-align":"left"}},t4=t("code",null,"树",-1),e4=t("code",null,"深度优先搜索",-1),l4=t("code",null,"广度优先搜索",-1),o4=t("code",null,"3+",-1),n4={style:{"text-align":"left"}},s4=t("td",{style:{"text-align":"center"}},"1261",-1),d4={style:{"text-align":"left"}},_4={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},i4=t("td",{style:{"text-align":"center"}},null,-1),r4={style:{"text-align":"left"}},a4=t("code",null,"树",-1),c4=t("code",null,"深度优先搜索",-1),h4=t("code",null,"广度优先搜索",-1),u4=t("code",null,"3+",-1),f4={style:{"text-align":"left"}},g4=t("td",{style:{"text-align":"center"}},"1263",-1),m4={style:{"text-align":"left"}},y4={href:"https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location",target:"_blank",rel:"noopener noreferrer"},x4=t("td",{style:{"text-align":"center"}},null,-1),b4={style:{"text-align":"left"}},p4=t("code",null,"广度优先搜索",-1),k4=t("code",null,"数组",-1),M4=t("code",null,"矩阵",-1),I4=t("code",null,"1+",-1),v4={style:{"text-align":"left"}},H4=t("td",{style:{"text-align":"center"}},"1267",-1),w4={style:{"text-align":"left"}},z4={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},E4=t("td",{style:{"text-align":"center"}},null,-1),O4={style:{"text-align":"left"}},L4=t("code",null,"深度优先搜索",-1),C4=t("code",null,"广度优先搜索",-1),j4=t("code",null,"并查集",-1),P4=t("code",null,"3+",-1),q4={style:{"text-align":"left"}},N4=t("td",{style:{"text-align":"center"}},"1273",-1),V4={style:{"text-align":"left"}},K4={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},T4=t("td",{style:{"text-align":"center"}},null,-1),A4={style:{"text-align":"left"}},B4=t("code",null,"树",-1),D4=t("code",null,"深度优先搜索",-1),J4=t("code",null,"广度优先搜索",-1),U4=t("code",null,"1+",-1),W4={style:{"text-align":"left"}},X4=t("td",{style:{"text-align":"center"}},"1284",-1),Y4={style:{"text-align":"left"}},Z4={href:"https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",target:"_blank",rel:"noopener noreferrer"},F4=t("td",{style:{"text-align":"center"}},null,-1),Q4={style:{"text-align":"left"}},R4=t("code",null,"位运算",-1),S4=t("code",null,"广度优先搜索",-1),G4=t("code",null,"数组",-1),$4=t("code",null,"2+",-1),t8={style:{"text-align":"left"}},e8=t("td",{style:{"text-align":"center"}},"1293",-1),l8={style:{"text-align":"left"}},o8={href:"https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination",target:"_blank",rel:"noopener noreferrer"},n8=t("td",{style:{"text-align":"center"}},null,-1),s8={style:{"text-align":"left"}},d8=t("code",null,"广度优先搜索",-1),_8=t("code",null,"数组",-1),i8=t("code",null,"矩阵",-1),r8={style:{"text-align":"left"}},a8=t("td",{style:{"text-align":"center"}},"1298",-1),c8={style:{"text-align":"left"}},h8={href:"https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes",target:"_blank",rel:"noopener noreferrer"},u8=t("td",{style:{"text-align":"center"}},null,-1),f8={style:{"text-align":"left"}},g8=t("code",null,"广度优先搜索",-1),m8=t("code",null,"图",-1),y8=t("code",null,"数组",-1),x8={style:{"text-align":"left"}},b8=t("td",{style:{"text-align":"center"}},"1302",-1),p8={style:{"text-align":"left"}},k8={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},M8=t("td",{style:{"text-align":"center"}},null,-1),I8={style:{"text-align":"left"}},v8=t("code",null,"树",-1),H8=t("code",null,"深度优先搜索",-1),w8=t("code",null,"广度优先搜索",-1),z8=t("code",null,"1+",-1),E8={style:{"text-align":"left"}},O8=t("td",{style:{"text-align":"center"}},"1306",-1),L8={style:{"text-align":"left"}},C8={href:"https://leetcode.com/problems/jump-game-iii",target:"_blank",rel:"noopener noreferrer"},j8=t("td",{style:{"text-align":"center"}},null,-1),P8={style:{"text-align":"left"}},q8=t("code",null,"深度优先搜索",-1),N8=t("code",null,"广度优先搜索",-1),V8=t("code",null,"数组",-1),K8={style:{"text-align":"left"}},T8=t("td",{style:{"text-align":"center"}},"1311",-1),A8={style:{"text-align":"left"}},B8={href:"https://leetcode.com/problems/get-watched-videos-by-your-friends",target:"_blank",rel:"noopener noreferrer"},D8=t("td",{style:{"text-align":"center"}},null,-1),J8={style:{"text-align":"left"}},U8=t("code",null,"广度优先搜索",-1),W8=t("code",null,"图",-1),X8=t("code",null,"数组",-1),Y8=t("code",null,"2+",-1),Z8={style:{"text-align":"left"}},F8=t("td",{style:{"text-align":"center"}},"1315",-1),Q8={style:{"text-align":"left"}},R8={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},S8=t("td",{style:{"text-align":"center"}},null,-1),G8={style:{"text-align":"left"}},$8=t("code",null,"树",-1),t6=t("code",null,"深度优先搜索",-1),e6=t("code",null,"广度优先搜索",-1),l6=t("code",null,"1+",-1),o6={style:{"text-align":"left"}},n6=t("td",{style:{"text-align":"center"}},"1319",-1),s6={style:{"text-align":"left"}},d6={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},_6=t("td",{style:{"text-align":"center"}},null,-1),i6={style:{"text-align":"left"}},r6=t("code",null,"深度优先搜索",-1),a6=t("code",null,"广度优先搜索",-1),c6=t("code",null,"并查集",-1),h6=t("code",null,"1+",-1),u6={style:{"text-align":"left"}},f6=t("td",{style:{"text-align":"center"}},"1345",-1),g6={style:{"text-align":"left"}},m6={href:"https://leetcode.com/problems/jump-game-iv",target:"_blank",rel:"noopener noreferrer"},y6=t("td",{style:{"text-align":"center"}},null,-1),x6={style:{"text-align":"left"}},b6=t("code",null,"广度优先搜索",-1),p6=t("code",null,"数组",-1),k6=t("code",null,"哈希表",-1),M6={style:{"text-align":"left"}},I6=t("td",{style:{"text-align":"center"}},"1361",-1),v6={style:{"text-align":"left"}},H6={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},w6=t("td",{style:{"text-align":"center"}},null,-1),z6={style:{"text-align":"left"}},E6=t("code",null,"树",-1),O6=t("code",null,"深度优先搜索",-1),L6=t("code",null,"广度优先搜索",-1),C6=t("code",null,"3+",-1),j6={style:{"text-align":"left"}},P6=t("td",{style:{"text-align":"center"}},"1368",-1),q6={style:{"text-align":"left"}},N6={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},V6=t("td",{style:{"text-align":"center"}},null,-1),K6={style:{"text-align":"left"}},T6=t("code",null,"广度优先搜索",-1),A6=t("code",null,"图",-1),B6=t("code",null,"数组",-1),D6=t("code",null,"3+",-1),J6={style:{"text-align":"left"}},U6=t("td",{style:{"text-align":"center"}},"1376",-1),W6={style:{"text-align":"left"}},X6={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},Y6=t("td",{style:{"text-align":"center"}},null,-1),Z6={style:{"text-align":"left"}},F6=t("code",null,"树",-1),Q6=t("code",null,"深度优先搜索",-1),R6=t("code",null,"广度优先搜索",-1),S6={style:{"text-align":"left"}},G6=t("td",{style:{"text-align":"center"}},"1377",-1),$6={style:{"text-align":"left"}},t5={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},e5=t("td",{style:{"text-align":"center"}},null,-1),l5={style:{"text-align":"left"}},o5=t("code",null,"树",-1),n5=t("code",null,"深度优先搜索",-1),s5=t("code",null,"广度优先搜索",-1),d5=t("code",null,"1+",-1),_5={style:{"text-align":"left"}},i5=t("td",{style:{"text-align":"center"}},"1379",-1),r5={style:{"text-align":"left"}},a5={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},c5=t("td",{style:{"text-align":"center"}},null,-1),h5={style:{"text-align":"left"}},u5=t("code",null,"树",-1),f5=t("code",null,"深度优先搜索",-1),g5=t("code",null,"广度优先搜索",-1),m5=t("code",null,"1+",-1),y5={style:{"text-align":"left"}},x5=t("td",{style:{"text-align":"center"}},"1391",-1),b5={style:{"text-align":"left"}},p5={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},k5=t("td",{style:{"text-align":"center"}},null,-1),M5={style:{"text-align":"left"}},I5=t("code",null,"深度优先搜索",-1),v5=t("code",null,"广度优先搜索",-1),H5=t("code",null,"并查集",-1),w5=t("code",null,"2+",-1),z5={style:{"text-align":"left"}},E5=t("td",{style:{"text-align":"center"}},"1430",-1),O5={style:{"text-align":"left"}},L5={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},C5=t("td",{style:{"text-align":"center"}},null,-1),j5={style:{"text-align":"left"}},P5=t("code",null,"树",-1),q5=t("code",null,"深度优先搜索",-1),N5=t("code",null,"广度优先搜索",-1),V5=t("code",null,"1+",-1),K5={style:{"text-align":"left"}},T5=t("td",{style:{"text-align":"center"}},"1443",-1),A5={style:{"text-align":"left"}},B5={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},D5=t("td",{style:{"text-align":"center"}},null,-1),J5={style:{"text-align":"left"}},U5=t("code",null,"树",-1),W5=t("code",null,"深度优先搜索",-1),X5=t("code",null,"广度优先搜索",-1),Y5=t("code",null,"1+",-1),Z5={style:{"text-align":"left"}},F5=t("td",{style:{"text-align":"center"}},"1448",-1),Q5={style:{"text-align":"left"}},R5={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},S5=t("td",{style:{"text-align":"center"}},null,-1),G5={style:{"text-align":"left"}},$5=t("code",null,"树",-1),t7=t("code",null,"深度优先搜索",-1),e7=t("code",null,"广度优先搜索",-1),l7=t("code",null,"1+",-1),o7={style:{"text-align":"left"}},n7=t("td",{style:{"text-align":"center"}},"1457",-1),s7={style:{"text-align":"left"}},d7={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},_7=t("td",{style:{"text-align":"center"}},null,-1),i7={style:{"text-align":"left"}},r7=t("code",null,"位运算",-1),a7=t("code",null,"树",-1),c7=t("code",null,"深度优先搜索",-1),h7=t("code",null,"2+",-1),u7={style:{"text-align":"left"}},f7=t("td",{style:{"text-align":"center"}},"1462",-1),g7={style:{"text-align":"left"}},m7={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},y7=t("td",{style:{"text-align":"center"}},null,-1),x7={style:{"text-align":"left"}},b7=t("code",null,"深度优先搜索",-1),p7=t("code",null,"广度优先搜索",-1),k7=t("code",null,"图",-1),M7=t("code",null,"1+",-1),I7={style:{"text-align":"left"}},v7=t("td",{style:{"text-align":"center"}},"1466",-1),H7={style:{"text-align":"left"}},w7={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},z7=t("td",{style:{"text-align":"center"}},null,-1),E7={style:{"text-align":"left"}},O7=t("code",null,"深度优先搜索",-1),L7=t("code",null,"广度优先搜索",-1),C7=t("code",null,"图",-1),j7={style:{"text-align":"left"}},P7=t("td",{style:{"text-align":"center"}},"1469",-1),q7={style:{"text-align":"left"}},N7={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},V7=t("td",{style:{"text-align":"center"}},null,-1),K7={style:{"text-align":"left"}},T7=t("code",null,"树",-1),A7=t("code",null,"深度优先搜索",-1),B7=t("code",null,"广度优先搜索",-1),D7=t("code",null,"1+",-1),J7={style:{"text-align":"left"}},U7=t("td",{style:{"text-align":"center"}},"1483",-1),W7={style:{"text-align":"left"}},X7={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},Y7=t("td",{style:{"text-align":"center"}},null,-1),Z7={style:{"text-align":"left"}},F7=t("code",null,"树",-1),Q7=t("code",null,"深度优先搜索",-1),R7=t("code",null,"广度优先搜索",-1),S7=t("code",null,"3+",-1),G7={style:{"text-align":"left"}},$7=t("td",{style:{"text-align":"center"}},"1485",-1),t9={style:{"text-align":"left"}},e9={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},l9=t("td",{style:{"text-align":"center"}},null,-1),o9={style:{"text-align":"left"}},n9=t("code",null,"树",-1),s9=t("code",null,"深度优先搜索",-1),d9=t("code",null,"广度优先搜索",-1),_9=t("code",null,"2+",-1),i9={style:{"text-align":"left"}},r9=t("td",{style:{"text-align":"center"}},"1490",-1),a9={style:{"text-align":"left"}},c9={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},h9=t("td",{style:{"text-align":"center"}},null,-1),u9={style:{"text-align":"left"}},f9=t("code",null,"树",-1),g9=t("code",null,"深度优先搜索",-1),m9=t("code",null,"广度优先搜索",-1),y9=t("code",null,"1+",-1),x9={style:{"text-align":"left"}},b9=t("td",{style:{"text-align":"center"}},"1519",-1),p9={style:{"text-align":"left"}},k9={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},M9=t("td",{style:{"text-align":"center"}},null,-1),I9={style:{"text-align":"left"}},v9=t("code",null,"树",-1),H9=t("code",null,"深度优先搜索",-1),w9=t("code",null,"广度优先搜索",-1),z9=t("code",null,"2+",-1),E9={style:{"text-align":"left"}},O9=t("td",{style:{"text-align":"center"}},"1559",-1),L9={style:{"text-align":"left"}},C9={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},j9=t("td",{style:{"text-align":"center"}},null,-1),P9={style:{"text-align":"left"}},q9=t("code",null,"深度优先搜索",-1),N9=t("code",null,"广度优先搜索",-1),V9=t("code",null,"并查集",-1),K9=t("code",null,"2+",-1),T9={style:{"text-align":"left"}},A9=t("td",{style:{"text-align":"center"}},"1568",-1),B9={style:{"text-align":"left"}},D9={href:"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},J9=t("td",{style:{"text-align":"center"}},null,-1),U9={style:{"text-align":"left"}},W9=t("code",null,"深度优先搜索",-1),X9=t("code",null,"广度优先搜索",-1),Y9=t("code",null,"数组",-1),Z9=t("code",null,"2+",-1),F9={style:{"text-align":"left"}},Q9=t("td",{style:{"text-align":"center"}},"1602",-1),R9={style:{"text-align":"left"}},S9={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},G9=t("td",{style:{"text-align":"center"}},null,-1),$9={style:{"text-align":"left"}},tk=t("code",null,"树",-1),ek=t("code",null,"广度优先搜索",-1),lk=t("code",null,"二叉树",-1),ok={style:{"text-align":"left"}},nk=t("td",{style:{"text-align":"center"}},"1609",-1),sk={style:{"text-align":"left"}},dk={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},_k=t("td",{style:{"text-align":"center"}},null,-1),ik={style:{"text-align":"left"}},rk=t("code",null,"树",-1),ak=t("code",null,"广度优先搜索",-1),ck=t("code",null,"二叉树",-1),hk={style:{"text-align":"left"}},uk=t("td",{style:{"text-align":"center"}},"1625",-1),fk={style:{"text-align":"left"}},gk={href:"https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations",target:"_blank",rel:"noopener noreferrer"},mk=t("td",{style:{"text-align":"center"}},null,-1),yk={style:{"text-align":"left"}},xk=t("code",null,"深度优先搜索",-1),bk=t("code",null,"广度优先搜索",-1),pk=t("code",null,"字符串",-1),kk=t("code",null,"1+",-1),Mk={style:{"text-align":"left"}},Ik=t("td",{style:{"text-align":"center"}},"1631",-1),vk={style:{"text-align":"left"}},Hk={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},wk=t("td",{style:{"text-align":"center"}},null,-1),zk={style:{"text-align":"left"}},Ek=t("code",null,"深度优先搜索",-1),Ok=t("code",null,"广度优先搜索",-1),Lk=t("code",null,"并查集",-1),Ck=t("code",null,"4+",-1),jk={style:{"text-align":"left"}},Pk=t("td",{style:{"text-align":"center"}},"1654",-1),qk={style:{"text-align":"left"}},Nk={href:"https://leetcode.com/problems/minimum-jumps-to-reach-home",target:"_blank",rel:"noopener noreferrer"},Vk=t("td",{style:{"text-align":"center"}},null,-1),Kk={style:{"text-align":"left"}},Tk=t("code",null,"广度优先搜索",-1),Ak=t("code",null,"数组",-1),Bk=t("code",null,"动态规划",-1),Dk={style:{"text-align":"left"}},Jk=t("td",{style:{"text-align":"center"}},"1660",-1),Uk={style:{"text-align":"left"}},Wk={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xk=t("td",{style:{"text-align":"center"}},null,-1),Yk={style:{"text-align":"left"}},Zk=t("code",null,"树",-1),Fk=t("code",null,"深度优先搜索",-1),Qk=t("code",null,"广度优先搜索",-1),Rk=t("code",null,"2+",-1),Sk={style:{"text-align":"left"}},Gk=t("td",{style:{"text-align":"center"}},"1730",-1),$k={style:{"text-align":"left"}},tM={href:"https://leetcode.com/problems/shortest-path-to-get-food",target:"_blank",rel:"noopener noreferrer"},eM=t("td",{style:{"text-align":"center"}},null,-1),lM={style:{"text-align":"left"}},oM=t("code",null,"广度优先搜索",-1),nM=t("code",null,"数组",-1),sM=t("code",null,"矩阵",-1),dM={style:{"text-align":"left"}},_M=t("td",{style:{"text-align":"center"}},"1740",-1),iM={style:{"text-align":"left"}},rM={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},aM=t("td",{style:{"text-align":"center"}},null,-1),cM={style:{"text-align":"left"}},hM=t("code",null,"树",-1),uM=t("code",null,"深度优先搜索",-1),fM=t("code",null,"广度优先搜索",-1),gM=t("code",null,"2+",-1),mM={style:{"text-align":"left"}},yM=t("td",{style:{"text-align":"center"}},"1765",-1),xM={style:{"text-align":"left"}},bM={href:"https://leetcode.com/problems/map-of-highest-peak",target:"_blank",rel:"noopener noreferrer"},pM=t("td",{style:{"text-align":"center"}},null,-1),kM={style:{"text-align":"left"}},MM=t("code",null,"广度优先搜索",-1),IM=t("code",null,"数组",-1),vM=t("code",null,"矩阵",-1),HM={style:{"text-align":"left"}},wM=t("td",{style:{"text-align":"center"}},"1778",-1),zM={style:{"text-align":"left"}},EM={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},OM=t("td",{style:{"text-align":"center"}},null,-1),LM={style:{"text-align":"left"}},CM=t("code",null,"深度优先搜索",-1),jM=t("code",null,"广度优先搜索",-1),PM=t("code",null,"图",-1),qM=t("code",null,"1+",-1),NM={style:{"text-align":"left"}},VM=t("td",{style:{"text-align":"center"}},"1810",-1),KM={style:{"text-align":"left"}},TM={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},AM=t("td",{style:{"text-align":"center"}},null,-1),BM={style:{"text-align":"left"}},DM=t("code",null,"深度优先搜索",-1),JM=t("code",null,"广度优先搜索",-1),UM=t("code",null,"图",-1),WM=t("code",null,"2+",-1),XM={style:{"text-align":"left"}},YM=t("td",{style:{"text-align":"center"}},"1905",-1),ZM={style:{"text-align":"left"}},FM={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},QM=t("td",{style:{"text-align":"center"}},null,-1),RM={style:{"text-align":"left"}},SM=t("code",null,"深度优先搜索",-1),GM=t("code",null,"广度优先搜索",-1),$M=t("code",null,"并查集",-1),tI=t("code",null,"2+",-1),eI={style:{"text-align":"left"}},lI=t("td",{style:{"text-align":"center"}},"1926",-1),oI={style:{"text-align":"left"}},nI={href:"https://leetcode.com/problems/nearest-exit-from-entrance-in-maze",target:"_blank",rel:"noopener noreferrer"},sI=t("td",{style:{"text-align":"center"}},null,-1),dI={style:{"text-align":"left"}},_I=t("code",null,"广度优先搜索",-1),iI=t("code",null,"数组",-1),rI=t("code",null,"矩阵",-1),aI={style:{"text-align":"left"}},cI=t("td",{style:{"text-align":"center"}},"1970",-1),hI={style:{"text-align":"left"}},uI={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},fI=t("td",{style:{"text-align":"center"}},null,-1),gI={style:{"text-align":"left"}},mI=t("code",null,"深度优先搜索",-1),yI=t("code",null,"广度优先搜索",-1),xI=t("code",null,"并查集",-1),bI=t("code",null,"3+",-1),pI={style:{"text-align":"left"}},kI=t("td",{style:{"text-align":"center"}},"1971",-1),MI={style:{"text-align":"left"}},II={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},vI=t("td",{style:{"text-align":"center"}},null,-1),HI={style:{"text-align":"left"}},wI=t("code",null,"深度优先搜索",-1),zI=t("code",null,"广度优先搜索",-1),EI=t("code",null,"并查集",-1),OI=t("code",null,"1+",-1),LI={style:{"text-align":"left"}},CI=t("td",{style:{"text-align":"center"}},"1992",-1),jI={style:{"text-align":"left"}},PI={href:"https://leetcode.com/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},qI=t("td",{style:{"text-align":"center"}},null,-1),NI={style:{"text-align":"left"}},VI=t("code",null,"深度优先搜索",-1),KI=t("code",null,"广度优先搜索",-1),TI=t("code",null,"数组",-1),AI=t("code",null,"1+",-1),BI={style:{"text-align":"left"}},DI=t("td",{style:{"text-align":"center"}},"1993",-1),JI={style:{"text-align":"left"}},UI={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},WI=t("td",{style:{"text-align":"center"}},null,-1),XI={style:{"text-align":"left"}},YI=t("code",null,"树",-1),ZI=t("code",null,"深度优先搜索",-1),FI=t("code",null,"广度优先搜索",-1),QI=t("code",null,"3+",-1),RI={style:{"text-align":"left"}},SI=t("td",{style:{"text-align":"center"}},"2039",-1),GI={style:{"text-align":"left"}},$I={href:"https://leetcode.com/problems/the-time-when-the-network-becomes-idle",target:"_blank",rel:"noopener noreferrer"},tv=t("td",{style:{"text-align":"center"}},null,-1),ev={style:{"text-align":"left"}},lv=t("code",null,"广度优先搜索",-1),ov=t("code",null,"图",-1),nv=t("code",null,"数组",-1),sv={style:{"text-align":"left"}},dv=t("td",{style:{"text-align":"center"}},"2045",-1),_v={style:{"text-align":"left"}},iv={href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},rv=t("td",{style:{"text-align":"center"}},null,-1),av={style:{"text-align":"left"}},cv=t("code",null,"广度优先搜索",-1),hv=t("code",null,"图",-1),uv=t("code",null,"最短路",-1),fv={style:{"text-align":"left"}},gv=t("td",{style:{"text-align":"center"}},"2059",-1),mv={style:{"text-align":"left"}},yv={href:"https://leetcode.com/problems/minimum-operations-to-convert-number",target:"_blank",rel:"noopener noreferrer"},xv=t("td",{style:{"text-align":"center"}},null,-1),bv={style:{"text-align":"left"}},pv=t("code",null,"广度优先搜索",-1),kv=t("code",null,"数组",-1),Mv={style:{"text-align":"left"}},Iv=t("td",{style:{"text-align":"center"}},"2092",-1),vv={style:{"text-align":"left"}},Hv={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},wv=t("td",{style:{"text-align":"center"}},null,-1),zv={style:{"text-align":"left"}},Ev=t("code",null,"深度优先搜索",-1),Ov=t("code",null,"广度优先搜索",-1),Lv=t("code",null,"并查集",-1),Cv=t("code",null,"2+",-1),jv={style:{"text-align":"left"}},Pv=t("td",{style:{"text-align":"center"}},"2101",-1),qv={style:{"text-align":"left"}},Nv={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},Vv=t("td",{style:{"text-align":"center"}},null,-1),Kv={style:{"text-align":"left"}},Tv=t("code",null,"深度优先搜索",-1),Av=t("code",null,"广度优先搜索",-1),Bv=t("code",null,"图",-1),Dv=t("code",null,"3+",-1),Jv={style:{"text-align":"left"}},Uv=t("td",{style:{"text-align":"center"}},"2146",-1),Wv={style:{"text-align":"left"}},Xv={href:"https://leetcode.com/problems/k-highest-ranked-items-within-a-price-range",target:"_blank",rel:"noopener noreferrer"},Yv=t("td",{style:{"text-align":"center"}},null,-1),Zv={style:{"text-align":"left"}},Fv=t("code",null,"广度优先搜索",-1),Qv=t("code",null,"数组",-1),Rv=t("code",null,"矩阵",-1),Sv=t("code",null,"2+",-1),Gv={style:{"text-align":"left"}},$v=t("td",{style:{"text-align":"center"}},"2174",-1),tH={style:{"text-align":"left"}},eH={href:"https://leetcode.com/problems/remove-all-ones-with-row-and-column-flips-ii",target:"_blank",rel:"noopener noreferrer"},lH=t("td",{style:{"text-align":"center"}},null,-1),oH={style:{"text-align":"left"}},nH=t("code",null,"位运算",-1),sH=t("code",null,"广度优先搜索",-1),dH=t("code",null,"数组",-1),_H=t("code",null,"1+",-1),iH={style:{"text-align":"left"}},rH=t("td",{style:{"text-align":"center"}},"2192",-1),aH={style:{"text-align":"left"}},cH={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},hH=t("td",{style:{"text-align":"center"}},null,-1),uH={style:{"text-align":"left"}},fH=t("code",null,"深度优先搜索",-1),gH=t("code",null,"广度优先搜索",-1),mH=t("code",null,"图",-1),yH=t("code",null,"1+",-1),xH={style:{"text-align":"left"}},bH=t("td",{style:{"text-align":"center"}},"2204",-1),pH={style:{"text-align":"left"}},kH={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},MH=t("td",{style:{"text-align":"center"}},null,-1),IH={style:{"text-align":"left"}},vH=t("code",null,"深度优先搜索",-1),HH=t("code",null,"广度优先搜索",-1),wH=t("code",null,"并查集",-1),zH=t("code",null,"1+",-1),EH={style:{"text-align":"left"}},OH=t("td",{style:{"text-align":"center"}},"2258",-1),LH={style:{"text-align":"left"}},CH={href:"https://leetcode.com/problems/escape-the-spreading-fire",target:"_blank",rel:"noopener noreferrer"},jH=t("td",{style:{"text-align":"center"}},null,-1),PH={style:{"text-align":"left"}},qH=t("code",null,"广度优先搜索",-1),NH=t("code",null,"数组",-1),VH=t("code",null,"二分查找",-1),KH=t("code",null,"1+",-1),TH={style:{"text-align":"left"}},AH=t("td",{style:{"text-align":"center"}},"2277",-1),BH={style:{"text-align":"left"}},DH={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},JH=t("td",{style:{"text-align":"center"}},null,-1),UH={style:{"text-align":"left"}},WH=t("code",null,"树",-1),XH=t("code",null,"深度优先搜索",-1),YH=t("code",null,"广度优先搜索",-1),ZH=t("code",null,"1+",-1),FH={style:{"text-align":"left"}},QH=t("td",{style:{"text-align":"center"}},"2290",-1),RH={style:{"text-align":"left"}},SH={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},GH=t("td",{style:{"text-align":"center"}},null,-1),$H={style:{"text-align":"left"}},tw=t("code",null,"广度优先搜索",-1),ew=t("code",null,"图",-1),lw=t("code",null,"数组",-1),ow=t("code",null,"3+",-1),nw={style:{"text-align":"left"}},sw=t("td",{style:{"text-align":"center"}},"2316",-1),dw={style:{"text-align":"left"}},_w={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},iw=t("td",{style:{"text-align":"center"}},null,-1),rw={style:{"text-align":"left"}},aw=t("code",null,"深度优先搜索",-1),cw=t("code",null,"广度优先搜索",-1),hw=t("code",null,"并查集",-1),uw=t("code",null,"1+",-1),fw={style:{"text-align":"left"}},gw=t("td",{style:{"text-align":"center"}},"2328",-1),mw={style:{"text-align":"left"}},yw={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},xw=t("td",{style:{"text-align":"center"}},null,-1),bw={style:{"text-align":"left"}},pw=t("code",null,"深度优先搜索",-1),kw=t("code",null,"广度优先搜索",-1),Mw=t("code",null,"图",-1),Iw=t("code",null,"5+",-1),vw={style:{"text-align":"left"}},Hw=t("td",{style:{"text-align":"center"}},"2368",-1),ww={style:{"text-align":"left"}},zw={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},Ew=t("td",{style:{"text-align":"center"}},null,-1),Ow={style:{"text-align":"left"}},Lw=t("code",null,"树",-1),Cw=t("code",null,"深度优先搜索",-1),jw=t("code",null,"广度优先搜索",-1),Pw=t("code",null,"4+",-1),qw={style:{"text-align":"left"}},Nw=t("td",{style:{"text-align":"center"}},"2385",-1),Vw={style:{"text-align":"left"}},Kw={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},Tw=t("td",{style:{"text-align":"center"}},null,-1),Aw={style:{"text-align":"left"}},Bw=t("code",null,"树",-1),Dw=t("code",null,"深度优先搜索",-1),Jw=t("code",null,"广度优先搜索",-1),Uw=t("code",null,"2+",-1),Ww={style:{"text-align":"left"}},Xw=t("td",{style:{"text-align":"center"}},"2415",-1),Yw={style:{"text-align":"left"}},Zw={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Fw=t("td",{style:{"text-align":"center"}},null,-1),Qw={style:{"text-align":"left"}},Rw=t("code",null,"树",-1),Sw=t("code",null,"深度优先搜索",-1),Gw=t("code",null,"广度优先搜索",-1),$w=t("code",null,"1+",-1),tz={style:{"text-align":"left"}},ez=t("td",{style:{"text-align":"center"}},"2445",-1),lz={style:{"text-align":"left"}},oz={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},nz=t("td",{style:{"text-align":"center"}},null,-1),sz={style:{"text-align":"left"}},dz=t("code",null,"树",-1),_z=t("code",null,"深度优先搜索",-1),iz=t("code",null,"广度优先搜索",-1),rz=t("code",null,"1+",-1),az={style:{"text-align":"left"}},cz=t("td",{style:{"text-align":"center"}},"2458",-1),hz={style:{"text-align":"left"}},uz={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},fz=t("td",{style:{"text-align":"center"}},null,-1),gz={style:{"text-align":"left"}},mz=t("code",null,"树",-1),yz=t("code",null,"深度优先搜索",-1),xz=t("code",null,"广度优先搜索",-1),bz=t("code",null,"2+",-1),pz={style:{"text-align":"left"}},kz=t("td",{style:{"text-align":"center"}},"2467",-1),Mz={style:{"text-align":"left"}},Iz={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},vz=t("td",{style:{"text-align":"center"}},null,-1),Hz={style:{"text-align":"left"}},wz=t("code",null,"树",-1),zz=t("code",null,"深度优先搜索",-1),Ez=t("code",null,"广度优先搜索",-1),Oz=t("code",null,"2+",-1),Lz={style:{"text-align":"left"}},Cz=t("td",{style:{"text-align":"center"}},"2471",-1),jz={style:{"text-align":"left"}},Pz={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},qz=t("td",{style:{"text-align":"center"}},null,-1),Nz={style:{"text-align":"left"}},Vz=t("code",null,"树",-1),Kz=t("code",null,"广度优先搜索",-1),Tz=t("code",null,"二叉树",-1),Az={style:{"text-align":"left"}},Bz=t("td",{style:{"text-align":"center"}},"2477",-1),Dz={style:{"text-align":"left"}},Jz={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},Uz=t("td",{style:{"text-align":"center"}},null,-1),Wz={style:{"text-align":"left"}},Xz=t("code",null,"树",-1),Yz=t("code",null,"深度优先搜索",-1),Zz=t("code",null,"广度优先搜索",-1),Fz=t("code",null,"1+",-1),Qz={style:{"text-align":"left"}},Rz=t("td",{style:{"text-align":"center"}},"2492",-1),Sz={style:{"text-align":"left"}},Gz={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},$z=t("td",{style:{"text-align":"center"}},null,-1),tE={style:{"text-align":"left"}},eE=t("code",null,"深度优先搜索",-1),lE=t("code",null,"广度优先搜索",-1),oE=t("code",null,"并查集",-1),nE=t("code",null,"1+",-1),sE={style:{"text-align":"left"}},dE=t("td",{style:{"text-align":"center"}},"2493",-1),_E={style:{"text-align":"left"}},iE={href:"https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups",target:"_blank",rel:"noopener noreferrer"},rE=t("td",{style:{"text-align":"center"}},null,-1),aE={style:{"text-align":"left"}},cE=t("code",null,"广度优先搜索",-1),hE=t("code",null,"并查集",-1),uE=t("code",null,"图",-1),fE={style:{"text-align":"left"}},gE=t("td",{style:{"text-align":"center"}},"2503",-1),mE={style:{"text-align":"left"}},yE={href:"https://leetcode.com/problems/maximum-number-of-points-from-grid-queries",target:"_blank",rel:"noopener noreferrer"},xE=t("td",{style:{"text-align":"center"}},null,-1),bE={style:{"text-align":"left"}},pE=t("code",null,"广度优先搜索",-1),kE=t("code",null,"并查集",-1),ME=t("code",null,"数组",-1),IE=t("code",null,"4+",-1),vE={style:{"text-align":"left"}},HE=t("td",{style:{"text-align":"center"}},"2556",-1),wE={style:{"text-align":"left"}},zE={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},EE=t("td",{style:{"text-align":"center"}},null,-1),OE={style:{"text-align":"left"}},LE=t("code",null,"深度优先搜索",-1),CE=t("code",null,"广度优先搜索",-1),jE=t("code",null,"数组",-1),PE=t("code",null,"2+",-1),qE={style:{"text-align":"left"}},NE=t("td",{style:{"text-align":"center"}},"2577",-1),VE={style:{"text-align":"left"}},KE={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},TE=t("td",{style:{"text-align":"center"}},null,-1),AE={style:{"text-align":"left"}},BE=t("code",null,"广度优先搜索",-1),DE=t("code",null,"图",-1),JE=t("code",null,"数组",-1),UE=t("code",null,"3+",-1),WE={style:{"text-align":"left"}},XE=t("td",{style:{"text-align":"center"}},"2583",-1),YE={style:{"text-align":"left"}},ZE={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},FE=t("td",{style:{"text-align":"center"}},null,-1),QE={style:{"text-align":"left"}},RE=t("code",null,"树",-1),SE=t("code",null,"广度优先搜索",-1),GE=t("code",null,"二叉树",-1),$E=t("code",null,"1+",-1),tO={style:{"text-align":"left"}},eO=t("td",{style:{"text-align":"center"}},"2596",-1),lO={style:{"text-align":"left"}},oO={href:"https://leetcode.com/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},nO=t("td",{style:{"text-align":"center"}},null,-1),sO={style:{"text-align":"left"}},dO=t("code",null,"深度优先搜索",-1),_O=t("code",null,"广度优先搜索",-1),iO=t("code",null,"数组",-1),rO=t("code",null,"2+",-1),aO={style:{"text-align":"left"}},cO=t("td",{style:{"text-align":"center"}},"2608",-1),hO={style:{"text-align":"left"}},uO={href:"https://leetcode.com/problems/shortest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},fO=t("td",{style:{"text-align":"center"}},null,-1),gO={style:{"text-align":"left"}},mO=t("code",null,"广度优先搜索",-1),yO=t("code",null,"图",-1),xO={style:{"text-align":"left"}},bO=t("td",{style:{"text-align":"center"}},"2612",-1),pO={style:{"text-align":"left"}},kO={href:"https://leetcode.com/problems/minimum-reverse-operations",target:"_blank",rel:"noopener noreferrer"},MO=t("td",{style:{"text-align":"center"}},null,-1),IO={style:{"text-align":"left"}},vO=t("code",null,"广度优先搜索",-1),HO=t("code",null,"数组",-1),wO=t("code",null,"有序集合",-1),zO={style:{"text-align":"left"}},EO=t("td",{style:{"text-align":"center"}},"2617",-1),OO={style:{"text-align":"left"}},LO={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},CO=t("td",{style:{"text-align":"center"}},null,-1),jO={style:{"text-align":"left"}},PO=t("code",null,"栈",-1),qO=t("code",null,"广度优先搜索",-1),NO=t("code",null,"并查集",-1),VO=t("code",null,"5+",-1),KO={style:{"text-align":"left"}},TO=t("td",{style:{"text-align":"center"}},"2641",-1),AO={style:{"text-align":"left"}},BO={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},DO=t("td",{style:{"text-align":"center"}},null,-1),JO={style:{"text-align":"left"}},UO=t("code",null,"树",-1),WO=t("code",null,"深度优先搜索",-1),XO=t("code",null,"广度优先搜索",-1),YO=t("code",null,"2+",-1),ZO={style:{"text-align":"left"}},FO=t("td",{style:{"text-align":"center"}},"2658",-1),QO={style:{"text-align":"left"}},RO={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},SO=t("td",{style:{"text-align":"center"}},null,-1),GO={style:{"text-align":"left"}},$O=t("code",null,"深度优先搜索",-1),tL=t("code",null,"广度优先搜索",-1),eL=t("code",null,"并查集",-1),lL=t("code",null,"2+",-1),oL={style:{"text-align":"left"}},nL=t("td",{style:{"text-align":"center"}},"2685",-1),sL={style:{"text-align":"left"}},dL={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},_L=t("td",{style:{"text-align":"center"}},null,-1),iL={style:{"text-align":"left"}},rL=t("code",null,"深度优先搜索",-1),aL=t("code",null,"广度优先搜索",-1),cL=t("code",null,"图",-1),hL={style:{"text-align":"left"}},uL=t("td",{style:{"text-align":"center"}},"2773",-1),fL={style:{"text-align":"left"}},gL={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},mL=t("td",{style:{"text-align":"center"}},null,-1),yL={style:{"text-align":"left"}},xL=t("code",null,"树",-1),bL=t("code",null,"深度优先搜索",-1),pL=t("code",null,"广度优先搜索",-1),kL=t("code",null,"1+",-1),ML={style:{"text-align":"left"}},IL=t("td",{style:{"text-align":"center"}},"2812",-1),vL={style:{"text-align":"left"}},HL={href:"https://leetcode.com/problems/find-the-safest-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},wL=t("td",{style:{"text-align":"center"}},null,-1),zL={style:{"text-align":"left"}},EL=t("code",null,"广度优先搜索",-1),OL=t("code",null,"并查集",-1),LL=t("code",null,"数组",-1),CL=t("code",null,"2+",-1),jL={style:{"text-align":"left"}},PL=t("td",{style:{"text-align":"center"}},"2814",-1),qL={style:{"text-align":"left"}},NL={href:"https://leetcode.com/problems/minimum-time-takes-to-reach-destination-without-drowning",target:"_blank",rel:"noopener noreferrer"},VL=t("td",{style:{"text-align":"center"}},null,-1),KL={style:{"text-align":"left"}},TL=t("code",null,"广度优先搜索",-1),AL=t("code",null,"数组",-1),BL=t("code",null,"矩阵",-1),DL={style:{"text-align":"left"}},JL=t("td",{style:{"text-align":"center"}},"2850",-1),UL={style:{"text-align":"left"}},WL={href:"https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid",target:"_blank",rel:"noopener noreferrer"},XL=t("td",{style:{"text-align":"center"}},null,-1),YL={style:{"text-align":"left"}},ZL=t("code",null,"广度优先搜索",-1),FL=t("code",null,"数组",-1),QL=t("code",null,"动态规划",-1),RL=t("code",null,"1+",-1),SL={style:{"text-align":"left"}},GL=t("td",{style:{"text-align":"center"}},"2852",-1),$L={style:{"text-align":"left"}},tC={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},eC=t("td",{style:{"text-align":"center"}},null,-1),lC={style:{"text-align":"left"}},oC=t("code",null,"深度优先搜索",-1),nC=t("code",null,"广度优先搜索",-1),sC=t("code",null,"并查集",-1),dC=t("code",null,"3+",-1),_C={style:{"text-align":"left"}},iC=t("td",{style:{"text-align":"center"}},"2858",-1),rC={style:{"text-align":"left"}},aC={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},cC=t("td",{style:{"text-align":"center"}},null,-1),hC={style:{"text-align":"left"}},uC=t("code",null,"深度优先搜索",-1),fC=t("code",null,"广度优先搜索",-1),gC=t("code",null,"图",-1),mC=t("code",null,"1+",-1),yC={style:{"text-align":"left"}},xC=t("td",{style:{"text-align":"center"}},"2998",-1),bC={style:{"text-align":"left"}},pC={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},kC=t("td",{style:{"text-align":"center"}},null,-1),MC={style:{"text-align":"left"}},IC=t("code",null,"广度优先搜索",-1),vC=t("code",null,"记忆化搜索",-1),HC=t("code",null,"动态规划",-1),wC={style:{"text-align":"left"}},zC=t("td",{style:{"text-align":"center"}},"3015",-1),EC={style:{"text-align":"left"}},OC={href:"https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-i",target:"_blank",rel:"noopener noreferrer"},LC=t("td",{style:{"text-align":"center"}},null,-1),CC={style:{"text-align":"left"}},jC=t("code",null,"广度优先搜索",-1),PC=t("code",null,"图",-1),qC=t("code",null,"前缀和",-1),NC={style:{"text-align":"left"}},VC=t("td",{style:{"text-align":"center"}},"3123",-1),KC={style:{"text-align":"left"}},TC={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},AC=t("td",{style:{"text-align":"center"}},null,-1),BC={style:{"text-align":"left"}},DC=t("code",null,"深度优先搜索",-1),JC=t("code",null,"广度优先搜索",-1),UC=t("code",null,"图",-1),WC=t("code",null,"2+",-1),XC={style:{"text-align":"left"}},YC=t("td",{style:{"text-align":"center"}},"3141",-1),ZC={style:{"text-align":"left"}},FC={href:"https://leetcode.com/problems/maximum-hamming-distances",target:"_blank",rel:"noopener noreferrer"},QC=t("td",{style:{"text-align":"center"}},null,-1),RC={style:{"text-align":"left"}},SC=t("code",null,"位运算",-1),GC=t("code",null,"广度优先搜索",-1),$C=t("code",null,"数组",-1),tj={style:{"text-align":"left"}},ej=t("td",{style:{"text-align":"center"}},"3157",-1),lj={style:{"text-align":"left"}},oj={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},nj=t("td",{style:{"text-align":"center"}},null,-1),sj={style:{"text-align":"left"}},dj=t("code",null,"树",-1),_j=t("code",null,"深度优先搜索",-1),ij=t("code",null,"广度优先搜索",-1),rj=t("code",null,"1+",-1),aj={style:{"text-align":"left"}},cj=t("td",{style:{"text-align":"center"}},"3203",-1),hj={style:{"text-align":"left"}},uj={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},fj=t("td",{style:{"text-align":"center"}},null,-1),gj={style:{"text-align":"left"}},mj=t("code",null,"树",-1),yj=t("code",null,"深度优先搜索",-1),xj=t("code",null,"广度优先搜索",-1),bj=t("code",null,"1+",-1),pj={style:{"text-align":"left"}},kj=t("td",{style:{"text-align":"center"}},"3235",-1),Mj={style:{"text-align":"left"}},Ij={href:"https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},vj=t("td",{style:{"text-align":"center"}},null,-1),Hj={style:{"text-align":"left"}},wj=t("code",null,"深度优先搜索",-1),zj=t("code",null,"广度优先搜索",-1),Ej=t("code",null,"并查集",-1),Oj=t("code",null,"3+",-1),Lj={style:{"text-align":"left"}},Cj=t("td",{style:{"text-align":"center"}},"3243",-1),jj={style:{"text-align":"left"}},Pj={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-i",target:"_blank",rel:"noopener noreferrer"},qj=t("td",{style:{"text-align":"center"}},null,-1),Nj={style:{"text-align":"left"}},Vj=t("code",null,"广度优先搜索",-1),Kj=t("code",null,"图",-1),Tj=t("code",null,"数组",-1),Aj={style:{"text-align":"left"}},Bj=t("td",{style:{"text-align":"center"}},"3283",-1),Dj={style:{"text-align":"left"}},Jj={href:"https://leetcode.com/problems/maximum-number-of-moves-to-kill-all-pawns",target:"_blank",rel:"noopener noreferrer"},Uj=t("td",{style:{"text-align":"center"}},null,-1),Wj={style:{"text-align":"left"}},Xj=t("code",null,"位运算",-1),Yj=t("code",null,"广度优先搜索",-1),Zj=t("code",null,"数组",-1),Fj=t("code",null,"3+",-1),Qj={style:{"text-align":"left"}},Rj=t("td",{style:{"text-align":"center"}},"3286",-1),Sj={style:{"text-align":"left"}},Gj={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},$j=t("td",{style:{"text-align":"center"}},null,-1),tP={style:{"text-align":"left"}},eP=t("code",null,"广度优先搜索",-1),lP=t("code",null,"图",-1),oP=t("code",null,"数组",-1),nP=t("code",null,"3+",-1),sP={style:{"text-align":"left"}},dP=t("td",{style:{"text-align":"center"}},"3310",-1),_P={style:{"text-align":"left"}},iP={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},rP=t("td",{style:{"text-align":"center"}},null,-1),aP={style:{"text-align":"left"}},cP=t("code",null,"深度优先搜索",-1),hP=t("code",null,"广度优先搜索",-1),uP=t("code",null,"图",-1),fP={style:{"text-align":"left"}},gP=t("td",{style:{"text-align":"center"}},"LCP 07",-1),mP={style:{"text-align":"left"}},yP={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},xP=t("td",{style:{"text-align":"center"}},null,-1),bP={style:{"text-align":"left"}},pP=t("code",null,"深度优先搜索",-1),kP=t("code",null,"广度优先搜索",-1),MP=t("code",null,"图",-1),IP=t("code",null,"1+",-1),vP={style:{"text-align":"left"}},HP=t("td",{style:{"text-align":"center"}},"LCP 09",-1),wP={style:{"text-align":"left"}},zP={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},EP=t("td",{style:{"text-align":"center"}},null,-1),OP={style:{"text-align":"left"}},LP=t("code",null,"广度优先搜索",-1),CP=t("code",null,"线段树",-1),jP=t("code",null,"数组",-1),PP=t("code",null,"1+",-1),qP={style:{"text-align":"left"}},NP=t("td",{style:{"text-align":"center"}},"LCP 13",-1),VP={style:{"text-align":"left"}},KP={href:"https://leetcode.cn/problems/xun-bao",target:"_blank",rel:"noopener noreferrer"},TP=t("td",{style:{"text-align":"center"}},null,-1),AP={style:{"text-align":"left"}},BP=t("code",null,"位运算",-1),DP=t("code",null,"广度优先搜索",-1),JP=t("code",null,"数组",-1),UP=t("code",null,"3+",-1),WP={style:{"text-align":"left"}},XP=t("td",{style:{"text-align":"center"}},"LCP 21",-1),YP={style:{"text-align":"left"}},ZP={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},FP=t("td",{style:{"text-align":"center"}},null,-1),QP={style:{"text-align":"left"}},RP=t("code",null,"深度优先搜索",-1),SP=t("code",null,"广度优先搜索",-1),GP=t("code",null,"图",-1),$P=t("code",null,"1+",-1),tq={style:{"text-align":"left"}},eq=t("td",{style:{"text-align":"center"}},"LCP 31",-1),lq={style:{"text-align":"left"}},oq={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},nq=t("td",{style:{"text-align":"center"}},null,-1),sq={style:{"text-align":"left"}},dq=t("code",null,"深度优先搜索",-1),_q=t("code",null,"广度优先搜索",-1),iq=t("code",null,"数组",-1),rq=t("code",null,"2+",-1),aq={style:{"text-align":"left"}},cq=t("td",{style:{"text-align":"center"}},"LCP 41",-1),hq={style:{"text-align":"left"}},uq={href:"https://leetcode.cn/problems/fHi6rV",target:"_blank",rel:"noopener noreferrer"},fq=t("td",{style:{"text-align":"center"}},null,-1),gq={style:{"text-align":"left"}},mq=t("code",null,"广度优先搜索",-1),yq=t("code",null,"数组",-1),xq=t("code",null,"矩阵",-1),bq={style:{"text-align":"left"}},pq=t("td",{style:{"text-align":"center"}},"LCP 44",-1),kq={style:{"text-align":"left"}},Mq={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},Iq=t("td",{style:{"text-align":"center"}},null,-1),vq={style:{"text-align":"left"}},Hq=t("code",null,"树",-1),wq=t("code",null,"深度优先搜索",-1),zq=t("code",null,"广度优先搜索",-1),Eq=t("code",null,"2+",-1),Oq={style:{"text-align":"left"}},Lq=t("td",{style:{"text-align":"center"}},"LCP 45",-1),Cq={style:{"text-align":"left"}},jq={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},Pq=t("td",{style:{"text-align":"center"}},null,-1),qq={style:{"text-align":"left"}},Nq=t("code",null,"深度优先搜索",-1),Vq=t("code",null,"广度优先搜索",-1),Kq=t("code",null,"记忆化搜索",-1),Tq=t("code",null,"3+",-1),Aq={style:{"text-align":"left"}},Bq=t("td",{style:{"text-align":"center"}},"LCP 56",-1),Dq={style:{"text-align":"left"}},Jq={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},Uq=t("td",{style:{"text-align":"center"}},null,-1),Wq={style:{"text-align":"left"}},Xq=t("code",null,"广度优先搜索",-1),Yq=t("code",null,"图",-1),Zq=t("code",null,"数组",-1),Fq=t("code",null,"3+",-1),Qq={style:{"text-align":"left"}},Rq=t("td",{style:{"text-align":"center"}},"LCP 63",-1),Sq={style:{"text-align":"left"}},Gq={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},$q=t("td",{style:{"text-align":"center"}},null,-1),tN={style:{"text-align":"left"}},eN=t("code",null,"深度优先搜索",-1),lN=t("code",null,"广度优先搜索",-1),oN=t("code",null,"图",-1),nN=t("code",null,"5+",-1),sN={style:{"text-align":"left"}},dN=t("td",{style:{"text-align":"center"}},"LCP 67",-1),_N={style:{"text-align":"left"}},iN={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},rN=t("td",{style:{"text-align":"center"}},null,-1),aN={style:{"text-align":"left"}},cN=t("code",null,"树",-1),hN=t("code",null,"深度优先搜索",-1),uN=t("code",null,"广度优先搜索",-1),fN=t("code",null,"1+",-1),gN={style:{"text-align":"left"}},mN=t("td",{style:{"text-align":"center"}},"LCS 03",-1),yN={style:{"text-align":"left"}},xN={href:"https://leetcode.cn/problems/YesdPw",target:"_blank",rel:"noopener noreferrer"},bN=t("td",{style:{"text-align":"center"}},null,-1),pN={style:{"text-align":"left"}},kN=t("code",null,"深度优先搜索",-1),MN=t("code",null,"广度优先搜索",-1),IN=t("code",null,"并查集",-1),vN=t("code",null,"2+",-1),HN={style:{"text-align":"left"}},wN=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),zN={style:{"text-align":"left"}},EN={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},ON={style:{"text-align":"center"}},LN={href:"/problem/jz_offer_13_1",target:"_blank",rel:"noopener noreferrer"},CN={style:{"text-align":"left"}},jN=t("code",null,"深度优先搜索",-1),PN=t("code",null,"广度优先搜索",-1),qN=t("code",null,"动态规划",-1),NN={style:{"text-align":"left"}},VN=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),KN={style:{"text-align":"left"}},TN={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},AN={style:{"text-align":"center"}},BN={href:"/problem/jz_offer_27_1",target:"_blank",rel:"noopener noreferrer"},DN={style:{"text-align":"left"}},JN=t("code",null,"树",-1),UN=t("code",null,"深度优先搜索",-1),WN=t("code",null,"广度优先搜索",-1),XN=t("code",null,"1+",-1),YN={style:{"text-align":"left"}},ZN=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),FN={style:{"text-align":"left"}},QN={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},RN={style:{"text-align":"center"}},SN={href:"/problem/jz_offer_28_1",target:"_blank",rel:"noopener noreferrer"},GN={style:{"text-align":"left"}},$N=t("code",null,"树",-1),tV=t("code",null,"深度优先搜索",-1),eV=t("code",null,"广度优先搜索",-1),lV=t("code",null,"1+",-1),oV={style:{"text-align":"left"}},nV=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - I",-1),sV={style:{"text-align":"left"}},dV={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},_V={style:{"text-align":"center"}},iV={href:"/problem/jz_offer_32_1",target:"_blank",rel:"noopener noreferrer"},rV={style:{"text-align":"left"}},aV=t("code",null,"树",-1),cV=t("code",null,"广度优先搜索",-1),hV=t("code",null,"二叉树",-1),uV={style:{"text-align":"left"}},fV=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - II",-1),gV={style:{"text-align":"left"}},mV={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},yV={style:{"text-align":"center"}},xV={href:"/problem/jz_offer_32_2",target:"_blank",rel:"noopener noreferrer"},bV={style:{"text-align":"left"}},pV=t("code",null,"树",-1),kV=t("code",null,"广度优先搜索",-1),MV=t("code",null,"二叉树",-1),IV={style:{"text-align":"left"}},vV=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - III",-1),HV={style:{"text-align":"left"}},wV={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},zV={style:{"text-align":"center"}},EV={href:"/problem/jz_offer_32_3",target:"_blank",rel:"noopener noreferrer"},OV={style:{"text-align":"left"}},LV=t("code",null,"树",-1),CV=t("code",null,"广度优先搜索",-1),jV=t("code",null,"二叉树",-1),PV={style:{"text-align":"left"}},qV=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),NV={style:{"text-align":"left"}},VV={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},KV={style:{"text-align":"center"}},TV={href:"/problem/jz_offer_37_1",target:"_blank",rel:"noopener noreferrer"},AV={style:{"text-align":"left"}},BV=t("code",null,"树",-1),DV=t("code",null,"深度优先搜索",-1),JV=t("code",null,"广度优先搜索",-1),UV=t("code",null,"3+",-1),WV={style:{"text-align":"left"}},XV=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),YV={style:{"text-align":"left"}},ZV={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},FV={style:{"text-align":"center"}},QV={href:"/problem/jz_offer_55_1",target:"_blank",rel:"noopener noreferrer"},RV={style:{"text-align":"left"}},SV=t("code",null,"树",-1),GV=t("code",null,"深度优先搜索",-1),$V=t("code",null,"广度优先搜索",-1),tK=t("code",null,"1+",-1),eK={style:{"text-align":"left"}},lK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 103",-1),oK={style:{"text-align":"left"}},nK={href:"https://leetcode.cn/problems/gaM7Ch",target:"_blank",rel:"noopener noreferrer"},sK=t("td",{style:{"text-align":"center"}},null,-1),dK={style:{"text-align":"left"}},_K=t("code",null,"广度优先搜索",-1),iK=t("code",null,"数组",-1),rK=t("code",null,"动态规划",-1),aK={style:{"text-align":"left"}},cK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 105",-1),hK={style:{"text-align":"left"}},uK={href:"https://leetcode.cn/problems/ZL6zAn",target:"_blank",rel:"noopener noreferrer"},fK=t("td",{style:{"text-align":"center"}},null,-1),gK={style:{"text-align":"left"}},mK=t("code",null,"深度优先搜索",-1),yK=t("code",null,"广度优先搜索",-1),xK=t("code",null,"并查集",-1),bK=t("code",null,"2+",-1),pK={style:{"text-align":"left"}},kK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),MK={style:{"text-align":"left"}},IK={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},vK=t("td",{style:{"text-align":"center"}},null,-1),HK={style:{"text-align":"left"}},wK=t("code",null,"深度优先搜索",-1),zK=t("code",null,"广度优先搜索",-1),EK=t("code",null,"并查集",-1),OK=t("code",null,"1+",-1),LK={style:{"text-align":"left"}},CK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 107",-1),jK={style:{"text-align":"left"}},PK={href:"https://leetcode.cn/problems/2bCMpM",target:"_blank",rel:"noopener noreferrer"},qK=t("td",{style:{"text-align":"center"}},null,-1),NK={style:{"text-align":"left"}},VK=t("code",null,"广度优先搜索",-1),KK=t("code",null,"数组",-1),TK=t("code",null,"动态规划",-1),AK=t("code",null,"1+",-1),BK={style:{"text-align":"left"}},DK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 108",-1),JK={style:{"text-align":"left"}},UK={href:"https://leetcode.cn/problems/om3reC",target:"_blank",rel:"noopener noreferrer"},WK=t("td",{style:{"text-align":"center"}},null,-1),XK={style:{"text-align":"left"}},YK=t("code",null,"广度优先搜索",-1),ZK=t("code",null,"哈希表",-1),FK=t("code",null,"字符串",-1),QK={style:{"text-align":"left"}},RK=t("td",{style:{"text-align":"center"}},"剑指 Offer II 109",-1),SK={style:{"text-align":"left"}},GK={href:"https://leetcode.cn/problems/zlDJc7",target:"_blank",rel:"noopener noreferrer"},$K=t("td",{style:{"text-align":"center"}},null,-1),tT={style:{"text-align":"left"}},eT=t("code",null,"广度优先搜索",-1),lT=t("code",null,"数组",-1),oT=t("code",null,"哈希表",-1),nT=t("code",null,"1+",-1),sT={style:{"text-align":"left"}},dT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),_T={style:{"text-align":"left"}},iT={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},rT=t("td",{style:{"text-align":"center"}},null,-1),aT={style:{"text-align":"left"}},cT=t("code",null,"深度优先搜索",-1),hT=t("code",null,"广度优先搜索",-1),uT=t("code",null,"图",-1),fT=t("code",null,"1+",-1),gT={style:{"text-align":"left"}},mT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),yT={style:{"text-align":"left"}},xT={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},bT=t("td",{style:{"text-align":"center"}},null,-1),pT={style:{"text-align":"left"}},kT=t("code",null,"深度优先搜索",-1),MT=t("code",null,"广度优先搜索",-1),IT=t("code",null,"并查集",-1),vT=t("code",null,"3+",-1),HT={style:{"text-align":"left"}},wT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),zT={style:{"text-align":"left"}},ET={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},OT=t("td",{style:{"text-align":"center"}},null,-1),LT={style:{"text-align":"left"}},CT=t("code",null,"深度优先搜索",-1),jT=t("code",null,"广度优先搜索",-1),PT=t("code",null,"图",-1),qT=t("code",null,"5+",-1),NT={style:{"text-align":"left"}},VT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),KT={style:{"text-align":"left"}},TT={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},AT=t("td",{style:{"text-align":"center"}},null,-1),BT={style:{"text-align":"left"}},DT=t("code",null,"深度优先搜索",-1),JT=t("code",null,"广度优先搜索",-1),UT=t("code",null,"图",-1),WT=t("code",null,"1+",-1),XT={style:{"text-align":"left"}},YT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),ZT={style:{"text-align":"left"}},FT={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},QT=t("td",{style:{"text-align":"center"}},null,-1),RT={style:{"text-align":"left"}},ST=t("code",null,"深度优先搜索",-1),GT=t("code",null,"广度优先搜索",-1),$T=t("code",null,"图",-1),tA=t("code",null,"3+",-1),eA={style:{"text-align":"left"}},lA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),oA={style:{"text-align":"left"}},nA={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},sA=t("td",{style:{"text-align":"center"}},null,-1),dA={style:{"text-align":"left"}},_A=t("code",null,"深度优先搜索",-1),iA=t("code",null,"广度优先搜索",-1),rA=t("code",null,"并查集",-1),aA=t("code",null,"1+",-1),cA={style:{"text-align":"left"}},hA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 117",-1),uA={style:{"text-align":"left"}},fA={href:"https://leetcode.cn/problems/H6lPxb",target:"_blank",rel:"noopener noreferrer"},gA=t("td",{style:{"text-align":"center"}},null,-1),mA={style:{"text-align":"left"}},yA=t("code",null,"深度优先搜索",-1),xA=t("code",null,"广度优先搜索",-1),bA=t("code",null,"并查集",-1),pA=t("code",null,"3+",-1),kA={style:{"text-align":"left"}},MA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),IA={style:{"text-align":"left"}},vA={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},HA=t("td",{style:{"text-align":"center"}},null,-1),wA={style:{"text-align":"left"}},zA=t("code",null,"深度优先搜索",-1),EA=t("code",null,"广度优先搜索",-1),OA=t("code",null,"并查集",-1),LA=t("code",null,"1+",-1),CA={style:{"text-align":"left"}},jA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),PA={style:{"text-align":"left"}},qA={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},NA=t("td",{style:{"text-align":"center"}},null,-1),VA={style:{"text-align":"left"}},KA=t("code",null,"树",-1),TA=t("code",null,"广度优先搜索",-1),AA=t("code",null,"设计",-1),BA=t("code",null,"1+",-1),DA={style:{"text-align":"left"}},JA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),UA={style:{"text-align":"left"}},WA={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},XA=t("td",{style:{"text-align":"center"}},null,-1),YA={style:{"text-align":"left"}},ZA=t("code",null,"树",-1),FA=t("code",null,"深度优先搜索",-1),QA=t("code",null,"广度优先搜索",-1),RA=t("code",null,"1+",-1),SA={style:{"text-align":"left"}},GA=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),$A={style:{"text-align":"left"}},tB={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},eB=t("td",{style:{"text-align":"center"}},null,-1),lB={style:{"text-align":"left"}},oB=t("code",null,"树",-1),nB=t("code",null,"深度优先搜索",-1),sB=t("code",null,"广度优先搜索",-1),dB=t("code",null,"1+",-1),_B={style:{"text-align":"left"}},iB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),rB={style:{"text-align":"left"}},aB={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},cB=t("td",{style:{"text-align":"center"}},null,-1),hB={style:{"text-align":"left"}},uB=t("code",null,"树",-1),fB=t("code",null,"深度优先搜索",-1),gB=t("code",null,"广度优先搜索",-1),mB=t("code",null,"1+",-1),yB={style:{"text-align":"left"}},xB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),bB={style:{"text-align":"left"}},pB={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},kB=t("td",{style:{"text-align":"center"}},null,-1),MB={style:{"text-align":"left"}},IB=t("code",null,"树",-1),vB=t("code",null,"深度优先搜索",-1),HB=t("code",null,"广度优先搜索",-1),wB=t("code",null,"3+",-1),zB={style:{"text-align":"left"}},EB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),OB={style:{"text-align":"left"}},LB={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},CB=t("td",{style:{"text-align":"center"}},null,-1),jB={style:{"text-align":"left"}},PB=t("code",null,"深度优先搜索",-1),qB=t("code",null,"广度优先搜索",-1),NB=t("code",null,"图",-1),VB=t("code",null,"1+",-1),KB={style:{"text-align":"left"}},TB=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),AB={style:{"text-align":"left"}},BB={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},DB=t("td",{style:{"text-align":"center"}},null,-1),JB={style:{"text-align":"left"}},UB=t("code",null,"深度优先搜索",-1),WB=t("code",null,"广度优先搜索",-1),XB=t("code",null,"图",-1),YB={style:{"text-align":"left"}},ZB=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),FB={style:{"text-align":"left"}},QB={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},RB=t("td",{style:{"text-align":"center"}},null,-1),SB={style:{"text-align":"left"}},GB=t("code",null,"树",-1),$B=t("code",null,"广度优先搜索",-1),tD=t("code",null,"链表",-1),eD=t("code",null,"1+",-1),lD={style:{"text-align":"left"}},oD=t("td",{style:{"text-align":"center"}},"面试题 08.10",-1),nD={style:{"text-align":"left"}},sD={href:"https://leetcode.cn/problems/color-fill-lcci",target:"_blank",rel:"noopener noreferrer"},dD=t("td",{style:{"text-align":"center"}},null,-1),_D={style:{"text-align":"left"}},iD=t("code",null,"深度优先搜索",-1),rD=t("code",null,"广度优先搜索",-1),aD=t("code",null,"数组",-1),cD=t("code",null,"1+",-1),hD={style:{"text-align":"left"}},uD=t("td",{style:{"text-align":"center"}},"面试题 16.19",-1),fD={style:{"text-align":"left"}},gD={href:"https://leetcode.cn/problems/pond-sizes-lcci",target:"_blank",rel:"noopener noreferrer"},mD=t("td",{style:{"text-align":"center"}},null,-1),yD={style:{"text-align":"left"}},xD=t("code",null,"深度优先搜索",-1),bD=t("code",null,"广度优先搜索",-1),pD=t("code",null,"并查集",-1),kD=t("code",null,"2+",-1),MD={style:{"text-align":"left"}},ID=t("td",{style:{"text-align":"center"}},"面试题 17.07",-1),vD={style:{"text-align":"left"}},HD={href:"https://leetcode.cn/problems/baby-names-lcci",target:"_blank",rel:"noopener noreferrer"},wD=t("td",{style:{"text-align":"center"}},null,-1),zD={style:{"text-align":"left"}},ED=t("code",null,"深度优先搜索",-1),OD=t("code",null,"广度优先搜索",-1),LD=t("code",null,"并查集",-1),CD=t("code",null,"4+",-1),jD={style:{"text-align":"left"}},PD=t("td",{style:{"text-align":"center"}},"面试题 17.22",-1),qD={style:{"text-align":"left"}},ND={href:"https://leetcode.cn/problems/word-transformer-lcci",target:"_blank",rel:"noopener noreferrer"},VD=t("td",{style:{"text-align":"center"}},null,-1),KD={style:{"text-align":"left"}},TD=t("code",null,"广度优先搜索",-1),AD=t("code",null,"哈希表",-1),BD=t("code",null,"字符串",-1),DD=t("code",null,"1+",-1),JD={style:{"text-align":"left"}};function UD(WD,XD){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return r(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[W]),_:1})]),X,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),_t,l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[Pt]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[qt]),_:1})])]),Nt,c(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Kt,t("td",Tt,[t("a",At,[l("相同的树"),e(s)])]),t("td",Bt,[t("a",Dt,[l("[✓]"),e(s)])]),t("td",Jt,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ut]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Wt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Xt]),_:1}),l(),Yt]),t("td",Zt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ft,t("td",Qt,[t("a",Rt,[l("对称二叉树"),e(s)])]),t("td",St,[t("a",Gt,[l("[✓]"),e(s)])]),t("td",$t,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ee]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[le]),_:1}),l(),oe]),t("td",ne,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[se,t("td",de,[t("a",_e,[l("二叉树的层序遍历"),e(s)])]),t("td",ie,[t("a",re,[l("[✓]"),e(s)])]),t("td",ae,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[he]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ue]),_:1})]),t("td",fe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ge,t("td",me,[t("a",ye,[l("二叉树的锯齿形层序遍历"),e(s)])]),t("td",xe,[t("a",be,[l("[✓]"),e(s)])]),t("td",pe,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ke]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Me]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Ie]),_:1})]),t("td",ve,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[He,t("td",we,[t("a",ze,[l("二叉树的最大深度"),e(s)])]),t("td",Ee,[t("a",Oe,[l("[✓]"),e(s)])]),t("td",Le,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[je]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Pe]),_:1}),l(),qe]),t("td",Ne,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ve,t("td",Ke,[t("a",Te,[l("二叉树的层序遍历 II"),e(s)])]),t("td",Ae,[t("a",Be,[l("[✓]"),e(s)])]),t("td",De,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Je]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ue]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[We]),_:1})]),t("td",Xe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ye,t("td",Ze,[t("a",Fe,[l("二叉树的最小深度"),e(s)])]),t("td",Qe,[t("a",Re,[l("[✓]"),e(s)])]),t("td",Se,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ge]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$e]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tl]),_:1}),l(),el]),t("td",ll,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ol,t("td",nl,[t("a",sl,[l("路径总和"),e(s)])]),t("td",dl,[t("a",_l,[l("[✓]"),e(s)])]),t("td",il,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[rl]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[al]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cl]),_:1}),l(),hl]),t("td",ul,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fl,t("td",gl,[t("a",ml,[l("填充每个节点的下一个右侧节点指针"),e(s)])]),t("td",yl,[t("a",xl,[l("[✓]"),e(s)])]),t("td",bl,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[pl]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ml]),_:1}),l(),Il]),t("td",vl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hl,t("td",wl,[t("a",zl,[l("填充每个节点的下一个右侧节点指针 II"),e(s)])]),t("td",El,[t("a",Ol,[l("[✓]"),e(s)])]),t("td",Ll,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Pl]),_:1}),l(),ql]),t("td",Nl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vl,t("td",Kl,[t("a",Tl,[l("单词接龙 II"),e(s)])]),Al,t("td",Bl,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Dl]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ul]),_:1}),l(),Wl]),t("td",Xl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yl,t("td",Zl,[t("a",Fl,[l("单词接龙"),e(s)])]),t("td",Ql,[t("a",Rl,[l("[✓]"),e(s)])]),t("td",Sl,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Gl]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[to]),_:1})]),t("td",eo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",no,[l("被围绕的区域"),e(s)])]),t("td",so,[t("a",_o,[l("[✓]"),e(s)])]),t("td",io,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ro]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[co]),_:1}),l(),ho]),t("td",uo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fo,t("td",go,[t("a",mo,[l("克隆图"),e(s)])]),t("td",yo,[t("a",xo,[l("[✓]"),e(s)])]),t("td",bo,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[po]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ko]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Mo]),_:1}),l(),Io]),t("td",vo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ho,t("td",wo,[t("a",zo,[l("二叉树的右视图"),e(s)])]),t("td",Eo,[t("a",Oo,[l("[✓]"),e(s)])]),t("td",Lo,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Co]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Po]),_:1}),l(),qo]),t("td",No,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vo,t("td",Ko,[t("a",To,[l("岛屿数量"),e(s)])]),t("td",Ao,[t("a",Bo,[l("[✓]"),e(s)])]),t("td",Do,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Uo]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Wo]),_:1}),l(),Xo]),t("td",Yo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zo,t("td",Fo,[t("a",Qo,[l("课程表"),e(s)])]),t("td",Ro,[t("a",So,[l("[✓]"),e(s)])]),t("td",Go,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$o]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tn]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[en]),_:1}),l(),ln]),t("td",on,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nn,t("td",sn,[t("a",dn,[l("课程表 II"),e(s)])]),t("td",_n,[t("a",rn,[l("[✓]"),e(s)])]),t("td",an,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hn]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[un]),_:1}),l(),fn]),t("td",gn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mn,t("td",yn,[t("a",xn,[l("翻转二叉树"),e(s)])]),t("td",bn,[t("a",pn,[l("[✓]"),e(s)])]),t("td",kn,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Mn]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[In]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[vn]),_:1}),l(),Hn]),t("td",wn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zn,t("td",En,[t("a",On,[l("以图判树"),e(s)])]),Ln,t("td",Cn,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Pn]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[qn]),_:1}),l(),Nn]),t("td",Vn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kn,t("td",Tn,[t("a",An,[l("火星词典"),e(s)])]),Bn,t("td",Dn,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Un]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Wn]),_:1}),l(),Xn]),t("td",Yn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zn,t("td",Fn,[t("a",Qn,[l("完全平方数"),e(s)])]),t("td",Rn,[t("a",Sn,[l("[✓]"),e(s)])]),t("td",Gn,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$n]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[ts]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[es]),_:1})]),t("td",ls,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[os,t("td",ns,[t("a",ss,[l("墙与门"),e(s)])]),ds,t("td",_s,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[is]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[as]),_:1})]),t("td",cs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hs,t("td",us,[t("a",fs,[l("二叉树的序列化与反序列化"),e(s)])]),t("td",gs,[t("a",ms,[l("[✓]"),e(s)])]),t("td",ys,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[xs]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ps]),_:1}),l(),ks]),t("td",Ms,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Is,t("td",vs,[t("a",Hs,[l("删除无效的括号"),e(s)])]),ws,t("td",zs,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Es]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Os]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Ls]),_:1})]),t("td",Cs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[js,t("td",Ps,[t("a",qs,[l("包含全部黑色像素的最小矩形"),e(s)])]),Ns,t("td",Vs,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ks]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ts]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[As]),_:1}),l(),Bs]),t("td",Ds,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Js,t("td",Us,[t("a",Ws,[l("最小高度树"),e(s)])]),Xs,t("td",Ys,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Fs]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Qs]),_:1}),l(),Rs]),t("td",Ss,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gs,t("td",$s,[t("a",td,[l("二叉树的垂直遍历"),e(s)])]),ed,t("td",ld,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[od]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sd]),_:1}),l(),dd]),t("td",_d,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[id,t("td",rd,[t("a",ad,[l("离建筑物最近的距离"),e(s)])]),cd,t("td",hd,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ud]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[gd]),_:1})]),t("td",md,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yd,t("td",xd,[t("a",bd,[l("零钱兑换"),e(s)])]),t("td",pd,[t("a",kd,[l("[✓]"),e(s)])]),t("td",Md,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Id]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vd]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Hd]),_:1})]),t("td",wd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zd,t("td",Ed,[t("a",Od,[l("无向图中连通分量的数目"),e(s)])]),Ld,t("td",Cd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jd]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[qd]),_:1}),l(),Nd]),t("td",Vd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kd,t("td",Td,[t("a",Ad,[l("矩阵中的最长递增路径"),e(s)])]),Bd,t("td",Dd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ud]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Wd]),_:1}),l(),Xd]),t("td",Yd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zd,t("td",Fd,[t("a",Qd,[l("嵌套列表加权和"),e(s)])]),Rd,t("td",Sd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Gd]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$d]),_:1})]),t("td",t_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e_,t("td",l_,[t("a",o_,[l("嵌套列表加权和 II"),e(s)])]),n_,t("td",s_,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[d_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[__]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[i_]),_:1})]),t("td",r_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a_,t("td",c_,[t("a",h_,[l("水壶问题"),e(s)])]),u_,t("td",f_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[g_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[m_]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[y_]),_:1})]),t("td",x_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b_,t("td",p_,[t("a",k_,[l("除法求值"),e(s)])]),t("td",M_,[t("a",I_,[l("[✓]"),e(s)])]),t("td",v_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[H_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[w_]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[z_]),_:1}),l(),E_]),t("td",O_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L_,t("td",C_,[t("a",j_,[l("左叶子之和"),e(s)])]),P_,t("td",q_,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[N_]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[V_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[K_]),_:1}),l(),T_]),t("td",A_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[B_,t("td",D_,[t("a",J_,[l("接雨水 II"),e(s)])]),U_,t("td",W_,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Y_]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Z_]),_:1}),l(),F_]),t("td",Q_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R_,t("td",S_,[t("a",G_,[l("太平洋大西洋水流问题"),e(s)])]),$_,t("td",ti,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ei]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[li]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oi]),_:1}),l(),ni]),t("td",si,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[di,t("td",_i,[t("a",ii,[l("序列化和反序列化 N 叉树"),e(s)])]),ri,t("td",ai,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ci]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[hi]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ui]),_:1}),l(),fi]),t("td",gi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mi,t("td",yi,[t("a",xi,[l("N 叉树的层序遍历"),e(s)])]),bi,t("td",pi,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ki]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Mi]),_:1})]),t("td",Ii,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vi,t("td",Hi,[t("a",wi,[l("将 N 叉树编码为二叉树"),e(s)])]),zi,t("td",Ei,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Li]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ci]),_:1}),l(),ji]),t("td",Pi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qi,t("td",Ni,[t("a",Vi,[l("最小基因变化"),e(s)])]),t("td",Ki,[t("a",Ti,[l("[✓]"),e(s)])]),t("td",Ai,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Bi]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Di]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ji]),_:1})]),t("td",Ui,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wi,t("td",Xi,[t("a",Yi,[l("序列化和反序列化二叉搜索树"),e(s)])]),Zi,t("td",Fi,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qi]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ri]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Si]),_:1}),l(),Gi]),t("td",$i,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tr,t("td",er,[t("a",lr,[l("岛屿的周长"),e(s)])]),or,t("td",nr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[sr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[dr]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_r]),_:1}),l(),ir]),t("td",rr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ar,t("td",cr,[t("a",hr,[l("祖玛游戏"),e(s)])]),ur,t("td",fr,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[gr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[mr]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[yr]),_:1}),l(),xr]),t("td",br,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pr,t("td",kr,[t("a",Mr,[l("迷宫"),e(s)])]),Ir,t("td",vr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Hr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[wr]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zr]),_:1}),l(),Er]),t("td",Or,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lr,t("td",Cr,[t("a",jr,[l("迷宫 III"),e(s)])]),Pr,t("td",qr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Nr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Vr]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Kr]),_:1}),l(),Tr]),t("td",Ar,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Br,t("td",Dr,[t("a",Jr,[l("迷宫 II"),e(s)])]),Ur,t("td",Wr,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xr]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Yr]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Zr]),_:1}),l(),Fr]),t("td",Qr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rr,t("td",Sr,[t("a",Gr,[l("找树左下角的值"),e(s)])]),$r,t("td",ta,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ea]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[la]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[oa]),_:1}),l(),na]),t("td",sa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[da,t("td",_a,[t("a",ia,[l("自由之路"),e(s)])]),t("td",ra,[t("a",aa,[l("[✓]"),e(s)])]),t("td",ca,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ha]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ua]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[fa]),_:1}),l(),ga]),t("td",ma,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ya,t("td",xa,[t("a",ba,[l("在每个树行中找最大值"),e(s)])]),pa,t("td",ka,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ma]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ia]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[va]),_:1}),l(),Ha]),t("td",wa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[za,t("td",Ea,[t("a",Oa,[l("扫雷游戏"),e(s)])]),La,t("td",Ca,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ja]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Pa]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qa]),_:1}),l(),Na]),t("td",Va,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ka,t("td",Ta,[t("a",Aa,[l("二叉搜索树的最小绝对差"),e(s)])]),t("td",Ba,[t("a",Da,[l("[✓]"),e(s)])]),t("td",Ja,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ua]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Wa]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Xa]),_:1}),l(),Ya]),t("td",Za,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fa,t("td",Qa,[t("a",Ra,[l("01 矩阵"),e(s)])]),Sa,t("td",Ga,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$a]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[tc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[ec]),_:1}),l(),lc]),t("td",oc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nc,t("td",sc,[t("a",dc,[l("省份数量"),e(s)])]),_c,t("td",ic,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ac]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[cc]),_:1}),l(),hc]),t("td",uc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fc,t("td",gc,[t("a",mc,[l("N 叉树的最大深度"),e(s)])]),t("td",yc,[t("a",xc,[l("[✓]"),e(s)])]),t("td",bc,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[pc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Mc]),_:1})]),t("td",Ic,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vc,t("td",Hc,[t("a",wc,[l("杀掉进程"),e(s)])]),zc,t("td",Ec,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Oc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Lc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Cc]),_:1}),l(),jc]),t("td",Pc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qc,t("td",Nc,[t("a",Vc,[l("合并二叉树"),e(s)])]),t("td",Kc,[t("a",Tc,[l("[✓]"),e(s)])]),t("td",Ac,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Bc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Dc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Jc]),_:1}),l(),Uc]),t("td",Wc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xc,t("td",Yc,[t("a",Zc,[l("在二叉树中增加一行"),e(s)])]),Fc,t("td",Qc,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Rc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Sc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Gc]),_:1}),l(),$c]),t("td",th,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eh,t("td",lh,[t("a",oh,[l("二叉树的层平均值"),e(s)])]),t("td",nh,[t("a",sh,[l("[✓]"),e(s)])]),t("td",dh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[_h]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ih]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[rh]),_:1}),l(),ah]),t("td",ch,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[hh,t("td",uh,[t("a",fh,[l("两数之和 IV - 输入二叉搜索树"),e(s)])]),gh,t("td",mh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[yh]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xh]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bh]),_:1}),l(),ph]),t("td",kh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mh,t("td",Ih,[t("a",vh,[l("输出二叉树"),e(s)])]),Hh,t("td",wh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[zh]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Eh]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Oh]),_:1}),l(),Lh]),t("td",Ch,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jh,t("td",Ph,[t("a",qh,[l("二叉树最大宽度"),e(s)])]),t("td",Nh,[t("a",Vh,[l("[✓]"),e(s)])]),t("td",Kh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Th]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ah]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Bh]),_:1}),l(),Dh]),t("td",Jh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uh,t("td",Wh,[t("a",Xh,[l("灯泡开关 Ⅱ"),e(s)])]),Yh,t("td",Zh,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Fh]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Qh]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Rh]),_:1}),l(),Sh]),t("td",Gh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$h,t("td",t1,[t("a",e1,[l("为高尔夫比赛砍树"),e(s)])]),l1,t("td",o1,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[n1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[s1]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[d1]),_:1}),l(),_1]),t("td",i1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[r1,t("td",a1,[t("a",c1,[l("冗余连接"),e(s)])]),h1,t("td",u1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[f1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[g1]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[m1]),_:1}),l(),y1]),t("td",x1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b1,t("td",p1,[t("a",k1,[l("冗余连接 II"),e(s)])]),M1,t("td",I1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[v1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[H1]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[w1]),_:1}),l(),z1]),t("td",E1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[O1,t("td",L1,[t("a",C1,[l("员工的重要性"),e(s)])]),j1,t("td",P1,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[q1]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[N1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[V1]),_:1}),l(),K1]),t("td",T1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A1,t("td",B1,[t("a",D1,[l("不同岛屿的数量"),e(s)])]),J1,t("td",U1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[W1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X1]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Y1]),_:1}),l(),Z1]),t("td",F1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q1,t("td",R1,[t("a",S1,[l("岛屿的最大面积"),e(s)])]),t("td",G1,[t("a",$1,[l("[✓]"),e(s)])]),t("td",tu,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[eu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[lu]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ou]),_:1}),l(),nu]),t("td",su,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[du,t("td",_u,[t("a",iu,[l("不同岛屿的数量 II"),e(s)])]),ru,t("td",au,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hu]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[uu]),_:1}),l(),fu]),t("td",gu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mu,t("td",yu,[t("a",xu,[l("账户合并"),e(s)])]),bu,t("td",pu,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ku]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Mu]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Iu]),_:1}),l(),vu]),t("td",Hu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wu,t("td",zu,[t("a",Eu,[l("图像渲染"),e(s)])]),Ou,t("td",Lu,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Cu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ju]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pu]),_:1}),l(),qu]),t("td",Nu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Vu,t("td",Ku,[t("a",Tu,[l("句子相似性 II"),e(s)])]),Au,t("td",Bu,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Du]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ju]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Uu]),_:1}),l(),Wu]),t("td",Xu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yu,t("td",Zu,[t("a",Fu,[l("二叉树最近的叶节点"),e(s)])]),Qu,t("td",Ru,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Su]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Gu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$u]),_:1}),l(),tf]),t("td",ef,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lf,t("td",of,[t("a",nf,[l("网络延迟时间"),e(s)])]),sf,t("td",df,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_f]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[rf]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[af]),_:1}),l(),cf]),t("td",hf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uf,t("td",ff,[t("a",gf,[l("隔离病毒"),e(s)])]),mf,t("td",yf,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xf]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pf]),_:1}),l(),kf]),t("td",Mf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[If,t("td",vf,[t("a",Hf,[l("打开转盘锁"),e(s)])]),wf,t("td",zf,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ef]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Of]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Lf]),_:1}),l(),Cf]),t("td",jf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pf,t("td",qf,[t("a",Nf,[l("金字塔转换矩阵"),e(s)])]),Vf,t("td",Kf,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Tf]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Af]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Bf]),_:1})]),t("td",Df,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jf,t("td",Uf,[t("a",Wf,[l("情侣牵手"),e(s)])]),Xf,t("td",Yf,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Zf]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ff]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Qf]),_:1}),l(),Rf]),t("td",Sf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gf,t("td",$f,[t("a",tg,[l("滑动谜题"),e(s)])]),eg,t("td",lg,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[og]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ng]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[sg]),_:1})]),t("td",dg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_g,t("td",ig,[t("a",rg,[l("水位上升的泳池中游泳"),e(s)])]),ag,t("td",cg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[hg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ug]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[fg]),_:1}),l(),gg]),t("td",mg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yg,t("td",xg,[t("a",bg,[l("二叉搜索树节点最小距离"),e(s)])]),t("td",pg,[t("a",kg,[l("[✓]"),e(s)])]),t("td",Mg,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ig]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Hg]),_:1}),l(),wg]),t("td",zg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Eg,t("td",Og,[t("a",Lg,[l("判断二分图"),e(s)])]),Cg,t("td",jg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Pg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[qg]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ng]),_:1}),l(),Vg]),t("td",Kg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tg,t("td",Ag,[t("a",Bg,[l("K 站中转内最便宜的航班"),e(s)])]),Dg,t("td",Jg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ug]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Wg]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Xg]),_:1}),l(),Yg]),t("td",Zg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fg,t("td",Qg,[t("a",Rg,[l("所有可能的路径"),e(s)])]),Sg,t("td",Gg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$g]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tm]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[em]),_:1}),l(),lm]),t("td",om,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nm,t("td",sm,[t("a",dm,[l("找到最终的安全状态"),e(s)])]),_m,t("td",im,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rm]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[am]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[cm]),_:1}),l(),hm]),t("td",um,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fm,t("td",gm,[t("a",mm,[l("公交路线"),e(s)])]),ym,t("td",xm,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bm]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pm]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[km]),_:1})]),t("td",Mm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Im,t("td",vm,[t("a",Hm,[l("最大人工岛"),e(s)])]),wm,t("td",zm,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Em]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Om]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Lm]),_:1}),l(),Cm]),t("td",jm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pm,t("td",qm,[t("a",Nm,[l("相似字符串组"),e(s)])]),Vm,t("td",Km,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Tm]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Am]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Bm]),_:1}),l(),Dm]),t("td",Jm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Um,t("td",Wm,[t("a",Xm,[l("钥匙和房间"),e(s)])]),Ym,t("td",Zm,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Fm]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Qm]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Rm]),_:1})]),t("td",Sm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gm,t("td",$m,[t("a",t2,[l("访问所有节点的最短路径"),e(s)])]),e2,t("td",l2,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[o2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[n2]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[s2]),_:1}),l(),d2]),t("td",_2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i2,t("td",r2,[t("a",a2,[l("相似度为 K 的字符串"),e(s)])]),c2,t("td",h2,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[u2]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[f2]),_:1})]),t("td",g2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m2,t("td",y2,[t("a",x2,[l("二叉树中所有距离为 K 的结点"),e(s)])]),b2,t("td",p2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[k2]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[M2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[I2]),_:1}),l(),v2]),t("td",H2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w2,t("td",z2,[t("a",E2,[l("获取所有钥匙的最短路径"),e(s)])]),O2,t("td",L2,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[C2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[j2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[P2]),_:1}),l(),q2]),t("td",N2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V2,t("td",K2,[t("a",T2,[l("具有所有最深节点的最小子树"),e(s)])]),A2,t("td",B2,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[D2]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[J2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[U2]),_:1}),l(),W2]),t("td",X2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y2,t("td",Z2,[t("a",F2,[l("可能的二分法"),e(s)])]),Q2,t("td",R2,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[S2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[G2]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[$2]),_:1}),l(),ty]),t("td",ey,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ly,t("td",oy,[t("a",ny,[l("蛇梯棋"),e(s)])]),t("td",sy,[t("a",dy,[l("[✓]"),e(s)])]),t("td",_y,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[iy]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ry]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ay]),_:1})]),t("td",cy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hy,t("td",uy,[t("a",fy,[l("完全二叉树插入器"),e(s)])]),gy,t("td",my,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[yy]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xy]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[by]),_:1}),l(),py]),t("td",ky,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[My,t("td",Iy,[t("a",vy,[l("尽量减少恶意软件的传播"),e(s)])]),Hy,t("td",wy,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zy]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ey]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Oy]),_:1}),l(),Ly]),t("td",Cy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jy,t("td",Py,[t("a",qy,[l("尽量减少恶意软件的传播 II"),e(s)])]),Ny,t("td",Vy,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ky]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ty]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ay]),_:1}),l(),By]),t("td",Dy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jy,t("td",Uy,[t("a",Wy,[l("最短的桥"),e(s)])]),Xy,t("td",Yy,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Zy]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Fy]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qy]),_:1}),l(),Ry]),t("td",Sy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gy,t("td",$y,[t("a",tx,[l("二叉树的完全性检验"),e(s)])]),t("td",ex,[t("a",lx,[l("[✓]"),e(s)])]),t("td",ox,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[nx]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sx]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[dx]),_:1})]),t("td",_x,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ix,t("td",rx,[t("a",ax,[l("由斜杠划分区域"),e(s)])]),cx,t("td",hx,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ux]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[fx]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[gx]),_:1}),l(),mx]),t("td",yx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xx,t("td",bx,[t("a",px,[l("单值二叉树"),e(s)])]),kx,t("td",Mx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ix]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vx]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Hx]),_:1}),l(),wx]),t("td",zx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ex,t("td",Ox,[t("a",Lx,[l("连续差相同的数字"),e(s)])]),Cx,t("td",jx,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Px]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[qx]),_:1})]),t("td",Nx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vx,t("td",Kx,[t("a",Tx,[l("二叉树的垂序遍历"),e(s)])]),Ax,t("td",Bx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Dx]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jx]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ux]),_:1}),l(),Wx]),t("td",Xx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yx,t("td",Zx,[t("a",Fx,[l("二叉树的堂兄弟节点"),e(s)])]),Qx,t("td",Rx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Sx]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Gx]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$x]),_:1}),l(),tb]),t("td",eb,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[lb,t("td",ob,[t("a",nb,[l("腐烂的橘子"),e(s)])]),t("td",sb,[t("a",db,[l("[✓]"),e(s)])]),t("td",_b,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ib]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rb]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[ab]),_:1})]),t("td",cb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hb,t("td",ub,[t("a",fb,[l("飞地的数量"),e(s)])]),gb,t("td",mb,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xb]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[bb]),_:1}),l(),pb]),t("td",kb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mb,t("td",Ib,[t("a",vb,[l("边界着色"),e(s)])]),Hb,t("td",wb,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Eb]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ob]),_:1}),l(),Lb]),t("td",Cb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jb,t("td",Pb,[t("a",qb,[l("逃离大迷宫"),e(s)])]),Nb,t("td",Vb,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Kb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Tb]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ab]),_:1}),l(),Bb]),t("td",Db,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jb,t("td",Ub,[t("a",Wb,[l("不邻接植花"),e(s)])]),Xb,t("td",Yb,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Zb]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Fb]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Qb]),_:1})]),t("td",Rb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sb,t("td",Gb,[t("a",$b,[l("花括号展开"),e(s)])]),tp,t("td",ep,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[lp]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[op]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[np]),_:1})]),t("td",sp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dp,t("td",_p,[t("a",ip,[l("二进制矩阵中的最短路径"),e(s)])]),rp,t("td",ap,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cp]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[hp]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[up]),_:1})]),t("td",fp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gp,t("td",mp,[t("a",yp,[l("花括号展开 II"),e(s)])]),xp,t("td",bp,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[pp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kp]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Mp]),_:1}),l(),Ip]),t("td",vp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hp,t("td",wp,[t("a",zp,[l("得分最高的路径"),e(s)])]),Ep,t("td",Op,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Lp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Cp]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[jp]),_:1}),l(),Pp]),t("td",qp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Np,t("td",Vp,[t("a",Kp,[l("最深叶节点的最近公共祖先"),e(s)])]),Tp,t("td",Ap,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Bp]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Dp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Jp]),_:1}),l(),Up]),t("td",Wp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xp,t("td",Yp,[t("a",Zp,[l("颜色交替的最短路径"),e(s)])]),Fp,t("td",Qp,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Rp]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Sp]),_:1})]),t("td",Gp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$p,t("td",t0,[t("a",e0,[l("最大层内元素和"),e(s)])]),l0,t("td",o0,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[n0]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[s0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[d0]),_:1}),l(),_0]),t("td",i0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r0,t("td",a0,[t("a",c0,[l("地图分析"),e(s)])]),h0,t("td",u0,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[f0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[g0]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[m0]),_:1}),l(),y0]),t("td",x0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b0,t("td",p0,[t("a",k0,[l("进击的骑士"),e(s)])]),M0,t("td",I0,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[v0]),_:1})]),t("td",H0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w0,t("td",z0,[t("a",E0,[l("交换字符串中的元素"),e(s)])]),O0,t("td",L0,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[C0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[j0]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[P0]),_:1}),l(),q0]),t("td",N0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V0,t("td",K0,[t("a",T0,[l("项目管理"),e(s)])]),A0,t("td",B0,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[D0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[J0]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[U0]),_:1}),l(),W0]),t("td",X0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y0,t("td",Z0,[t("a",F0,[l("穿过迷宫的最少移动次数"),e(s)])]),Q0,t("td",R0,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[S0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[G0]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[$0]),_:1})]),t("td",t3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e3,t("td",l3,[t("a",o3,[l("步进数"),e(s)])]),n3,t("td",s3,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[d3]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[_3]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[i3]),_:1})]),t("td",r3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a3,t("td",c3,[t("a",h3,[l("网络爬虫"),e(s)])]),u3,t("td",f3,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[g3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[m3]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[y3]),_:1}),l(),x3]),t("td",b3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p3,t("td",k3,[t("a",M3,[l("多线程网页爬虫"),e(s)])]),I3,t("td",v3,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[H3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[w3]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[z3]),_:1})]),t("td",E3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O3,t("td",L3,[t("a",C3,[l("树的直径"),e(s)])]),j3,t("td",P3,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[q3]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[N3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[V3]),_:1}),l(),K3]),t("td",T3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A3,t("td",B3,[t("a",D3,[l("统计封闭岛屿的数目"),e(s)])]),J3,t("td",U3,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[W3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X3]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Y3]),_:1}),l(),Z3]),t("td",F3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q3,t("td",R3,[t("a",S3,[l("最小公共区域"),e(s)])]),G3,t("td",$3,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[t4]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[e4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[l4]),_:1}),l(),o4]),t("td",n4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s4,t("td",d4,[t("a",_4,[l("在受污染的二叉树中查找元素"),e(s)])]),i4,t("td",r4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[a4]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[c4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[h4]),_:1}),l(),u4]),t("td",f4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g4,t("td",m4,[t("a",y4,[l("推箱子"),e(s)])]),x4,t("td",b4,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[p4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k4]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[M4]),_:1}),l(),I4]),t("td",v4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H4,t("td",w4,[t("a",z4,[l("统计参与通信的服务器"),e(s)])]),E4,t("td",O4,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[L4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[C4]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[j4]),_:1}),l(),P4]),t("td",q4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N4,t("td",V4,[t("a",K4,[l("删除树节点"),e(s)])]),T4,t("td",A4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[B4]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[D4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[J4]),_:1}),l(),U4]),t("td",W4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X4,t("td",Y4,[t("a",Z4,[l("转化为全零矩阵的最少反转次数"),e(s)])]),F4,t("td",Q4,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[R4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[S4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[G4]),_:1}),l(),$4]),t("td",t8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e8,t("td",l8,[t("a",o8,[l("网格中的最短路径"),e(s)])]),n8,t("td",s8,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[d8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_8]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[i8]),_:1})]),t("td",r8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[a8,t("td",c8,[t("a",h8,[l("你能从盒子里获得的最大糖果数"),e(s)])]),u8,t("td",f8,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[g8]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[m8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y8]),_:1})]),t("td",x8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b8,t("td",p8,[t("a",k8,[l("层数最深叶子节点的和"),e(s)])]),M8,t("td",I8,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[v8]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[H8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[w8]),_:1}),l(),z8]),t("td",E8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O8,t("td",L8,[t("a",C8,[l("跳跃游戏 III"),e(s)])]),j8,t("td",P8,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[q8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[N8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[V8]),_:1})]),t("td",K8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T8,t("td",A8,[t("a",B8,[l("获取你好友已观看的视频"),e(s)])]),D8,t("td",J8,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[U8]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[W8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[X8]),_:1}),l(),Y8]),t("td",Z8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F8,t("td",Q8,[t("a",R8,[l("祖父节点值为偶数的节点和"),e(s)])]),S8,t("td",G8,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$8]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[t6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[e6]),_:1}),l(),l6]),t("td",o6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n6,t("td",s6,[t("a",d6,[l("连通网络的操作次数"),e(s)])]),_6,t("td",i6,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[r6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[a6]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[c6]),_:1}),l(),h6]),t("td",u6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f6,t("td",g6,[t("a",m6,[l("跳跃游戏 IV"),e(s)])]),y6,t("td",x6,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[b6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[p6]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[k6]),_:1})]),t("td",M6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[I6,t("td",v6,[t("a",H6,[l("验证二叉树"),e(s)])]),w6,t("td",z6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[E6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[O6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[L6]),_:1}),l(),C6]),t("td",j6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P6,t("td",q6,[t("a",N6,[l("使网格图至少有一条有效路径的最小代价"),e(s)])]),V6,t("td",K6,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[T6]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[A6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[B6]),_:1}),l(),D6]),t("td",J6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U6,t("td",W6,[t("a",X6,[l("通知所有员工所需的时间"),e(s)])]),Y6,t("td",Z6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[F6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Q6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[R6]),_:1})]),t("td",S6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G6,t("td",$6,[t("a",t5,[l("T 秒后青蛙的位置"),e(s)])]),e5,t("td",l5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[o5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[n5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[s5]),_:1}),l(),d5]),t("td",_5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i5,t("td",r5,[t("a",a5,[l("找出克隆二叉树中的相同节点"),e(s)])]),c5,t("td",h5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[u5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[f5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[g5]),_:1}),l(),m5]),t("td",y5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[x5,t("td",b5,[t("a",p5,[l("检查网格中是否存在有效路径"),e(s)])]),k5,t("td",M5,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[I5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[v5]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[H5]),_:1}),l(),w5]),t("td",z5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E5,t("td",O5,[t("a",L5,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(s)])]),C5,t("td",j5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[P5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[q5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[N5]),_:1}),l(),V5]),t("td",K5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T5,t("td",A5,[t("a",B5,[l("收集树上所有苹果的最少时间"),e(s)])]),D5,t("td",J5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[U5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[W5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X5]),_:1}),l(),Y5]),t("td",Z5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F5,t("td",Q5,[t("a",R5,[l("统计二叉树中好节点的数目"),e(s)])]),S5,t("td",G5,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$5]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[t7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[e7]),_:1}),l(),l7]),t("td",o7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n7,t("td",s7,[t("a",d7,[l("二叉树中的伪回文路径"),e(s)])]),_7,t("td",i7,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[r7]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[a7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[c7]),_:1}),l(),h7]),t("td",u7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f7,t("td",g7,[t("a",m7,[l("课程表 IV"),e(s)])]),y7,t("td",x7,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[b7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[p7]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[k7]),_:1}),l(),M7]),t("td",I7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v7,t("td",H7,[t("a",w7,[l("重新规划路线"),e(s)])]),z7,t("td",E7,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[O7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[L7]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[C7]),_:1})]),t("td",j7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P7,t("td",q7,[t("a",N7,[l("寻找所有的独生节点"),e(s)])]),V7,t("td",K7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[T7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[A7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[B7]),_:1}),l(),D7]),t("td",J7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[U7,t("td",W7,[t("a",X7,[l("树节点的第 K 个祖先"),e(s)])]),Y7,t("td",Z7,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[F7]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Q7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[R7]),_:1}),l(),S7]),t("td",G7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$7,t("td",t9,[t("a",e9,[l("克隆含随机指针的二叉树"),e(s)])]),l9,t("td",o9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[n9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[s9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[d9]),_:1}),l(),_9]),t("td",i9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r9,t("td",a9,[t("a",c9,[l("克隆 N 叉树"),e(s)])]),h9,t("td",u9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[f9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[g9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[m9]),_:1}),l(),y9]),t("td",x9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b9,t("td",p9,[t("a",k9,[l("子树中标签相同的节点数"),e(s)])]),M9,t("td",I9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[v9]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[H9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[w9]),_:1}),l(),z9]),t("td",E9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O9,t("td",L9,[t("a",C9,[l("二维网格图中探测环"),e(s)])]),j9,t("td",P9,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[q9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[N9]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[V9]),_:1}),l(),K9]),t("td",T9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A9,t("td",B9,[t("a",D9,[l("使陆地分离的最少天数"),e(s)])]),J9,t("td",U9,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[W9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Y9]),_:1}),l(),Z9]),t("td",F9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Q9,t("td",R9,[t("a",S9,[l("找到二叉树中最近的右侧节点"),e(s)])]),G9,t("td",$9,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[tk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ek]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[lk]),_:1})]),t("td",ok,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nk,t("td",sk,[t("a",dk,[l("奇偶树"),e(s)])]),_k,t("td",ik,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[rk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ak]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[ck]),_:1})]),t("td",hk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uk,t("td",fk,[t("a",gk,[l("执行操作后字典序最小的字符串"),e(s)])]),mk,t("td",yk,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bk]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[pk]),_:1}),l(),kk]),t("td",Mk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ik,t("td",vk,[t("a",Hk,[l("最小体力消耗路径"),e(s)])]),wk,t("td",zk,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ek]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ok]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Lk]),_:1}),l(),Ck]),t("td",jk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pk,t("td",qk,[t("a",Nk,[l("到家的最少跳跃次数"),e(s)])]),Vk,t("td",Kk,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Tk]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ak]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Bk]),_:1})]),t("td",Dk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jk,t("td",Uk,[t("a",Wk,[l("纠正二叉树"),e(s)])]),Xk,t("td",Yk,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Zk]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Fk]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Qk]),_:1}),l(),Rk]),t("td",Sk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gk,t("td",$k,[t("a",tM,[l("获取食物的最短路径"),e(s)])]),eM,t("td",lM,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[oM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nM]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[sM]),_:1})]),t("td",dM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_M,t("td",iM,[t("a",rM,[l("找到二叉树中的距离"),e(s)])]),aM,t("td",cM,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[hM]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[uM]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[fM]),_:1}),l(),gM]),t("td",mM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yM,t("td",xM,[t("a",bM,[l("地图中的最高点"),e(s)])]),pM,t("td",kM,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[MM]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[IM]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[vM]),_:1})]),t("td",HM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wM,t("td",zM,[t("a",EM,[l("未知网格中的最短路径"),e(s)])]),OM,t("td",LM,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[CM]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[jM]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[PM]),_:1}),l(),qM]),t("td",NM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VM,t("td",KM,[t("a",TM,[l("隐藏网格下的最小消耗路径"),e(s)])]),AM,t("td",BM,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[DM]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[JM]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[UM]),_:1}),l(),WM]),t("td",XM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YM,t("td",ZM,[t("a",FM,[l("统计子岛屿"),e(s)])]),QM,t("td",RM,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[SM]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[GM]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[$M]),_:1}),l(),tI]),t("td",eI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lI,t("td",oI,[t("a",nI,[l("迷宫中离入口最近的出口"),e(s)])]),sI,t("td",dI,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_I]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[iI]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[rI]),_:1})]),t("td",aI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cI,t("td",hI,[t("a",uI,[l("你能穿过矩阵的最后一天"),e(s)])]),fI,t("td",gI,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[mI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[yI]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[xI]),_:1}),l(),bI]),t("td",pI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kI,t("td",MI,[t("a",II,[l("寻找图中是否存在路径"),e(s)])]),vI,t("td",HI,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[zI]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[EI]),_:1}),l(),OI]),t("td",LI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[CI,t("td",jI,[t("a",PI,[l("找到所有的农场组"),e(s)])]),qI,t("td",NI,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[VI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[KI]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[TI]),_:1}),l(),AI]),t("td",BI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DI,t("td",JI,[t("a",UI,[l("树上的操作"),e(s)])]),WI,t("td",XI,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[YI]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ZI]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[FI]),_:1}),l(),QI]),t("td",RI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SI,t("td",GI,[t("a",$I,[l("网络空闲的时刻"),e(s)])]),tv,t("td",ev,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[lv]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ov]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nv]),_:1})]),t("td",sv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dv,t("td",_v,[t("a",iv,[l("到达目的地的第二短时间"),e(s)])]),rv,t("td",av,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cv]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[hv]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[uv]),_:1})]),t("td",fv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gv,t("td",mv,[t("a",yv,[l("转化数字的最小运算数"),e(s)])]),xv,t("td",bv,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[pv]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[kv]),_:1})]),t("td",Mv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Iv,t("td",vv,[t("a",Hv,[l("找出知晓秘密的所有专家"),e(s)])]),wv,t("td",zv,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ev]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ov]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Lv]),_:1}),l(),Cv]),t("td",jv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pv,t("td",qv,[t("a",Nv,[l("引爆最多的炸弹"),e(s)])]),Vv,t("td",Kv,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Tv]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Av]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Bv]),_:1}),l(),Dv]),t("td",Jv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uv,t("td",Wv,[t("a",Xv,[l("价格范围内最高排名的 K 样物品"),e(s)])]),Yv,t("td",Zv,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Fv]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qv]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[Rv]),_:1}),l(),Sv]),t("td",Gv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$v,t("td",tH,[t("a",eH,[l("通过翻转行或列来去除所有的 1 II"),e(s)])]),lH,t("td",oH,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[nH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sH]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[dH]),_:1}),l(),_H]),t("td",iH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rH,t("td",aH,[t("a",cH,[l("有向无环图中一个节点的所有祖先"),e(s)])]),hH,t("td",uH,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[gH]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[mH]),_:1}),l(),yH]),t("td",xH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bH,t("td",pH,[t("a",kH,[l("无向图中到环的距离"),e(s)])]),MH,t("td",IH,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[HH]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[wH]),_:1}),l(),zH]),t("td",EH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[OH,t("td",LH,[t("a",CH,[l("逃离火灾"),e(s)])]),jH,t("td",PH,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[qH]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[NH]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[VH]),_:1}),l(),KH]),t("td",TH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[AH,t("td",BH,[t("a",DH,[l("树中最接近路径的节点"),e(s)])]),JH,t("td",UH,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[WH]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[XH]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[YH]),_:1}),l(),ZH]),t("td",FH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QH,t("td",RH,[t("a",SH,[l("到达角落需要移除障碍物的最小数目"),e(s)])]),GH,t("td",$H,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tw]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ew]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[lw]),_:1}),l(),ow]),t("td",nw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sw,t("td",dw,[t("a",_w,[l("统计无向图中无法互相到达点对数"),e(s)])]),iw,t("td",rw,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[aw]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cw]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[hw]),_:1}),l(),uw]),t("td",fw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gw,t("td",mw,[t("a",yw,[l("网格图中递增路径的数目"),e(s)])]),xw,t("td",bw,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pw]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kw]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Mw]),_:1}),l(),Iw]),t("td",vw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hw,t("td",ww,[t("a",zw,[l("受限条件下可到达节点的数目"),e(s)])]),Ew,t("td",Ow,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Lw]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Cw]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[jw]),_:1}),l(),Pw]),t("td",qw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nw,t("td",Vw,[t("a",Kw,[l("感染二叉树需要的总时间"),e(s)])]),Tw,t("td",Aw,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Bw]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Dw]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Jw]),_:1}),l(),Uw]),t("td",Ww,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xw,t("td",Yw,[t("a",Zw,[l("反转二叉树的奇数层"),e(s)])]),Fw,t("td",Qw,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Rw]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Sw]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Gw]),_:1}),l(),$w]),t("td",tz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ez,t("td",lz,[t("a",oz,[l("值为 1 的节点数"),e(s)])]),nz,t("td",sz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[dz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_z]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[iz]),_:1}),l(),rz]),t("td",az,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cz,t("td",hz,[t("a",uz,[l("移除子树后的二叉树高度"),e(s)])]),fz,t("td",gz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[mz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yz]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xz]),_:1}),l(),bz]),t("td",pz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kz,t("td",Mz,[t("a",Iz,[l("树上最大得分和路径"),e(s)])]),vz,t("td",Hz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[wz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zz]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ez]),_:1}),l(),Oz]),t("td",Lz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cz,t("td",jz,[t("a",Pz,[l("逐层排序二叉树所需的最少操作数目"),e(s)])]),qz,t("td",Nz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Vz]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Kz]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[Tz]),_:1})]),t("td",Az,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bz,t("td",Dz,[t("a",Jz,[l("到达首都的最少油耗"),e(s)])]),Uz,t("td",Wz,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Xz]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Yz]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Zz]),_:1}),l(),Fz]),t("td",Qz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rz,t("td",Sz,[t("a",Gz,[l("两个城市间路径的最小分数"),e(s)])]),$z,t("td",tE,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[eE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[lE]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[oE]),_:1}),l(),nE]),t("td",sE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dE,t("td",_E,[t("a",iE,[l("将节点分成尽可能多的组"),e(s)])]),rE,t("td",aE,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cE]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[hE]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[uE]),_:1})]),t("td",fE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gE,t("td",mE,[t("a",yE,[l("矩阵查询可获得的最大分数"),e(s)])]),xE,t("td",bE,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[pE]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[kE]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ME]),_:1}),l(),IE]),t("td",vE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HE,t("td",wE,[t("a",zE,[l("二进制矩阵中翻转最多一次使路径不连通"),e(s)])]),EE,t("td",OE,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[LE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[CE]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jE]),_:1}),l(),PE]),t("td",qE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NE,t("td",VE,[t("a",KE,[l("在网格图中访问一个格子的最少时间"),e(s)])]),TE,t("td",AE,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[BE]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[DE]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[JE]),_:1}),l(),UE]),t("td",WE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XE,t("td",YE,[t("a",ZE,[l("二叉树中的第 K 大层和"),e(s)])]),FE,t("td",QE,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[RE]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[SE]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[GE]),_:1}),l(),$E]),t("td",tO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eO,t("td",lO,[t("a",oO,[l("检查骑士巡视方案"),e(s)])]),nO,t("td",sO,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_O]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[iO]),_:1}),l(),rO]),t("td",aO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cO,t("td",hO,[t("a",uO,[l("图中的最短环"),e(s)])]),fO,t("td",gO,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[mO]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[yO]),_:1})]),t("td",xO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bO,t("td",pO,[t("a",kO,[l("最少翻转操作数"),e(s)])]),MO,t("td",IO,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[vO]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[HO]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[wO]),_:1})]),t("td",zO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[EO,t("td",OO,[t("a",LO,[l("网格图中最少访问的格子数"),e(s)])]),CO,t("td",jO,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[PO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[qO]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[NO]),_:1}),l(),VO]),t("td",KO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TO,t("td",AO,[t("a",BO,[l("二叉树的堂兄弟节点 II"),e(s)])]),DO,t("td",JO,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[UO]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[WO]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[XO]),_:1}),l(),YO]),t("td",ZO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FO,t("td",QO,[t("a",RO,[l("网格图中鱼的最大数目"),e(s)])]),SO,t("td",GO,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$O]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[tL]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[eL]),_:1}),l(),lL]),t("td",oL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nL,t("td",sL,[t("a",dL,[l("统计完全连通分量的数量"),e(s)])]),_L,t("td",iL,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rL]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[aL]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[cL]),_:1})]),t("td",hL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uL,t("td",fL,[t("a",gL,[l("特殊二叉树的高度"),e(s)])]),mL,t("td",yL,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[xL]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[bL]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[pL]),_:1}),l(),kL]),t("td",ML,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[IL,t("td",vL,[t("a",HL,[l("找出最安全路径"),e(s)])]),wL,t("td",zL,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[EL]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[OL]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[LL]),_:1}),l(),CL]),t("td",jL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PL,t("td",qL,[t("a",NL,[l("避免淹死并到达目的地的最短时间"),e(s)])]),VL,t("td",KL,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[TL]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[AL]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[BL]),_:1})]),t("td",DL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JL,t("td",UL,[t("a",WL,[l("将石头分散到网格图的最少移动次数"),e(s)])]),XL,t("td",YL,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ZL]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[FL]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[QL]),_:1}),l(),RL]),t("td",SL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GL,t("td",$L,[t("a",tC,[l("所有单元格的远离程度之和"),e(s)])]),eC,t("td",lC,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[oC]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[nC]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[sC]),_:1}),l(),dC]),t("td",_C,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iC,t("td",rC,[t("a",aC,[l("可以到达每一个节点的最少边反转次数"),e(s)])]),cC,t("td",hC,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[uC]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[fC]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[gC]),_:1}),l(),mC]),t("td",yC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xC,t("td",bC,[t("a",pC,[l("使 X 和 Y 相等的最少操作次数"),e(s)])]),kC,t("td",MC,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[IC]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[vC]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[HC]),_:1})]),t("td",wC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zC,t("td",EC,[t("a",OC,[l("按距离统计房屋对数目 I"),e(s)])]),LC,t("td",CC,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[jC]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[PC]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[qC]),_:1})]),t("td",NC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VC,t("td",KC,[t("a",TC,[l("最短路径中的边"),e(s)])]),AC,t("td",BC,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[DC]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[JC]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[UC]),_:1}),l(),WC]),t("td",XC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[YC,t("td",ZC,[t("a",FC,[l("最大汉明距离"),e(s)])]),QC,t("td",RC,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[SC]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[GC]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$C]),_:1})]),t("td",tj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ej,t("td",lj,[t("a",oj,[l("找到具有最小和的树的层数"),e(s)])]),nj,t("td",sj,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[dj]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_j]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ij]),_:1}),l(),rj]),t("td",aj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cj,t("td",hj,[t("a",uj,[l("合并两棵树后的最小直径"),e(s)])]),fj,t("td",gj,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[mj]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yj]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xj]),_:1}),l(),bj]),t("td",pj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kj,t("td",Mj,[t("a",Ij,[l("判断矩形的两个角落是否可达"),e(s)])]),vj,t("td",Hj,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wj]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[zj]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ej]),_:1}),l(),Oj]),t("td",Lj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cj,t("td",jj,[t("a",Pj,[l("新增道路查询后的最短距离 I"),e(s)])]),qj,t("td",Nj,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Vj]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Kj]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Tj]),_:1})]),t("td",Aj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bj,t("td",Dj,[t("a",Jj,[l("吃掉所有兵需要的最多移动次数"),e(s)])]),Uj,t("td",Wj,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Xj]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Yj]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zj]),_:1}),l(),Fj]),t("td",Qj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rj,t("td",Sj,[t("a",Gj,[l("穿越网格图的安全路径"),e(s)])]),$j,t("td",tP,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[eP]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[lP]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oP]),_:1}),l(),nP]),t("td",sP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dP,t("td",_P,[t("a",iP,[l("移除可疑的方法"),e(s)])]),rP,t("td",aP,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cP]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hP]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[uP]),_:1})]),t("td",fP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gP,t("td",mP,[t("a",yP,[l("传递信息"),e(s)])]),xP,t("td",bP,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pP]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kP]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[MP]),_:1}),l(),IP]),t("td",vP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[HP,t("td",wP,[t("a",zP,[l("最小跳跃次数"),e(s)])]),EP,t("td",OP,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[LP]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[CP]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[jP]),_:1}),l(),PP]),t("td",qP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[NP,t("td",VP,[t("a",KP,[l("寻宝"),e(s)])]),TP,t("td",AP,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[BP]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[DP]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[JP]),_:1}),l(),UP]),t("td",WP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XP,t("td",YP,[t("a",ZP,[l("追逐游戏"),e(s)])]),FP,t("td",QP,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[RP]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[SP]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[GP]),_:1}),l(),$P]),t("td",tq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eq,t("td",lq,[t("a",oq,[l("变换的迷宫"),e(s)])]),nq,t("td",sq,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dq]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_q]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[iq]),_:1}),l(),rq]),t("td",aq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cq,t("td",hq,[t("a",uq,[l("黑白翻转棋"),e(s)])]),fq,t("td",gq,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[mq]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[yq]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[xq]),_:1})]),t("td",bq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pq,t("td",kq,[t("a",Mq,[l("开幕式焰火"),e(s)])]),Iq,t("td",vq,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Hq]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wq]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[zq]),_:1}),l(),Eq]),t("td",Oq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Lq,t("td",Cq,[t("a",jq,[l("自行车炫技赛场"),e(s)])]),Pq,t("td",qq,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Nq]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Vq]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Kq]),_:1}),l(),Tq]),t("td",Aq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bq,t("td",Dq,[t("a",Jq,[l("信物传送"),e(s)])]),Uq,t("td",Wq,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Xq]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Yq]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zq]),_:1}),l(),Fq]),t("td",Qq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rq,t("td",Sq,[t("a",Gq,[l("弹珠游戏"),e(s)])]),$q,t("td",tN,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[eN]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[lN]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[oN]),_:1}),l(),nN]),t("td",sN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dN,t("td",_N,[t("a",iN,[l("装饰树"),e(s)])]),rN,t("td",aN,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[cN]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[hN]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[uN]),_:1}),l(),fN]),t("td",gN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mN,t("td",yN,[t("a",xN,[l("主题空间"),e(s)])]),bN,t("td",pN,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kN]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[MN]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[IN]),_:1}),l(),vN]),t("td",HN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wN,t("td",zN,[t("a",EN,[l("机器人的运动范围"),e(s)])]),t("td",ON,[t("a",LN,[l("[✓]"),e(s)])]),t("td",CN,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[jN]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[PN]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[qN]),_:1})]),t("td",NN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VN,t("td",KN,[t("a",TN,[l("二叉树的镜像"),e(s)])]),t("td",AN,[t("a",BN,[l("[✓]"),e(s)])]),t("td",DN,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[JN]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[UN]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[WN]),_:1}),l(),XN]),t("td",YN,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ZN,t("td",FN,[t("a",QN,[l("对称的二叉树"),e(s)])]),t("td",RN,[t("a",SN,[l("[✓]"),e(s)])]),t("td",GN,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[$N]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[tV]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[eV]),_:1}),l(),lV]),t("td",oV,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[nV,t("td",sV,[t("a",dV,[l("从上到下打印二叉树"),e(s)])]),t("td",_V,[t("a",iV,[l("[✓]"),e(s)])]),t("td",rV,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[aV]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cV]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[hV]),_:1})]),t("td",uV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fV,t("td",gV,[t("a",mV,[l("从上到下打印二叉树 II"),e(s)])]),t("td",yV,[t("a",xV,[l("[✓]"),e(s)])]),t("td",bV,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[pV]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[kV]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[MV]),_:1})]),t("td",IV,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vV,t("td",HV,[t("a",wV,[l("从上到下打印二叉树 III"),e(s)])]),t("td",zV,[t("a",EV,[l("[✓]"),e(s)])]),t("td",OV,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[LV]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[CV]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[jV]),_:1})]),t("td",PV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qV,t("td",NV,[t("a",VV,[l("序列化二叉树"),e(s)])]),t("td",KV,[t("a",TV,[l("[✓]"),e(s)])]),t("td",AV,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[BV]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[DV]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[JV]),_:1}),l(),UV]),t("td",WV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XV,t("td",YV,[t("a",ZV,[l("二叉树的深度"),e(s)])]),t("td",FV,[t("a",QV,[l("[✓]"),e(s)])]),t("td",RV,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[SV]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[GV]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$V]),_:1}),l(),tK]),t("td",eK,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[lK,t("td",oK,[t("a",nK,[l("最少的硬币数目"),e(s)])]),sK,t("td",dK,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_K]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[iK]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[rK]),_:1})]),t("td",aK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cK,t("td",hK,[t("a",uK,[l("岛屿的最大面积"),e(s)])]),fK,t("td",gK,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[mK]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[yK]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[xK]),_:1}),l(),bK]),t("td",pK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kK,t("td",MK,[t("a",IK,[l("二分图"),e(s)])]),vK,t("td",HK,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[wK]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[zK]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[EK]),_:1}),l(),OK]),t("td",LK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CK,t("td",jK,[t("a",PK,[l("矩阵中的距离"),e(s)])]),qK,t("td",NK,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[VK]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[KK]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[TK]),_:1}),l(),AK]),t("td",BK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DK,t("td",JK,[t("a",UK,[l("单词演变"),e(s)])]),WK,t("td",XK,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[YK]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[ZK]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[FK]),_:1})]),t("td",QK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RK,t("td",SK,[t("a",GK,[l("开密码锁"),e(s)])]),$K,t("td",tT,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[eT]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[lT]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[oT]),_:1}),l(),nT]),t("td",sT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dT,t("td",_T,[t("a",iT,[l("所有路径"),e(s)])]),rT,t("td",aT,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[cT]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hT]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[uT]),_:1}),l(),fT]),t("td",gT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mT,t("td",yT,[t("a",xT,[l("计算除法"),e(s)])]),bT,t("td",pT,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kT]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[MT]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[IT]),_:1}),l(),vT]),t("td",HT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wT,t("td",zT,[t("a",ET,[l("最长递增路径"),e(s)])]),OT,t("td",LT,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[CT]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[jT]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[PT]),_:1}),l(),qT]),t("td",NT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[VT,t("td",KT,[t("a",TT,[l("课程顺序"),e(s)])]),AT,t("td",BT,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[DT]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[JT]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[UT]),_:1}),l(),WT]),t("td",XT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YT,t("td",ZT,[t("a",FT,[l("外星文字典"),e(s)])]),QT,t("td",RT,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ST]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[GT]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[$T]),_:1}),l(),tA]),t("td",eA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lA,t("td",oA,[t("a",nA,[l("省份数量"),e(s)])]),sA,t("td",dA,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[_A]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[iA]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[rA]),_:1}),l(),aA]),t("td",cA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hA,t("td",uA,[t("a",fA,[l("相似的字符串"),e(s)])]),gA,t("td",mA,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[yA]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xA]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[bA]),_:1}),l(),pA]),t("td",kA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[MA,t("td",IA,[t("a",vA,[l("多余的边"),e(s)])]),HA,t("td",wA,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zA]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[EA]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[OA]),_:1}),l(),LA]),t("td",CA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jA,t("td",PA,[t("a",qA,[l("往完全二叉树添加节点"),e(s)])]),NA,t("td",VA,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[KA]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[TA]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[AA]),_:1}),l(),BA]),t("td",DA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JA,t("td",UA,[t("a",WA,[l("二叉树每层的最大值"),e(s)])]),XA,t("td",YA,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[ZA]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[FA]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[QA]),_:1}),l(),RA]),t("td",SA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GA,t("td",$A,[t("a",tB,[l("二叉树最底层最左边的值"),e(s)])]),eB,t("td",lB,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[oB]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[nB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[sB]),_:1}),l(),dB]),t("td",_B,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iB,t("td",rB,[t("a",aB,[l("二叉树的右侧视图"),e(s)])]),cB,t("td",hB,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[uB]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[gB]),_:1}),l(),mB]),t("td",yB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xB,t("td",bB,[t("a",pB,[l("序列化与反序列化二叉树"),e(s)])]),kB,t("td",MB,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[IB]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[HB]),_:1}),l(),wB]),t("td",zB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[EB,t("td",OB,[t("a",LB,[l("分割回文子字符串"),e(s)])]),CB,t("td",jB,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[PB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[qB]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[NB]),_:1}),l(),VB]),t("td",KB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TB,t("td",AB,[t("a",BB,[l("节点间通路"),e(s)])]),DB,t("td",JB,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[UB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[WB]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[XB]),_:1})]),t("td",YB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZB,t("td",FB,[t("a",QB,[l("特定深度节点链表"),e(s)])]),RB,t("td",SB,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[GB]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$B]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[tD]),_:1}),l(),eD]),t("td",lD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oD,t("td",nD,[t("a",sD,[l("颜色填充"),e(s)])]),dD,t("td",_D,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[iD]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[rD]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[aD]),_:1}),l(),cD]),t("td",hD,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[uD,t("td",fD,[t("a",gD,[l("水域大小"),e(s)])]),mD,t("td",yD,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xD]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bD]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[pD]),_:1}),l(),kD]),t("td",MD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ID,t("td",vD,[t("a",HD,[l("婴儿名字"),e(s)])]),wD,t("td",zD,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ED]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[OD]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[LD]),_:1}),l(),CD]),t("td",jD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PD,t("td",qD,[t("a",ND,[l("单词转换"),e(s)])]),VD,t("td",KD,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[TD]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[AD]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[BD]),_:1}),l(),DD]),t("td",JD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const ZD=i(h,[["render",UD],["__file","breadth-first-search.html.vue"]]);export{ZD as default};
