import{_ as i,r as _,o as a,c,a as t,b as e,w as o,d as l,f as r}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"有序集合",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#有序集合","aria-hidden":"true"},"#"),l(" 有序集合")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),H=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),q=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),K=t("code",null,"二叉搜索树",-1),B=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),N=t("span",{class:"blue"},"有序集合",-1),O=t("code",null,"拓扑排序",-1),R=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),j=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),P=t("code",null,"并查集",-1),Q=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),J=t("code",null,"树状数组",-1),S=t("code",null,"后缀数组",-1),T=t("p",null,[t("strong",null,"算法")],-1),U=t("code",null,"枚举",-1),W=t("code",null,"递归",-1),A=t("code",null,"分治",-1),F=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Ht=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),qt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Kt=t("code",null,"脑筋急转弯",-1),Bt=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Ot=t("hr",null,null,-1),Rt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vt=t("td",{style:{"text-align":"center"}},"218",-1),jt={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Pt=t("td",{style:{"text-align":"center"}},null,-1),Qt={style:{"text-align":"left"}},Gt=t("code",null,"树状数组",-1),Jt=t("code",null,"线段树",-1),St=t("code",null,"数组",-1),Tt=t("code",null,"4+",-1),Ut={style:{"text-align":"left"}},Wt=t("td",{style:{"text-align":"center"}},"220",-1),At={style:{"text-align":"left"}},Ft={href:"https://leetcode.com/problems/contains-duplicate-iii",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"数组",-1),$t=t("code",null,"桶排序",-1),te=t("code",null,"有序集合",-1),ee=t("code",null,"2+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"315",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),_e={style:{"text-align":"left"}},ie=t("code",null,"树状数组",-1),ae=t("code",null,"线段树",-1),ce=t("code",null,"数组",-1),re=t("code",null,"4+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"327",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},xe=t("code",null,"树状数组",-1),be=t("code",null,"线段树",-1),pe=t("code",null,"数组",-1),ke=t("code",null,"4+",-1),He={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"352",-1),ve={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/data-stream-as-disjoint-intervals",target:"_blank",rel:"noopener noreferrer"},Ie=t("td",{style:{"text-align":"center"}},null,-1),we={style:{"text-align":"left"}},ze=t("code",null,"设计",-1),Le=t("code",null,"二分查找",-1),Ce=t("code",null,"有序集合",-1),Ke={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"363",-1),Ee={style:{"text-align":"left"}},Ne={href:"https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k",target:"_blank",rel:"noopener noreferrer"},Oe=t("td",{style:{"text-align":"center"}},null,-1),Re={style:{"text-align":"left"}},Ve=t("code",null,"数组",-1),je=t("code",null,"二分查找",-1),De=t("code",null,"矩阵",-1),Pe=t("code",null,"2+",-1),Qe={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"456",-1),Je={style:{"text-align":"left"}},Se={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},Te=t("td",{style:{"text-align":"center"}},null,-1),Ue={style:{"text-align":"left"}},We=t("code",null,"栈",-1),Ae=t("code",null,"数组",-1),Fe=t("code",null,"二分查找",-1),Xe=t("code",null,"2+",-1),Ye={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"493",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},ol=t("code",null,"树状数组",-1),nl=t("code",null,"线段树",-1),sl=t("code",null,"数组",-1),dl=t("code",null,"4+",-1),_l={style:{"text-align":"left"}},il=t("td",{style:{"text-align":"center"}},"497",-1),al={style:{"text-align":"left"}},cl={href:"https://leetcode.com/problems/random-point-in-non-overlapping-rectangles",target:"_blank",rel:"noopener noreferrer"},rl=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},ul=t("code",null,"水塘抽样",-1),fl=t("code",null,"数组",-1),gl=t("code",null,"数学",-1),ml=t("code",null,"4+",-1),yl={style:{"text-align":"left"}},xl=t("td",{style:{"text-align":"center"}},"635",-1),bl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/design-log-storage-system",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),Hl={style:{"text-align":"left"}},Ml=t("code",null,"设计",-1),vl=t("code",null,"哈希表",-1),ql=t("code",null,"字符串",-1),Il=t("code",null,"1+",-1),wl={style:{"text-align":"left"}},zl=t("td",{style:{"text-align":"center"}},"683",-1),Ll={style:{"text-align":"left"}},Cl={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},Kl=t("td",{style:{"text-align":"center"}},null,-1),Bl={style:{"text-align":"left"}},El=t("code",null,"树状数组",-1),Nl=t("code",null,"线段树",-1),Ol=t("code",null,"队列",-1),Rl=t("code",null,"5+",-1),Vl={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"699",-1),Dl={style:{"text-align":"left"}},Pl={href:"https://leetcode.com/problems/falling-squares",target:"_blank",rel:"noopener noreferrer"},Ql=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Jl=t("code",null,"线段树",-1),Sl=t("code",null,"数组",-1),Tl=t("code",null,"有序集合",-1),Ul={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"715",-1),Al={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/range-module",target:"_blank",rel:"noopener noreferrer"},Xl=t("td",{style:{"text-align":"center"}},null,-1),Yl={style:{"text-align":"left"}},Zl=t("code",null,"设计",-1),$l=t("code",null,"线段树",-1),to=t("code",null,"有序集合",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"716",-1),oo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),_o={style:{"text-align":"left"}},io=t("code",null,"栈",-1),ao=t("code",null,"设计",-1),co=t("code",null,"链表",-1),ro=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"729",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/my-calendar-i",target:"_blank",rel:"noopener noreferrer"},mo={style:{"text-align":"center"}},yo={href:"/problem/0729",target:"_blank",rel:"noopener noreferrer"},xo={style:{"text-align":"left"}},bo=t("code",null,"设计",-1),po=t("code",null,"线段树",-1),ko=t("code",null,"数组",-1),Ho=t("code",null,"2+",-1),Mo={style:{"text-align":"left"}},vo=t("td",{style:{"text-align":"center"}},"731",-1),qo={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/my-calendar-ii",target:"_blank",rel:"noopener noreferrer"},wo={style:{"text-align":"center"}},zo={href:"/problem/0731",target:"_blank",rel:"noopener noreferrer"},Lo={style:{"text-align":"left"}},Co=t("code",null,"设计",-1),Ko=t("code",null,"线段树",-1),Bo=t("code",null,"数组",-1),Eo=t("code",null,"3+",-1),No={style:{"text-align":"left"}},Oo=t("td",{style:{"text-align":"center"}},"732",-1),Ro={style:{"text-align":"left"}},Vo={href:"https://leetcode.com/problems/my-calendar-iii",target:"_blank",rel:"noopener noreferrer"},jo=t("td",{style:{"text-align":"center"}},null,-1),Do={style:{"text-align":"left"}},Po=t("code",null,"设计",-1),Qo=t("code",null,"线段树",-1),Go=t("code",null,"二分查找",-1),Jo=t("code",null,"2+",-1),So={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"850",-1),Uo={style:{"text-align":"left"}},Wo={href:"https://leetcode.com/problems/rectangle-area-ii",target:"_blank",rel:"noopener noreferrer"},Ao=t("td",{style:{"text-align":"center"}},null,-1),Fo={style:{"text-align":"left"}},Xo=t("code",null,"线段树",-1),Yo=t("code",null,"数组",-1),Zo=t("code",null,"有序集合",-1),$o=t("code",null,"1+",-1),tn={style:{"text-align":"left"}},en=t("td",{style:{"text-align":"center"}},"855",-1),ln={style:{"text-align":"left"}},on={href:"https://leetcode.com/problems/exam-room",target:"_blank",rel:"noopener noreferrer"},nn=t("td",{style:{"text-align":"center"}},null,-1),sn={style:{"text-align":"left"}},dn=t("code",null,"设计",-1),_n=t("code",null,"有序集合",-1),an=t("code",null,"堆（优先队列）",-1),cn={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"895",-1),hn={style:{"text-align":"left"}},un={href:"https://leetcode.com/problems/maximum-frequency-stack",target:"_blank",rel:"noopener noreferrer"},fn=t("td",{style:{"text-align":"center"}},null,-1),gn={style:{"text-align":"left"}},mn=t("code",null,"栈",-1),yn=t("code",null,"设计",-1),xn=t("code",null,"哈希表",-1),bn=t("code",null,"1+",-1),pn={style:{"text-align":"left"}},kn=t("td",{style:{"text-align":"center"}},"975",-1),Hn={style:{"text-align":"left"}},Mn={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},vn=t("td",{style:{"text-align":"center"}},null,-1),qn={style:{"text-align":"left"}},In=t("code",null,"栈",-1),wn=t("code",null,"数组",-1),zn=t("code",null,"动态规划",-1),Ln=t("code",null,"2+",-1),Cn={style:{"text-align":"left"}},Kn=t("td",{style:{"text-align":"center"}},"1348",-1),Bn={style:{"text-align":"left"}},En={href:"https://leetcode.com/problems/tweet-counts-per-frequency",target:"_blank",rel:"noopener noreferrer"},Nn=t("td",{style:{"text-align":"center"}},null,-1),On={style:{"text-align":"left"}},Rn=t("code",null,"设计",-1),Vn=t("code",null,"哈希表",-1),jn=t("code",null,"二分查找",-1),Dn=t("code",null,"2+",-1),Pn={style:{"text-align":"left"}},Qn=t("td",{style:{"text-align":"center"}},"1418",-1),Gn={style:{"text-align":"left"}},Jn={href:"https://leetcode.com/problems/display-table-of-food-orders-in-a-restaurant",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},null,-1),Tn={style:{"text-align":"left"}},Un=t("code",null,"数组",-1),Wn=t("code",null,"哈希表",-1),An=t("code",null,"字符串",-1),Fn=t("code",null,"2+",-1),Xn={style:{"text-align":"left"}},Yn=t("td",{style:{"text-align":"center"}},"1438",-1),Zn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",target:"_blank",rel:"noopener noreferrer"},ts=t("td",{style:{"text-align":"center"}},null,-1),es={style:{"text-align":"left"}},ls=t("code",null,"队列",-1),os=t("code",null,"数组",-1),ns=t("code",null,"有序集合",-1),ss=t("code",null,"3+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"1606",-1),is={style:{"text-align":"left"}},as={href:"https://leetcode.com/problems/find-servers-that-handled-most-number-of-requests",target:"_blank",rel:"noopener noreferrer"},cs=t("td",{style:{"text-align":"center"}},null,-1),rs={style:{"text-align":"left"}},hs=t("code",null,"贪心",-1),us=t("code",null,"数组",-1),fs=t("code",null,"有序集合",-1),gs=t("code",null,"1+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"1649",-1),xs={style:{"text-align":"left"}},bs={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},ps=t("td",{style:{"text-align":"center"}},null,-1),ks={style:{"text-align":"left"}},Hs=t("code",null,"树状数组",-1),Ms=t("code",null,"线段树",-1),vs=t("code",null,"数组",-1),qs=t("code",null,"4+",-1),Is={style:{"text-align":"left"}},ws=t("td",{style:{"text-align":"center"}},"1675",-1),zs={style:{"text-align":"left"}},Ls={href:"https://leetcode.com/problems/minimize-deviation-in-array",target:"_blank",rel:"noopener noreferrer"},Cs=t("td",{style:{"text-align":"center"}},null,-1),Ks={style:{"text-align":"left"}},Bs=t("code",null,"贪心",-1),Es=t("code",null,"数组",-1),Ns=t("code",null,"有序集合",-1),Os=t("code",null,"1+",-1),Rs={style:{"text-align":"left"}},Vs=t("td",{style:{"text-align":"center"}},"1756",-1),js={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},Ps=t("td",{style:{"text-align":"center"}},null,-1),Qs={style:{"text-align":"left"}},Gs=t("code",null,"栈",-1),Js=t("code",null,"设计",-1),Ss=t("code",null,"树状数组",-1),Ts=t("code",null,"3+",-1),Us={style:{"text-align":"left"}},Ws=t("td",{style:{"text-align":"center"}},"1818",-1),As={style:{"text-align":"left"}},Fs={href:"https://leetcode.com/problems/minimum-absolute-sum-difference",target:"_blank",rel:"noopener noreferrer"},Xs=t("td",{style:{"text-align":"center"}},null,-1),Ys={style:{"text-align":"left"}},Zs=t("code",null,"数组",-1),$s=t("code",null,"二分查找",-1),td=t("code",null,"有序集合",-1),ed=t("code",null,"1+",-1),ld={style:{"text-align":"left"}},od=t("td",{style:{"text-align":"center"}},"1825",-1),nd={style:{"text-align":"left"}},sd={href:"https://leetcode.com/problems/finding-mk-average",target:"_blank",rel:"noopener noreferrer"},dd=t("td",{style:{"text-align":"center"}},null,-1),_d={style:{"text-align":"left"}},id=t("code",null,"设计",-1),ad=t("code",null,"队列",-1),cd=t("code",null,"数据流",-1),rd=t("code",null,"2+",-1),hd={style:{"text-align":"left"}},ud=t("td",{style:{"text-align":"center"}},"1847",-1),fd={style:{"text-align":"left"}},gd={href:"https://leetcode.com/problems/closest-room",target:"_blank",rel:"noopener noreferrer"},md=t("td",{style:{"text-align":"center"}},null,-1),yd={style:{"text-align":"left"}},xd=t("code",null,"数组",-1),bd=t("code",null,"二分查找",-1),pd=t("code",null,"有序集合",-1),kd=t("code",null,"1+",-1),Hd={style:{"text-align":"left"}},Md=t("td",{style:{"text-align":"center"}},"1902",-1),vd={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},Id=t("td",{style:{"text-align":"center"}},null,-1),wd={style:{"text-align":"left"}},zd=t("code",null,"树",-1),Ld=t("code",null,"二叉搜索树",-1),Cd=t("code",null,"数组",-1),Kd=t("code",null,"2+",-1),Bd={style:{"text-align":"left"}},Ed=t("td",{style:{"text-align":"center"}},"1912",-1),Nd={style:{"text-align":"left"}},Od={href:"https://leetcode.com/problems/design-movie-rental-system",target:"_blank",rel:"noopener noreferrer"},Rd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},jd=t("code",null,"设计",-1),Dd=t("code",null,"数组",-1),Pd=t("code",null,"哈希表",-1),Qd=t("code",null,"2+",-1),Gd={style:{"text-align":"left"}},Jd=t("td",{style:{"text-align":"center"}},"2021",-1),Sd={style:{"text-align":"left"}},Td={href:"https://leetcode.com/problems/brightest-position-on-street",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},null,-1),Wd={style:{"text-align":"left"}},Ad=t("code",null,"数组",-1),Fd=t("code",null,"有序集合",-1),Xd=t("code",null,"前缀和",-1),Yd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"2031",-1),$d={style:{"text-align":"left"}},t_={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},e_=t("td",{style:{"text-align":"center"}},null,-1),l_={style:{"text-align":"left"}},o_=t("code",null,"树状数组",-1),n_=t("code",null,"线段树",-1),s_=t("code",null,"数组",-1),d_=t("code",null,"4+",-1),__={style:{"text-align":"left"}},i_=t("td",{style:{"text-align":"center"}},"2034",-1),a_={style:{"text-align":"left"}},c_={href:"https://leetcode.com/problems/stock-price-fluctuation",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},null,-1),h_={style:{"text-align":"left"}},u_=t("code",null,"设计",-1),f_=t("code",null,"哈希表",-1),g_=t("code",null,"数据流",-1),m_=t("code",null,"2+",-1),y_={style:{"text-align":"left"}},x_=t("td",{style:{"text-align":"center"}},"2035",-1),b_={style:{"text-align":"left"}},p_={href:"https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference",target:"_blank",rel:"noopener noreferrer"},k_=t("td",{style:{"text-align":"center"}},null,-1),H_={style:{"text-align":"left"}},M_=t("code",null,"位运算",-1),v_=t("code",null,"数组",-1),q_=t("code",null,"双指针",-1),I_=t("code",null,"4+",-1),w_={style:{"text-align":"left"}},z_=t("td",{style:{"text-align":"center"}},"2102",-1),L_={style:{"text-align":"left"}},C_={href:"https://leetcode.com/problems/sequentially-ordinal-rank-tracker",target:"_blank",rel:"noopener noreferrer"},K_=t("td",{style:{"text-align":"center"}},null,-1),B_={style:{"text-align":"left"}},E_=t("code",null,"设计",-1),N_=t("code",null,"数据流",-1),O_=t("code",null,"有序集合",-1),R_=t("code",null,"1+",-1),V_={style:{"text-align":"left"}},j_=t("td",{style:{"text-align":"center"}},"2158",-1),D_={style:{"text-align":"left"}},P_={href:"https://leetcode.com/problems/amount-of-new-area-painted-each-day",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},null,-1),G_={style:{"text-align":"left"}},J_=t("code",null,"线段树",-1),S_=t("code",null,"数组",-1),T_=t("code",null,"有序集合",-1),U_={style:{"text-align":"left"}},W_=t("td",{style:{"text-align":"center"}},"2179",-1),A_={style:{"text-align":"left"}},F_={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},X_=t("td",{style:{"text-align":"center"}},null,-1),Y_={style:{"text-align":"left"}},Z_=t("code",null,"树状数组",-1),$_=t("code",null,"线段树",-1),ti=t("code",null,"数组",-1),ei=t("code",null,"4+",-1),li={style:{"text-align":"left"}},oi=t("td",{style:{"text-align":"center"}},"2213",-1),ni={style:{"text-align":"left"}},si={href:"https://leetcode.com/problems/longest-substring-of-one-repeating-character",target:"_blank",rel:"noopener noreferrer"},di=t("td",{style:{"text-align":"center"}},null,-1),_i={style:{"text-align":"left"}},ii=t("code",null,"线段树",-1),ai=t("code",null,"数组",-1),ci=t("code",null,"字符串",-1),ri=t("code",null,"1+",-1),hi={style:{"text-align":"left"}},ui=t("td",{style:{"text-align":"center"}},"2251",-1),fi={style:{"text-align":"left"}},gi={href:"https://leetcode.com/problems/number-of-flowers-in-full-bloom",target:"_blank",rel:"noopener noreferrer"},mi=t("td",{style:{"text-align":"center"}},null,-1),yi={style:{"text-align":"left"}},xi=t("code",null,"数组",-1),bi=t("code",null,"哈希表",-1),pi=t("code",null,"二分查找",-1),ki=t("code",null,"3+",-1),Hi={style:{"text-align":"left"}},Mi=t("td",{style:{"text-align":"center"}},"2254",-1),vi={style:{"text-align":"left"}},qi={href:"https://leetcode.com/problems/design-video-sharing-platform",target:"_blank",rel:"noopener noreferrer"},Ii=t("td",{style:{"text-align":"center"}},null,-1),wi={style:{"text-align":"left"}},zi=t("code",null,"栈",-1),Li=t("code",null,"设计",-1),Ci=t("code",null,"哈希表",-1),Ki=t("code",null,"1+",-1),Bi={style:{"text-align":"left"}},Ei=t("td",{style:{"text-align":"center"}},"2276",-1),Ni={style:{"text-align":"left"}},Oi={href:"https://leetcode.com/problems/count-integers-in-intervals",target:"_blank",rel:"noopener noreferrer"},Ri=t("td",{style:{"text-align":"center"}},null,-1),Vi={style:{"text-align":"left"}},ji=t("code",null,"设计",-1),Di=t("code",null,"线段树",-1),Pi=t("code",null,"有序集合",-1),Qi={style:{"text-align":"left"}},Gi=t("td",{style:{"text-align":"center"}},"2336",-1),Ji={style:{"text-align":"left"}},Si={href:"https://leetcode.com/problems/smallest-number-in-infinite-set",target:"_blank",rel:"noopener noreferrer"},Ti=t("td",{style:{"text-align":"center"}},null,-1),Ui={style:{"text-align":"left"}},Wi=t("code",null,"设计",-1),Ai=t("code",null,"哈希表",-1),Fi=t("code",null,"有序集合",-1),Xi=t("code",null,"1+",-1),Yi={style:{"text-align":"left"}},Zi=t("td",{style:{"text-align":"center"}},"2349",-1),$i={style:{"text-align":"left"}},ta={href:"https://leetcode.com/problems/design-a-number-container-system",target:"_blank",rel:"noopener noreferrer"},ea=t("td",{style:{"text-align":"center"}},null,-1),la={style:{"text-align":"left"}},oa=t("code",null,"设计",-1),na=t("code",null,"哈希表",-1),sa=t("code",null,"有序集合",-1),da=t("code",null,"1+",-1),_a={style:{"text-align":"left"}},ia=t("td",{style:{"text-align":"center"}},"2353",-1),aa={style:{"text-align":"left"}},ca={href:"https://leetcode.com/problems/design-a-food-rating-system",target:"_blank",rel:"noopener noreferrer"},ra=t("td",{style:{"text-align":"center"}},null,-1),ha={style:{"text-align":"left"}},ua=t("code",null,"设计",-1),fa=t("code",null,"哈希表",-1),ga=t("code",null,"有序集合",-1),ma=t("code",null,"1+",-1),ya={style:{"text-align":"left"}},xa=t("td",{style:{"text-align":"center"}},"2363",-1),ba={style:{"text-align":"left"}},pa={href:"https://leetcode.com/problems/merge-similar-items",target:"_blank",rel:"noopener noreferrer"},ka=t("td",{style:{"text-align":"center"}},null,-1),Ha={style:{"text-align":"left"}},Ma=t("code",null,"数组",-1),va=t("code",null,"哈希表",-1),qa=t("code",null,"有序集合",-1),Ia=t("code",null,"1+",-1),wa={style:{"text-align":"left"}},za=t("td",{style:{"text-align":"center"}},"2382",-1),La={style:{"text-align":"left"}},Ca={href:"https://leetcode.com/problems/maximum-segment-sum-after-removals",target:"_blank",rel:"noopener noreferrer"},Ka=t("td",{style:{"text-align":"center"}},null,-1),Ba={style:{"text-align":"left"}},Ea=t("code",null,"并查集",-1),Na=t("code",null,"数组",-1),Oa=t("code",null,"有序集合",-1),Ra=t("code",null,"1+",-1),Va={style:{"text-align":"left"}},ja=t("td",{style:{"text-align":"center"}},"2424",-1),Da={style:{"text-align":"left"}},Pa={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},Qa=t("td",{style:{"text-align":"center"}},null,-1),Ga={style:{"text-align":"left"}},Ja=t("code",null,"并查集",-1),Sa=t("code",null,"设计",-1),Ta=t("code",null,"树状数组",-1),Ua=t("code",null,"4+",-1),Wa={style:{"text-align":"left"}},Aa=t("td",{style:{"text-align":"center"}},"2426",-1),Fa={style:{"text-align":"left"}},Xa={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},Ya=t("td",{style:{"text-align":"center"}},null,-1),Za={style:{"text-align":"left"}},$a=t("code",null,"树状数组",-1),tc=t("code",null,"线段树",-1),ec=t("code",null,"数组",-1),lc=t("code",null,"4+",-1),oc={style:{"text-align":"left"}},nc=t("td",{style:{"text-align":"center"}},"2519",-1),sc={style:{"text-align":"left"}},dc={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},_c=t("td",{style:{"text-align":"center"}},null,-1),ic={style:{"text-align":"left"}},ac=t("code",null,"树状数组",-1),cc=t("code",null,"线段树",-1),rc=t("code",null,"数组",-1),hc=t("code",null,"4+",-1),uc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"2612",-1),gc={style:{"text-align":"left"}},mc={href:"https://leetcode.com/problems/minimum-reverse-operations",target:"_blank",rel:"noopener noreferrer"},yc=t("td",{style:{"text-align":"center"}},null,-1),xc={style:{"text-align":"left"}},bc=t("code",null,"广度优先搜索",-1),pc=t("code",null,"数组",-1),kc=t("code",null,"有序集合",-1),Hc={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"2613",-1),vc={style:{"text-align":"left"}},qc={href:"https://leetcode.com/problems/beautiful-pairs",target:"_blank",rel:"noopener noreferrer"},Ic=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},zc=t("code",null,"几何",-1),Lc=t("code",null,"数组",-1),Cc=t("code",null,"数学",-1),Kc=t("code",null,"3+",-1),Bc={style:{"text-align":"left"}},Ec=t("td",{style:{"text-align":"center"}},"2659",-1),Nc={style:{"text-align":"left"}},Oc={href:"https://leetcode.com/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},Rc=t("td",{style:{"text-align":"center"}},null,-1),Vc={style:{"text-align":"left"}},jc=t("code",null,"贪心",-1),Dc=t("code",null,"树状数组",-1),Pc=t("code",null,"线段树",-1),Qc=t("code",null,"4+",-1),Gc={style:{"text-align":"left"}},Jc=t("td",{style:{"text-align":"center"}},"2713",-1),Sc={style:{"text-align":"left"}},Tc={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Uc=t("td",{style:{"text-align":"center"}},null,-1),Wc={style:{"text-align":"left"}},Ac=t("code",null,"记忆化搜索",-1),Fc=t("code",null,"数组",-1),Xc=t("code",null,"哈希表",-1),Yc=t("code",null,"5+",-1),Zc={style:{"text-align":"left"}},$c=t("td",{style:{"text-align":"center"}},"2762",-1),tr={style:{"text-align":"left"}},er={href:"https://leetcode.com/problems/continuous-subarrays",target:"_blank",rel:"noopener noreferrer"},lr=t("td",{style:{"text-align":"center"}},null,-1),or={style:{"text-align":"left"}},nr=t("code",null,"队列",-1),sr=t("code",null,"数组",-1),dr=t("code",null,"有序集合",-1),_r=t("code",null,"3+",-1),ir={style:{"text-align":"left"}},ar=t("td",{style:{"text-align":"center"}},"2763",-1),cr={style:{"text-align":"left"}},rr={href:"https://leetcode.com/problems/sum-of-imbalance-numbers-of-all-subarrays",target:"_blank",rel:"noopener noreferrer"},hr=t("td",{style:{"text-align":"center"}},null,-1),ur={style:{"text-align":"left"}},fr=t("code",null,"数组",-1),gr=t("code",null,"哈希表",-1),mr=t("code",null,"有序集合",-1),yr={style:{"text-align":"left"}},xr=t("td",{style:{"text-align":"center"}},"2817",-1),br={style:{"text-align":"left"}},pr={href:"https://leetcode.com/problems/minimum-absolute-difference-between-elements-with-constraint",target:"_blank",rel:"noopener noreferrer"},kr=t("td",{style:{"text-align":"center"}},null,-1),Hr={style:{"text-align":"left"}},Mr=t("code",null,"数组",-1),vr=t("code",null,"二分查找",-1),qr=t("code",null,"有序集合",-1),Ir={style:{"text-align":"left"}},wr=t("td",{style:{"text-align":"center"}},"3073",-1),zr={style:{"text-align":"left"}},Lr={href:"https://leetcode.com/problems/maximum-increasing-triplet-value",target:"_blank",rel:"noopener noreferrer"},Cr=t("td",{style:{"text-align":"center"}},null,-1),Kr={style:{"text-align":"left"}},Br=t("code",null,"数组",-1),Er=t("code",null,"有序集合",-1),Nr={style:{"text-align":"left"}},Or=t("td",{style:{"text-align":"center"}},"3092",-1),Rr={style:{"text-align":"left"}},Vr={href:"https://leetcode.com/problems/most-frequent-ids",target:"_blank",rel:"noopener noreferrer"},jr=t("td",{style:{"text-align":"center"}},null,-1),Dr={style:{"text-align":"left"}},Pr=t("code",null,"数组",-1),Qr=t("code",null,"哈希表",-1),Gr=t("code",null,"有序集合",-1),Jr=t("code",null,"1+",-1),Sr={style:{"text-align":"left"}},Tr=t("td",{style:{"text-align":"center"}},"3102",-1),Ur={style:{"text-align":"left"}},Wr={href:"https://leetcode.com/problems/minimize-manhattan-distances",target:"_blank",rel:"noopener noreferrer"},Ar=t("td",{style:{"text-align":"center"}},null,-1),Fr={style:{"text-align":"left"}},Xr=t("code",null,"几何",-1),Yr=t("code",null,"数组",-1),Zr=t("code",null,"数学",-1),$r=t("code",null,"2+",-1),th={style:{"text-align":"left"}},eh=t("td",{style:{"text-align":"center"}},"3109",-1),lh={style:{"text-align":"left"}},oh={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},nh=t("td",{style:{"text-align":"center"}},null,-1),sh={style:{"text-align":"left"}},dh=t("code",null,"树状数组",-1),_h=t("code",null,"线段树",-1),ih=t("code",null,"数组",-1),ah=t("code",null,"4+",-1),ch={style:{"text-align":"left"}},rh=t("td",{style:{"text-align":"center"}},"3244",-1),hh={style:{"text-align":"left"}},uh={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-ii",target:"_blank",rel:"noopener noreferrer"},fh=t("td",{style:{"text-align":"center"}},null,-1),gh={style:{"text-align":"left"}},mh=t("code",null,"贪心",-1),yh=t("code",null,"图",-1),xh=t("code",null,"数组",-1),bh=t("code",null,"1+",-1),ph={style:{"text-align":"left"}},kh=t("td",{style:{"text-align":"center"}},"LCP 27",-1),Hh={style:{"text-align":"left"}},Mh={href:"https://leetcode.cn/problems/IQvJ9i",target:"_blank",rel:"noopener noreferrer"},vh=t("td",{style:{"text-align":"center"}},null,-1),qh={style:{"text-align":"left"}},Ih=t("code",null,"设计",-1),wh=t("code",null,"线段树",-1),zh=t("code",null,"数学",-1),Lh=t("code",null,"1+",-1),Ch={style:{"text-align":"left"}},Kh=t("td",{style:{"text-align":"center"}},"LCP 52",-1),Bh={style:{"text-align":"left"}},Eh={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},Nh=t("td",{style:{"text-align":"center"}},null,-1),Oh={style:{"text-align":"left"}},Rh=t("code",null,"树",-1),Vh=t("code",null,"线段树",-1),jh=t("code",null,"二叉搜索树",-1),Dh=t("code",null,"4+",-1),Ph={style:{"text-align":"left"}},Qh=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),Gh={style:{"text-align":"left"}},Jh={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},Sh=t("td",{style:{"text-align":"center"}},null,-1),Th={style:{"text-align":"left"}},Uh=t("code",null,"树状数组",-1),Wh=t("code",null,"线段树",-1),Ah=t("code",null,"数组",-1),Fh=t("code",null,"4+",-1),Xh={style:{"text-align":"left"}},Yh=t("td",{style:{"text-align":"center"}},"剑指 Offer II 57",-1),Zh={style:{"text-align":"left"}},$h={href:"https://leetcode.cn/problems/7WqeDu",target:"_blank",rel:"noopener noreferrer"},tu=t("td",{style:{"text-align":"center"}},null,-1),eu={style:{"text-align":"left"}},lu=t("code",null,"数组",-1),ou=t("code",null,"桶排序",-1),nu=t("code",null,"有序集合",-1),su=t("code",null,"2+",-1),du={style:{"text-align":"left"}},_u=t("td",{style:{"text-align":"center"}},"剑指 Offer II 58",-1),iu={style:{"text-align":"left"}},au={href:"https://leetcode.cn/problems/fi9suh",target:"_blank",rel:"noopener noreferrer"},cu=t("td",{style:{"text-align":"center"}},null,-1),ru={style:{"text-align":"left"}},hu=t("code",null,"设计",-1),uu=t("code",null,"线段树",-1),fu=t("code",null,"二分查找",-1),gu=t("code",null,"1+",-1),mu={style:{"text-align":"left"}};function yu(xu,bu){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[E]),_:1}),l(),N,l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[S]),_:1})]),T,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[Nt]),_:1})])]),Ot,r(" prettier-ignore "),t("table",null,[Rt,t("tbody",null,[t("tr",null,[Vt,t("td",jt,[t("a",Dt,[l("天际线问题"),e(s)])]),Pt,t("td",Qt,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Jt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[St]),_:1}),l(),Tt]),t("td",Ut,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wt,t("td",At,[t("a",Ft,[l("存在重复元素 III"),e(s)])]),Xt,t("td",Yt,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("计算右侧小于当前元素的个数"),e(s)])]),de,t("td",_e,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ce]),_:1}),l(),re]),t("td",he,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("区间和的个数"),e(s)])]),me,t("td",ye,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pe]),_:1}),l(),ke]),t("td",He,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Me,t("td",ve,[t("a",qe,[l("将数据流变为多个不相交区间"),e(s)])]),Ie,t("td",we,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ze]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Ce]),_:1})]),t("td",Ke,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Be,t("td",Ee,[t("a",Ne,[l("矩形区域不超过 K 的最大数值和"),e(s)])]),Oe,t("td",Re,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ve]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[je]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[De]),_:1}),l(),Pe]),t("td",Qe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ge,t("td",Je,[t("a",Se,[l("132 模式"),e(s)])]),Te,t("td",Ue,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[We]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ae]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Fe]),_:1}),l(),Xe]),t("td",Ye,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ze,t("td",$e,[t("a",tl,[l("翻转对"),e(s)])]),el,t("td",ll,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ol]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sl]),_:1}),l(),dl]),t("td",_l,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[il,t("td",al,[t("a",cl,[l("非重叠矩形中的随机点"),e(s)])]),rl,t("td",hl,[e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[ul]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[gl]),_:1}),l(),ml]),t("td",yl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xl,t("td",bl,[t("a",pl,[l("设计日志存储系统"),e(s)])]),kl,t("td",Hl,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ql]),_:1}),l(),Il]),t("td",wl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zl,t("td",Ll,[t("a",Cl,[l("K 个关闭的灯泡"),e(s)])]),Kl,t("td",Bl,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[El]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Nl]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Ol]),_:1}),l(),Rl]),t("td",Vl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jl,t("td",Dl,[t("a",Pl,[l("掉落的方块"),e(s)])]),Ql,t("td",Gl,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sl]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Tl]),_:1})]),t("td",Ul,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wl,t("td",Al,[t("a",Fl,[l("Range 模块"),e(s)])]),Xl,t("td",Yl,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Zl]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[to]),_:1})]),t("td",eo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",no,[l("最大栈"),e(s)])]),so,t("td",_o,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[co]),_:1}),l(),ro]),t("td",ho,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[l("我的日程安排表 I"),e(s)])]),t("td",mo,[t("a",yo,[l("[✓]"),e(s)])]),t("td",xo,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[po]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ko]),_:1}),l(),Ho]),t("td",Mo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vo,t("td",qo,[t("a",Io,[l("我的日程安排表 II"),e(s)])]),t("td",wo,[t("a",zo,[l("[✓]"),e(s)])]),t("td",Lo,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Co]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Ko]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Bo]),_:1}),l(),Eo]),t("td",No,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oo,t("td",Ro,[t("a",Vo,[l("我的日程安排表 III"),e(s)])]),jo,t("td",Do,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Po]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Qo]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[Go]),_:1}),l(),Jo]),t("td",So,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[To,t("td",Uo,[t("a",Wo,[l("矩形面积 II"),e(s)])]),Ao,t("td",Fo,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Xo]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yo]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Zo]),_:1}),l(),$o]),t("td",tn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[en,t("td",ln,[t("a",on,[l("考场就座"),e(s)])]),nn,t("td",sn,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[dn]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[_n]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[an]),_:1})]),t("td",cn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rn,t("td",hn,[t("a",un,[l("最大频率栈"),e(s)])]),fn,t("td",gn,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[xn]),_:1}),l(),bn]),t("td",pn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kn,t("td",Hn,[t("a",Mn,[l("奇偶跳"),e(s)])]),vn,t("td",qn,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[In]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[zn]),_:1}),l(),Ln]),t("td",Cn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kn,t("td",Bn,[t("a",En,[l("推文计数"),e(s)])]),Nn,t("td",On,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Rn]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Vn]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[jn]),_:1}),l(),Dn]),t("td",Pn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qn,t("td",Gn,[t("a",Jn,[l("点菜展示表"),e(s)])]),Sn,t("td",Tn,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Un]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Wn]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[An]),_:1}),l(),Fn]),t("td",Xn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yn,t("td",Zn,[t("a",$n,[l("绝对差不超过限制的最长连续子数组"),e(s)])]),ts,t("td",es,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[ns]),_:1}),l(),ss]),t("td",ds,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_s,t("td",is,[t("a",as,[l("找到处理最多请求的服务器"),e(s)])]),cs,t("td",rs,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[hs]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[fs]),_:1}),l(),gs]),t("td",ms,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",bs,[l("通过指令创建有序数组"),e(s)])]),ps,t("td",ks,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Hs]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Ms]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vs]),_:1}),l(),qs]),t("td",Is,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ws,t("td",zs,[t("a",Ls,[l("数组的最小偏移量"),e(s)])]),Cs,t("td",Ks,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Es]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Ns]),_:1}),l(),Os]),t("td",Rs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vs,t("td",js,[t("a",Ds,[l("设计最近使用（MRU）队列"),e(s)])]),Ps,t("td",Qs,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Js]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ss]),_:1}),l(),Ts]),t("td",Us,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ws,t("td",As,[t("a",Fs,[l("绝对差值和"),e(s)])]),Xs,t("td",Ys,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[$s]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[td]),_:1}),l(),ed]),t("td",ld,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[od,t("td",nd,[t("a",sd,[l("求出 MK 平均值"),e(s)])]),dd,t("td",_d,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[id]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[ad]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[cd]),_:1}),l(),rd]),t("td",hd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ud,t("td",fd,[t("a",gd,[l("最近的房间"),e(s)])]),md,t("td",yd,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xd]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[bd]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[pd]),_:1}),l(),kd]),t("td",Hd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Md,t("td",vd,[t("a",qd,[l("给定二叉搜索树的插入顺序求深度"),e(s)])]),Id,t("td",wd,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[zd]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Ld]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Cd]),_:1}),l(),Kd]),t("td",Bd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ed,t("td",Nd,[t("a",Od,[l("设计电影租借系统"),e(s)])]),Rd,t("td",Vd,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[jd]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Dd]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Pd]),_:1}),l(),Qd]),t("td",Gd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jd,t("td",Sd,[t("a",Td,[l("街上最亮的位置"),e(s)])]),Ud,t("td",Wd,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ad]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Fd]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[Xd]),_:1})]),t("td",Yd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zd,t("td",$d,[t("a",t_,[l("1 比 0 多的子数组个数"),e(s)])]),e_,t("td",l_,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[o_]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[n_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[s_]),_:1}),l(),d_]),t("td",__,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i_,t("td",a_,[t("a",c_,[l("股票价格波动"),e(s)])]),r_,t("td",h_,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[u_]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[f_]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[g_]),_:1}),l(),m_]),t("td",y_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x_,t("td",b_,[t("a",p_,[l("将数组分成两个数组并最小化数组和的差"),e(s)])]),k_,t("td",H_,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[M_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[v_]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[q_]),_:1}),l(),I_]),t("td",w_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z_,t("td",L_,[t("a",C_,[l("序列顺序查询"),e(s)])]),K_,t("td",B_,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[E_]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[N_]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[O_]),_:1}),l(),R_]),t("td",V_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j_,t("td",D_,[t("a",P_,[l("每天绘制新区域的数量"),e(s)])]),Q_,t("td",G_,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[J_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[S_]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[T_]),_:1})]),t("td",U_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W_,t("td",A_,[t("a",F_,[l("统计数组中好三元组数目"),e(s)])]),X_,t("td",Y_,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Z_]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[$_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ti]),_:1}),l(),ei]),t("td",li,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oi,t("td",ni,[t("a",si,[l("由单个字符重复的最长子字符串"),e(s)])]),di,t("td",_i,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ii]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ai]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[ci]),_:1}),l(),ri]),t("td",hi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ui,t("td",fi,[t("a",gi,[l("花期内花的数目"),e(s)])]),mi,t("td",yi,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xi]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[bi]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[pi]),_:1}),l(),ki]),t("td",Hi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mi,t("td",vi,[t("a",qi,[l("设计视频共享平台"),e(s)])]),Ii,t("td",wi,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[zi]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Li]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ci]),_:1}),l(),Ki]),t("td",Bi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ei,t("td",Ni,[t("a",Oi,[l("统计区间中的整数数目"),e(s)])]),Ri,t("td",Vi,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ji]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Di]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Pi]),_:1})]),t("td",Qi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gi,t("td",Ji,[t("a",Si,[l("无限集中的最小数字"),e(s)])]),Ti,t("td",Ui,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Wi]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Ai]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Fi]),_:1}),l(),Xi]),t("td",Yi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zi,t("td",$i,[t("a",ta,[l("设计数字容器系统"),e(s)])]),ea,t("td",la,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[oa]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[na]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[sa]),_:1}),l(),da]),t("td",_a,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ia,t("td",aa,[t("a",ca,[l("设计食物评分系统"),e(s)])]),ra,t("td",ha,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ua]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[fa]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[ga]),_:1}),l(),ma]),t("td",ya,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xa,t("td",ba,[t("a",pa,[l("合并相似的物品"),e(s)])]),ka,t("td",Ha,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ma]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[va]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[qa]),_:1}),l(),Ia]),t("td",wa,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[za,t("td",La,[t("a",Ca,[l("删除操作后的最大子段和"),e(s)])]),Ka,t("td",Ba,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ea]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Na]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Oa]),_:1}),l(),Ra]),t("td",Va,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ja,t("td",Da,[t("a",Pa,[l("最长上传前缀"),e(s)])]),Qa,t("td",Ga,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ja]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Sa]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ta]),_:1}),l(),Ua]),t("td",Wa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Aa,t("td",Fa,[t("a",Xa,[l("满足不等式的数对数目"),e(s)])]),Ya,t("td",Za,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[$a]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[tc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ec]),_:1}),l(),lc]),t("td",oc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nc,t("td",sc,[t("a",dc,[l("统计 K-Big 索引的数量"),e(s)])]),_c,t("td",ic,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ac]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[cc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rc]),_:1}),l(),hc]),t("td",uc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fc,t("td",gc,[t("a",mc,[l("最少翻转操作数"),e(s)])]),yc,t("td",xc,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pc]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[kc]),_:1})]),t("td",Hc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mc,t("td",vc,[t("a",qc,[l("美数对"),e(s)])]),Ic,t("td",wc,[e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[zc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Lc]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Cc]),_:1}),l(),Kc]),t("td",Bc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ec,t("td",Nc,[t("a",Oc,[l("将数组清空"),e(s)])]),Rc,t("td",Vc,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[jc]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Dc]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Pc]),_:1}),l(),Qc]),t("td",Gc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jc,t("td",Sc,[t("a",Tc,[l("矩阵中严格递增的单元格数"),e(s)])]),Uc,t("td",Wc,[e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Ac]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fc]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Xc]),_:1}),l(),Yc]),t("td",Zc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$c,t("td",tr,[t("a",er,[l("不间断子数组"),e(s)])]),lr,t("td",or,[e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[nr]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[sr]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[dr]),_:1}),l(),_r]),t("td",ir,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ar,t("td",cr,[t("a",rr,[l("所有子数组中不平衡数字之和"),e(s)])]),hr,t("td",ur,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fr]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[gr]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[mr]),_:1})]),t("td",yr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xr,t("td",br,[t("a",pr,[l("限制条件下元素之间的最小绝对差"),e(s)])]),kr,t("td",Hr,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Mr]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[vr]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[qr]),_:1})]),t("td",Ir,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wr,t("td",zr,[t("a",Lr,[l("最大递增三元组"),e(s)])]),Cr,t("td",Kr,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Br]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Er]),_:1})]),t("td",Nr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Or,t("td",Rr,[t("a",Vr,[l("最高频率的 ID"),e(s)])]),jr,t("td",Dr,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Pr]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[Qr]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Gr]),_:1}),l(),Jr]),t("td",Sr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tr,t("td",Ur,[t("a",Wr,[l("最小化曼哈顿距离"),e(s)])]),Ar,t("td",Fr,[e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[Xr]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Yr]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Zr]),_:1}),l(),$r]),t("td",th,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eh,t("td",lh,[t("a",oh,[l("查找排列的下标"),e(s)])]),nh,t("td",sh,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[dh]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[_h]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ih]),_:1}),l(),ah]),t("td",ch,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rh,t("td",hh,[t("a",uh,[l("新增道路查询后的最短距离 II"),e(s)])]),fh,t("td",gh,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[mh]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[yh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xh]),_:1}),l(),bh]),t("td",ph,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kh,t("td",Hh,[t("a",Mh,[l("黑盒光线反射"),e(s)])]),vh,t("td",qh,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ih]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[wh]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[zh]),_:1}),l(),Lh]),t("td",Ch,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kh,t("td",Bh,[t("a",Eh,[l("二叉搜索树染色"),e(s)])]),Nh,t("td",Oh,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Rh]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Vh]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[jh]),_:1}),l(),Dh]),t("td",Ph,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qh,t("td",Gh,[t("a",Jh,[l("数组中的逆序对"),e(s)])]),Sh,t("td",Th,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Uh]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Wh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ah]),_:1}),l(),Fh]),t("td",Xh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yh,t("td",Zh,[t("a",$h,[l("值和下标之差都在给定的范围内"),e(s)])]),tu,t("td",eu,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[lu]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[ou]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[nu]),_:1}),l(),su]),t("td",du,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_u,t("td",iu,[t("a",au,[l("日程表"),e(s)])]),cu,t("td",ru,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[hu]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[uu]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[fu]),_:1}),l(),gu]),t("td",mu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const ku=i(h,[["render",yu],["__file","ordered-set.html.vue"]]);export{ku as default};
