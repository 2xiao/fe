import{_ as i,r as _,o as a,c,a as t,b as e,w as l,d as o,f as r}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"字符串匹配",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字符串匹配","aria-hidden":"true"},"#"),o(" 字符串匹配")],-1),g={class:"hint-container details"},f=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),w=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),E=t("code",null,"哈希表",-1),M=t("code",null,"字符串",-1),q=t("span",{class:"blue"},"字符串匹配",-1),L=t("code",null,"树",-1),N=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),B=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),z=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),T=t("code",null,"强连通分量",-1),A=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),F=t("code",null,"并查集",-1),G=t("code",null,"字典树",-1),J=t("code",null,"线段树",-1),K=t("code",null,"树状数组",-1),O=t("code",null,"后缀数组",-1),P=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),gt=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),wt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),Et=t("code",null,"水塘抽样",-1),Mt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Nt=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),Bt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),zt=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Tt=t("td",{style:{"text-align":"center"}},"28",-1),At={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"center"}},Gt={href:"/problem/0028",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"left"}},Kt=t("code",null,"双指针",-1),Ot=t("code",null,"字符串",-1),Pt=t("code",null,"字符串匹配",-1),Qt={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"214",-1),Ut={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"字符串",-1),$t=t("code",null,"字符串匹配",-1),te=t("code",null,"哈希函数",-1),ee=t("code",null,"1+",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"459",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},_e={href:"/problem/0459",target:"_blank",rel:"noopener noreferrer"},ie={style:{"text-align":"left"}},ae=t("code",null,"字符串",-1),ce=t("code",null,"字符串匹配",-1),re={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"572",-1),ue={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},fe={style:{"text-align":"center"}},me={href:"/problem/0572",target:"_blank",rel:"noopener noreferrer"},ye={style:{"text-align":"left"}},xe=t("code",null,"树",-1),pe=t("code",null,"深度优先搜索",-1),be=t("code",null,"二叉树",-1),ke=t("code",null,"2+",-1),we={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"center"}},"616",-1),He={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/add-bold-tag-in-string",target:"_blank",rel:"noopener noreferrer"},Ee=t("td",{style:{"text-align":"center"}},null,-1),Me={style:{"text-align":"left"}},qe=t("code",null,"字典树",-1),Le=t("code",null,"数组",-1),Ne=t("code",null,"哈希表",-1),Ve=t("code",null,"2+",-1),Be={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"686",-1),ze={style:{"text-align":"left"}},Re={href:"https://leetcode.com/problems/repeated-string-match",target:"_blank",rel:"noopener noreferrer"},je=t("td",{style:{"text-align":"center"}},null,-1),Te={style:{"text-align":"left"}},Ae=t("code",null,"字符串",-1),De=t("code",null,"字符串匹配",-1),Fe={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"758",-1),Je={style:{"text-align":"left"}},Ke={href:"https://leetcode.com/problems/bold-words-in-string",target:"_blank",rel:"noopener noreferrer"},Oe=t("td",{style:{"text-align":"center"}},null,-1),Pe={style:{"text-align":"left"}},Qe=t("code",null,"字典树",-1),Se=t("code",null,"数组",-1),Ue=t("code",null,"哈希表",-1),We=t("code",null,"2+",-1),Xe={style:{"text-align":"left"}},Ye=t("td",{style:{"text-align":"center"}},"796",-1),Ze={style:{"text-align":"left"}},$e={href:"https://leetcode.com/problems/rotate-string",target:"_blank",rel:"noopener noreferrer"},to=t("td",{style:{"text-align":"center"}},null,-1),eo={style:{"text-align":"left"}},oo=t("code",null,"字符串",-1),lo=t("code",null,"字符串匹配",-1),no={style:{"text-align":"left"}},so=t("td",{style:{"text-align":"center"}},"1023",-1),_o={style:{"text-align":"left"}},io={href:"https://leetcode.com/problems/camelcase-matching",target:"_blank",rel:"noopener noreferrer"},ao=t("td",{style:{"text-align":"center"}},null,-1),co={style:{"text-align":"left"}},ro=t("code",null,"字典树",-1),ho=t("code",null,"数组",-1),uo=t("code",null,"双指针",-1),go=t("code",null,"2+",-1),fo={style:{"text-align":"left"}},mo=t("td",{style:{"text-align":"center"}},"1392",-1),yo={style:{"text-align":"left"}},xo={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},po=t("td",{style:{"text-align":"center"}},null,-1),bo={style:{"text-align":"left"}},ko=t("code",null,"字符串",-1),wo=t("code",null,"字符串匹配",-1),Io=t("code",null,"哈希函数",-1),Ho=t("code",null,"1+",-1),vo={style:{"text-align":"left"}},Eo=t("td",{style:{"text-align":"center"}},"1397",-1),Mo={style:{"text-align":"left"}},qo={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},Lo=t("td",{style:{"text-align":"center"}},null,-1),No={style:{"text-align":"left"}},Vo=t("code",null,"字符串",-1),Bo=t("code",null,"动态规划",-1),Co=t("code",null,"字符串匹配",-1),zo={style:{"text-align":"left"}},Ro=t("td",{style:{"text-align":"center"}},"1408",-1),jo={style:{"text-align":"left"}},To={href:"https://leetcode.com/problems/string-matching-in-an-array",target:"_blank",rel:"noopener noreferrer"},Ao=t("td",{style:{"text-align":"center"}},null,-1),Do={style:{"text-align":"left"}},Fo=t("code",null,"数组",-1),Go=t("code",null,"字符串",-1),Jo=t("code",null,"字符串匹配",-1),Ko={style:{"text-align":"left"}},Oo=t("td",{style:{"text-align":"center"}},"1455",-1),Po={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",target:"_blank",rel:"noopener noreferrer"},So=t("td",{style:{"text-align":"center"}},null,-1),Uo={style:{"text-align":"left"}},Wo=t("code",null,"双指针",-1),Xo=t("code",null,"字符串",-1),Yo=t("code",null,"字符串匹配",-1),Zo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"1668",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},ol=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},nl=t("code",null,"字符串",-1),sl=t("code",null,"动态规划",-1),dl=t("code",null,"字符串匹配",-1),_l={style:{"text-align":"left"}},il=t("td",{style:{"text-align":"center"}},"1764",-1),al={style:{"text-align":"left"}},cl={href:"https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array",target:"_blank",rel:"noopener noreferrer"},rl=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},ul=t("code",null,"贪心",-1),gl=t("code",null,"数组",-1),fl=t("code",null,"双指针",-1),ml=t("code",null,"1+",-1),yl={style:{"text-align":"left"}},xl=t("td",{style:{"text-align":"center"}},"2185",-1),pl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/counting-words-with-a-given-prefix",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),wl={style:{"text-align":"left"}},Il=t("code",null,"数组",-1),Hl=t("code",null,"字符串",-1),vl=t("code",null,"字符串匹配",-1),El={style:{"text-align":"left"}},Ml=t("td",{style:{"text-align":"center"}},"2223",-1),ql={style:{"text-align":"left"}},Ll={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},Nl=t("td",{style:{"text-align":"center"}},null,-1),Vl={style:{"text-align":"left"}},Bl=t("code",null,"字符串",-1),Cl=t("code",null,"二分查找",-1),zl=t("code",null,"字符串匹配",-1),Rl=t("code",null,"3+",-1),jl={style:{"text-align":"left"}},Tl=t("td",{style:{"text-align":"center"}},"2301",-1),Al={style:{"text-align":"left"}},Dl={href:"https://leetcode.com/problems/match-substring-after-replacement",target:"_blank",rel:"noopener noreferrer"},Fl=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Jl=t("code",null,"数组",-1),Kl=t("code",null,"哈希表",-1),Ol=t("code",null,"字符串",-1),Pl=t("code",null,"1+",-1),Ql={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"2430",-1),Ul={style:{"text-align":"left"}},Wl={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},Xl=t("td",{style:{"text-align":"center"}},null,-1),Yl={style:{"text-align":"left"}},Zl=t("code",null,"字符串",-1),$l=t("code",null,"动态规划",-1),tn=t("code",null,"字符串匹配",-1),en=t("code",null,"2+",-1),on={style:{"text-align":"left"}},ln=t("td",{style:{"text-align":"center"}},"2851",-1),nn={style:{"text-align":"left"}},sn={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},null,-1),_n={style:{"text-align":"left"}},an=t("code",null,"数学",-1),cn=t("code",null,"字符串",-1),rn=t("code",null,"动态规划",-1),hn=t("code",null,"1+",-1),un={style:{"text-align":"left"}},gn=t("td",{style:{"text-align":"center"}},"3006",-1),fn={style:{"text-align":"left"}},mn={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},yn=t("td",{style:{"text-align":"center"}},null,-1),xn={style:{"text-align":"left"}},pn=t("code",null,"双指针",-1),bn=t("code",null,"字符串",-1),kn=t("code",null,"二分查找",-1),wn=t("code",null,"3+",-1),In={style:{"text-align":"left"}},Hn=t("td",{style:{"text-align":"center"}},"3008",-1),vn={style:{"text-align":"left"}},En={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},Mn=t("td",{style:{"text-align":"center"}},null,-1),qn={style:{"text-align":"left"}},Ln=t("code",null,"双指针",-1),Nn=t("code",null,"字符串",-1),Vn=t("code",null,"二分查找",-1),Bn=t("code",null,"3+",-1),Cn={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"3023",-1),Rn={style:{"text-align":"left"}},jn={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Tn=t("td",{style:{"text-align":"center"}},null,-1),An={style:{"text-align":"left"}},Dn=t("code",null,"数组",-1),Fn=t("code",null,"字符串匹配",-1),Gn=t("code",null,"滑动窗口",-1),Jn=t("code",null,"2+",-1),Kn={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"center"}},"3029",-1),Pn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},null,-1),Un={style:{"text-align":"left"}},Wn=t("code",null,"字符串",-1),Xn=t("code",null,"字符串匹配",-1),Yn=t("code",null,"哈希函数",-1),Zn=t("code",null,"1+",-1),$n={style:{"text-align":"left"}},ts=t("td",{style:{"text-align":"center"}},"3031",-1),es={style:{"text-align":"left"}},os={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},null,-1),ns={style:{"text-align":"left"}},ss=t("code",null,"字符串",-1),ds=t("code",null,"字符串匹配",-1),_s=t("code",null,"哈希函数",-1),is=t("code",null,"1+",-1),as={style:{"text-align":"left"}},cs=t("td",{style:{"text-align":"center"}},"3034",-1),rs={style:{"text-align":"left"}},hs={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},null,-1),gs={style:{"text-align":"left"}},fs=t("code",null,"数组",-1),ms=t("code",null,"字符串匹配",-1),ys=t("code",null,"哈希函数",-1),xs=t("code",null,"1+",-1),ps={style:{"text-align":"left"}},bs=t("td",{style:{"text-align":"center"}},"3036",-1),ks={style:{"text-align":"left"}},ws={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},Is=t("td",{style:{"text-align":"center"}},null,-1),Hs={style:{"text-align":"left"}},vs=t("code",null,"数组",-1),Es=t("code",null,"字符串匹配",-1),Ms=t("code",null,"哈希函数",-1),qs=t("code",null,"1+",-1),Ls={style:{"text-align":"left"}},Ns=t("td",{style:{"text-align":"center"}},"3037",-1),Vs={style:{"text-align":"left"}},Bs={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Cs=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Rs=t("code",null,"数组",-1),js=t("code",null,"字符串匹配",-1),Ts=t("code",null,"滑动窗口",-1),As=t("code",null,"2+",-1),Ds={style:{"text-align":"left"}},Fs=t("td",{style:{"text-align":"center"}},"3042",-1),Gs={style:{"text-align":"left"}},Js={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Ks=t("td",{style:{"text-align":"center"}},null,-1),Os={style:{"text-align":"left"}},Ps=t("code",null,"字典树",-1),Qs=t("code",null,"数组",-1),Ss=t("code",null,"字符串",-1),Us=t("code",null,"3+",-1),Ws={style:{"text-align":"left"}},Xs=t("td",{style:{"text-align":"center"}},"3045",-1),Ys={style:{"text-align":"left"}},Zs={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},$s=t("td",{style:{"text-align":"center"}},null,-1),td={style:{"text-align":"left"}},ed=t("code",null,"字典树",-1),od=t("code",null,"数组",-1),ld=t("code",null,"字符串",-1),nd=t("code",null,"3+",-1),sd={style:{"text-align":"left"}},dd=t("td",{style:{"text-align":"center"}},"3291",-1),_d={style:{"text-align":"left"}},id={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},ad=t("td",{style:{"text-align":"center"}},null,-1),cd={style:{"text-align":"left"}},rd=t("code",null,"字典树",-1),hd=t("code",null,"线段树",-1),ud=t("code",null,"数组",-1),gd=t("code",null,"6+",-1),fd={style:{"text-align":"left"}},md=t("td",{style:{"text-align":"center"}},"3292",-1),yd={style:{"text-align":"left"}},xd={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},pd=t("td",{style:{"text-align":"center"}},null,-1),bd={style:{"text-align":"left"}},kd=t("code",null,"线段树",-1),wd=t("code",null,"数组",-1),Id=t("code",null,"字符串",-1),Hd=t("code",null,"5+",-1),vd={style:{"text-align":"left"}},Ed=t("td",{style:{"text-align":"center"}},"3303",-1),Md={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/find-the-occurrence-of-first-almost-equal-substring",target:"_blank",rel:"noopener noreferrer"},Ld=t("td",{style:{"text-align":"center"}},null,-1),Nd={style:{"text-align":"left"}},Vd=t("code",null,"字符串",-1),Bd=t("code",null,"字符串匹配",-1),Cd={style:{"text-align":"left"}},zd=t("td",{style:{"text-align":"center"}},"面试题 01.09",-1),Rd={style:{"text-align":"left"}},jd={href:"https://leetcode.cn/problems/string-rotation-lcci",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},null,-1),Ad={style:{"text-align":"left"}},Dd=t("code",null,"字符串",-1),Fd=t("code",null,"字符串匹配",-1),Gd={style:{"text-align":"left"}},Jd=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Kd={style:{"text-align":"left"}},Od={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Pd=t("td",{style:{"text-align":"center"}},null,-1),Qd={style:{"text-align":"left"}},Sd=t("code",null,"树",-1),Ud=t("code",null,"深度优先搜索",-1),Wd=t("code",null,"二叉树",-1),Xd=t("code",null,"2+",-1),Yd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"面试题 17.17",-1),$d={style:{"text-align":"left"}},t_={href:"https://leetcode.cn/problems/multi-search-lcci",target:"_blank",rel:"noopener noreferrer"},e_=t("td",{style:{"text-align":"center"}},null,-1),o_={style:{"text-align":"left"}},l_=t("code",null,"字典树",-1),n_=t("code",null,"数组",-1),s_=t("code",null,"哈希表",-1),d_=t("code",null,"3+",-1),__={style:{"text-align":"left"}};function i_(a_,c_){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",g,[f,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/outline/tag/linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/outline/tag/queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[M]),_:1}),o(),q,o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/outline/tag/binary-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/outline/tag/ordered-set.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/outline/tag/suffix-array.html"},{default:l(()=>[O]),_:1})]),P,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/outline/tag/counting.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/outline/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/outline/tag/simulation.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/outline/tag/randomized.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/outline/tag/database.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/outline/tag/data-stream.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/outline/tag/brainteaser.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/outline/tag/interactive.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/outline/tag/iterator.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/outline/tag/concurrency.html"},{default:l(()=>[zt]),_:1})])]),Rt,r(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Tt,t("td",At,[t("a",Dt,[o("找出字符串中第一个匹配项的下标"),e(s)])]),t("td",Ft,[t("a",Gt,[o("[✓]"),e(s)])]),t("td",Jt,[e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[Kt]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ot]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Pt]),_:1})]),t("td",Qt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[St,t("td",Ut,[t("a",Wt,[o("最短回文串"),e(s)])]),Xt,t("td",Yt,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Zt]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[te]),_:1}),o(),ee]),t("td",oe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[le,t("td",ne,[t("a",se,[o("重复的子字符串"),e(s)])]),t("td",de,[t("a",_e,[o("[✓]"),e(s)])]),t("td",ie,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[ce]),_:1})]),t("td",re,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[he,t("td",ue,[t("a",ge,[o("另一棵树的子树"),e(s)])]),t("td",fe,[t("a",me,[o("[✓]"),e(s)])]),t("td",ye,[e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/outline/tag/binary-tree.html"},{default:l(()=>[be]),_:1}),o(),ke]),t("td",we,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ie,t("td",He,[t("a",ve,[o("给字符串添加加粗标签"),e(s)])]),Ee,t("td",Me,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[qe]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Le]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[Ne]),_:1}),o(),Ve]),t("td",Be,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ce,t("td",ze,[t("a",Re,[o("重复叠加字符串匹配"),e(s)])]),je,t("td",Te,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ae]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[De]),_:1})]),t("td",Fe,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ge,t("td",Je,[t("a",Ke,[o("字符串中的加粗单词"),e(s)])]),Oe,t("td",Pe,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[Qe]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Se]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[Ue]),_:1}),o(),We]),t("td",Xe,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ye,t("td",Ze,[t("a",$e,[o("旋转字符串"),e(s)])]),to,t("td",eo,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[oo]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[lo]),_:1})]),t("td",no,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[so,t("td",_o,[t("a",io,[o("驼峰式匹配"),e(s)])]),ao,t("td",co,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[ro]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ho]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[uo]),_:1}),o(),go]),t("td",fo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mo,t("td",yo,[t("a",xo,[o("最长快乐前缀"),e(s)])]),po,t("td",bo,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[ko]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[wo]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[Io]),_:1}),o(),Ho]),t("td",vo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Eo,t("td",Mo,[t("a",qo,[o("找到所有好字符串"),e(s)])]),Lo,t("td",No,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Vo]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Bo]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Co]),_:1})]),t("td",zo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ro,t("td",jo,[t("a",To,[o("数组中的字符串匹配"),e(s)])]),Ao,t("td",Do,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Fo]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Go]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Jo]),_:1})]),t("td",Ko,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Oo,t("td",Po,[t("a",Qo,[o("检查单词是否为句中其他单词的前缀"),e(s)])]),So,t("td",Uo,[e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[Wo]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Xo]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Yo]),_:1})]),t("td",Zo,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[$o,t("td",tl,[t("a",el,[o("最大重复子字符串"),e(s)])]),ol,t("td",ll,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[nl]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[sl]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[dl]),_:1})]),t("td",_l,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[il,t("td",al,[t("a",cl,[o("通过连接另一个数组的子数组得到一个数组"),e(s)])]),rl,t("td",hl,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[ul]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[gl]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[fl]),_:1}),o(),ml]),t("td",yl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xl,t("td",pl,[t("a",bl,[o("统计包含给定前缀的字符串"),e(s)])]),kl,t("td",wl,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Il]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Hl]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[vl]),_:1})]),t("td",El,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ml,t("td",ql,[t("a",Ll,[o("构造字符串的总得分和"),e(s)])]),Nl,t("td",Vl,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Bl]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[Cl]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[zl]),_:1}),o(),Rl]),t("td",jl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Tl,t("td",Al,[t("a",Dl,[o("替换字符后匹配"),e(s)])]),Fl,t("td",Gl,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Jl]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[Kl]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ol]),_:1}),o(),Pl]),t("td",Ql,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Sl,t("td",Ul,[t("a",Wl,[o("对字母串可执行的最大删除数"),e(s)])]),Xl,t("td",Yl,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Zl]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[$l]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[tn]),_:1}),o(),en]),t("td",on,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ln,t("td",nn,[t("a",sn,[o("字符串转换"),e(s)])]),dn,t("td",_n,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[an]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[cn]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[rn]),_:1}),o(),hn]),t("td",un,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gn,t("td",fn,[t("a",mn,[o("找出数组中的美丽下标 I"),e(s)])]),yn,t("td",xn,[e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[pn]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[bn]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[kn]),_:1}),o(),wn]),t("td",In,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Hn,t("td",vn,[t("a",En,[o("找出数组中的美丽下标 II"),e(s)])]),Mn,t("td",qn,[e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[Ln]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Nn]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[Vn]),_:1}),o(),Bn]),t("td",Cn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[zn,t("td",Rn,[t("a",jn,[o("在无限流中寻找模式 I"),e(s)])]),Tn,t("td",An,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Dn]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Fn]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[Gn]),_:1}),o(),Jn]),t("td",Kn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[On,t("td",Pn,[t("a",Qn,[o("将单词恢复初始状态所需的最短时间 I"),e(s)])]),Sn,t("td",Un,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Wn]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Xn]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[Yn]),_:1}),o(),Zn]),t("td",$n,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ts,t("td",es,[t("a",os,[o("将单词恢复初始状态所需的最短时间 II"),e(s)])]),ls,t("td",ns,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[ss]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[ds]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[_s]),_:1}),o(),is]),t("td",as,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[cs,t("td",rs,[t("a",hs,[o("匹配模式数组的子数组数目 I"),e(s)])]),us,t("td",gs,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[fs]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[ms]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[ys]),_:1}),o(),xs]),t("td",ps,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bs,t("td",ks,[t("a",ws,[o("匹配模式数组的子数组数目 II"),e(s)])]),Is,t("td",Hs,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[vs]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Es]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[Ms]),_:1}),o(),qs]),t("td",Ls,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ns,t("td",Vs,[t("a",Bs,[o("在无限流中寻找模式 II"),e(s)])]),Cs,t("td",zs,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Rs]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[js]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[Ts]),_:1}),o(),As]),t("td",Ds,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Fs,t("td",Gs,[t("a",Js,[o("统计前后缀下标对 I"),e(s)])]),Ks,t("td",Os,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[Ps]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Qs]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ss]),_:1}),o(),Us]),t("td",Ws,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Xs,t("td",Ys,[t("a",Zs,[o("统计前后缀下标对 II"),e(s)])]),$s,t("td",td,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[ed]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[od]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[ld]),_:1}),o(),nd]),t("td",sd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[dd,t("td",_d,[t("a",id,[o("形成目标字符串需要的最少字符串数 I"),e(s)])]),ad,t("td",cd,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[rd]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[hd]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ud]),_:1}),o(),gd]),t("td",fd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[md,t("td",yd,[t("a",xd,[o("形成目标字符串需要的最少字符串数 II"),e(s)])]),pd,t("td",bd,[e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[kd]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[wd]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Id]),_:1}),o(),Hd]),t("td",vd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ed,t("td",Md,[t("a",qd,[o("第一个几乎相等子字符串的下标"),e(s)])]),Ld,t("td",Nd,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Vd]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Bd]),_:1})]),t("td",Cd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[zd,t("td",Rd,[t("a",jd,[o("字符串轮转"),e(s)])]),Td,t("td",Ad,[e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Dd]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[Fd]),_:1})]),t("td",Gd,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Jd,t("td",Kd,[t("a",Od,[o("检查子树"),e(s)])]),Pd,t("td",Qd,[e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[Sd]),_:1}),o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Ud]),_:1}),o(),e(n,{to:"/outline/tag/binary-tree.html"},{default:l(()=>[Wd]),_:1}),o(),Xd]),t("td",Yd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Zd,t("td",$d,[t("a",t_,[o("多次搜索"),e(s)])]),e_,t("td",o_,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[l_]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[n_]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[s_]),_:1}),o(),d_]),t("td",__,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const h_=i(h,[["render",i_],["__file","string-matching.html.vue"]]);export{h_ as default};
