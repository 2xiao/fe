import{_ as p,r as l,o as i,c as d,a as e,b as t,d as n,w as s,f as u,e as r}from"./app-eWqPJ3k8.js";const _={},h=e("h1",{id:"_7-整数反转",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_7-整数反转","aria-hidden":"true"},"#"),t(" 7. 整数反转")],-1),k=e("code",null,"数学",-1),m={href:"https://leetcode.cn/problems/reverse-integer",target:"_blank",rel:"noopener noreferrer"},b=e("code",null,"力扣",-1),g={href:"https://leetcode.com/problems/reverse-integer",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"LeetCode",-1),v=r('<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given a signed 32-bit integer <code>x</code>, return <code>x</code> <em>with its digits reversed</em>. If reversing <code>x</code> causes the value to go outside the signed 32-bit integer range <code>[-2^31, 2^31 - 1]</code>, then return <code>0</code>.</p><p><strong>Assume the environment does not allow you to store 64-bit integers (signed or unsigned).</strong></p><p><strong>Example 1:</strong></p><blockquote><p>Input: x = 123</p><p>Output: 321</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: x = -123</p><p>Output: -321</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: x = 120</p><p>Output: 21</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>-2^31 &lt;= x &lt;= 2^31 - 1</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。注意:假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为  <code>[−2^31,  2^31 − 1]</code>。请根据这个假设，如果反转后整数溢出那么就返回 0。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2>',14),x=e("li",null,[t("这一题只需要注意一点，反转以后的数字要求在"),e("code",null," [−2^31, 2^31 − 1]"),t("范围内，超过这个范围的数字都要输出 "),e("code",null,"0 "),t("。")],-1),y=r(`<h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">x</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">reverse</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> isNegative <span class="token operator">=</span> x <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

	x <span class="token operator">*=</span> isNegative<span class="token punctuation">;</span>

	<span class="token keyword">while</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		temp <span class="token operator">=</span> temp <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token punctuation">(</span>x <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>x <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">||</span> temp <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">31</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> temp <span class="token operator">*</span> isNegative<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,3),w=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"center"}},"题号"),e("th",{style:{"text-align":"left"}},"标题"),e("th",{style:{"text-align":"center"}},"题解"),e("th",{style:{"text-align":"left"}},"标签"),e("th",{style:{"text-align":"center"}},"难度"),e("th",{style:{"text-align":"center"}},"力扣")])],-1),N=e("td",{style:{"text-align":"center"}},"8",-1),q=e("td",{style:{"text-align":"left"}},"字符串转换整数 (atoi)",-1),E={style:{"text-align":"center"}},I={style:{"text-align":"left"}},C=e("code",null,"字符串",-1),L=e("td",{style:{"text-align":"center"}},"🟠",-1),V={style:{"text-align":"center"}},j={href:"https://leetcode.cn/problems/string-to-integer-atoi",target:"_blank",rel:"noopener noreferrer"},B={href:"https://leetcode.com/problems/string-to-integer-atoi",target:"_blank",rel:"noopener noreferrer"},O=e("td",{style:{"text-align":"center"}},"190",-1),M=e("td",{style:{"text-align":"left"}},"颠倒二进制位",-1),R={style:{"text-align":"center"}},A={style:{"text-align":"left"}},G=e("code",null,"位运算",-1),S=e("code",null,"分治",-1),T=e("td",{style:{"text-align":"center"}},"🟢",-1),z={style:{"text-align":"center"}},D={href:"https://leetcode.cn/problems/reverse-bits",target:"_blank",rel:"noopener noreferrer"},F={href:"https://leetcode.com/problems/reverse-bits",target:"_blank",rel:"noopener noreferrer"},H=e("td",{style:{"text-align":"center"}},"2119",-1),J=e("td",{style:{"text-align":"left"}},"反转两次的数字",-1),K=e("td",{style:{"text-align":"center"}},null,-1),P={style:{"text-align":"left"}},Q=e("code",null,"数学",-1),U=e("td",{style:{"text-align":"center"}},"🟢",-1),W={style:{"text-align":"center"}},X={href:"https://leetcode.cn/problems/a-number-after-a-double-reversal",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://leetcode.com/problems/a-number-after-a-double-reversal",target:"_blank",rel:"noopener noreferrer"},Z=e("td",{style:{"text-align":"center"}},"2442",-1),$=e("td",{style:{"text-align":"left"}},"反转之后不同整数的数目",-1),ee=e("td",{style:{"text-align":"center"}},null,-1),te={style:{"text-align":"left"}},ne=e("code",null,"数组",-1),se=e("code",null,"哈希表",-1),ae=e("code",null,"数学",-1),oe=e("code",null,"1+",-1),le=e("td",{style:{"text-align":"center"}},"🟠",-1),re={style:{"text-align":"center"}},ce={href:"https://leetcode.cn/problems/count-number-of-distinct-integers-after-reverse-operations",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://leetcode.com/problems/count-number-of-distinct-integers-after-reverse-operations",target:"_blank",rel:"noopener noreferrer"};function ie(de,ue){const c=l("font"),a=l("RouterLink"),o=l("ExternalLinkIcon");return i(),d("div",null,[h,e("p",null,[t("🟠 "),n(c,{color:"#ffb800"},{default:s(()=>[t("Medium")]),_:1}),t("  🔖  "),n(a,{to:"/tag/math.html"},{default:s(()=>[k]),_:1}),t("  🔗 "),e("a",m,[b,n(o)]),t(),e("a",g,[f,n(o)])]),v,e("ul",null,[e("li",null,[t("这一题是简单题，要求反转 10 进制数。类似的题目有 "),n(a,{to:"/problem/0190.html"},{default:s(()=>[t("第 190 题")]),_:1}),t("。")]),x]),y,u(" prettier-ignore "),e("table",null,[w,e("tbody",null,[e("tr",null,[N,q,e("td",E,[n(a,{to:"/problem/0008.html"},{default:s(()=>[t("[✓]")]),_:1})]),e("td",I,[n(a,{to:"/tag/string.html"},{default:s(()=>[C]),_:1})]),L,e("td",V,[e("a",j,[t("🀄️"),n(o)]),t(),e("a",B,[t("🔗"),n(o)])])]),e("tr",null,[O,M,e("td",R,[n(a,{to:"/problem/0190.html"},{default:s(()=>[t("[✓]")]),_:1})]),e("td",A,[n(a,{to:"/tag/bit-manipulation.html"},{default:s(()=>[G]),_:1}),t(),n(a,{to:"/tag/divide-and-conquer.html"},{default:s(()=>[S]),_:1})]),T,e("td",z,[e("a",D,[t("🀄️"),n(o)]),t(),e("a",F,[t("🔗"),n(o)])])]),e("tr",null,[H,J,K,e("td",P,[n(a,{to:"/tag/math.html"},{default:s(()=>[Q]),_:1})]),U,e("td",W,[e("a",X,[t("🀄️"),n(o)]),t(),e("a",Y,[t("🔗"),n(o)])])]),e("tr",null,[Z,$,ee,e("td",te,[n(a,{to:"/tag/array.html"},{default:s(()=>[ne]),_:1}),t(),n(a,{to:"/tag/hash-table.html"},{default:s(()=>[se]),_:1}),t(),n(a,{to:"/tag/math.html"},{default:s(()=>[ae]),_:1}),t(),oe]),le,e("td",re,[e("a",ce,[t("🀄️"),n(o)]),t(),e("a",pe,[t("🔗"),n(o)])])])])])])}const he=p(_,[["render",ie],["__file","0007.html.vue"]]);export{he as default};
