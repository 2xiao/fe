import{_ as i,r as _,o as a,c,a as t,b as e,w as l,d as o,f as h}from"./app-ynO5B_DP.js";const r={},u=t("h1",{id:"组合数学",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#组合数学","aria-hidden":"true"},"#"),o(" 组合数学")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),H=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),K=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),z=t("code",null,"图",-1),V=t("code",null,"有序集合",-1),j=t("code",null,"拓扑排序",-1),B=t("code",null,"最短路",-1),F=t("code",null,"强连通分量",-1),O=t("code",null,"欧拉回路",-1),P=t("code",null,"双连通分量",-1),R=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),T=t("code",null,"线段树",-1),U=t("code",null,"树状数组",-1),D=t("code",null,"后缀数组",-1),G=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Ht=t("code",null,"模拟",-1),wt=t("span",{class:"blue"},"组合数学",-1),It=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Kt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),zt=t("code",null,"迭代器",-1),Vt=t("code",null,"多线程",-1),jt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ft=t("td",{style:{"text-align":"center"}},"62",-1),Ot={style:{"text-align":"left"}},Pt={href:"https://leetcode.com/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},Rt={style:{"text-align":"center"}},At={href:"/problem/0062",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"left"}},Ut=t("code",null,"数学",-1),Dt=t("code",null,"动态规划",-1),Gt=t("code",null,"组合数学",-1),Jt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"458",-1),St={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/poor-pigs",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"数学",-1),$t=t("code",null,"动态规划",-1),te=t("code",null,"组合数学",-1),ee={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"920",-1),le={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/number-of-music-playlists",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),de={style:{"text-align":"left"}},_e=t("code",null,"数学",-1),ie=t("code",null,"动态规划",-1),ae=t("code",null,"组合数学",-1),ce={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"1201",-1),re={style:{"text-align":"left"}},ue={href:"https://leetcode.com/problems/ugly-number-iii",target:"_blank",rel:"noopener noreferrer"},fe=t("td",{style:{"text-align":"center"}},null,-1),ge={style:{"text-align":"left"}},me=t("code",null,"数学",-1),ye=t("code",null,"二分查找",-1),xe=t("code",null,"组合数学",-1),be=t("code",null,"1+",-1),pe={style:{"text-align":"left"}},ke=t("td",{style:{"text-align":"center"}},"1359",-1),He={style:{"text-align":"left"}},we={href:"https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options",target:"_blank",rel:"noopener noreferrer"},Ie=t("td",{style:{"text-align":"center"}},null,-1),Me={style:{"text-align":"left"}},ve=t("code",null,"数学",-1),qe=t("code",null,"动态规划",-1),Ke=t("code",null,"组合数学",-1),Le={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"1467",-1),Ee={style:{"text-align":"left"}},Ne={href:"https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",target:"_blank",rel:"noopener noreferrer"},ze=t("td",{style:{"text-align":"center"}},null,-1),Ve={style:{"text-align":"left"}},je=t("code",null,"数组",-1),Be=t("code",null,"数学",-1),Fe=t("code",null,"动态规划",-1),Oe=t("code",null,"3+",-1),Pe={style:{"text-align":"left"}},Re=t("td",{style:{"text-align":"center"}},"1569",-1),Ae={style:{"text-align":"left"}},Te={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},null,-1),De={style:{"text-align":"left"}},Ge=t("code",null,"树",-1),Je=t("code",null,"并查集",-1),Qe=t("code",null,"二叉搜索树",-1),Se=t("code",null,"7+",-1),We={style:{"text-align":"left"}},Xe=t("td",{style:{"text-align":"center"}},"1621",-1),Ye={style:{"text-align":"left"}},Ze={href:"https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},null,-1),to={style:{"text-align":"left"}},eo=t("code",null,"数学",-1),oo=t("code",null,"动态规划",-1),lo=t("code",null,"组合数学",-1),no={style:{"text-align":"left"}},so=t("td",{style:{"text-align":"center"}},"1641",-1),_o={style:{"text-align":"left"}},io={href:"https://leetcode.com/problems/count-sorted-vowel-strings",target:"_blank",rel:"noopener noreferrer"},ao=t("td",{style:{"text-align":"center"}},null,-1),co={style:{"text-align":"left"}},ho=t("code",null,"数学",-1),ro=t("code",null,"动态规划",-1),uo=t("code",null,"组合数学",-1),fo={style:{"text-align":"left"}},go=t("td",{style:{"text-align":"center"}},"1643",-1),mo={style:{"text-align":"left"}},yo={href:"https://leetcode.com/problems/kth-smallest-instructions",target:"_blank",rel:"noopener noreferrer"},xo=t("td",{style:{"text-align":"center"}},null,-1),bo={style:{"text-align":"left"}},po=t("code",null,"数组",-1),ko=t("code",null,"数学",-1),Ho=t("code",null,"动态规划",-1),wo=t("code",null,"1+",-1),Io={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"1735",-1),vo={style:{"text-align":"left"}},qo={href:"https://leetcode.com/problems/count-ways-to-make-array-with-product",target:"_blank",rel:"noopener noreferrer"},Ko=t("td",{style:{"text-align":"center"}},null,-1),Lo={style:{"text-align":"left"}},Co=t("code",null,"数组",-1),Eo=t("code",null,"数学",-1),No=t("code",null,"动态规划",-1),zo=t("code",null,"2+",-1),Vo={style:{"text-align":"left"}},jo=t("td",{style:{"text-align":"center"}},"1830",-1),Bo={style:{"text-align":"left"}},Fo={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-string-sorted",target:"_blank",rel:"noopener noreferrer"},Oo=t("td",{style:{"text-align":"center"}},null,-1),Po={style:{"text-align":"left"}},Ro=t("code",null,"数学",-1),Ao=t("code",null,"字符串",-1),To=t("code",null,"组合数学",-1),Uo={style:{"text-align":"left"}},Do=t("td",{style:{"text-align":"center"}},"1863",-1),Go={style:{"text-align":"left"}},Jo={href:"https://leetcode.com/problems/sum-of-all-subset-xor-totals",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},null,-1),So={style:{"text-align":"left"}},Wo=t("code",null,"位运算",-1),Xo=t("code",null,"数组",-1),Yo=t("code",null,"数学",-1),Zo=t("code",null,"3+",-1),$o={style:{"text-align":"left"}},tl=t("td",{style:{"text-align":"center"}},"1866",-1),el={style:{"text-align":"left"}},ol={href:"https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible",target:"_blank",rel:"noopener noreferrer"},ll=t("td",{style:{"text-align":"center"}},null,-1),nl={style:{"text-align":"left"}},sl=t("code",null,"数学",-1),dl=t("code",null,"动态规划",-1),_l=t("code",null,"组合数学",-1),il={style:{"text-align":"left"}},al=t("td",{style:{"text-align":"center"}},"1916",-1),cl={style:{"text-align":"left"}},hl={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},rl=t("td",{style:{"text-align":"center"}},null,-1),ul={style:{"text-align":"left"}},fl=t("code",null,"树",-1),gl=t("code",null,"图",-1),ml=t("code",null,"拓扑排序",-1),yl=t("code",null,"3+",-1),xl={style:{"text-align":"left"}},bl=t("td",{style:{"text-align":"center"}},"2063",-1),pl={style:{"text-align":"left"}},kl={href:"https://leetcode.com/problems/vowels-of-all-substrings",target:"_blank",rel:"noopener noreferrer"},Hl=t("td",{style:{"text-align":"center"}},null,-1),wl={style:{"text-align":"left"}},Il=t("code",null,"数学",-1),Ml=t("code",null,"字符串",-1),vl=t("code",null,"动态规划",-1),ql=t("code",null,"1+",-1),Kl={style:{"text-align":"left"}},Ll=t("td",{style:{"text-align":"center"}},"2221",-1),Cl={style:{"text-align":"left"}},El={href:"https://leetcode.com/problems/find-triangular-sum-of-an-array",target:"_blank",rel:"noopener noreferrer"},Nl=t("td",{style:{"text-align":"center"}},null,-1),zl={style:{"text-align":"left"}},Vl=t("code",null,"数组",-1),jl=t("code",null,"数学",-1),Bl=t("code",null,"组合数学",-1),Fl=t("code",null,"1+",-1),Ol={style:{"text-align":"left"}},Pl=t("td",{style:{"text-align":"center"}},"2338",-1),Rl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/count-the-number-of-ideal-arrays",target:"_blank",rel:"noopener noreferrer"},Tl=t("td",{style:{"text-align":"center"}},null,-1),Ul={style:{"text-align":"left"}},Dl=t("code",null,"数学",-1),Gl=t("code",null,"动态规划",-1),Jl=t("code",null,"组合数学",-1),Ql=t("code",null,"1+",-1),Sl={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"2400",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),$l={style:{"text-align":"left"}},tn=t("code",null,"数学",-1),en=t("code",null,"动态规划",-1),on=t("code",null,"组合数学",-1),ln={style:{"text-align":"left"}},nn=t("td",{style:{"text-align":"center"}},"2514",-1),sn={style:{"text-align":"left"}},dn={href:"https://leetcode.com/problems/count-anagrams",target:"_blank",rel:"noopener noreferrer"},_n=t("td",{style:{"text-align":"center"}},null,-1),an={style:{"text-align":"left"}},cn=t("code",null,"哈希表",-1),hn=t("code",null,"数学",-1),rn=t("code",null,"字符串",-1),un=t("code",null,"2+",-1),fn={style:{"text-align":"left"}},gn=t("td",{style:{"text-align":"center"}},"2539",-1),mn={style:{"text-align":"left"}},yn={href:"https://leetcode.com/problems/count-the-number-of-good-subsequences",target:"_blank",rel:"noopener noreferrer"},xn=t("td",{style:{"text-align":"center"}},null,-1),bn={style:{"text-align":"left"}},pn=t("code",null,"哈希表",-1),kn=t("code",null,"数学",-1),Hn=t("code",null,"字符串",-1),wn=t("code",null,"2+",-1),In={style:{"text-align":"left"}},Mn=t("td",{style:{"text-align":"center"}},"2597",-1),vn={style:{"text-align":"left"}},qn={href:"https://leetcode.com/problems/the-number-of-beautiful-subsets",target:"_blank",rel:"noopener noreferrer"},Kn=t("td",{style:{"text-align":"center"}},null,-1),Ln={style:{"text-align":"left"}},Cn=t("code",null,"数组",-1),En=t("code",null,"哈希表",-1),Nn=t("code",null,"数学",-1),zn=t("code",null,"4+",-1),Vn={style:{"text-align":"left"}},jn=t("td",{style:{"text-align":"center"}},"2638",-1),Bn={style:{"text-align":"left"}},Fn={href:"https://leetcode.com/problems/count-the-number-of-k-free-subsets",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},null,-1),Pn={style:{"text-align":"left"}},Rn=t("code",null,"数组",-1),An=t("code",null,"数学",-1),Tn=t("code",null,"动态规划",-1),Un=t("code",null,"2+",-1),Dn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"2842",-1),Jn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/count-k-subsequences-of-a-string-with-maximum-beauty",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},null,-1),Wn={style:{"text-align":"left"}},Xn=t("code",null,"贪心",-1),Yn=t("code",null,"哈希表",-1),Zn=t("code",null,"数学",-1),$n=t("code",null,"2+",-1),ts={style:{"text-align":"left"}},es=t("td",{style:{"text-align":"center"}},"2912",-1),os={style:{"text-align":"left"}},ls={href:"https://leetcode.com/problems/number-of-ways-to-reach-destination-in-the-grid",target:"_blank",rel:"noopener noreferrer"},ns=t("td",{style:{"text-align":"center"}},null,-1),ss={style:{"text-align":"left"}},ds=t("code",null,"数学",-1),_s=t("code",null,"动态规划",-1),is=t("code",null,"组合数学",-1),as={style:{"text-align":"left"}},cs=t("td",{style:{"text-align":"center"}},"2927",-1),hs={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/distribute-candies-among-children-iii",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},null,-1),fs={style:{"text-align":"left"}},gs=t("code",null,"数学",-1),ms=t("code",null,"组合数学",-1),ys={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"2928",-1),bs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/distribute-candies-among-children-i",target:"_blank",rel:"noopener noreferrer"},ks=t("td",{style:{"text-align":"center"}},null,-1),Hs={style:{"text-align":"left"}},ws=t("code",null,"数学",-1),Is=t("code",null,"组合数学",-1),Ms=t("code",null,"枚举",-1),vs={style:{"text-align":"left"}},qs=t("td",{style:{"text-align":"center"}},"2929",-1),Ks={style:{"text-align":"left"}},Ls={href:"https://leetcode.com/problems/distribute-candies-among-children-ii",target:"_blank",rel:"noopener noreferrer"},Cs=t("td",{style:{"text-align":"center"}},null,-1),Es={style:{"text-align":"left"}},Ns=t("code",null,"数学",-1),zs=t("code",null,"组合数学",-1),Vs=t("code",null,"枚举",-1),js={style:{"text-align":"left"}},Bs=t("td",{style:{"text-align":"center"}},"2930",-1),Fs={style:{"text-align":"left"}},Os={href:"https://leetcode.com/problems/number-of-strings-which-can-be-rearranged-to-contain-substring",target:"_blank",rel:"noopener noreferrer"},Ps=t("td",{style:{"text-align":"center"}},null,-1),Rs={style:{"text-align":"left"}},As=t("code",null,"数学",-1),Ts=t("code",null,"动态规划",-1),Us=t("code",null,"组合数学",-1),Ds={style:{"text-align":"left"}},Gs=t("td",{style:{"text-align":"center"}},"2954",-1),Js={style:{"text-align":"left"}},Qs={href:"https://leetcode.com/problems/count-the-number-of-infection-sequences",target:"_blank",rel:"noopener noreferrer"},Ss=t("td",{style:{"text-align":"center"}},null,-1),Ws={style:{"text-align":"left"}},Xs=t("code",null,"数组",-1),Ys=t("code",null,"数学",-1),Zs=t("code",null,"组合数学",-1),$s={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"2963",-1),ed={style:{"text-align":"left"}},od={href:"https://leetcode.com/problems/count-the-number-of-good-partitions",target:"_blank",rel:"noopener noreferrer"},ld=t("td",{style:{"text-align":"center"}},null,-1),nd={style:{"text-align":"left"}},sd=t("code",null,"数组",-1),dd=t("code",null,"哈希表",-1),_d=t("code",null,"数学",-1),id=t("code",null,"1+",-1),ad={style:{"text-align":"left"}},cd=t("td",{style:{"text-align":"center"}},"3116",-1),hd={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/kth-smallest-amount-with-single-denomination-combination",target:"_blank",rel:"noopener noreferrer"},ud=t("td",{style:{"text-align":"center"}},null,-1),fd={style:{"text-align":"left"}},gd=t("code",null,"位运算",-1),md=t("code",null,"数组",-1),yd=t("code",null,"数学",-1),xd=t("code",null,"3+",-1),bd={style:{"text-align":"left"}},pd=t("td",{style:{"text-align":"center"}},"3128",-1),kd={style:{"text-align":"left"}},Hd={href:"https://leetcode.com/problems/right-triangles",target:"_blank",rel:"noopener noreferrer"},wd=t("td",{style:{"text-align":"center"}},null,-1),Id={style:{"text-align":"left"}},Md=t("code",null,"数组",-1),vd=t("code",null,"哈希表",-1),qd=t("code",null,"数学",-1),Kd=t("code",null,"2+",-1),Ld={style:{"text-align":"left"}},Cd=t("td",{style:{"text-align":"center"}},"3154",-1),Ed={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},jd=t("code",null,"位运算",-1),Bd=t("code",null,"记忆化搜索",-1),Fd=t("code",null,"数学",-1),Od=t("code",null,"2+",-1),Pd={style:{"text-align":"left"}},Rd=t("td",{style:{"text-align":"center"}},"3179",-1),Ad={style:{"text-align":"left"}},Td={href:"https://leetcode.com/problems/find-the-n-th-value-after-k-seconds",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},null,-1),Dd={style:{"text-align":"left"}},Gd=t("code",null,"数组",-1),Jd=t("code",null,"数学",-1),Qd=t("code",null,"组合数学",-1),Sd=t("code",null,"2+",-1),Wd={style:{"text-align":"left"}},Xd=t("td",{style:{"text-align":"center"}},"3247",-1),Yd={style:{"text-align":"left"}},Zd={href:"https://leetcode.com/problems/number-of-subsequences-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"数组",-1),o_=t("code",null,"数学",-1),l_=t("code",null,"动态规划",-1),n_=t("code",null,"1+",-1),s_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"3250",-1),__={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-i",target:"_blank",rel:"noopener noreferrer"},a_=t("td",{style:{"text-align":"center"}},null,-1),c_={style:{"text-align":"left"}},h_=t("code",null,"数组",-1),r_=t("code",null,"数学",-1),u_=t("code",null,"动态规划",-1),f_=t("code",null,"2+",-1),g_={style:{"text-align":"left"}},m_=t("td",{style:{"text-align":"center"}},"3251",-1),y_={style:{"text-align":"left"}},x_={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-ii",target:"_blank",rel:"noopener noreferrer"},b_=t("td",{style:{"text-align":"center"}},null,-1),p_={style:{"text-align":"left"}},k_=t("code",null,"数组",-1),H_=t("code",null,"数学",-1),w_=t("code",null,"动态规划",-1),I_=t("code",null,"2+",-1),M_={style:{"text-align":"left"}},v_=t("td",{style:{"text-align":"center"}},"3272",-1),q_={style:{"text-align":"left"}},K_={href:"https://leetcode.com/problems/find-the-count-of-good-integers",target:"_blank",rel:"noopener noreferrer"},L_=t("td",{style:{"text-align":"center"}},null,-1),C_={style:{"text-align":"left"}},E_=t("code",null,"哈希表",-1),N_=t("code",null,"数学",-1),z_=t("code",null,"组合数学",-1),V_=t("code",null,"1+",-1),j_={style:{"text-align":"left"}},B_=t("td",{style:{"text-align":"center"}},"3312",-1),F_={style:{"text-align":"left"}},O_={href:"https://leetcode.com/problems/sorted-gcd-pair-queries",target:"_blank",rel:"noopener noreferrer"},P_=t("td",{style:{"text-align":"center"}},null,-1),R_={style:{"text-align":"left"}},A_=t("code",null,"数组",-1),T_=t("code",null,"哈希表",-1),U_=t("code",null,"数学",-1),D_=t("code",null,"5+",-1),G_={style:{"text-align":"left"}},J_=t("td",{style:{"text-align":"center"}},"3317",-1),Q_={style:{"text-align":"left"}},S_={href:"https://leetcode.com/problems/find-the-number-of-possible-ways-for-an-event",target:"_blank",rel:"noopener noreferrer"},W_=t("td",{style:{"text-align":"center"}},null,-1),X_={style:{"text-align":"left"}},Y_=t("code",null,"数学",-1),Z_=t("code",null,"动态规划",-1),$_=t("code",null,"组合数学",-1),ti={style:{"text-align":"left"}},ei=t("td",{style:{"text-align":"center"}},"LCP 25",-1),oi={style:{"text-align":"left"}},li={href:"https://leetcode.cn/problems/Uh984O",target:"_blank",rel:"noopener noreferrer"},ni=t("td",{style:{"text-align":"center"}},null,-1),si={style:{"text-align":"left"}},di=t("code",null,"数学",-1),_i=t("code",null,"动态规划",-1),ii=t("code",null,"组合数学",-1),ai={style:{"text-align":"left"}},ci=t("td",{style:{"text-align":"center"}},"LCP 37",-1),hi={style:{"text-align":"left"}},ri={href:"https://leetcode.cn/problems/zui-xiao-ju-xing-mian-ji",target:"_blank",rel:"noopener noreferrer"},ui=t("td",{style:{"text-align":"center"}},null,-1),fi={style:{"text-align":"left"}},gi=t("code",null,"贪心",-1),mi=t("code",null,"几何",-1),yi=t("code",null,"数组",-1),xi=t("code",null,"3+",-1),bi={style:{"text-align":"left"}},pi=t("td",{style:{"text-align":"center"}},"剑指 Offer II 98",-1),ki={style:{"text-align":"left"}},Hi={href:"https://leetcode.cn/problems/2AoeFn",target:"_blank",rel:"noopener noreferrer"},wi=t("td",{style:{"text-align":"center"}},null,-1),Ii={style:{"text-align":"left"}},Mi=t("code",null,"数学",-1),vi=t("code",null,"动态规划",-1),qi=t("code",null,"组合数学",-1),Ki={style:{"text-align":"left"}};function Li(Ci,Ei){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/outline/tag/queue.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/outline/tag/binary-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/outline/tag/ordered-set.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/outline/tag/suffix-array.html"},{default:l(()=>[D]),_:1})]),G,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/outline/tag/counting.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/outline/tag/simulation.html"},{default:l(()=>[Ht]),_:1}),o(),wt,o(),e(n,{to:"/outline/tag/randomized.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/outline/tag/database.html"},{default:l(()=>[Kt]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/outline/tag/data-stream.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/outline/tag/brainteaser.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/outline/tag/interactive.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/outline/tag/iterator.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/outline/tag/concurrency.html"},{default:l(()=>[Vt]),_:1})])]),jt,h(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Ft,t("td",Ot,[t("a",Pt,[o("不同路径"),e(s)])]),t("td",Rt,[t("a",At,[o("[✓]"),e(s)])]),t("td",Tt,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Ut]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Dt]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[Gt]),_:1})]),t("td",Jt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Qt,t("td",St,[t("a",Wt,[o("可怜的小猪"),e(s)])]),Xt,t("td",Yt,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Zt]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[te]),_:1})]),t("td",ee,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[oe,t("td",le,[t("a",ne,[o("播放列表的数量"),e(s)])]),se,t("td",de,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[_e]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[ie]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[ae]),_:1})]),t("td",ce,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[he,t("td",re,[t("a",ue,[o("丑数 III"),e(s)])]),fe,t("td",ge,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[me]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[ye]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[xe]),_:1}),o(),be]),t("td",pe,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ke,t("td",He,[t("a",we,[o("有效的快递序列数目"),e(s)])]),Ie,t("td",Me,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[ve]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[qe]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[Ke]),_:1})]),t("td",Le,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ce,t("td",Ee,[t("a",Ne,[o("两个盒子中球的颜色数相同的概率"),e(s)])]),ze,t("td",Ve,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Be]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Fe]),_:1}),o(),Oe]),t("td",Pe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Re,t("td",Ae,[t("a",Te,[o("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),Ue,t("td",De,[e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[Ge]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[Je]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[Qe]),_:1}),o(),Se]),t("td",We,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Xe,t("td",Ye,[t("a",Ze,[o("大小为 K 的不重叠线段的数目"),e(s)])]),$e,t("td",to,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[eo]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[oo]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[lo]),_:1})]),t("td",no,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[so,t("td",_o,[t("a",io,[o("统计字典序元音字符串的数目"),e(s)])]),ao,t("td",co,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[ho]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[ro]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[uo]),_:1})]),t("td",fo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[go,t("td",mo,[t("a",yo,[o("第 K 条最小指令"),e(s)])]),xo,t("td",bo,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[po]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[ko]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ho]),_:1}),o(),wo]),t("td",Io,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Mo,t("td",vo,[t("a",qo,[o("生成乘积数组的方案数"),e(s)])]),Ko,t("td",Lo,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Co]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Eo]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[No]),_:1}),o(),zo]),t("td",Vo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jo,t("td",Bo,[t("a",Fo,[o("使字符串有序的最少操作次数"),e(s)])]),Oo,t("td",Po,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Ro]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ao]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[To]),_:1})]),t("td",Uo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Do,t("td",Go,[t("a",Jo,[o("找出所有子集的异或总和再求和"),e(s)])]),Qo,t("td",So,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[Wo]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Xo]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Yo]),_:1}),o(),Zo]),t("td",$o,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[tl,t("td",el,[t("a",ol,[o("恰有 K 根木棍可以看到的排列数目"),e(s)])]),ll,t("td",nl,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[sl]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[dl]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[_l]),_:1})]),t("td",il,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[al,t("td",cl,[t("a",hl,[o("统计为蚁群构筑房间的不同顺序"),e(s)])]),rl,t("td",ul,[e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[fl]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[gl]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[ml]),_:1}),o(),yl]),t("td",xl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bl,t("td",pl,[t("a",kl,[o("所有子字符串中的元音"),e(s)])]),Hl,t("td",wl,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Il]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Ml]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[vl]),_:1}),o(),ql]),t("td",Kl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ll,t("td",Cl,[t("a",El,[o("数组的三角和"),e(s)])]),Nl,t("td",zl,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Vl]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[jl]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[Bl]),_:1}),o(),Fl]),t("td",Ol,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pl,t("td",Rl,[t("a",Al,[o("统计理想数组的数目"),e(s)])]),Tl,t("td",Ul,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Dl]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Gl]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[Jl]),_:1}),o(),Ql]),t("td",Sl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Wl,t("td",Xl,[t("a",Yl,[o("恰好移动 k 步到达某一位置的方法数目"),e(s)])]),Zl,t("td",$l,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[tn]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[en]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[on]),_:1})]),t("td",ln,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nn,t("td",sn,[t("a",dn,[o("统计同位异构字符串数目"),e(s)])]),_n,t("td",an,[e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[cn]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[hn]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[rn]),_:1}),o(),un]),t("td",fn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gn,t("td",mn,[t("a",yn,[o("好子序列的个数"),e(s)])]),xn,t("td",bn,[e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[pn]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[kn]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Hn]),_:1}),o(),wn]),t("td",In,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Mn,t("td",vn,[t("a",qn,[o("美丽子集的数目"),e(s)])]),Kn,t("td",Ln,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Cn]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[En]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Nn]),_:1}),o(),zn]),t("td",Vn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jn,t("td",Bn,[t("a",Fn,[o("统计 K-Free 子集的总数"),e(s)])]),On,t("td",Pn,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Rn]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[An]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Tn]),_:1}),o(),Un]),t("td",Dn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Gn,t("td",Jn,[t("a",Qn,[o("统计一个字符串的 k 子序列美丽值最大的数目"),e(s)])]),Sn,t("td",Wn,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Xn]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[Yn]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Zn]),_:1}),o(),$n]),t("td",ts,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[es,t("td",os,[t("a",ls,[o("在网格上移动到目的地的方法数"),e(s)])]),ns,t("td",ss,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[ds]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[_s]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[is]),_:1})]),t("td",as,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[cs,t("td",hs,[t("a",rs,[o("给小朋友们分糖果 III"),e(s)])]),us,t("td",fs,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[gs]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[ms]),_:1})]),t("td",ys,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xs,t("td",bs,[t("a",ps,[o("给小朋友们分糖果 I"),e(s)])]),ks,t("td",Hs,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[ws]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[Is]),_:1}),o(),e(n,{to:"/outline/tag/enumeration.html"},{default:l(()=>[Ms]),_:1})]),t("td",vs,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[qs,t("td",Ks,[t("a",Ls,[o("给小朋友们分糖果 II"),e(s)])]),Cs,t("td",Es,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Ns]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[zs]),_:1}),o(),e(n,{to:"/outline/tag/enumeration.html"},{default:l(()=>[Vs]),_:1})]),t("td",js,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Bs,t("td",Fs,[t("a",Os,[o("重新排列后包含指定子字符串的字符串数目"),e(s)])]),Ps,t("td",Rs,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[As]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ts]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[Us]),_:1})]),t("td",Ds,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Gs,t("td",Js,[t("a",Qs,[o("统计感冒序列的数目"),e(s)])]),Ss,t("td",Ws,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Xs]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Ys]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[Zs]),_:1})]),t("td",$s,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",od,[o("统计好分割方案的数目"),e(s)])]),ld,t("td",nd,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[sd]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[dd]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[_d]),_:1}),o(),id]),t("td",ad,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[cd,t("td",hd,[t("a",rd,[o("单面值组合的第 K 小金额"),e(s)])]),ud,t("td",fd,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[gd]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[md]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[yd]),_:1}),o(),xd]),t("td",bd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[pd,t("td",kd,[t("a",Hd,[o("直角三角形"),e(s)])]),wd,t("td",Id,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Md]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[vd]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[qd]),_:1}),o(),Kd]),t("td",Ld,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Cd,t("td",Ed,[t("a",Nd,[o("到达第 K 级台阶的方案数"),e(s)])]),zd,t("td",Vd,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[jd]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Bd]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Fd]),_:1}),o(),Od]),t("td",Pd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Rd,t("td",Ad,[t("a",Td,[o("K 秒后第 N 个元素的值"),e(s)])]),Ud,t("td",Dd,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Gd]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Jd]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[Qd]),_:1}),o(),Sd]),t("td",Wd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xd,t("td",Yd,[t("a",Zd,[o("奇数和子序列的数量"),e(s)])]),$d,t("td",t_,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[e_]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[o_]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[l_]),_:1}),o(),n_]),t("td",s_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[d_,t("td",__,[t("a",i_,[o("单调数组对的数目 I"),e(s)])]),a_,t("td",c_,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[h_]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[r_]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[u_]),_:1}),o(),f_]),t("td",g_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[m_,t("td",y_,[t("a",x_,[o("单调数组对的数目 II"),e(s)])]),b_,t("td",p_,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[k_]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[H_]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[w_]),_:1}),o(),I_]),t("td",M_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[v_,t("td",q_,[t("a",K_,[o("统计好整数的数目"),e(s)])]),L_,t("td",C_,[e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[E_]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[N_]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[z_]),_:1}),o(),V_]),t("td",j_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[B_,t("td",F_,[t("a",O_,[o("查询排序后的最大公约数"),e(s)])]),P_,t("td",R_,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[A_]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[T_]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[U_]),_:1}),o(),D_]),t("td",G_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[J_,t("td",Q_,[t("a",S_,[o("安排活动的方案数"),e(s)])]),W_,t("td",X_,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Y_]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Z_]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[$_]),_:1})]),t("td",ti,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ei,t("td",oi,[t("a",li,[o("古董键盘"),e(s)])]),ni,t("td",si,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[di]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[_i]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[ii]),_:1})]),t("td",ai,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ci,t("td",hi,[t("a",ri,[o("最小矩形面积"),e(s)])]),ui,t("td",fi,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[gi]),_:1}),o(),e(n,{to:"/outline/tag/geometry.html"},{default:l(()=>[mi]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[yi]),_:1}),o(),xi]),t("td",bi,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[pi,t("td",ki,[t("a",Hi,[o("路径的数目"),e(s)])]),wi,t("td",Ii,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Mi]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[vi]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[qi]),_:1})]),t("td",Ki,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const zi=i(r,[["render",Li],["__file","combinatorics.html.vue"]]);export{zi as default};
