import{_ as d,r,o as _,c as a,a as t,d as o,w as n,b as e,f as i}from"./app-pBQRj29c.js";const c={},h=t("h1",{id:"动态规划",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#动态规划","aria-hidden":"true"},"#"),e(" 动态规划")],-1),g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),u=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),w=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),O=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),P=t("code",null,"图",-1),K=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),N=t("code",null,"最短路",-1),D=t("code",null,"强连通分量",-1),E=t("code",null,"欧拉回路",-1),B=t("code",null,"双连通分量",-1),M=t("code",null,"并查集",-1),Y=t("code",null,"字典树",-1),A=t("code",null,"线段树",-1),J=t("code",null,"树状数组",-1),R=t("code",null,"后缀数组",-1),S=t("p",null,[t("strong",null,"算法")],-1),U=t("code",null,"枚举",-1),W=t("code",null,"递归",-1),X=t("code",null,"分治",-1),F=t("code",null,"回溯",-1),G=t("code",null,"贪心",-1),H=t("span",{class:"blue"},"动态规划",-1),T=t("code",null,"排序",-1),Q=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),rt=t("code",null,"双指针",-1),dt=t("code",null,"位运算",-1),_t=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),it=t("code",null,"滑动窗口",-1),ct=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),ut=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Ot=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Pt=t("code",null,"迭代器",-1),Kt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Nt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Dt=t("td",{style:{"text-align":"center"}},"5",-1),Et=t("td",{style:{"text-align":"left"}},"最长回文子串",-1),Bt={style:{"text-align":"center"}},Mt={style:{"text-align":"left"}},Yt=t("code",null,"双指针",-1),At=t("code",null,"字符串",-1),Jt=t("code",null,"动态规划",-1),Rt=t("td",{style:{"text-align":"left"}},"🟠",-1),St={style:{"text-align":"center"}},Ut={href:"https://leetcode.cn/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},Wt={href:"https://leetcode.com/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},"10",-1),Ft=t("td",{style:{"text-align":"left"}},"正则表达式匹配",-1),Gt={style:{"text-align":"center"}},Ht={style:{"text-align":"left"}},Tt=t("code",null,"递归",-1),Qt=t("code",null,"字符串",-1),Zt=t("code",null,"动态规划",-1),$t=t("td",{style:{"text-align":"left"}},"🔴",-1),te={style:{"text-align":"center"}},ee={href:"https://leetcode.cn/problems/regular-expression-matching",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://leetcode.com/problems/regular-expression-matching",target:"_blank",rel:"noopener noreferrer"},le=t("td",{style:{"text-align":"center"}},"22",-1),ne=t("td",{style:{"text-align":"left"}},"括号生成",-1),se={style:{"text-align":"center"}},re={style:{"text-align":"left"}},de=t("code",null,"字符串",-1),_e=t("code",null,"动态规划",-1),ae=t("code",null,"回溯",-1),ie=t("td",{style:{"text-align":"left"}},"🟠",-1),ce={style:{"text-align":"center"}},he={href:"https://leetcode.cn/problems/generate-parentheses",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://leetcode.com/problems/generate-parentheses",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},"32",-1),fe=t("td",{style:{"text-align":"left"}},"最长有效括号",-1),ue={style:{"text-align":"center"}},ye={style:{"text-align":"left"}},pe=t("code",null,"栈",-1),xe=t("code",null,"字符串",-1),be=t("code",null,"动态规划",-1),ke=t("td",{style:{"text-align":"left"}},"🔴",-1),we={style:{"text-align":"center"}},ve={href:"https://leetcode.cn/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},qe=t("td",{style:{"text-align":"center"}},"42",-1),ze=t("td",{style:{"text-align":"left"}},"接雨水",-1),je={style:{"text-align":"center"}},Ce={style:{"text-align":"left"}},Oe=t("code",null,"栈",-1),Le=t("code",null,"数组",-1),Pe=t("code",null,"双指针",-1),Ke=t("code",null,"2+",-1),Ve=t("td",{style:{"text-align":"left"}},"🔴",-1),Ne={style:{"text-align":"center"}},De={href:"https://leetcode.cn/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},"44",-1),Me=t("td",{style:{"text-align":"left"}},"通配符匹配",-1),Ye={style:{"text-align":"center"}},Ae={style:{"text-align":"left"}},Je=t("code",null,"贪心",-1),Re=t("code",null,"递归",-1),Se=t("code",null,"字符串",-1),Ue=t("code",null,"1+",-1),We=t("td",{style:{"text-align":"left"}},"🔴",-1),Xe={style:{"text-align":"center"}},Fe={href:"https://leetcode.cn/problems/wildcard-matching",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://leetcode.com/problems/wildcard-matching",target:"_blank",rel:"noopener noreferrer"},He=t("td",{style:{"text-align":"center"}},"45",-1),Te=t("td",{style:{"text-align":"left"}},"跳跃游戏 II",-1),Qe={style:{"text-align":"center"}},Ze={style:{"text-align":"left"}},$e=t("code",null,"贪心",-1),to=t("code",null,"数组",-1),eo=t("code",null,"动态规划",-1),oo=t("td",{style:{"text-align":"left"}},"🟠",-1),lo={style:{"text-align":"center"}},no={href:"https://leetcode.cn/problems/jump-game-ii",target:"_blank",rel:"noopener noreferrer"},so={href:"https://leetcode.com/problems/jump-game-ii",target:"_blank",rel:"noopener noreferrer"},ro=t("td",{style:{"text-align":"center"}},"53",-1),_o=t("td",{style:{"text-align":"left"}},"最大子数组和",-1),ao={style:{"text-align":"center"}},io={style:{"text-align":"left"}},co=t("code",null,"数组",-1),ho=t("code",null,"分治",-1),go=t("code",null,"动态规划",-1),mo=t("td",{style:{"text-align":"left"}},"🟠",-1),fo={style:{"text-align":"center"}},uo={href:"https://leetcode.cn/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},yo={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},po=t("td",{style:{"text-align":"center"}},"55",-1),xo=t("td",{style:{"text-align":"left"}},"跳跃游戏",-1),bo={style:{"text-align":"center"}},ko={style:{"text-align":"left"}},wo=t("code",null,"贪心",-1),vo=t("code",null,"数组",-1),Io=t("code",null,"动态规划",-1),qo=t("td",{style:{"text-align":"left"}},"🟠",-1),zo={style:{"text-align":"center"}},jo={href:"https://leetcode.cn/problems/jump-game",target:"_blank",rel:"noopener noreferrer"},Co={href:"https://leetcode.com/problems/jump-game",target:"_blank",rel:"noopener noreferrer"},Oo=t("td",{style:{"text-align":"center"}},"62",-1),Lo=t("td",{style:{"text-align":"left"}},"不同路径",-1),Po={style:{"text-align":"center"}},Ko={style:{"text-align":"left"}},Vo=t("code",null,"数学",-1),No=t("code",null,"动态规划",-1),Do=t("code",null,"组合数学",-1),Eo=t("td",{style:{"text-align":"left"}},"🟠",-1),Bo={style:{"text-align":"center"}},Mo={href:"https://leetcode.cn/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},Yo={href:"https://leetcode.com/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},Ao=t("td",{style:{"text-align":"center"}},"63",-1),Jo=t("td",{style:{"text-align":"left"}},"不同路径 II",-1),Ro={style:{"text-align":"center"}},So={style:{"text-align":"left"}},Uo=t("code",null,"数组",-1),Wo=t("code",null,"动态规划",-1),Xo=t("code",null,"矩阵",-1),Fo=t("td",{style:{"text-align":"left"}},"🟠",-1),Go={style:{"text-align":"center"}},Ho={href:"https://leetcode.cn/problems/unique-paths-ii",target:"_blank",rel:"noopener noreferrer"},To={href:"https://leetcode.com/problems/unique-paths-ii",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},"64",-1),Zo=t("td",{style:{"text-align":"left"}},"最小路径和",-1),$o={style:{"text-align":"center"}},tl={style:{"text-align":"left"}},el=t("code",null,"数组",-1),ol=t("code",null,"动态规划",-1),ll=t("code",null,"矩阵",-1),nl=t("td",{style:{"text-align":"left"}},"🟠",-1),sl={style:{"text-align":"center"}},rl={href:"https://leetcode.cn/problems/minimum-path-sum",target:"_blank",rel:"noopener noreferrer"},dl={href:"https://leetcode.com/problems/minimum-path-sum",target:"_blank",rel:"noopener noreferrer"},_l=t("td",{style:{"text-align":"center"}},"70",-1),al=t("td",{style:{"text-align":"left"}},"爬楼梯",-1),il={style:{"text-align":"center"}},cl={style:{"text-align":"left"}},hl=t("code",null,"记忆化搜索",-1),gl=t("code",null,"数学",-1),ml=t("code",null,"动态规划",-1),fl=t("td",{style:{"text-align":"left"}},"🟢",-1),ul={style:{"text-align":"center"}},yl={href:"https://leetcode.cn/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},pl={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},xl=t("td",{style:{"text-align":"center"}},"72",-1),bl=t("td",{style:{"text-align":"left"}},"编辑距离",-1),kl={style:{"text-align":"center"}},wl={style:{"text-align":"left"}},vl=t("code",null,"字符串",-1),Il=t("code",null,"动态规划",-1),ql=t("td",{style:{"text-align":"left"}},"🟠",-1),zl={style:{"text-align":"center"}},jl={href:"https://leetcode.cn/problems/edit-distance",target:"_blank",rel:"noopener noreferrer"},Cl={href:"https://leetcode.com/problems/edit-distance",target:"_blank",rel:"noopener noreferrer"},Ol=t("td",{style:{"text-align":"center"}},"85",-1),Ll=t("td",{style:{"text-align":"left"}},"最大矩形",-1),Pl={style:{"text-align":"center"}},Kl={style:{"text-align":"left"}},Vl=t("code",null,"栈",-1),Nl=t("code",null,"数组",-1),Dl=t("code",null,"动态规划",-1),El=t("code",null,"2+",-1),Bl=t("td",{style:{"text-align":"left"}},"🔴",-1),Ml={style:{"text-align":"center"}},Yl={href:"https://leetcode.cn/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},Al={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},Jl=t("td",{style:{"text-align":"center"}},"87",-1),Rl=t("td",{style:{"text-align":"left"}},"扰乱字符串",-1),Sl=t("td",{style:{"text-align":"center"}},null,-1),Ul={style:{"text-align":"left"}},Wl=t("code",null,"字符串",-1),Xl=t("code",null,"动态规划",-1),Fl=t("td",{style:{"text-align":"left"}},"🔴",-1),Gl={style:{"text-align":"center"}},Hl={href:"https://leetcode.cn/problems/scramble-string",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://leetcode.com/problems/scramble-string",target:"_blank",rel:"noopener noreferrer"},Ql=t("td",{style:{"text-align":"center"}},"91",-1),Zl=t("td",{style:{"text-align":"left"}},"解码方法",-1),$l=t("td",{style:{"text-align":"center"}},null,-1),tn={style:{"text-align":"left"}},en=t("code",null,"字符串",-1),on=t("code",null,"动态规划",-1),ln=t("td",{style:{"text-align":"left"}},"🟠",-1),nn={style:{"text-align":"center"}},sn={href:"https://leetcode.cn/problems/decode-ways",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://leetcode.com/problems/decode-ways",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},"95",-1),_n=t("td",{style:{"text-align":"left"}},"不同的二叉搜索树 II",-1),an={style:{"text-align":"center"}},cn={style:{"text-align":"left"}},hn=t("code",null,"树",-1),gn=t("code",null,"二叉搜索树",-1),mn=t("code",null,"动态规划",-1),fn=t("code",null,"2+",-1),un=t("td",{style:{"text-align":"left"}},"🟠",-1),yn={style:{"text-align":"center"}},pn={href:"https://leetcode.cn/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},bn=t("td",{style:{"text-align":"center"}},"96",-1),kn=t("td",{style:{"text-align":"left"}},"不同的二叉搜索树",-1),wn={style:{"text-align":"center"}},vn={style:{"text-align":"left"}},In=t("code",null,"树",-1),qn=t("code",null,"二叉搜索树",-1),zn=t("code",null,"数学",-1),jn=t("code",null,"2+",-1),Cn=t("td",{style:{"text-align":"left"}},"🟠",-1),On={style:{"text-align":"center"}},Ln={href:"https://leetcode.cn/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},Kn=t("td",{style:{"text-align":"center"}},"97",-1),Vn=t("td",{style:{"text-align":"left"}},"交错字符串",-1),Nn={style:{"text-align":"center"}},Dn={style:{"text-align":"left"}},En=t("code",null,"字符串",-1),Bn=t("code",null,"动态规划",-1),Mn=t("td",{style:{"text-align":"left"}},"🟠",-1),Yn={style:{"text-align":"center"}},An={href:"https://leetcode.cn/problems/interleaving-string",target:"_blank",rel:"noopener noreferrer"},Jn={href:"https://leetcode.com/problems/interleaving-string",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},"115",-1),Sn=t("td",{style:{"text-align":"left"}},"不同的子序列",-1),Un=t("td",{style:{"text-align":"center"}},null,-1),Wn={style:{"text-align":"left"}},Xn=t("code",null,"字符串",-1),Fn=t("code",null,"动态规划",-1),Gn=t("td",{style:{"text-align":"left"}},"🔴",-1),Hn={style:{"text-align":"center"}},Tn={href:"https://leetcode.cn/problems/distinct-subsequences",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://leetcode.com/problems/distinct-subsequences",target:"_blank",rel:"noopener noreferrer"},Zn=t("td",{style:{"text-align":"center"}},"118",-1),$n=t("td",{style:{"text-align":"left"}},"杨辉三角",-1),ts={style:{"text-align":"center"}},es={style:{"text-align":"left"}},os=t("code",null,"数组",-1),ls=t("code",null,"动态规划",-1),ns=t("td",{style:{"text-align":"left"}},"🟢",-1),ss={style:{"text-align":"center"}},rs={href:"https://leetcode.cn/problems/pascals-triangle",target:"_blank",rel:"noopener noreferrer"},ds={href:"https://leetcode.com/problems/pascals-triangle",target:"_blank",rel:"noopener noreferrer"},_s=t("td",{style:{"text-align":"center"}},"119",-1),as=t("td",{style:{"text-align":"left"}},"杨辉三角 II",-1),is=t("td",{style:{"text-align":"center"}},null,-1),cs={style:{"text-align":"left"}},hs=t("code",null,"数组",-1),gs=t("code",null,"动态规划",-1),ms=t("td",{style:{"text-align":"left"}},"🟢",-1),fs={style:{"text-align":"center"}},us={href:"https://leetcode.cn/problems/pascals-triangle-ii",target:"_blank",rel:"noopener noreferrer"},ys={href:"https://leetcode.com/problems/pascals-triangle-ii",target:"_blank",rel:"noopener noreferrer"},ps=t("td",{style:{"text-align":"center"}},"120",-1),xs=t("td",{style:{"text-align":"left"}},"三角形最小路径和",-1),bs={style:{"text-align":"center"}},ks={style:{"text-align":"left"}},ws=t("code",null,"数组",-1),vs=t("code",null,"动态规划",-1),Is=t("td",{style:{"text-align":"left"}},"🟠",-1),qs={style:{"text-align":"center"}},zs={href:"https://leetcode.cn/problems/triangle",target:"_blank",rel:"noopener noreferrer"},js={href:"https://leetcode.com/problems/triangle",target:"_blank",rel:"noopener noreferrer"},Cs=t("td",{style:{"text-align":"center"}},"121",-1),Os=t("td",{style:{"text-align":"left"}},"买卖股票的最佳时机",-1),Ls={style:{"text-align":"center"}},Ps={style:{"text-align":"left"}},Ks=t("code",null,"数组",-1),Vs=t("code",null,"动态规划",-1),Ns=t("td",{style:{"text-align":"left"}},"🟢",-1),Ds={style:{"text-align":"center"}},Es={href:"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock",target:"_blank",rel:"noopener noreferrer"},Bs={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock",target:"_blank",rel:"noopener noreferrer"},Ms=t("td",{style:{"text-align":"center"}},"122",-1),Ys=t("td",{style:{"text-align":"left"}},"买卖股票的最佳时机 II",-1),As={style:{"text-align":"center"}},Js={style:{"text-align":"left"}},Rs=t("code",null,"贪心",-1),Ss=t("code",null,"数组",-1),Us=t("code",null,"动态规划",-1),Ws=t("td",{style:{"text-align":"left"}},"🟠",-1),Xs={style:{"text-align":"center"}},Fs={href:"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii",target:"_blank",rel:"noopener noreferrer"},Gs={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",target:"_blank",rel:"noopener noreferrer"},Hs=t("td",{style:{"text-align":"center"}},"123",-1),Ts=t("td",{style:{"text-align":"left"}},"买卖股票的最佳时机 III",-1),Qs={style:{"text-align":"center"}},Zs={style:{"text-align":"left"}},$s=t("code",null,"数组",-1),tr=t("code",null,"动态规划",-1),er=t("td",{style:{"text-align":"left"}},"🔴",-1),or={style:{"text-align":"center"}},lr={href:"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-iii",target:"_blank",rel:"noopener noreferrer"},nr={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",target:"_blank",rel:"noopener noreferrer"},sr=t("td",{style:{"text-align":"center"}},"124",-1),rr=t("td",{style:{"text-align":"left"}},"二叉树中的最大路径和",-1),dr={style:{"text-align":"center"}},_r={style:{"text-align":"left"}},ar=t("code",null,"树",-1),ir=t("code",null,"深度优先搜索",-1),cr=t("code",null,"动态规划",-1),hr=t("code",null,"1+",-1),gr=t("td",{style:{"text-align":"left"}},"🔴",-1),mr={style:{"text-align":"center"}},fr={href:"https://leetcode.cn/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},ur={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},yr=t("td",{style:{"text-align":"center"}},"131",-1),pr=t("td",{style:{"text-align":"left"}},"分割回文串",-1),xr={style:{"text-align":"center"}},br={style:{"text-align":"left"}},kr=t("code",null,"字符串",-1),wr=t("code",null,"动态规划",-1),vr=t("code",null,"回溯",-1),Ir=t("td",{style:{"text-align":"left"}},"🟠",-1),qr={style:{"text-align":"center"}},zr={href:"https://leetcode.cn/problems/palindrome-partitioning",target:"_blank",rel:"noopener noreferrer"},jr={href:"https://leetcode.com/problems/palindrome-partitioning",target:"_blank",rel:"noopener noreferrer"},Cr=t("td",{style:{"text-align":"center"}},"132",-1),Or=t("td",{style:{"text-align":"left"}},"分割回文串 II",-1),Lr=t("td",{style:{"text-align":"center"}},null,-1),Pr={style:{"text-align":"left"}},Kr=t("code",null,"字符串",-1),Vr=t("code",null,"动态规划",-1),Nr=t("td",{style:{"text-align":"left"}},"🔴",-1),Dr={style:{"text-align":"center"}},Er={href:"https://leetcode.cn/problems/palindrome-partitioning-ii",target:"_blank",rel:"noopener noreferrer"},Br={href:"https://leetcode.com/problems/palindrome-partitioning-ii",target:"_blank",rel:"noopener noreferrer"},Mr=t("td",{style:{"text-align":"center"}},"139",-1),Yr=t("td",{style:{"text-align":"left"}},"单词拆分",-1),Ar={style:{"text-align":"center"}},Jr={style:{"text-align":"left"}},Rr=t("code",null,"字典树",-1),Sr=t("code",null,"记忆化搜索",-1),Ur=t("code",null,"数组",-1),Wr=t("code",null,"3+",-1),Xr=t("td",{style:{"text-align":"left"}},"🟠",-1),Fr={style:{"text-align":"center"}},Gr={href:"https://leetcode.cn/problems/word-break",target:"_blank",rel:"noopener noreferrer"},Hr={href:"https://leetcode.com/problems/word-break",target:"_blank",rel:"noopener noreferrer"},Tr=t("td",{style:{"text-align":"center"}},"140",-1),Qr=t("td",{style:{"text-align":"left"}},"单词拆分 II",-1),Zr=t("td",{style:{"text-align":"center"}},null,-1),$r={style:{"text-align":"left"}},td=t("code",null,"字典树",-1),ed=t("code",null,"记忆化搜索",-1),od=t("code",null,"数组",-1),ld=t("code",null,"4+",-1),nd=t("td",{style:{"text-align":"left"}},"🔴",-1),sd={style:{"text-align":"center"}},rd={href:"https://leetcode.cn/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},dd={href:"https://leetcode.com/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},_d=t("td",{style:{"text-align":"center"}},"152",-1),ad=t("td",{style:{"text-align":"left"}},"乘积最大子数组",-1),id={style:{"text-align":"center"}},cd={style:{"text-align":"left"}},hd=t("code",null,"数组",-1),gd=t("code",null,"动态规划",-1),md=t("td",{style:{"text-align":"left"}},"🟠",-1),fd={style:{"text-align":"center"}},ud={href:"https://leetcode.cn/problems/maximum-product-subarray",target:"_blank",rel:"noopener noreferrer"},yd={href:"https://leetcode.com/problems/maximum-product-subarray",target:"_blank",rel:"noopener noreferrer"},pd=t("td",{style:{"text-align":"center"}},"174",-1),xd=t("td",{style:{"text-align":"left"}},"地下城游戏",-1),bd={style:{"text-align":"center"}},kd={style:{"text-align":"left"}},wd=t("code",null,"数组",-1),vd=t("code",null,"动态规划",-1),Id=t("code",null,"矩阵",-1),qd=t("td",{style:{"text-align":"left"}},"🔴",-1),zd={style:{"text-align":"center"}},jd={href:"https://leetcode.cn/problems/dungeon-game",target:"_blank",rel:"noopener noreferrer"},Cd={href:"https://leetcode.com/problems/dungeon-game",target:"_blank",rel:"noopener noreferrer"},Od=t("td",{style:{"text-align":"center"}},"188",-1),Ld=t("td",{style:{"text-align":"left"}},"买卖股票的最佳时机 IV",-1),Pd={style:{"text-align":"center"}},Kd={style:{"text-align":"left"}},Vd=t("code",null,"数组",-1),Nd=t("code",null,"动态规划",-1),Dd=t("td",{style:{"text-align":"left"}},"🔴",-1),Ed={style:{"text-align":"center"}},Bd={href:"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-iv",target:"_blank",rel:"noopener noreferrer"},Md={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",target:"_blank",rel:"noopener noreferrer"},Yd=t("td",{style:{"text-align":"center"}},"198",-1),Ad=t("td",{style:{"text-align":"left"}},"打家劫舍",-1),Jd={style:{"text-align":"center"}},Rd={style:{"text-align":"left"}},Sd=t("code",null,"数组",-1),Ud=t("code",null,"动态规划",-1),Wd=t("td",{style:{"text-align":"left"}},"🟠",-1),Xd={style:{"text-align":"center"}},Fd={href:"https://leetcode.cn/problems/house-robber",target:"_blank",rel:"noopener noreferrer"},Gd={href:"https://leetcode.com/problems/house-robber",target:"_blank",rel:"noopener noreferrer"},Hd=t("td",{style:{"text-align":"center"}},"213",-1),Td=t("td",{style:{"text-align":"left"}},"打家劫舍 II",-1),Qd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},$d=t("code",null,"数组",-1),t_=t("code",null,"动态规划",-1),e_=t("td",{style:{"text-align":"left"}},"🟠",-1),o_={style:{"text-align":"center"}},l_={href:"https://leetcode.cn/problems/house-robber-ii",target:"_blank",rel:"noopener noreferrer"},n_={href:"https://leetcode.com/problems/house-robber-ii",target:"_blank",rel:"noopener noreferrer"},s_=t("td",{style:{"text-align":"center"}},"221",-1),r_=t("td",{style:{"text-align":"left"}},"最大正方形",-1),d_={style:{"text-align":"center"}},__={style:{"text-align":"left"}},a_=t("code",null,"数组",-1),i_=t("code",null,"动态规划",-1),c_=t("code",null,"矩阵",-1),h_=t("td",{style:{"text-align":"left"}},"🟠",-1),g_={style:{"text-align":"center"}},m_={href:"https://leetcode.cn/problems/maximal-square",target:"_blank",rel:"noopener noreferrer"},f_={href:"https://leetcode.com/problems/maximal-square",target:"_blank",rel:"noopener noreferrer"},u_=t("td",{style:{"text-align":"center"}},"233",-1),y_=t("td",{style:{"text-align":"left"}},"数字 1 的个数",-1),p_={style:{"text-align":"center"}},x_={style:{"text-align":"left"}},b_=t("code",null,"递归",-1),k_=t("code",null,"数学",-1),w_=t("code",null,"动态规划",-1),v_=t("td",{style:{"text-align":"left"}},"🔴",-1),I_={style:{"text-align":"center"}},q_={href:"https://leetcode.cn/problems/number-of-digit-one",target:"_blank",rel:"noopener noreferrer"},z_={href:"https://leetcode.com/problems/number-of-digit-one",target:"_blank",rel:"noopener noreferrer"},j_=t("td",{style:{"text-align":"center"}},"241",-1),C_=t("td",{style:{"text-align":"left"}},"为运算表达式设计优先级",-1),O_=t("td",{style:{"text-align":"center"}},null,-1),L_={style:{"text-align":"left"}},P_=t("code",null,"递归",-1),K_=t("code",null,"记忆化搜索",-1),V_=t("code",null,"数学",-1),N_=t("code",null,"2+",-1),D_=t("td",{style:{"text-align":"left"}},"🟠",-1),E_={style:{"text-align":"center"}},B_={href:"https://leetcode.cn/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},M_={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},Y_=t("td",{style:{"text-align":"center"}},"256",-1),A_=t("td",{style:{"text-align":"left"}},"粉刷房子 🔒",-1),J_=t("td",{style:{"text-align":"center"}},null,-1),R_={style:{"text-align":"left"}},S_=t("code",null,"数组",-1),U_=t("code",null,"动态规划",-1),W_=t("td",{style:{"text-align":"left"}},"🟠",-1),X_={style:{"text-align":"center"}},F_={href:"https://leetcode.cn/problems/paint-house",target:"_blank",rel:"noopener noreferrer"},G_={href:"https://leetcode.com/problems/paint-house",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},"264",-1),T_=t("td",{style:{"text-align":"left"}},"丑数 II",-1),Q_={style:{"text-align":"center"}},Z_={style:{"text-align":"left"}},$_=t("code",null,"哈希表",-1),ta=t("code",null,"数学",-1),ea=t("code",null,"动态规划",-1),oa=t("code",null,"1+",-1),la=t("td",{style:{"text-align":"left"}},"🟠",-1),na={style:{"text-align":"center"}},sa={href:"https://leetcode.cn/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},ra={href:"https://leetcode.com/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},da=t("td",{style:{"text-align":"center"}},"265",-1),_a=t("td",{style:{"text-align":"left"}},"粉刷房子 II 🔒",-1),aa=t("td",{style:{"text-align":"center"}},null,-1),ia={style:{"text-align":"left"}},ca=t("code",null,"数组",-1),ha=t("code",null,"动态规划",-1),ga=t("td",{style:{"text-align":"left"}},"🔴",-1),ma={style:{"text-align":"center"}},fa={href:"https://leetcode.cn/problems/paint-house-ii",target:"_blank",rel:"noopener noreferrer"},ua={href:"https://leetcode.com/problems/paint-house-ii",target:"_blank",rel:"noopener noreferrer"},ya=t("td",{style:{"text-align":"center"}},"276",-1),pa=t("td",{style:{"text-align":"left"}},"栅栏涂色 🔒",-1),xa=t("td",{style:{"text-align":"center"}},null,-1),ba={style:{"text-align":"left"}},ka=t("code",null,"动态规划",-1),wa=t("td",{style:{"text-align":"left"}},"🟠",-1),va={style:{"text-align":"center"}},Ia={href:"https://leetcode.cn/problems/paint-fence",target:"_blank",rel:"noopener noreferrer"},qa={href:"https://leetcode.com/problems/paint-fence",target:"_blank",rel:"noopener noreferrer"},za=t("td",{style:{"text-align":"center"}},"279",-1),ja=t("td",{style:{"text-align":"left"}},"完全平方数",-1),Ca={style:{"text-align":"center"}},Oa={style:{"text-align":"left"}},La=t("code",null,"广度优先搜索",-1),Pa=t("code",null,"数学",-1),Ka=t("code",null,"动态规划",-1),Va=t("td",{style:{"text-align":"left"}},"🟠",-1),Na={style:{"text-align":"center"}},Da={href:"https://leetcode.cn/problems/perfect-squares",target:"_blank",rel:"noopener noreferrer"},Ea={href:"https://leetcode.com/problems/perfect-squares",target:"_blank",rel:"noopener noreferrer"},Ba=t("td",{style:{"text-align":"center"}},"294",-1),Ma=t("td",{style:{"text-align":"left"}},"翻转游戏 II 🔒",-1),Ya=t("td",{style:{"text-align":"center"}},null,-1),Aa={style:{"text-align":"left"}},Ja=t("code",null,"记忆化搜索",-1),Ra=t("code",null,"数学",-1),Sa=t("code",null,"动态规划",-1),Ua=t("code",null,"2+",-1),Wa=t("td",{style:{"text-align":"left"}},"🟠",-1),Xa={style:{"text-align":"center"}},Fa={href:"https://leetcode.cn/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},Ga={href:"https://leetcode.com/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},Ha=t("td",{style:{"text-align":"center"}},"300",-1),Ta=t("td",{style:{"text-align":"left"}},"最长递增子序列",-1),Qa={style:{"text-align":"center"}},Za={style:{"text-align":"left"}},$a=t("code",null,"数组",-1),ti=t("code",null,"二分查找",-1),ei=t("code",null,"动态规划",-1),oi=t("td",{style:{"text-align":"left"}},"🟠",-1),li={style:{"text-align":"center"}},ni={href:"https://leetcode.cn/problems/longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},si={href:"https://leetcode.com/problems/longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},ri=t("td",{style:{"text-align":"center"}},"309",-1),di=t("td",{style:{"text-align":"left"}},"买卖股票的最佳时机含冷冻期",-1),_i={style:{"text-align":"center"}},ai={style:{"text-align":"left"}},ii=t("code",null,"数组",-1),ci=t("code",null,"动态规划",-1),hi=t("td",{style:{"text-align":"left"}},"🟠",-1),gi={style:{"text-align":"center"}},mi={href:"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-with-cooldown",target:"_blank",rel:"noopener noreferrer"},fi={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",target:"_blank",rel:"noopener noreferrer"},ui=t("td",{style:{"text-align":"center"}},"312",-1),yi=t("td",{style:{"text-align":"left"}},"戳气球",-1),pi=t("td",{style:{"text-align":"center"}},null,-1),xi={style:{"text-align":"left"}},bi=t("code",null,"数组",-1),ki=t("code",null,"动态规划",-1),wi=t("td",{style:{"text-align":"left"}},"🔴",-1),vi={style:{"text-align":"center"}},Ii={href:"https://leetcode.cn/problems/burst-balloons",target:"_blank",rel:"noopener noreferrer"},qi={href:"https://leetcode.com/problems/burst-balloons",target:"_blank",rel:"noopener noreferrer"},zi=t("td",{style:{"text-align":"center"}},"313",-1),ji=t("td",{style:{"text-align":"left"}},"超级丑数",-1),Ci=t("td",{style:{"text-align":"center"}},null,-1),Oi={style:{"text-align":"left"}},Li=t("code",null,"数组",-1),Pi=t("code",null,"数学",-1),Ki=t("code",null,"动态规划",-1),Vi=t("td",{style:{"text-align":"left"}},"🟠",-1),Ni={style:{"text-align":"center"}},Di={href:"https://leetcode.cn/problems/super-ugly-number",target:"_blank",rel:"noopener noreferrer"},Ei={href:"https://leetcode.com/problems/super-ugly-number",target:"_blank",rel:"noopener noreferrer"},Bi=t("td",{style:{"text-align":"center"}},"322",-1),Mi=t("td",{style:{"text-align":"left"}},"零钱兑换",-1),Yi={style:{"text-align":"center"}},Ai={style:{"text-align":"left"}},Ji=t("code",null,"广度优先搜索",-1),Ri=t("code",null,"数组",-1),Si=t("code",null,"动态规划",-1),Ui=t("td",{style:{"text-align":"left"}},"🟠",-1),Wi={style:{"text-align":"center"}},Xi={href:"https://leetcode.cn/problems/coin-change",target:"_blank",rel:"noopener noreferrer"},Fi={href:"https://leetcode.com/problems/coin-change",target:"_blank",rel:"noopener noreferrer"},Gi=t("td",{style:{"text-align":"center"}},"329",-1),Hi=t("td",{style:{"text-align":"left"}},"矩阵中的最长递增路径",-1),Ti=t("td",{style:{"text-align":"center"}},null,-1),Qi={style:{"text-align":"left"}},Zi=t("code",null,"深度优先搜索",-1),$i=t("code",null,"广度优先搜索",-1),tc=t("code",null,"图",-1),ec=t("code",null,"5+",-1),oc=t("td",{style:{"text-align":"left"}},"🔴",-1),lc={style:{"text-align":"center"}},nc={href:"https://leetcode.cn/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},sc={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},rc=t("td",{style:{"text-align":"center"}},"333",-1),dc=t("td",{style:{"text-align":"left"}},"最大二叉搜索子树 🔒",-1),_c=t("td",{style:{"text-align":"center"}},null,-1),ac={style:{"text-align":"left"}},ic=t("code",null,"树",-1),cc=t("code",null,"深度优先搜索",-1),hc=t("code",null,"二叉搜索树",-1),gc=t("code",null,"2+",-1),mc=t("td",{style:{"text-align":"left"}},"🟠",-1),fc={style:{"text-align":"center"}},uc={href:"https://leetcode.cn/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},yc={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},pc=t("td",{style:{"text-align":"center"}},"337",-1),xc=t("td",{style:{"text-align":"left"}},"打家劫舍 III",-1),bc=t("td",{style:{"text-align":"center"}},null,-1),kc={style:{"text-align":"left"}},wc=t("code",null,"树",-1),vc=t("code",null,"深度优先搜索",-1),Ic=t("code",null,"动态规划",-1),qc=t("code",null,"1+",-1),zc=t("td",{style:{"text-align":"left"}},"🟠",-1),jc={style:{"text-align":"center"}},Cc={href:"https://leetcode.cn/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Oc={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Lc=t("td",{style:{"text-align":"center"}},"338",-1),Pc=t("td",{style:{"text-align":"left"}},"比特位计数",-1),Kc={style:{"text-align":"center"}},Vc={style:{"text-align":"left"}},Nc=t("code",null,"位运算",-1),Dc=t("code",null,"动态规划",-1),Ec=t("td",{style:{"text-align":"left"}},"🟢",-1),Bc={style:{"text-align":"center"}},Mc={href:"https://leetcode.cn/problems/counting-bits",target:"_blank",rel:"noopener noreferrer"},Yc={href:"https://leetcode.com/problems/counting-bits",target:"_blank",rel:"noopener noreferrer"},Ac=t("td",{style:{"text-align":"center"}},"343",-1),Jc=t("td",{style:{"text-align":"left"}},"整数拆分",-1),Rc={style:{"text-align":"center"}},Sc={style:{"text-align":"left"}},Uc=t("code",null,"数学",-1),Wc=t("code",null,"动态规划",-1),Xc=t("td",{style:{"text-align":"left"}},"🟠",-1),Fc={style:{"text-align":"center"}},Gc={href:"https://leetcode.cn/problems/integer-break",target:"_blank",rel:"noopener noreferrer"},Hc={href:"https://leetcode.com/problems/integer-break",target:"_blank",rel:"noopener noreferrer"},Tc=t("td",{style:{"text-align":"center"}},"351",-1),Qc=t("td",{style:{"text-align":"left"}},"安卓系统手势解锁 🔒",-1),Zc=t("td",{style:{"text-align":"center"}},null,-1),$c={style:{"text-align":"left"}},th=t("code",null,"位运算",-1),eh=t("code",null,"动态规划",-1),oh=t("code",null,"回溯",-1),lh=t("code",null,"1+",-1),nh=t("td",{style:{"text-align":"left"}},"🟠",-1),sh={style:{"text-align":"center"}},rh={href:"https://leetcode.cn/problems/android-unlock-patterns",target:"_blank",rel:"noopener noreferrer"},dh={href:"https://leetcode.com/problems/android-unlock-patterns",target:"_blank",rel:"noopener noreferrer"},_h=t("td",{style:{"text-align":"center"}},"354",-1),ah=t("td",{style:{"text-align":"left"}},"俄罗斯套娃信封问题",-1),ih={style:{"text-align":"center"}},ch={style:{"text-align":"left"}},hh=t("code",null,"数组",-1),gh=t("code",null,"二分查找",-1),mh=t("code",null,"动态规划",-1),fh=t("code",null,"1+",-1),uh=t("td",{style:{"text-align":"left"}},"🔴",-1),yh={style:{"text-align":"center"}},ph={href:"https://leetcode.cn/problems/russian-doll-envelopes",target:"_blank",rel:"noopener noreferrer"},xh={href:"https://leetcode.com/problems/russian-doll-envelopes",target:"_blank",rel:"noopener noreferrer"},bh=t("td",{style:{"text-align":"center"}},"357",-1),kh=t("td",{style:{"text-align":"left"}},"统计各位数字都不同的数字个数",-1),wh=t("td",{style:{"text-align":"center"}},null,-1),vh={style:{"text-align":"left"}},Ih=t("code",null,"数学",-1),qh=t("code",null,"动态规划",-1),zh=t("code",null,"回溯",-1),jh=t("td",{style:{"text-align":"left"}},"🟠",-1),Ch={style:{"text-align":"center"}},Oh={href:"https://leetcode.cn/problems/count-numbers-with-unique-digits",target:"_blank",rel:"noopener noreferrer"},Lh={href:"https://leetcode.com/problems/count-numbers-with-unique-digits",target:"_blank",rel:"noopener noreferrer"},Ph=t("td",{style:{"text-align":"center"}},"361",-1),Kh=t("td",{style:{"text-align":"left"}},"轰炸敌人 🔒",-1),Vh=t("td",{style:{"text-align":"center"}},null,-1),Nh={style:{"text-align":"left"}},Dh=t("code",null,"数组",-1),Eh=t("code",null,"动态规划",-1),Bh=t("code",null,"矩阵",-1),Mh=t("td",{style:{"text-align":"left"}},"🟠",-1),Yh={style:{"text-align":"center"}},Ah={href:"https://leetcode.cn/problems/bomb-enemy",target:"_blank",rel:"noopener noreferrer"},Jh={href:"https://leetcode.com/problems/bomb-enemy",target:"_blank",rel:"noopener noreferrer"},Rh=t("td",{style:{"text-align":"center"}},"368",-1),Sh=t("td",{style:{"text-align":"left"}},"最大整除子集",-1),Uh=t("td",{style:{"text-align":"center"}},null,-1),Wh={style:{"text-align":"left"}},Xh=t("code",null,"数组",-1),Fh=t("code",null,"数学",-1),Gh=t("code",null,"动态规划",-1),Hh=t("code",null,"1+",-1),Th=t("td",{style:{"text-align":"left"}},"🟠",-1),Qh={style:{"text-align":"center"}},Zh={href:"https://leetcode.cn/problems/largest-divisible-subset",target:"_blank",rel:"noopener noreferrer"},$h={href:"https://leetcode.com/problems/largest-divisible-subset",target:"_blank",rel:"noopener noreferrer"},t1=t("td",{style:{"text-align":"center"}},"375",-1),e1=t("td",{style:{"text-align":"left"}},"猜数字大小 II",-1),o1={style:{"text-align":"center"}},l1={style:{"text-align":"left"}},n1=t("code",null,"数学",-1),s1=t("code",null,"动态规划",-1),r1=t("code",null,"博弈",-1),d1=t("td",{style:{"text-align":"left"}},"🟠",-1),_1={style:{"text-align":"center"}},a1={href:"https://leetcode.cn/problems/guess-number-higher-or-lower-ii",target:"_blank",rel:"noopener noreferrer"},i1={href:"https://leetcode.com/problems/guess-number-higher-or-lower-ii",target:"_blank",rel:"noopener noreferrer"},c1=t("td",{style:{"text-align":"center"}},"376",-1),h1=t("td",{style:{"text-align":"left"}},"摆动序列",-1),g1=t("td",{style:{"text-align":"center"}},null,-1),m1={style:{"text-align":"left"}},f1=t("code",null,"贪心",-1),u1=t("code",null,"数组",-1),y1=t("code",null,"动态规划",-1),p1=t("td",{style:{"text-align":"left"}},"🟠",-1),x1={style:{"text-align":"center"}},b1={href:"https://leetcode.cn/problems/wiggle-subsequence",target:"_blank",rel:"noopener noreferrer"},k1={href:"https://leetcode.com/problems/wiggle-subsequence",target:"_blank",rel:"noopener noreferrer"},w1=t("td",{style:{"text-align":"center"}},"377",-1),v1=t("td",{style:{"text-align":"left"}},"组合总和 Ⅳ",-1),I1=t("td",{style:{"text-align":"center"}},null,-1),q1={style:{"text-align":"left"}},z1=t("code",null,"数组",-1),j1=t("code",null,"动态规划",-1),C1=t("td",{style:{"text-align":"left"}},"🟠",-1),O1={style:{"text-align":"center"}},L1={href:"https://leetcode.cn/problems/combination-sum-iv",target:"_blank",rel:"noopener noreferrer"},P1={href:"https://leetcode.com/problems/combination-sum-iv",target:"_blank",rel:"noopener noreferrer"},K1=t("td",{style:{"text-align":"center"}},"392",-1),V1=t("td",{style:{"text-align":"left"}},"判断子序列",-1),N1={style:{"text-align":"center"}},D1={style:{"text-align":"left"}},E1=t("code",null,"双指针",-1),B1=t("code",null,"字符串",-1),M1=t("code",null,"动态规划",-1),Y1=t("td",{style:{"text-align":"left"}},"🟢",-1),A1={style:{"text-align":"center"}},J1={href:"https://leetcode.cn/problems/is-subsequence",target:"_blank",rel:"noopener noreferrer"},R1={href:"https://leetcode.com/problems/is-subsequence",target:"_blank",rel:"noopener noreferrer"},S1=t("td",{style:{"text-align":"center"}},"396",-1),U1=t("td",{style:{"text-align":"left"}},"旋转函数",-1),W1=t("td",{style:{"text-align":"center"}},null,-1),X1={style:{"text-align":"left"}},F1=t("code",null,"数组",-1),G1=t("code",null,"数学",-1),H1=t("code",null,"动态规划",-1),T1=t("td",{style:{"text-align":"left"}},"🟠",-1),Q1={style:{"text-align":"center"}},Z1={href:"https://leetcode.cn/problems/rotate-function",target:"_blank",rel:"noopener noreferrer"},$1={href:"https://leetcode.com/problems/rotate-function",target:"_blank",rel:"noopener noreferrer"},tg=t("td",{style:{"text-align":"center"}},"397",-1),eg=t("td",{style:{"text-align":"left"}},"整数替换",-1),og=t("td",{style:{"text-align":"center"}},null,-1),lg={style:{"text-align":"left"}},ng=t("code",null,"贪心",-1),sg=t("code",null,"位运算",-1),rg=t("code",null,"记忆化搜索",-1),dg=t("code",null,"1+",-1),_g=t("td",{style:{"text-align":"left"}},"🟠",-1),ag={style:{"text-align":"center"}},ig={href:"https://leetcode.cn/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},cg={href:"https://leetcode.com/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},hg=t("td",{style:{"text-align":"center"}},"403",-1),gg=t("td",{style:{"text-align":"left"}},"青蛙过河",-1),mg=t("td",{style:{"text-align":"center"}},null,-1),fg={style:{"text-align":"left"}},ug=t("code",null,"数组",-1),yg=t("code",null,"动态规划",-1),pg=t("td",{style:{"text-align":"left"}},"🔴",-1),xg={style:{"text-align":"center"}},bg={href:"https://leetcode.cn/problems/frog-jump",target:"_blank",rel:"noopener noreferrer"},kg={href:"https://leetcode.com/problems/frog-jump",target:"_blank",rel:"noopener noreferrer"},wg=t("td",{style:{"text-align":"center"}},"410",-1),vg=t("td",{style:{"text-align":"left"}},"分割数组的最大值",-1),Ig=t("td",{style:{"text-align":"center"}},null,-1),qg={style:{"text-align":"left"}},zg=t("code",null,"贪心",-1),jg=t("code",null,"数组",-1),Cg=t("code",null,"二分查找",-1),Og=t("code",null,"2+",-1),Lg=t("td",{style:{"text-align":"left"}},"🔴",-1),Pg={style:{"text-align":"center"}},Kg={href:"https://leetcode.cn/problems/split-array-largest-sum",target:"_blank",rel:"noopener noreferrer"},Vg={href:"https://leetcode.com/problems/split-array-largest-sum",target:"_blank",rel:"noopener noreferrer"},Ng=t("td",{style:{"text-align":"center"}},"413",-1),Dg=t("td",{style:{"text-align":"left"}},"等差数列划分",-1),Eg=t("td",{style:{"text-align":"center"}},null,-1),Bg={style:{"text-align":"left"}},Mg=t("code",null,"数组",-1),Yg=t("code",null,"动态规划",-1),Ag=t("code",null,"滑动窗口",-1),Jg=t("td",{style:{"text-align":"left"}},"🟠",-1),Rg={style:{"text-align":"center"}},Sg={href:"https://leetcode.cn/problems/arithmetic-slices",target:"_blank",rel:"noopener noreferrer"},Ug={href:"https://leetcode.com/problems/arithmetic-slices",target:"_blank",rel:"noopener noreferrer"},Wg=t("td",{style:{"text-align":"center"}},"416",-1),Xg=t("td",{style:{"text-align":"left"}},"分割等和子集",-1),Fg={style:{"text-align":"center"}},Gg={style:{"text-align":"left"}},Hg=t("code",null,"数组",-1),Tg=t("code",null,"动态规划",-1),Qg=t("td",{style:{"text-align":"left"}},"🟠",-1),Zg={style:{"text-align":"center"}},$g={href:"https://leetcode.cn/problems/partition-equal-subset-sum",target:"_blank",rel:"noopener noreferrer"},tm={href:"https://leetcode.com/problems/partition-equal-subset-sum",target:"_blank",rel:"noopener noreferrer"},em=t("td",{style:{"text-align":"center"}},"418",-1),om=t("td",{style:{"text-align":"left"}},"屏幕可显示句子的数量 🔒",-1),lm=t("td",{style:{"text-align":"center"}},null,-1),nm={style:{"text-align":"left"}},sm=t("code",null,"数组",-1),rm=t("code",null,"字符串",-1),dm=t("code",null,"动态规划",-1),_m=t("td",{style:{"text-align":"left"}},"🟠",-1),am={style:{"text-align":"center"}},im={href:"https://leetcode.cn/problems/sentence-screen-fitting",target:"_blank",rel:"noopener noreferrer"},cm={href:"https://leetcode.com/problems/sentence-screen-fitting",target:"_blank",rel:"noopener noreferrer"},hm=t("td",{style:{"text-align":"center"}},"435",-1),gm=t("td",{style:{"text-align":"left"}},"无重叠区间",-1),mm={style:{"text-align":"center"}},fm={style:{"text-align":"left"}},um=t("code",null,"贪心",-1),ym=t("code",null,"数组",-1),pm=t("code",null,"动态规划",-1),xm=t("code",null,"1+",-1),bm=t("td",{style:{"text-align":"left"}},"🟠",-1),km={style:{"text-align":"center"}},wm={href:"https://leetcode.cn/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},vm={href:"https://leetcode.com/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},Im=t("td",{style:{"text-align":"center"}},"446",-1),qm=t("td",{style:{"text-align":"left"}},"等差数列划分 II - 子序列",-1),zm=t("td",{style:{"text-align":"center"}},null,-1),jm={style:{"text-align":"left"}},Cm=t("code",null,"数组",-1),Om=t("code",null,"动态规划",-1),Lm=t("td",{style:{"text-align":"left"}},"🔴",-1),Pm={style:{"text-align":"center"}},Km={href:"https://leetcode.cn/problems/arithmetic-slices-ii-subsequence",target:"_blank",rel:"noopener noreferrer"},Vm={href:"https://leetcode.com/problems/arithmetic-slices-ii-subsequence",target:"_blank",rel:"noopener noreferrer"},Nm=t("td",{style:{"text-align":"center"}},"458",-1),Dm=t("td",{style:{"text-align":"left"}},"可怜的小猪",-1),Em=t("td",{style:{"text-align":"center"}},null,-1),Bm={style:{"text-align":"left"}},Mm=t("code",null,"数学",-1),Ym=t("code",null,"动态规划",-1),Am=t("code",null,"组合数学",-1),Jm=t("td",{style:{"text-align":"left"}},"🔴",-1),Rm={style:{"text-align":"center"}},Sm={href:"https://leetcode.cn/problems/poor-pigs",target:"_blank",rel:"noopener noreferrer"},Um={href:"https://leetcode.com/problems/poor-pigs",target:"_blank",rel:"noopener noreferrer"},Wm=t("td",{style:{"text-align":"center"}},"464",-1),Xm=t("td",{style:{"text-align":"left"}},"我能赢吗",-1),Fm=t("td",{style:{"text-align":"center"}},null,-1),Gm={style:{"text-align":"left"}},Hm=t("code",null,"位运算",-1),Tm=t("code",null,"记忆化搜索",-1),Qm=t("code",null,"数学",-1),Zm=t("code",null,"3+",-1),$m=t("td",{style:{"text-align":"left"}},"🟠",-1),tf={style:{"text-align":"center"}},ef={href:"https://leetcode.cn/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},of={href:"https://leetcode.com/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},lf=t("td",{style:{"text-align":"center"}},"465",-1),nf=t("td",{style:{"text-align":"left"}},"最优账单平衡 🔒",-1),sf=t("td",{style:{"text-align":"center"}},null,-1),rf={style:{"text-align":"left"}},df=t("code",null,"位运算",-1),_f=t("code",null,"数组",-1),af=t("code",null,"动态规划",-1),cf=t("code",null,"2+",-1),hf=t("td",{style:{"text-align":"left"}},"🔴",-1),gf={style:{"text-align":"center"}},mf={href:"https://leetcode.cn/problems/optimal-account-balancing",target:"_blank",rel:"noopener noreferrer"},ff={href:"https://leetcode.com/problems/optimal-account-balancing",target:"_blank",rel:"noopener noreferrer"},uf=t("td",{style:{"text-align":"center"}},"466",-1),yf=t("td",{style:{"text-align":"left"}},"统计重复个数",-1),pf=t("td",{style:{"text-align":"center"}},null,-1),xf={style:{"text-align":"left"}},bf=t("code",null,"字符串",-1),kf=t("code",null,"动态规划",-1),wf=t("td",{style:{"text-align":"left"}},"🔴",-1),vf={style:{"text-align":"center"}},If={href:"https://leetcode.cn/problems/count-the-repetitions",target:"_blank",rel:"noopener noreferrer"},qf={href:"https://leetcode.com/problems/count-the-repetitions",target:"_blank",rel:"noopener noreferrer"},zf=t("td",{style:{"text-align":"center"}},"467",-1),jf=t("td",{style:{"text-align":"left"}},"环绕字符串中唯一的子字符串",-1),Cf=t("td",{style:{"text-align":"center"}},null,-1),Of={style:{"text-align":"left"}},Lf=t("code",null,"字符串",-1),Pf=t("code",null,"动态规划",-1),Kf=t("td",{style:{"text-align":"left"}},"🟠",-1),Vf={style:{"text-align":"center"}},Nf={href:"https://leetcode.cn/problems/unique-substrings-in-wraparound-string",target:"_blank",rel:"noopener noreferrer"},Df={href:"https://leetcode.com/problems/unique-substrings-in-wraparound-string",target:"_blank",rel:"noopener noreferrer"},Ef=t("td",{style:{"text-align":"center"}},"471",-1),Bf=t("td",{style:{"text-align":"left"}},"编码最短长度的字符串 🔒",-1),Mf=t("td",{style:{"text-align":"center"}},null,-1),Yf={style:{"text-align":"left"}},Af=t("code",null,"字符串",-1),Jf=t("code",null,"动态规划",-1),Rf=t("td",{style:{"text-align":"left"}},"🔴",-1),Sf={style:{"text-align":"center"}},Uf={href:"https://leetcode.cn/problems/encode-string-with-shortest-length",target:"_blank",rel:"noopener noreferrer"},Wf={href:"https://leetcode.com/problems/encode-string-with-shortest-length",target:"_blank",rel:"noopener noreferrer"},Xf=t("td",{style:{"text-align":"center"}},"472",-1),Ff=t("td",{style:{"text-align":"left"}},"连接词",-1),Gf=t("td",{style:{"text-align":"center"}},null,-1),Hf={style:{"text-align":"left"}},Tf=t("code",null,"深度优先搜索",-1),Qf=t("code",null,"字典树",-1),Zf=t("code",null,"数组",-1),$f=t("code",null,"2+",-1),tu=t("td",{style:{"text-align":"left"}},"🔴",-1),eu={style:{"text-align":"center"}},ou={href:"https://leetcode.cn/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},lu={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},nu=t("td",{style:{"text-align":"center"}},"473",-1),su=t("td",{style:{"text-align":"left"}},"火柴拼正方形",-1),ru=t("td",{style:{"text-align":"center"}},null,-1),du={style:{"text-align":"left"}},_u=t("code",null,"位运算",-1),au=t("code",null,"数组",-1),iu=t("code",null,"动态规划",-1),cu=t("code",null,"2+",-1),hu=t("td",{style:{"text-align":"left"}},"🟠",-1),gu={style:{"text-align":"center"}},mu={href:"https://leetcode.cn/problems/matchsticks-to-square",target:"_blank",rel:"noopener noreferrer"},fu={href:"https://leetcode.com/problems/matchsticks-to-square",target:"_blank",rel:"noopener noreferrer"},uu=t("td",{style:{"text-align":"center"}},"474",-1),yu=t("td",{style:{"text-align":"left"}},"一和零",-1),pu={style:{"text-align":"center"}},xu={style:{"text-align":"left"}},bu=t("code",null,"数组",-1),ku=t("code",null,"字符串",-1),wu=t("code",null,"动态规划",-1),vu=t("td",{style:{"text-align":"left"}},"🟠",-1),Iu={style:{"text-align":"center"}},qu={href:"https://leetcode.cn/problems/ones-and-zeroes",target:"_blank",rel:"noopener noreferrer"},zu={href:"https://leetcode.com/problems/ones-and-zeroes",target:"_blank",rel:"noopener noreferrer"},ju=t("td",{style:{"text-align":"center"}},"486",-1),Cu=t("td",{style:{"text-align":"left"}},"预测赢家",-1),Ou=t("td",{style:{"text-align":"center"}},null,-1),Lu={style:{"text-align":"left"}},Pu=t("code",null,"递归",-1),Ku=t("code",null,"数组",-1),Vu=t("code",null,"数学",-1),Nu=t("code",null,"2+",-1),Du=t("td",{style:{"text-align":"left"}},"🟠",-1),Eu={style:{"text-align":"center"}},Bu={href:"https://leetcode.cn/problems/predict-the-winner",target:"_blank",rel:"noopener noreferrer"},Mu={href:"https://leetcode.com/problems/predict-the-winner",target:"_blank",rel:"noopener noreferrer"},Yu=t("td",{style:{"text-align":"center"}},"487",-1),Au=t("td",{style:{"text-align":"left"}},"最大连续1的个数 II 🔒",-1),Ju=t("td",{style:{"text-align":"center"}},null,-1),Ru={style:{"text-align":"left"}},Su=t("code",null,"数组",-1),Uu=t("code",null,"动态规划",-1),Wu=t("code",null,"滑动窗口",-1),Xu=t("td",{style:{"text-align":"left"}},"🟠",-1),Fu={style:{"text-align":"center"}},Gu={href:"https://leetcode.cn/problems/max-consecutive-ones-ii",target:"_blank",rel:"noopener noreferrer"},Hu={href:"https://leetcode.com/problems/max-consecutive-ones-ii",target:"_blank",rel:"noopener noreferrer"},Tu=t("td",{style:{"text-align":"center"}},"488",-1),Qu=t("td",{style:{"text-align":"left"}},"祖玛游戏",-1),Zu=t("td",{style:{"text-align":"center"}},null,-1),$u={style:{"text-align":"left"}},ty=t("code",null,"栈",-1),ey=t("code",null,"广度优先搜索",-1),oy=t("code",null,"记忆化搜索",-1),ly=t("code",null,"2+",-1),ny=t("td",{style:{"text-align":"left"}},"🔴",-1),sy={style:{"text-align":"center"}},ry={href:"https://leetcode.cn/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},dy={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},_y=t("td",{style:{"text-align":"center"}},"494",-1),ay=t("td",{style:{"text-align":"left"}},"目标和",-1),iy={style:{"text-align":"center"}},cy={style:{"text-align":"left"}},hy=t("code",null,"数组",-1),gy=t("code",null,"动态规划",-1),my=t("code",null,"回溯",-1),fy=t("td",{style:{"text-align":"left"}},"🟠",-1),uy={style:{"text-align":"center"}},yy={href:"https://leetcode.cn/problems/target-sum",target:"_blank",rel:"noopener noreferrer"},py={href:"https://leetcode.com/problems/target-sum",target:"_blank",rel:"noopener noreferrer"},xy=t("td",{style:{"text-align":"center"}},"509",-1),by=t("td",{style:{"text-align":"left"}},"斐波那契数",-1),ky={style:{"text-align":"center"}},wy={style:{"text-align":"left"}},vy=t("code",null,"递归",-1),Iy=t("code",null,"记忆化搜索",-1),qy=t("code",null,"数学",-1),zy=t("code",null,"1+",-1),jy=t("td",{style:{"text-align":"left"}},"🟢",-1),Cy={style:{"text-align":"center"}},Oy={href:"https://leetcode.cn/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},Ly={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},Py=t("td",{style:{"text-align":"center"}},"514",-1),Ky=t("td",{style:{"text-align":"left"}},"自由之路",-1),Vy={style:{"text-align":"center"}},Ny={style:{"text-align":"left"}},Dy=t("code",null,"深度优先搜索",-1),Ey=t("code",null,"广度优先搜索",-1),By=t("code",null,"字符串",-1),My=t("code",null,"1+",-1),Yy=t("td",{style:{"text-align":"left"}},"🔴",-1),Ay={style:{"text-align":"center"}},Jy={href:"https://leetcode.cn/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},Ry={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},Sy=t("td",{style:{"text-align":"center"}},"516",-1),Uy=t("td",{style:{"text-align":"left"}},"最长回文子序列",-1),Wy={style:{"text-align":"center"}},Xy={style:{"text-align":"left"}},Fy=t("code",null,"字符串",-1),Gy=t("code",null,"动态规划",-1),Hy=t("td",{style:{"text-align":"left"}},"🟠",-1),Ty={style:{"text-align":"center"}},Qy={href:"https://leetcode.cn/problems/longest-palindromic-subsequence",target:"_blank",rel:"noopener noreferrer"},Zy={href:"https://leetcode.com/problems/longest-palindromic-subsequence",target:"_blank",rel:"noopener noreferrer"},$y=t("td",{style:{"text-align":"center"}},"518",-1),tp=t("td",{style:{"text-align":"left"}},"零钱兑换 II",-1),ep={style:{"text-align":"center"}},op={style:{"text-align":"left"}},lp=t("code",null,"数组",-1),np=t("code",null,"动态规划",-1),sp=t("td",{style:{"text-align":"left"}},"🟠",-1),rp={style:{"text-align":"center"}},dp={href:"https://leetcode.cn/problems/coin-change-ii",target:"_blank",rel:"noopener noreferrer"},_p={href:"https://leetcode.com/problems/coin-change-ii",target:"_blank",rel:"noopener noreferrer"},ap=t("td",{style:{"text-align":"center"}},"526",-1),ip=t("td",{style:{"text-align":"left"}},"优美的排列",-1),cp=t("td",{style:{"text-align":"center"}},null,-1),hp={style:{"text-align":"left"}},gp=t("code",null,"位运算",-1),mp=t("code",null,"数组",-1),fp=t("code",null,"动态规划",-1),up=t("code",null,"2+",-1),yp=t("td",{style:{"text-align":"left"}},"🟠",-1),pp={style:{"text-align":"center"}},xp={href:"https://leetcode.cn/problems/beautiful-arrangement",target:"_blank",rel:"noopener noreferrer"},bp={href:"https://leetcode.com/problems/beautiful-arrangement",target:"_blank",rel:"noopener noreferrer"},kp=t("td",{style:{"text-align":"center"}},"542",-1),wp=t("td",{style:{"text-align":"left"}},"01 矩阵",-1),vp=t("td",{style:{"text-align":"center"}},null,-1),Ip={style:{"text-align":"left"}},qp=t("code",null,"广度优先搜索",-1),zp=t("code",null,"数组",-1),jp=t("code",null,"动态规划",-1),Cp=t("code",null,"1+",-1),Op=t("td",{style:{"text-align":"left"}},"🟠",-1),Lp={style:{"text-align":"center"}},Pp={href:"https://leetcode.cn/problems/01-matrix",target:"_blank",rel:"noopener noreferrer"},Kp={href:"https://leetcode.com/problems/01-matrix",target:"_blank",rel:"noopener noreferrer"},Vp=t("td",{style:{"text-align":"center"}},"546",-1),Np=t("td",{style:{"text-align":"left"}},"移除盒子",-1),Dp=t("td",{style:{"text-align":"center"}},null,-1),Ep={style:{"text-align":"left"}},Bp=t("code",null,"记忆化搜索",-1),Mp=t("code",null,"数组",-1),Yp=t("code",null,"动态规划",-1),Ap=t("td",{style:{"text-align":"left"}},"🔴",-1),Jp={style:{"text-align":"center"}},Rp={href:"https://leetcode.cn/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},Sp={href:"https://leetcode.com/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},Up=t("td",{style:{"text-align":"center"}},"552",-1),Wp=t("td",{style:{"text-align":"left"}},"学生出勤记录 II",-1),Xp=t("td",{style:{"text-align":"center"}},null,-1),Fp={style:{"text-align":"left"}},Gp=t("code",null,"动态规划",-1),Hp=t("td",{style:{"text-align":"left"}},"🔴",-1),Tp={style:{"text-align":"center"}},Qp={href:"https://leetcode.cn/problems/student-attendance-record-ii",target:"_blank",rel:"noopener noreferrer"},Zp={href:"https://leetcode.com/problems/student-attendance-record-ii",target:"_blank",rel:"noopener noreferrer"},$p=t("td",{style:{"text-align":"center"}},"553",-1),tx=t("td",{style:{"text-align":"left"}},"最优除法",-1),ex=t("td",{style:{"text-align":"center"}},null,-1),ox={style:{"text-align":"left"}},lx=t("code",null,"数组",-1),nx=t("code",null,"数学",-1),sx=t("code",null,"动态规划",-1),rx=t("td",{style:{"text-align":"left"}},"🟠",-1),dx={style:{"text-align":"center"}},_x={href:"https://leetcode.cn/problems/optimal-division",target:"_blank",rel:"noopener noreferrer"},ax={href:"https://leetcode.com/problems/optimal-division",target:"_blank",rel:"noopener noreferrer"},ix=t("td",{style:{"text-align":"center"}},"562",-1),cx=t("td",{style:{"text-align":"left"}},"矩阵中最长的连续1线段 🔒",-1),hx=t("td",{style:{"text-align":"center"}},null,-1),gx={style:{"text-align":"left"}},mx=t("code",null,"数组",-1),fx=t("code",null,"动态规划",-1),ux=t("code",null,"矩阵",-1),yx=t("td",{style:{"text-align":"left"}},"🟠",-1),px={style:{"text-align":"center"}},xx={href:"https://leetcode.cn/problems/longest-line-of-consecutive-one-in-matrix",target:"_blank",rel:"noopener noreferrer"},bx={href:"https://leetcode.com/problems/longest-line-of-consecutive-one-in-matrix",target:"_blank",rel:"noopener noreferrer"},kx=t("td",{style:{"text-align":"center"}},"568",-1),wx=t("td",{style:{"text-align":"left"}},"最大休假天数 🔒",-1),vx=t("td",{style:{"text-align":"center"}},null,-1),Ix={style:{"text-align":"left"}},qx=t("code",null,"数组",-1),zx=t("code",null,"动态规划",-1),jx=t("code",null,"矩阵",-1),Cx=t("td",{style:{"text-align":"left"}},"🔴",-1),Ox={style:{"text-align":"center"}},Lx={href:"https://leetcode.cn/problems/maximum-vacation-days",target:"_blank",rel:"noopener noreferrer"},Px={href:"https://leetcode.com/problems/maximum-vacation-days",target:"_blank",rel:"noopener noreferrer"},Kx=t("td",{style:{"text-align":"center"}},"576",-1),Vx=t("td",{style:{"text-align":"left"}},"出界的路径数",-1),Nx=t("td",{style:{"text-align":"center"}},null,-1),Dx={style:{"text-align":"left"}},Ex=t("code",null,"动态规划",-1),Bx=t("td",{style:{"text-align":"left"}},"🟠",-1),Mx={style:{"text-align":"center"}},Yx={href:"https://leetcode.cn/problems/out-of-boundary-paths",target:"_blank",rel:"noopener noreferrer"},Ax={href:"https://leetcode.com/problems/out-of-boundary-paths",target:"_blank",rel:"noopener noreferrer"},Jx=t("td",{style:{"text-align":"center"}},"583",-1),Rx=t("td",{style:{"text-align":"left"}},"两个字符串的删除操作",-1),Sx={style:{"text-align":"center"}},Ux={style:{"text-align":"left"}},Wx=t("code",null,"字符串",-1),Xx=t("code",null,"动态规划",-1),Fx=t("td",{style:{"text-align":"left"}},"🟠",-1),Gx={style:{"text-align":"center"}},Hx={href:"https://leetcode.cn/problems/delete-operation-for-two-strings",target:"_blank",rel:"noopener noreferrer"},Tx={href:"https://leetcode.com/problems/delete-operation-for-two-strings",target:"_blank",rel:"noopener noreferrer"},Qx=t("td",{style:{"text-align":"center"}},"600",-1),Zx=t("td",{style:{"text-align":"left"}},"不含连续1的非负整数",-1),$x=t("td",{style:{"text-align":"center"}},null,-1),t2={style:{"text-align":"left"}},e2=t("code",null,"动态规划",-1),o2=t("td",{style:{"text-align":"left"}},"🔴",-1),l2={style:{"text-align":"center"}},n2={href:"https://leetcode.cn/problems/non-negative-integers-without-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},s2={href:"https://leetcode.com/problems/non-negative-integers-without-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},r2=t("td",{style:{"text-align":"center"}},"629",-1),d2=t("td",{style:{"text-align":"left"}},"K 个逆序对数组",-1),_2=t("td",{style:{"text-align":"center"}},null,-1),a2={style:{"text-align":"left"}},i2=t("code",null,"动态规划",-1),c2=t("td",{style:{"text-align":"left"}},"🔴",-1),h2={style:{"text-align":"center"}},g2={href:"https://leetcode.cn/problems/k-inverse-pairs-array",target:"_blank",rel:"noopener noreferrer"},m2={href:"https://leetcode.com/problems/k-inverse-pairs-array",target:"_blank",rel:"noopener noreferrer"},f2=t("td",{style:{"text-align":"center"}},"634",-1),u2=t("td",{style:{"text-align":"left"}},"寻找数组的错位排列 🔒",-1),y2=t("td",{style:{"text-align":"center"}},null,-1),p2={style:{"text-align":"left"}},x2=t("code",null,"数学",-1),b2=t("code",null,"动态规划",-1),k2=t("td",{style:{"text-align":"left"}},"🟠",-1),w2={style:{"text-align":"center"}},v2={href:"https://leetcode.cn/problems/find-the-derangement-of-an-array",target:"_blank",rel:"noopener noreferrer"},I2={href:"https://leetcode.com/problems/find-the-derangement-of-an-array",target:"_blank",rel:"noopener noreferrer"},q2=t("td",{style:{"text-align":"center"}},"638",-1),z2=t("td",{style:{"text-align":"left"}},"大礼包",-1),j2=t("td",{style:{"text-align":"center"}},null,-1),C2={style:{"text-align":"left"}},O2=t("code",null,"位运算",-1),L2=t("code",null,"记忆化搜索",-1),P2=t("code",null,"数组",-1),K2=t("code",null,"3+",-1),V2=t("td",{style:{"text-align":"left"}},"🟠",-1),N2={style:{"text-align":"center"}},D2={href:"https://leetcode.cn/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},E2={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},B2=t("td",{style:{"text-align":"center"}},"639",-1),M2=t("td",{style:{"text-align":"left"}},"解码方法 II",-1),Y2=t("td",{style:{"text-align":"center"}},null,-1),A2={style:{"text-align":"left"}},J2=t("code",null,"字符串",-1),R2=t("code",null,"动态规划",-1),S2=t("td",{style:{"text-align":"left"}},"🔴",-1),U2={style:{"text-align":"center"}},W2={href:"https://leetcode.cn/problems/decode-ways-ii",target:"_blank",rel:"noopener noreferrer"},X2={href:"https://leetcode.com/problems/decode-ways-ii",target:"_blank",rel:"noopener noreferrer"},F2=t("td",{style:{"text-align":"center"}},"646",-1),G2=t("td",{style:{"text-align":"left"}},"最长数对链",-1),H2=t("td",{style:{"text-align":"center"}},null,-1),T2={style:{"text-align":"left"}},Q2=t("code",null,"贪心",-1),Z2=t("code",null,"数组",-1),$2=t("code",null,"动态规划",-1),t3=t("code",null,"1+",-1),e3=t("td",{style:{"text-align":"left"}},"🟠",-1),o3={style:{"text-align":"center"}},l3={href:"https://leetcode.cn/problems/maximum-length-of-pair-chain",target:"_blank",rel:"noopener noreferrer"},n3={href:"https://leetcode.com/problems/maximum-length-of-pair-chain",target:"_blank",rel:"noopener noreferrer"},s3=t("td",{style:{"text-align":"center"}},"647",-1),r3=t("td",{style:{"text-align":"left"}},"回文子串",-1),d3=t("td",{style:{"text-align":"center"}},null,-1),_3={style:{"text-align":"left"}},a3=t("code",null,"双指针",-1),i3=t("code",null,"字符串",-1),c3=t("code",null,"动态规划",-1),h3=t("td",{style:{"text-align":"left"}},"🟠",-1),g3={style:{"text-align":"center"}},m3={href:"https://leetcode.cn/problems/palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},f3={href:"https://leetcode.com/problems/palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},u3=t("td",{style:{"text-align":"center"}},"650",-1),y3=t("td",{style:{"text-align":"left"}},"两个键的键盘",-1),p3=t("td",{style:{"text-align":"center"}},null,-1),x3={style:{"text-align":"left"}},b3=t("code",null,"数学",-1),k3=t("code",null,"动态规划",-1),w3=t("td",{style:{"text-align":"left"}},"🟠",-1),v3={style:{"text-align":"center"}},I3={href:"https://leetcode.cn/problems/2-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},q3={href:"https://leetcode.com/problems/2-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},z3=t("td",{style:{"text-align":"center"}},"651",-1),j3=t("td",{style:{"text-align":"left"}},"四个键的键盘 🔒",-1),C3=t("td",{style:{"text-align":"center"}},null,-1),O3={style:{"text-align":"left"}},L3=t("code",null,"数学",-1),P3=t("code",null,"动态规划",-1),K3=t("td",{style:{"text-align":"left"}},"🟠",-1),V3={style:{"text-align":"center"}},N3={href:"https://leetcode.cn/problems/4-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},D3={href:"https://leetcode.com/problems/4-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},E3=t("td",{style:{"text-align":"center"}},"656",-1),B3=t("td",{style:{"text-align":"left"}},"成本最小路径 🔒",-1),M3=t("td",{style:{"text-align":"center"}},null,-1),Y3={style:{"text-align":"left"}},A3=t("code",null,"数组",-1),J3=t("code",null,"动态规划",-1),R3=t("td",{style:{"text-align":"left"}},"🔴",-1),S3={style:{"text-align":"center"}},U3={href:"https://leetcode.cn/problems/coin-path",target:"_blank",rel:"noopener noreferrer"},W3={href:"https://leetcode.com/problems/coin-path",target:"_blank",rel:"noopener noreferrer"},X3=t("td",{style:{"text-align":"center"}},"664",-1),F3=t("td",{style:{"text-align":"left"}},"奇怪的打印机",-1),G3=t("td",{style:{"text-align":"center"}},null,-1),H3={style:{"text-align":"left"}},T3=t("code",null,"字符串",-1),Q3=t("code",null,"动态规划",-1),Z3=t("td",{style:{"text-align":"left"}},"🔴",-1),$3={style:{"text-align":"center"}},tb={href:"https://leetcode.cn/problems/strange-printer",target:"_blank",rel:"noopener noreferrer"},eb={href:"https://leetcode.com/problems/strange-printer",target:"_blank",rel:"noopener noreferrer"},ob=t("td",{style:{"text-align":"center"}},"673",-1),lb=t("td",{style:{"text-align":"left"}},"最长递增子序列的个数",-1),nb=t("td",{style:{"text-align":"center"}},null,-1),sb={style:{"text-align":"left"}},rb=t("code",null,"树状数组",-1),db=t("code",null,"线段树",-1),_b=t("code",null,"数组",-1),ab=t("code",null,"1+",-1),ib=t("td",{style:{"text-align":"left"}},"🟠",-1),cb={style:{"text-align":"center"}},hb={href:"https://leetcode.cn/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},gb={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},mb=t("td",{style:{"text-align":"center"}},"678",-1),fb=t("td",{style:{"text-align":"left"}},"有效的括号字符串",-1),ub={style:{"text-align":"center"}},yb={style:{"text-align":"left"}},pb=t("code",null,"栈",-1),xb=t("code",null,"贪心",-1),bb=t("code",null,"字符串",-1),kb=t("code",null,"1+",-1),wb=t("td",{style:{"text-align":"left"}},"🟠",-1),vb={style:{"text-align":"center"}},Ib={href:"https://leetcode.cn/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},qb={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},zb=t("td",{style:{"text-align":"center"}},"688",-1),jb=t("td",{style:{"text-align":"left"}},"骑士在棋盘上的概率",-1),Cb=t("td",{style:{"text-align":"center"}},null,-1),Ob={style:{"text-align":"left"}},Lb=t("code",null,"动态规划",-1),Pb=t("td",{style:{"text-align":"left"}},"🟠",-1),Kb={style:{"text-align":"center"}},Vb={href:"https://leetcode.cn/problems/knight-probability-in-chessboard",target:"_blank",rel:"noopener noreferrer"},Nb={href:"https://leetcode.com/problems/knight-probability-in-chessboard",target:"_blank",rel:"noopener noreferrer"},Db=t("td",{style:{"text-align":"center"}},"689",-1),Eb=t("td",{style:{"text-align":"left"}},"三个无重叠子数组的最大和",-1),Bb=t("td",{style:{"text-align":"center"}},null,-1),Mb={style:{"text-align":"left"}},Yb=t("code",null,"数组",-1),Ab=t("code",null,"动态规划",-1),Jb=t("td",{style:{"text-align":"left"}},"🔴",-1),Rb={style:{"text-align":"center"}},Sb={href:"https://leetcode.cn/problems/maximum-sum-of-3-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},Ub={href:"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},Wb=t("td",{style:{"text-align":"center"}},"691",-1),Xb=t("td",{style:{"text-align":"left"}},"贴纸拼词",-1),Fb=t("td",{style:{"text-align":"center"}},null,-1),Gb={style:{"text-align":"left"}},Hb=t("code",null,"位运算",-1),Tb=t("code",null,"数组",-1),Qb=t("code",null,"字符串",-1),Zb=t("code",null,"3+",-1),$b=t("td",{style:{"text-align":"left"}},"🔴",-1),t4={style:{"text-align":"center"}},e4={href:"https://leetcode.cn/problems/stickers-to-spell-word",target:"_blank",rel:"noopener noreferrer"},o4={href:"https://leetcode.com/problems/stickers-to-spell-word",target:"_blank",rel:"noopener noreferrer"},l4=t("td",{style:{"text-align":"center"}},"698",-1),n4=t("td",{style:{"text-align":"left"}},"划分为k个相等的子集",-1),s4=t("td",{style:{"text-align":"center"}},null,-1),r4={style:{"text-align":"left"}},d4=t("code",null,"位运算",-1),_4=t("code",null,"记忆化搜索",-1),a4=t("code",null,"数组",-1),i4=t("code",null,"3+",-1),c4=t("td",{style:{"text-align":"left"}},"🟠",-1),h4={style:{"text-align":"center"}},g4={href:"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},m4={href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},f4=t("td",{style:{"text-align":"center"}},"712",-1),u4=t("td",{style:{"text-align":"left"}},"两个字符串的最小ASCII删除和",-1),y4={style:{"text-align":"center"}},p4={style:{"text-align":"left"}},x4=t("code",null,"字符串",-1),b4=t("code",null,"动态规划",-1),k4=t("td",{style:{"text-align":"left"}},"🟠",-1),w4={style:{"text-align":"center"}},v4={href:"https://leetcode.cn/problems/minimum-ascii-delete-sum-for-two-strings",target:"_blank",rel:"noopener noreferrer"},I4={href:"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings",target:"_blank",rel:"noopener noreferrer"},q4=t("td",{style:{"text-align":"center"}},"714",-1),z4=t("td",{style:{"text-align":"left"}},"买卖股票的最佳时机含手续费",-1),j4={style:{"text-align":"center"}},C4={style:{"text-align":"left"}},O4=t("code",null,"贪心",-1),L4=t("code",null,"数组",-1),P4=t("code",null,"动态规划",-1),K4=t("td",{style:{"text-align":"left"}},"🟠",-1),V4={style:{"text-align":"center"}},N4={href:"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-with-transaction-fee",target:"_blank",rel:"noopener noreferrer"},D4={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee",target:"_blank",rel:"noopener noreferrer"},E4=t("td",{style:{"text-align":"center"}},"718",-1),B4=t("td",{style:{"text-align":"left"}},"最长重复子数组",-1),M4=t("td",{style:{"text-align":"center"}},null,-1),Y4={style:{"text-align":"left"}},A4=t("code",null,"数组",-1),J4=t("code",null,"二分查找",-1),R4=t("code",null,"动态规划",-1),S4=t("code",null,"3+",-1),U4=t("td",{style:{"text-align":"left"}},"🟠",-1),W4={style:{"text-align":"center"}},X4={href:"https://leetcode.cn/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},F4={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},G4=t("td",{style:{"text-align":"center"}},"727",-1),H4=t("td",{style:{"text-align":"left"}},"最小窗口子序列 🔒",-1),T4=t("td",{style:{"text-align":"center"}},null,-1),Q4={style:{"text-align":"left"}},Z4=t("code",null,"字符串",-1),$4=t("code",null,"动态规划",-1),t5=t("code",null,"滑动窗口",-1),e5=t("td",{style:{"text-align":"left"}},"🔴",-1),o5={style:{"text-align":"center"}},l5={href:"https://leetcode.cn/problems/minimum-window-subsequence",target:"_blank",rel:"noopener noreferrer"},n5={href:"https://leetcode.com/problems/minimum-window-subsequence",target:"_blank",rel:"noopener noreferrer"},s5=t("td",{style:{"text-align":"center"}},"730",-1),r5=t("td",{style:{"text-align":"left"}},"统计不同回文子序列",-1),d5=t("td",{style:{"text-align":"center"}},null,-1),_5={style:{"text-align":"left"}},a5=t("code",null,"字符串",-1),i5=t("code",null,"动态规划",-1),c5=t("td",{style:{"text-align":"left"}},"🔴",-1),h5={style:{"text-align":"center"}},g5={href:"https://leetcode.cn/problems/count-different-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},m5={href:"https://leetcode.com/problems/count-different-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},f5=t("td",{style:{"text-align":"center"}},"740",-1),u5=t("td",{style:{"text-align":"left"}},"删除并获得点数",-1),y5=t("td",{style:{"text-align":"center"}},null,-1),p5={style:{"text-align":"left"}},x5=t("code",null,"数组",-1),b5=t("code",null,"哈希表",-1),k5=t("code",null,"动态规划",-1),w5=t("td",{style:{"text-align":"left"}},"🟠",-1),v5={style:{"text-align":"center"}},I5={href:"https://leetcode.cn/problems/delete-and-earn",target:"_blank",rel:"noopener noreferrer"},q5={href:"https://leetcode.com/problems/delete-and-earn",target:"_blank",rel:"noopener noreferrer"},z5=t("td",{style:{"text-align":"center"}},"741",-1),j5=t("td",{style:{"text-align":"left"}},"摘樱桃",-1),C5=t("td",{style:{"text-align":"center"}},null,-1),O5={style:{"text-align":"left"}},L5=t("code",null,"数组",-1),P5=t("code",null,"动态规划",-1),K5=t("code",null,"矩阵",-1),V5=t("td",{style:{"text-align":"left"}},"🔴",-1),N5={style:{"text-align":"center"}},D5={href:"https://leetcode.cn/problems/cherry-pickup",target:"_blank",rel:"noopener noreferrer"},E5={href:"https://leetcode.com/problems/cherry-pickup",target:"_blank",rel:"noopener noreferrer"},B5=t("td",{style:{"text-align":"center"}},"746",-1),M5=t("td",{style:{"text-align":"left"}},"使用最小花费爬楼梯",-1),Y5={style:{"text-align":"center"}},A5={style:{"text-align":"left"}},J5=t("code",null,"数组",-1),R5=t("code",null,"动态规划",-1),S5=t("td",{style:{"text-align":"left"}},"🟢",-1),U5={style:{"text-align":"center"}},W5={href:"https://leetcode.cn/problems/min-cost-climbing-stairs",target:"_blank",rel:"noopener noreferrer"},X5={href:"https://leetcode.com/problems/min-cost-climbing-stairs",target:"_blank",rel:"noopener noreferrer"},F5=t("td",{style:{"text-align":"center"}},"750",-1),G5=t("td",{style:{"text-align":"left"}},"角矩形的数量 🔒",-1),H5=t("td",{style:{"text-align":"center"}},null,-1),T5={style:{"text-align":"left"}},Q5=t("code",null,"数组",-1),Z5=t("code",null,"数学",-1),$5=t("code",null,"动态规划",-1),t6=t("code",null,"1+",-1),e6=t("td",{style:{"text-align":"left"}},"🟠",-1),o6={style:{"text-align":"center"}},l6={href:"https://leetcode.cn/problems/number-of-corner-rectangles",target:"_blank",rel:"noopener noreferrer"},n6={href:"https://leetcode.com/problems/number-of-corner-rectangles",target:"_blank",rel:"noopener noreferrer"},s6=t("td",{style:{"text-align":"center"}},"764",-1),r6=t("td",{style:{"text-align":"left"}},"最大加号标志",-1),d6=t("td",{style:{"text-align":"center"}},null,-1),_6={style:{"text-align":"left"}},a6=t("code",null,"数组",-1),i6=t("code",null,"动态规划",-1),c6=t("td",{style:{"text-align":"left"}},"🟠",-1),h6={style:{"text-align":"center"}},g6={href:"https://leetcode.cn/problems/largest-plus-sign",target:"_blank",rel:"noopener noreferrer"},m6={href:"https://leetcode.com/problems/largest-plus-sign",target:"_blank",rel:"noopener noreferrer"},f6=t("td",{style:{"text-align":"center"}},"787",-1),u6=t("td",{style:{"text-align":"left"}},"K 站中转内最便宜的航班",-1),y6=t("td",{style:{"text-align":"center"}},null,-1),p6={style:{"text-align":"left"}},x6=t("code",null,"深度优先搜索",-1),b6=t("code",null,"广度优先搜索",-1),k6=t("code",null,"图",-1),w6=t("code",null,"3+",-1),v6=t("td",{style:{"text-align":"left"}},"🟠",-1),I6={style:{"text-align":"center"}},q6={href:"https://leetcode.cn/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},z6={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},j6=t("td",{style:{"text-align":"center"}},"788",-1),C6=t("td",{style:{"text-align":"left"}},"旋转数字",-1),O6=t("td",{style:{"text-align":"center"}},null,-1),L6={style:{"text-align":"left"}},P6=t("code",null,"数学",-1),K6=t("code",null,"动态规划",-1),V6=t("td",{style:{"text-align":"left"}},"🟠",-1),N6={style:{"text-align":"center"}},D6={href:"https://leetcode.cn/problems/rotated-digits",target:"_blank",rel:"noopener noreferrer"},E6={href:"https://leetcode.com/problems/rotated-digits",target:"_blank",rel:"noopener noreferrer"},B6=t("td",{style:{"text-align":"center"}},"790",-1),M6=t("td",{style:{"text-align":"left"}},"多米诺和托米诺平铺",-1),Y6=t("td",{style:{"text-align":"center"}},null,-1),A6={style:{"text-align":"left"}},J6=t("code",null,"动态规划",-1),R6=t("td",{style:{"text-align":"left"}},"🟠",-1),S6={style:{"text-align":"center"}},U6={href:"https://leetcode.cn/problems/domino-and-tromino-tiling",target:"_blank",rel:"noopener noreferrer"},W6={href:"https://leetcode.com/problems/domino-and-tromino-tiling",target:"_blank",rel:"noopener noreferrer"},X6=t("td",{style:{"text-align":"center"}},"792",-1),F6=t("td",{style:{"text-align":"left"}},"匹配子序列的单词数",-1),G6=t("td",{style:{"text-align":"center"}},null,-1),H6={style:{"text-align":"left"}},T6=t("code",null,"字典树",-1),Q6=t("code",null,"数组",-1),Z6=t("code",null,"哈希表",-1),$6=t("code",null,"4+",-1),t7=t("td",{style:{"text-align":"left"}},"🟠",-1),e7={style:{"text-align":"center"}},o7={href:"https://leetcode.cn/problems/number-of-matching-subsequences",target:"_blank",rel:"noopener noreferrer"},l7={href:"https://leetcode.com/problems/number-of-matching-subsequences",target:"_blank",rel:"noopener noreferrer"},n7=t("td",{style:{"text-align":"center"}},"799",-1),s7=t("td",{style:{"text-align":"left"}},"香槟塔",-1),r7=t("td",{style:{"text-align":"center"}},null,-1),d7={style:{"text-align":"left"}},_7=t("code",null,"动态规划",-1),a7=t("td",{style:{"text-align":"left"}},"🟠",-1),i7={style:{"text-align":"center"}},c7={href:"https://leetcode.cn/problems/champagne-tower",target:"_blank",rel:"noopener noreferrer"},h7={href:"https://leetcode.com/problems/champagne-tower",target:"_blank",rel:"noopener noreferrer"},g7=t("td",{style:{"text-align":"center"}},"801",-1),m7=t("td",{style:{"text-align":"left"}},"使序列递增的最小交换次数",-1),f7=t("td",{style:{"text-align":"center"}},null,-1),u7={style:{"text-align":"left"}},y7=t("code",null,"数组",-1),p7=t("code",null,"动态规划",-1),x7=t("td",{style:{"text-align":"left"}},"🔴",-1),b7={style:{"text-align":"center"}},k7={href:"https://leetcode.cn/problems/minimum-swaps-to-make-sequences-increasing",target:"_blank",rel:"noopener noreferrer"},w7={href:"https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing",target:"_blank",rel:"noopener noreferrer"},v7=t("td",{style:{"text-align":"center"}},"805",-1),I7=t("td",{style:{"text-align":"left"}},"数组的均值分割",-1),q7=t("td",{style:{"text-align":"center"}},null,-1),z7={style:{"text-align":"left"}},j7=t("code",null,"位运算",-1),C7=t("code",null,"数组",-1),O7=t("code",null,"数学",-1),L7=t("code",null,"2+",-1),P7=t("td",{style:{"text-align":"left"}},"🔴",-1),K7={style:{"text-align":"center"}},V7={href:"https://leetcode.cn/problems/split-array-with-same-average",target:"_blank",rel:"noopener noreferrer"},N7={href:"https://leetcode.com/problems/split-array-with-same-average",target:"_blank",rel:"noopener noreferrer"},D7=t("td",{style:{"text-align":"center"}},"808",-1),E7=t("td",{style:{"text-align":"left"}},"分汤",-1),B7=t("td",{style:{"text-align":"center"}},null,-1),M7={style:{"text-align":"left"}},Y7=t("code",null,"数学",-1),A7=t("code",null,"动态规划",-1),J7=t("code",null,"概率与统计",-1),R7=t("td",{style:{"text-align":"left"}},"🟠",-1),S7={style:{"text-align":"center"}},U7={href:"https://leetcode.cn/problems/soup-servings",target:"_blank",rel:"noopener noreferrer"},W7={href:"https://leetcode.com/problems/soup-servings",target:"_blank",rel:"noopener noreferrer"},X7=t("td",{style:{"text-align":"center"}},"813",-1),F7=t("td",{style:{"text-align":"left"}},"最大平均值和的分组",-1),G7=t("td",{style:{"text-align":"center"}},null,-1),H7={style:{"text-align":"left"}},T7=t("code",null,"数组",-1),Q7=t("code",null,"动态规划",-1),Z7=t("code",null,"前缀和",-1),$7=t("td",{style:{"text-align":"left"}},"🟠",-1),t0={style:{"text-align":"center"}},e0={href:"https://leetcode.cn/problems/largest-sum-of-averages",target:"_blank",rel:"noopener noreferrer"},o0={href:"https://leetcode.com/problems/largest-sum-of-averages",target:"_blank",rel:"noopener noreferrer"},l0=t("td",{style:{"text-align":"center"}},"818",-1),n0=t("td",{style:{"text-align":"left"}},"赛车",-1),s0=t("td",{style:{"text-align":"center"}},null,-1),r0={style:{"text-align":"left"}},d0=t("code",null,"动态规划",-1),_0=t("td",{style:{"text-align":"left"}},"🔴",-1),a0={style:{"text-align":"center"}},i0={href:"https://leetcode.cn/problems/race-car",target:"_blank",rel:"noopener noreferrer"},c0={href:"https://leetcode.com/problems/race-car",target:"_blank",rel:"noopener noreferrer"},h0=t("td",{style:{"text-align":"center"}},"823",-1),g0=t("td",{style:{"text-align":"left"}},"带因子的二叉树",-1),m0=t("td",{style:{"text-align":"center"}},null,-1),f0={style:{"text-align":"left"}},u0=t("code",null,"数组",-1),y0=t("code",null,"哈希表",-1),p0=t("code",null,"动态规划",-1),x0=t("code",null,"1+",-1),b0=t("td",{style:{"text-align":"left"}},"🟠",-1),k0={style:{"text-align":"center"}},w0={href:"https://leetcode.cn/problems/binary-trees-with-factors",target:"_blank",rel:"noopener noreferrer"},v0={href:"https://leetcode.com/problems/binary-trees-with-factors",target:"_blank",rel:"noopener noreferrer"},I0=t("td",{style:{"text-align":"center"}},"828",-1),q0=t("td",{style:{"text-align":"left"}},"统计子串中的唯一字符",-1),z0=t("td",{style:{"text-align":"center"}},null,-1),j0={style:{"text-align":"left"}},C0=t("code",null,"哈希表",-1),O0=t("code",null,"字符串",-1),L0=t("code",null,"动态规划",-1),P0=t("td",{style:{"text-align":"left"}},"🔴",-1),K0={style:{"text-align":"center"}},V0={href:"https://leetcode.cn/problems/count-unique-characters-of-all-substrings-of-a-given-string",target:"_blank",rel:"noopener noreferrer"},N0={href:"https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string",target:"_blank",rel:"noopener noreferrer"},D0=t("td",{style:{"text-align":"center"}},"834",-1),E0=t("td",{style:{"text-align":"left"}},"树中距离之和",-1),B0=t("td",{style:{"text-align":"center"}},null,-1),M0={style:{"text-align":"left"}},Y0=t("code",null,"树",-1),A0=t("code",null,"深度优先搜索",-1),J0=t("code",null,"图",-1),R0=t("code",null,"1+",-1),S0=t("td",{style:{"text-align":"left"}},"🔴",-1),U0={style:{"text-align":"center"}},W0={href:"https://leetcode.cn/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},X0={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},F0=t("td",{style:{"text-align":"center"}},"837",-1),G0=t("td",{style:{"text-align":"left"}},"新 21 点",-1),H0=t("td",{style:{"text-align":"center"}},null,-1),T0={style:{"text-align":"left"}},Q0=t("code",null,"数学",-1),Z0=t("code",null,"动态规划",-1),$0=t("code",null,"滑动窗口",-1),t9=t("code",null,"1+",-1),e9=t("td",{style:{"text-align":"left"}},"🟠",-1),o9={style:{"text-align":"center"}},l9={href:"https://leetcode.cn/problems/new-21-game",target:"_blank",rel:"noopener noreferrer"},n9={href:"https://leetcode.com/problems/new-21-game",target:"_blank",rel:"noopener noreferrer"},s9=t("td",{style:{"text-align":"center"}},"838",-1),r9=t("td",{style:{"text-align":"left"}},"推多米诺",-1),d9=t("td",{style:{"text-align":"center"}},null,-1),_9={style:{"text-align":"left"}},a9=t("code",null,"双指针",-1),i9=t("code",null,"字符串",-1),c9=t("code",null,"动态规划",-1),h9=t("td",{style:{"text-align":"left"}},"🟠",-1),g9={style:{"text-align":"center"}},m9={href:"https://leetcode.cn/problems/push-dominoes",target:"_blank",rel:"noopener noreferrer"},f9={href:"https://leetcode.com/problems/push-dominoes",target:"_blank",rel:"noopener noreferrer"},u9=t("td",{style:{"text-align":"center"}},"845",-1),y9=t("td",{style:{"text-align":"left"}},"数组中的最长山脉",-1),p9={style:{"text-align":"center"}},x9={style:{"text-align":"left"}},b9=t("code",null,"数组",-1),k9=t("code",null,"双指针",-1),w9=t("code",null,"动态规划",-1),v9=t("code",null,"1+",-1),I9=t("td",{style:{"text-align":"left"}},"🟠",-1),q9={style:{"text-align":"center"}},z9={href:"https://leetcode.cn/problems/longest-mountain-in-array",target:"_blank",rel:"noopener noreferrer"},j9={href:"https://leetcode.com/problems/longest-mountain-in-array",target:"_blank",rel:"noopener noreferrer"},C9=t("td",{style:{"text-align":"center"}},"847",-1),O9=t("td",{style:{"text-align":"left"}},"访问所有节点的最短路径",-1),L9=t("td",{style:{"text-align":"center"}},null,-1),P9={style:{"text-align":"left"}},K9=t("code",null,"位运算",-1),V9=t("code",null,"广度优先搜索",-1),N9=t("code",null,"图",-1),D9=t("code",null,"2+",-1),E9=t("td",{style:{"text-align":"left"}},"🔴",-1),B9={style:{"text-align":"center"}},M9={href:"https://leetcode.cn/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},Y9={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},A9=t("td",{style:{"text-align":"center"}},"871",-1),J9=t("td",{style:{"text-align":"left"}},"最低加油次数",-1),R9=t("td",{style:{"text-align":"center"}},null,-1),S9={style:{"text-align":"left"}},U9=t("code",null,"贪心",-1),W9=t("code",null,"数组",-1),X9=t("code",null,"动态规划",-1),F9=t("code",null,"1+",-1),G9=t("td",{style:{"text-align":"left"}},"🔴",-1),H9={style:{"text-align":"center"}},T9={href:"https://leetcode.cn/problems/minimum-number-of-refueling-stops",target:"_blank",rel:"noopener noreferrer"},Q9={href:"https://leetcode.com/problems/minimum-number-of-refueling-stops",target:"_blank",rel:"noopener noreferrer"},Z9=t("td",{style:{"text-align":"center"}},"873",-1),$9=t("td",{style:{"text-align":"left"}},"最长的斐波那契子序列的长度",-1),t8=t("td",{style:{"text-align":"center"}},null,-1),e8={style:{"text-align":"left"}},o8=t("code",null,"数组",-1),l8=t("code",null,"哈希表",-1),n8=t("code",null,"动态规划",-1),s8=t("td",{style:{"text-align":"left"}},"🟠",-1),r8={style:{"text-align":"center"}},d8={href:"https://leetcode.cn/problems/length-of-longest-fibonacci-subsequence",target:"_blank",rel:"noopener noreferrer"},_8={href:"https://leetcode.com/problems/length-of-longest-fibonacci-subsequence",target:"_blank",rel:"noopener noreferrer"},a8=t("td",{style:{"text-align":"center"}},"877",-1),i8=t("td",{style:{"text-align":"left"}},"石子游戏",-1),c8=t("td",{style:{"text-align":"center"}},null,-1),h8={style:{"text-align":"left"}},g8=t("code",null,"数组",-1),m8=t("code",null,"数学",-1),f8=t("code",null,"动态规划",-1),u8=t("code",null,"1+",-1),y8=t("td",{style:{"text-align":"left"}},"🟠",-1),p8={style:{"text-align":"center"}},x8={href:"https://leetcode.cn/problems/stone-game",target:"_blank",rel:"noopener noreferrer"},b8={href:"https://leetcode.com/problems/stone-game",target:"_blank",rel:"noopener noreferrer"},k8=t("td",{style:{"text-align":"center"}},"879",-1),w8=t("td",{style:{"text-align":"left"}},"盈利计划",-1),v8=t("td",{style:{"text-align":"center"}},null,-1),I8={style:{"text-align":"left"}},q8=t("code",null,"数组",-1),z8=t("code",null,"动态规划",-1),j8=t("td",{style:{"text-align":"left"}},"🔴",-1),C8={style:{"text-align":"center"}},O8={href:"https://leetcode.cn/problems/profitable-schemes",target:"_blank",rel:"noopener noreferrer"},L8={href:"https://leetcode.com/problems/profitable-schemes",target:"_blank",rel:"noopener noreferrer"},P8=t("td",{style:{"text-align":"center"}},"887",-1),K8=t("td",{style:{"text-align":"left"}},"鸡蛋掉落",-1),V8=t("td",{style:{"text-align":"center"}},null,-1),N8={style:{"text-align":"left"}},D8=t("code",null,"数学",-1),E8=t("code",null,"二分查找",-1),B8=t("code",null,"动态规划",-1),M8=t("td",{style:{"text-align":"left"}},"🔴",-1),Y8={style:{"text-align":"center"}},A8={href:"https://leetcode.cn/problems/super-egg-drop",target:"_blank",rel:"noopener noreferrer"},J8={href:"https://leetcode.com/problems/super-egg-drop",target:"_blank",rel:"noopener noreferrer"},R8=t("td",{style:{"text-align":"center"}},"894",-1),S8=t("td",{style:{"text-align":"left"}},"所有可能的真二叉树",-1),U8=t("td",{style:{"text-align":"center"}},null,-1),W8={style:{"text-align":"left"}},X8=t("code",null,"树",-1),F8=t("code",null,"递归",-1),G8=t("code",null,"记忆化搜索",-1),H8=t("code",null,"2+",-1),T8=t("td",{style:{"text-align":"left"}},"🟠",-1),Q8={style:{"text-align":"center"}},Z8={href:"https://leetcode.cn/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},$8={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},tk=t("td",{style:{"text-align":"center"}},"898",-1),ek=t("td",{style:{"text-align":"left"}},"子数组按位或操作",-1),ok=t("td",{style:{"text-align":"center"}},null,-1),lk={style:{"text-align":"left"}},nk=t("code",null,"位运算",-1),sk=t("code",null,"数组",-1),rk=t("code",null,"动态规划",-1),dk=t("td",{style:{"text-align":"left"}},"🟠",-1),_k={style:{"text-align":"center"}},ak={href:"https://leetcode.cn/problems/bitwise-ors-of-subarrays",target:"_blank",rel:"noopener noreferrer"},ik={href:"https://leetcode.com/problems/bitwise-ors-of-subarrays",target:"_blank",rel:"noopener noreferrer"},ck=t("td",{style:{"text-align":"center"}},"902",-1),hk=t("td",{style:{"text-align":"left"}},"最大为 N 的数字组合",-1),gk=t("td",{style:{"text-align":"center"}},null,-1),mk={style:{"text-align":"left"}},fk=t("code",null,"数组",-1),uk=t("code",null,"数学",-1),yk=t("code",null,"字符串",-1),pk=t("code",null,"2+",-1),xk=t("td",{style:{"text-align":"left"}},"🔴",-1),bk={style:{"text-align":"center"}},kk={href:"https://leetcode.cn/problems/numbers-at-most-n-given-digit-set",target:"_blank",rel:"noopener noreferrer"},wk={href:"https://leetcode.com/problems/numbers-at-most-n-given-digit-set",target:"_blank",rel:"noopener noreferrer"},vk=t("td",{style:{"text-align":"center"}},"903",-1),Ik=t("td",{style:{"text-align":"left"}},"DI 序列的有效排列",-1),qk=t("td",{style:{"text-align":"center"}},null,-1),zk={style:{"text-align":"left"}},jk=t("code",null,"字符串",-1),Ck=t("code",null,"动态规划",-1),Ok=t("code",null,"前缀和",-1),Lk=t("td",{style:{"text-align":"left"}},"🔴",-1),Pk={style:{"text-align":"center"}},Kk={href:"https://leetcode.cn/problems/valid-permutations-for-di-sequence",target:"_blank",rel:"noopener noreferrer"},Vk={href:"https://leetcode.com/problems/valid-permutations-for-di-sequence",target:"_blank",rel:"noopener noreferrer"},Nk=t("td",{style:{"text-align":"center"}},"907",-1),Dk=t("td",{style:{"text-align":"left"}},"子数组的最小值之和",-1),Ek=t("td",{style:{"text-align":"center"}},null,-1),Bk={style:{"text-align":"left"}},Mk=t("code",null,"栈",-1),Yk=t("code",null,"数组",-1),Ak=t("code",null,"动态规划",-1),Jk=t("code",null,"1+",-1),Rk=t("td",{style:{"text-align":"left"}},"🟠",-1),Sk={style:{"text-align":"center"}},Uk={href:"https://leetcode.cn/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},Wk={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},Xk=t("td",{style:{"text-align":"center"}},"913",-1),Fk=t("td",{style:{"text-align":"left"}},"猫和老鼠",-1),Gk=t("td",{style:{"text-align":"center"}},null,-1),Hk={style:{"text-align":"left"}},Tk=t("code",null,"图",-1),Qk=t("code",null,"拓扑排序",-1),Zk=t("code",null,"记忆化搜索",-1),$k=t("code",null,"3+",-1),tw=t("td",{style:{"text-align":"left"}},"🔴",-1),ew={style:{"text-align":"center"}},ow={href:"https://leetcode.cn/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},lw={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},nw=t("td",{style:{"text-align":"center"}},"918",-1),sw=t("td",{style:{"text-align":"left"}},"环形子数组的最大和",-1),rw={style:{"text-align":"center"}},dw={style:{"text-align":"left"}},_w=t("code",null,"队列",-1),aw=t("code",null,"数组",-1),iw=t("code",null,"分治",-1),cw=t("code",null,"2+",-1),hw=t("td",{style:{"text-align":"left"}},"🟠",-1),gw={style:{"text-align":"center"}},mw={href:"https://leetcode.cn/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},fw={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},uw=t("td",{style:{"text-align":"center"}},"920",-1),yw=t("td",{style:{"text-align":"left"}},"播放列表的数量",-1),pw=t("td",{style:{"text-align":"center"}},null,-1),xw={style:{"text-align":"left"}},bw=t("code",null,"数学",-1),kw=t("code",null,"动态规划",-1),ww=t("code",null,"组合数学",-1),vw=t("td",{style:{"text-align":"left"}},"🔴",-1),Iw={style:{"text-align":"center"}},qw={href:"https://leetcode.cn/problems/number-of-music-playlists",target:"_blank",rel:"noopener noreferrer"},zw={href:"https://leetcode.com/problems/number-of-music-playlists",target:"_blank",rel:"noopener noreferrer"},jw=t("td",{style:{"text-align":"center"}},"926",-1),Cw=t("td",{style:{"text-align":"left"}},"将字符串翻转到单调递增",-1),Ow=t("td",{style:{"text-align":"center"}},null,-1),Lw={style:{"text-align":"left"}},Pw=t("code",null,"字符串",-1),Kw=t("code",null,"动态规划",-1),Vw=t("td",{style:{"text-align":"left"}},"🟠",-1),Nw={style:{"text-align":"center"}},Dw={href:"https://leetcode.cn/problems/flip-string-to-monotone-increasing",target:"_blank",rel:"noopener noreferrer"},Ew={href:"https://leetcode.com/problems/flip-string-to-monotone-increasing",target:"_blank",rel:"noopener noreferrer"},Bw=t("td",{style:{"text-align":"center"}},"931",-1),Mw=t("td",{style:{"text-align":"left"}},"下降路径最小和",-1),Yw={style:{"text-align":"center"}},Aw={style:{"text-align":"left"}},Jw=t("code",null,"数组",-1),Rw=t("code",null,"动态规划",-1),Sw=t("code",null,"矩阵",-1),Uw=t("td",{style:{"text-align":"left"}},"🟠",-1),Ww={style:{"text-align":"center"}},Xw={href:"https://leetcode.cn/problems/minimum-falling-path-sum",target:"_blank",rel:"noopener noreferrer"},Fw={href:"https://leetcode.com/problems/minimum-falling-path-sum",target:"_blank",rel:"noopener noreferrer"},Gw=t("td",{style:{"text-align":"center"}},"935",-1),Hw=t("td",{style:{"text-align":"left"}},"骑士拨号器",-1),Tw=t("td",{style:{"text-align":"center"}},null,-1),Qw={style:{"text-align":"left"}},Zw=t("code",null,"动态规划",-1),$w=t("td",{style:{"text-align":"left"}},"🟠",-1),tv={style:{"text-align":"center"}},ev={href:"https://leetcode.cn/problems/knight-dialer",target:"_blank",rel:"noopener noreferrer"},ov={href:"https://leetcode.com/problems/knight-dialer",target:"_blank",rel:"noopener noreferrer"},lv=t("td",{style:{"text-align":"center"}},"940",-1),nv=t("td",{style:{"text-align":"left"}},"不同的子序列 II",-1),sv=t("td",{style:{"text-align":"center"}},null,-1),rv={style:{"text-align":"left"}},dv=t("code",null,"字符串",-1),_v=t("code",null,"动态规划",-1),av=t("td",{style:{"text-align":"left"}},"🔴",-1),iv={style:{"text-align":"center"}},cv={href:"https://leetcode.cn/problems/distinct-subsequences-ii",target:"_blank",rel:"noopener noreferrer"},hv={href:"https://leetcode.com/problems/distinct-subsequences-ii",target:"_blank",rel:"noopener noreferrer"},gv=t("td",{style:{"text-align":"center"}},"943",-1),mv=t("td",{style:{"text-align":"left"}},"最短超级串",-1),fv=t("td",{style:{"text-align":"center"}},null,-1),uv={style:{"text-align":"left"}},yv=t("code",null,"位运算",-1),pv=t("code",null,"数组",-1),xv=t("code",null,"字符串",-1),bv=t("code",null,"2+",-1),kv=t("td",{style:{"text-align":"left"}},"🔴",-1),wv={style:{"text-align":"center"}},vv={href:"https://leetcode.cn/problems/find-the-shortest-superstring",target:"_blank",rel:"noopener noreferrer"},Iv={href:"https://leetcode.com/problems/find-the-shortest-superstring",target:"_blank",rel:"noopener noreferrer"},qv=t("td",{style:{"text-align":"center"}},"956",-1),zv=t("td",{style:{"text-align":"left"}},"最高的广告牌",-1),jv=t("td",{style:{"text-align":"center"}},null,-1),Cv={style:{"text-align":"left"}},Ov=t("code",null,"数组",-1),Lv=t("code",null,"动态规划",-1),Pv=t("td",{style:{"text-align":"left"}},"🔴",-1),Kv={style:{"text-align":"center"}},Vv={href:"https://leetcode.cn/problems/tallest-billboard",target:"_blank",rel:"noopener noreferrer"},Nv={href:"https://leetcode.com/problems/tallest-billboard",target:"_blank",rel:"noopener noreferrer"},Dv=t("td",{style:{"text-align":"center"}},"960",-1),Ev=t("td",{style:{"text-align":"left"}},"删列造序 III",-1),Bv=t("td",{style:{"text-align":"center"}},null,-1),Mv={style:{"text-align":"left"}},Yv=t("code",null,"数组",-1),Av=t("code",null,"字符串",-1),Jv=t("code",null,"动态规划",-1),Rv=t("td",{style:{"text-align":"left"}},"🔴",-1),Sv={style:{"text-align":"center"}},Uv={href:"https://leetcode.cn/problems/delete-columns-to-make-sorted-iii",target:"_blank",rel:"noopener noreferrer"},Wv={href:"https://leetcode.com/problems/delete-columns-to-make-sorted-iii",target:"_blank",rel:"noopener noreferrer"},Xv=t("td",{style:{"text-align":"center"}},"964",-1),Fv=t("td",{style:{"text-align":"left"}},"表示数字的最少运算符",-1),Gv=t("td",{style:{"text-align":"center"}},null,-1),Hv={style:{"text-align":"left"}},Tv=t("code",null,"记忆化搜索",-1),Qv=t("code",null,"数学",-1),Zv=t("code",null,"动态规划",-1),$v=t("td",{style:{"text-align":"left"}},"🔴",-1),tI={style:{"text-align":"center"}},eI={href:"https://leetcode.cn/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},oI={href:"https://leetcode.com/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},lI=t("td",{style:{"text-align":"center"}},"968",-1),nI=t("td",{style:{"text-align":"left"}},"监控二叉树",-1),sI=t("td",{style:{"text-align":"center"}},null,-1),rI={style:{"text-align":"left"}},dI=t("code",null,"树",-1),_I=t("code",null,"深度优先搜索",-1),aI=t("code",null,"动态规划",-1),iI=t("code",null,"1+",-1),cI=t("td",{style:{"text-align":"left"}},"🔴",-1),hI={style:{"text-align":"center"}},gI={href:"https://leetcode.cn/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},mI={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},fI=t("td",{style:{"text-align":"center"}},"975",-1),uI=t("td",{style:{"text-align":"left"}},"奇偶跳",-1),yI=t("td",{style:{"text-align":"center"}},null,-1),pI={style:{"text-align":"left"}},xI=t("code",null,"栈",-1),bI=t("code",null,"数组",-1),kI=t("code",null,"动态规划",-1),wI=t("code",null,"2+",-1),vI=t("td",{style:{"text-align":"left"}},"🔴",-1),II={style:{"text-align":"center"}},qI={href:"https://leetcode.cn/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},zI={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},jI=t("td",{style:{"text-align":"center"}},"978",-1),CI=t("td",{style:{"text-align":"left"}},"最长湍流子数组",-1),OI=t("td",{style:{"text-align":"center"}},null,-1),LI={style:{"text-align":"left"}},PI=t("code",null,"数组",-1),KI=t("code",null,"动态规划",-1),VI=t("code",null,"滑动窗口",-1),NI=t("td",{style:{"text-align":"left"}},"🟠",-1),DI={style:{"text-align":"center"}},EI={href:"https://leetcode.cn/problems/longest-turbulent-subarray",target:"_blank",rel:"noopener noreferrer"},BI={href:"https://leetcode.com/problems/longest-turbulent-subarray",target:"_blank",rel:"noopener noreferrer"},MI=t("td",{style:{"text-align":"center"}},"983",-1),YI=t("td",{style:{"text-align":"left"}},"最低票价",-1),AI=t("td",{style:{"text-align":"center"}},null,-1),JI={style:{"text-align":"left"}},RI=t("code",null,"数组",-1),SI=t("code",null,"动态规划",-1),UI=t("td",{style:{"text-align":"left"}},"🟠",-1),WI={style:{"text-align":"center"}},XI={href:"https://leetcode.cn/problems/minimum-cost-for-tickets",target:"_blank",rel:"noopener noreferrer"},FI={href:"https://leetcode.com/problems/minimum-cost-for-tickets",target:"_blank",rel:"noopener noreferrer"},GI=t("td",{style:{"text-align":"center"}},"996",-1),HI=t("td",{style:{"text-align":"left"}},"平方数组的数目",-1),TI=t("td",{style:{"text-align":"center"}},null,-1),QI={style:{"text-align":"left"}},ZI=t("code",null,"位运算",-1),$I=t("code",null,"数组",-1),tq=t("code",null,"哈希表",-1),eq=t("code",null,"4+",-1),oq=t("td",{style:{"text-align":"left"}},"🔴",-1),lq={style:{"text-align":"center"}},nq={href:"https://leetcode.cn/problems/number-of-squareful-arrays",target:"_blank",rel:"noopener noreferrer"},sq={href:"https://leetcode.com/problems/number-of-squareful-arrays",target:"_blank",rel:"noopener noreferrer"},rq=t("td",{style:{"text-align":"center"}},"1000",-1),dq=t("td",{style:{"text-align":"left"}},"合并石头的最低成本",-1),_q=t("td",{style:{"text-align":"center"}},null,-1),aq={style:{"text-align":"left"}},iq=t("code",null,"数组",-1),cq=t("code",null,"动态规划",-1),hq=t("code",null,"前缀和",-1),gq=t("td",{style:{"text-align":"left"}},"🔴",-1),mq={style:{"text-align":"center"}},fq={href:"https://leetcode.cn/problems/minimum-cost-to-merge-stones",target:"_blank",rel:"noopener noreferrer"},uq={href:"https://leetcode.com/problems/minimum-cost-to-merge-stones",target:"_blank",rel:"noopener noreferrer"},yq=t("td",{style:{"text-align":"center"}},"1012",-1),pq=t("td",{style:{"text-align":"left"}},"至少有 1 位重复的数字",-1),xq=t("td",{style:{"text-align":"center"}},null,-1),bq={style:{"text-align":"left"}},kq=t("code",null,"数学",-1),wq=t("code",null,"动态规划",-1),vq=t("td",{style:{"text-align":"left"}},"🔴",-1),Iq={style:{"text-align":"center"}},qq={href:"https://leetcode.cn/problems/numbers-with-repeated-digits",target:"_blank",rel:"noopener noreferrer"},zq={href:"https://leetcode.com/problems/numbers-with-repeated-digits",target:"_blank",rel:"noopener noreferrer"},jq=t("td",{style:{"text-align":"center"}},"1014",-1),Cq=t("td",{style:{"text-align":"left"}},"最佳观光组合",-1),Oq=t("td",{style:{"text-align":"center"}},null,-1),Lq={style:{"text-align":"left"}},Pq=t("code",null,"数组",-1),Kq=t("code",null,"动态规划",-1),Vq=t("td",{style:{"text-align":"left"}},"🟠",-1),Nq={style:{"text-align":"center"}},Dq={href:"https://leetcode.cn/problems/best-sightseeing-pair",target:"_blank",rel:"noopener noreferrer"},Eq={href:"https://leetcode.com/problems/best-sightseeing-pair",target:"_blank",rel:"noopener noreferrer"},Bq=t("td",{style:{"text-align":"center"}},"1024",-1),Mq=t("td",{style:{"text-align":"left"}},"视频拼接",-1),Yq=t("td",{style:{"text-align":"center"}},null,-1),Aq={style:{"text-align":"left"}},Jq=t("code",null,"贪心",-1),Rq=t("code",null,"数组",-1),Sq=t("code",null,"动态规划",-1),Uq=t("td",{style:{"text-align":"left"}},"🟠",-1),Wq={style:{"text-align":"center"}},Xq={href:"https://leetcode.cn/problems/video-stitching",target:"_blank",rel:"noopener noreferrer"},Fq={href:"https://leetcode.com/problems/video-stitching",target:"_blank",rel:"noopener noreferrer"},Gq=t("td",{style:{"text-align":"center"}},"1025",-1),Hq=t("td",{style:{"text-align":"left"}},"除数博弈",-1),Tq=t("td",{style:{"text-align":"center"}},null,-1),Qq={style:{"text-align":"left"}},Zq=t("code",null,"脑筋急转弯",-1),$q=t("code",null,"数学",-1),tz=t("code",null,"动态规划",-1),ez=t("code",null,"1+",-1),oz=t("td",{style:{"text-align":"left"}},"🟢",-1),lz={style:{"text-align":"center"}},nz={href:"https://leetcode.cn/problems/divisor-game",target:"_blank",rel:"noopener noreferrer"},sz={href:"https://leetcode.com/problems/divisor-game",target:"_blank",rel:"noopener noreferrer"},rz=t("td",{style:{"text-align":"center"}},"1027",-1),dz=t("td",{style:{"text-align":"left"}},"最长等差数列",-1),_z=t("td",{style:{"text-align":"center"}},null,-1),az={style:{"text-align":"left"}},iz=t("code",null,"数组",-1),cz=t("code",null,"哈希表",-1),hz=t("code",null,"二分查找",-1),gz=t("code",null,"1+",-1),mz=t("td",{style:{"text-align":"left"}},"🟠",-1),fz={style:{"text-align":"center"}},uz={href:"https://leetcode.cn/problems/longest-arithmetic-subsequence",target:"_blank",rel:"noopener noreferrer"},yz={href:"https://leetcode.com/problems/longest-arithmetic-subsequence",target:"_blank",rel:"noopener noreferrer"},pz=t("td",{style:{"text-align":"center"}},"1031",-1),xz=t("td",{style:{"text-align":"left"}},"两个非重叠子数组的最大和",-1),bz=t("td",{style:{"text-align":"center"}},null,-1),kz={style:{"text-align":"left"}},wz=t("code",null,"数组",-1),vz=t("code",null,"动态规划",-1),Iz=t("code",null,"滑动窗口",-1),qz=t("td",{style:{"text-align":"left"}},"🟠",-1),zz={style:{"text-align":"center"}},jz={href:"https://leetcode.cn/problems/maximum-sum-of-two-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},Cz={href:"https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},Oz=t("td",{style:{"text-align":"center"}},"1035",-1),Lz=t("td",{style:{"text-align":"left"}},"不相交的线",-1),Pz=t("td",{style:{"text-align":"center"}},null,-1),Kz={style:{"text-align":"left"}},Vz=t("code",null,"数组",-1),Nz=t("code",null,"动态规划",-1),Dz=t("td",{style:{"text-align":"left"}},"🟠",-1),Ez={style:{"text-align":"center"}},Bz={href:"https://leetcode.cn/problems/uncrossed-lines",target:"_blank",rel:"noopener noreferrer"},Mz={href:"https://leetcode.com/problems/uncrossed-lines",target:"_blank",rel:"noopener noreferrer"},Yz=t("td",{style:{"text-align":"center"}},"1039",-1),Az=t("td",{style:{"text-align":"left"}},"多边形三角剖分的最低得分",-1),Jz=t("td",{style:{"text-align":"center"}},null,-1),Rz={style:{"text-align":"left"}},Sz=t("code",null,"数组",-1),Uz=t("code",null,"动态规划",-1),Wz=t("td",{style:{"text-align":"left"}},"🟠",-1),Xz={style:{"text-align":"center"}},Fz={href:"https://leetcode.cn/problems/minimum-score-triangulation-of-polygon",target:"_blank",rel:"noopener noreferrer"},Gz={href:"https://leetcode.com/problems/minimum-score-triangulation-of-polygon",target:"_blank",rel:"noopener noreferrer"},Hz=t("td",{style:{"text-align":"center"}},"1043",-1),Tz=t("td",{style:{"text-align":"left"}},"分隔数组以得到最大和",-1),Qz=t("td",{style:{"text-align":"center"}},null,-1),Zz={style:{"text-align":"left"}},$z=t("code",null,"数组",-1),tj=t("code",null,"动态规划",-1),ej=t("td",{style:{"text-align":"left"}},"🟠",-1),oj={style:{"text-align":"center"}},lj={href:"https://leetcode.cn/problems/partition-array-for-maximum-sum",target:"_blank",rel:"noopener noreferrer"},nj={href:"https://leetcode.com/problems/partition-array-for-maximum-sum",target:"_blank",rel:"noopener noreferrer"},sj=t("td",{style:{"text-align":"center"}},"1048",-1),rj=t("td",{style:{"text-align":"left"}},"最长字符串链",-1),dj=t("td",{style:{"text-align":"center"}},null,-1),_j={style:{"text-align":"left"}},aj=t("code",null,"数组",-1),ij=t("code",null,"哈希表",-1),cj=t("code",null,"双指针",-1),hj=t("code",null,"3+",-1),gj=t("td",{style:{"text-align":"left"}},"🟠",-1),mj={style:{"text-align":"center"}},fj={href:"https://leetcode.cn/problems/longest-string-chain",target:"_blank",rel:"noopener noreferrer"},uj={href:"https://leetcode.com/problems/longest-string-chain",target:"_blank",rel:"noopener noreferrer"},yj=t("td",{style:{"text-align":"center"}},"1049",-1),pj=t("td",{style:{"text-align":"left"}},"最后一块石头的重量 II",-1),xj={style:{"text-align":"center"}},bj={style:{"text-align":"left"}},kj=t("code",null,"数组",-1),wj=t("code",null,"动态规划",-1),vj=t("td",{style:{"text-align":"left"}},"🟠",-1),Ij={style:{"text-align":"center"}},qj={href:"https://leetcode.cn/problems/last-stone-weight-ii",target:"_blank",rel:"noopener noreferrer"},zj={href:"https://leetcode.com/problems/last-stone-weight-ii",target:"_blank",rel:"noopener noreferrer"},jj=t("td",{style:{"text-align":"center"}},"1062",-1),Cj=t("td",{style:{"text-align":"left"}},"最长重复子串 🔒",-1),Oj=t("td",{style:{"text-align":"center"}},null,-1),Lj={style:{"text-align":"left"}},Pj=t("code",null,"字符串",-1),Kj=t("code",null,"二分查找",-1),Vj=t("code",null,"动态规划",-1),Nj=t("code",null,"3+",-1),Dj=t("td",{style:{"text-align":"left"}},"🟠",-1),Ej={style:{"text-align":"center"}},Bj={href:"https://leetcode.cn/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Mj={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Yj=t("td",{style:{"text-align":"center"}},"1066",-1),Aj=t("td",{style:{"text-align":"left"}},"校园自行车分配 II 🔒",-1),Jj=t("td",{style:{"text-align":"center"}},null,-1),Rj={style:{"text-align":"left"}},Sj=t("code",null,"位运算",-1),Uj=t("code",null,"数组",-1),Wj=t("code",null,"动态规划",-1),Xj=t("code",null,"2+",-1),Fj=t("td",{style:{"text-align":"left"}},"🟠",-1),Gj={style:{"text-align":"center"}},Hj={href:"https://leetcode.cn/problems/campus-bikes-ii",target:"_blank",rel:"noopener noreferrer"},Tj={href:"https://leetcode.com/problems/campus-bikes-ii",target:"_blank",rel:"noopener noreferrer"},Qj=t("td",{style:{"text-align":"center"}},"1067",-1),Zj=t("td",{style:{"text-align":"left"}},"范围内的数字计数 🔒",-1),$j=t("td",{style:{"text-align":"center"}},null,-1),tC={style:{"text-align":"left"}},eC=t("code",null,"数学",-1),oC=t("code",null,"动态规划",-1),lC=t("td",{style:{"text-align":"left"}},"🔴",-1),nC={style:{"text-align":"center"}},sC={href:"https://leetcode.cn/problems/digit-count-in-range",target:"_blank",rel:"noopener noreferrer"},rC={href:"https://leetcode.com/problems/digit-count-in-range",target:"_blank",rel:"noopener noreferrer"},dC=t("td",{style:{"text-align":"center"}},"1092",-1),_C=t("td",{style:{"text-align":"left"}},"最短公共超序列",-1),aC=t("td",{style:{"text-align":"center"}},null,-1),iC={style:{"text-align":"left"}},cC=t("code",null,"字符串",-1),hC=t("code",null,"动态规划",-1),gC=t("td",{style:{"text-align":"left"}},"🔴",-1),mC={style:{"text-align":"center"}},fC={href:"https://leetcode.cn/problems/shortest-common-supersequence",target:"_blank",rel:"noopener noreferrer"},uC={href:"https://leetcode.com/problems/shortest-common-supersequence",target:"_blank",rel:"noopener noreferrer"},yC=t("td",{style:{"text-align":"center"}},"1105",-1),pC=t("td",{style:{"text-align":"left"}},"填充书架",-1),xC=t("td",{style:{"text-align":"center"}},null,-1),bC={style:{"text-align":"left"}},kC=t("code",null,"数组",-1),wC=t("code",null,"动态规划",-1),vC=t("td",{style:{"text-align":"left"}},"🟠",-1),IC={style:{"text-align":"center"}},qC={href:"https://leetcode.cn/problems/filling-bookcase-shelves",target:"_blank",rel:"noopener noreferrer"},zC={href:"https://leetcode.com/problems/filling-bookcase-shelves",target:"_blank",rel:"noopener noreferrer"},jC=t("td",{style:{"text-align":"center"}},"1125",-1),CC=t("td",{style:{"text-align":"left"}},"最小的必要团队",-1),OC=t("td",{style:{"text-align":"center"}},null,-1),LC={style:{"text-align":"left"}},PC=t("code",null,"位运算",-1),KC=t("code",null,"数组",-1),VC=t("code",null,"动态规划",-1),NC=t("code",null,"1+",-1),DC=t("td",{style:{"text-align":"left"}},"🔴",-1),EC={style:{"text-align":"center"}},BC={href:"https://leetcode.cn/problems/smallest-sufficient-team",target:"_blank",rel:"noopener noreferrer"},MC={href:"https://leetcode.com/problems/smallest-sufficient-team",target:"_blank",rel:"noopener noreferrer"},YC=t("td",{style:{"text-align":"center"}},"1130",-1),AC=t("td",{style:{"text-align":"left"}},"叶值的最小代价生成树",-1),JC=t("td",{style:{"text-align":"center"}},null,-1),RC={style:{"text-align":"left"}},SC=t("code",null,"栈",-1),UC=t("code",null,"贪心",-1),WC=t("code",null,"数组",-1),XC=t("code",null,"2+",-1),FC=t("td",{style:{"text-align":"left"}},"🟠",-1),GC={style:{"text-align":"center"}},HC={href:"https://leetcode.cn/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},TC={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},QC=t("td",{style:{"text-align":"center"}},"1137",-1),ZC=t("td",{style:{"text-align":"left"}},"第 N 个泰波那契数",-1),$C={style:{"text-align":"center"}},tO={style:{"text-align":"left"}},eO=t("code",null,"记忆化搜索",-1),oO=t("code",null,"数学",-1),lO=t("code",null,"动态规划",-1),nO=t("td",{style:{"text-align":"left"}},"🟢",-1),sO={style:{"text-align":"center"}},rO={href:"https://leetcode.cn/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},dO={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},_O=t("td",{style:{"text-align":"center"}},"1139",-1),aO=t("td",{style:{"text-align":"left"}},"最大的以 1 为边界的正方形",-1),iO=t("td",{style:{"text-align":"center"}},null,-1),cO={style:{"text-align":"left"}},hO=t("code",null,"数组",-1),gO=t("code",null,"动态规划",-1),mO=t("code",null,"矩阵",-1),fO=t("td",{style:{"text-align":"left"}},"🟠",-1),uO={style:{"text-align":"center"}},yO={href:"https://leetcode.cn/problems/largest-1-bordered-square",target:"_blank",rel:"noopener noreferrer"},pO={href:"https://leetcode.com/problems/largest-1-bordered-square",target:"_blank",rel:"noopener noreferrer"},xO=t("td",{style:{"text-align":"center"}},"1140",-1),bO=t("td",{style:{"text-align":"left"}},"石子游戏 II",-1),kO=t("td",{style:{"text-align":"center"}},null,-1),wO={style:{"text-align":"left"}},vO=t("code",null,"数组",-1),IO=t("code",null,"数学",-1),qO=t("code",null,"动态规划",-1),zO=t("code",null,"2+",-1),jO=t("td",{style:{"text-align":"left"}},"🟠",-1),CO={style:{"text-align":"center"}},OO={href:"https://leetcode.cn/problems/stone-game-ii",target:"_blank",rel:"noopener noreferrer"},LO={href:"https://leetcode.com/problems/stone-game-ii",target:"_blank",rel:"noopener noreferrer"},PO=t("td",{style:{"text-align":"center"}},"1143",-1),KO=t("td",{style:{"text-align":"left"}},"最长公共子序列",-1),VO={style:{"text-align":"center"}},NO={style:{"text-align":"left"}},DO=t("code",null,"字符串",-1),EO=t("code",null,"动态规划",-1),BO=t("td",{style:{"text-align":"left"}},"🟠",-1),MO={style:{"text-align":"center"}},YO={href:"https://leetcode.cn/problems/longest-common-subsequence",target:"_blank",rel:"noopener noreferrer"},AO={href:"https://leetcode.com/problems/longest-common-subsequence",target:"_blank",rel:"noopener noreferrer"},JO=t("td",{style:{"text-align":"center"}},"1147",-1),RO=t("td",{style:{"text-align":"left"}},"段式回文",-1),SO=t("td",{style:{"text-align":"center"}},null,-1),UO={style:{"text-align":"left"}},WO=t("code",null,"贪心",-1),XO=t("code",null,"双指针",-1),FO=t("code",null,"字符串",-1),GO=t("code",null,"3+",-1),HO=t("td",{style:{"text-align":"left"}},"🔴",-1),TO={style:{"text-align":"center"}},QO={href:"https://leetcode.cn/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},ZO={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},$O=t("td",{style:{"text-align":"center"}},"1155",-1),tL=t("td",{style:{"text-align":"left"}},"掷骰子等于目标和的方法数",-1),eL=t("td",{style:{"text-align":"center"}},null,-1),oL={style:{"text-align":"left"}},lL=t("code",null,"动态规划",-1),nL=t("td",{style:{"text-align":"left"}},"🟠",-1),sL={style:{"text-align":"center"}},rL={href:"https://leetcode.cn/problems/number-of-dice-rolls-with-target-sum",target:"_blank",rel:"noopener noreferrer"},dL={href:"https://leetcode.com/problems/number-of-dice-rolls-with-target-sum",target:"_blank",rel:"noopener noreferrer"},_L=t("td",{style:{"text-align":"center"}},"1162",-1),aL=t("td",{style:{"text-align":"left"}},"地图分析",-1),iL=t("td",{style:{"text-align":"center"}},null,-1),cL={style:{"text-align":"left"}},hL=t("code",null,"广度优先搜索",-1),gL=t("code",null,"数组",-1),mL=t("code",null,"动态规划",-1),fL=t("code",null,"1+",-1),uL=t("td",{style:{"text-align":"left"}},"🟠",-1),yL={style:{"text-align":"center"}},pL={href:"https://leetcode.cn/problems/as-far-from-land-as-possible",target:"_blank",rel:"noopener noreferrer"},xL={href:"https://leetcode.com/problems/as-far-from-land-as-possible",target:"_blank",rel:"noopener noreferrer"},bL=t("td",{style:{"text-align":"center"}},"1182",-1),kL=t("td",{style:{"text-align":"left"}},"与目标颜色间的最短距离 🔒",-1),wL=t("td",{style:{"text-align":"center"}},null,-1),vL={style:{"text-align":"left"}},IL=t("code",null,"数组",-1),qL=t("code",null,"二分查找",-1),zL=t("code",null,"动态规划",-1),jL=t("td",{style:{"text-align":"left"}},"🟠",-1),CL={style:{"text-align":"center"}},OL={href:"https://leetcode.cn/problems/shortest-distance-to-target-color",target:"_blank",rel:"noopener noreferrer"},LL={href:"https://leetcode.com/problems/shortest-distance-to-target-color",target:"_blank",rel:"noopener noreferrer"},PL=t("td",{style:{"text-align":"center"}},"1186",-1),KL=t("td",{style:{"text-align":"left"}},"删除一次得到子数组最大和",-1),VL=t("td",{style:{"text-align":"center"}},null,-1),NL={style:{"text-align":"left"}},DL=t("code",null,"数组",-1),EL=t("code",null,"动态规划",-1),BL=t("td",{style:{"text-align":"left"}},"🟠",-1),ML={style:{"text-align":"center"}},YL={href:"https://leetcode.cn/problems/maximum-subarray-sum-with-one-deletion",target:"_blank",rel:"noopener noreferrer"},AL={href:"https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion",target:"_blank",rel:"noopener noreferrer"},JL=t("td",{style:{"text-align":"center"}},"1187",-1),RL=t("td",{style:{"text-align":"left"}},"使数组严格递增",-1),SL=t("td",{style:{"text-align":"center"}},null,-1),UL={style:{"text-align":"left"}},WL=t("code",null,"数组",-1),XL=t("code",null,"二分查找",-1),FL=t("code",null,"动态规划",-1),GL=t("code",null,"1+",-1),HL=t("td",{style:{"text-align":"left"}},"🔴",-1),TL={style:{"text-align":"center"}},QL={href:"https://leetcode.cn/problems/make-array-strictly-increasing",target:"_blank",rel:"noopener noreferrer"},ZL={href:"https://leetcode.com/problems/make-array-strictly-increasing",target:"_blank",rel:"noopener noreferrer"},$L=t("td",{style:{"text-align":"center"}},"1191",-1),tP=t("td",{style:{"text-align":"left"}},"K 次串联后最大子数组之和",-1),eP=t("td",{style:{"text-align":"center"}},null,-1),oP={style:{"text-align":"left"}},lP=t("code",null,"数组",-1),nP=t("code",null,"动态规划",-1),sP=t("td",{style:{"text-align":"left"}},"🟠",-1),rP={style:{"text-align":"center"}},dP={href:"https://leetcode.cn/problems/k-concatenation-maximum-sum",target:"_blank",rel:"noopener noreferrer"},_P={href:"https://leetcode.com/problems/k-concatenation-maximum-sum",target:"_blank",rel:"noopener noreferrer"},aP=t("td",{style:{"text-align":"center"}},"1216",-1),iP=t("td",{style:{"text-align":"left"}},"验证回文串 III 🔒",-1),cP=t("td",{style:{"text-align":"center"}},null,-1),hP={style:{"text-align":"left"}},gP=t("code",null,"字符串",-1),mP=t("code",null,"动态规划",-1),fP=t("td",{style:{"text-align":"left"}},"🔴",-1),uP={style:{"text-align":"center"}},yP={href:"https://leetcode.cn/problems/valid-palindrome-iii",target:"_blank",rel:"noopener noreferrer"},pP={href:"https://leetcode.com/problems/valid-palindrome-iii",target:"_blank",rel:"noopener noreferrer"},xP=t("td",{style:{"text-align":"center"}},"1218",-1),bP=t("td",{style:{"text-align":"left"}},"最长定差子序列",-1),kP=t("td",{style:{"text-align":"center"}},null,-1),wP={style:{"text-align":"left"}},vP=t("code",null,"数组",-1),IP=t("code",null,"哈希表",-1),qP=t("code",null,"动态规划",-1),zP=t("td",{style:{"text-align":"left"}},"🟠",-1),jP={style:{"text-align":"center"}},CP={href:"https://leetcode.cn/problems/longest-arithmetic-subsequence-of-given-difference",target:"_blank",rel:"noopener noreferrer"},OP={href:"https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference",target:"_blank",rel:"noopener noreferrer"},LP=t("td",{style:{"text-align":"center"}},"1220",-1),PP=t("td",{style:{"text-align":"left"}},"统计元音字母序列的数目",-1),KP=t("td",{style:{"text-align":"center"}},null,-1),VP={style:{"text-align":"left"}},NP=t("code",null,"动态规划",-1),DP=t("td",{style:{"text-align":"left"}},"🔴",-1),EP={style:{"text-align":"center"}},BP={href:"https://leetcode.cn/problems/count-vowels-permutation",target:"_blank",rel:"noopener noreferrer"},MP={href:"https://leetcode.com/problems/count-vowels-permutation",target:"_blank",rel:"noopener noreferrer"},YP=t("td",{style:{"text-align":"center"}},"1223",-1),AP=t("td",{style:{"text-align":"left"}},"掷骰子模拟",-1),JP=t("td",{style:{"text-align":"center"}},null,-1),RP={style:{"text-align":"left"}},SP=t("code",null,"数组",-1),UP=t("code",null,"动态规划",-1),WP=t("td",{style:{"text-align":"left"}},"🔴",-1),XP={style:{"text-align":"center"}},FP={href:"https://leetcode.cn/problems/dice-roll-simulation",target:"_blank",rel:"noopener noreferrer"},GP={href:"https://leetcode.com/problems/dice-roll-simulation",target:"_blank",rel:"noopener noreferrer"},HP=t("td",{style:{"text-align":"center"}},"1227",-1),TP=t("td",{style:{"text-align":"left"}},"飞机座位分配概率",-1),QP=t("td",{style:{"text-align":"center"}},null,-1),ZP={style:{"text-align":"left"}},$P=t("code",null,"脑筋急转弯",-1),tK=t("code",null,"数学",-1),eK=t("code",null,"动态规划",-1),oK=t("code",null,"1+",-1),lK=t("td",{style:{"text-align":"left"}},"🟠",-1),nK={style:{"text-align":"center"}},sK={href:"https://leetcode.cn/problems/airplane-seat-assignment-probability",target:"_blank",rel:"noopener noreferrer"},rK={href:"https://leetcode.com/problems/airplane-seat-assignment-probability",target:"_blank",rel:"noopener noreferrer"},dK=t("td",{style:{"text-align":"center"}},"1230",-1),_K=t("td",{style:{"text-align":"left"}},"抛掷硬币 🔒",-1),aK=t("td",{style:{"text-align":"center"}},null,-1),iK={style:{"text-align":"left"}},cK=t("code",null,"数组",-1),hK=t("code",null,"数学",-1),gK=t("code",null,"动态规划",-1),mK=t("code",null,"1+",-1),fK=t("td",{style:{"text-align":"left"}},"🟠",-1),uK={style:{"text-align":"center"}},yK={href:"https://leetcode.cn/problems/toss-strange-coins",target:"_blank",rel:"noopener noreferrer"},pK={href:"https://leetcode.com/problems/toss-strange-coins",target:"_blank",rel:"noopener noreferrer"},xK=t("td",{style:{"text-align":"center"}},"1235",-1),bK=t("td",{style:{"text-align":"left"}},"规划兼职工作",-1),kK=t("td",{style:{"text-align":"center"}},null,-1),wK={style:{"text-align":"left"}},vK=t("code",null,"数组",-1),IK=t("code",null,"二分查找",-1),qK=t("code",null,"动态规划",-1),zK=t("code",null,"1+",-1),jK=t("td",{style:{"text-align":"left"}},"🔴",-1),CK={style:{"text-align":"center"}},OK={href:"https://leetcode.cn/problems/maximum-profit-in-job-scheduling",target:"_blank",rel:"noopener noreferrer"},LK={href:"https://leetcode.com/problems/maximum-profit-in-job-scheduling",target:"_blank",rel:"noopener noreferrer"},PK=t("td",{style:{"text-align":"center"}},"1246",-1),KK=t("td",{style:{"text-align":"left"}},"删除回文子数组 🔒",-1),VK=t("td",{style:{"text-align":"center"}},null,-1),NK={style:{"text-align":"left"}},DK=t("code",null,"数组",-1),EK=t("code",null,"动态规划",-1),BK=t("td",{style:{"text-align":"left"}},"🔴",-1),MK={style:{"text-align":"center"}},YK={href:"https://leetcode.cn/problems/palindrome-removal",target:"_blank",rel:"noopener noreferrer"},AK={href:"https://leetcode.com/problems/palindrome-removal",target:"_blank",rel:"noopener noreferrer"},JK=t("td",{style:{"text-align":"center"}},"1255",-1),RK=t("td",{style:{"text-align":"left"}},"得分最高的单词集合",-1),SK=t("td",{style:{"text-align":"center"}},null,-1),UK={style:{"text-align":"left"}},WK=t("code",null,"位运算",-1),XK=t("code",null,"数组",-1),FK=t("code",null,"字符串",-1),GK=t("code",null,"3+",-1),HK=t("td",{style:{"text-align":"left"}},"🔴",-1),TK={style:{"text-align":"center"}},QK={href:"https://leetcode.cn/problems/maximum-score-words-formed-by-letters",target:"_blank",rel:"noopener noreferrer"},ZK={href:"https://leetcode.com/problems/maximum-score-words-formed-by-letters",target:"_blank",rel:"noopener noreferrer"},$K=t("td",{style:{"text-align":"center"}},"1259",-1),tV=t("td",{style:{"text-align":"left"}},"不相交的握手 🔒",-1),eV=t("td",{style:{"text-align":"center"}},null,-1),oV={style:{"text-align":"left"}},lV=t("code",null,"数学",-1),nV=t("code",null,"动态规划",-1),sV=t("td",{style:{"text-align":"left"}},"🔴",-1),rV={style:{"text-align":"center"}},dV={href:"https://leetcode.cn/problems/handshakes-that-dont-cross",target:"_blank",rel:"noopener noreferrer"},_V={href:"https://leetcode.com/problems/handshakes-that-dont-cross",target:"_blank",rel:"noopener noreferrer"},aV=t("td",{style:{"text-align":"center"}},"1262",-1),iV=t("td",{style:{"text-align":"left"}},"可被三整除的最大和",-1),cV=t("td",{style:{"text-align":"center"}},null,-1),hV={style:{"text-align":"left"}},gV=t("code",null,"贪心",-1),mV=t("code",null,"数组",-1),fV=t("code",null,"动态规划",-1),uV=t("code",null,"1+",-1),yV=t("td",{style:{"text-align":"left"}},"🟠",-1),pV={style:{"text-align":"center"}},xV={href:"https://leetcode.cn/problems/greatest-sum-divisible-by-three",target:"_blank",rel:"noopener noreferrer"},bV={href:"https://leetcode.com/problems/greatest-sum-divisible-by-three",target:"_blank",rel:"noopener noreferrer"},kV=t("td",{style:{"text-align":"center"}},"1269",-1),wV=t("td",{style:{"text-align":"left"}},"停在原地的方案数",-1),vV=t("td",{style:{"text-align":"center"}},null,-1),IV={style:{"text-align":"left"}},qV=t("code",null,"动态规划",-1),zV=t("td",{style:{"text-align":"left"}},"🔴",-1),jV={style:{"text-align":"center"}},CV={href:"https://leetcode.cn/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps",target:"_blank",rel:"noopener noreferrer"},OV={href:"https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps",target:"_blank",rel:"noopener noreferrer"},LV=t("td",{style:{"text-align":"center"}},"1277",-1),PV=t("td",{style:{"text-align":"left"}},"统计全为 1 的正方形子矩阵",-1),KV={style:{"text-align":"center"}},VV={style:{"text-align":"left"}},NV=t("code",null,"数组",-1),DV=t("code",null,"动态规划",-1),EV=t("code",null,"矩阵",-1),BV=t("td",{style:{"text-align":"left"}},"🟠",-1),MV={style:{"text-align":"center"}},YV={href:"https://leetcode.cn/problems/count-square-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},AV={href:"https://leetcode.com/problems/count-square-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},JV=t("td",{style:{"text-align":"center"}},"1278",-1),RV=t("td",{style:{"text-align":"left"}},"分割回文串 III",-1),SV=t("td",{style:{"text-align":"center"}},null,-1),UV={style:{"text-align":"left"}},WV=t("code",null,"字符串",-1),XV=t("code",null,"动态规划",-1),FV=t("td",{style:{"text-align":"left"}},"🔴",-1),GV={style:{"text-align":"center"}},HV={href:"https://leetcode.cn/problems/palindrome-partitioning-iii",target:"_blank",rel:"noopener noreferrer"},TV={href:"https://leetcode.com/problems/palindrome-partitioning-iii",target:"_blank",rel:"noopener noreferrer"},QV=t("td",{style:{"text-align":"center"}},"1289",-1),ZV=t("td",{style:{"text-align":"left"}},"下降路径最小和 II",-1),$V=t("td",{style:{"text-align":"center"}},null,-1),tN={style:{"text-align":"left"}},eN=t("code",null,"数组",-1),oN=t("code",null,"动态规划",-1),lN=t("code",null,"矩阵",-1),nN=t("td",{style:{"text-align":"left"}},"🔴",-1),sN={style:{"text-align":"center"}},rN={href:"https://leetcode.cn/problems/minimum-falling-path-sum-ii",target:"_blank",rel:"noopener noreferrer"},dN={href:"https://leetcode.com/problems/minimum-falling-path-sum-ii",target:"_blank",rel:"noopener noreferrer"},_N=t("td",{style:{"text-align":"center"}},"1301",-1),aN=t("td",{style:{"text-align":"left"}},"最大得分的路径数目",-1),iN=t("td",{style:{"text-align":"center"}},null,-1),cN={style:{"text-align":"left"}},hN=t("code",null,"数组",-1),gN=t("code",null,"动态规划",-1),mN=t("code",null,"矩阵",-1),fN=t("td",{style:{"text-align":"left"}},"🔴",-1),uN={style:{"text-align":"center"}},yN={href:"https://leetcode.cn/problems/number-of-paths-with-max-score",target:"_blank",rel:"noopener noreferrer"},pN={href:"https://leetcode.com/problems/number-of-paths-with-max-score",target:"_blank",rel:"noopener noreferrer"},xN=t("td",{style:{"text-align":"center"}},"1312",-1),bN=t("td",{style:{"text-align":"left"}},"让字符串成为回文串的最少插入次数",-1),kN={style:{"text-align":"center"}},wN={style:{"text-align":"left"}},vN=t("code",null,"字符串",-1),IN=t("code",null,"动态规划",-1),qN=t("td",{style:{"text-align":"left"}},"🔴",-1),zN={style:{"text-align":"center"}},jN={href:"https://leetcode.cn/problems/minimum-insertion-steps-to-make-a-string-palindrome",target:"_blank",rel:"noopener noreferrer"},CN={href:"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome",target:"_blank",rel:"noopener noreferrer"},ON=t("td",{style:{"text-align":"center"}},"1320",-1),LN=t("td",{style:{"text-align":"left"}},"二指输入的的最小距离",-1),PN=t("td",{style:{"text-align":"center"}},null,-1),KN={style:{"text-align":"left"}},VN=t("code",null,"字符串",-1),NN=t("code",null,"动态规划",-1),DN=t("td",{style:{"text-align":"left"}},"🔴",-1),EN={style:{"text-align":"center"}},BN={href:"https://leetcode.cn/problems/minimum-distance-to-type-a-word-using-two-fingers",target:"_blank",rel:"noopener noreferrer"},MN={href:"https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers",target:"_blank",rel:"noopener noreferrer"},YN=t("td",{style:{"text-align":"center"}},"1326",-1),AN=t("td",{style:{"text-align":"left"}},"灌溉花园的最少水龙头数目",-1),JN=t("td",{style:{"text-align":"center"}},null,-1),RN={style:{"text-align":"left"}},SN=t("code",null,"贪心",-1),UN=t("code",null,"数组",-1),WN=t("code",null,"动态规划",-1),XN=t("td",{style:{"text-align":"left"}},"🔴",-1),FN={style:{"text-align":"center"}},GN={href:"https://leetcode.cn/problems/minimum-number-of-taps-to-open-to-water-a-garden",target:"_blank",rel:"noopener noreferrer"},HN={href:"https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden",target:"_blank",rel:"noopener noreferrer"},TN=t("td",{style:{"text-align":"center"}},"1334",-1),QN=t("td",{style:{"text-align":"left"}},"阈值距离内邻居最少的城市",-1),ZN=t("td",{style:{"text-align":"center"}},null,-1),$N={style:{"text-align":"left"}},tD=t("code",null,"图",-1),eD=t("code",null,"动态规划",-1),oD=t("code",null,"最短路",-1),lD=t("td",{style:{"text-align":"left"}},"🟠",-1),nD={style:{"text-align":"center"}},sD={href:"https://leetcode.cn/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},rD={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},dD=t("td",{style:{"text-align":"center"}},"1335",-1),_D=t("td",{style:{"text-align":"left"}},"工作计划的最低难度",-1),aD=t("td",{style:{"text-align":"center"}},null,-1),iD={style:{"text-align":"left"}},cD=t("code",null,"数组",-1),hD=t("code",null,"动态规划",-1),gD=t("td",{style:{"text-align":"left"}},"🔴",-1),mD={style:{"text-align":"center"}},fD={href:"https://leetcode.cn/problems/minimum-difficulty-of-a-job-schedule",target:"_blank",rel:"noopener noreferrer"},uD={href:"https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule",target:"_blank",rel:"noopener noreferrer"},yD=t("td",{style:{"text-align":"center"}},"1340",-1),pD=t("td",{style:{"text-align":"left"}},"跳跃游戏 V",-1),xD=t("td",{style:{"text-align":"center"}},null,-1),bD={style:{"text-align":"left"}},kD=t("code",null,"数组",-1),wD=t("code",null,"动态规划",-1),vD=t("code",null,"排序",-1),ID=t("td",{style:{"text-align":"left"}},"🔴",-1),qD={style:{"text-align":"center"}},zD={href:"https://leetcode.cn/problems/jump-game-v",target:"_blank",rel:"noopener noreferrer"},jD={href:"https://leetcode.com/problems/jump-game-v",target:"_blank",rel:"noopener noreferrer"},CD=t("td",{style:{"text-align":"center"}},"1349",-1),OD=t("td",{style:{"text-align":"left"}},"参加考试的最大学生数",-1),LD=t("td",{style:{"text-align":"center"}},null,-1),PD={style:{"text-align":"left"}},KD=t("code",null,"位运算",-1),VD=t("code",null,"数组",-1),ND=t("code",null,"动态规划",-1),DD=t("code",null,"2+",-1),ED=t("td",{style:{"text-align":"left"}},"🔴",-1),BD={style:{"text-align":"center"}},MD={href:"https://leetcode.cn/problems/maximum-students-taking-exam",target:"_blank",rel:"noopener noreferrer"},YD={href:"https://leetcode.com/problems/maximum-students-taking-exam",target:"_blank",rel:"noopener noreferrer"},AD=t("td",{style:{"text-align":"center"}},"1359",-1),JD=t("td",{style:{"text-align":"left"}},"有效的快递序列数目",-1),RD=t("td",{style:{"text-align":"center"}},null,-1),SD={style:{"text-align":"left"}},UD=t("code",null,"数学",-1),WD=t("code",null,"动态规划",-1),XD=t("code",null,"组合数学",-1),FD=t("td",{style:{"text-align":"left"}},"🔴",-1),GD={style:{"text-align":"center"}},HD={href:"https://leetcode.cn/problems/count-all-valid-pickup-and-delivery-options",target:"_blank",rel:"noopener noreferrer"},TD={href:"https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options",target:"_blank",rel:"noopener noreferrer"},QD=t("td",{style:{"text-align":"center"}},"1363",-1),ZD=t("td",{style:{"text-align":"left"}},"形成三的最大倍数",-1),$D=t("td",{style:{"text-align":"center"}},null,-1),tE={style:{"text-align":"left"}},eE=t("code",null,"贪心",-1),oE=t("code",null,"数组",-1),lE=t("code",null,"动态规划",-1),nE=t("td",{style:{"text-align":"left"}},"🔴",-1),sE={style:{"text-align":"center"}},rE={href:"https://leetcode.cn/problems/largest-multiple-of-three",target:"_blank",rel:"noopener noreferrer"},dE={href:"https://leetcode.com/problems/largest-multiple-of-three",target:"_blank",rel:"noopener noreferrer"},_E=t("td",{style:{"text-align":"center"}},"1372",-1),aE=t("td",{style:{"text-align":"left"}},"二叉树中的最长交错路径",-1),iE=t("td",{style:{"text-align":"center"}},null,-1),cE={style:{"text-align":"left"}},hE=t("code",null,"树",-1),gE=t("code",null,"深度优先搜索",-1),mE=t("code",null,"动态规划",-1),fE=t("code",null,"1+",-1),uE=t("td",{style:{"text-align":"left"}},"🟠",-1),yE={style:{"text-align":"center"}},pE={href:"https://leetcode.cn/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},xE={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},bE=t("td",{style:{"text-align":"center"}},"1373",-1),kE=t("td",{style:{"text-align":"left"}},"二叉搜索子树的最大键值和",-1),wE=t("td",{style:{"text-align":"center"}},null,-1),vE={style:{"text-align":"left"}},IE=t("code",null,"树",-1),qE=t("code",null,"深度优先搜索",-1),zE=t("code",null,"二叉搜索树",-1),jE=t("code",null,"2+",-1),CE=t("td",{style:{"text-align":"left"}},"🔴",-1),OE={style:{"text-align":"center"}},LE={href:"https://leetcode.cn/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},PE={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},KE=t("td",{style:{"text-align":"center"}},"1387",-1),VE=t("td",{style:{"text-align":"left"}},"将整数按权重排序",-1),NE=t("td",{style:{"text-align":"center"}},null,-1),DE={style:{"text-align":"left"}},EE=t("code",null,"记忆化搜索",-1),BE=t("code",null,"动态规划",-1),ME=t("code",null,"排序",-1),YE=t("td",{style:{"text-align":"left"}},"🟠",-1),AE={style:{"text-align":"center"}},JE={href:"https://leetcode.cn/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},RE={href:"https://leetcode.com/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},SE=t("td",{style:{"text-align":"center"}},"1388",-1),UE=t("td",{style:{"text-align":"left"}},"3n 块披萨",-1),WE=t("td",{style:{"text-align":"center"}},null,-1),XE={style:{"text-align":"left"}},FE=t("code",null,"贪心",-1),GE=t("code",null,"数组",-1),HE=t("code",null,"动态规划",-1),TE=t("code",null,"1+",-1),QE=t("td",{style:{"text-align":"left"}},"🔴",-1),ZE={style:{"text-align":"center"}},$E={href:"https://leetcode.cn/problems/pizza-with-3n-slices",target:"_blank",rel:"noopener noreferrer"},tB={href:"https://leetcode.com/problems/pizza-with-3n-slices",target:"_blank",rel:"noopener noreferrer"},eB=t("td",{style:{"text-align":"center"}},"1395",-1),oB=t("td",{style:{"text-align":"left"}},"统计作战单位数",-1),lB=t("td",{style:{"text-align":"center"}},null,-1),nB={style:{"text-align":"left"}},sB=t("code",null,"树状数组",-1),rB=t("code",null,"线段树",-1),dB=t("code",null,"数组",-1),_B=t("code",null,"1+",-1),aB=t("td",{style:{"text-align":"left"}},"🟠",-1),iB={style:{"text-align":"center"}},cB={href:"https://leetcode.cn/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},hB={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},gB=t("td",{style:{"text-align":"center"}},"1397",-1),mB=t("td",{style:{"text-align":"left"}},"找到所有好字符串",-1),fB=t("td",{style:{"text-align":"center"}},null,-1),uB={style:{"text-align":"left"}},yB=t("code",null,"字符串",-1),pB=t("code",null,"动态规划",-1),xB=t("code",null,"字符串匹配",-1),bB=t("td",{style:{"text-align":"left"}},"🔴",-1),kB={style:{"text-align":"center"}},wB={href:"https://leetcode.cn/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},vB={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},IB=t("td",{style:{"text-align":"center"}},"1402",-1),qB=t("td",{style:{"text-align":"left"}},"做菜顺序",-1),zB=t("td",{style:{"text-align":"center"}},null,-1),jB={style:{"text-align":"left"}},CB=t("code",null,"贪心",-1),OB=t("code",null,"数组",-1),LB=t("code",null,"动态规划",-1),PB=t("code",null,"1+",-1),KB=t("td",{style:{"text-align":"left"}},"🔴",-1),VB={style:{"text-align":"center"}},NB={href:"https://leetcode.cn/problems/reducing-dishes",target:"_blank",rel:"noopener noreferrer"},DB={href:"https://leetcode.com/problems/reducing-dishes",target:"_blank",rel:"noopener noreferrer"},EB=t("td",{style:{"text-align":"center"}},"1406",-1),BB=t("td",{style:{"text-align":"left"}},"石子游戏 III",-1),MB=t("td",{style:{"text-align":"center"}},null,-1),YB={style:{"text-align":"left"}},AB=t("code",null,"数组",-1),JB=t("code",null,"数学",-1),RB=t("code",null,"动态规划",-1),SB=t("code",null,"1+",-1),UB=t("td",{style:{"text-align":"left"}},"🔴",-1),WB={style:{"text-align":"center"}},XB={href:"https://leetcode.cn/problems/stone-game-iii",target:"_blank",rel:"noopener noreferrer"},FB={href:"https://leetcode.com/problems/stone-game-iii",target:"_blank",rel:"noopener noreferrer"},GB=t("td",{style:{"text-align":"center"}},"1411",-1),HB=t("td",{style:{"text-align":"left"}},"给 N x 3 网格图涂色的方案数",-1),TB=t("td",{style:{"text-align":"center"}},null,-1),QB={style:{"text-align":"left"}},ZB=t("code",null,"动态规划",-1),$B=t("td",{style:{"text-align":"left"}},"🔴",-1),tM={style:{"text-align":"center"}},eM={href:"https://leetcode.cn/problems/number-of-ways-to-paint-n-3-grid",target:"_blank",rel:"noopener noreferrer"},oM={href:"https://leetcode.com/problems/number-of-ways-to-paint-n-3-grid",target:"_blank",rel:"noopener noreferrer"},lM=t("td",{style:{"text-align":"center"}},"1416",-1),nM=t("td",{style:{"text-align":"left"}},"恢复数组",-1),sM=t("td",{style:{"text-align":"center"}},null,-1),rM={style:{"text-align":"left"}},dM=t("code",null,"字符串",-1),_M=t("code",null,"动态规划",-1),aM=t("td",{style:{"text-align":"left"}},"🔴",-1),iM={style:{"text-align":"center"}},cM={href:"https://leetcode.cn/problems/restore-the-array",target:"_blank",rel:"noopener noreferrer"},hM={href:"https://leetcode.com/problems/restore-the-array",target:"_blank",rel:"noopener noreferrer"},gM=t("td",{style:{"text-align":"center"}},"1420",-1),mM=t("td",{style:{"text-align":"left"}},"生成数组",-1),fM=t("td",{style:{"text-align":"center"}},null,-1),uM={style:{"text-align":"left"}},yM=t("code",null,"动态规划",-1),pM=t("code",null,"前缀和",-1),xM=t("td",{style:{"text-align":"left"}},"🔴",-1),bM={style:{"text-align":"center"}},kM={href:"https://leetcode.cn/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons",target:"_blank",rel:"noopener noreferrer"},wM={href:"https://leetcode.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons",target:"_blank",rel:"noopener noreferrer"},vM=t("td",{style:{"text-align":"center"}},"1425",-1),IM=t("td",{style:{"text-align":"left"}},"带限制的子序列和",-1),qM=t("td",{style:{"text-align":"center"}},null,-1),zM={style:{"text-align":"left"}},jM=t("code",null,"队列",-1),CM=t("code",null,"数组",-1),OM=t("code",null,"动态规划",-1),LM=t("code",null,"3+",-1),PM=t("td",{style:{"text-align":"left"}},"🔴",-1),KM={style:{"text-align":"center"}},VM={href:"https://leetcode.cn/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},NM={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},DM=t("td",{style:{"text-align":"center"}},"1434",-1),EM=t("td",{style:{"text-align":"left"}},"每个人戴不同帽子的方案数",-1),BM=t("td",{style:{"text-align":"center"}},null,-1),MM={style:{"text-align":"left"}},YM=t("code",null,"位运算",-1),AM=t("code",null,"数组",-1),JM=t("code",null,"动态规划",-1),RM=t("code",null,"1+",-1),SM=t("td",{style:{"text-align":"left"}},"🔴",-1),UM={style:{"text-align":"center"}},WM={href:"https://leetcode.cn/problems/number-of-ways-to-wear-different-hats-to-each-other",target:"_blank",rel:"noopener noreferrer"},XM={href:"https://leetcode.com/problems/number-of-ways-to-wear-different-hats-to-each-other",target:"_blank",rel:"noopener noreferrer"},FM=t("td",{style:{"text-align":"center"}},"1444",-1),GM=t("td",{style:{"text-align":"left"}},"切披萨的方案数",-1),HM=t("td",{style:{"text-align":"center"}},null,-1),TM={style:{"text-align":"left"}},QM=t("code",null,"记忆化搜索",-1),ZM=t("code",null,"数组",-1),$M=t("code",null,"动态规划",-1),tY=t("code",null,"1+",-1),eY=t("td",{style:{"text-align":"left"}},"🔴",-1),oY={style:{"text-align":"center"}},lY={href:"https://leetcode.cn/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},nY={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},sY=t("td",{style:{"text-align":"center"}},"1449",-1),rY=t("td",{style:{"text-align":"left"}},"数位成本和为目标值的最大数字",-1),dY=t("td",{style:{"text-align":"center"}},null,-1),_Y={style:{"text-align":"left"}},aY=t("code",null,"数组",-1),iY=t("code",null,"动态规划",-1),cY=t("td",{style:{"text-align":"left"}},"🔴",-1),hY={style:{"text-align":"center"}},gY={href:"https://leetcode.cn/problems/form-largest-integer-with-digits-that-add-up-to-target",target:"_blank",rel:"noopener noreferrer"},mY={href:"https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target",target:"_blank",rel:"noopener noreferrer"},fY=t("td",{style:{"text-align":"center"}},"1458",-1),uY=t("td",{style:{"text-align":"left"}},"两个子序列的最大点积",-1),yY=t("td",{style:{"text-align":"center"}},null,-1),pY={style:{"text-align":"left"}},xY=t("code",null,"数组",-1),bY=t("code",null,"动态规划",-1),kY=t("td",{style:{"text-align":"left"}},"🔴",-1),wY={style:{"text-align":"center"}},vY={href:"https://leetcode.cn/problems/max-dot-product-of-two-subsequences",target:"_blank",rel:"noopener noreferrer"},IY={href:"https://leetcode.com/problems/max-dot-product-of-two-subsequences",target:"_blank",rel:"noopener noreferrer"},qY=t("td",{style:{"text-align":"center"}},"1463",-1),zY=t("td",{style:{"text-align":"left"}},"摘樱桃 II",-1),jY=t("td",{style:{"text-align":"center"}},null,-1),CY={style:{"text-align":"left"}},OY=t("code",null,"数组",-1),LY=t("code",null,"动态规划",-1),PY=t("code",null,"矩阵",-1),KY=t("td",{style:{"text-align":"left"}},"🔴",-1),VY={style:{"text-align":"center"}},NY={href:"https://leetcode.cn/problems/cherry-pickup-ii",target:"_blank",rel:"noopener noreferrer"},DY={href:"https://leetcode.com/problems/cherry-pickup-ii",target:"_blank",rel:"noopener noreferrer"},EY=t("td",{style:{"text-align":"center"}},"1467",-1),BY=t("td",{style:{"text-align":"left"}},"两个盒子中球的颜色数相同的概率",-1),MY=t("td",{style:{"text-align":"center"}},null,-1),YY={style:{"text-align":"left"}},AY=t("code",null,"数组",-1),JY=t("code",null,"数学",-1),RY=t("code",null,"动态规划",-1),SY=t("code",null,"3+",-1),UY=t("td",{style:{"text-align":"left"}},"🔴",-1),WY={style:{"text-align":"center"}},XY={href:"https://leetcode.cn/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",target:"_blank",rel:"noopener noreferrer"},FY={href:"https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",target:"_blank",rel:"noopener noreferrer"},GY=t("td",{style:{"text-align":"center"}},"1473",-1),HY=t("td",{style:{"text-align":"left"}},"粉刷房子 III",-1),TY=t("td",{style:{"text-align":"center"}},null,-1),QY={style:{"text-align":"left"}},ZY=t("code",null,"数组",-1),$Y=t("code",null,"动态规划",-1),tA=t("td",{style:{"text-align":"left"}},"🔴",-1),eA={style:{"text-align":"center"}},oA={href:"https://leetcode.cn/problems/paint-house-iii",target:"_blank",rel:"noopener noreferrer"},lA={href:"https://leetcode.com/problems/paint-house-iii",target:"_blank",rel:"noopener noreferrer"},nA=t("td",{style:{"text-align":"center"}},"1477",-1),sA=t("td",{style:{"text-align":"left"}},"找两个和为目标值且不重叠的子数组",-1),rA=t("td",{style:{"text-align":"center"}},null,-1),dA={style:{"text-align":"left"}},_A=t("code",null,"数组",-1),aA=t("code",null,"哈希表",-1),iA=t("code",null,"二分查找",-1),cA=t("code",null,"2+",-1),hA=t("td",{style:{"text-align":"left"}},"🟠",-1),gA={style:{"text-align":"center"}},mA={href:"https://leetcode.cn/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum",target:"_blank",rel:"noopener noreferrer"},fA={href:"https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum",target:"_blank",rel:"noopener noreferrer"},uA=t("td",{style:{"text-align":"center"}},"1478",-1),yA=t("td",{style:{"text-align":"left"}},"安排邮筒",-1),pA=t("td",{style:{"text-align":"center"}},null,-1),xA={style:{"text-align":"left"}},bA=t("code",null,"数组",-1),kA=t("code",null,"数学",-1),wA=t("code",null,"动态规划",-1),vA=t("code",null,"1+",-1),IA=t("td",{style:{"text-align":"left"}},"🔴",-1),qA={style:{"text-align":"center"}},zA={href:"https://leetcode.cn/problems/allocate-mailboxes",target:"_blank",rel:"noopener noreferrer"},jA={href:"https://leetcode.com/problems/allocate-mailboxes",target:"_blank",rel:"noopener noreferrer"},CA=t("td",{style:{"text-align":"center"}},"1483",-1),OA=t("td",{style:{"text-align":"left"}},"树节点的第 K 个祖先",-1),LA=t("td",{style:{"text-align":"center"}},null,-1),PA={style:{"text-align":"left"}},KA=t("code",null,"树",-1),VA=t("code",null,"深度优先搜索",-1),NA=t("code",null,"广度优先搜索",-1),DA=t("code",null,"3+",-1),EA=t("td",{style:{"text-align":"left"}},"🔴",-1),BA={style:{"text-align":"center"}},MA={href:"https://leetcode.cn/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},YA={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},AA=t("td",{style:{"text-align":"center"}},"1493",-1),JA=t("td",{style:{"text-align":"left"}},"删掉一个元素以后全为 1 的最长子数组",-1),RA={style:{"text-align":"center"}},SA={style:{"text-align":"left"}},UA=t("code",null,"数组",-1),WA=t("code",null,"动态规划",-1),XA=t("code",null,"滑动窗口",-1),FA=t("td",{style:{"text-align":"left"}},"🟠",-1),GA={style:{"text-align":"center"}},HA={href:"https://leetcode.cn/problems/longest-subarray-of-1s-after-deleting-one-element",target:"_blank",rel:"noopener noreferrer"},TA={href:"https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element",target:"_blank",rel:"noopener noreferrer"},QA=t("td",{style:{"text-align":"center"}},"1494",-1),ZA=t("td",{style:{"text-align":"left"}},"并行课程 II",-1),$A=t("td",{style:{"text-align":"center"}},null,-1),tJ={style:{"text-align":"left"}},eJ=t("code",null,"位运算",-1),oJ=t("code",null,"图",-1),lJ=t("code",null,"动态规划",-1),nJ=t("code",null,"1+",-1),sJ=t("td",{style:{"text-align":"left"}},"🔴",-1),rJ={style:{"text-align":"center"}},dJ={href:"https://leetcode.cn/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},_J={href:"https://leetcode.com/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},aJ=t("td",{style:{"text-align":"center"}},"1504",-1),iJ=t("td",{style:{"text-align":"left"}},"统计全 1 子矩形",-1),cJ=t("td",{style:{"text-align":"center"}},null,-1),hJ={style:{"text-align":"left"}},gJ=t("code",null,"栈",-1),mJ=t("code",null,"数组",-1),fJ=t("code",null,"动态规划",-1),uJ=t("code",null,"2+",-1),yJ=t("td",{style:{"text-align":"left"}},"🟠",-1),pJ={style:{"text-align":"center"}},xJ={href:"https://leetcode.cn/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},bJ={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},kJ=t("td",{style:{"text-align":"center"}},"1510",-1),wJ=t("td",{style:{"text-align":"left"}},"石子游戏 IV",-1),vJ=t("td",{style:{"text-align":"center"}},null,-1),IJ={style:{"text-align":"left"}},qJ=t("code",null,"数学",-1),zJ=t("code",null,"动态规划",-1),jJ=t("code",null,"博弈",-1),CJ=t("td",{style:{"text-align":"left"}},"🔴",-1),OJ={style:{"text-align":"center"}},LJ={href:"https://leetcode.cn/problems/stone-game-iv",target:"_blank",rel:"noopener noreferrer"},PJ={href:"https://leetcode.com/problems/stone-game-iv",target:"_blank",rel:"noopener noreferrer"},KJ=t("td",{style:{"text-align":"center"}},"1524",-1),VJ=t("td",{style:{"text-align":"left"}},"和为奇数的子数组数目",-1),NJ=t("td",{style:{"text-align":"center"}},null,-1),DJ={style:{"text-align":"left"}},EJ=t("code",null,"数组",-1),BJ=t("code",null,"数学",-1),MJ=t("code",null,"动态规划",-1),YJ=t("code",null,"1+",-1),AJ=t("td",{style:{"text-align":"left"}},"🟠",-1),JJ={style:{"text-align":"center"}},RJ={href:"https://leetcode.cn/problems/number-of-sub-arrays-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},SJ={href:"https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},UJ=t("td",{style:{"text-align":"center"}},"1525",-1),WJ=t("td",{style:{"text-align":"left"}},"字符串的好分割数目",-1),XJ=t("td",{style:{"text-align":"center"}},null,-1),FJ={style:{"text-align":"left"}},GJ=t("code",null,"位运算",-1),HJ=t("code",null,"哈希表",-1),TJ=t("code",null,"字符串",-1),QJ=t("code",null,"1+",-1),ZJ=t("td",{style:{"text-align":"left"}},"🟠",-1),$J={style:{"text-align":"center"}},tR={href:"https://leetcode.cn/problems/number-of-good-ways-to-split-a-string",target:"_blank",rel:"noopener noreferrer"},eR={href:"https://leetcode.com/problems/number-of-good-ways-to-split-a-string",target:"_blank",rel:"noopener noreferrer"},oR=t("td",{style:{"text-align":"center"}},"1526",-1),lR=t("td",{style:{"text-align":"left"}},"形成目标数组的子数组最少增加次数",-1),nR=t("td",{style:{"text-align":"center"}},null,-1),sR={style:{"text-align":"left"}},rR=t("code",null,"栈",-1),dR=t("code",null,"贪心",-1),_R=t("code",null,"数组",-1),aR=t("code",null,"2+",-1),iR=t("td",{style:{"text-align":"left"}},"🔴",-1),cR={style:{"text-align":"center"}},hR={href:"https://leetcode.cn/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},gR={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},mR=t("td",{style:{"text-align":"center"}},"1531",-1),fR=t("td",{style:{"text-align":"left"}},"压缩字符串 II",-1),uR=t("td",{style:{"text-align":"center"}},null,-1),yR={style:{"text-align":"left"}},pR=t("code",null,"字符串",-1),xR=t("code",null,"动态规划",-1),bR=t("td",{style:{"text-align":"left"}},"🔴",-1),kR={style:{"text-align":"center"}},wR={href:"https://leetcode.cn/problems/string-compression-ii",target:"_blank",rel:"noopener noreferrer"},vR={href:"https://leetcode.com/problems/string-compression-ii",target:"_blank",rel:"noopener noreferrer"},IR=t("td",{style:{"text-align":"center"}},"1537",-1),qR=t("td",{style:{"text-align":"left"}},"最大得分",-1),zR=t("td",{style:{"text-align":"center"}},null,-1),jR={style:{"text-align":"left"}},CR=t("code",null,"贪心",-1),OR=t("code",null,"数组",-1),LR=t("code",null,"双指针",-1),PR=t("code",null,"1+",-1),KR=t("td",{style:{"text-align":"left"}},"🔴",-1),VR={style:{"text-align":"center"}},NR={href:"https://leetcode.cn/problems/get-the-maximum-score",target:"_blank",rel:"noopener noreferrer"},DR={href:"https://leetcode.com/problems/get-the-maximum-score",target:"_blank",rel:"noopener noreferrer"},ER=t("td",{style:{"text-align":"center"}},"1547",-1),BR=t("td",{style:{"text-align":"left"}},"切棍子的最小成本",-1),MR=t("td",{style:{"text-align":"center"}},null,-1),YR={style:{"text-align":"left"}},AR=t("code",null,"数组",-1),JR=t("code",null,"动态规划",-1),RR=t("code",null,"排序",-1),SR=t("td",{style:{"text-align":"left"}},"🔴",-1),UR={style:{"text-align":"center"}},WR={href:"https://leetcode.cn/problems/minimum-cost-to-cut-a-stick",target:"_blank",rel:"noopener noreferrer"},XR={href:"https://leetcode.com/problems/minimum-cost-to-cut-a-stick",target:"_blank",rel:"noopener noreferrer"},FR=t("td",{style:{"text-align":"center"}},"1548",-1),GR=t("td",{style:{"text-align":"left"}},"图中最相似的路径 🔒",-1),HR=t("td",{style:{"text-align":"center"}},null,-1),TR={style:{"text-align":"left"}},QR=t("code",null,"图",-1),ZR=t("code",null,"动态规划",-1),$R=t("td",{style:{"text-align":"left"}},"🔴",-1),tS={style:{"text-align":"center"}},eS={href:"https://leetcode.cn/problems/the-most-similar-path-in-a-graph",target:"_blank",rel:"noopener noreferrer"},oS={href:"https://leetcode.com/problems/the-most-similar-path-in-a-graph",target:"_blank",rel:"noopener noreferrer"},lS=t("td",{style:{"text-align":"center"}},"1553",-1),nS=t("td",{style:{"text-align":"left"}},"吃掉 N 个橘子的最少天数",-1),sS=t("td",{style:{"text-align":"center"}},null,-1),rS={style:{"text-align":"left"}},dS=t("code",null,"记忆化搜索",-1),_S=t("code",null,"动态规划",-1),aS=t("td",{style:{"text-align":"left"}},"🔴",-1),iS={style:{"text-align":"center"}},cS={href:"https://leetcode.cn/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},hS={href:"https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},gS=t("td",{style:{"text-align":"center"}},"1563",-1),mS=t("td",{style:{"text-align":"left"}},"石子游戏 V",-1),fS=t("td",{style:{"text-align":"center"}},null,-1),uS={style:{"text-align":"left"}},yS=t("code",null,"数组",-1),pS=t("code",null,"数学",-1),xS=t("code",null,"动态规划",-1),bS=t("code",null,"1+",-1),kS=t("td",{style:{"text-align":"left"}},"🔴",-1),wS={style:{"text-align":"center"}},vS={href:"https://leetcode.cn/problems/stone-game-v",target:"_blank",rel:"noopener noreferrer"},IS={href:"https://leetcode.com/problems/stone-game-v",target:"_blank",rel:"noopener noreferrer"},qS=t("td",{style:{"text-align":"center"}},"1567",-1),zS=t("td",{style:{"text-align":"left"}},"乘积为正数的最长子数组长度",-1),jS=t("td",{style:{"text-align":"center"}},null,-1),CS={style:{"text-align":"left"}},OS=t("code",null,"贪心",-1),LS=t("code",null,"数组",-1),PS=t("code",null,"动态规划",-1),KS=t("td",{style:{"text-align":"left"}},"🟠",-1),VS={style:{"text-align":"center"}},NS={href:"https://leetcode.cn/problems/maximum-length-of-subarray-with-positive-product",target:"_blank",rel:"noopener noreferrer"},DS={href:"https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product",target:"_blank",rel:"noopener noreferrer"},ES=t("td",{style:{"text-align":"center"}},"1569",-1),BS=t("td",{style:{"text-align":"left"}},"将子数组重新排序得到同一个二叉搜索树的方案数",-1),MS=t("td",{style:{"text-align":"center"}},null,-1),YS={style:{"text-align":"left"}},AS=t("code",null,"树",-1),JS=t("code",null,"并查集",-1),RS=t("code",null,"二叉搜索树",-1),SS=t("code",null,"7+",-1),US=t("td",{style:{"text-align":"left"}},"🔴",-1),WS={style:{"text-align":"center"}},XS={href:"https://leetcode.cn/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},FS={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},GS=t("td",{style:{"text-align":"center"}},"1575",-1),HS=t("td",{style:{"text-align":"left"}},"统计所有可行路径",-1),TS=t("td",{style:{"text-align":"center"}},null,-1),QS={style:{"text-align":"left"}},ZS=t("code",null,"记忆化搜索",-1),$S=t("code",null,"数组",-1),tU=t("code",null,"动态规划",-1),eU=t("td",{style:{"text-align":"left"}},"🔴",-1),oU={style:{"text-align":"center"}},lU={href:"https://leetcode.cn/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},nU={href:"https://leetcode.com/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},sU=t("td",{style:{"text-align":"center"}},"1578",-1),rU=t("td",{style:{"text-align":"left"}},"使绳子变成彩色的最短时间",-1),dU=t("td",{style:{"text-align":"center"}},null,-1),_U={style:{"text-align":"left"}},aU=t("code",null,"贪心",-1),iU=t("code",null,"数组",-1),cU=t("code",null,"字符串",-1),hU=t("code",null,"1+",-1),gU=t("td",{style:{"text-align":"left"}},"🟠",-1),mU={style:{"text-align":"center"}},fU={href:"https://leetcode.cn/problems/minimum-time-to-make-rope-colorful",target:"_blank",rel:"noopener noreferrer"},uU={href:"https://leetcode.com/problems/minimum-time-to-make-rope-colorful",target:"_blank",rel:"noopener noreferrer"},yU=t("td",{style:{"text-align":"center"}},"1594",-1),pU=t("td",{style:{"text-align":"left"}},"矩阵的最大非负积",-1),xU=t("td",{style:{"text-align":"center"}},null,-1),bU={style:{"text-align":"left"}},kU=t("code",null,"数组",-1),wU=t("code",null,"动态规划",-1),vU=t("code",null,"矩阵",-1),IU=t("td",{style:{"text-align":"left"}},"🟠",-1),qU={style:{"text-align":"center"}},zU={href:"https://leetcode.cn/problems/maximum-non-negative-product-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},jU={href:"https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},CU=t("td",{style:{"text-align":"center"}},"1595",-1),OU=t("td",{style:{"text-align":"left"}},"连通两组点的最小成本",-1),LU=t("td",{style:{"text-align":"center"}},null,-1),PU={style:{"text-align":"left"}},KU=t("code",null,"位运算",-1),VU=t("code",null,"数组",-1),NU=t("code",null,"动态规划",-1),DU=t("code",null,"2+",-1),EU=t("td",{style:{"text-align":"left"}},"🔴",-1),BU={style:{"text-align":"center"}},MU={href:"https://leetcode.cn/problems/minimum-cost-to-connect-two-groups-of-points",target:"_blank",rel:"noopener noreferrer"},YU={href:"https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points",target:"_blank",rel:"noopener noreferrer"},AU=t("td",{style:{"text-align":"center"}},"1611",-1),JU=t("td",{style:{"text-align":"left"}},"使整数变为 0 的最少操作次数",-1),RU=t("td",{style:{"text-align":"center"}},null,-1),SU={style:{"text-align":"left"}},UU=t("code",null,"位运算",-1),WU=t("code",null,"记忆化搜索",-1),XU=t("code",null,"动态规划",-1),FU=t("td",{style:{"text-align":"left"}},"🔴",-1),GU={style:{"text-align":"center"}},HU={href:"https://leetcode.cn/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},TU={href:"https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},QU=t("td",{style:{"text-align":"center"}},"1617",-1),ZU=t("td",{style:{"text-align":"left"}},"统计子树中城市之间最大距离",-1),$U=t("td",{style:{"text-align":"center"}},null,-1),tW={style:{"text-align":"left"}},eW=t("code",null,"位运算",-1),oW=t("code",null,"树",-1),lW=t("code",null,"动态规划",-1),nW=t("code",null,"2+",-1),sW=t("td",{style:{"text-align":"left"}},"🔴",-1),rW={style:{"text-align":"center"}},dW={href:"https://leetcode.cn/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},_W={href:"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},aW=t("td",{style:{"text-align":"center"}},"1621",-1),iW=t("td",{style:{"text-align":"left"}},"大小为 K 的不重叠线段的数目",-1),cW=t("td",{style:{"text-align":"center"}},null,-1),hW={style:{"text-align":"left"}},gW=t("code",null,"数学",-1),mW=t("code",null,"动态规划",-1),fW=t("code",null,"组合数学",-1),uW=t("td",{style:{"text-align":"left"}},"🟠",-1),yW={style:{"text-align":"center"}},pW={href:"https://leetcode.cn/problems/number-of-sets-of-k-non-overlapping-line-segments",target:"_blank",rel:"noopener noreferrer"},xW={href:"https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments",target:"_blank",rel:"noopener noreferrer"},bW=t("td",{style:{"text-align":"center"}},"1626",-1),kW=t("td",{style:{"text-align":"left"}},"无矛盾的最佳球队",-1),wW=t("td",{style:{"text-align":"center"}},null,-1),vW={style:{"text-align":"left"}},IW=t("code",null,"数组",-1),qW=t("code",null,"动态规划",-1),zW=t("code",null,"排序",-1),jW=t("td",{style:{"text-align":"left"}},"🟠",-1),CW={style:{"text-align":"center"}},OW={href:"https://leetcode.cn/problems/best-team-with-no-conflicts",target:"_blank",rel:"noopener noreferrer"},LW={href:"https://leetcode.com/problems/best-team-with-no-conflicts",target:"_blank",rel:"noopener noreferrer"},PW=t("td",{style:{"text-align":"center"}},"1638",-1),KW=t("td",{style:{"text-align":"left"}},"统计只差一个字符的子串数目",-1),VW=t("td",{style:{"text-align":"center"}},null,-1),NW={style:{"text-align":"left"}},DW=t("code",null,"哈希表",-1),EW=t("code",null,"字符串",-1),BW=t("code",null,"动态规划",-1),MW=t("code",null,"1+",-1),YW=t("td",{style:{"text-align":"left"}},"🟠",-1),AW={style:{"text-align":"center"}},JW={href:"https://leetcode.cn/problems/count-substrings-that-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},RW={href:"https://leetcode.com/problems/count-substrings-that-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},SW=t("td",{style:{"text-align":"center"}},"1639",-1),UW=t("td",{style:{"text-align":"left"}},"通过给定词典构造目标字符串的方案数",-1),WW=t("td",{style:{"text-align":"center"}},null,-1),XW={style:{"text-align":"left"}},FW=t("code",null,"数组",-1),GW=t("code",null,"字符串",-1),HW=t("code",null,"动态规划",-1),TW=t("td",{style:{"text-align":"left"}},"🔴",-1),QW={style:{"text-align":"center"}},ZW={href:"https://leetcode.cn/problems/number-of-ways-to-form-a-target-string-given-a-dictionary",target:"_blank",rel:"noopener noreferrer"},$W={href:"https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary",target:"_blank",rel:"noopener noreferrer"},tX=t("td",{style:{"text-align":"center"}},"1641",-1),eX=t("td",{style:{"text-align":"left"}},"统计字典序元音字符串的数目",-1),oX=t("td",{style:{"text-align":"center"}},null,-1),lX={style:{"text-align":"left"}},nX=t("code",null,"数学",-1),sX=t("code",null,"动态规划",-1),rX=t("code",null,"组合数学",-1),dX=t("td",{style:{"text-align":"left"}},"🟠",-1),_X={style:{"text-align":"center"}},aX={href:"https://leetcode.cn/problems/count-sorted-vowel-strings",target:"_blank",rel:"noopener noreferrer"},iX={href:"https://leetcode.com/problems/count-sorted-vowel-strings",target:"_blank",rel:"noopener noreferrer"},cX=t("td",{style:{"text-align":"center"}},"1643",-1),hX=t("td",{style:{"text-align":"left"}},"第 K 条最小指令",-1),gX=t("td",{style:{"text-align":"center"}},null,-1),mX={style:{"text-align":"left"}},fX=t("code",null,"数组",-1),uX=t("code",null,"数学",-1),yX=t("code",null,"动态规划",-1),pX=t("code",null,"1+",-1),xX=t("td",{style:{"text-align":"left"}},"🔴",-1),bX={style:{"text-align":"center"}},kX={href:"https://leetcode.cn/problems/kth-smallest-instructions",target:"_blank",rel:"noopener noreferrer"},wX={href:"https://leetcode.com/problems/kth-smallest-instructions",target:"_blank",rel:"noopener noreferrer"},vX=t("td",{style:{"text-align":"center"}},"1653",-1),IX=t("td",{style:{"text-align":"left"}},"使字符串平衡的最少删除次数",-1),qX=t("td",{style:{"text-align":"center"}},null,-1),zX={style:{"text-align":"left"}},jX=t("code",null,"栈",-1),CX=t("code",null,"字符串",-1),OX=t("code",null,"动态规划",-1),LX=t("td",{style:{"text-align":"left"}},"🟠",-1),PX={style:{"text-align":"center"}},KX={href:"https://leetcode.cn/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},VX={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},NX=t("td",{style:{"text-align":"center"}},"1654",-1),DX=t("td",{style:{"text-align":"left"}},"到家的最少跳跃次数",-1),EX=t("td",{style:{"text-align":"center"}},null,-1),BX={style:{"text-align":"left"}},MX=t("code",null,"广度优先搜索",-1),YX=t("code",null,"数组",-1),AX=t("code",null,"动态规划",-1),JX=t("td",{style:{"text-align":"left"}},"🟠",-1),RX={style:{"text-align":"center"}},SX={href:"https://leetcode.cn/problems/minimum-jumps-to-reach-home",target:"_blank",rel:"noopener noreferrer"},UX={href:"https://leetcode.com/problems/minimum-jumps-to-reach-home",target:"_blank",rel:"noopener noreferrer"},WX=t("td",{style:{"text-align":"center"}},"1655",-1),XX=t("td",{style:{"text-align":"left"}},"分配重复整数",-1),FX=t("td",{style:{"text-align":"center"}},null,-1),GX={style:{"text-align":"left"}},HX=t("code",null,"位运算",-1),TX=t("code",null,"数组",-1),QX=t("code",null,"动态规划",-1),ZX=t("code",null,"2+",-1),$X=t("td",{style:{"text-align":"left"}},"🔴",-1),tF={style:{"text-align":"center"}},eF={href:"https://leetcode.cn/problems/distribute-repeating-integers",target:"_blank",rel:"noopener noreferrer"},oF={href:"https://leetcode.com/problems/distribute-repeating-integers",target:"_blank",rel:"noopener noreferrer"},lF=t("td",{style:{"text-align":"center"}},"1659",-1),nF=t("td",{style:{"text-align":"left"}},"最大化网格幸福感",-1),sF=t("td",{style:{"text-align":"center"}},null,-1),rF={style:{"text-align":"left"}},dF=t("code",null,"位运算",-1),_F=t("code",null,"记忆化搜索",-1),aF=t("code",null,"动态规划",-1),iF=t("code",null,"1+",-1),cF=t("td",{style:{"text-align":"left"}},"🔴",-1),hF={style:{"text-align":"center"}},gF={href:"https://leetcode.cn/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},mF={href:"https://leetcode.com/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},fF=t("td",{style:{"text-align":"center"}},"1668",-1),uF=t("td",{style:{"text-align":"left"}},"最大重复子字符串",-1),yF=t("td",{style:{"text-align":"center"}},null,-1),pF={style:{"text-align":"left"}},xF=t("code",null,"字符串",-1),bF=t("code",null,"动态规划",-1),kF=t("code",null,"字符串匹配",-1),wF=t("td",{style:{"text-align":"left"}},"🟢",-1),vF={style:{"text-align":"center"}},IF={href:"https://leetcode.cn/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},qF={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},zF=t("td",{style:{"text-align":"center"}},"1671",-1),jF=t("td",{style:{"text-align":"left"}},"得到山形数组的最少删除次数",-1),CF={style:{"text-align":"center"}},OF={style:{"text-align":"left"}},LF=t("code",null,"贪心",-1),PF=t("code",null,"数组",-1),KF=t("code",null,"二分查找",-1),VF=t("code",null,"1+",-1),NF=t("td",{style:{"text-align":"left"}},"🔴",-1),DF={style:{"text-align":"center"}},EF={href:"https://leetcode.cn/problems/minimum-number-of-removals-to-make-mountain-array",target:"_blank",rel:"noopener noreferrer"},BF={href:"https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array",target:"_blank",rel:"noopener noreferrer"},MF=t("td",{style:{"text-align":"center"}},"1681",-1),YF=t("td",{style:{"text-align":"left"}},"最小不兼容性",-1),AF=t("td",{style:{"text-align":"center"}},null,-1),JF={style:{"text-align":"left"}},RF=t("code",null,"位运算",-1),SF=t("code",null,"数组",-1),UF=t("code",null,"动态规划",-1),WF=t("code",null,"1+",-1),XF=t("td",{style:{"text-align":"left"}},"🔴",-1),FF={style:{"text-align":"center"}},GF={href:"https://leetcode.cn/problems/minimum-incompatibility",target:"_blank",rel:"noopener noreferrer"},HF={href:"https://leetcode.com/problems/minimum-incompatibility",target:"_blank",rel:"noopener noreferrer"},TF=t("td",{style:{"text-align":"center"}},"1682",-1),QF=t("td",{style:{"text-align":"left"}},"最长回文子序列 II 🔒",-1),ZF=t("td",{style:{"text-align":"center"}},null,-1),$F={style:{"text-align":"left"}},tG=t("code",null,"字符串",-1),eG=t("code",null,"动态规划",-1),oG=t("td",{style:{"text-align":"left"}},"🟠",-1),lG={style:{"text-align":"center"}},nG={href:"https://leetcode.cn/problems/longest-palindromic-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},sG={href:"https://leetcode.com/problems/longest-palindromic-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},rG=t("td",{style:{"text-align":"center"}},"1687",-1),dG=t("td",{style:{"text-align":"left"}},"从仓库到码头运输箱子",-1),_G=t("td",{style:{"text-align":"center"}},null,-1),aG={style:{"text-align":"left"}},iG=t("code",null,"线段树",-1),cG=t("code",null,"队列",-1),hG=t("code",null,"数组",-1),gG=t("code",null,"4+",-1),mG=t("td",{style:{"text-align":"left"}},"🔴",-1),fG={style:{"text-align":"center"}},uG={href:"https://leetcode.cn/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},yG={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},pG=t("td",{style:{"text-align":"center"}},"1690",-1),xG=t("td",{style:{"text-align":"left"}},"石子游戏 VII",-1),bG=t("td",{style:{"text-align":"center"}},null,-1),kG={style:{"text-align":"left"}},wG=t("code",null,"数组",-1),vG=t("code",null,"数学",-1),IG=t("code",null,"动态规划",-1),qG=t("code",null,"1+",-1),zG=t("td",{style:{"text-align":"left"}},"🟠",-1),jG={style:{"text-align":"center"}},CG={href:"https://leetcode.cn/problems/stone-game-vii",target:"_blank",rel:"noopener noreferrer"},OG={href:"https://leetcode.com/problems/stone-game-vii",target:"_blank",rel:"noopener noreferrer"},LG=t("td",{style:{"text-align":"center"}},"1691",-1),PG=t("td",{style:{"text-align":"left"}},"堆叠长方体的最大高度",-1),KG=t("td",{style:{"text-align":"center"}},null,-1),VG={style:{"text-align":"left"}},NG=t("code",null,"数组",-1),DG=t("code",null,"动态规划",-1),EG=t("code",null,"排序",-1),BG=t("td",{style:{"text-align":"left"}},"🔴",-1),MG={style:{"text-align":"center"}},YG={href:"https://leetcode.cn/problems/maximum-height-by-stacking-cuboids",target:"_blank",rel:"noopener noreferrer"},AG={href:"https://leetcode.com/problems/maximum-height-by-stacking-cuboids",target:"_blank",rel:"noopener noreferrer"},JG=t("td",{style:{"text-align":"center"}},"1692",-1),RG=t("td",{style:{"text-align":"left"}},"计算分配糖果的不同方式 🔒",-1),SG=t("td",{style:{"text-align":"center"}},null,-1),UG={style:{"text-align":"left"}},WG=t("code",null,"动态规划",-1),XG=t("td",{style:{"text-align":"left"}},"🔴",-1),FG={style:{"text-align":"center"}},GG={href:"https://leetcode.cn/problems/count-ways-to-distribute-candies",target:"_blank",rel:"noopener noreferrer"},HG={href:"https://leetcode.com/problems/count-ways-to-distribute-candies",target:"_blank",rel:"noopener noreferrer"},TG=t("td",{style:{"text-align":"center"}},"1696",-1),QG=t("td",{style:{"text-align":"left"}},"跳跃游戏 VI",-1),ZG=t("td",{style:{"text-align":"center"}},null,-1),$G={style:{"text-align":"left"}},tH=t("code",null,"队列",-1),eH=t("code",null,"数组",-1),oH=t("code",null,"动态规划",-1),lH=t("code",null,"2+",-1),nH=t("td",{style:{"text-align":"left"}},"🟠",-1),sH={style:{"text-align":"center"}},rH={href:"https://leetcode.cn/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},dH={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},_H=t("td",{style:{"text-align":"center"}},"1714",-1),aH=t("td",{style:{"text-align":"left"}},"数组中特殊等间距元素的和 🔒",-1),iH=t("td",{style:{"text-align":"center"}},null,-1),cH={style:{"text-align":"left"}},hH=t("code",null,"数组",-1),gH=t("code",null,"动态规划",-1),mH=t("td",{style:{"text-align":"left"}},"🔴",-1),fH={style:{"text-align":"center"}},uH={href:"https://leetcode.cn/problems/sum-of-special-evenly-spaced-elements-in-array",target:"_blank",rel:"noopener noreferrer"},yH={href:"https://leetcode.com/problems/sum-of-special-evenly-spaced-elements-in-array",target:"_blank",rel:"noopener noreferrer"},pH=t("td",{style:{"text-align":"center"}},"1723",-1),xH=t("td",{style:{"text-align":"left"}},"完成所有工作的最短时间",-1),bH=t("td",{style:{"text-align":"center"}},null,-1),kH={style:{"text-align":"left"}},wH=t("code",null,"位运算",-1),vH=t("code",null,"数组",-1),IH=t("code",null,"动态规划",-1),qH=t("code",null,"2+",-1),zH=t("td",{style:{"text-align":"left"}},"🔴",-1),jH={style:{"text-align":"center"}},CH={href:"https://leetcode.cn/problems/find-minimum-time-to-finish-all-jobs",target:"_blank",rel:"noopener noreferrer"},OH={href:"https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs",target:"_blank",rel:"noopener noreferrer"},LH=t("td",{style:{"text-align":"center"}},"1728",-1),PH=t("td",{style:{"text-align":"left"}},"猫和老鼠 II",-1),KH=t("td",{style:{"text-align":"center"}},null,-1),VH={style:{"text-align":"left"}},NH=t("code",null,"图",-1),DH=t("code",null,"拓扑排序",-1),EH=t("code",null,"记忆化搜索",-1),BH=t("code",null,"5+",-1),MH=t("td",{style:{"text-align":"left"}},"🔴",-1),YH={style:{"text-align":"center"}},AH={href:"https://leetcode.cn/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},JH={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},RH=t("td",{style:{"text-align":"center"}},"1735",-1),SH=t("td",{style:{"text-align":"left"}},"生成乘积数组的方案数",-1),UH=t("td",{style:{"text-align":"center"}},null,-1),WH={style:{"text-align":"left"}},XH=t("code",null,"数组",-1),FH=t("code",null,"数学",-1),GH=t("code",null,"动态规划",-1),HH=t("code",null,"2+",-1),TH=t("td",{style:{"text-align":"left"}},"🔴",-1),QH={style:{"text-align":"center"}},ZH={href:"https://leetcode.cn/problems/count-ways-to-make-array-with-product",target:"_blank",rel:"noopener noreferrer"},$H={href:"https://leetcode.com/problems/count-ways-to-make-array-with-product",target:"_blank",rel:"noopener noreferrer"},tT=t("td",{style:{"text-align":"center"}},"1745",-1),eT=t("td",{style:{"text-align":"left"}},"分割回文串 IV",-1),oT=t("td",{style:{"text-align":"center"}},null,-1),lT={style:{"text-align":"left"}},nT=t("code",null,"字符串",-1),sT=t("code",null,"动态规划",-1),rT=t("td",{style:{"text-align":"left"}},"🔴",-1),dT={style:{"text-align":"center"}},_T={href:"https://leetcode.cn/problems/palindrome-partitioning-iv",target:"_blank",rel:"noopener noreferrer"},aT={href:"https://leetcode.com/problems/palindrome-partitioning-iv",target:"_blank",rel:"noopener noreferrer"},iT=t("td",{style:{"text-align":"center"}},"1746",-1),cT=t("td",{style:{"text-align":"left"}},"经过一次操作后的最大子数组和 🔒",-1),hT=t("td",{style:{"text-align":"center"}},null,-1),gT={style:{"text-align":"left"}},mT=t("code",null,"数组",-1),fT=t("code",null,"动态规划",-1),uT=t("td",{style:{"text-align":"left"}},"🟠",-1),yT={style:{"text-align":"center"}},pT={href:"https://leetcode.cn/problems/maximum-subarray-sum-after-one-operation",target:"_blank",rel:"noopener noreferrer"},xT={href:"https://leetcode.com/problems/maximum-subarray-sum-after-one-operation",target:"_blank",rel:"noopener noreferrer"},bT=t("td",{style:{"text-align":"center"}},"1749",-1),kT=t("td",{style:{"text-align":"left"}},"任意子数组和的绝对值的最大值",-1),wT=t("td",{style:{"text-align":"center"}},null,-1),vT={style:{"text-align":"left"}},IT=t("code",null,"数组",-1),qT=t("code",null,"动态规划",-1),zT=t("td",{style:{"text-align":"left"}},"🟠",-1),jT={style:{"text-align":"center"}},CT={href:"https://leetcode.cn/problems/maximum-absolute-sum-of-any-subarray",target:"_blank",rel:"noopener noreferrer"},OT={href:"https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray",target:"_blank",rel:"noopener noreferrer"},LT=t("td",{style:{"text-align":"center"}},"1751",-1),PT=t("td",{style:{"text-align":"left"}},"最多可以参加的会议数目 II",-1),KT=t("td",{style:{"text-align":"center"}},null,-1),VT={style:{"text-align":"left"}},NT=t("code",null,"数组",-1),DT=t("code",null,"二分查找",-1),ET=t("code",null,"动态规划",-1),BT=t("code",null,"1+",-1),MT=t("td",{style:{"text-align":"left"}},"🔴",-1),YT={style:{"text-align":"center"}},AT={href:"https://leetcode.cn/problems/maximum-number-of-events-that-can-be-attended-ii",target:"_blank",rel:"noopener noreferrer"},JT={href:"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii",target:"_blank",rel:"noopener noreferrer"},RT=t("td",{style:{"text-align":"center"}},"1755",-1),ST=t("td",{style:{"text-align":"left"}},"最接近目标值的子序列和",-1),UT=t("td",{style:{"text-align":"center"}},null,-1),WT={style:{"text-align":"left"}},XT=t("code",null,"位运算",-1),FT=t("code",null,"数组",-1),GT=t("code",null,"双指针",-1),HT=t("code",null,"2+",-1),TT=t("td",{style:{"text-align":"left"}},"🔴",-1),QT={style:{"text-align":"center"}},ZT={href:"https://leetcode.cn/problems/closest-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},$T={href:"https://leetcode.com/problems/closest-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},tQ=t("td",{style:{"text-align":"center"}},"1770",-1),eQ=t("td",{style:{"text-align":"left"}},"执行乘法运算的最大分数",-1),oQ=t("td",{style:{"text-align":"center"}},null,-1),lQ={style:{"text-align":"left"}},nQ=t("code",null,"数组",-1),sQ=t("code",null,"动态规划",-1),rQ=t("td",{style:{"text-align":"left"}},"🔴",-1),dQ={style:{"text-align":"center"}},_Q={href:"https://leetcode.cn/problems/maximum-score-from-performing-multiplication-operations",target:"_blank",rel:"noopener noreferrer"},aQ={href:"https://leetcode.com/problems/maximum-score-from-performing-multiplication-operations",target:"_blank",rel:"noopener noreferrer"},iQ=t("td",{style:{"text-align":"center"}},"1771",-1),cQ=t("td",{style:{"text-align":"left"}},"由子序列构造的最长回文串的长度",-1),hQ=t("td",{style:{"text-align":"center"}},null,-1),gQ={style:{"text-align":"left"}},mQ=t("code",null,"字符串",-1),fQ=t("code",null,"动态规划",-1),uQ=t("td",{style:{"text-align":"left"}},"🔴",-1),yQ={style:{"text-align":"center"}},pQ={href:"https://leetcode.cn/problems/maximize-palindrome-length-from-subsequences",target:"_blank",rel:"noopener noreferrer"},xQ={href:"https://leetcode.com/problems/maximize-palindrome-length-from-subsequences",target:"_blank",rel:"noopener noreferrer"},bQ=t("td",{style:{"text-align":"center"}},"1774",-1),kQ=t("td",{style:{"text-align":"left"}},"最接近目标价格的甜点成本",-1),wQ=t("td",{style:{"text-align":"center"}},null,-1),vQ={style:{"text-align":"left"}},IQ=t("code",null,"数组",-1),qQ=t("code",null,"动态规划",-1),zQ=t("code",null,"回溯",-1),jQ=t("td",{style:{"text-align":"left"}},"🟠",-1),CQ={style:{"text-align":"center"}},OQ={href:"https://leetcode.cn/problems/closest-dessert-cost",target:"_blank",rel:"noopener noreferrer"},LQ={href:"https://leetcode.com/problems/closest-dessert-cost",target:"_blank",rel:"noopener noreferrer"},PQ=t("td",{style:{"text-align":"center"}},"1786",-1),KQ=t("td",{style:{"text-align":"left"}},"从第一个节点出发到最后一个节点的受限路径数",-1),VQ=t("td",{style:{"text-align":"center"}},null,-1),NQ={style:{"text-align":"left"}},DQ=t("code",null,"图",-1),EQ=t("code",null,"拓扑排序",-1),BQ=t("code",null,"动态规划",-1),MQ=t("code",null,"2+",-1),YQ=t("td",{style:{"text-align":"left"}},"🟠",-1),AQ={style:{"text-align":"center"}},JQ={href:"https://leetcode.cn/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},RQ={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},SQ=t("td",{style:{"text-align":"center"}},"1787",-1),UQ=t("td",{style:{"text-align":"left"}},"使所有区间的异或结果为零",-1),WQ=t("td",{style:{"text-align":"center"}},null,-1),XQ={style:{"text-align":"left"}},FQ=t("code",null,"位运算",-1),GQ=t("code",null,"数组",-1),HQ=t("code",null,"动态规划",-1),TQ=t("td",{style:{"text-align":"left"}},"🔴",-1),QQ={style:{"text-align":"center"}},ZQ={href:"https://leetcode.cn/problems/make-the-xor-of-all-segments-equal-to-zero",target:"_blank",rel:"noopener noreferrer"},$Q={href:"https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero",target:"_blank",rel:"noopener noreferrer"},tZ=t("td",{style:{"text-align":"center"}},"1799",-1),eZ=t("td",{style:{"text-align":"left"}},"N 次操作后的最大分数和",-1),oZ=t("td",{style:{"text-align":"center"}},null,-1),lZ={style:{"text-align":"left"}},nZ=t("code",null,"位运算",-1),sZ=t("code",null,"数组",-1),rZ=t("code",null,"数学",-1),dZ=t("code",null,"4+",-1),_Z=t("td",{style:{"text-align":"left"}},"🔴",-1),aZ={style:{"text-align":"center"}},iZ={href:"https://leetcode.cn/problems/maximize-score-after-n-operations",target:"_blank",rel:"noopener noreferrer"},cZ={href:"https://leetcode.com/problems/maximize-score-after-n-operations",target:"_blank",rel:"noopener noreferrer"},hZ=t("td",{style:{"text-align":"center"}},"1815",-1),gZ=t("td",{style:{"text-align":"left"}},"得到新鲜甜甜圈的最多组数",-1),mZ=t("td",{style:{"text-align":"center"}},null,-1),fZ={style:{"text-align":"left"}},uZ=t("code",null,"位运算",-1),yZ=t("code",null,"记忆化搜索",-1),pZ=t("code",null,"数组",-1),xZ=t("code",null,"2+",-1),bZ=t("td",{style:{"text-align":"left"}},"🔴",-1),kZ={style:{"text-align":"center"}},wZ={href:"https://leetcode.cn/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},vZ={href:"https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},IZ=t("td",{style:{"text-align":"center"}},"1824",-1),qZ=t("td",{style:{"text-align":"left"}},"最少侧跳次数",-1),zZ=t("td",{style:{"text-align":"center"}},null,-1),jZ={style:{"text-align":"left"}},CZ=t("code",null,"贪心",-1),OZ=t("code",null,"数组",-1),LZ=t("code",null,"动态规划",-1),PZ=t("td",{style:{"text-align":"left"}},"🟠",-1),KZ={style:{"text-align":"center"}},VZ={href:"https://leetcode.cn/problems/minimum-sideway-jumps",target:"_blank",rel:"noopener noreferrer"},NZ={href:"https://leetcode.com/problems/minimum-sideway-jumps",target:"_blank",rel:"noopener noreferrer"},DZ=t("td",{style:{"text-align":"center"}},"1857",-1),EZ=t("td",{style:{"text-align":"left"}},"有向图中最大颜色值",-1),BZ=t("td",{style:{"text-align":"center"}},null,-1),MZ={style:{"text-align":"left"}},YZ=t("code",null,"图",-1),AZ=t("code",null,"拓扑排序",-1),JZ=t("code",null,"记忆化搜索",-1),RZ=t("code",null,"3+",-1),SZ=t("td",{style:{"text-align":"left"}},"🔴",-1),UZ={style:{"text-align":"center"}},WZ={href:"https://leetcode.cn/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},XZ={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},FZ=t("td",{style:{"text-align":"center"}},"1866",-1),GZ=t("td",{style:{"text-align":"left"}},"恰有 K 根木棍可以看到的排列数目",-1),HZ=t("td",{style:{"text-align":"center"}},null,-1),TZ={style:{"text-align":"left"}},QZ=t("code",null,"数学",-1),ZZ=t("code",null,"动态规划",-1),$Z=t("code",null,"组合数学",-1),t$=t("td",{style:{"text-align":"left"}},"🔴",-1),e$={style:{"text-align":"center"}},o$={href:"https://leetcode.cn/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible",target:"_blank",rel:"noopener noreferrer"},l$={href:"https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible",target:"_blank",rel:"noopener noreferrer"},n$=t("td",{style:{"text-align":"center"}},"1871",-1),s$=t("td",{style:{"text-align":"left"}},"跳跃游戏 VII",-1),r$=t("td",{style:{"text-align":"center"}},null,-1),d$={style:{"text-align":"left"}},_$=t("code",null,"字符串",-1),a$=t("code",null,"动态规划",-1),i$=t("code",null,"前缀和",-1),c$=t("code",null,"1+",-1),h$=t("td",{style:{"text-align":"left"}},"🟠",-1),g$={style:{"text-align":"center"}},m$={href:"https://leetcode.cn/problems/jump-game-vii",target:"_blank",rel:"noopener noreferrer"},f$={href:"https://leetcode.com/problems/jump-game-vii",target:"_blank",rel:"noopener noreferrer"},u$=t("td",{style:{"text-align":"center"}},"1872",-1),y$=t("td",{style:{"text-align":"left"}},"石子游戏 VIII",-1),p$=t("td",{style:{"text-align":"center"}},null,-1),x$={style:{"text-align":"left"}},b$=t("code",null,"数组",-1),k$=t("code",null,"数学",-1),w$=t("code",null,"动态规划",-1),v$=t("code",null,"2+",-1),I$=t("td",{style:{"text-align":"left"}},"🔴",-1),q$={style:{"text-align":"center"}},z$={href:"https://leetcode.cn/problems/stone-game-viii",target:"_blank",rel:"noopener noreferrer"},j$={href:"https://leetcode.com/problems/stone-game-viii",target:"_blank",rel:"noopener noreferrer"},C$=t("td",{style:{"text-align":"center"}},"1879",-1),O$=t("td",{style:{"text-align":"left"}},"两个数组最小的异或值之和",-1),L$=t("td",{style:{"text-align":"center"}},null,-1),P$={style:{"text-align":"left"}},K$=t("code",null,"位运算",-1),V$=t("code",null,"数组",-1),N$=t("code",null,"动态规划",-1),D$=t("code",null,"1+",-1),E$=t("td",{style:{"text-align":"left"}},"🔴",-1),B$={style:{"text-align":"center"}},M$={href:"https://leetcode.cn/problems/minimum-xor-sum-of-two-arrays",target:"_blank",rel:"noopener noreferrer"},Y$={href:"https://leetcode.com/problems/minimum-xor-sum-of-two-arrays",target:"_blank",rel:"noopener noreferrer"},A$=t("td",{style:{"text-align":"center"}},"1883",-1),J$=t("td",{style:{"text-align":"left"}},"准时抵达会议现场的最小跳过休息次数",-1),R$=t("td",{style:{"text-align":"center"}},null,-1),S$={style:{"text-align":"left"}},U$=t("code",null,"数组",-1),W$=t("code",null,"动态规划",-1),X$=t("td",{style:{"text-align":"left"}},"🔴",-1),F$={style:{"text-align":"center"}},G$={href:"https://leetcode.cn/problems/minimum-skips-to-arrive-at-meeting-on-time",target:"_blank",rel:"noopener noreferrer"},H$={href:"https://leetcode.com/problems/minimum-skips-to-arrive-at-meeting-on-time",target:"_blank",rel:"noopener noreferrer"},T$=t("td",{style:{"text-align":"center"}},"1884",-1),Q$=t("td",{style:{"text-align":"left"}},"鸡蛋掉落-两枚鸡蛋",-1),Z$=t("td",{style:{"text-align":"center"}},null,-1),$$={style:{"text-align":"left"}},ttt=t("code",null,"数学",-1),ett=t("code",null,"动态规划",-1),ott=t("td",{style:{"text-align":"left"}},"🟠",-1),ltt={style:{"text-align":"center"}},ntt={href:"https://leetcode.cn/problems/egg-drop-with-2-eggs-and-n-floors",target:"_blank",rel:"noopener noreferrer"},stt={href:"https://leetcode.com/problems/egg-drop-with-2-eggs-and-n-floors",target:"_blank",rel:"noopener noreferrer"},rtt=t("td",{style:{"text-align":"center"}},"1888",-1),dtt=t("td",{style:{"text-align":"left"}},"使二进制字符串字符交替的最少反转次数",-1),_tt=t("td",{style:{"text-align":"center"}},null,-1),att={style:{"text-align":"left"}},itt=t("code",null,"贪心",-1),ctt=t("code",null,"字符串",-1),htt=t("code",null,"动态规划",-1),gtt=t("code",null,"1+",-1),mtt=t("td",{style:{"text-align":"left"}},"🟠",-1),ftt={style:{"text-align":"center"}},utt={href:"https://leetcode.cn/problems/minimum-number-of-flips-to-make-the-binary-string-alternating",target:"_blank",rel:"noopener noreferrer"},ytt={href:"https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating",target:"_blank",rel:"noopener noreferrer"},ptt=t("td",{style:{"text-align":"center"}},"1896",-1),xtt=t("td",{style:{"text-align":"left"}},"反转表达式值的最少操作次数",-1),btt=t("td",{style:{"text-align":"center"}},null,-1),ktt={style:{"text-align":"left"}},wtt=t("code",null,"栈",-1),vtt=t("code",null,"数学",-1),Itt=t("code",null,"字符串",-1),qtt=t("code",null,"1+",-1),ztt=t("td",{style:{"text-align":"left"}},"🔴",-1),jtt={style:{"text-align":"center"}},Ctt={href:"https://leetcode.cn/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},Ott={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},Ltt=t("td",{style:{"text-align":"center"}},"1900",-1),Ptt=t("td",{style:{"text-align":"left"}},"最佳运动员的比拼回合",-1),Ktt=t("td",{style:{"text-align":"center"}},null,-1),Vtt={style:{"text-align":"left"}},Ntt=t("code",null,"记忆化搜索",-1),Dtt=t("code",null,"动态规划",-1),Ett=t("td",{style:{"text-align":"left"}},"🔴",-1),Btt={style:{"text-align":"center"}},Mtt={href:"https://leetcode.cn/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},Ytt={href:"https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},Att=t("td",{style:{"text-align":"center"}},"1908",-1),Jtt=t("td",{style:{"text-align":"left"}},"Nim 游戏 II 🔒",-1),Rtt=t("td",{style:{"text-align":"center"}},null,-1),Stt={style:{"text-align":"left"}},Utt=t("code",null,"位运算",-1),Wtt=t("code",null,"脑筋急转弯",-1),Xtt=t("code",null,"数组",-1),Ftt=t("code",null,"3+",-1),Gtt=t("td",{style:{"text-align":"left"}},"🟠",-1),Htt={style:{"text-align":"center"}},Ttt={href:"https://leetcode.cn/problems/game-of-nim",target:"_blank",rel:"noopener noreferrer"},Qtt={href:"https://leetcode.com/problems/game-of-nim",target:"_blank",rel:"noopener noreferrer"},Ztt=t("td",{style:{"text-align":"center"}},"1911",-1),$tt=t("td",{style:{"text-align":"left"}},"最大子序列交替和",-1),tet=t("td",{style:{"text-align":"center"}},null,-1),eet={style:{"text-align":"left"}},oet=t("code",null,"数组",-1),net=t("code",null,"动态规划",-1),set=t("td",{style:{"text-align":"left"}},"🟠",-1),ret={style:{"text-align":"center"}},det={href:"https://leetcode.cn/problems/maximum-alternating-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},_et={href:"https://leetcode.com/problems/maximum-alternating-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},aet=t("td",{style:{"text-align":"center"}},"1916",-1),iet=t("td",{style:{"text-align":"left"}},"统计为蚁群构筑房间的不同顺序",-1),cet=t("td",{style:{"text-align":"center"}},null,-1),het={style:{"text-align":"left"}},get=t("code",null,"树",-1),met=t("code",null,"图",-1),fet=t("code",null,"拓扑排序",-1),uet=t("code",null,"3+",-1),yet=t("td",{style:{"text-align":"left"}},"🔴",-1),pet={style:{"text-align":"center"}},xet={href:"https://leetcode.cn/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},bet={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},ket=t("td",{style:{"text-align":"center"}},"1928",-1),wet=t("td",{style:{"text-align":"left"}},"规定时间内到达终点的最小花费",-1),vet=t("td",{style:{"text-align":"center"}},null,-1),Iet={style:{"text-align":"left"}},qet=t("code",null,"图",-1),zet=t("code",null,"数组",-1),jet=t("code",null,"动态规划",-1),Cet=t("td",{style:{"text-align":"left"}},"🔴",-1),Oet={style:{"text-align":"center"}},Let={href:"https://leetcode.cn/problems/minimum-cost-to-reach-destination-in-time",target:"_blank",rel:"noopener noreferrer"},Pet={href:"https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time",target:"_blank",rel:"noopener noreferrer"},Ket=t("td",{style:{"text-align":"center"}},"1931",-1),Vet=t("td",{style:{"text-align":"left"}},"用三种不同颜色为网格涂色",-1),Net=t("td",{style:{"text-align":"center"}},null,-1),Det={style:{"text-align":"left"}},Eet=t("code",null,"动态规划",-1),Bet=t("td",{style:{"text-align":"left"}},"🔴",-1),Met={style:{"text-align":"center"}},Yet={href:"https://leetcode.cn/problems/painting-a-grid-with-three-different-colors",target:"_blank",rel:"noopener noreferrer"},Aet={href:"https://leetcode.com/problems/painting-a-grid-with-three-different-colors",target:"_blank",rel:"noopener noreferrer"},Jet=t("td",{style:{"text-align":"center"}},"1937",-1),Ret=t("td",{style:{"text-align":"left"}},"扣分后的最大得分",-1),Set=t("td",{style:{"text-align":"center"}},null,-1),Uet={style:{"text-align":"left"}},Wet=t("code",null,"数组",-1),Xet=t("code",null,"动态规划",-1),Fet=t("code",null,"矩阵",-1),Get=t("td",{style:{"text-align":"left"}},"🟠",-1),Het={style:{"text-align":"center"}},Tet={href:"https://leetcode.cn/problems/maximum-number-of-points-with-cost",target:"_blank",rel:"noopener noreferrer"},Qet={href:"https://leetcode.com/problems/maximum-number-of-points-with-cost",target:"_blank",rel:"noopener noreferrer"},Zet=t("td",{style:{"text-align":"center"}},"1947",-1),$et=t("td",{style:{"text-align":"left"}},"最大兼容性评分和",-1),tot=t("td",{style:{"text-align":"center"}},null,-1),eot={style:{"text-align":"left"}},oot=t("code",null,"位运算",-1),lot=t("code",null,"数组",-1),not=t("code",null,"动态规划",-1),sot=t("code",null,"2+",-1),rot=t("td",{style:{"text-align":"left"}},"🟠",-1),dot={style:{"text-align":"center"}},_ot={href:"https://leetcode.cn/problems/maximum-compatibility-score-sum",target:"_blank",rel:"noopener noreferrer"},aot={href:"https://leetcode.com/problems/maximum-compatibility-score-sum",target:"_blank",rel:"noopener noreferrer"},iot=t("td",{style:{"text-align":"center"}},"1955",-1),cot=t("td",{style:{"text-align":"left"}},"统计特殊子序列的数目",-1),hot=t("td",{style:{"text-align":"center"}},null,-1),got={style:{"text-align":"left"}},mot=t("code",null,"数组",-1),fot=t("code",null,"动态规划",-1),uot=t("td",{style:{"text-align":"left"}},"🔴",-1),yot={style:{"text-align":"center"}},pot={href:"https://leetcode.cn/problems/count-number-of-special-subsequences",target:"_blank",rel:"noopener noreferrer"},xot={href:"https://leetcode.com/problems/count-number-of-special-subsequences",target:"_blank",rel:"noopener noreferrer"},bot=t("td",{style:{"text-align":"center"}},"1959",-1),kot=t("td",{style:{"text-align":"left"}},"K 次调整数组大小浪费的最小总空间",-1),wot=t("td",{style:{"text-align":"center"}},null,-1),vot={style:{"text-align":"left"}},Iot=t("code",null,"数组",-1),qot=t("code",null,"动态规划",-1),zot=t("td",{style:{"text-align":"left"}},"🟠",-1),jot={style:{"text-align":"center"}},Cot={href:"https://leetcode.cn/problems/minimum-total-space-wasted-with-k-resizing-operations",target:"_blank",rel:"noopener noreferrer"},Oot={href:"https://leetcode.com/problems/minimum-total-space-wasted-with-k-resizing-operations",target:"_blank",rel:"noopener noreferrer"},Lot=t("td",{style:{"text-align":"center"}},"1976",-1),Pot=t("td",{style:{"text-align":"left"}},"到达目的地的方案数",-1),Kot=t("td",{style:{"text-align":"center"}},null,-1),Vot={style:{"text-align":"left"}},Not=t("code",null,"图",-1),Dot=t("code",null,"拓扑排序",-1),Eot=t("code",null,"动态规划",-1),Bot=t("code",null,"1+",-1),Mot=t("td",{style:{"text-align":"left"}},"🟠",-1),Yot={style:{"text-align":"center"}},Aot={href:"https://leetcode.cn/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},Jot={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},Rot=t("td",{style:{"text-align":"center"}},"1977",-1),Sot=t("td",{style:{"text-align":"left"}},"划分数字的方案数",-1),Uot=t("td",{style:{"text-align":"center"}},null,-1),Wot={style:{"text-align":"left"}},Xot=t("code",null,"字符串",-1),Fot=t("code",null,"动态规划",-1),Got=t("code",null,"后缀数组",-1),Hot=t("td",{style:{"text-align":"left"}},"🔴",-1),Tot={style:{"text-align":"center"}},Qot={href:"https://leetcode.cn/problems/number-of-ways-to-separate-numbers",target:"_blank",rel:"noopener noreferrer"},Zot={href:"https://leetcode.com/problems/number-of-ways-to-separate-numbers",target:"_blank",rel:"noopener noreferrer"},$ot=t("td",{style:{"text-align":"center"}},"1981",-1),tlt=t("td",{style:{"text-align":"left"}},"最小化目标值与所选元素的差",-1),elt=t("td",{style:{"text-align":"center"}},null,-1),olt={style:{"text-align":"left"}},llt=t("code",null,"数组",-1),nlt=t("code",null,"动态规划",-1),slt=t("code",null,"矩阵",-1),rlt=t("td",{style:{"text-align":"left"}},"🟠",-1),dlt={style:{"text-align":"center"}},_lt={href:"https://leetcode.cn/problems/minimize-the-difference-between-target-and-chosen-elements",target:"_blank",rel:"noopener noreferrer"},alt={href:"https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements",target:"_blank",rel:"noopener noreferrer"},ilt=t("td",{style:{"text-align":"center"}},"1986",-1),clt=t("td",{style:{"text-align":"left"}},"完成任务的最少工作时间段",-1),hlt=t("td",{style:{"text-align":"center"}},null,-1),glt={style:{"text-align":"left"}},mlt=t("code",null,"位运算",-1),flt=t("code",null,"数组",-1),ult=t("code",null,"动态规划",-1),ylt=t("code",null,"2+",-1),plt=t("td",{style:{"text-align":"left"}},"🟠",-1),xlt={style:{"text-align":"center"}},blt={href:"https://leetcode.cn/problems/minimum-number-of-work-sessions-to-finish-the-tasks",target:"_blank",rel:"noopener noreferrer"},klt={href:"https://leetcode.com/problems/minimum-number-of-work-sessions-to-finish-the-tasks",target:"_blank",rel:"noopener noreferrer"},wlt=t("td",{style:{"text-align":"center"}},"1987",-1),vlt=t("td",{style:{"text-align":"left"}},"不同的好子序列数目",-1),Ilt=t("td",{style:{"text-align":"center"}},null,-1),qlt={style:{"text-align":"left"}},zlt=t("code",null,"字符串",-1),jlt=t("code",null,"动态规划",-1),Clt=t("td",{style:{"text-align":"left"}},"🔴",-1),Olt={style:{"text-align":"center"}},Llt={href:"https://leetcode.cn/problems/number-of-unique-good-subsequences",target:"_blank",rel:"noopener noreferrer"},Plt={href:"https://leetcode.com/problems/number-of-unique-good-subsequences",target:"_blank",rel:"noopener noreferrer"},Klt=t("td",{style:{"text-align":"center"}},"1994",-1),Vlt=t("td",{style:{"text-align":"left"}},"好子集的数目",-1),Nlt=t("td",{style:{"text-align":"center"}},null,-1),Dlt={style:{"text-align":"left"}},Elt=t("code",null,"位运算",-1),Blt=t("code",null,"数组",-1),Mlt=t("code",null,"数学",-1),Ylt=t("code",null,"2+",-1),Alt=t("td",{style:{"text-align":"left"}},"🔴",-1),Jlt={style:{"text-align":"center"}},Rlt={href:"https://leetcode.cn/problems/the-number-of-good-subsets",target:"_blank",rel:"noopener noreferrer"},Slt={href:"https://leetcode.com/problems/the-number-of-good-subsets",target:"_blank",rel:"noopener noreferrer"},Ult=t("td",{style:{"text-align":"center"}},"1997",-1),Wlt=t("td",{style:{"text-align":"left"}},"访问完所有房间的第一天",-1),Xlt=t("td",{style:{"text-align":"center"}},null,-1),Flt={style:{"text-align":"left"}},Glt=t("code",null,"数组",-1),Hlt=t("code",null,"动态规划",-1),Tlt=t("td",{style:{"text-align":"left"}},"🟠",-1),Qlt={style:{"text-align":"center"}},Zlt={href:"https://leetcode.cn/problems/first-day-where-you-have-been-in-all-the-rooms",target:"_blank",rel:"noopener noreferrer"},$lt={href:"https://leetcode.com/problems/first-day-where-you-have-been-in-all-the-rooms",target:"_blank",rel:"noopener noreferrer"},tnt=t("td",{style:{"text-align":"center"}},"2002",-1),ent=t("td",{style:{"text-align":"left"}},"两个回文子序列长度的最大乘积",-1),ont=t("td",{style:{"text-align":"center"}},null,-1),lnt={style:{"text-align":"left"}},nnt=t("code",null,"位运算",-1),snt=t("code",null,"字符串",-1),rnt=t("code",null,"动态规划",-1),dnt=t("code",null,"2+",-1),_nt=t("td",{style:{"text-align":"left"}},"🟠",-1),ant={style:{"text-align":"center"}},int={href:"https://leetcode.cn/problems/maximum-product-of-the-length-of-two-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},cnt={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},hnt=t("td",{style:{"text-align":"center"}},"2003",-1),gnt=t("td",{style:{"text-align":"left"}},"每棵子树内缺失的最小基因值",-1),mnt=t("td",{style:{"text-align":"center"}},null,-1),fnt={style:{"text-align":"left"}},unt=t("code",null,"树",-1),ynt=t("code",null,"深度优先搜索",-1),pnt=t("code",null,"并查集",-1),xnt=t("code",null,"1+",-1),bnt=t("td",{style:{"text-align":"left"}},"🔴",-1),knt={style:{"text-align":"center"}},wnt={href:"https://leetcode.cn/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},vnt={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},Int=t("td",{style:{"text-align":"center"}},"2005",-1),qnt=t("td",{style:{"text-align":"left"}},"斐波那契树的移除子树游戏 🔒",-1),znt=t("td",{style:{"text-align":"center"}},null,-1),jnt={style:{"text-align":"left"}},Cnt=t("code",null,"树",-1),Ont=t("code",null,"数学",-1),Lnt=t("code",null,"动态规划",-1),Pnt=t("code",null,"2+",-1),Knt=t("td",{style:{"text-align":"left"}},"🔴",-1),Vnt={style:{"text-align":"center"}},Nnt={href:"https://leetcode.cn/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},Dnt={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},Ent=t("td",{style:{"text-align":"center"}},"2008",-1),Bnt=t("td",{style:{"text-align":"left"}},"出租车的最大盈利",-1),Mnt=t("td",{style:{"text-align":"center"}},null,-1),Ynt={style:{"text-align":"left"}},Ant=t("code",null,"数组",-1),Jnt=t("code",null,"哈希表",-1),Rnt=t("code",null,"二分查找",-1),Snt=t("code",null,"2+",-1),Unt=t("td",{style:{"text-align":"left"}},"🟠",-1),Wnt={style:{"text-align":"center"}},Xnt={href:"https://leetcode.cn/problems/maximum-earnings-from-taxi",target:"_blank",rel:"noopener noreferrer"},Fnt={href:"https://leetcode.com/problems/maximum-earnings-from-taxi",target:"_blank",rel:"noopener noreferrer"},Gnt=t("td",{style:{"text-align":"center"}},"2019",-1),Hnt=t("td",{style:{"text-align":"left"}},"解出数学表达式的学生分数",-1),Tnt=t("td",{style:{"text-align":"center"}},null,-1),Qnt={style:{"text-align":"left"}},Znt=t("code",null,"栈",-1),$nt=t("code",null,"记忆化搜索",-1),tst=t("code",null,"数组",-1),est=t("code",null,"3+",-1),ost=t("td",{style:{"text-align":"left"}},"🔴",-1),lst={style:{"text-align":"center"}},nst={href:"https://leetcode.cn/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},sst={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},rst=t("td",{style:{"text-align":"center"}},"2035",-1),dst=t("td",{style:{"text-align":"left"}},"将数组分成两个数组并最小化数组和的差",-1),_st=t("td",{style:{"text-align":"center"}},null,-1),ast={style:{"text-align":"left"}},ist=t("code",null,"位运算",-1),cst=t("code",null,"数组",-1),hst=t("code",null,"双指针",-1),gst=t("code",null,"4+",-1),mst=t("td",{style:{"text-align":"left"}},"🔴",-1),fst={style:{"text-align":"center"}},ust={href:"https://leetcode.cn/problems/partition-array-into-two-arrays-to-minimize-sum-difference",target:"_blank",rel:"noopener noreferrer"},yst={href:"https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference",target:"_blank",rel:"noopener noreferrer"},pst=t("td",{style:{"text-align":"center"}},"2036",-1),xst=t("td",{style:{"text-align":"left"}},"最大交替子数组和 🔒",-1),bst=t("td",{style:{"text-align":"center"}},null,-1),kst={style:{"text-align":"left"}},wst=t("code",null,"数组",-1),vst=t("code",null,"动态规划",-1),Ist=t("td",{style:{"text-align":"left"}},"🟠",-1),qst={style:{"text-align":"center"}},zst={href:"https://leetcode.cn/problems/maximum-alternating-subarray-sum",target:"_blank",rel:"noopener noreferrer"},jst={href:"https://leetcode.com/problems/maximum-alternating-subarray-sum",target:"_blank",rel:"noopener noreferrer"},Cst=t("td",{style:{"text-align":"center"}},"2050",-1),Ost=t("td",{style:{"text-align":"left"}},"并行课程 III",-1),Lst=t("td",{style:{"text-align":"center"}},null,-1),Pst={style:{"text-align":"left"}},Kst=t("code",null,"图",-1),Vst=t("code",null,"拓扑排序",-1),Nst=t("code",null,"数组",-1),Dst=t("code",null,"1+",-1),Est=t("td",{style:{"text-align":"left"}},"🔴",-1),Bst={style:{"text-align":"center"}},Mst={href:"https://leetcode.cn/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},Yst={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},Ast=t("td",{style:{"text-align":"center"}},"2052",-1),Jst=t("td",{style:{"text-align":"left"}},"将句子分隔成行的最低成本 🔒",-1),Rst=t("td",{style:{"text-align":"center"}},null,-1),Sst={style:{"text-align":"left"}},Ust=t("code",null,"数组",-1),Wst=t("code",null,"动态规划",-1),Xst=t("td",{style:{"text-align":"left"}},"🟠",-1),Fst={style:{"text-align":"center"}},Gst={href:"https://leetcode.cn/problems/minimum-cost-to-separate-sentence-into-rows",target:"_blank",rel:"noopener noreferrer"},Hst={href:"https://leetcode.com/problems/minimum-cost-to-separate-sentence-into-rows",target:"_blank",rel:"noopener noreferrer"},Tst=t("td",{style:{"text-align":"center"}},"2054",-1),Qst=t("td",{style:{"text-align":"left"}},"两个最好的不重叠活动",-1),Zst=t("td",{style:{"text-align":"center"}},null,-1),$st={style:{"text-align":"left"}},trt=t("code",null,"数组",-1),ert=t("code",null,"二分查找",-1),ort=t("code",null,"动态规划",-1),lrt=t("code",null,"2+",-1),nrt=t("td",{style:{"text-align":"left"}},"🟠",-1),srt={style:{"text-align":"center"}},rrt={href:"https://leetcode.cn/problems/two-best-non-overlapping-events",target:"_blank",rel:"noopener noreferrer"},drt={href:"https://leetcode.com/problems/two-best-non-overlapping-events",target:"_blank",rel:"noopener noreferrer"},_rt=t("td",{style:{"text-align":"center"}},"2060",-1),art=t("td",{style:{"text-align":"left"}},"同源字符串检测",-1),irt=t("td",{style:{"text-align":"center"}},null,-1),crt={style:{"text-align":"left"}},hrt=t("code",null,"字符串",-1),grt=t("code",null,"动态规划",-1),mrt=t("td",{style:{"text-align":"left"}},"🔴",-1),frt={style:{"text-align":"center"}},urt={href:"https://leetcode.cn/problems/check-if-an-original-string-exists-given-two-encoded-strings",target:"_blank",rel:"noopener noreferrer"},yrt={href:"https://leetcode.com/problems/check-if-an-original-string-exists-given-two-encoded-strings",target:"_blank",rel:"noopener noreferrer"},prt=t("td",{style:{"text-align":"center"}},"2063",-1),xrt=t("td",{style:{"text-align":"left"}},"所有子字符串中的元音",-1),brt=t("td",{style:{"text-align":"center"}},null,-1),krt={style:{"text-align":"left"}},wrt=t("code",null,"数学",-1),vrt=t("code",null,"字符串",-1),Irt=t("code",null,"动态规划",-1),qrt=t("code",null,"1+",-1),zrt=t("td",{style:{"text-align":"left"}},"🟠",-1),jrt={style:{"text-align":"center"}},Crt={href:"https://leetcode.cn/problems/vowels-of-all-substrings",target:"_blank",rel:"noopener noreferrer"},Ort={href:"https://leetcode.com/problems/vowels-of-all-substrings",target:"_blank",rel:"noopener noreferrer"},Lrt=t("td",{style:{"text-align":"center"}},"2086",-1),Prt=t("td",{style:{"text-align":"left"}},"喂食仓鼠的最小食物桶数",-1),Krt=t("td",{style:{"text-align":"center"}},null,-1),Vrt={style:{"text-align":"left"}},Nrt=t("code",null,"贪心",-1),Drt=t("code",null,"字符串",-1),Ert=t("code",null,"动态规划",-1),Brt=t("td",{style:{"text-align":"left"}},"🟠",-1),Mrt={style:{"text-align":"center"}},Yrt={href:"https://leetcode.cn/problems/minimum-number-of-food-buckets-to-feed-the-hamsters",target:"_blank",rel:"noopener noreferrer"},Art={href:"https://leetcode.com/problems/minimum-number-of-food-buckets-to-feed-the-hamsters",target:"_blank",rel:"noopener noreferrer"},Jrt=t("td",{style:{"text-align":"center"}},"2088",-1),Rrt=t("td",{style:{"text-align":"left"}},"统计农场中肥沃金字塔的数目",-1),Srt=t("td",{style:{"text-align":"center"}},null,-1),Urt={style:{"text-align":"left"}},Wrt=t("code",null,"数组",-1),Xrt=t("code",null,"动态规划",-1),Frt=t("code",null,"矩阵",-1),Grt=t("td",{style:{"text-align":"left"}},"🔴",-1),Hrt={style:{"text-align":"center"}},Trt={href:"https://leetcode.cn/problems/count-fertile-pyramids-in-a-land",target:"_blank",rel:"noopener noreferrer"},Qrt={href:"https://leetcode.com/problems/count-fertile-pyramids-in-a-land",target:"_blank",rel:"noopener noreferrer"},Zrt=t("td",{style:{"text-align":"center"}},"2100",-1),$rt=t("td",{style:{"text-align":"left"}},"适合野炊的日子",-1),tdt=t("td",{style:{"text-align":"center"}},null,-1),edt={style:{"text-align":"left"}},odt=t("code",null,"数组",-1),ldt=t("code",null,"动态规划",-1),ndt=t("code",null,"前缀和",-1),sdt=t("td",{style:{"text-align":"left"}},"🟠",-1),rdt={style:{"text-align":"center"}},ddt={href:"https://leetcode.cn/problems/find-good-days-to-rob-the-bank",target:"_blank",rel:"noopener noreferrer"},_dt={href:"https://leetcode.com/problems/find-good-days-to-rob-the-bank",target:"_blank",rel:"noopener noreferrer"},adt=t("td",{style:{"text-align":"center"}},"2110",-1),idt=t("td",{style:{"text-align":"left"}},"股票平滑下跌阶段的数目",-1),cdt=t("td",{style:{"text-align":"center"}},null,-1),hdt={style:{"text-align":"left"}},gdt=t("code",null,"数组",-1),mdt=t("code",null,"数学",-1),fdt=t("code",null,"动态规划",-1),udt=t("td",{style:{"text-align":"left"}},"🟠",-1),ydt={style:{"text-align":"center"}},pdt={href:"https://leetcode.cn/problems/number-of-smooth-descent-periods-of-a-stock",target:"_blank",rel:"noopener noreferrer"},xdt={href:"https://leetcode.com/problems/number-of-smooth-descent-periods-of-a-stock",target:"_blank",rel:"noopener noreferrer"},bdt=t("td",{style:{"text-align":"center"}},"2140",-1),kdt=t("td",{style:{"text-align":"left"}},"解决智力问题",-1),wdt=t("td",{style:{"text-align":"center"}},null,-1),vdt={style:{"text-align":"left"}},Idt=t("code",null,"数组",-1),qdt=t("code",null,"动态规划",-1),zdt=t("td",{style:{"text-align":"left"}},"🟠",-1),jdt={style:{"text-align":"center"}},Cdt={href:"https://leetcode.cn/problems/solving-questions-with-brainpower",target:"_blank",rel:"noopener noreferrer"},Odt={href:"https://leetcode.com/problems/solving-questions-with-brainpower",target:"_blank",rel:"noopener noreferrer"},Ldt=t("td",{style:{"text-align":"center"}},"2143",-1),Pdt=t("td",{style:{"text-align":"left"}},"在两个数组的区间中选取数字 🔒",-1),Kdt=t("td",{style:{"text-align":"center"}},null,-1),Vdt={style:{"text-align":"left"}},Ndt=t("code",null,"数组",-1),Ddt=t("code",null,"动态规划",-1),Edt=t("td",{style:{"text-align":"left"}},"🔴",-1),Bdt={style:{"text-align":"center"}},Mdt={href:"https://leetcode.cn/problems/choose-numbers-from-two-arrays-in-range",target:"_blank",rel:"noopener noreferrer"},Ydt={href:"https://leetcode.com/problems/choose-numbers-from-two-arrays-in-range",target:"_blank",rel:"noopener noreferrer"},Adt=t("td",{style:{"text-align":"center"}},"2147",-1),Jdt=t("td",{style:{"text-align":"left"}},"分隔长廊的方案数",-1),Rdt=t("td",{style:{"text-align":"center"}},null,-1),Sdt={style:{"text-align":"left"}},Udt=t("code",null,"数学",-1),Wdt=t("code",null,"字符串",-1),Xdt=t("code",null,"动态规划",-1),Fdt=t("td",{style:{"text-align":"left"}},"🔴",-1),Gdt={style:{"text-align":"center"}},Hdt={href:"https://leetcode.cn/problems/number-of-ways-to-divide-a-long-corridor",target:"_blank",rel:"noopener noreferrer"},Tdt={href:"https://leetcode.com/problems/number-of-ways-to-divide-a-long-corridor",target:"_blank",rel:"noopener noreferrer"},Qdt=t("td",{style:{"text-align":"center"}},"2152",-1),Zdt=t("td",{style:{"text-align":"left"}},"穿过所有点的所需最少直线数量 🔒",-1),$dt=t("td",{style:{"text-align":"center"}},null,-1),t_t={style:{"text-align":"left"}},e_t=t("code",null,"位运算",-1),o_t=t("code",null,"几何",-1),l_t=t("code",null,"数组",-1),n_t=t("code",null,"5+",-1),s_t=t("td",{style:{"text-align":"left"}},"🟠",-1),r_t={style:{"text-align":"center"}},d_t={href:"https://leetcode.cn/problems/minimum-number-of-lines-to-cover-points",target:"_blank",rel:"noopener noreferrer"},__t={href:"https://leetcode.com/problems/minimum-number-of-lines-to-cover-points",target:"_blank",rel:"noopener noreferrer"},a_t=t("td",{style:{"text-align":"center"}},"2163",-1),i_t=t("td",{style:{"text-align":"left"}},"删除元素后和的最小差值",-1),c_t=t("td",{style:{"text-align":"center"}},null,-1),h_t={style:{"text-align":"left"}},g_t=t("code",null,"数组",-1),m_t=t("code",null,"动态规划",-1),f_t=t("code",null,"堆（优先队列）",-1),u_t=t("td",{style:{"text-align":"left"}},"🔴",-1),y_t={style:{"text-align":"center"}},p_t={href:"https://leetcode.cn/problems/minimum-difference-in-sums-after-removal-of-elements",target:"_blank",rel:"noopener noreferrer"},x_t={href:"https://leetcode.com/problems/minimum-difference-in-sums-after-removal-of-elements",target:"_blank",rel:"noopener noreferrer"},b_t=t("td",{style:{"text-align":"center"}},"2167",-1),k_t=t("td",{style:{"text-align":"left"}},"移除所有载有违禁货物车厢所需的最少时间",-1),w_t=t("td",{style:{"text-align":"center"}},null,-1),v_t={style:{"text-align":"left"}},I_t=t("code",null,"字符串",-1),q_t=t("code",null,"动态规划",-1),z_t=t("td",{style:{"text-align":"left"}},"🔴",-1),j_t={style:{"text-align":"center"}},C_t={href:"https://leetcode.cn/problems/minimum-time-to-remove-all-cars-containing-illegal-goods",target:"_blank",rel:"noopener noreferrer"},O_t={href:"https://leetcode.com/problems/minimum-time-to-remove-all-cars-containing-illegal-goods",target:"_blank",rel:"noopener noreferrer"},L_t=t("td",{style:{"text-align":"center"}},"2172",-1),P_t=t("td",{style:{"text-align":"left"}},"数组的最大与和",-1),K_t=t("td",{style:{"text-align":"center"}},null,-1),V_t={style:{"text-align":"left"}},N_t=t("code",null,"位运算",-1),D_t=t("code",null,"数组",-1),E_t=t("code",null,"动态规划",-1),B_t=t("code",null,"1+",-1),M_t=t("td",{style:{"text-align":"left"}},"🔴",-1),Y_t={style:{"text-align":"center"}},A_t={href:"https://leetcode.cn/problems/maximum-and-sum-of-array",target:"_blank",rel:"noopener noreferrer"},J_t={href:"https://leetcode.com/problems/maximum-and-sum-of-array",target:"_blank",rel:"noopener noreferrer"},R_t=t("td",{style:{"text-align":"center"}},"2184",-1),S_t=t("td",{style:{"text-align":"left"}},"建造坚实的砖墙的方法数 🔒",-1),U_t=t("td",{style:{"text-align":"center"}},null,-1),W_t={style:{"text-align":"left"}},X_t=t("code",null,"位运算",-1),F_t=t("code",null,"数组",-1),G_t=t("code",null,"动态规划",-1),H_t=t("code",null,"1+",-1),T_t=t("td",{style:{"text-align":"left"}},"🟠",-1),Q_t={style:{"text-align":"center"}},Z_t={href:"https://leetcode.cn/problems/number-of-ways-to-build-sturdy-brick-wall",target:"_blank",rel:"noopener noreferrer"},$_t={href:"https://leetcode.com/problems/number-of-ways-to-build-sturdy-brick-wall",target:"_blank",rel:"noopener noreferrer"},tat=t("td",{style:{"text-align":"center"}},"2188",-1),eat=t("td",{style:{"text-align":"left"}},"完成比赛的最少时间",-1),oat=t("td",{style:{"text-align":"center"}},null,-1),lat={style:{"text-align":"left"}},nat=t("code",null,"数组",-1),sat=t("code",null,"动态规划",-1),rat=t("td",{style:{"text-align":"left"}},"🔴",-1),dat={style:{"text-align":"center"}},_at={href:"https://leetcode.cn/problems/minimum-time-to-finish-the-race",target:"_blank",rel:"noopener noreferrer"},aat={href:"https://leetcode.com/problems/minimum-time-to-finish-the-race",target:"_blank",rel:"noopener noreferrer"},iat=t("td",{style:{"text-align":"center"}},"2189",-1),cat=t("td",{style:{"text-align":"left"}},"建造纸牌屋的方法数 🔒",-1),hat=t("td",{style:{"text-align":"center"}},null,-1),gat={style:{"text-align":"left"}},mat=t("code",null,"数学",-1),fat=t("code",null,"动态规划",-1),uat=t("td",{style:{"text-align":"left"}},"🟠",-1),yat={style:{"text-align":"center"}},pat={href:"https://leetcode.cn/problems/number-of-ways-to-build-house-of-cards",target:"_blank",rel:"noopener noreferrer"},xat={href:"https://leetcode.com/problems/number-of-ways-to-build-house-of-cards",target:"_blank",rel:"noopener noreferrer"},bat=t("td",{style:{"text-align":"center"}},"2209",-1),kat=t("td",{style:{"text-align":"left"}},"用地毯覆盖后的最少白色砖块",-1),wat=t("td",{style:{"text-align":"center"}},null,-1),vat={style:{"text-align":"left"}},Iat=t("code",null,"字符串",-1),qat=t("code",null,"动态规划",-1),zat=t("code",null,"前缀和",-1),jat=t("td",{style:{"text-align":"left"}},"🔴",-1),Cat={style:{"text-align":"center"}},Oat={href:"https://leetcode.cn/problems/minimum-white-tiles-after-covering-with-carpets",target:"_blank",rel:"noopener noreferrer"},Lat={href:"https://leetcode.com/problems/minimum-white-tiles-after-covering-with-carpets",target:"_blank",rel:"noopener noreferrer"},Pat=t("td",{style:{"text-align":"center"}},"2218",-1),Kat=t("td",{style:{"text-align":"left"}},"从栈中取出 K 个硬币的最大面值和",-1),Vat=t("td",{style:{"text-align":"center"}},null,-1),Nat={style:{"text-align":"left"}},Dat=t("code",null,"数组",-1),Eat=t("code",null,"动态规划",-1),Bat=t("code",null,"前缀和",-1),Mat=t("td",{style:{"text-align":"left"}},"🔴",-1),Yat={style:{"text-align":"center"}},Aat={href:"https://leetcode.cn/problems/maximum-value-of-k-coins-from-piles",target:"_blank",rel:"noopener noreferrer"},Jat={href:"https://leetcode.com/problems/maximum-value-of-k-coins-from-piles",target:"_blank",rel:"noopener noreferrer"},Rat=t("td",{style:{"text-align":"center"}},"2222",-1),Sat=t("td",{style:{"text-align":"left"}},"选择建筑的方案数",-1),Uat=t("td",{style:{"text-align":"center"}},null,-1),Wat={style:{"text-align":"left"}},Xat=t("code",null,"字符串",-1),Fat=t("code",null,"动态规划",-1),Gat=t("code",null,"前缀和",-1),Hat=t("td",{style:{"text-align":"left"}},"🟠",-1),Tat={style:{"text-align":"center"}},Qat={href:"https://leetcode.cn/problems/number-of-ways-to-select-buildings",target:"_blank",rel:"noopener noreferrer"},Zat={href:"https://leetcode.com/problems/number-of-ways-to-select-buildings",target:"_blank",rel:"noopener noreferrer"},$at=t("td",{style:{"text-align":"center"}},"2247",-1),tit=t("td",{style:{"text-align":"left"}},"K 条高速公路的最大旅行费用 🔒",-1),eit=t("td",{style:{"text-align":"center"}},null,-1),oit={style:{"text-align":"left"}},lit=t("code",null,"位运算",-1),nit=t("code",null,"图",-1),sit=t("code",null,"动态规划",-1),rit=t("code",null,"1+",-1),dit=t("td",{style:{"text-align":"left"}},"🔴",-1),_it={style:{"text-align":"center"}},ait={href:"https://leetcode.cn/problems/maximum-cost-of-trip-with-k-highways",target:"_blank",rel:"noopener noreferrer"},iit={href:"https://leetcode.com/problems/maximum-cost-of-trip-with-k-highways",target:"_blank",rel:"noopener noreferrer"},cit=t("td",{style:{"text-align":"center"}},"2262",-1),hit=t("td",{style:{"text-align":"left"}},"字符串的总引力",-1),git={style:{"text-align":"center"}},mit={style:{"text-align":"left"}},fit=t("code",null,"哈希表",-1),uit=t("code",null,"字符串",-1),yit=t("code",null,"动态规划",-1),pit=t("td",{style:{"text-align":"left"}},"🔴",-1),xit={style:{"text-align":"center"}},bit={href:"https://leetcode.cn/problems/total-appeal-of-a-string",target:"_blank",rel:"noopener noreferrer"},kit={href:"https://leetcode.com/problems/total-appeal-of-a-string",target:"_blank",rel:"noopener noreferrer"},wit=t("td",{style:{"text-align":"center"}},"2263",-1),vit=t("td",{style:{"text-align":"left"}},"数组变为有序的最小操作次数 🔒",-1),Iit=t("td",{style:{"text-align":"center"}},null,-1),qit={style:{"text-align":"left"}},zit=t("code",null,"贪心",-1),jit=t("code",null,"动态规划",-1),Cit=t("td",{style:{"text-align":"left"}},"🔴",-1),Oit={style:{"text-align":"center"}},Lit={href:"https://leetcode.cn/problems/make-array-non-decreasing-or-non-increasing",target:"_blank",rel:"noopener noreferrer"},Pit={href:"https://leetcode.com/problems/make-array-non-decreasing-or-non-increasing",target:"_blank",rel:"noopener noreferrer"},Kit=t("td",{style:{"text-align":"center"}},"2266",-1),Vit=t("td",{style:{"text-align":"left"}},"统计打字方案数",-1),Nit=t("td",{style:{"text-align":"center"}},null,-1),Dit={style:{"text-align":"left"}},Eit=t("code",null,"哈希表",-1),Bit=t("code",null,"数学",-1),Mit=t("code",null,"字符串",-1),Yit=t("code",null,"1+",-1),Ait=t("td",{style:{"text-align":"left"}},"🟠",-1),Jit={style:{"text-align":"center"}},Rit={href:"https://leetcode.cn/problems/count-number-of-texts",target:"_blank",rel:"noopener noreferrer"},Sit={href:"https://leetcode.com/problems/count-number-of-texts",target:"_blank",rel:"noopener noreferrer"},Uit=t("td",{style:{"text-align":"center"}},"2267",-1),Wit=t("td",{style:{"text-align":"left"}},"检查是否有合法括号字符串路径",-1),Xit=t("td",{style:{"text-align":"center"}},null,-1),Fit={style:{"text-align":"left"}},Git=t("code",null,"数组",-1),Hit=t("code",null,"动态规划",-1),Tit=t("code",null,"矩阵",-1),Qit=t("td",{style:{"text-align":"left"}},"🔴",-1),Zit={style:{"text-align":"center"}},$it={href:"https://leetcode.cn/problems/check-if-there-is-a-valid-parentheses-string-path",target:"_blank",rel:"noopener noreferrer"},tct={href:"https://leetcode.com/problems/check-if-there-is-a-valid-parentheses-string-path",target:"_blank",rel:"noopener noreferrer"},ect=t("td",{style:{"text-align":"center"}},"2272",-1),oct=t("td",{style:{"text-align":"left"}},"最大波动的子字符串",-1),lct=t("td",{style:{"text-align":"center"}},null,-1),nct={style:{"text-align":"left"}},sct=t("code",null,"数组",-1),rct=t("code",null,"动态规划",-1),dct=t("td",{style:{"text-align":"left"}},"🔴",-1),_ct={style:{"text-align":"center"}},act={href:"https://leetcode.cn/problems/substring-with-largest-variance",target:"_blank",rel:"noopener noreferrer"},ict={href:"https://leetcode.com/problems/substring-with-largest-variance",target:"_blank",rel:"noopener noreferrer"},cct=t("td",{style:{"text-align":"center"}},"2291",-1),hct=t("td",{style:{"text-align":"left"}},"最大股票收益 🔒",-1),gct=t("td",{style:{"text-align":"center"}},null,-1),mct={style:{"text-align":"left"}},fct=t("code",null,"数组",-1),uct=t("code",null,"动态规划",-1),yct=t("td",{style:{"text-align":"left"}},"🟠",-1),pct={style:{"text-align":"center"}},xct={href:"https://leetcode.cn/problems/maximum-profit-from-trading-stocks",target:"_blank",rel:"noopener noreferrer"},bct={href:"https://leetcode.com/problems/maximum-profit-from-trading-stocks",target:"_blank",rel:"noopener noreferrer"},kct=t("td",{style:{"text-align":"center"}},"2297",-1),wct=t("td",{style:{"text-align":"left"}},"跳跃游戏 VIII 🔒",-1),vct=t("td",{style:{"text-align":"center"}},null,-1),Ict={style:{"text-align":"left"}},qct=t("code",null,"栈",-1),zct=t("code",null,"图",-1),jct=t("code",null,"数组",-1),Cct=t("code",null,"3+",-1),Oct=t("td",{style:{"text-align":"left"}},"🟠",-1),Lct={style:{"text-align":"center"}},Pct={href:"https://leetcode.cn/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Kct={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Vct=t("td",{style:{"text-align":"center"}},"2304",-1),Nct=t("td",{style:{"text-align":"left"}},"网格中的最小路径代价",-1),Dct=t("td",{style:{"text-align":"center"}},null,-1),Ect={style:{"text-align":"left"}},Bct=t("code",null,"数组",-1),Mct=t("code",null,"动态规划",-1),Yct=t("code",null,"矩阵",-1),Act=t("td",{style:{"text-align":"left"}},"🟠",-1),Jct={style:{"text-align":"center"}},Rct={href:"https://leetcode.cn/problems/minimum-path-cost-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Sct={href:"https://leetcode.com/problems/minimum-path-cost-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Uct=t("td",{style:{"text-align":"center"}},"2305",-1),Wct=t("td",{style:{"text-align":"left"}},"公平分发饼干",-1),Xct=t("td",{style:{"text-align":"center"}},null,-1),Fct={style:{"text-align":"left"}},Gct=t("code",null,"位运算",-1),Hct=t("code",null,"数组",-1),Tct=t("code",null,"动态规划",-1),Qct=t("code",null,"2+",-1),Zct=t("td",{style:{"text-align":"left"}},"🟠",-1),$ct={style:{"text-align":"center"}},tht={href:"https://leetcode.cn/problems/fair-distribution-of-cookies",target:"_blank",rel:"noopener noreferrer"},eht={href:"https://leetcode.com/problems/fair-distribution-of-cookies",target:"_blank",rel:"noopener noreferrer"},oht=t("td",{style:{"text-align":"center"}},"2310",-1),lht=t("td",{style:{"text-align":"left"}},"个位数字为 K 的整数之和",-1),nht=t("td",{style:{"text-align":"center"}},null,-1),sht={style:{"text-align":"left"}},rht=t("code",null,"贪心",-1),dht=t("code",null,"数学",-1),_ht=t("code",null,"动态规划",-1),aht=t("code",null,"1+",-1),iht=t("td",{style:{"text-align":"left"}},"🟠",-1),cht={style:{"text-align":"center"}},hht={href:"https://leetcode.cn/problems/sum-of-numbers-with-units-digit-k",target:"_blank",rel:"noopener noreferrer"},ght={href:"https://leetcode.com/problems/sum-of-numbers-with-units-digit-k",target:"_blank",rel:"noopener noreferrer"},mht=t("td",{style:{"text-align":"center"}},"2311",-1),fht=t("td",{style:{"text-align":"left"}},"小于等于 K 的最长二进制子序列",-1),uht=t("td",{style:{"text-align":"center"}},null,-1),yht={style:{"text-align":"left"}},pht=t("code",null,"贪心",-1),xht=t("code",null,"记忆化搜索",-1),bht=t("code",null,"字符串",-1),kht=t("code",null,"1+",-1),wht=t("td",{style:{"text-align":"left"}},"🟠",-1),vht={style:{"text-align":"center"}},Iht={href:"https://leetcode.cn/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},qht={href:"https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},zht=t("td",{style:{"text-align":"center"}},"2312",-1),jht=t("td",{style:{"text-align":"left"}},"卖木头块",-1),Cht=t("td",{style:{"text-align":"center"}},null,-1),Oht={style:{"text-align":"left"}},Lht=t("code",null,"记忆化搜索",-1),Pht=t("code",null,"数组",-1),Kht=t("code",null,"动态规划",-1),Vht=t("td",{style:{"text-align":"left"}},"🔴",-1),Nht={style:{"text-align":"center"}},Dht={href:"https://leetcode.cn/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},Eht={href:"https://leetcode.com/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},Bht=t("td",{style:{"text-align":"center"}},"2313",-1),Mht=t("td",{style:{"text-align":"left"}},"二叉树中得到结果所需的最少翻转次数 🔒",-1),Yht=t("td",{style:{"text-align":"center"}},null,-1),Aht={style:{"text-align":"left"}},Jht=t("code",null,"树",-1),Rht=t("code",null,"深度优先搜索",-1),Sht=t("code",null,"动态规划",-1),Uht=t("code",null,"1+",-1),Wht=t("td",{style:{"text-align":"left"}},"🔴",-1),Xht={style:{"text-align":"center"}},Fht={href:"https://leetcode.cn/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},Ght={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},Hht=t("td",{style:{"text-align":"center"}},"2318",-1),Tht=t("td",{style:{"text-align":"left"}},"不同骰子序列的数目",-1),Qht=t("td",{style:{"text-align":"center"}},null,-1),Zht={style:{"text-align":"left"}},$ht=t("code",null,"记忆化搜索",-1),t1t=t("code",null,"动态规划",-1),e1t=t("td",{style:{"text-align":"left"}},"🔴",-1),o1t={style:{"text-align":"center"}},l1t={href:"https://leetcode.cn/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},n1t={href:"https://leetcode.com/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},s1t=t("td",{style:{"text-align":"center"}},"2320",-1),r1t=t("td",{style:{"text-align":"left"}},"统计放置房子的方式数",-1),d1t=t("td",{style:{"text-align":"center"}},null,-1),_1t={style:{"text-align":"left"}},a1t=t("code",null,"动态规划",-1),i1t=t("td",{style:{"text-align":"left"}},"🟠",-1),c1t={style:{"text-align":"center"}},h1t={href:"https://leetcode.cn/problems/count-number-of-ways-to-place-houses",target:"_blank",rel:"noopener noreferrer"},g1t={href:"https://leetcode.com/problems/count-number-of-ways-to-place-houses",target:"_blank",rel:"noopener noreferrer"},m1t=t("td",{style:{"text-align":"center"}},"2321",-1),f1t=t("td",{style:{"text-align":"left"}},"拼接数组的最大分数",-1),u1t=t("td",{style:{"text-align":"center"}},null,-1),y1t={style:{"text-align":"left"}},p1t=t("code",null,"数组",-1),x1t=t("code",null,"动态规划",-1),b1t=t("td",{style:{"text-align":"left"}},"🔴",-1),k1t={style:{"text-align":"center"}},w1t={href:"https://leetcode.cn/problems/maximum-score-of-spliced-array",target:"_blank",rel:"noopener noreferrer"},v1t={href:"https://leetcode.com/problems/maximum-score-of-spliced-array",target:"_blank",rel:"noopener noreferrer"},I1t=t("td",{style:{"text-align":"center"}},"2327",-1),q1t=t("td",{style:{"text-align":"left"}},"知道秘密的人数",-1),z1t=t("td",{style:{"text-align":"center"}},null,-1),j1t={style:{"text-align":"left"}},C1t=t("code",null,"队列",-1),O1t=t("code",null,"动态规划",-1),L1t=t("code",null,"模拟",-1),P1t=t("td",{style:{"text-align":"left"}},"🟠",-1),K1t={style:{"text-align":"center"}},V1t={href:"https://leetcode.cn/problems/number-of-people-aware-of-a-secret",target:"_blank",rel:"noopener noreferrer"},N1t={href:"https://leetcode.com/problems/number-of-people-aware-of-a-secret",target:"_blank",rel:"noopener noreferrer"},D1t=t("td",{style:{"text-align":"center"}},"2328",-1),E1t=t("td",{style:{"text-align":"left"}},"网格图中递增路径的数目",-1),B1t=t("td",{style:{"text-align":"center"}},null,-1),M1t={style:{"text-align":"left"}},Y1t=t("code",null,"深度优先搜索",-1),A1t=t("code",null,"广度优先搜索",-1),J1t=t("code",null,"图",-1),R1t=t("code",null,"5+",-1),S1t=t("td",{style:{"text-align":"left"}},"🔴",-1),U1t={style:{"text-align":"center"}},W1t={href:"https://leetcode.cn/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},X1t={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},F1t=t("td",{style:{"text-align":"center"}},"2338",-1),G1t=t("td",{style:{"text-align":"left"}},"统计理想数组的数目",-1),H1t=t("td",{style:{"text-align":"center"}},null,-1),T1t={style:{"text-align":"left"}},Q1t=t("code",null,"数学",-1),Z1t=t("code",null,"动态规划",-1),$1t=t("code",null,"组合数学",-1),tgt=t("code",null,"1+",-1),egt=t("td",{style:{"text-align":"left"}},"🔴",-1),ogt={style:{"text-align":"center"}},lgt={href:"https://leetcode.cn/problems/count-the-number-of-ideal-arrays",target:"_blank",rel:"noopener noreferrer"},ngt={href:"https://leetcode.com/problems/count-the-number-of-ideal-arrays",target:"_blank",rel:"noopener noreferrer"},sgt=t("td",{style:{"text-align":"center"}},"2355",-1),rgt=t("td",{style:{"text-align":"left"}},"你能拿走的最大图书数量 🔒",-1),dgt=t("td",{style:{"text-align":"center"}},null,-1),_gt={style:{"text-align":"left"}},agt=t("code",null,"栈",-1),igt=t("code",null,"数组",-1),cgt=t("code",null,"动态规划",-1),hgt=t("code",null,"1+",-1),ggt=t("td",{style:{"text-align":"left"}},"🔴",-1),mgt={style:{"text-align":"center"}},fgt={href:"https://leetcode.cn/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},ugt={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},ygt=t("td",{style:{"text-align":"center"}},"2361",-1),pgt=t("td",{style:{"text-align":"left"}},"乘坐火车路线的最少费用 🔒",-1),xgt=t("td",{style:{"text-align":"center"}},null,-1),bgt={style:{"text-align":"left"}},kgt=t("code",null,"数组",-1),wgt=t("code",null,"动态规划",-1),vgt=t("td",{style:{"text-align":"left"}},"🔴",-1),Igt={style:{"text-align":"center"}},qgt={href:"https://leetcode.cn/problems/minimum-costs-using-the-train-line",target:"_blank",rel:"noopener noreferrer"},zgt={href:"https://leetcode.com/problems/minimum-costs-using-the-train-line",target:"_blank",rel:"noopener noreferrer"},jgt=t("td",{style:{"text-align":"center"}},"2369",-1),Cgt=t("td",{style:{"text-align":"left"}},"检查数组是否存在有效划分",-1),Ogt=t("td",{style:{"text-align":"center"}},null,-1),Lgt={style:{"text-align":"left"}},Pgt=t("code",null,"数组",-1),Kgt=t("code",null,"动态规划",-1),Vgt=t("td",{style:{"text-align":"left"}},"🟠",-1),Ngt={style:{"text-align":"center"}},Dgt={href:"https://leetcode.cn/problems/check-if-there-is-a-valid-partition-for-the-array",target:"_blank",rel:"noopener noreferrer"},Egt={href:"https://leetcode.com/problems/check-if-there-is-a-valid-partition-for-the-array",target:"_blank",rel:"noopener noreferrer"},Bgt=t("td",{style:{"text-align":"center"}},"2370",-1),Mgt=t("td",{style:{"text-align":"left"}},"最长理想子序列",-1),Ygt=t("td",{style:{"text-align":"center"}},null,-1),Agt={style:{"text-align":"left"}},Jgt=t("code",null,"哈希表",-1),Rgt=t("code",null,"字符串",-1),Sgt=t("code",null,"动态规划",-1),Ugt=t("td",{style:{"text-align":"left"}},"🟠",-1),Wgt={style:{"text-align":"center"}},Xgt={href:"https://leetcode.cn/problems/longest-ideal-subsequence",target:"_blank",rel:"noopener noreferrer"},Fgt={href:"https://leetcode.com/problems/longest-ideal-subsequence",target:"_blank",rel:"noopener noreferrer"},Ggt=t("td",{style:{"text-align":"center"}},"2376",-1),Hgt=t("td",{style:{"text-align":"left"}},"统计特殊整数",-1),Tgt=t("td",{style:{"text-align":"center"}},null,-1),Qgt={style:{"text-align":"left"}},Zgt=t("code",null,"数学",-1),$gt=t("code",null,"动态规划",-1),tmt=t("td",{style:{"text-align":"left"}},"🔴",-1),emt={style:{"text-align":"center"}},omt={href:"https://leetcode.cn/problems/count-special-integers",target:"_blank",rel:"noopener noreferrer"},lmt={href:"https://leetcode.com/problems/count-special-integers",target:"_blank",rel:"noopener noreferrer"},nmt=t("td",{style:{"text-align":"center"}},"2378",-1),smt=t("td",{style:{"text-align":"left"}},"选择边来最大化树的得分 🔒",-1),rmt=t("td",{style:{"text-align":"center"}},null,-1),dmt={style:{"text-align":"left"}},_mt=t("code",null,"树",-1),amt=t("code",null,"深度优先搜索",-1),imt=t("code",null,"动态规划",-1),cmt=t("td",{style:{"text-align":"left"}},"🟠",-1),hmt={style:{"text-align":"center"}},gmt={href:"https://leetcode.cn/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},mmt={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},fmt=t("td",{style:{"text-align":"center"}},"2380",-1),umt=t("td",{style:{"text-align":"left"}},"二进制字符串重新安排顺序需要的时间",-1),ymt=t("td",{style:{"text-align":"center"}},null,-1),pmt={style:{"text-align":"left"}},xmt=t("code",null,"字符串",-1),bmt=t("code",null,"动态规划",-1),kmt=t("code",null,"模拟",-1),wmt=t("td",{style:{"text-align":"left"}},"🟠",-1),vmt={style:{"text-align":"center"}},Imt={href:"https://leetcode.cn/problems/time-needed-to-rearrange-a-binary-string",target:"_blank",rel:"noopener noreferrer"},qmt={href:"https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string",target:"_blank",rel:"noopener noreferrer"},zmt=t("td",{style:{"text-align":"center"}},"2393",-1),jmt=t("td",{style:{"text-align":"left"}},"严格递增的子数组个数 🔒",-1),Cmt=t("td",{style:{"text-align":"center"}},null,-1),Omt={style:{"text-align":"left"}},Lmt=t("code",null,"数组",-1),Pmt=t("code",null,"数学",-1),Kmt=t("code",null,"动态规划",-1),Vmt=t("td",{style:{"text-align":"left"}},"🟠",-1),Nmt={style:{"text-align":"center"}},Dmt={href:"https://leetcode.cn/problems/count-strictly-increasing-subarrays",target:"_blank",rel:"noopener noreferrer"},Emt={href:"https://leetcode.com/problems/count-strictly-increasing-subarrays",target:"_blank",rel:"noopener noreferrer"},Bmt=t("td",{style:{"text-align":"center"}},"2400",-1),Mmt=t("td",{style:{"text-align":"left"}},"恰好移动 k 步到达某一位置的方法数目",-1),Ymt=t("td",{style:{"text-align":"center"}},null,-1),Amt={style:{"text-align":"left"}},Jmt=t("code",null,"数学",-1),Rmt=t("code",null,"动态规划",-1),Smt=t("code",null,"组合数学",-1),Umt=t("td",{style:{"text-align":"left"}},"🟠",-1),Wmt={style:{"text-align":"center"}},Xmt={href:"https://leetcode.cn/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},Fmt={href:"https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},Gmt=t("td",{style:{"text-align":"center"}},"2403",-1),Hmt=t("td",{style:{"text-align":"left"}},"杀死所有怪物的最短时间 🔒",-1),Tmt=t("td",{style:{"text-align":"center"}},null,-1),Qmt={style:{"text-align":"left"}},Zmt=t("code",null,"位运算",-1),$mt=t("code",null,"数组",-1),tft=t("code",null,"动态规划",-1),eft=t("code",null,"1+",-1),oft=t("td",{style:{"text-align":"left"}},"🔴",-1),lft={style:{"text-align":"center"}},nft={href:"https://leetcode.cn/problems/minimum-time-to-kill-all-monsters",target:"_blank",rel:"noopener noreferrer"},sft={href:"https://leetcode.com/problems/minimum-time-to-kill-all-monsters",target:"_blank",rel:"noopener noreferrer"},rft=t("td",{style:{"text-align":"center"}},"2407",-1),dft=t("td",{style:{"text-align":"left"}},"最长递增子序列 II",-1),_ft=t("td",{style:{"text-align":"center"}},null,-1),aft={style:{"text-align":"left"}},ift=t("code",null,"树状数组",-1),cft=t("code",null,"线段树",-1),hft=t("code",null,"队列",-1),gft=t("code",null,"4+",-1),mft=t("td",{style:{"text-align":"left"}},"🔴",-1),fft={style:{"text-align":"center"}},uft={href:"https://leetcode.cn/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},yft={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},pft=t("td",{style:{"text-align":"center"}},"2420",-1),xft=t("td",{style:{"text-align":"left"}},"找到所有好下标",-1),bft=t("td",{style:{"text-align":"center"}},null,-1),kft={style:{"text-align":"left"}},wft=t("code",null,"数组",-1),vft=t("code",null,"动态规划",-1),Ift=t("code",null,"前缀和",-1),qft=t("td",{style:{"text-align":"left"}},"🟠",-1),zft={style:{"text-align":"center"}},jft={href:"https://leetcode.cn/problems/find-all-good-indices",target:"_blank",rel:"noopener noreferrer"},Cft={href:"https://leetcode.com/problems/find-all-good-indices",target:"_blank",rel:"noopener noreferrer"},Oft=t("td",{style:{"text-align":"center"}},"2430",-1),Lft=t("td",{style:{"text-align":"left"}},"对字母串可执行的最大删除数",-1),Pft=t("td",{style:{"text-align":"center"}},null,-1),Kft={style:{"text-align":"left"}},Vft=t("code",null,"字符串",-1),Nft=t("code",null,"动态规划",-1),Dft=t("code",null,"字符串匹配",-1),Eft=t("code",null,"2+",-1),Bft=t("td",{style:{"text-align":"left"}},"🔴",-1),Mft={style:{"text-align":"center"}},Yft={href:"https://leetcode.cn/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},Aft={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},Jft=t("td",{style:{"text-align":"center"}},"2431",-1),Rft=t("td",{style:{"text-align":"left"}},"最大限度地提高购买水果的口味 🔒",-1),Sft=t("td",{style:{"text-align":"center"}},null,-1),Uft={style:{"text-align":"left"}},Wft=t("code",null,"数组",-1),Xft=t("code",null,"动态规划",-1),Fft=t("td",{style:{"text-align":"left"}},"🟠",-1),Gft={style:{"text-align":"center"}},Hft={href:"https://leetcode.cn/problems/maximize-total-tastiness-of-purchased-fruits",target:"_blank",rel:"noopener noreferrer"},Tft={href:"https://leetcode.com/problems/maximize-total-tastiness-of-purchased-fruits",target:"_blank",rel:"noopener noreferrer"},Qft=t("td",{style:{"text-align":"center"}},"2435",-1),Zft=t("td",{style:{"text-align":"left"}},"矩阵中和能被 K 整除的路径",-1),$ft=t("td",{style:{"text-align":"center"}},null,-1),tut={style:{"text-align":"left"}},eut=t("code",null,"数组",-1),out=t("code",null,"动态规划",-1),lut=t("code",null,"矩阵",-1),nut=t("td",{style:{"text-align":"left"}},"🔴",-1),sut={style:{"text-align":"center"}},rut={href:"https://leetcode.cn/problems/paths-in-matrix-whose-sum-is-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},dut={href:"https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},_ut=t("td",{style:{"text-align":"center"}},"2436",-1),aut=t("td",{style:{"text-align":"left"}},"使子数组最大公约数大于一的最小分割数 🔒",-1),iut=t("td",{style:{"text-align":"center"}},null,-1),cut={style:{"text-align":"left"}},hut=t("code",null,"贪心",-1),gut=t("code",null,"数组",-1),mut=t("code",null,"数学",-1),fut=t("code",null,"2+",-1),uut=t("td",{style:{"text-align":"left"}},"🟠",-1),yut={style:{"text-align":"center"}},put={href:"https://leetcode.cn/problems/minimum-split-into-subarrays-with-gcd-greater-than-one",target:"_blank",rel:"noopener noreferrer"},xut={href:"https://leetcode.com/problems/minimum-split-into-subarrays-with-gcd-greater-than-one",target:"_blank",rel:"noopener noreferrer"},but=t("td",{style:{"text-align":"center"}},"2439",-1),kut=t("td",{style:{"text-align":"left"}},"最小化数组中的最大值",-1),wut=t("td",{style:{"text-align":"center"}},null,-1),vut={style:{"text-align":"left"}},Iut=t("code",null,"贪心",-1),qut=t("code",null,"数组",-1),zut=t("code",null,"二分查找",-1),jut=t("code",null,"2+",-1),Cut=t("td",{style:{"text-align":"left"}},"🟠",-1),Out={style:{"text-align":"center"}},Lut={href:"https://leetcode.cn/problems/minimize-maximum-of-array",target:"_blank",rel:"noopener noreferrer"},Put={href:"https://leetcode.com/problems/minimize-maximum-of-array",target:"_blank",rel:"noopener noreferrer"},Kut=t("td",{style:{"text-align":"center"}},"2463",-1),Vut=t("td",{style:{"text-align":"left"}},"最小移动总距离",-1),Nut={style:{"text-align":"center"}},Dut={style:{"text-align":"left"}},Eut=t("code",null,"数组",-1),But=t("code",null,"动态规划",-1),Mut=t("code",null,"排序",-1),Yut=t("td",{style:{"text-align":"left"}},"🔴",-1),Aut={style:{"text-align":"center"}},Jut={href:"https://leetcode.cn/problems/minimum-total-distance-traveled",target:"_blank",rel:"noopener noreferrer"},Rut={href:"https://leetcode.com/problems/minimum-total-distance-traveled",target:"_blank",rel:"noopener noreferrer"},Sut=t("td",{style:{"text-align":"center"}},"2464",-1),Uut=t("td",{style:{"text-align":"left"}},"有效分割中的最少子数组数目 🔒",-1),Wut=t("td",{style:{"text-align":"center"}},null,-1),Xut={style:{"text-align":"left"}},Fut=t("code",null,"数组",-1),Gut=t("code",null,"数学",-1),Hut=t("code",null,"动态规划",-1),Tut=t("code",null,"1+",-1),Qut=t("td",{style:{"text-align":"left"}},"🟠",-1),Zut={style:{"text-align":"center"}},$ut={href:"https://leetcode.cn/problems/minimum-subarrays-in-a-valid-split",target:"_blank",rel:"noopener noreferrer"},tyt={href:"https://leetcode.com/problems/minimum-subarrays-in-a-valid-split",target:"_blank",rel:"noopener noreferrer"},eyt=t("td",{style:{"text-align":"center"}},"2466",-1),oyt=t("td",{style:{"text-align":"left"}},"统计构造好字符串的方案数",-1),lyt=t("td",{style:{"text-align":"center"}},null,-1),nyt={style:{"text-align":"left"}},syt=t("code",null,"动态规划",-1),ryt=t("td",{style:{"text-align":"left"}},"🟠",-1),dyt={style:{"text-align":"center"}},_yt={href:"https://leetcode.cn/problems/count-ways-to-build-good-strings",target:"_blank",rel:"noopener noreferrer"},ayt={href:"https://leetcode.com/problems/count-ways-to-build-good-strings",target:"_blank",rel:"noopener noreferrer"},iyt=t("td",{style:{"text-align":"center"}},"2472",-1),cyt=t("td",{style:{"text-align":"left"}},"不重叠回文子字符串的最大数目",-1),hyt=t("td",{style:{"text-align":"center"}},null,-1),gyt={style:{"text-align":"left"}},myt=t("code",null,"贪心",-1),fyt=t("code",null,"双指针",-1),uyt=t("code",null,"字符串",-1),yyt=t("code",null,"1+",-1),pyt=t("td",{style:{"text-align":"left"}},"🔴",-1),xyt={style:{"text-align":"center"}},byt={href:"https://leetcode.cn/problems/maximum-number-of-non-overlapping-palindrome-substrings",target:"_blank",rel:"noopener noreferrer"},kyt={href:"https://leetcode.com/problems/maximum-number-of-non-overlapping-palindrome-substrings",target:"_blank",rel:"noopener noreferrer"},wyt=t("td",{style:{"text-align":"center"}},"2478",-1),vyt=t("td",{style:{"text-align":"left"}},"完美分割的方案数",-1),Iyt=t("td",{style:{"text-align":"center"}},null,-1),qyt={style:{"text-align":"left"}},zyt=t("code",null,"字符串",-1),jyt=t("code",null,"动态规划",-1),Cyt=t("td",{style:{"text-align":"left"}},"🔴",-1),Oyt={style:{"text-align":"center"}},Lyt={href:"https://leetcode.cn/problems/number-of-beautiful-partitions",target:"_blank",rel:"noopener noreferrer"},Pyt={href:"https://leetcode.com/problems/number-of-beautiful-partitions",target:"_blank",rel:"noopener noreferrer"},Kyt=t("td",{style:{"text-align":"center"}},"2484",-1),Vyt=t("td",{style:{"text-align":"left"}},"统计回文子序列数目",-1),Nyt=t("td",{style:{"text-align":"center"}},null,-1),Dyt={style:{"text-align":"left"}},Eyt=t("code",null,"字符串",-1),Byt=t("code",null,"动态规划",-1),Myt=t("td",{style:{"text-align":"left"}},"🔴",-1),Yyt={style:{"text-align":"center"}},Ayt={href:"https://leetcode.cn/problems/count-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},Jyt={href:"https://leetcode.com/problems/count-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},Ryt=t("td",{style:{"text-align":"center"}},"2495",-1),Syt=t("td",{style:{"text-align":"left"}},"乘积为偶数的子数组数 🔒",-1),Uyt=t("td",{style:{"text-align":"center"}},null,-1),Wyt={style:{"text-align":"left"}},Xyt=t("code",null,"数组",-1),Fyt=t("code",null,"数学",-1),Gyt=t("code",null,"动态规划",-1),Hyt=t("td",{style:{"text-align":"left"}},"🟠",-1),Tyt={style:{"text-align":"center"}},Qyt={href:"https://leetcode.cn/problems/number-of-subarrays-having-even-product",target:"_blank",rel:"noopener noreferrer"},Zyt={href:"https://leetcode.com/problems/number-of-subarrays-having-even-product",target:"_blank",rel:"noopener noreferrer"},$yt=t("td",{style:{"text-align":"center"}},"2501",-1),tpt=t("td",{style:{"text-align":"left"}},"数组中最长的方波",-1),ept={style:{"text-align":"center"}},opt={style:{"text-align":"left"}},lpt=t("code",null,"数组",-1),npt=t("code",null,"哈希表",-1),spt=t("code",null,"二分查找",-1),rpt=t("code",null,"2+",-1),dpt=t("td",{style:{"text-align":"left"}},"🟠",-1),_pt={style:{"text-align":"center"}},apt={href:"https://leetcode.cn/problems/longest-square-streak-in-an-array",target:"_blank",rel:"noopener noreferrer"},ipt={href:"https://leetcode.com/problems/longest-square-streak-in-an-array",target:"_blank",rel:"noopener noreferrer"},cpt=t("td",{style:{"text-align":"center"}},"2510",-1),hpt=t("td",{style:{"text-align":"left"}},"检查是否有路径经过相同数量的 0 和 1 🔒",-1),gpt=t("td",{style:{"text-align":"center"}},null,-1),mpt={style:{"text-align":"left"}},fpt=t("code",null,"数组",-1),upt=t("code",null,"动态规划",-1),ypt=t("code",null,"矩阵",-1),ppt=t("td",{style:{"text-align":"left"}},"🟠",-1),xpt={style:{"text-align":"center"}},bpt={href:"https://leetcode.cn/problems/check-if-there-is-a-path-with-equal-number-of-0s-and-1s",target:"_blank",rel:"noopener noreferrer"},kpt={href:"https://leetcode.com/problems/check-if-there-is-a-path-with-equal-number-of-0s-and-1s",target:"_blank",rel:"noopener noreferrer"},wpt=t("td",{style:{"text-align":"center"}},"2518",-1),vpt=t("td",{style:{"text-align":"left"}},"好分区的数目",-1),Ipt=t("td",{style:{"text-align":"center"}},null,-1),qpt={style:{"text-align":"left"}},zpt=t("code",null,"数组",-1),jpt=t("code",null,"动态规划",-1),Cpt=t("td",{style:{"text-align":"left"}},"🔴",-1),Opt={style:{"text-align":"center"}},Lpt={href:"https://leetcode.cn/problems/number-of-great-partitions",target:"_blank",rel:"noopener noreferrer"},Ppt={href:"https://leetcode.com/problems/number-of-great-partitions",target:"_blank",rel:"noopener noreferrer"},Kpt=t("td",{style:{"text-align":"center"}},"2522",-1),Vpt=t("td",{style:{"text-align":"left"}},"将字符串分割成值不超过 K 的子字符串",-1),Npt=t("td",{style:{"text-align":"center"}},null,-1),Dpt={style:{"text-align":"left"}},Ept=t("code",null,"贪心",-1),Bpt=t("code",null,"字符串",-1),Mpt=t("code",null,"动态规划",-1),Ypt=t("td",{style:{"text-align":"left"}},"🟠",-1),Apt={style:{"text-align":"center"}},Jpt={href:"https://leetcode.cn/problems/partition-string-into-substrings-with-values-at-most-k",target:"_blank",rel:"noopener noreferrer"},Rpt={href:"https://leetcode.com/problems/partition-string-into-substrings-with-values-at-most-k",target:"_blank",rel:"noopener noreferrer"},Spt=t("td",{style:{"text-align":"center"}},"2533",-1),Upt=t("td",{style:{"text-align":"left"}},"好二进制字符串的数量 🔒",-1),Wpt=t("td",{style:{"text-align":"center"}},null,-1),Xpt={style:{"text-align":"left"}},Fpt=t("code",null,"动态规划",-1),Gpt=t("td",{style:{"text-align":"left"}},"🟠",-1),Hpt={style:{"text-align":"center"}},Tpt={href:"https://leetcode.cn/problems/number-of-good-binary-strings",target:"_blank",rel:"noopener noreferrer"},Qpt={href:"https://leetcode.com/problems/number-of-good-binary-strings",target:"_blank",rel:"noopener noreferrer"},Zpt=t("td",{style:{"text-align":"center"}},"2538",-1),$pt=t("td",{style:{"text-align":"left"}},"最大价值和与最小价值和的差值",-1),txt=t("td",{style:{"text-align":"center"}},null,-1),ext={style:{"text-align":"left"}},oxt=t("code",null,"树",-1),lxt=t("code",null,"深度优先搜索",-1),nxt=t("code",null,"数组",-1),sxt=t("code",null,"1+",-1),rxt=t("td",{style:{"text-align":"left"}},"🔴",-1),dxt={style:{"text-align":"center"}},_xt={href:"https://leetcode.cn/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},axt={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},ixt=t("td",{style:{"text-align":"center"}},"2547",-1),cxt=t("td",{style:{"text-align":"left"}},"拆分数组的最小代价",-1),hxt=t("td",{style:{"text-align":"center"}},null,-1),gxt={style:{"text-align":"left"}},mxt=t("code",null,"数组",-1),fxt=t("code",null,"哈希表",-1),uxt=t("code",null,"动态规划",-1),yxt=t("code",null,"1+",-1),pxt=t("td",{style:{"text-align":"left"}},"🔴",-1),xxt={style:{"text-align":"center"}},bxt={href:"https://leetcode.cn/problems/minimum-cost-to-split-an-array",target:"_blank",rel:"noopener noreferrer"},kxt={href:"https://leetcode.com/problems/minimum-cost-to-split-an-array",target:"_blank",rel:"noopener noreferrer"},wxt=t("td",{style:{"text-align":"center"}},"2552",-1),vxt=t("td",{style:{"text-align":"left"}},"统计上升四元组",-1),Ixt=t("td",{style:{"text-align":"center"}},null,-1),qxt={style:{"text-align":"left"}},zxt=t("code",null,"树状数组",-1),jxt=t("code",null,"数组",-1),Cxt=t("code",null,"动态规划",-1),Oxt=t("code",null,"2+",-1),Lxt=t("td",{style:{"text-align":"left"}},"🔴",-1),Pxt={style:{"text-align":"center"}},Kxt={href:"https://leetcode.cn/problems/count-increasing-quadruplets",target:"_blank",rel:"noopener noreferrer"},Vxt={href:"https://leetcode.com/problems/count-increasing-quadruplets",target:"_blank",rel:"noopener noreferrer"},Nxt=t("td",{style:{"text-align":"center"}},"2556",-1),Dxt=t("td",{style:{"text-align":"left"}},"二进制矩阵中翻转最多一次使路径不连通",-1),Ext=t("td",{style:{"text-align":"center"}},null,-1),Bxt={style:{"text-align":"left"}},Mxt=t("code",null,"深度优先搜索",-1),Yxt=t("code",null,"广度优先搜索",-1),Axt=t("code",null,"数组",-1),Jxt=t("code",null,"2+",-1),Rxt=t("td",{style:{"text-align":"left"}},"🟠",-1),Sxt={style:{"text-align":"center"}},Uxt={href:"https://leetcode.cn/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},Wxt={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},Xxt=t("td",{style:{"text-align":"center"}},"2571",-1),Fxt=t("td",{style:{"text-align":"left"}},"将整数减少到零需要的最少操作数",-1),Gxt=t("td",{style:{"text-align":"center"}},null,-1),Hxt={style:{"text-align":"left"}},Txt=t("code",null,"贪心",-1),Qxt=t("code",null,"位运算",-1),Zxt=t("code",null,"动态规划",-1),$xt=t("td",{style:{"text-align":"left"}},"🟠",-1),t2t={style:{"text-align":"center"}},e2t={href:"https://leetcode.cn/problems/minimum-operations-to-reduce-an-integer-to-0",target:"_blank",rel:"noopener noreferrer"},o2t={href:"https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0",target:"_blank",rel:"noopener noreferrer"},l2t=t("td",{style:{"text-align":"center"}},"2572",-1),n2t=t("td",{style:{"text-align":"left"}},"无平方子集计数",-1),s2t=t("td",{style:{"text-align":"center"}},null,-1),r2t={style:{"text-align":"left"}},d2t=t("code",null,"位运算",-1),_2t=t("code",null,"数组",-1),a2t=t("code",null,"数学",-1),i2t=t("code",null,"2+",-1),c2t=t("td",{style:{"text-align":"left"}},"🟠",-1),h2t={style:{"text-align":"center"}},g2t={href:"https://leetcode.cn/problems/count-the-number-of-square-free-subsets",target:"_blank",rel:"noopener noreferrer"},m2t={href:"https://leetcode.com/problems/count-the-number-of-square-free-subsets",target:"_blank",rel:"noopener noreferrer"},f2t=t("td",{style:{"text-align":"center"}},"2573",-1),u2t=t("td",{style:{"text-align":"left"}},"找出对应 LCP 矩阵的字符串",-1),y2t=t("td",{style:{"text-align":"center"}},null,-1),p2t={style:{"text-align":"left"}},x2t=t("code",null,"贪心",-1),b2t=t("code",null,"并查集",-1),k2t=t("code",null,"数组",-1),w2t=t("code",null,"3+",-1),v2t=t("td",{style:{"text-align":"left"}},"🔴",-1),I2t={style:{"text-align":"center"}},q2t={href:"https://leetcode.cn/problems/find-the-string-with-lcp",target:"_blank",rel:"noopener noreferrer"},z2t={href:"https://leetcode.com/problems/find-the-string-with-lcp",target:"_blank",rel:"noopener noreferrer"},j2t=t("td",{style:{"text-align":"center"}},"2581",-1),C2t=t("td",{style:{"text-align":"left"}},"统计可能的树根数目",-1),O2t=t("td",{style:{"text-align":"center"}},null,-1),L2t={style:{"text-align":"left"}},P2t=t("code",null,"树",-1),K2t=t("code",null,"深度优先搜索",-1),V2t=t("code",null,"数组",-1),N2t=t("code",null,"2+",-1),D2t=t("td",{style:{"text-align":"left"}},"🔴",-1),E2t={style:{"text-align":"center"}},B2t={href:"https://leetcode.cn/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},M2t={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},Y2t=t("td",{style:{"text-align":"center"}},"2585",-1),A2t=t("td",{style:{"text-align":"left"}},"获得分数的方法数",-1),J2t=t("td",{style:{"text-align":"center"}},null,-1),R2t={style:{"text-align":"left"}},S2t=t("code",null,"数组",-1),U2t=t("code",null,"动态规划",-1),W2t=t("td",{style:{"text-align":"left"}},"🔴",-1),X2t={style:{"text-align":"center"}},F2t={href:"https://leetcode.cn/problems/number-of-ways-to-earn-points",target:"_blank",rel:"noopener noreferrer"},G2t={href:"https://leetcode.com/problems/number-of-ways-to-earn-points",target:"_blank",rel:"noopener noreferrer"},H2t=t("td",{style:{"text-align":"center"}},"2597",-1),T2t=t("td",{style:{"text-align":"left"}},"美丽子集的数目",-1),Q2t=t("td",{style:{"text-align":"center"}},null,-1),Z2t={style:{"text-align":"left"}},$2t=t("code",null,"数组",-1),t3t=t("code",null,"哈希表",-1),e3t=t("code",null,"数学",-1),o3t=t("code",null,"4+",-1),l3t=t("td",{style:{"text-align":"left"}},"🟠",-1),n3t={style:{"text-align":"center"}},s3t={href:"https://leetcode.cn/problems/the-number-of-beautiful-subsets",target:"_blank",rel:"noopener noreferrer"},r3t={href:"https://leetcode.com/problems/the-number-of-beautiful-subsets",target:"_blank",rel:"noopener noreferrer"},d3t=t("td",{style:{"text-align":"center"}},"2606",-1),_3t=t("td",{style:{"text-align":"left"}},"找到最大开销的子字符串",-1),a3t=t("td",{style:{"text-align":"center"}},null,-1),i3t={style:{"text-align":"left"}},c3t=t("code",null,"数组",-1),h3t=t("code",null,"哈希表",-1),g3t=t("code",null,"字符串",-1),m3t=t("code",null,"1+",-1),f3t=t("td",{style:{"text-align":"left"}},"🟠",-1),u3t={style:{"text-align":"center"}},y3t={href:"https://leetcode.cn/problems/find-the-substring-with-maximum-cost",target:"_blank",rel:"noopener noreferrer"},p3t={href:"https://leetcode.com/problems/find-the-substring-with-maximum-cost",target:"_blank",rel:"noopener noreferrer"},x3t=t("td",{style:{"text-align":"center"}},"2617",-1),b3t=t("td",{style:{"text-align":"left"}},"网格图中最少访问的格子数",-1),k3t=t("td",{style:{"text-align":"center"}},null,-1),w3t={style:{"text-align":"left"}},v3t=t("code",null,"栈",-1),I3t=t("code",null,"广度优先搜索",-1),q3t=t("code",null,"并查集",-1),z3t=t("code",null,"5+",-1),j3t=t("td",{style:{"text-align":"left"}},"🔴",-1),C3t={style:{"text-align":"center"}},O3t={href:"https://leetcode.cn/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},L3t={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},P3t=t("td",{style:{"text-align":"center"}},"2638",-1),K3t=t("td",{style:{"text-align":"left"}},"统计 K-Free 子集的总数 🔒",-1),V3t=t("td",{style:{"text-align":"center"}},null,-1),N3t={style:{"text-align":"left"}},D3t=t("code",null,"数组",-1),E3t=t("code",null,"数学",-1),B3t=t("code",null,"动态规划",-1),M3t=t("code",null,"2+",-1),Y3t=t("td",{style:{"text-align":"left"}},"🟠",-1),A3t={style:{"text-align":"center"}},J3t={href:"https://leetcode.cn/problems/count-the-number-of-k-free-subsets",target:"_blank",rel:"noopener noreferrer"},R3t={href:"https://leetcode.com/problems/count-the-number-of-k-free-subsets",target:"_blank",rel:"noopener noreferrer"},S3t=t("td",{style:{"text-align":"center"}},"2645",-1),U3t=t("td",{style:{"text-align":"left"}},"构造有效字符串的最少插入数",-1),W3t=t("td",{style:{"text-align":"center"}},null,-1),X3t={style:{"text-align":"left"}},F3t=t("code",null,"栈",-1),G3t=t("code",null,"贪心",-1),H3t=t("code",null,"字符串",-1),T3t=t("code",null,"1+",-1),Q3t=t("td",{style:{"text-align":"left"}},"🟠",-1),Z3t={style:{"text-align":"center"}},$3t={href:"https://leetcode.cn/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},tbt={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},ebt=t("td",{style:{"text-align":"center"}},"2646",-1),obt=t("td",{style:{"text-align":"left"}},"最小化旅行的价格总和",-1),lbt=t("td",{style:{"text-align":"center"}},null,-1),nbt={style:{"text-align":"left"}},sbt=t("code",null,"树",-1),rbt=t("code",null,"深度优先搜索",-1),dbt=t("code",null,"图",-1),_bt=t("code",null,"2+",-1),abt=t("td",{style:{"text-align":"left"}},"🔴",-1),ibt={style:{"text-align":"center"}},cbt={href:"https://leetcode.cn/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},hbt={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},gbt=t("td",{style:{"text-align":"center"}},"2673",-1),mbt=t("td",{style:{"text-align":"left"}},"使二叉树所有路径值相等的最小代价",-1),fbt=t("td",{style:{"text-align":"center"}},null,-1),ubt={style:{"text-align":"left"}},ybt=t("code",null,"贪心",-1),pbt=t("code",null,"树",-1),xbt=t("code",null,"数组",-1),bbt=t("code",null,"2+",-1),kbt=t("td",{style:{"text-align":"left"}},"🟠",-1),wbt={style:{"text-align":"center"}},vbt={href:"https://leetcode.cn/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ibt={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},qbt=t("td",{style:{"text-align":"center"}},"2681",-1),zbt=t("td",{style:{"text-align":"left"}},"英雄的力量",-1),jbt=t("td",{style:{"text-align":"center"}},null,-1),Cbt={style:{"text-align":"left"}},Obt=t("code",null,"数组",-1),Lbt=t("code",null,"数学",-1),Pbt=t("code",null,"动态规划",-1),Kbt=t("code",null,"2+",-1),Vbt=t("td",{style:{"text-align":"left"}},"🔴",-1),Nbt={style:{"text-align":"center"}},Dbt={href:"https://leetcode.cn/problems/power-of-heroes",target:"_blank",rel:"noopener noreferrer"},Ebt={href:"https://leetcode.com/problems/power-of-heroes",target:"_blank",rel:"noopener noreferrer"},Bbt=t("td",{style:{"text-align":"center"}},"2684",-1),Mbt=t("td",{style:{"text-align":"left"}},"矩阵中移动的最大次数",-1),Ybt={style:{"text-align":"center"}},Abt={style:{"text-align":"left"}},Jbt=t("code",null,"数组",-1),Rbt=t("code",null,"动态规划",-1),Sbt=t("code",null,"矩阵",-1),Ubt=t("td",{style:{"text-align":"left"}},"🟠",-1),Wbt={style:{"text-align":"center"}},Xbt={href:"https://leetcode.cn/problems/maximum-number-of-moves-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Fbt={href:"https://leetcode.com/problems/maximum-number-of-moves-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Gbt=t("td",{style:{"text-align":"center"}},"2707",-1),Hbt=t("td",{style:{"text-align":"left"}},"字符串中的额外字符",-1),Tbt=t("td",{style:{"text-align":"center"}},null,-1),Qbt={style:{"text-align":"left"}},Zbt=t("code",null,"字典树",-1),$bt=t("code",null,"数组",-1),t4t=t("code",null,"哈希表",-1),e4t=t("code",null,"2+",-1),o4t=t("td",{style:{"text-align":"left"}},"🟠",-1),l4t={style:{"text-align":"center"}},n4t={href:"https://leetcode.cn/problems/extra-characters-in-a-string",target:"_blank",rel:"noopener noreferrer"},s4t={href:"https://leetcode.com/problems/extra-characters-in-a-string",target:"_blank",rel:"noopener noreferrer"},r4t=t("td",{style:{"text-align":"center"}},"2708",-1),d4t=t("td",{style:{"text-align":"left"}},"一个小组的最大实力值",-1),_4t=t("td",{style:{"text-align":"center"}},null,-1),a4t={style:{"text-align":"left"}},i4t=t("code",null,"贪心",-1),c4t=t("code",null,"位运算",-1),h4t=t("code",null,"数组",-1),g4t=t("code",null,"4+",-1),m4t=t("td",{style:{"text-align":"left"}},"🟠",-1),f4t={style:{"text-align":"center"}},u4t={href:"https://leetcode.cn/problems/maximum-strength-of-a-group",target:"_blank",rel:"noopener noreferrer"},y4t={href:"https://leetcode.com/problems/maximum-strength-of-a-group",target:"_blank",rel:"noopener noreferrer"},p4t=t("td",{style:{"text-align":"center"}},"2712",-1),x4t=t("td",{style:{"text-align":"left"}},"使所有字符相等的最小成本",-1),b4t=t("td",{style:{"text-align":"center"}},null,-1),k4t={style:{"text-align":"left"}},w4t=t("code",null,"贪心",-1),v4t=t("code",null,"字符串",-1),I4t=t("code",null,"动态规划",-1),q4t=t("td",{style:{"text-align":"left"}},"🟠",-1),z4t={style:{"text-align":"center"}},j4t={href:"https://leetcode.cn/problems/minimum-cost-to-make-all-characters-equal",target:"_blank",rel:"noopener noreferrer"},C4t={href:"https://leetcode.com/problems/minimum-cost-to-make-all-characters-equal",target:"_blank",rel:"noopener noreferrer"},O4t=t("td",{style:{"text-align":"center"}},"2713",-1),L4t=t("td",{style:{"text-align":"left"}},"矩阵中严格递增的单元格数",-1),P4t=t("td",{style:{"text-align":"center"}},null,-1),K4t={style:{"text-align":"left"}},V4t=t("code",null,"记忆化搜索",-1),N4t=t("code",null,"数组",-1),D4t=t("code",null,"哈希表",-1),E4t=t("code",null,"5+",-1),B4t=t("td",{style:{"text-align":"left"}},"🔴",-1),M4t={style:{"text-align":"center"}},Y4t={href:"https://leetcode.cn/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},A4t={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},J4t=t("td",{style:{"text-align":"center"}},"2719",-1),R4t=t("td",{style:{"text-align":"left"}},"统计整数数目",-1),S4t=t("td",{style:{"text-align":"center"}},null,-1),U4t={style:{"text-align":"left"}},W4t=t("code",null,"数学",-1),X4t=t("code",null,"字符串",-1),F4t=t("code",null,"动态规划",-1),G4t=t("td",{style:{"text-align":"left"}},"🔴",-1),H4t={style:{"text-align":"center"}},T4t={href:"https://leetcode.cn/problems/count-of-integers",target:"_blank",rel:"noopener noreferrer"},Q4t={href:"https://leetcode.com/problems/count-of-integers",target:"_blank",rel:"noopener noreferrer"},Z4t=t("td",{style:{"text-align":"center"}},"2741",-1),$4t=t("td",{style:{"text-align":"left"}},"特别的排列",-1),t5t=t("td",{style:{"text-align":"center"}},null,-1),e5t={style:{"text-align":"left"}},o5t=t("code",null,"位运算",-1),l5t=t("code",null,"数组",-1),n5t=t("code",null,"动态规划",-1),s5t=t("code",null,"1+",-1),r5t=t("td",{style:{"text-align":"left"}},"🟠",-1),d5t={style:{"text-align":"center"}},_5t={href:"https://leetcode.cn/problems/special-permutations",target:"_blank",rel:"noopener noreferrer"},a5t={href:"https://leetcode.com/problems/special-permutations",target:"_blank",rel:"noopener noreferrer"},i5t=t("td",{style:{"text-align":"center"}},"2742",-1),c5t=t("td",{style:{"text-align":"left"}},"给墙壁刷油漆",-1),h5t=t("td",{style:{"text-align":"center"}},null,-1),g5t={style:{"text-align":"left"}},m5t=t("code",null,"数组",-1),f5t=t("code",null,"动态规划",-1),u5t=t("td",{style:{"text-align":"left"}},"🔴",-1),y5t={style:{"text-align":"center"}},p5t={href:"https://leetcode.cn/problems/painting-the-walls",target:"_blank",rel:"noopener noreferrer"},x5t={href:"https://leetcode.com/problems/painting-the-walls",target:"_blank",rel:"noopener noreferrer"},b5t=t("td",{style:{"text-align":"center"}},"2745",-1),k5t=t("td",{style:{"text-align":"left"}},"构造最长的新字符串",-1),w5t=t("td",{style:{"text-align":"center"}},null,-1),v5t={style:{"text-align":"left"}},I5t=t("code",null,"贪心",-1),q5t=t("code",null,"脑筋急转弯",-1),z5t=t("code",null,"数学",-1),j5t=t("code",null,"1+",-1),C5t=t("td",{style:{"text-align":"left"}},"🟠",-1),O5t={style:{"text-align":"center"}},L5t={href:"https://leetcode.cn/problems/construct-the-longest-new-string",target:"_blank",rel:"noopener noreferrer"},P5t={href:"https://leetcode.com/problems/construct-the-longest-new-string",target:"_blank",rel:"noopener noreferrer"},K5t=t("td",{style:{"text-align":"center"}},"2746",-1),V5t=t("td",{style:{"text-align":"left"}},"字符串连接删减字母",-1),N5t=t("td",{style:{"text-align":"center"}},null,-1),D5t={style:{"text-align":"left"}},E5t=t("code",null,"数组",-1),B5t=t("code",null,"字符串",-1),M5t=t("code",null,"动态规划",-1),Y5t=t("td",{style:{"text-align":"left"}},"🟠",-1),A5t={style:{"text-align":"center"}},J5t={href:"https://leetcode.cn/problems/decremental-string-concatenation",target:"_blank",rel:"noopener noreferrer"},R5t={href:"https://leetcode.com/problems/decremental-string-concatenation",target:"_blank",rel:"noopener noreferrer"},S5t=t("td",{style:{"text-align":"center"}},"2750",-1),U5t=t("td",{style:{"text-align":"left"}},"将数组划分成若干好子数组的方式",-1),W5t=t("td",{style:{"text-align":"center"}},null,-1),X5t={style:{"text-align":"left"}},F5t=t("code",null,"数组",-1),G5t=t("code",null,"数学",-1),H5t=t("code",null,"动态规划",-1),T5t=t("td",{style:{"text-align":"left"}},"🟠",-1),Q5t={style:{"text-align":"center"}},Z5t={href:"https://leetcode.cn/problems/ways-to-split-array-into-good-subarrays",target:"_blank",rel:"noopener noreferrer"},$5t={href:"https://leetcode.com/problems/ways-to-split-array-into-good-subarrays",target:"_blank",rel:"noopener noreferrer"},t6t=t("td",{style:{"text-align":"center"}},"2767",-1),e6t=t("td",{style:{"text-align":"left"}},"将字符串分割为最少的美丽子字符串",-1),o6t=t("td",{style:{"text-align":"center"}},null,-1),l6t={style:{"text-align":"left"}},n6t=t("code",null,"哈希表",-1),s6t=t("code",null,"字符串",-1),r6t=t("code",null,"动态规划",-1),d6t=t("code",null,"1+",-1),_6t=t("td",{style:{"text-align":"left"}},"🟠",-1),a6t={style:{"text-align":"center"}},i6t={href:"https://leetcode.cn/problems/partition-string-into-minimum-beautiful-substrings",target:"_blank",rel:"noopener noreferrer"},c6t={href:"https://leetcode.com/problems/partition-string-into-minimum-beautiful-substrings",target:"_blank",rel:"noopener noreferrer"},h6t=t("td",{style:{"text-align":"center"}},"2770",-1),g6t=t("td",{style:{"text-align":"left"}},"达到末尾下标所需的最大跳跃次数",-1),m6t=t("td",{style:{"text-align":"center"}},null,-1),f6t={style:{"text-align":"left"}},u6t=t("code",null,"数组",-1),y6t=t("code",null,"动态规划",-1),p6t=t("td",{style:{"text-align":"left"}},"🟠",-1),x6t={style:{"text-align":"center"}},b6t={href:"https://leetcode.cn/problems/maximum-number-of-jumps-to-reach-the-last-index",target:"_blank",rel:"noopener noreferrer"},k6t={href:"https://leetcode.com/problems/maximum-number-of-jumps-to-reach-the-last-index",target:"_blank",rel:"noopener noreferrer"},w6t=t("td",{style:{"text-align":"center"}},"2771",-1),v6t=t("td",{style:{"text-align":"left"}},"构造最长非递减子数组",-1),I6t=t("td",{style:{"text-align":"center"}},null,-1),q6t={style:{"text-align":"left"}},z6t=t("code",null,"数组",-1),j6t=t("code",null,"动态规划",-1),C6t=t("td",{style:{"text-align":"left"}},"🟠",-1),O6t={style:{"text-align":"center"}},L6t={href:"https://leetcode.cn/problems/longest-non-decreasing-subarray-from-two-arrays",target:"_blank",rel:"noopener noreferrer"},P6t={href:"https://leetcode.com/problems/longest-non-decreasing-subarray-from-two-arrays",target:"_blank",rel:"noopener noreferrer"},K6t=t("td",{style:{"text-align":"center"}},"2786",-1),V6t=t("td",{style:{"text-align":"left"}},"访问数组中的位置使分数最大",-1),N6t=t("td",{style:{"text-align":"center"}},null,-1),D6t={style:{"text-align":"left"}},E6t=t("code",null,"数组",-1),B6t=t("code",null,"动态规划",-1),M6t=t("td",{style:{"text-align":"left"}},"🟠",-1),Y6t={style:{"text-align":"center"}},A6t={href:"https://leetcode.cn/problems/visit-array-positions-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},J6t={href:"https://leetcode.com/problems/visit-array-positions-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},R6t=t("td",{style:{"text-align":"center"}},"2787",-1),S6t=t("td",{style:{"text-align":"left"}},"将一个数字表示成幂的和的方案数",-1),U6t=t("td",{style:{"text-align":"center"}},null,-1),W6t={style:{"text-align":"left"}},X6t=t("code",null,"动态规划",-1),F6t=t("td",{style:{"text-align":"left"}},"🟠",-1),G6t={style:{"text-align":"center"}},H6t={href:"https://leetcode.cn/problems/ways-to-express-an-integer-as-sum-of-powers",target:"_blank",rel:"noopener noreferrer"},T6t={href:"https://leetcode.com/problems/ways-to-express-an-integer-as-sum-of-powers",target:"_blank",rel:"noopener noreferrer"},Q6t=t("td",{style:{"text-align":"center"}},"2791",-1),Z6t=t("td",{style:{"text-align":"left"}},"树中可以形成回文的路径数",-1),$6t=t("td",{style:{"text-align":"center"}},null,-1),t7t={style:{"text-align":"left"}},e7t=t("code",null,"位运算",-1),o7t=t("code",null,"树",-1),l7t=t("code",null,"深度优先搜索",-1),n7t=t("code",null,"2+",-1),s7t=t("td",{style:{"text-align":"left"}},"🔴",-1),r7t={style:{"text-align":"center"}},d7t={href:"https://leetcode.cn/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},_7t={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},a7t=t("td",{style:{"text-align":"center"}},"2801",-1),i7t=t("td",{style:{"text-align":"left"}},"统计范围内的步进数字数目",-1),c7t=t("td",{style:{"text-align":"center"}},null,-1),h7t={style:{"text-align":"left"}},g7t=t("code",null,"字符串",-1),m7t=t("code",null,"动态规划",-1),f7t=t("td",{style:{"text-align":"left"}},"🔴",-1),u7t={style:{"text-align":"center"}},y7t={href:"https://leetcode.cn/problems/count-stepping-numbers-in-range",target:"_blank",rel:"noopener noreferrer"},p7t={href:"https://leetcode.com/problems/count-stepping-numbers-in-range",target:"_blank",rel:"noopener noreferrer"},x7t=t("td",{style:{"text-align":"center"}},"2809",-1),b7t=t("td",{style:{"text-align":"left"}},"使数组和小于等于 x 的最少时间",-1),k7t=t("td",{style:{"text-align":"center"}},null,-1),w7t={style:{"text-align":"left"}},v7t=t("code",null,"数组",-1),I7t=t("code",null,"动态规划",-1),q7t=t("code",null,"排序",-1),z7t=t("td",{style:{"text-align":"left"}},"🔴",-1),j7t={style:{"text-align":"center"}},C7t={href:"https://leetcode.cn/problems/minimum-time-to-make-array-sum-at-most-x",target:"_blank",rel:"noopener noreferrer"},O7t={href:"https://leetcode.com/problems/minimum-time-to-make-array-sum-at-most-x",target:"_blank",rel:"noopener noreferrer"},L7t=t("td",{style:{"text-align":"center"}},"2811",-1),P7t=t("td",{style:{"text-align":"left"}},"判断是否能拆分数组",-1),K7t=t("td",{style:{"text-align":"center"}},null,-1),V7t={style:{"text-align":"left"}},N7t=t("code",null,"贪心",-1),D7t=t("code",null,"数组",-1),E7t=t("code",null,"动态规划",-1),B7t=t("td",{style:{"text-align":"left"}},"🟠",-1),M7t={style:{"text-align":"center"}},Y7t={href:"https://leetcode.cn/problems/check-if-it-is-possible-to-split-array",target:"_blank",rel:"noopener noreferrer"},A7t={href:"https://leetcode.com/problems/check-if-it-is-possible-to-split-array",target:"_blank",rel:"noopener noreferrer"},J7t=t("td",{style:{"text-align":"center"}},"2826",-1),R7t=t("td",{style:{"text-align":"left"}},"将三个组排序",-1),S7t=t("td",{style:{"text-align":"center"}},null,-1),U7t={style:{"text-align":"left"}},W7t=t("code",null,"数组",-1),X7t=t("code",null,"二分查找",-1),F7t=t("code",null,"动态规划",-1),G7t=t("td",{style:{"text-align":"left"}},"🟠",-1),H7t={style:{"text-align":"center"}},T7t={href:"https://leetcode.cn/problems/sorting-three-groups",target:"_blank",rel:"noopener noreferrer"},Q7t={href:"https://leetcode.com/problems/sorting-three-groups",target:"_blank",rel:"noopener noreferrer"},Z7t=t("td",{style:{"text-align":"center"}},"2827",-1),$7t=t("td",{style:{"text-align":"left"}},"范围中美丽整数的数目",-1),t0t=t("td",{style:{"text-align":"center"}},null,-1),e0t={style:{"text-align":"left"}},o0t=t("code",null,"数学",-1),l0t=t("code",null,"动态规划",-1),n0t=t("td",{style:{"text-align":"left"}},"🔴",-1),s0t={style:{"text-align":"center"}},r0t={href:"https://leetcode.cn/problems/number-of-beautiful-integers-in-the-range",target:"_blank",rel:"noopener noreferrer"},d0t={href:"https://leetcode.com/problems/number-of-beautiful-integers-in-the-range",target:"_blank",rel:"noopener noreferrer"},_0t=t("td",{style:{"text-align":"center"}},"2830",-1),a0t=t("td",{style:{"text-align":"left"}},"销售利润最大化",-1),i0t=t("td",{style:{"text-align":"center"}},null,-1),c0t={style:{"text-align":"left"}},h0t=t("code",null,"数组",-1),g0t=t("code",null,"哈希表",-1),m0t=t("code",null,"二分查找",-1),f0t=t("code",null,"2+",-1),u0t=t("td",{style:{"text-align":"left"}},"🟠",-1),y0t={style:{"text-align":"center"}},p0t={href:"https://leetcode.cn/problems/maximize-the-profit-as-the-salesman",target:"_blank",rel:"noopener noreferrer"},x0t={href:"https://leetcode.com/problems/maximize-the-profit-as-the-salesman",target:"_blank",rel:"noopener noreferrer"},b0t=t("td",{style:{"text-align":"center"}},"2836",-1),k0t=t("td",{style:{"text-align":"left"}},"在传球游戏中最大化函数值",-1),w0t=t("td",{style:{"text-align":"center"}},null,-1),v0t={style:{"text-align":"left"}},I0t=t("code",null,"位运算",-1),q0t=t("code",null,"数组",-1),z0t=t("code",null,"动态规划",-1),j0t=t("td",{style:{"text-align":"left"}},"🔴",-1),C0t={style:{"text-align":"center"}},O0t={href:"https://leetcode.cn/problems/maximize-value-of-function-in-a-ball-passing-game",target:"_blank",rel:"noopener noreferrer"},L0t={href:"https://leetcode.com/problems/maximize-value-of-function-in-a-ball-passing-game",target:"_blank",rel:"noopener noreferrer"},P0t=t("td",{style:{"text-align":"center"}},"2850",-1),K0t=t("td",{style:{"text-align":"left"}},"将石头分散到网格图的最少移动次数",-1),V0t=t("td",{style:{"text-align":"center"}},null,-1),N0t={style:{"text-align":"left"}},D0t=t("code",null,"广度优先搜索",-1),E0t=t("code",null,"数组",-1),B0t=t("code",null,"动态规划",-1),M0t=t("code",null,"1+",-1),Y0t=t("td",{style:{"text-align":"left"}},"🟠",-1),A0t={style:{"text-align":"center"}},J0t={href:"https://leetcode.cn/problems/minimum-moves-to-spread-stones-over-grid",target:"_blank",rel:"noopener noreferrer"},R0t={href:"https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid",target:"_blank",rel:"noopener noreferrer"},S0t=t("td",{style:{"text-align":"center"}},"2851",-1),U0t=t("td",{style:{"text-align":"left"}},"字符串转换",-1),W0t=t("td",{style:{"text-align":"center"}},null,-1),X0t={style:{"text-align":"left"}},F0t=t("code",null,"数学",-1),G0t=t("code",null,"字符串",-1),H0t=t("code",null,"动态规划",-1),T0t=t("code",null,"1+",-1),Q0t=t("td",{style:{"text-align":"left"}},"🔴",-1),Z0t={style:{"text-align":"center"}},$0t={href:"https://leetcode.cn/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},t9t={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},e9t=t("td",{style:{"text-align":"center"}},"2858",-1),o9t=t("td",{style:{"text-align":"left"}},"可以到达每一个节点的最少边反转次数",-1),l9t=t("td",{style:{"text-align":"center"}},null,-1),n9t={style:{"text-align":"left"}},s9t=t("code",null,"深度优先搜索",-1),r9t=t("code",null,"广度优先搜索",-1),d9t=t("code",null,"图",-1),_9t=t("code",null,"1+",-1),a9t=t("td",{style:{"text-align":"left"}},"🔴",-1),i9t={style:{"text-align":"center"}},c9t={href:"https://leetcode.cn/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},h9t={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},g9t=t("td",{style:{"text-align":"center"}},"2867",-1),m9t=t("td",{style:{"text-align":"left"}},"统计树中的合法路径数目",-1),f9t=t("td",{style:{"text-align":"center"}},null,-1),u9t={style:{"text-align":"left"}},y9t=t("code",null,"树",-1),p9t=t("code",null,"深度优先搜索",-1),x9t=t("code",null,"数学",-1),b9t=t("code",null,"2+",-1),k9t=t("td",{style:{"text-align":"left"}},"🔴",-1),w9t={style:{"text-align":"center"}},v9t={href:"https://leetcode.cn/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},I9t={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},q9t=t("td",{style:{"text-align":"center"}},"2876",-1),z9t=t("td",{style:{"text-align":"left"}},"有向图访问计数",-1),j9t=t("td",{style:{"text-align":"center"}},null,-1),C9t={style:{"text-align":"left"}},O9t=t("code",null,"图",-1),L9t=t("code",null,"记忆化搜索",-1),P9t=t("code",null,"动态规划",-1),K9t=t("td",{style:{"text-align":"left"}},"🔴",-1),V9t={style:{"text-align":"center"}},N9t={href:"https://leetcode.cn/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},D9t={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},E9t=t("td",{style:{"text-align":"center"}},"2892",-1),B9t=t("td",{style:{"text-align":"left"}},"将相邻元素相乘后得到最小化数组 🔒",-1),M9t=t("td",{style:{"text-align":"center"}},null,-1),Y9t={style:{"text-align":"left"}},A9t=t("code",null,"贪心",-1),J9t=t("code",null,"数组",-1),R9t=t("code",null,"动态规划",-1),S9t=t("td",{style:{"text-align":"left"}},"🟠",-1),U9t={style:{"text-align":"center"}},W9t={href:"https://leetcode.cn/problems/minimizing-array-after-replacing-pairs-with-their-product",target:"_blank",rel:"noopener noreferrer"},X9t={href:"https://leetcode.com/problems/minimizing-array-after-replacing-pairs-with-their-product",target:"_blank",rel:"noopener noreferrer"},F9t=t("td",{style:{"text-align":"center"}},"2896",-1),G9t=t("td",{style:{"text-align":"left"}},"执行操作使两个字符串相等",-1),H9t=t("td",{style:{"text-align":"center"}},null,-1),T9t={style:{"text-align":"left"}},Q9t=t("code",null,"字符串",-1),Z9t=t("code",null,"动态规划",-1),$9t=t("td",{style:{"text-align":"left"}},"🟠",-1),t8t={style:{"text-align":"center"}},e8t={href:"https://leetcode.cn/problems/apply-operations-to-make-two-strings-equal",target:"_blank",rel:"noopener noreferrer"},o8t={href:"https://leetcode.com/problems/apply-operations-to-make-two-strings-equal",target:"_blank",rel:"noopener noreferrer"},l8t=t("td",{style:{"text-align":"center"}},"2900",-1),n8t=t("td",{style:{"text-align":"left"}},"最长相邻不相等子序列 I",-1),s8t=t("td",{style:{"text-align":"center"}},null,-1),r8t={style:{"text-align":"left"}},d8t=t("code",null,"贪心",-1),_8t=t("code",null,"数组",-1),a8t=t("code",null,"字符串",-1),i8t=t("code",null,"1+",-1),c8t=t("td",{style:{"text-align":"left"}},"🟢",-1),h8t={style:{"text-align":"center"}},g8t={href:"https://leetcode.cn/problems/longest-unequal-adjacent-groups-subsequence-i",target:"_blank",rel:"noopener noreferrer"},m8t={href:"https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-i",target:"_blank",rel:"noopener noreferrer"},f8t=t("td",{style:{"text-align":"center"}},"2901",-1),u8t=t("td",{style:{"text-align":"left"}},"最长相邻不相等子序列 II",-1),y8t=t("td",{style:{"text-align":"center"}},null,-1),p8t={style:{"text-align":"left"}},x8t=t("code",null,"数组",-1),b8t=t("code",null,"字符串",-1),k8t=t("code",null,"动态规划",-1),w8t=t("td",{style:{"text-align":"left"}},"🟠",-1),v8t={style:{"text-align":"center"}},I8t={href:"https://leetcode.cn/problems/longest-unequal-adjacent-groups-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},q8t={href:"https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},z8t=t("td",{style:{"text-align":"center"}},"2902",-1),j8t=t("td",{style:{"text-align":"left"}},"和带限制的子多重集合的数目",-1),C8t=t("td",{style:{"text-align":"center"}},null,-1),O8t={style:{"text-align":"left"}},L8t=t("code",null,"数组",-1),P8t=t("code",null,"哈希表",-1),K8t=t("code",null,"动态规划",-1),V8t=t("code",null,"1+",-1),N8t=t("td",{style:{"text-align":"left"}},"🔴",-1),D8t={style:{"text-align":"center"}},E8t={href:"https://leetcode.cn/problems/count-of-sub-multisets-with-bounded-sum",target:"_blank",rel:"noopener noreferrer"},B8t={href:"https://leetcode.com/problems/count-of-sub-multisets-with-bounded-sum",target:"_blank",rel:"noopener noreferrer"},M8t=t("td",{style:{"text-align":"center"}},"2911",-1),Y8t=t("td",{style:{"text-align":"left"}},"得到 K 个半回文串的最少修改次数",-1),A8t=t("td",{style:{"text-align":"center"}},null,-1),J8t={style:{"text-align":"left"}},R8t=t("code",null,"双指针",-1),S8t=t("code",null,"字符串",-1),U8t=t("code",null,"动态规划",-1),W8t=t("td",{style:{"text-align":"left"}},"🔴",-1),X8t={style:{"text-align":"center"}},F8t={href:"https://leetcode.cn/problems/minimum-changes-to-make-k-semi-palindromes",target:"_blank",rel:"noopener noreferrer"},G8t={href:"https://leetcode.com/problems/minimum-changes-to-make-k-semi-palindromes",target:"_blank",rel:"noopener noreferrer"},H8t=t("td",{style:{"text-align":"center"}},"2912",-1),T8t=t("td",{style:{"text-align":"left"}},"在网格上移动到目的地的方法数 🔒",-1),Q8t=t("td",{style:{"text-align":"center"}},null,-1),Z8t={style:{"text-align":"left"}},$8t=t("code",null,"数学",-1),tkt=t("code",null,"动态规划",-1),ekt=t("code",null,"组合数学",-1),okt=t("td",{style:{"text-align":"left"}},"🔴",-1),lkt={style:{"text-align":"center"}},nkt={href:"https://leetcode.cn/problems/number-of-ways-to-reach-destination-in-the-grid",target:"_blank",rel:"noopener noreferrer"},skt={href:"https://leetcode.com/problems/number-of-ways-to-reach-destination-in-the-grid",target:"_blank",rel:"noopener noreferrer"},rkt=t("td",{style:{"text-align":"center"}},"2915",-1),dkt=t("td",{style:{"text-align":"left"}},"和为目标值的最长子序列的长度",-1),_kt=t("td",{style:{"text-align":"center"}},null,-1),akt={style:{"text-align":"left"}},ikt=t("code",null,"数组",-1),ckt=t("code",null,"动态规划",-1),hkt=t("td",{style:{"text-align":"left"}},"🟠",-1),gkt={style:{"text-align":"center"}},mkt={href:"https://leetcode.cn/problems/length-of-the-longest-subsequence-that-sums-to-target",target:"_blank",rel:"noopener noreferrer"},fkt={href:"https://leetcode.com/problems/length-of-the-longest-subsequence-that-sums-to-target",target:"_blank",rel:"noopener noreferrer"},ukt=t("td",{style:{"text-align":"center"}},"2916",-1),ykt=t("td",{style:{"text-align":"left"}},"子数组不同元素数目的平方和 II",-1),pkt=t("td",{style:{"text-align":"center"}},null,-1),xkt={style:{"text-align":"left"}},bkt=t("code",null,"树状数组",-1),kkt=t("code",null,"线段树",-1),wkt=t("code",null,"数组",-1),vkt=t("code",null,"1+",-1),Ikt=t("td",{style:{"text-align":"left"}},"🔴",-1),qkt={style:{"text-align":"center"}},zkt={href:"https://leetcode.cn/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},jkt={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},Ckt=t("td",{style:{"text-align":"center"}},"2919",-1),Okt=t("td",{style:{"text-align":"left"}},"使数组变美的最小增量运算数",-1),Lkt=t("td",{style:{"text-align":"center"}},null,-1),Pkt={style:{"text-align":"left"}},Kkt=t("code",null,"数组",-1),Vkt=t("code",null,"动态规划",-1),Nkt=t("td",{style:{"text-align":"left"}},"🟠",-1),Dkt={style:{"text-align":"center"}},Ekt={href:"https://leetcode.cn/problems/minimum-increment-operations-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},Bkt={href:"https://leetcode.com/problems/minimum-increment-operations-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},Mkt=t("td",{style:{"text-align":"center"}},"2920",-1),Ykt=t("td",{style:{"text-align":"left"}},"收集所有金币可获得的最大积分",-1),Akt=t("td",{style:{"text-align":"center"}},null,-1),Jkt={style:{"text-align":"left"}},Rkt=t("code",null,"位运算",-1),Skt=t("code",null,"树",-1),Ukt=t("code",null,"深度优先搜索",-1),Wkt=t("code",null,"2+",-1),Xkt=t("td",{style:{"text-align":"left"}},"🔴",-1),Fkt={style:{"text-align":"center"}},Gkt={href:"https://leetcode.cn/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},Hkt={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},Tkt=t("td",{style:{"text-align":"center"}},"2925",-1),Qkt=t("td",{style:{"text-align":"left"}},"在树上执行操作以后得到的最大分数",-1),Zkt=t("td",{style:{"text-align":"center"}},null,-1),$kt={style:{"text-align":"left"}},twt=t("code",null,"树",-1),ewt=t("code",null,"深度优先搜索",-1),owt=t("code",null,"动态规划",-1),lwt=t("td",{style:{"text-align":"left"}},"🟠",-1),nwt={style:{"text-align":"center"}},swt={href:"https://leetcode.cn/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},rwt={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},dwt=t("td",{style:{"text-align":"center"}},"2926",-1),_wt=t("td",{style:{"text-align":"left"}},"平衡子序列的最大和",-1),awt=t("td",{style:{"text-align":"center"}},null,-1),iwt={style:{"text-align":"left"}},cwt=t("code",null,"树状数组",-1),hwt=t("code",null,"线段树",-1),gwt=t("code",null,"数组",-1),mwt=t("code",null,"2+",-1),fwt=t("td",{style:{"text-align":"left"}},"🔴",-1),uwt={style:{"text-align":"center"}},ywt={href:"https://leetcode.cn/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},pwt={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},xwt=t("td",{style:{"text-align":"center"}},"2930",-1),bwt=t("td",{style:{"text-align":"left"}},"重新排列后包含指定子字符串的字符串数目",-1),kwt=t("td",{style:{"text-align":"center"}},null,-1),wwt={style:{"text-align":"left"}},vwt=t("code",null,"数学",-1),Iwt=t("code",null,"动态规划",-1),qwt=t("code",null,"组合数学",-1),zwt=t("td",{style:{"text-align":"left"}},"🟠",-1),jwt={style:{"text-align":"center"}},Cwt={href:"https://leetcode.cn/problems/number-of-strings-which-can-be-rearranged-to-contain-substring",target:"_blank",rel:"noopener noreferrer"},Owt={href:"https://leetcode.com/problems/number-of-strings-which-can-be-rearranged-to-contain-substring",target:"_blank",rel:"noopener noreferrer"},Lwt=t("td",{style:{"text-align":"center"}},"2944",-1),Pwt=t("td",{style:{"text-align":"left"}},"购买水果需要的最少金币数",-1),Kwt=t("td",{style:{"text-align":"center"}},null,-1),Vwt={style:{"text-align":"left"}},Nwt=t("code",null,"队列",-1),Dwt=t("code",null,"数组",-1),Ewt=t("code",null,"动态规划",-1),Bwt=t("code",null,"2+",-1),Mwt=t("td",{style:{"text-align":"left"}},"🟠",-1),Ywt={style:{"text-align":"center"}},Awt={href:"https://leetcode.cn/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},Jwt={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},Rwt=t("td",{style:{"text-align":"center"}},"2945",-1),Swt=t("td",{style:{"text-align":"left"}},"找到最大非递减数组的长度",-1),Uwt=t("td",{style:{"text-align":"center"}},null,-1),Wwt={style:{"text-align":"left"}},Xwt=t("code",null,"栈",-1),Fwt=t("code",null,"队列",-1),Gwt=t("code",null,"数组",-1),Hwt=t("code",null,"4+",-1),Twt=t("td",{style:{"text-align":"left"}},"🔴",-1),Qwt={style:{"text-align":"center"}},Zwt={href:"https://leetcode.cn/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},$wt={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},tvt=t("td",{style:{"text-align":"center"}},"2957",-1),evt=t("td",{style:{"text-align":"left"}},"消除相邻近似相等字符",-1),ovt=t("td",{style:{"text-align":"center"}},null,-1),lvt={style:{"text-align":"left"}},nvt=t("code",null,"贪心",-1),svt=t("code",null,"字符串",-1),rvt=t("code",null,"动态规划",-1),dvt=t("td",{style:{"text-align":"left"}},"🟠",-1),_vt={style:{"text-align":"center"}},avt={href:"https://leetcode.cn/problems/remove-adjacent-almost-equal-characters",target:"_blank",rel:"noopener noreferrer"},ivt={href:"https://leetcode.com/problems/remove-adjacent-almost-equal-characters",target:"_blank",rel:"noopener noreferrer"},cvt=t("td",{style:{"text-align":"center"}},"2969",-1),hvt=t("td",{style:{"text-align":"left"}},"购买水果需要的最少金币数 II 🔒",-1),gvt=t("td",{style:{"text-align":"center"}},null,-1),mvt={style:{"text-align":"left"}},fvt=t("code",null,"队列",-1),uvt=t("code",null,"数组",-1),yvt=t("code",null,"动态规划",-1),pvt=t("code",null,"2+",-1),xvt=t("td",{style:{"text-align":"left"}},"🔴",-1),bvt={style:{"text-align":"center"}},kvt={href:"https://leetcode.cn/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},wvt={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},vvt=t("td",{style:{"text-align":"center"}},"2973",-1),Ivt=t("td",{style:{"text-align":"left"}},"树中每个节点放置的金币数目",-1),qvt=t("td",{style:{"text-align":"center"}},null,-1),zvt={style:{"text-align":"left"}},jvt=t("code",null,"树",-1),Cvt=t("code",null,"深度优先搜索",-1),Ovt=t("code",null,"动态规划",-1),Lvt=t("code",null,"2+",-1),Pvt=t("td",{style:{"text-align":"left"}},"🔴",-1),Kvt={style:{"text-align":"center"}},Vvt={href:"https://leetcode.cn/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},Nvt={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},Dvt=t("td",{style:{"text-align":"center"}},"2977",-1),Evt=t("td",{style:{"text-align":"left"}},"转换字符串的最小成本 II",-1),Bvt=t("td",{style:{"text-align":"center"}},null,-1),Mvt={style:{"text-align":"left"}},Yvt=t("code",null,"图",-1),Avt=t("code",null,"字典树",-1),Jvt=t("code",null,"数组",-1),Rvt=t("code",null,"3+",-1),Svt=t("td",{style:{"text-align":"left"}},"🔴",-1),Uvt={style:{"text-align":"center"}},Wvt={href:"https://leetcode.cn/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},Xvt={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},Fvt=t("td",{style:{"text-align":"center"}},"2979",-1),Gvt=t("td",{style:{"text-align":"left"}},"最贵的无法购买的商品 🔒",-1),Hvt=t("td",{style:{"text-align":"center"}},null,-1),Tvt={style:{"text-align":"left"}},Qvt=t("code",null,"数学",-1),Zvt=t("code",null,"动态规划",-1),$vt=t("code",null,"数论",-1),tIt=t("td",{style:{"text-align":"left"}},"🟠",-1),eIt={style:{"text-align":"center"}},oIt={href:"https://leetcode.cn/problems/most-expensive-item-that-can-not-be-bought",target:"_blank",rel:"noopener noreferrer"},lIt={href:"https://leetcode.com/problems/most-expensive-item-that-can-not-be-bought",target:"_blank",rel:"noopener noreferrer"},nIt=t("td",{style:{"text-align":"center"}},"2992",-1),sIt=t("td",{style:{"text-align":"left"}},"自整除排列的数量 🔒",-1),rIt=t("td",{style:{"text-align":"center"}},null,-1),dIt={style:{"text-align":"left"}},_It=t("code",null,"位运算",-1),aIt=t("code",null,"数组",-1),iIt=t("code",null,"动态规划",-1),cIt=t("code",null,"2+",-1),hIt=t("td",{style:{"text-align":"left"}},"🟠",-1),gIt={style:{"text-align":"center"}},mIt={href:"https://leetcode.cn/problems/number-of-self-divisible-permutations",target:"_blank",rel:"noopener noreferrer"},fIt={href:"https://leetcode.com/problems/number-of-self-divisible-permutations",target:"_blank",rel:"noopener noreferrer"},uIt=t("td",{style:{"text-align":"center"}},"2998",-1),yIt=t("td",{style:{"text-align":"left"}},"使 X 和 Y 相等的最少操作次数",-1),pIt=t("td",{style:{"text-align":"center"}},null,-1),xIt={style:{"text-align":"left"}},bIt=t("code",null,"广度优先搜索",-1),kIt=t("code",null,"记忆化搜索",-1),wIt=t("code",null,"动态规划",-1),vIt=t("td",{style:{"text-align":"left"}},"🟠",-1),IIt={style:{"text-align":"center"}},qIt={href:"https://leetcode.cn/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},zIt={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},jIt=t("td",{style:{"text-align":"center"}},"2999",-1),CIt=t("td",{style:{"text-align":"left"}},"统计强大整数的数目",-1),OIt=t("td",{style:{"text-align":"center"}},null,-1),LIt={style:{"text-align":"left"}},PIt=t("code",null,"数学",-1),KIt=t("code",null,"字符串",-1),VIt=t("code",null,"动态规划",-1),NIt=t("td",{style:{"text-align":"left"}},"🔴",-1),DIt={style:{"text-align":"center"}},EIt={href:"https://leetcode.cn/problems/count-the-number-of-powerful-integers",target:"_blank",rel:"noopener noreferrer"},BIt={href:"https://leetcode.com/problems/count-the-number-of-powerful-integers",target:"_blank",rel:"noopener noreferrer"},MIt=t("td",{style:{"text-align":"center"}},"3003",-1),YIt=t("td",{style:{"text-align":"left"}},"执行操作后的最大分割数量",-1),AIt=t("td",{style:{"text-align":"center"}},null,-1),JIt={style:{"text-align":"left"}},RIt=t("code",null,"位运算",-1),SIt=t("code",null,"字符串",-1),UIt=t("code",null,"动态规划",-1),WIt=t("code",null,"1+",-1),XIt=t("td",{style:{"text-align":"left"}},"🔴",-1),FIt={style:{"text-align":"center"}},GIt={href:"https://leetcode.cn/problems/maximize-the-number-of-partitions-after-operations",target:"_blank",rel:"noopener noreferrer"},HIt={href:"https://leetcode.com/problems/maximize-the-number-of-partitions-after-operations",target:"_blank",rel:"noopener noreferrer"},TIt=t("td",{style:{"text-align":"center"}},"3004",-1),QIt=t("td",{style:{"text-align":"left"}},"相同颜色的最大子树 🔒",-1),ZIt=t("td",{style:{"text-align":"center"}},null,-1),$It={style:{"text-align":"left"}},tqt=t("code",null,"树",-1),eqt=t("code",null,"深度优先搜索",-1),oqt=t("code",null,"数组",-1),lqt=t("code",null,"1+",-1),nqt=t("td",{style:{"text-align":"left"}},"🟠",-1),sqt={style:{"text-align":"center"}},rqt={href:"https://leetcode.cn/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},dqt={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},_qt=t("td",{style:{"text-align":"center"}},"3007",-1),aqt=t("td",{style:{"text-align":"left"}},"价值和小于等于 K 的最大数字",-1),iqt=t("td",{style:{"text-align":"center"}},null,-1),cqt={style:{"text-align":"left"}},hqt=t("code",null,"位运算",-1),gqt=t("code",null,"二分查找",-1),mqt=t("code",null,"动态规划",-1),fqt=t("td",{style:{"text-align":"left"}},"🟠",-1),uqt={style:{"text-align":"center"}},yqt={href:"https://leetcode.cn/problems/maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},pqt={href:"https://leetcode.com/problems/maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},xqt=t("td",{style:{"text-align":"center"}},"3018",-1),bqt=t("td",{style:{"text-align":"left"}},"可处理的最大删除操作数 I 🔒",-1),kqt=t("td",{style:{"text-align":"center"}},null,-1),wqt={style:{"text-align":"left"}},vqt=t("code",null,"数组",-1),Iqt=t("code",null,"动态规划",-1),qqt=t("td",{style:{"text-align":"left"}},"🔴",-1),zqt={style:{"text-align":"center"}},jqt={href:"https://leetcode.cn/problems/maximum-number-of-removal-queries-that-can-be-processed-i",target:"_blank",rel:"noopener noreferrer"},Cqt={href:"https://leetcode.com/problems/maximum-number-of-removal-queries-that-can-be-processed-i",target:"_blank",rel:"noopener noreferrer"},Oqt=t("td",{style:{"text-align":"center"}},"3032",-1),Lqt=t("td",{style:{"text-align":"left"}},"统计各位数字都不同的数字个数 II 🔒",-1),Pqt=t("td",{style:{"text-align":"center"}},null,-1),Kqt={style:{"text-align":"left"}},Vqt=t("code",null,"哈希表",-1),Nqt=t("code",null,"数学",-1),Dqt=t("code",null,"动态规划",-1),Eqt=t("td",{style:{"text-align":"left"}},"🟢",-1),Bqt={style:{"text-align":"center"}},Mqt={href:"https://leetcode.cn/problems/count-numbers-with-unique-digits-ii",target:"_blank",rel:"noopener noreferrer"},Yqt={href:"https://leetcode.com/problems/count-numbers-with-unique-digits-ii",target:"_blank",rel:"noopener noreferrer"},Aqt=t("td",{style:{"text-align":"center"}},"3040",-1),Jqt=t("td",{style:{"text-align":"left"}},"相同分数的最大操作数目 II",-1),Rqt=t("td",{style:{"text-align":"center"}},null,-1),Sqt={style:{"text-align":"left"}},Uqt=t("code",null,"记忆化搜索",-1),Wqt=t("code",null,"数组",-1),Xqt=t("code",null,"动态规划",-1),Fqt=t("td",{style:{"text-align":"left"}},"🟠",-1),Gqt={style:{"text-align":"center"}},Hqt={href:"https://leetcode.cn/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},Tqt={href:"https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},Qqt=t("td",{style:{"text-align":"center"}},"3041",-1),Zqt=t("td",{style:{"text-align":"left"}},"修改数组后最大化数组中的连续元素数目",-1),$qt=t("td",{style:{"text-align":"center"}},null,-1),tzt={style:{"text-align":"left"}},ezt=t("code",null,"数组",-1),ozt=t("code",null,"动态规划",-1),lzt=t("code",null,"排序",-1),nzt=t("td",{style:{"text-align":"left"}},"🔴",-1),szt={style:{"text-align":"center"}},rzt={href:"https://leetcode.cn/problems/maximize-consecutive-elements-in-an-array-after-modification",target:"_blank",rel:"noopener noreferrer"},dzt={href:"https://leetcode.com/problems/maximize-consecutive-elements-in-an-array-after-modification",target:"_blank",rel:"noopener noreferrer"},_zt=t("td",{style:{"text-align":"center"}},"3068",-1),azt=t("td",{style:{"text-align":"left"}},"最大节点价值之和",-1),izt=t("td",{style:{"text-align":"center"}},null,-1),czt={style:{"text-align":"left"}},hzt=t("code",null,"贪心",-1),gzt=t("code",null,"位运算",-1),mzt=t("code",null,"树",-1),fzt=t("code",null,"3+",-1),uzt=t("td",{style:{"text-align":"left"}},"🔴",-1),yzt={style:{"text-align":"center"}},pzt={href:"https://leetcode.cn/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},xzt={href:"https://leetcode.com/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},bzt=t("td",{style:{"text-align":"center"}},"3077",-1),kzt=t("td",{style:{"text-align":"left"}},"K 个不相交子数组的最大能量值",-1),wzt=t("td",{style:{"text-align":"center"}},null,-1),vzt={style:{"text-align":"left"}},Izt=t("code",null,"数组",-1),qzt=t("code",null,"动态规划",-1),zzt=t("code",null,"前缀和",-1),jzt=t("td",{style:{"text-align":"left"}},"🔴",-1),Czt={style:{"text-align":"center"}},Ozt={href:"https://leetcode.cn/problems/maximum-strength-of-k-disjoint-subarrays",target:"_blank",rel:"noopener noreferrer"},Lzt={href:"https://leetcode.com/problems/maximum-strength-of-k-disjoint-subarrays",target:"_blank",rel:"noopener noreferrer"},Pzt=t("td",{style:{"text-align":"center"}},"3082",-1),Kzt=t("td",{style:{"text-align":"left"}},"求出所有子序列的能量和",-1),Vzt=t("td",{style:{"text-align":"center"}},null,-1),Nzt={style:{"text-align":"left"}},Dzt=t("code",null,"数组",-1),Ezt=t("code",null,"动态规划",-1),Bzt=t("td",{style:{"text-align":"left"}},"🔴",-1),Mzt={style:{"text-align":"center"}},Yzt={href:"https://leetcode.cn/problems/find-the-sum-of-the-power-of-all-subsequences",target:"_blank",rel:"noopener noreferrer"},Azt={href:"https://leetcode.com/problems/find-the-sum-of-the-power-of-all-subsequences",target:"_blank",rel:"noopener noreferrer"},Jzt=t("td",{style:{"text-align":"center"}},"3098",-1),Rzt=t("td",{style:{"text-align":"left"}},"求出所有子序列的能量和",-1),Szt=t("td",{style:{"text-align":"center"}},null,-1),Uzt={style:{"text-align":"left"}},Wzt=t("code",null,"数组",-1),Xzt=t("code",null,"动态规划",-1),Fzt=t("code",null,"排序",-1),Gzt=t("td",{style:{"text-align":"left"}},"🔴",-1),Hzt={style:{"text-align":"center"}},Tzt={href:"https://leetcode.cn/problems/find-the-sum-of-subsequence-powers",target:"_blank",rel:"noopener noreferrer"},Qzt={href:"https://leetcode.com/problems/find-the-sum-of-subsequence-powers",target:"_blank",rel:"noopener noreferrer"},Zzt=t("td",{style:{"text-align":"center"}},"3117",-1),$zt=t("td",{style:{"text-align":"left"}},"划分数组得到最小的值之和",-1),tjt=t("td",{style:{"text-align":"center"}},null,-1),ejt={style:{"text-align":"left"}},ojt=t("code",null,"位运算",-1),ljt=t("code",null,"线段树",-1),njt=t("code",null,"队列",-1),sjt=t("code",null,"3+",-1),rjt=t("td",{style:{"text-align":"left"}},"🔴",-1),djt={style:{"text-align":"center"}},_jt={href:"https://leetcode.cn/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},ajt={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},ijt=t("td",{style:{"text-align":"center"}},"3122",-1),cjt=t("td",{style:{"text-align":"left"}},"使矩阵满足条件的最少操作次数",-1),hjt=t("td",{style:{"text-align":"center"}},null,-1),gjt={style:{"text-align":"left"}},mjt=t("code",null,"数组",-1),fjt=t("code",null,"动态规划",-1),ujt=t("code",null,"矩阵",-1),yjt=t("td",{style:{"text-align":"left"}},"🟠",-1),pjt={style:{"text-align":"center"}},xjt={href:"https://leetcode.cn/problems/minimum-number-of-operations-to-satisfy-conditions",target:"_blank",rel:"noopener noreferrer"},bjt={href:"https://leetcode.com/problems/minimum-number-of-operations-to-satisfy-conditions",target:"_blank",rel:"noopener noreferrer"},kjt=t("td",{style:{"text-align":"center"}},"3129",-1),wjt=t("td",{style:{"text-align":"left"}},"找出所有稳定的二进制数组 I",-1),vjt=t("td",{style:{"text-align":"center"}},null,-1),Ijt={style:{"text-align":"left"}},qjt=t("code",null,"动态规划",-1),zjt=t("code",null,"前缀和",-1),jjt=t("td",{style:{"text-align":"left"}},"🟠",-1),Cjt={style:{"text-align":"center"}},Ojt={href:"https://leetcode.cn/problems/find-all-possible-stable-binary-arrays-i",target:"_blank",rel:"noopener noreferrer"},Ljt={href:"https://leetcode.com/problems/find-all-possible-stable-binary-arrays-i",target:"_blank",rel:"noopener noreferrer"},Pjt=t("td",{style:{"text-align":"center"}},"3130",-1),Kjt=t("td",{style:{"text-align":"left"}},"找出所有稳定的二进制数组 II",-1),Vjt=t("td",{style:{"text-align":"center"}},null,-1),Njt={style:{"text-align":"left"}},Djt=t("code",null,"动态规划",-1),Ejt=t("code",null,"前缀和",-1),Bjt=t("td",{style:{"text-align":"left"}},"🔴",-1),Mjt={style:{"text-align":"center"}},Yjt={href:"https://leetcode.cn/problems/find-all-possible-stable-binary-arrays-ii",target:"_blank",rel:"noopener noreferrer"},Ajt={href:"https://leetcode.com/problems/find-all-possible-stable-binary-arrays-ii",target:"_blank",rel:"noopener noreferrer"},Jjt=t("td",{style:{"text-align":"center"}},"3135",-1),Rjt=t("td",{style:{"text-align":"left"}},"通过添加或删除结尾字符来同化字符串 🔒",-1),Sjt=t("td",{style:{"text-align":"center"}},null,-1),Ujt={style:{"text-align":"left"}},Wjt=t("code",null,"字符串",-1),Xjt=t("code",null,"二分查找",-1),Fjt=t("code",null,"动态规划",-1),Gjt=t("code",null,"2+",-1),Hjt=t("td",{style:{"text-align":"left"}},"🟠",-1),Tjt={style:{"text-align":"center"}},Qjt={href:"https://leetcode.cn/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},Zjt={href:"https://leetcode.com/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},$jt=t("td",{style:{"text-align":"center"}},"3144",-1),tCt=t("td",{style:{"text-align":"left"}},"分割字符频率相等的最少子字符串",-1),eCt=t("td",{style:{"text-align":"center"}},null,-1),oCt={style:{"text-align":"left"}},lCt=t("code",null,"哈希表",-1),nCt=t("code",null,"字符串",-1),sCt=t("code",null,"动态规划",-1),rCt=t("code",null,"1+",-1),dCt=t("td",{style:{"text-align":"left"}},"🟠",-1),_Ct={style:{"text-align":"center"}},aCt={href:"https://leetcode.cn/problems/minimum-substring-partition-of-equal-character-frequency",target:"_blank",rel:"noopener noreferrer"},iCt={href:"https://leetcode.com/problems/minimum-substring-partition-of-equal-character-frequency",target:"_blank",rel:"noopener noreferrer"},cCt=t("td",{style:{"text-align":"center"}},"3148",-1),hCt=t("td",{style:{"text-align":"left"}},"矩阵中的最大得分",-1),gCt=t("td",{style:{"text-align":"center"}},null,-1),mCt={style:{"text-align":"left"}},fCt=t("code",null,"数组",-1),uCt=t("code",null,"动态规划",-1),yCt=t("code",null,"矩阵",-1),pCt=t("td",{style:{"text-align":"left"}},"🟠",-1),xCt={style:{"text-align":"center"}},bCt={href:"https://leetcode.cn/problems/maximum-difference-score-in-a-grid",target:"_blank",rel:"noopener noreferrer"},kCt={href:"https://leetcode.com/problems/maximum-difference-score-in-a-grid",target:"_blank",rel:"noopener noreferrer"},wCt=t("td",{style:{"text-align":"center"}},"3149",-1),vCt=t("td",{style:{"text-align":"left"}},"找出分数最低的排列",-1),ICt=t("td",{style:{"text-align":"center"}},null,-1),qCt={style:{"text-align":"left"}},zCt=t("code",null,"位运算",-1),jCt=t("code",null,"数组",-1),CCt=t("code",null,"动态规划",-1),OCt=t("code",null,"1+",-1),LCt=t("td",{style:{"text-align":"left"}},"🔴",-1),PCt={style:{"text-align":"center"}},KCt={href:"https://leetcode.cn/problems/find-the-minimum-cost-array-permutation",target:"_blank",rel:"noopener noreferrer"},VCt={href:"https://leetcode.com/problems/find-the-minimum-cost-array-permutation",target:"_blank",rel:"noopener noreferrer"},NCt=t("td",{style:{"text-align":"center"}},"3154",-1),DCt=t("td",{style:{"text-align":"left"}},"到达第 K 级台阶的方案数",-1),ECt=t("td",{style:{"text-align":"center"}},null,-1),BCt={style:{"text-align":"left"}},MCt=t("code",null,"位运算",-1),YCt=t("code",null,"记忆化搜索",-1),ACt=t("code",null,"数学",-1),JCt=t("code",null,"2+",-1),RCt=t("td",{style:{"text-align":"left"}},"🔴",-1),SCt={style:{"text-align":"center"}},UCt={href:"https://leetcode.cn/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},WCt={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},XCt=t("td",{style:{"text-align":"center"}},"3165",-1),FCt=t("td",{style:{"text-align":"left"}},"不包含相邻元素的子序列的最大和",-1),GCt=t("td",{style:{"text-align":"center"}},null,-1),HCt={style:{"text-align":"left"}},TCt=t("code",null,"线段树",-1),QCt=t("code",null,"数组",-1),ZCt=t("code",null,"分治",-1),$Ct=t("code",null,"1+",-1),tOt=t("td",{style:{"text-align":"left"}},"🔴",-1),eOt={style:{"text-align":"center"}},oOt={href:"https://leetcode.cn/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},lOt={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},nOt=t("td",{style:{"text-align":"center"}},"3176",-1),sOt=t("td",{style:{"text-align":"left"}},"求出最长好子序列 I",-1),rOt=t("td",{style:{"text-align":"center"}},null,-1),dOt={style:{"text-align":"left"}},_Ot=t("code",null,"数组",-1),aOt=t("code",null,"哈希表",-1),iOt=t("code",null,"动态规划",-1),cOt=t("td",{style:{"text-align":"left"}},"🟠",-1),hOt={style:{"text-align":"center"}},gOt={href:"https://leetcode.cn/problems/find-the-maximum-length-of-a-good-subsequence-i",target:"_blank",rel:"noopener noreferrer"},mOt={href:"https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-i",target:"_blank",rel:"noopener noreferrer"},fOt=t("td",{style:{"text-align":"center"}},"3177",-1),uOt=t("td",{style:{"text-align":"left"}},"求出最长好子序列 II",-1),yOt=t("td",{style:{"text-align":"center"}},null,-1),pOt={style:{"text-align":"left"}},xOt=t("code",null,"数组",-1),bOt=t("code",null,"哈希表",-1),kOt=t("code",null,"动态规划",-1),wOt=t("td",{style:{"text-align":"left"}},"🔴",-1),vOt={style:{"text-align":"center"}},IOt={href:"https://leetcode.cn/problems/find-the-maximum-length-of-a-good-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},qOt={href:"https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},zOt=t("td",{style:{"text-align":"center"}},"3180",-1),jOt=t("td",{style:{"text-align":"left"}},"执行操作可获得的最大总奖励 I",-1),COt=t("td",{style:{"text-align":"center"}},null,-1),OOt={style:{"text-align":"left"}},LOt=t("code",null,"数组",-1),POt=t("code",null,"动态规划",-1),KOt=t("td",{style:{"text-align":"left"}},"🟠",-1),VOt={style:{"text-align":"center"}},NOt={href:"https://leetcode.cn/problems/maximum-total-reward-using-operations-i",target:"_blank",rel:"noopener noreferrer"},DOt={href:"https://leetcode.com/problems/maximum-total-reward-using-operations-i",target:"_blank",rel:"noopener noreferrer"},EOt=t("td",{style:{"text-align":"center"}},"3181",-1),BOt=t("td",{style:{"text-align":"left"}},"执行操作可获得的最大总奖励 II",-1),MOt=t("td",{style:{"text-align":"center"}},null,-1),YOt={style:{"text-align":"left"}},AOt=t("code",null,"位运算",-1),JOt=t("code",null,"数组",-1),ROt=t("code",null,"动态规划",-1),SOt=t("td",{style:{"text-align":"left"}},"🔴",-1),UOt={style:{"text-align":"center"}},WOt={href:"https://leetcode.cn/problems/maximum-total-reward-using-operations-ii",target:"_blank",rel:"noopener noreferrer"},XOt={href:"https://leetcode.com/problems/maximum-total-reward-using-operations-ii",target:"_blank",rel:"noopener noreferrer"},FOt=t("td",{style:{"text-align":"center"}},"3183",-1),GOt=t("td",{style:{"text-align":"left"}},"达到总和的方法数量 🔒",-1),HOt=t("td",{style:{"text-align":"center"}},null,-1),TOt={style:{"text-align":"left"}},QOt=t("code",null,"数组",-1),ZOt=t("code",null,"动态规划",-1),$Ot=t("td",{style:{"text-align":"left"}},"🟠",-1),tLt={style:{"text-align":"center"}},eLt={href:"https://leetcode.cn/problems/the-number-of-ways-to-make-the-sum",target:"_blank",rel:"noopener noreferrer"},oLt={href:"https://leetcode.com/problems/the-number-of-ways-to-make-the-sum",target:"_blank",rel:"noopener noreferrer"},lLt=t("td",{style:{"text-align":"center"}},"3186",-1),nLt=t("td",{style:{"text-align":"left"}},"施咒的最大总伤害",-1),sLt=t("td",{style:{"text-align":"center"}},null,-1),rLt={style:{"text-align":"left"}},dLt=t("code",null,"数组",-1),_Lt=t("code",null,"哈希表",-1),aLt=t("code",null,"双指针",-1),iLt=t("code",null,"4+",-1),cLt=t("td",{style:{"text-align":"left"}},"🟠",-1),hLt={style:{"text-align":"center"}},gLt={href:"https://leetcode.cn/problems/maximum-total-damage-with-spell-casting",target:"_blank",rel:"noopener noreferrer"},mLt={href:"https://leetcode.com/problems/maximum-total-damage-with-spell-casting",target:"_blank",rel:"noopener noreferrer"},fLt=t("td",{style:{"text-align":"center"}},"3192",-1),uLt=t("td",{style:{"text-align":"left"}},"使二进制数组全部等于 1 的最少操作次数 II",-1),yLt=t("td",{style:{"text-align":"center"}},null,-1),pLt={style:{"text-align":"left"}},xLt=t("code",null,"贪心",-1),bLt=t("code",null,"数组",-1),kLt=t("code",null,"动态规划",-1),wLt=t("td",{style:{"text-align":"left"}},"🟠",-1),vLt={style:{"text-align":"center"}},ILt={href:"https://leetcode.cn/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-ii",target:"_blank",rel:"noopener noreferrer"},qLt={href:"https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-ii",target:"_blank",rel:"noopener noreferrer"},zLt=t("td",{style:{"text-align":"center"}},"3193",-1),jLt=t("td",{style:{"text-align":"left"}},"统计逆序对的数目",-1),CLt=t("td",{style:{"text-align":"center"}},null,-1),OLt={style:{"text-align":"left"}},LLt=t("code",null,"数组",-1),PLt=t("code",null,"动态规划",-1),KLt=t("td",{style:{"text-align":"left"}},"🔴",-1),VLt={style:{"text-align":"center"}},NLt={href:"https://leetcode.cn/problems/count-the-number-of-inversions",target:"_blank",rel:"noopener noreferrer"},DLt={href:"https://leetcode.com/problems/count-the-number-of-inversions",target:"_blank",rel:"noopener noreferrer"},ELt=t("td",{style:{"text-align":"center"}},"3196",-1),BLt=t("td",{style:{"text-align":"left"}},"最大化子数组的总成本",-1),MLt=t("td",{style:{"text-align":"center"}},null,-1),YLt={style:{"text-align":"left"}},ALt=t("code",null,"数组",-1),JLt=t("code",null,"动态规划",-1),RLt=t("td",{style:{"text-align":"left"}},"🟠",-1),SLt={style:{"text-align":"center"}},ULt={href:"https://leetcode.cn/problems/maximize-total-cost-of-alternating-subarrays",target:"_blank",rel:"noopener noreferrer"},WLt={href:"https://leetcode.com/problems/maximize-total-cost-of-alternating-subarrays",target:"_blank",rel:"noopener noreferrer"},XLt=t("td",{style:{"text-align":"center"}},"3201",-1),FLt=t("td",{style:{"text-align":"left"}},"找出有效子序列的最大长度 I",-1),GLt=t("td",{style:{"text-align":"center"}},null,-1),HLt={style:{"text-align":"left"}},TLt=t("code",null,"数组",-1),QLt=t("code",null,"动态规划",-1),ZLt=t("td",{style:{"text-align":"left"}},"🟠",-1),$Lt={style:{"text-align":"center"}},tPt={href:"https://leetcode.cn/problems/find-the-maximum-length-of-valid-subsequence-i",target:"_blank",rel:"noopener noreferrer"},ePt={href:"https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-i",target:"_blank",rel:"noopener noreferrer"},oPt=t("td",{style:{"text-align":"center"}},"3202",-1),lPt=t("td",{style:{"text-align":"left"}},"找出有效子序列的最大长度 II",-1),nPt=t("td",{style:{"text-align":"center"}},null,-1),sPt={style:{"text-align":"left"}},rPt=t("code",null,"数组",-1),dPt=t("code",null,"动态规划",-1),_Pt=t("td",{style:{"text-align":"left"}},"🟠",-1),aPt={style:{"text-align":"center"}},iPt={href:"https://leetcode.cn/problems/find-the-maximum-length-of-valid-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},cPt={href:"https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},hPt=t("td",{style:{"text-align":"center"}},"3205",-1),gPt=t("td",{style:{"text-align":"left"}},"最大数组跳跃得分 I 🔒",-1),mPt=t("td",{style:{"text-align":"center"}},null,-1),fPt={style:{"text-align":"left"}},uPt=t("code",null,"栈",-1),yPt=t("code",null,"贪心",-1),pPt=t("code",null,"数组",-1),xPt=t("code",null,"2+",-1),bPt=t("td",{style:{"text-align":"left"}},"🟠",-1),kPt={style:{"text-align":"center"}},wPt={href:"https://leetcode.cn/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},vPt={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},IPt=t("td",{style:{"text-align":"center"}},"3213",-1),qPt=t("td",{style:{"text-align":"left"}},"最小代价构造字符串",-1),zPt=t("td",{style:{"text-align":"center"}},null,-1),jPt={style:{"text-align":"left"}},CPt=t("code",null,"数组",-1),OPt=t("code",null,"字符串",-1),LPt=t("code",null,"动态规划",-1),PPt=t("code",null,"1+",-1),KPt=t("td",{style:{"text-align":"left"}},"🔴",-1),VPt={style:{"text-align":"center"}},NPt={href:"https://leetcode.cn/problems/construct-string-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},DPt={href:"https://leetcode.com/problems/construct-string-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},EPt=t("td",{style:{"text-align":"center"}},"3218",-1),BPt=t("td",{style:{"text-align":"left"}},"切蛋糕的最小总开销 I",-1),MPt=t("td",{style:{"text-align":"center"}},null,-1),YPt={style:{"text-align":"left"}},APt=t("code",null,"贪心",-1),JPt=t("code",null,"数组",-1),RPt=t("code",null,"动态规划",-1),SPt=t("code",null,"1+",-1),UPt=t("td",{style:{"text-align":"left"}},"🟠",-1),WPt={style:{"text-align":"center"}},XPt={href:"https://leetcode.cn/problems/minimum-cost-for-cutting-cake-i",target:"_blank",rel:"noopener noreferrer"},FPt={href:"https://leetcode.com/problems/minimum-cost-for-cutting-cake-i",target:"_blank",rel:"noopener noreferrer"},GPt=t("td",{style:{"text-align":"center"}},"3225",-1),HPt=t("td",{style:{"text-align":"left"}},"网格图操作后的最大分数",-1),TPt=t("td",{style:{"text-align":"center"}},null,-1),QPt={style:{"text-align":"left"}},ZPt=t("code",null,"数组",-1),$Pt=t("code",null,"动态规划",-1),tKt=t("code",null,"矩阵",-1),eKt=t("code",null,"1+",-1),oKt=t("td",{style:{"text-align":"left"}},"🔴",-1),lKt={style:{"text-align":"center"}},nKt={href:"https://leetcode.cn/problems/maximum-score-from-grid-operations",target:"_blank",rel:"noopener noreferrer"},sKt={href:"https://leetcode.com/problems/maximum-score-from-grid-operations",target:"_blank",rel:"noopener noreferrer"},rKt=t("td",{style:{"text-align":"center"}},"3229",-1),dKt=t("td",{style:{"text-align":"left"}},"使数组等于目标数组所需的最少操作次数",-1),_Kt=t("td",{style:{"text-align":"center"}},null,-1),aKt={style:{"text-align":"left"}},iKt=t("code",null,"栈",-1),cKt=t("code",null,"贪心",-1),hKt=t("code",null,"数组",-1),gKt=t("code",null,"2+",-1),mKt=t("td",{style:{"text-align":"left"}},"🔴",-1),fKt={style:{"text-align":"center"}},uKt={href:"https://leetcode.cn/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},yKt={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},pKt=t("td",{style:{"text-align":"center"}},"3241",-1),xKt=t("td",{style:{"text-align":"left"}},"标记所有节点需要的时间",-1),bKt=t("td",{style:{"text-align":"center"}},null,-1),kKt={style:{"text-align":"left"}},wKt=t("code",null,"树",-1),vKt=t("code",null,"深度优先搜索",-1),IKt=t("code",null,"图",-1),qKt=t("code",null,"1+",-1),zKt=t("td",{style:{"text-align":"left"}},"🔴",-1),jKt={style:{"text-align":"center"}},CKt={href:"https://leetcode.cn/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},OKt={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},LKt=t("td",{style:{"text-align":"center"}},"3247",-1),PKt=t("td",{style:{"text-align":"left"}},"奇数和子序列的数量 🔒",-1),KKt=t("td",{style:{"text-align":"center"}},null,-1),VKt={style:{"text-align":"left"}},NKt=t("code",null,"数组",-1),DKt=t("code",null,"数学",-1),EKt=t("code",null,"动态规划",-1),BKt=t("code",null,"1+",-1),MKt=t("td",{style:{"text-align":"left"}},"🟠",-1),YKt={style:{"text-align":"center"}},AKt={href:"https://leetcode.cn/problems/number-of-subsequences-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},JKt={href:"https://leetcode.com/problems/number-of-subsequences-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},RKt=t("td",{style:{"text-align":"center"}},"3250",-1),SKt=t("td",{style:{"text-align":"left"}},"单调数组对的数目 I",-1),UKt=t("td",{style:{"text-align":"center"}},null,-1),WKt={style:{"text-align":"left"}},XKt=t("code",null,"数组",-1),FKt=t("code",null,"数学",-1),GKt=t("code",null,"动态规划",-1),HKt=t("code",null,"2+",-1),TKt=t("td",{style:{"text-align":"left"}},"🔴",-1),QKt={style:{"text-align":"center"}},ZKt={href:"https://leetcode.cn/problems/find-the-count-of-monotonic-pairs-i",target:"_blank",rel:"noopener noreferrer"},$Kt={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-i",target:"_blank",rel:"noopener noreferrer"},tVt=t("td",{style:{"text-align":"center"}},"3251",-1),eVt=t("td",{style:{"text-align":"left"}},"单调数组对的数目 II",-1),oVt=t("td",{style:{"text-align":"center"}},null,-1),lVt={style:{"text-align":"left"}},nVt=t("code",null,"数组",-1),sVt=t("code",null,"数学",-1),rVt=t("code",null,"动态规划",-1),dVt=t("code",null,"2+",-1),_Vt=t("td",{style:{"text-align":"left"}},"🔴",-1),aVt={style:{"text-align":"center"}},iVt={href:"https://leetcode.cn/problems/find-the-count-of-monotonic-pairs-ii",target:"_blank",rel:"noopener noreferrer"},cVt={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-ii",target:"_blank",rel:"noopener noreferrer"},hVt=t("td",{style:{"text-align":"center"}},"3256",-1),gVt=t("td",{style:{"text-align":"left"}},"放三个车的价值之和最大 I",-1),mVt=t("td",{style:{"text-align":"center"}},null,-1),fVt={style:{"text-align":"left"}},uVt=t("code",null,"数组",-1),yVt=t("code",null,"动态规划",-1),pVt=t("code",null,"枚举",-1),xVt=t("code",null,"1+",-1),bVt=t("td",{style:{"text-align":"left"}},"🔴",-1),kVt={style:{"text-align":"center"}},wVt={href:"https://leetcode.cn/problems/maximum-value-sum-by-placing-three-rooks-i",target:"_blank",rel:"noopener noreferrer"},vVt={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-i",target:"_blank",rel:"noopener noreferrer"},IVt=t("td",{style:{"text-align":"center"}},"3257",-1),qVt=t("td",{style:{"text-align":"left"}},"放三个车的价值之和最大 II",-1),zVt=t("td",{style:{"text-align":"center"}},null,-1),jVt={style:{"text-align":"left"}},CVt=t("code",null,"数组",-1),OVt=t("code",null,"动态规划",-1),LVt=t("code",null,"枚举",-1),PVt=t("code",null,"1+",-1),KVt=t("td",{style:{"text-align":"left"}},"🔴",-1),VVt={style:{"text-align":"center"}},NVt={href:"https://leetcode.cn/problems/maximum-value-sum-by-placing-three-rooks-ii",target:"_blank",rel:"noopener noreferrer"},DVt={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-ii",target:"_blank",rel:"noopener noreferrer"},EVt=t("td",{style:{"text-align":"center"}},"3259",-1),BVt=t("td",{style:{"text-align":"left"}},"超级饮料的最大强化能量",-1),MVt=t("td",{style:{"text-align":"center"}},null,-1),YVt={style:{"text-align":"left"}},AVt=t("code",null,"数组",-1),JVt=t("code",null,"动态规划",-1),RVt=t("td",{style:{"text-align":"left"}},"🟠",-1),SVt={style:{"text-align":"center"}},UVt={href:"https://leetcode.cn/problems/maximum-energy-boost-from-two-drinks",target:"_blank",rel:"noopener noreferrer"},WVt={href:"https://leetcode.com/problems/maximum-energy-boost-from-two-drinks",target:"_blank",rel:"noopener noreferrer"},XVt=t("td",{style:{"text-align":"center"}},"3260",-1),FVt=t("td",{style:{"text-align":"left"}},"找出最大的 N 位 K 回文数",-1),GVt=t("td",{style:{"text-align":"center"}},null,-1),HVt={style:{"text-align":"left"}},TVt=t("code",null,"贪心",-1),QVt=t("code",null,"数学",-1),ZVt=t("code",null,"字符串",-1),$Vt=t("code",null,"2+",-1),tNt=t("td",{style:{"text-align":"left"}},"🔴",-1),eNt={style:{"text-align":"center"}},oNt={href:"https://leetcode.cn/problems/find-the-largest-palindrome-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},lNt={href:"https://leetcode.com/problems/find-the-largest-palindrome-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},nNt=t("td",{style:{"text-align":"center"}},"3269",-1),sNt=t("td",{style:{"text-align":"left"}},"构建两个递增数组 🔒",-1),rNt=t("td",{style:{"text-align":"center"}},null,-1),dNt={style:{"text-align":"left"}},_Nt=t("code",null,"数组",-1),aNt=t("code",null,"动态规划",-1),iNt=t("td",{style:{"text-align":"left"}},"🔴",-1),cNt={style:{"text-align":"center"}},hNt={href:"https://leetcode.cn/problems/constructing-two-increasing-arrays",target:"_blank",rel:"noopener noreferrer"},gNt={href:"https://leetcode.com/problems/constructing-two-increasing-arrays",target:"_blank",rel:"noopener noreferrer"},mNt=t("td",{style:{"text-align":"center"}},"3276",-1),fNt=t("td",{style:{"text-align":"left"}},"选择矩阵中单元格的最大得分",-1),uNt=t("td",{style:{"text-align":"center"}},null,-1),yNt={style:{"text-align":"left"}},pNt=t("code",null,"位运算",-1),xNt=t("code",null,"数组",-1),bNt=t("code",null,"动态规划",-1),kNt=t("code",null,"2+",-1),wNt=t("td",{style:{"text-align":"left"}},"🔴",-1),vNt={style:{"text-align":"center"}},INt={href:"https://leetcode.cn/problems/select-cells-in-grid-with-maximum-score",target:"_blank",rel:"noopener noreferrer"},qNt={href:"https://leetcode.com/problems/select-cells-in-grid-with-maximum-score",target:"_blank",rel:"noopener noreferrer"},zNt=t("td",{style:{"text-align":"center"}},"3277",-1),jNt=t("td",{style:{"text-align":"left"}},"查询子数组最大异或值",-1),CNt=t("td",{style:{"text-align":"center"}},null,-1),ONt={style:{"text-align":"left"}},LNt=t("code",null,"数组",-1),PNt=t("code",null,"动态规划",-1),KNt=t("td",{style:{"text-align":"left"}},"🔴",-1),VNt={style:{"text-align":"center"}},NNt={href:"https://leetcode.cn/problems/maximum-xor-score-subarray-queries",target:"_blank",rel:"noopener noreferrer"},DNt={href:"https://leetcode.com/problems/maximum-xor-score-subarray-queries",target:"_blank",rel:"noopener noreferrer"},ENt=t("td",{style:{"text-align":"center"}},"3284",-1),BNt=t("td",{style:{"text-align":"left"}},"连续子数组的和 🔒",-1),MNt=t("td",{style:{"text-align":"center"}},null,-1),YNt={style:{"text-align":"left"}},ANt=t("code",null,"数组",-1),JNt=t("code",null,"双指针",-1),RNt=t("code",null,"动态规划",-1),SNt=t("td",{style:{"text-align":"left"}},"🟠",-1),UNt={style:{"text-align":"center"}},WNt={href:"https://leetcode.cn/problems/sum-of-consecutive-subarrays",target:"_blank",rel:"noopener noreferrer"},XNt={href:"https://leetcode.com/problems/sum-of-consecutive-subarrays",target:"_blank",rel:"noopener noreferrer"},FNt=t("td",{style:{"text-align":"center"}},"3287",-1),GNt=t("td",{style:{"text-align":"left"}},"求出数组中最大序列值",-1),HNt=t("td",{style:{"text-align":"center"}},null,-1),TNt={style:{"text-align":"left"}},QNt=t("code",null,"位运算",-1),ZNt=t("code",null,"数组",-1),$Nt=t("code",null,"动态规划",-1),tDt=t("td",{style:{"text-align":"left"}},"🔴",-1),eDt={style:{"text-align":"center"}},oDt={href:"https://leetcode.cn/problems/find-the-maximum-sequence-value-of-array",target:"_blank",rel:"noopener noreferrer"},lDt={href:"https://leetcode.com/problems/find-the-maximum-sequence-value-of-array",target:"_blank",rel:"noopener noreferrer"},nDt=t("td",{style:{"text-align":"center"}},"3290",-1),sDt=t("td",{style:{"text-align":"left"}},"最高乘法得分",-1),rDt=t("td",{style:{"text-align":"center"}},null,-1),dDt={style:{"text-align":"left"}},_Dt=t("code",null,"数组",-1),aDt=t("code",null,"动态规划",-1),iDt=t("td",{style:{"text-align":"left"}},"🟠",-1),cDt={style:{"text-align":"center"}},hDt={href:"https://leetcode.cn/problems/maximum-multiplication-score",target:"_blank",rel:"noopener noreferrer"},gDt={href:"https://leetcode.com/problems/maximum-multiplication-score",target:"_blank",rel:"noopener noreferrer"},mDt=t("td",{style:{"text-align":"center"}},"3291",-1),fDt=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 I",-1),uDt=t("td",{style:{"text-align":"center"}},null,-1),yDt={style:{"text-align":"left"}},pDt=t("code",null,"字典树",-1),xDt=t("code",null,"线段树",-1),bDt=t("code",null,"数组",-1),kDt=t("code",null,"6+",-1),wDt=t("td",{style:{"text-align":"left"}},"🟠",-1),vDt={style:{"text-align":"center"}},IDt={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},qDt={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},zDt=t("td",{style:{"text-align":"center"}},"3292",-1),jDt=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 II",-1),CDt=t("td",{style:{"text-align":"center"}},null,-1),ODt={style:{"text-align":"left"}},LDt=t("code",null,"线段树",-1),PDt=t("code",null,"数组",-1),KDt=t("code",null,"字符串",-1),VDt=t("code",null,"5+",-1),NDt=t("td",{style:{"text-align":"left"}},"🔴",-1),DDt={style:{"text-align":"center"}},EDt={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},BDt={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},MDt=t("td",{style:{"text-align":"center"}},"3299",-1),YDt=t("td",{style:{"text-align":"left"}},"连续子序列的和 🔒",-1),ADt=t("td",{style:{"text-align":"center"}},null,-1),JDt={style:{"text-align":"left"}},RDt=t("code",null,"数组",-1),SDt=t("code",null,"哈希表",-1),UDt=t("code",null,"动态规划",-1),WDt=t("td",{style:{"text-align":"left"}},"🔴",-1),XDt={style:{"text-align":"center"}},FDt={href:"https://leetcode.cn/problems/sum-of-consecutive-subsequences",target:"_blank",rel:"noopener noreferrer"},GDt={href:"https://leetcode.com/problems/sum-of-consecutive-subsequences",target:"_blank",rel:"noopener noreferrer"},HDt=t("td",{style:{"text-align":"center"}},"3302",-1),TDt=t("td",{style:{"text-align":"left"}},"字典序最小的合法序列",-1),QDt=t("td",{style:{"text-align":"center"}},null,-1),ZDt={style:{"text-align":"left"}},$Dt=t("code",null,"贪心",-1),tEt=t("code",null,"双指针",-1),eEt=t("code",null,"字符串",-1),oEt=t("code",null,"1+",-1),lEt=t("td",{style:{"text-align":"left"}},"🟠",-1),nEt={style:{"text-align":"center"}},sEt={href:"https://leetcode.cn/problems/find-the-lexicographically-smallest-valid-sequence",target:"_blank",rel:"noopener noreferrer"},rEt={href:"https://leetcode.com/problems/find-the-lexicographically-smallest-valid-sequence",target:"_blank",rel:"noopener noreferrer"},dEt=t("td",{style:{"text-align":"center"}},"3316",-1),_Et=t("td",{style:{"text-align":"left"}},"从原字符串里进行删除操作的最多次数",-1),aEt=t("td",{style:{"text-align":"center"}},null,-1),iEt={style:{"text-align":"left"}},cEt=t("code",null,"数组",-1),hEt=t("code",null,"哈希表",-1),gEt=t("code",null,"双指针",-1),mEt=t("code",null,"2+",-1),fEt=t("td",{style:{"text-align":"left"}},"🟠",-1),uEt={style:{"text-align":"center"}},yEt={href:"https://leetcode.cn/problems/find-maximum-removals-from-source-string",target:"_blank",rel:"noopener noreferrer"},pEt={href:"https://leetcode.com/problems/find-maximum-removals-from-source-string",target:"_blank",rel:"noopener noreferrer"},xEt=t("td",{style:{"text-align":"center"}},"3317",-1),bEt=t("td",{style:{"text-align":"left"}},"安排活动的方案数",-1),kEt=t("td",{style:{"text-align":"center"}},null,-1),wEt={style:{"text-align":"left"}},vEt=t("code",null,"数学",-1),IEt=t("code",null,"动态规划",-1),qEt=t("code",null,"组合数学",-1),zEt=t("td",{style:{"text-align":"left"}},"🔴",-1),jEt={style:{"text-align":"center"}},CEt={href:"https://leetcode.cn/problems/find-the-number-of-possible-ways-for-an-event",target:"_blank",rel:"noopener noreferrer"},OEt={href:"https://leetcode.com/problems/find-the-number-of-possible-ways-for-an-event",target:"_blank",rel:"noopener noreferrer"},LEt=t("td",{style:{"text-align":"center"}},"3320",-1),PEt=t("td",{style:{"text-align":"left"}},"统计能获胜的出招序列数",-1),KEt=t("td",{style:{"text-align":"center"}},null,-1),VEt={style:{"text-align":"left"}},NEt=t("code",null,"字符串",-1),DEt=t("code",null,"动态规划",-1),EEt=t("td",{style:{"text-align":"left"}},"🔴",-1),BEt={style:{"text-align":"center"}},MEt={href:"https://leetcode.cn/problems/count-the-number-of-winning-sequences",target:"_blank",rel:"noopener noreferrer"},YEt={href:"https://leetcode.com/problems/count-the-number-of-winning-sequences",target:"_blank",rel:"noopener noreferrer"},AEt=t("td",{style:{"text-align":"center"}},"LCP 04",-1),JEt=t("td",{style:{"text-align":"left"}},"覆盖",-1),REt=t("td",{style:{"text-align":"center"}},null,-1),SEt={style:{"text-align":"left"}},UEt=t("code",null,"位运算",-1),WEt=t("code",null,"图",-1),XEt=t("code",null,"数组",-1),FEt=t("code",null,"2+",-1),GEt=t("td",{style:{"text-align":"left"}},"🔴",-1),HEt={style:{"text-align":"center"}},TEt={href:"https://leetcode.cn/problems/broken-board-dominoes",target:"_blank",rel:"noopener noreferrer"},QEt=t("td",{style:{"text-align":"center"}},"LCP 07",-1),ZEt=t("td",{style:{"text-align":"left"}},"传递信息",-1),$Et=t("td",{style:{"text-align":"center"}},null,-1),tBt={style:{"text-align":"left"}},eBt=t("code",null,"深度优先搜索",-1),oBt=t("code",null,"广度优先搜索",-1),lBt=t("code",null,"图",-1),nBt=t("code",null,"1+",-1),sBt=t("td",{style:{"text-align":"left"}},"🟢",-1),rBt={style:{"text-align":"center"}},dBt={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},_Bt=t("td",{style:{"text-align":"center"}},"LCP 09",-1),aBt=t("td",{style:{"text-align":"left"}},"最小跳跃次数",-1),iBt=t("td",{style:{"text-align":"center"}},null,-1),cBt={style:{"text-align":"left"}},hBt=t("code",null,"广度优先搜索",-1),gBt=t("code",null,"线段树",-1),mBt=t("code",null,"数组",-1),fBt=t("code",null,"1+",-1),uBt=t("td",{style:{"text-align":"left"}},"🔴",-1),yBt={style:{"text-align":"center"}},pBt={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},xBt=t("td",{style:{"text-align":"center"}},"LCP 10",-1),bBt=t("td",{style:{"text-align":"left"}},"二叉树任务调度",-1),kBt=t("td",{style:{"text-align":"center"}},null,-1),wBt={style:{"text-align":"left"}},vBt=t("code",null,"树",-1),IBt=t("code",null,"深度优先搜索",-1),qBt=t("code",null,"动态规划",-1),zBt=t("code",null,"1+",-1),jBt=t("td",{style:{"text-align":"left"}},"🔴",-1),CBt={style:{"text-align":"center"}},OBt={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},LBt=t("td",{style:{"text-align":"center"}},"LCP 13",-1),PBt=t("td",{style:{"text-align":"left"}},"寻宝",-1),KBt=t("td",{style:{"text-align":"center"}},null,-1),VBt={style:{"text-align":"left"}},NBt=t("code",null,"位运算",-1),DBt=t("code",null,"广度优先搜索",-1),EBt=t("code",null,"数组",-1),BBt=t("code",null,"3+",-1),MBt=t("td",{style:{"text-align":"left"}},"🔴",-1),YBt={style:{"text-align":"center"}},ABt={href:"https://leetcode.cn/problems/xun-bao",target:"_blank",rel:"noopener noreferrer"},JBt=t("td",{style:{"text-align":"center"}},"LCP 14",-1),RBt=t("td",{style:{"text-align":"left"}},"切分数组",-1),SBt=t("td",{style:{"text-align":"center"}},null,-1),UBt={style:{"text-align":"left"}},WBt=t("code",null,"数组",-1),XBt=t("code",null,"数学",-1),FBt=t("code",null,"动态规划",-1),GBt=t("code",null,"1+",-1),HBt=t("td",{style:{"text-align":"left"}},"🔴",-1),TBt={style:{"text-align":"center"}},QBt={href:"https://leetcode.cn/problems/qie-fen-shu-zu",target:"_blank",rel:"noopener noreferrer"},ZBt=t("td",{style:{"text-align":"center"}},"LCP 19",-1),$Bt=t("td",{style:{"text-align":"left"}},"秋叶收藏集",-1),tMt=t("td",{style:{"text-align":"center"}},null,-1),eMt={style:{"text-align":"left"}},oMt=t("code",null,"字符串",-1),lMt=t("code",null,"动态规划",-1),nMt=t("td",{style:{"text-align":"left"}},"🟠",-1),sMt={style:{"text-align":"center"}},rMt={href:"https://leetcode.cn/problems/UlBDOe",target:"_blank",rel:"noopener noreferrer"},dMt=t("td",{style:{"text-align":"center"}},"LCP 20",-1),_Mt=t("td",{style:{"text-align":"left"}},"快速公交",-1),aMt=t("td",{style:{"text-align":"center"}},null,-1),iMt={style:{"text-align":"left"}},cMt=t("code",null,"记忆化搜索",-1),hMt=t("code",null,"数组",-1),gMt=t("code",null,"动态规划",-1),mMt=t("td",{style:{"text-align":"left"}},"🔴",-1),fMt={style:{"text-align":"center"}},uMt={href:"https://leetcode.cn/problems/meChtZ",target:"_blank",rel:"noopener noreferrer"},yMt=t("td",{style:{"text-align":"center"}},"LCP 25",-1),pMt=t("td",{style:{"text-align":"left"}},"古董键盘",-1),xMt=t("td",{style:{"text-align":"center"}},null,-1),bMt={style:{"text-align":"left"}},kMt=t("code",null,"数学",-1),wMt=t("code",null,"动态规划",-1),vMt=t("code",null,"组合数学",-1),IMt=t("td",{style:{"text-align":"left"}},"🔴",-1),qMt={style:{"text-align":"center"}},zMt={href:"https://leetcode.cn/problems/Uh984O",target:"_blank",rel:"noopener noreferrer"},jMt=t("td",{style:{"text-align":"center"}},"LCP 26",-1),CMt=t("td",{style:{"text-align":"left"}},"导航装置",-1),OMt=t("td",{style:{"text-align":"center"}},null,-1),LMt={style:{"text-align":"left"}},PMt=t("code",null,"树",-1),KMt=t("code",null,"动态规划",-1),VMt=t("code",null,"二叉树",-1),NMt=t("td",{style:{"text-align":"left"}},"🔴",-1),DMt={style:{"text-align":"center"}},EMt={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},BMt=t("td",{style:{"text-align":"center"}},"LCP 31",-1),MMt=t("td",{style:{"text-align":"left"}},"变换的迷宫",-1),YMt=t("td",{style:{"text-align":"center"}},null,-1),AMt={style:{"text-align":"left"}},JMt=t("code",null,"深度优先搜索",-1),RMt=t("code",null,"广度优先搜索",-1),SMt=t("code",null,"数组",-1),UMt=t("code",null,"2+",-1),WMt=t("td",{style:{"text-align":"left"}},"🔴",-1),XMt={style:{"text-align":"center"}},FMt={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},GMt=t("td",{style:{"text-align":"center"}},"LCP 34",-1),HMt=t("td",{style:{"text-align":"left"}},"二叉树染色",-1),TMt=t("td",{style:{"text-align":"center"}},null,-1),QMt={style:{"text-align":"left"}},ZMt=t("code",null,"树",-1),$Mt=t("code",null,"动态规划",-1),tYt=t("code",null,"二叉树",-1),eYt=t("td",{style:{"text-align":"left"}},"🟠",-1),oYt={style:{"text-align":"center"}},lYt={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},nYt=t("td",{style:{"text-align":"center"}},"LCP 36",-1),sYt=t("td",{style:{"text-align":"left"}},"最多牌组数",-1),rYt=t("td",{style:{"text-align":"center"}},null,-1),dYt={style:{"text-align":"left"}},_Yt=t("code",null,"数组",-1),aYt=t("code",null,"动态规划",-1),iYt=t("code",null,"排序",-1),cYt=t("td",{style:{"text-align":"left"}},"🔴",-1),hYt={style:{"text-align":"center"}},gYt={href:"https://leetcode.cn/problems/Up5XYM",target:"_blank",rel:"noopener noreferrer"},mYt=t("td",{style:{"text-align":"center"}},"LCP 38",-1),fYt=t("td",{style:{"text-align":"left"}},"守卫城堡",-1),uYt=t("td",{style:{"text-align":"center"}},null,-1),yYt={style:{"text-align":"left"}},pYt=t("code",null,"数组",-1),xYt=t("code",null,"动态规划",-1),bYt=t("code",null,"矩阵",-1),kYt=t("td",{style:{"text-align":"left"}},"🔴",-1),wYt={style:{"text-align":"center"}},vYt={href:"https://leetcode.cn/problems/7rLGCR",target:"_blank",rel:"noopener noreferrer"},IYt=t("td",{style:{"text-align":"center"}},"LCP 43",-1),qYt=t("td",{style:{"text-align":"left"}},"十字路口的交通",-1),zYt=t("td",{style:{"text-align":"center"}},null,-1),jYt={style:{"text-align":"left"}},CYt=t("code",null,"数组",-1),OYt=t("code",null,"字符串",-1),LYt=t("code",null,"动态规划",-1),PYt=t("td",{style:{"text-align":"left"}},"🔴",-1),KYt={style:{"text-align":"center"}},VYt={href:"https://leetcode.cn/problems/Y1VbOX",target:"_blank",rel:"noopener noreferrer"},NYt=t("td",{style:{"text-align":"center"}},"LCP 45",-1),DYt=t("td",{style:{"text-align":"left"}},"自行车炫技赛场",-1),EYt=t("td",{style:{"text-align":"center"}},null,-1),BYt={style:{"text-align":"left"}},MYt=t("code",null,"深度优先搜索",-1),YYt=t("code",null,"广度优先搜索",-1),AYt=t("code",null,"记忆化搜索",-1),JYt=t("code",null,"3+",-1),RYt=t("td",{style:{"text-align":"left"}},"🟠",-1),SYt={style:{"text-align":"center"}},UYt={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},WYt=t("td",{style:{"text-align":"center"}},"LCP 47",-1),XYt=t("td",{style:{"text-align":"left"}},"入场安检",-1),FYt=t("td",{style:{"text-align":"center"}},null,-1),GYt={style:{"text-align":"left"}},HYt=t("code",null,"数组",-1),TYt=t("code",null,"动态规划",-1),QYt=t("td",{style:{"text-align":"left"}},"🔴",-1),ZYt={style:{"text-align":"center"}},$Yt={href:"https://leetcode.cn/problems/oPs9Bm",target:"_blank",rel:"noopener noreferrer"},tAt=t("td",{style:{"text-align":"center"}},"LCP 53",-1),eAt=t("td",{style:{"text-align":"left"}},"守护太空城",-1),oAt=t("td",{style:{"text-align":"center"}},null,-1),lAt={style:{"text-align":"left"}},nAt=t("code",null,"位运算",-1),sAt=t("code",null,"数组",-1),rAt=t("code",null,"动态规划",-1),dAt=t("code",null,"1+",-1),_At=t("td",{style:{"text-align":"left"}},"🔴",-1),aAt={style:{"text-align":"center"}},iAt={href:"https://leetcode.cn/problems/EJvmW4",target:"_blank",rel:"noopener noreferrer"},cAt=t("td",{style:{"text-align":"center"}},"LCP 57",-1),hAt=t("td",{style:{"text-align":"left"}},"打地鼠",-1),gAt=t("td",{style:{"text-align":"center"}},null,-1),mAt={style:{"text-align":"left"}},fAt=t("code",null,"数组",-1),uAt=t("code",null,"动态规划",-1),yAt=t("code",null,"矩阵",-1),pAt=t("code",null,"1+",-1),xAt=t("td",{style:{"text-align":"left"}},"🔴",-1),bAt={style:{"text-align":"center"}},kAt={href:"https://leetcode.cn/problems/ZbAuEH",target:"_blank",rel:"noopener noreferrer"},wAt=t("td",{style:{"text-align":"center"}},"LCP 59",-1),vAt=t("td",{style:{"text-align":"left"}},"搭桥过河",-1),IAt=t("td",{style:{"text-align":"center"}},null,-1),qAt={style:{"text-align":"left"}},zAt=t("code",null,"数组",-1),jAt=t("code",null,"动态规划",-1),CAt=t("td",{style:{"text-align":"left"}},"🔴",-1),OAt={style:{"text-align":"center"}},LAt={href:"https://leetcode.cn/problems/NfY1m5",target:"_blank",rel:"noopener noreferrer"},PAt=t("td",{style:{"text-align":"center"}},"LCP 60",-1),KAt=t("td",{style:{"text-align":"left"}},"力扣泡泡龙",-1),VAt=t("td",{style:{"text-align":"center"}},null,-1),NAt={style:{"text-align":"left"}},DAt=t("code",null,"树",-1),EAt=t("code",null,"动态规划",-1),BAt=t("code",null,"二叉树",-1),MAt=t("td",{style:{"text-align":"left"}},"🔴",-1),YAt={style:{"text-align":"center"}},AAt={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},JAt=t("td",{style:{"text-align":"center"}},"LCP 63",-1),RAt=t("td",{style:{"text-align":"left"}},"弹珠游戏",-1),SAt=t("td",{style:{"text-align":"center"}},null,-1),UAt={style:{"text-align":"left"}},WAt=t("code",null,"深度优先搜索",-1),XAt=t("code",null,"广度优先搜索",-1),FAt=t("code",null,"图",-1),GAt=t("code",null,"5+",-1),HAt=t("td",{style:{"text-align":"left"}},"🟠",-1),TAt={style:{"text-align":"center"}},QAt={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},ZAt=t("td",{style:{"text-align":"center"}},"LCP 64",-1),$At=t("td",{style:{"text-align":"left"}},"二叉树灯饰",-1),tJt=t("td",{style:{"text-align":"center"}},null,-1),eJt={style:{"text-align":"left"}},oJt=t("code",null,"树",-1),lJt=t("code",null,"深度优先搜索",-1),nJt=t("code",null,"动态规划",-1),sJt=t("code",null,"1+",-1),rJt=t("td",{style:{"text-align":"left"}},"🟠",-1),dJt={style:{"text-align":"center"}},_Jt={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},aJt=t("td",{style:{"text-align":"center"}},"LCP 65",-1),iJt=t("td",{style:{"text-align":"left"}},"舒适的湿度",-1),cJt=t("td",{style:{"text-align":"center"}},null,-1),hJt={style:{"text-align":"left"}},gJt=t("code",null,"数组",-1),mJt=t("code",null,"动态规划",-1),fJt=t("td",{style:{"text-align":"left"}},"🔴",-1),uJt={style:{"text-align":"center"}},yJt={href:"https://leetcode.cn/problems/3aqs1c",target:"_blank",rel:"noopener noreferrer"},pJt=t("td",{style:{"text-align":"center"}},"LCP 69",-1),xJt=t("td",{style:{"text-align":"left"}},"Hello LeetCode!",-1),bJt=t("td",{style:{"text-align":"center"}},null,-1),kJt={style:{"text-align":"left"}},wJt=t("code",null,"位运算",-1),vJt=t("code",null,"数组",-1),IJt=t("code",null,"字符串",-1),qJt=t("code",null,"2+",-1),zJt=t("td",{style:{"text-align":"left"}},"🔴",-1),jJt={style:{"text-align":"center"}},CJt={href:"https://leetcode.cn/problems/rMeRt2",target:"_blank",rel:"noopener noreferrer"},OJt=t("td",{style:{"text-align":"center"}},"LCS 01",-1),LJt=t("td",{style:{"text-align":"left"}},"下载插件",-1),PJt=t("td",{style:{"text-align":"center"}},null,-1),KJt={style:{"text-align":"left"}},VJt=t("code",null,"贪心",-1),NJt=t("code",null,"数学",-1),DJt=t("code",null,"动态规划",-1),EJt=t("td",{style:{"text-align":"left"}},"🟢",-1),BJt={style:{"text-align":"center"}},MJt={href:"https://leetcode.cn/problems/Ju9Xwi",target:"_blank",rel:"noopener noreferrer"},YJt=t("td",{style:{"text-align":"center"}},"剑指 Offer 10",-1),AJt=t("td",{style:{"text-align":"left"}},"斐波那契数列",-1),JJt={style:{"text-align":"center"}},RJt={style:{"text-align":"left"}},SJt=t("code",null,"记忆化搜索",-1),UJt=t("code",null,"数学",-1),WJt=t("code",null,"动态规划",-1),XJt=t("td",{style:{"text-align":"left"}},"🟢",-1),FJt={style:{"text-align":"center"}},GJt={href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},HJt=t("td",{style:{"text-align":"center"}},"剑指 Offer 10-II",-1),TJt=t("td",{style:{"text-align":"left"}},"青蛙跳台阶问题",-1),QJt={style:{"text-align":"center"}},ZJt={style:{"text-align":"left"}},$Jt=t("code",null,"记忆化搜索",-1),tRt=t("code",null,"数学",-1),eRt=t("code",null,"动态规划",-1),oRt=t("td",{style:{"text-align":"left"}},"🟢",-1),lRt={style:{"text-align":"center"}},nRt={href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof",target:"_blank",rel:"noopener noreferrer"},sRt=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),rRt=t("td",{style:{"text-align":"left"}},"机器人的运动范围",-1),dRt={style:{"text-align":"center"}},_Rt={style:{"text-align":"left"}},aRt=t("code",null,"深度优先搜索",-1),iRt=t("code",null,"广度优先搜索",-1),cRt=t("code",null,"动态规划",-1),hRt=t("td",{style:{"text-align":"left"}},"🟠",-1),gRt={style:{"text-align":"center"}},mRt={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},fRt=t("td",{style:{"text-align":"center"}},"剑指 Offer 14",-1),uRt=t("td",{style:{"text-align":"left"}},"剪绳子",-1),yRt={style:{"text-align":"center"}},pRt={style:{"text-align":"left"}},xRt=t("code",null,"数学",-1),bRt=t("code",null,"动态规划",-1),kRt=t("td",{style:{"text-align":"left"}},"🟠",-1),wRt={style:{"text-align":"center"}},vRt={href:"https://leetcode.cn/problems/jian-sheng-zi-lcof",target:"_blank",rel:"noopener noreferrer"},IRt=t("td",{style:{"text-align":"center"}},"剑指 Offer 14-II",-1),qRt=t("td",{style:{"text-align":"left"}},"剪绳子 II",-1),zRt={style:{"text-align":"center"}},jRt={style:{"text-align":"left"}},CRt=t("code",null,"数学",-1),ORt=t("code",null,"动态规划",-1),LRt=t("td",{style:{"text-align":"left"}},"🟠",-1),PRt={style:{"text-align":"center"}},KRt={href:"https://leetcode.cn/problems/jian-sheng-zi-ii-lcof",target:"_blank",rel:"noopener noreferrer"},VRt=t("td",{style:{"text-align":"center"}},"剑指 Offer 19",-1),NRt=t("td",{style:{"text-align":"left"}},"正则表达式匹配",-1),DRt={style:{"text-align":"center"}},ERt={style:{"text-align":"left"}},BRt=t("code",null,"递归",-1),MRt=t("code",null,"字符串",-1),YRt=t("code",null,"动态规划",-1),ARt=t("td",{style:{"text-align":"left"}},"🔴",-1),JRt={style:{"text-align":"center"}},RRt={href:"https://leetcode.cn/problems/zheng-ze-biao-da-shi-pi-pei-lcof",target:"_blank",rel:"noopener noreferrer"},SRt=t("td",{style:{"text-align":"center"}},"剑指 Offer 42",-1),URt=t("td",{style:{"text-align":"left"}},"连续子数组的最大和",-1),WRt={style:{"text-align":"center"}},XRt={style:{"text-align":"left"}},FRt=t("code",null,"数组",-1),GRt=t("code",null,"分治",-1),HRt=t("code",null,"动态规划",-1),TRt=t("td",{style:{"text-align":"left"}},"🟢",-1),QRt={style:{"text-align":"center"}},ZRt={href:"https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof",target:"_blank",rel:"noopener noreferrer"},$Rt=t("td",{style:{"text-align":"center"}},"剑指 Offer 43",-1),tSt=t("td",{style:{"text-align":"left"}},"1～n 整数中 1 出现的次数",-1),eSt={style:{"text-align":"center"}},oSt={style:{"text-align":"left"}},lSt=t("code",null,"递归",-1),nSt=t("code",null,"数学",-1),sSt=t("code",null,"动态规划",-1),rSt=t("td",{style:{"text-align":"left"}},"🔴",-1),dSt={style:{"text-align":"center"}},_St={href:"https://leetcode.cn/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof",target:"_blank",rel:"noopener noreferrer"},aSt=t("td",{style:{"text-align":"center"}},"剑指 Offer 46",-1),iSt=t("td",{style:{"text-align":"left"}},"把数字翻译成字符串",-1),cSt={style:{"text-align":"center"}},hSt={style:{"text-align":"left"}},gSt=t("code",null,"字符串",-1),mSt=t("code",null,"动态规划",-1),fSt=t("td",{style:{"text-align":"left"}},"🟠",-1),uSt={style:{"text-align":"center"}},ySt={href:"https://leetcode.cn/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof",target:"_blank",rel:"noopener noreferrer"},pSt=t("td",{style:{"text-align":"center"}},"剑指 Offer 47",-1),xSt=t("td",{style:{"text-align":"left"}},"礼物的最大价值",-1),bSt={style:{"text-align":"center"}},kSt={style:{"text-align":"left"}},wSt=t("code",null,"数组",-1),vSt=t("code",null,"动态规划",-1),ISt=t("code",null,"矩阵",-1),qSt=t("td",{style:{"text-align":"left"}},"🟠",-1),zSt={style:{"text-align":"center"}},jSt={href:"https://leetcode.cn/problems/li-wu-de-zui-da-jie-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},CSt=t("td",{style:{"text-align":"center"}},"剑指 Offer 49",-1),OSt=t("td",{style:{"text-align":"left"}},"丑数",-1),LSt={style:{"text-align":"center"}},PSt={style:{"text-align":"left"}},KSt=t("code",null,"哈希表",-1),VSt=t("code",null,"数学",-1),NSt=t("code",null,"动态规划",-1),DSt=t("code",null,"1+",-1),ESt=t("td",{style:{"text-align":"left"}},"🟠",-1),BSt={style:{"text-align":"center"}},MSt={href:"https://leetcode.cn/problems/chou-shu-lcof",target:"_blank",rel:"noopener noreferrer"},YSt=t("td",{style:{"text-align":"center"}},"剑指 Offer 60",-1),ASt=t("td",{style:{"text-align":"left"}},"n个骰子的点数",-1),JSt={style:{"text-align":"center"}},RSt={style:{"text-align":"left"}},SSt=t("code",null,"数学",-1),USt=t("code",null,"动态规划",-1),WSt=t("code",null,"概率与统计",-1),XSt=t("td",{style:{"text-align":"left"}},"🟠",-1),FSt={style:{"text-align":"center"}},GSt={href:"https://leetcode.cn/problems/nge-tou-zi-de-dian-shu-lcof",target:"_blank",rel:"noopener noreferrer"},HSt=t("td",{style:{"text-align":"center"}},"剑指 Offer 63",-1),TSt=t("td",{style:{"text-align":"left"}},"股票的最大利润",-1),QSt={style:{"text-align":"center"}},ZSt={style:{"text-align":"left"}},$St=t("code",null,"数组",-1),tUt=t("code",null,"动态规划",-1),eUt=t("td",{style:{"text-align":"left"}},"🟠",-1),oUt={style:{"text-align":"center"}},lUt={href:"https://leetcode.cn/problems/gu-piao-de-zui-da-li-run-lcof",target:"_blank",rel:"noopener noreferrer"},nUt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 100",-1),sUt=t("td",{style:{"text-align":"left"}},"三角形中最小路径之和",-1),rUt={style:{"text-align":"center"}},dUt={style:{"text-align":"left"}},_Ut=t("code",null,"数组",-1),aUt=t("code",null,"动态规划",-1),iUt=t("td",{style:{"text-align":"left"}},"🟠",-1),cUt={style:{"text-align":"center"}},hUt={href:"https://leetcode.cn/problems/IlPe0q",target:"_blank",rel:"noopener noreferrer"},gUt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 102",-1),mUt=t("td",{style:{"text-align":"left"}},"加减的目标值",-1),fUt={style:{"text-align":"center"}},uUt={style:{"text-align":"left"}},yUt=t("code",null,"数组",-1),pUt=t("code",null,"动态规划",-1),xUt=t("code",null,"回溯",-1),bUt=t("td",{style:{"text-align":"left"}},"🟠",-1),kUt={style:{"text-align":"center"}},wUt={href:"https://leetcode.cn/problems/YaVDxD",target:"_blank",rel:"noopener noreferrer"},vUt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 103",-1),IUt=t("td",{style:{"text-align":"left"}},"最少的硬币数目",-1),qUt={style:{"text-align":"center"}},zUt={style:{"text-align":"left"}},jUt=t("code",null,"广度优先搜索",-1),CUt=t("code",null,"数组",-1),OUt=t("code",null,"动态规划",-1),LUt=t("td",{style:{"text-align":"left"}},"🟠",-1),PUt={style:{"text-align":"center"}},KUt={href:"https://leetcode.cn/problems/gaM7Ch",target:"_blank",rel:"noopener noreferrer"},VUt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 104",-1),NUt=t("td",{style:{"text-align":"left"}},"排列的数目",-1),DUt=t("td",{style:{"text-align":"center"}},null,-1),EUt={style:{"text-align":"left"}},BUt=t("code",null,"数组",-1),MUt=t("code",null,"动态规划",-1),YUt=t("td",{style:{"text-align":"left"}},"🟠",-1),AUt={style:{"text-align":"center"}},JUt={href:"https://leetcode.cn/problems/D0F0SV",target:"_blank",rel:"noopener noreferrer"},RUt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 107",-1),SUt=t("td",{style:{"text-align":"left"}},"矩阵中的距离",-1),UUt=t("td",{style:{"text-align":"center"}},null,-1),WUt={style:{"text-align":"left"}},XUt=t("code",null,"广度优先搜索",-1),FUt=t("code",null,"数组",-1),GUt=t("code",null,"动态规划",-1),HUt=t("code",null,"1+",-1),TUt=t("td",{style:{"text-align":"left"}},"🟠",-1),QUt={style:{"text-align":"center"}},ZUt={href:"https://leetcode.cn/problems/2bCMpM",target:"_blank",rel:"noopener noreferrer"},$Ut=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),tWt=t("td",{style:{"text-align":"left"}},"最长递增路径",-1),eWt=t("td",{style:{"text-align":"center"}},null,-1),oWt={style:{"text-align":"left"}},lWt=t("code",null,"深度优先搜索",-1),nWt=t("code",null,"广度优先搜索",-1),sWt=t("code",null,"图",-1),rWt=t("code",null,"5+",-1),dWt=t("td",{style:{"text-align":"left"}},"🔴",-1),_Wt={style:{"text-align":"center"}},aWt={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},iWt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 20",-1),cWt=t("td",{style:{"text-align":"left"}},"回文子字符串的个数",-1),hWt=t("td",{style:{"text-align":"center"}},null,-1),gWt={style:{"text-align":"left"}},mWt=t("code",null,"字符串",-1),fWt=t("code",null,"动态规划",-1),uWt=t("td",{style:{"text-align":"left"}},"🟠",-1),yWt={style:{"text-align":"center"}},pWt={href:"https://leetcode.cn/problems/a7VOhD",target:"_blank",rel:"noopener noreferrer"},xWt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 3",-1),bWt=t("td",{style:{"text-align":"left"}},"前 n 个数字二进制中 1 的个数",-1),kWt=t("td",{style:{"text-align":"center"}},null,-1),wWt={style:{"text-align":"left"}},vWt=t("code",null,"位运算",-1),IWt=t("code",null,"动态规划",-1),qWt=t("td",{style:{"text-align":"left"}},"🟢",-1),zWt={style:{"text-align":"center"}},jWt={href:"https://leetcode.cn/problems/w3tCBm",target:"_blank",rel:"noopener noreferrer"},CWt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),OWt=t("td",{style:{"text-align":"left"}},"矩阵中最大的矩形",-1),LWt={style:{"text-align":"center"}},PWt={style:{"text-align":"left"}},KWt=t("code",null,"栈",-1),VWt=t("code",null,"数组",-1),NWt=t("code",null,"动态规划",-1),DWt=t("code",null,"2+",-1),EWt=t("td",{style:{"text-align":"left"}},"🔴",-1),BWt={style:{"text-align":"center"}},MWt={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},YWt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),AWt=t("td",{style:{"text-align":"left"}},"节点之和最大的路径",-1),JWt={style:{"text-align":"center"}},RWt={style:{"text-align":"left"}},SWt=t("code",null,"树",-1),UWt=t("code",null,"深度优先搜索",-1),WWt=t("code",null,"动态规划",-1),XWt=t("code",null,"1+",-1),FWt=t("td",{style:{"text-align":"left"}},"🔴",-1),GWt={style:{"text-align":"center"}},HWt={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},TWt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 85",-1),QWt=t("td",{style:{"text-align":"left"}},"生成匹配的括号",-1),ZWt={style:{"text-align":"center"}},$Wt={style:{"text-align":"left"}},tXt=t("code",null,"字符串",-1),eXt=t("code",null,"动态规划",-1),oXt=t("code",null,"回溯",-1),lXt=t("td",{style:{"text-align":"left"}},"🟠",-1),nXt={style:{"text-align":"center"}},sXt={href:"https://leetcode.cn/problems/IDBivT",target:"_blank",rel:"noopener noreferrer"},rXt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 88",-1),dXt=t("td",{style:{"text-align":"left"}},"爬楼梯的最少成本",-1),_Xt=t("td",{style:{"text-align":"center"}},null,-1),aXt={style:{"text-align":"left"}},iXt=t("code",null,"数组",-1),cXt=t("code",null,"动态规划",-1),hXt=t("td",{style:{"text-align":"left"}},"🟢",-1),gXt={style:{"text-align":"center"}},mXt={href:"https://leetcode.cn/problems/GzCJIP",target:"_blank",rel:"noopener noreferrer"},fXt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 89",-1),uXt=t("td",{style:{"text-align":"left"}},"房屋偷盗",-1),yXt={style:{"text-align":"center"}},pXt={style:{"text-align":"left"}},xXt=t("code",null,"数组",-1),bXt=t("code",null,"动态规划",-1),kXt=t("td",{style:{"text-align":"left"}},"🟠",-1),wXt={style:{"text-align":"center"}},vXt={href:"https://leetcode.cn/problems/Gu0c2T",target:"_blank",rel:"noopener noreferrer"},IXt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 90",-1),qXt=t("td",{style:{"text-align":"left"}},"环形房屋偷盗",-1),zXt=t("td",{style:{"text-align":"center"}},null,-1),jXt={style:{"text-align":"left"}},CXt=t("code",null,"数组",-1),OXt=t("code",null,"动态规划",-1),LXt=t("td",{style:{"text-align":"left"}},"🟠",-1),PXt={style:{"text-align":"center"}},KXt={href:"https://leetcode.cn/problems/PzWKhm",target:"_blank",rel:"noopener noreferrer"},VXt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 91",-1),NXt=t("td",{style:{"text-align":"left"}},"粉刷房子",-1),DXt=t("td",{style:{"text-align":"center"}},null,-1),EXt={style:{"text-align":"left"}},BXt=t("code",null,"数组",-1),MXt=t("code",null,"动态规划",-1),YXt=t("td",{style:{"text-align":"left"}},"🟠",-1),AXt={style:{"text-align":"center"}},JXt={href:"https://leetcode.cn/problems/JEj789",target:"_blank",rel:"noopener noreferrer"},RXt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 92",-1),SXt=t("td",{style:{"text-align":"left"}},"翻转字符",-1),UXt=t("td",{style:{"text-align":"center"}},null,-1),WXt={style:{"text-align":"left"}},XXt=t("code",null,"字符串",-1),FXt=t("code",null,"动态规划",-1),GXt=t("td",{style:{"text-align":"left"}},"🟠",-1),HXt={style:{"text-align":"center"}},TXt={href:"https://leetcode.cn/problems/cyJERH",target:"_blank",rel:"noopener noreferrer"},QXt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 93",-1),ZXt=t("td",{style:{"text-align":"left"}},"最长斐波那契数列",-1),$Xt=t("td",{style:{"text-align":"center"}},null,-1),tFt={style:{"text-align":"left"}},eFt=t("code",null,"数组",-1),oFt=t("code",null,"哈希表",-1),lFt=t("code",null,"动态规划",-1),nFt=t("td",{style:{"text-align":"left"}},"🟠",-1),sFt={style:{"text-align":"center"}},rFt={href:"https://leetcode.cn/problems/Q91FMA",target:"_blank",rel:"noopener noreferrer"},dFt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 94",-1),_Ft=t("td",{style:{"text-align":"left"}},"最少回文分割",-1),aFt=t("td",{style:{"text-align":"center"}},null,-1),iFt={style:{"text-align":"left"}},cFt=t("code",null,"字符串",-1),hFt=t("code",null,"动态规划",-1),gFt=t("td",{style:{"text-align":"left"}},"🔴",-1),mFt={style:{"text-align":"center"}},fFt={href:"https://leetcode.cn/problems/omKAoA",target:"_blank",rel:"noopener noreferrer"},uFt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 95",-1),yFt=t("td",{style:{"text-align":"left"}},"最长公共子序列",-1),pFt={style:{"text-align":"center"}},xFt={style:{"text-align":"left"}},bFt=t("code",null,"字符串",-1),kFt=t("code",null,"动态规划",-1),wFt=t("td",{style:{"text-align":"left"}},"🟠",-1),vFt={style:{"text-align":"center"}},IFt={href:"https://leetcode.cn/problems/qJnOS7",target:"_blank",rel:"noopener noreferrer"},qFt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 96",-1),zFt=t("td",{style:{"text-align":"left"}},"字符串交织",-1),jFt={style:{"text-align":"center"}},CFt={style:{"text-align":"left"}},OFt=t("code",null,"字符串",-1),LFt=t("code",null,"动态规划",-1),PFt=t("td",{style:{"text-align":"left"}},"🟠",-1),KFt={style:{"text-align":"center"}},VFt={href:"https://leetcode.cn/problems/IY6buf",target:"_blank",rel:"noopener noreferrer"},NFt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 97",-1),DFt=t("td",{style:{"text-align":"left"}},"子序列的数目",-1),EFt=t("td",{style:{"text-align":"center"}},null,-1),BFt={style:{"text-align":"left"}},MFt=t("code",null,"字符串",-1),YFt=t("code",null,"动态规划",-1),AFt=t("td",{style:{"text-align":"left"}},"🔴",-1),JFt={style:{"text-align":"center"}},RFt={href:"https://leetcode.cn/problems/21dk04",target:"_blank",rel:"noopener noreferrer"},SFt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 98",-1),UFt=t("td",{style:{"text-align":"left"}},"路径的数目",-1),WFt={style:{"text-align":"center"}},XFt={style:{"text-align":"left"}},FFt=t("code",null,"数学",-1),GFt=t("code",null,"动态规划",-1),HFt=t("code",null,"组合数学",-1),TFt=t("td",{style:{"text-align":"left"}},"🟠",-1),QFt={style:{"text-align":"center"}},ZFt={href:"https://leetcode.cn/problems/2AoeFn",target:"_blank",rel:"noopener noreferrer"},$Ft=t("td",{style:{"text-align":"center"}},"剑指 Offer II 99",-1),tGt=t("td",{style:{"text-align":"left"}},"最小路径之和",-1),eGt={style:{"text-align":"center"}},oGt={style:{"text-align":"left"}},lGt=t("code",null,"数组",-1),nGt=t("code",null,"动态规划",-1),sGt=t("code",null,"矩阵",-1),rGt=t("td",{style:{"text-align":"left"}},"🟠",-1),dGt={style:{"text-align":"center"}},_Gt={href:"https://leetcode.cn/problems/0i0mDW",target:"_blank",rel:"noopener noreferrer"},aGt=t("td",{style:{"text-align":"center"}},"面试题 05.03",-1),iGt=t("td",{style:{"text-align":"left"}},"翻转数位",-1),cGt=t("td",{style:{"text-align":"center"}},null,-1),hGt={style:{"text-align":"left"}},gGt=t("code",null,"位运算",-1),mGt=t("code",null,"动态规划",-1),fGt=t("td",{style:{"text-align":"left"}},"🟢",-1),uGt={style:{"text-align":"center"}},yGt={href:"https://leetcode.cn/problems/reverse-bits-lcci",target:"_blank",rel:"noopener noreferrer"},pGt=t("td",{style:{"text-align":"center"}},"面试题 08.01",-1),xGt=t("td",{style:{"text-align":"left"}},"三步问题",-1),bGt=t("td",{style:{"text-align":"center"}},null,-1),kGt={style:{"text-align":"left"}},wGt=t("code",null,"记忆化搜索",-1),vGt=t("code",null,"数学",-1),IGt=t("code",null,"动态规划",-1),qGt=t("td",{style:{"text-align":"left"}},"🟢",-1),zGt={style:{"text-align":"center"}},jGt={href:"https://leetcode.cn/problems/three-steps-problem-lcci",target:"_blank",rel:"noopener noreferrer"},CGt=t("td",{style:{"text-align":"center"}},"面试题 08.02",-1),OGt=t("td",{style:{"text-align":"left"}},"迷路的机器人",-1),LGt=t("td",{style:{"text-align":"center"}},null,-1),PGt={style:{"text-align":"left"}},KGt=t("code",null,"数组",-1),VGt=t("code",null,"动态规划",-1),NGt=t("code",null,"回溯",-1),DGt=t("code",null,"1+",-1),EGt=t("td",{style:{"text-align":"left"}},"🟠",-1),BGt={style:{"text-align":"center"}},MGt={href:"https://leetcode.cn/problems/robot-in-a-grid-lcci",target:"_blank",rel:"noopener noreferrer"},YGt=t("td",{style:{"text-align":"center"}},"面试题 08.09",-1),AGt=t("td",{style:{"text-align":"left"}},"括号",-1),JGt=t("td",{style:{"text-align":"center"}},null,-1),RGt={style:{"text-align":"left"}},SGt=t("code",null,"字符串",-1),UGt=t("code",null,"动态规划",-1),WGt=t("code",null,"回溯",-1),XGt=t("td",{style:{"text-align":"left"}},"🟠",-1),FGt={style:{"text-align":"center"}},GGt={href:"https://leetcode.cn/problems/bracket-lcci",target:"_blank",rel:"noopener noreferrer"},HGt=t("td",{style:{"text-align":"center"}},"面试题 08.11",-1),TGt=t("td",{style:{"text-align":"left"}},"硬币",-1),QGt=t("td",{style:{"text-align":"center"}},null,-1),ZGt={style:{"text-align":"left"}},$Gt=t("code",null,"数组",-1),tHt=t("code",null,"数学",-1),eHt=t("code",null,"动态规划",-1),oHt=t("td",{style:{"text-align":"left"}},"🟠",-1),lHt={style:{"text-align":"center"}},nHt={href:"https://leetcode.cn/problems/coin-lcci",target:"_blank",rel:"noopener noreferrer"},sHt=t("td",{style:{"text-align":"center"}},"面试题 08.13",-1),rHt=t("td",{style:{"text-align":"left"}},"堆箱子",-1),dHt=t("td",{style:{"text-align":"center"}},null,-1),_Ht={style:{"text-align":"left"}},aHt=t("code",null,"数组",-1),iHt=t("code",null,"动态规划",-1),cHt=t("code",null,"排序",-1),hHt=t("td",{style:{"text-align":"left"}},"🔴",-1),gHt={style:{"text-align":"center"}},mHt={href:"https://leetcode.cn/problems/pile-box-lcci",target:"_blank",rel:"noopener noreferrer"},fHt=t("td",{style:{"text-align":"center"}},"面试题 08.14",-1),uHt=t("td",{style:{"text-align":"left"}},"布尔运算",-1),yHt=t("td",{style:{"text-align":"center"}},null,-1),pHt={style:{"text-align":"left"}},xHt=t("code",null,"记忆化搜索",-1),bHt=t("code",null,"字符串",-1),kHt=t("code",null,"动态规划",-1),wHt=t("td",{style:{"text-align":"left"}},"🟠",-1),vHt={style:{"text-align":"center"}},IHt={href:"https://leetcode.cn/problems/boolean-evaluation-lcci",target:"_blank",rel:"noopener noreferrer"},qHt=t("td",{style:{"text-align":"center"}},"面试题 16.17",-1),zHt=t("td",{style:{"text-align":"left"}},"连续数列",-1),jHt=t("td",{style:{"text-align":"center"}},null,-1),CHt={style:{"text-align":"left"}},OHt=t("code",null,"数组",-1),LHt=t("code",null,"分治",-1),PHt=t("code",null,"动态规划",-1),KHt=t("td",{style:{"text-align":"left"}},"🟢",-1),VHt={style:{"text-align":"center"}},NHt={href:"https://leetcode.cn/problems/contiguous-sequence-lcci",target:"_blank",rel:"noopener noreferrer"},DHt=t("td",{style:{"text-align":"center"}},"面试题 17.06",-1),EHt=t("td",{style:{"text-align":"left"}},"2出现的次数",-1),BHt=t("td",{style:{"text-align":"center"}},null,-1),MHt={style:{"text-align":"left"}},YHt=t("code",null,"递归",-1),AHt=t("code",null,"数学",-1),JHt=t("code",null,"动态规划",-1),RHt=t("td",{style:{"text-align":"left"}},"🔴",-1),SHt={style:{"text-align":"center"}},UHt={href:"https://leetcode.cn/problems/number-of-2s-in-range-lcci",target:"_blank",rel:"noopener noreferrer"},WHt=t("td",{style:{"text-align":"center"}},"面试题 17.08",-1),XHt=t("td",{style:{"text-align":"left"}},"马戏团人塔",-1),FHt=t("td",{style:{"text-align":"center"}},null,-1),GHt={style:{"text-align":"left"}},HHt=t("code",null,"数组",-1),THt=t("code",null,"二分查找",-1),QHt=t("code",null,"动态规划",-1),ZHt=t("code",null,"1+",-1),$Ht=t("td",{style:{"text-align":"left"}},"🟠",-1),tTt={style:{"text-align":"center"}},eTt={href:"https://leetcode.cn/problems/circus-tower-lcci",target:"_blank",rel:"noopener noreferrer"},oTt=t("td",{style:{"text-align":"center"}},"面试题 17.09",-1),lTt=t("td",{style:{"text-align":"left"}},"第 k 个数",-1),nTt=t("td",{style:{"text-align":"center"}},null,-1),sTt={style:{"text-align":"left"}},rTt=t("code",null,"哈希表",-1),dTt=t("code",null,"数学",-1),_Tt=t("code",null,"动态规划",-1),aTt=t("code",null,"1+",-1),iTt=t("td",{style:{"text-align":"left"}},"🟠",-1),cTt={style:{"text-align":"center"}},hTt={href:"https://leetcode.cn/problems/get-kth-magic-number-lcci",target:"_blank",rel:"noopener noreferrer"},gTt=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),mTt=t("td",{style:{"text-align":"left"}},"恢复空格",-1),fTt=t("td",{style:{"text-align":"center"}},null,-1),uTt={style:{"text-align":"left"}},yTt=t("code",null,"字典树",-1),pTt=t("code",null,"数组",-1),xTt=t("code",null,"哈希表",-1),bTt=t("code",null,"4+",-1),kTt=t("td",{style:{"text-align":"left"}},"🟠",-1),wTt={style:{"text-align":"center"}},vTt={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},ITt=t("td",{style:{"text-align":"center"}},"面试题 17.16",-1),qTt=t("td",{style:{"text-align":"left"}},"按摩师",-1),zTt=t("td",{style:{"text-align":"center"}},null,-1),jTt={style:{"text-align":"left"}},CTt=t("code",null,"数组",-1),OTt=t("code",null,"动态规划",-1),LTt=t("td",{style:{"text-align":"left"}},"🟢",-1),PTt={style:{"text-align":"center"}},KTt={href:"https://leetcode.cn/problems/the-masseuse-lcci",target:"_blank",rel:"noopener noreferrer"},VTt=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),NTt=t("td",{style:{"text-align":"left"}},"直方图的水量",-1),DTt=t("td",{style:{"text-align":"center"}},null,-1),ETt={style:{"text-align":"left"}},BTt=t("code",null,"栈",-1),MTt=t("code",null,"数组",-1),YTt=t("code",null,"双指针",-1),ATt=t("code",null,"2+",-1),JTt=t("td",{style:{"text-align":"left"}},"🔴",-1),RTt={style:{"text-align":"center"}},STt={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},UTt=t("td",{style:{"text-align":"center"}},"面试题 17.23",-1),WTt=t("td",{style:{"text-align":"left"}},"最大黑方阵",-1),XTt=t("td",{style:{"text-align":"center"}},null,-1),FTt={style:{"text-align":"left"}},GTt=t("code",null,"数组",-1),HTt=t("code",null,"动态规划",-1),TTt=t("code",null,"矩阵",-1),QTt=t("td",{style:{"text-align":"left"}},"🟠",-1),ZTt={style:{"text-align":"center"}},$Tt={href:"https://leetcode.cn/problems/max-black-square-lcci",target:"_blank",rel:"noopener noreferrer"},tQt=t("td",{style:{"text-align":"center"}},"面试题 17.24",-1),eQt=t("td",{style:{"text-align":"left"}},"最大子矩阵",-1),oQt=t("td",{style:{"text-align":"center"}},null,-1),lQt={style:{"text-align":"left"}},nQt=t("code",null,"数组",-1),sQt=t("code",null,"动态规划",-1),rQt=t("code",null,"矩阵",-1),dQt=t("code",null,"1+",-1),_Qt=t("td",{style:{"text-align":"left"}},"🔴",-1),aQt={style:{"text-align":"center"}},iQt={href:"https://leetcode.cn/problems/max-submatrix-lcci",target:"_blank",rel:"noopener noreferrer"};function cQt(hQt,gQt){const l=r("RouterLink"),s=r("ExternalLinkIcon");return _(),a("div",null,[h,t("details",null,[g,m,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[f]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[u]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[q]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[L]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[K]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[J]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[R]),_:1})]),S,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[G]),_:1}),e(),H,e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[T]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[gt]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[mt]),_:1})]),ft,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[ut]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[zt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[jt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Ot]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Pt]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[Kt]),_:1})])]),Vt,i(" prettier-ignore "),t("table",null,[Nt,t("tbody",null,[t("tr",null,[Dt,Et,t("td",Bt,[o(l,{to:"/problem/0005.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Mt,[o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[Yt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[At]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Jt]),_:1})]),Rt,t("td",St,[t("a",Ut,[e("🀄️"),o(s)]),e(),t("a",Wt,[e("🔗"),o(s)])])]),t("tr",null,[Xt,Ft,t("td",Gt,[o(l,{to:"/problem/0010.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ht,[o(l,{to:"/tag/recursion.html"},{default:n(()=>[Tt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Qt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Zt]),_:1})]),$t,t("td",te,[t("a",ee,[e("🀄️"),o(s)]),e(),t("a",oe,[e("🔗"),o(s)])])]),t("tr",null,[le,ne,t("td",se,[o(l,{to:"/problem/0022.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",re,[o(l,{to:"/tag/string.html"},{default:n(()=>[de]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[_e]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[ae]),_:1})]),ie,t("td",ce,[t("a",he,[e("🀄️"),o(s)]),e(),t("a",ge,[e("🔗"),o(s)])])]),t("tr",null,[me,fe,t("td",ue,[o(l,{to:"/problem/0032.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ye,[o(l,{to:"/tag/stack.html"},{default:n(()=>[pe]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[xe]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[be]),_:1})]),ke,t("td",we,[t("a",ve,[e("🀄️"),o(s)]),e(),t("a",Ie,[e("🔗"),o(s)])])]),t("tr",null,[qe,ze,t("td",je,[o(l,{to:"/problem/0042.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ce,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Oe]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Le]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[Pe]),_:1}),e(),Ke]),Ve,t("td",Ne,[t("a",De,[e("🀄️"),o(s)]),e(),t("a",Ee,[e("🔗"),o(s)])])]),t("tr",null,[Be,Me,t("td",Ye,[o(l,{to:"/problem/0044.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ae,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[Je]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[Re]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Se]),_:1}),e(),Ue]),We,t("td",Xe,[t("a",Fe,[e("🀄️"),o(s)]),e(),t("a",Ge,[e("🔗"),o(s)])])]),t("tr",null,[He,Te,t("td",Qe,[o(l,{to:"/problem/0045.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ze,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[$e]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[to]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[eo]),_:1})]),oo,t("td",lo,[t("a",no,[e("🀄️"),o(s)]),e(),t("a",so,[e("🔗"),o(s)])])]),t("tr",null,[ro,_o,t("td",ao,[o(l,{to:"/problem/0053.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",io,[o(l,{to:"/tag/array.html"},{default:n(()=>[co]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[ho]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[go]),_:1})]),mo,t("td",fo,[t("a",uo,[e("🀄️"),o(s)]),e(),t("a",yo,[e("🔗"),o(s)])])]),t("tr",null,[po,xo,t("td",bo,[o(l,{to:"/problem/0055.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ko,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[wo]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[vo]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Io]),_:1})]),qo,t("td",zo,[t("a",jo,[e("🀄️"),o(s)]),e(),t("a",Co,[e("🔗"),o(s)])])]),t("tr",null,[Oo,Lo,t("td",Po,[o(l,{to:"/problem/0062.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ko,[o(l,{to:"/tag/math.html"},{default:n(()=>[Vo]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[No]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[Do]),_:1})]),Eo,t("td",Bo,[t("a",Mo,[e("🀄️"),o(s)]),e(),t("a",Yo,[e("🔗"),o(s)])])]),t("tr",null,[Ao,Jo,t("td",Ro,[o(l,{to:"/problem/0063.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",So,[o(l,{to:"/tag/array.html"},{default:n(()=>[Uo]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Wo]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[Xo]),_:1})]),Fo,t("td",Go,[t("a",Ho,[e("🀄️"),o(s)]),e(),t("a",To,[e("🔗"),o(s)])])]),t("tr",null,[Qo,Zo,t("td",$o,[o(l,{to:"/problem/0064.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",tl,[o(l,{to:"/tag/array.html"},{default:n(()=>[el]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ol]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[ll]),_:1})]),nl,t("td",sl,[t("a",rl,[e("🀄️"),o(s)]),e(),t("a",dl,[e("🔗"),o(s)])])]),t("tr",null,[_l,al,t("td",il,[o(l,{to:"/problem/0070.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cl,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[hl]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[gl]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ml]),_:1})]),fl,t("td",ul,[t("a",yl,[e("🀄️"),o(s)]),e(),t("a",pl,[e("🔗"),o(s)])])]),t("tr",null,[xl,bl,t("td",kl,[o(l,{to:"/problem/0072.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",wl,[o(l,{to:"/tag/string.html"},{default:n(()=>[vl]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Il]),_:1})]),ql,t("td",zl,[t("a",jl,[e("🀄️"),o(s)]),e(),t("a",Cl,[e("🔗"),o(s)])])]),t("tr",null,[Ol,Ll,t("td",Pl,[o(l,{to:"/problem/0085.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Kl,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Vl]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Nl]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Dl]),_:1}),e(),El]),Bl,t("td",Ml,[t("a",Yl,[e("🀄️"),o(s)]),e(),t("a",Al,[e("🔗"),o(s)])])]),t("tr",null,[Jl,Rl,Sl,t("td",Ul,[o(l,{to:"/tag/string.html"},{default:n(()=>[Wl]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Xl]),_:1})]),Fl,t("td",Gl,[t("a",Hl,[e("🀄️"),o(s)]),e(),t("a",Tl,[e("🔗"),o(s)])])]),t("tr",null,[Ql,Zl,$l,t("td",tn,[o(l,{to:"/tag/string.html"},{default:n(()=>[en]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[on]),_:1})]),ln,t("td",nn,[t("a",sn,[e("🀄️"),o(s)]),e(),t("a",rn,[e("🔗"),o(s)])])]),t("tr",null,[dn,_n,t("td",an,[o(l,{to:"/problem/0095.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hn]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[gn]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[mn]),_:1}),e(),fn]),un,t("td",yn,[t("a",pn,[e("🀄️"),o(s)]),e(),t("a",xn,[e("🔗"),o(s)])])]),t("tr",null,[bn,kn,t("td",wn,[o(l,{to:"/problem/0096.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",vn,[o(l,{to:"/tag/tree.html"},{default:n(()=>[In]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[qn]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[zn]),_:1}),e(),jn]),Cn,t("td",On,[t("a",Ln,[e("🀄️"),o(s)]),e(),t("a",Pn,[e("🔗"),o(s)])])]),t("tr",null,[Kn,Vn,t("td",Nn,[o(l,{to:"/problem/0097.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Dn,[o(l,{to:"/tag/string.html"},{default:n(()=>[En]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Bn]),_:1})]),Mn,t("td",Yn,[t("a",An,[e("🀄️"),o(s)]),e(),t("a",Jn,[e("🔗"),o(s)])])]),t("tr",null,[Rn,Sn,Un,t("td",Wn,[o(l,{to:"/tag/string.html"},{default:n(()=>[Xn]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Fn]),_:1})]),Gn,t("td",Hn,[t("a",Tn,[e("🀄️"),o(s)]),e(),t("a",Qn,[e("🔗"),o(s)])])]),t("tr",null,[Zn,$n,t("td",ts,[o(l,{to:"/problem/0118.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",es,[o(l,{to:"/tag/array.html"},{default:n(()=>[os]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ls]),_:1})]),ns,t("td",ss,[t("a",rs,[e("🀄️"),o(s)]),e(),t("a",ds,[e("🔗"),o(s)])])]),t("tr",null,[_s,as,is,t("td",cs,[o(l,{to:"/tag/array.html"},{default:n(()=>[hs]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[gs]),_:1})]),ms,t("td",fs,[t("a",us,[e("🀄️"),o(s)]),e(),t("a",ys,[e("🔗"),o(s)])])]),t("tr",null,[ps,xs,t("td",bs,[o(l,{to:"/problem/0120.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ks,[o(l,{to:"/tag/array.html"},{default:n(()=>[ws]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[vs]),_:1})]),Is,t("td",qs,[t("a",zs,[e("🀄️"),o(s)]),e(),t("a",js,[e("🔗"),o(s)])])]),t("tr",null,[Cs,Os,t("td",Ls,[o(l,{to:"/problem/0121.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ps,[o(l,{to:"/tag/array.html"},{default:n(()=>[Ks]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Vs]),_:1})]),Ns,t("td",Ds,[t("a",Es,[e("🀄️"),o(s)]),e(),t("a",Bs,[e("🔗"),o(s)])])]),t("tr",null,[Ms,Ys,t("td",As,[o(l,{to:"/problem/0122.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Js,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[Rs]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ss]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Us]),_:1})]),Ws,t("td",Xs,[t("a",Fs,[e("🀄️"),o(s)]),e(),t("a",Gs,[e("🔗"),o(s)])])]),t("tr",null,[Hs,Ts,t("td",Qs,[o(l,{to:"/problem/0123.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Zs,[o(l,{to:"/tag/array.html"},{default:n(()=>[$s]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[tr]),_:1})]),er,t("td",or,[t("a",lr,[e("🀄️"),o(s)]),e(),t("a",nr,[e("🔗"),o(s)])])]),t("tr",null,[sr,rr,t("td",dr,[o(l,{to:"/problem/0124.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_r,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ar]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ir]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[cr]),_:1}),e(),hr]),gr,t("td",mr,[t("a",fr,[e("🀄️"),o(s)]),e(),t("a",ur,[e("🔗"),o(s)])])]),t("tr",null,[yr,pr,t("td",xr,[o(l,{to:"/problem/0131.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",br,[o(l,{to:"/tag/string.html"},{default:n(()=>[kr]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wr]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[vr]),_:1})]),Ir,t("td",qr,[t("a",zr,[e("🀄️"),o(s)]),e(),t("a",jr,[e("🔗"),o(s)])])]),t("tr",null,[Cr,Or,Lr,t("td",Pr,[o(l,{to:"/tag/string.html"},{default:n(()=>[Kr]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Vr]),_:1})]),Nr,t("td",Dr,[t("a",Er,[e("🀄️"),o(s)]),e(),t("a",Br,[e("🔗"),o(s)])])]),t("tr",null,[Mr,Yr,t("td",Ar,[o(l,{to:"/problem/0139.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Jr,[o(l,{to:"/tag/trie.html"},{default:n(()=>[Rr]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Sr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ur]),_:1}),e(),Wr]),Xr,t("td",Fr,[t("a",Gr,[e("🀄️"),o(s)]),e(),t("a",Hr,[e("🔗"),o(s)])])]),t("tr",null,[Tr,Qr,Zr,t("td",$r,[o(l,{to:"/tag/trie.html"},{default:n(()=>[td]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[ed]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[od]),_:1}),e(),ld]),nd,t("td",sd,[t("a",rd,[e("🀄️"),o(s)]),e(),t("a",dd,[e("🔗"),o(s)])])]),t("tr",null,[_d,ad,t("td",id,[o(l,{to:"/problem/0152.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cd,[o(l,{to:"/tag/array.html"},{default:n(()=>[hd]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[gd]),_:1})]),md,t("td",fd,[t("a",ud,[e("🀄️"),o(s)]),e(),t("a",yd,[e("🔗"),o(s)])])]),t("tr",null,[pd,xd,t("td",bd,[o(l,{to:"/problem/0174.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",kd,[o(l,{to:"/tag/array.html"},{default:n(()=>[wd]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[vd]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[Id]),_:1})]),qd,t("td",zd,[t("a",jd,[e("🀄️"),o(s)]),e(),t("a",Cd,[e("🔗"),o(s)])])]),t("tr",null,[Od,Ld,t("td",Pd,[o(l,{to:"/problem/0188.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Kd,[o(l,{to:"/tag/array.html"},{default:n(()=>[Vd]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Nd]),_:1})]),Dd,t("td",Ed,[t("a",Bd,[e("🀄️"),o(s)]),e(),t("a",Md,[e("🔗"),o(s)])])]),t("tr",null,[Yd,Ad,t("td",Jd,[o(l,{to:"/problem/0198.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Rd,[o(l,{to:"/tag/array.html"},{default:n(()=>[Sd]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ud]),_:1})]),Wd,t("td",Xd,[t("a",Fd,[e("🀄️"),o(s)]),e(),t("a",Gd,[e("🔗"),o(s)])])]),t("tr",null,[Hd,Td,Qd,t("td",Zd,[o(l,{to:"/tag/array.html"},{default:n(()=>[$d]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[t_]),_:1})]),e_,t("td",o_,[t("a",l_,[e("🀄️"),o(s)]),e(),t("a",n_,[e("🔗"),o(s)])])]),t("tr",null,[s_,r_,t("td",d_,[o(l,{to:"/problem/0221.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",__,[o(l,{to:"/tag/array.html"},{default:n(()=>[a_]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[i_]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[c_]),_:1})]),h_,t("td",g_,[t("a",m_,[e("🀄️"),o(s)]),e(),t("a",f_,[e("🔗"),o(s)])])]),t("tr",null,[u_,y_,t("td",p_,[o(l,{to:"/problem/0233.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",x_,[o(l,{to:"/tag/recursion.html"},{default:n(()=>[b_]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[k_]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[w_]),_:1})]),v_,t("td",I_,[t("a",q_,[e("🀄️"),o(s)]),e(),t("a",z_,[e("🔗"),o(s)])])]),t("tr",null,[j_,C_,O_,t("td",L_,[o(l,{to:"/tag/recursion.html"},{default:n(()=>[P_]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[K_]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[V_]),_:1}),e(),N_]),D_,t("td",E_,[t("a",B_,[e("🀄️"),o(s)]),e(),t("a",M_,[e("🔗"),o(s)])])]),t("tr",null,[Y_,A_,J_,t("td",R_,[o(l,{to:"/tag/array.html"},{default:n(()=>[S_]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[U_]),_:1})]),W_,t("td",X_,[t("a",F_,[e("🀄️"),o(s)]),e(),t("a",G_,[e("🔗"),o(s)])])]),t("tr",null,[H_,T_,t("td",Q_,[o(l,{to:"/problem/0264.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Z_,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[$_]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[ta]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ea]),_:1}),e(),oa]),la,t("td",na,[t("a",sa,[e("🀄️"),o(s)]),e(),t("a",ra,[e("🔗"),o(s)])])]),t("tr",null,[da,_a,aa,t("td",ia,[o(l,{to:"/tag/array.html"},{default:n(()=>[ca]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ha]),_:1})]),ga,t("td",ma,[t("a",fa,[e("🀄️"),o(s)]),e(),t("a",ua,[e("🔗"),o(s)])])]),t("tr",null,[ya,pa,xa,t("td",ba,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ka]),_:1})]),wa,t("td",va,[t("a",Ia,[e("🀄️"),o(s)]),e(),t("a",qa,[e("🔗"),o(s)])])]),t("tr",null,[za,ja,t("td",Ca,[o(l,{to:"/problem/0279.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Oa,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[La]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Pa]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ka]),_:1})]),Va,t("td",Na,[t("a",Da,[e("🀄️"),o(s)]),e(),t("a",Ea,[e("🔗"),o(s)])])]),t("tr",null,[Ba,Ma,Ya,t("td",Aa,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Ja]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Ra]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Sa]),_:1}),e(),Ua]),Wa,t("td",Xa,[t("a",Fa,[e("🀄️"),o(s)]),e(),t("a",Ga,[e("🔗"),o(s)])])]),t("tr",null,[Ha,Ta,t("td",Qa,[o(l,{to:"/problem/0300.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Za,[o(l,{to:"/tag/array.html"},{default:n(()=>[$a]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ti]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ei]),_:1})]),oi,t("td",li,[t("a",ni,[e("🀄️"),o(s)]),e(),t("a",si,[e("🔗"),o(s)])])]),t("tr",null,[ri,di,t("td",_i,[o(l,{to:"/problem/0309.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ai,[o(l,{to:"/tag/array.html"},{default:n(()=>[ii]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ci]),_:1})]),hi,t("td",gi,[t("a",mi,[e("🀄️"),o(s)]),e(),t("a",fi,[e("🔗"),o(s)])])]),t("tr",null,[ui,yi,pi,t("td",xi,[o(l,{to:"/tag/array.html"},{default:n(()=>[bi]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ki]),_:1})]),wi,t("td",vi,[t("a",Ii,[e("🀄️"),o(s)]),e(),t("a",qi,[e("🔗"),o(s)])])]),t("tr",null,[zi,ji,Ci,t("td",Oi,[o(l,{to:"/tag/array.html"},{default:n(()=>[Li]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Pi]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ki]),_:1})]),Vi,t("td",Ni,[t("a",Di,[e("🀄️"),o(s)]),e(),t("a",Ei,[e("🔗"),o(s)])])]),t("tr",null,[Bi,Mi,t("td",Yi,[o(l,{to:"/problem/0322.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ai,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ji]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ri]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Si]),_:1})]),Ui,t("td",Wi,[t("a",Xi,[e("🀄️"),o(s)]),e(),t("a",Fi,[e("🔗"),o(s)])])]),t("tr",null,[Gi,Hi,Ti,t("td",Qi,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Zi]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[$i]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[tc]),_:1}),e(),ec]),oc,t("td",lc,[t("a",nc,[e("🀄️"),o(s)]),e(),t("a",sc,[e("🔗"),o(s)])])]),t("tr",null,[rc,dc,_c,t("td",ac,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ic]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[cc]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[hc]),_:1}),e(),gc]),mc,t("td",fc,[t("a",uc,[e("🀄️"),o(s)]),e(),t("a",yc,[e("🔗"),o(s)])])]),t("tr",null,[pc,xc,bc,t("td",kc,[o(l,{to:"/tag/tree.html"},{default:n(()=>[wc]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vc]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ic]),_:1}),e(),qc]),zc,t("td",jc,[t("a",Cc,[e("🀄️"),o(s)]),e(),t("a",Oc,[e("🔗"),o(s)])])]),t("tr",null,[Lc,Pc,t("td",Kc,[o(l,{to:"/problem/0338.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Vc,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Nc]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Dc]),_:1})]),Ec,t("td",Bc,[t("a",Mc,[e("🀄️"),o(s)]),e(),t("a",Yc,[e("🔗"),o(s)])])]),t("tr",null,[Ac,Jc,t("td",Rc,[o(l,{to:"/problem/0343.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Sc,[o(l,{to:"/tag/math.html"},{default:n(()=>[Uc]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Wc]),_:1})]),Xc,t("td",Fc,[t("a",Gc,[e("🀄️"),o(s)]),e(),t("a",Hc,[e("🔗"),o(s)])])]),t("tr",null,[Tc,Qc,Zc,t("td",$c,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[th]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[eh]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[oh]),_:1}),e(),lh]),nh,t("td",sh,[t("a",rh,[e("🀄️"),o(s)]),e(),t("a",dh,[e("🔗"),o(s)])])]),t("tr",null,[_h,ah,t("td",ih,[o(l,{to:"/problem/0354.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ch,[o(l,{to:"/tag/array.html"},{default:n(()=>[hh]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[gh]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[mh]),_:1}),e(),fh]),uh,t("td",yh,[t("a",ph,[e("🀄️"),o(s)]),e(),t("a",xh,[e("🔗"),o(s)])])]),t("tr",null,[bh,kh,wh,t("td",vh,[o(l,{to:"/tag/math.html"},{default:n(()=>[Ih]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qh]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[zh]),_:1})]),jh,t("td",Ch,[t("a",Oh,[e("🀄️"),o(s)]),e(),t("a",Lh,[e("🔗"),o(s)])])]),t("tr",null,[Ph,Kh,Vh,t("td",Nh,[o(l,{to:"/tag/array.html"},{default:n(()=>[Dh]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Eh]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[Bh]),_:1})]),Mh,t("td",Yh,[t("a",Ah,[e("🀄️"),o(s)]),e(),t("a",Jh,[e("🔗"),o(s)])])]),t("tr",null,[Rh,Sh,Uh,t("td",Wh,[o(l,{to:"/tag/array.html"},{default:n(()=>[Xh]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Fh]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Gh]),_:1}),e(),Hh]),Th,t("td",Qh,[t("a",Zh,[e("🀄️"),o(s)]),e(),t("a",$h,[e("🔗"),o(s)])])]),t("tr",null,[t1,e1,t("td",o1,[o(l,{to:"/problem/0375.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",l1,[o(l,{to:"/tag/math.html"},{default:n(()=>[n1]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[s1]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[r1]),_:1})]),d1,t("td",_1,[t("a",a1,[e("🀄️"),o(s)]),e(),t("a",i1,[e("🔗"),o(s)])])]),t("tr",null,[c1,h1,g1,t("td",m1,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[f1]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[u1]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[y1]),_:1})]),p1,t("td",x1,[t("a",b1,[e("🀄️"),o(s)]),e(),t("a",k1,[e("🔗"),o(s)])])]),t("tr",null,[w1,v1,I1,t("td",q1,[o(l,{to:"/tag/array.html"},{default:n(()=>[z1]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[j1]),_:1})]),C1,t("td",O1,[t("a",L1,[e("🀄️"),o(s)]),e(),t("a",P1,[e("🔗"),o(s)])])]),t("tr",null,[K1,V1,t("td",N1,[o(l,{to:"/problem/0392.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",D1,[o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[E1]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[B1]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[M1]),_:1})]),Y1,t("td",A1,[t("a",J1,[e("🀄️"),o(s)]),e(),t("a",R1,[e("🔗"),o(s)])])]),t("tr",null,[S1,U1,W1,t("td",X1,[o(l,{to:"/tag/array.html"},{default:n(()=>[F1]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[G1]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[H1]),_:1})]),T1,t("td",Q1,[t("a",Z1,[e("🀄️"),o(s)]),e(),t("a",$1,[e("🔗"),o(s)])])]),t("tr",null,[tg,eg,og,t("td",lg,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[ng]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[sg]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[rg]),_:1}),e(),dg]),_g,t("td",ag,[t("a",ig,[e("🀄️"),o(s)]),e(),t("a",cg,[e("🔗"),o(s)])])]),t("tr",null,[hg,gg,mg,t("td",fg,[o(l,{to:"/tag/array.html"},{default:n(()=>[ug]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[yg]),_:1})]),pg,t("td",xg,[t("a",bg,[e("🀄️"),o(s)]),e(),t("a",kg,[e("🔗"),o(s)])])]),t("tr",null,[wg,vg,Ig,t("td",qg,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[zg]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[jg]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[Cg]),_:1}),e(),Og]),Lg,t("td",Pg,[t("a",Kg,[e("🀄️"),o(s)]),e(),t("a",Vg,[e("🔗"),o(s)])])]),t("tr",null,[Ng,Dg,Eg,t("td",Bg,[o(l,{to:"/tag/array.html"},{default:n(()=>[Mg]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Yg]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[Ag]),_:1})]),Jg,t("td",Rg,[t("a",Sg,[e("🀄️"),o(s)]),e(),t("a",Ug,[e("🔗"),o(s)])])]),t("tr",null,[Wg,Xg,t("td",Fg,[o(l,{to:"/problem/0416.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Gg,[o(l,{to:"/tag/array.html"},{default:n(()=>[Hg]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Tg]),_:1})]),Qg,t("td",Zg,[t("a",$g,[e("🀄️"),o(s)]),e(),t("a",tm,[e("🔗"),o(s)])])]),t("tr",null,[em,om,lm,t("td",nm,[o(l,{to:"/tag/array.html"},{default:n(()=>[sm]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[rm]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[dm]),_:1})]),_m,t("td",am,[t("a",im,[e("🀄️"),o(s)]),e(),t("a",cm,[e("🔗"),o(s)])])]),t("tr",null,[hm,gm,t("td",mm,[o(l,{to:"/problem/0435.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",fm,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[um]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ym]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[pm]),_:1}),e(),xm]),bm,t("td",km,[t("a",wm,[e("🀄️"),o(s)]),e(),t("a",vm,[e("🔗"),o(s)])])]),t("tr",null,[Im,qm,zm,t("td",jm,[o(l,{to:"/tag/array.html"},{default:n(()=>[Cm]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Om]),_:1})]),Lm,t("td",Pm,[t("a",Km,[e("🀄️"),o(s)]),e(),t("a",Vm,[e("🔗"),o(s)])])]),t("tr",null,[Nm,Dm,Em,t("td",Bm,[o(l,{to:"/tag/math.html"},{default:n(()=>[Mm]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ym]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[Am]),_:1})]),Jm,t("td",Rm,[t("a",Sm,[e("🀄️"),o(s)]),e(),t("a",Um,[e("🔗"),o(s)])])]),t("tr",null,[Wm,Xm,Fm,t("td",Gm,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Hm]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Tm]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Qm]),_:1}),e(),Zm]),$m,t("td",tf,[t("a",ef,[e("🀄️"),o(s)]),e(),t("a",of,[e("🔗"),o(s)])])]),t("tr",null,[lf,nf,sf,t("td",rf,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[df]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_f]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[af]),_:1}),e(),cf]),hf,t("td",gf,[t("a",mf,[e("🀄️"),o(s)]),e(),t("a",ff,[e("🔗"),o(s)])])]),t("tr",null,[uf,yf,pf,t("td",xf,[o(l,{to:"/tag/string.html"},{default:n(()=>[bf]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[kf]),_:1})]),wf,t("td",vf,[t("a",If,[e("🀄️"),o(s)]),e(),t("a",qf,[e("🔗"),o(s)])])]),t("tr",null,[zf,jf,Cf,t("td",Of,[o(l,{to:"/tag/string.html"},{default:n(()=>[Lf]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Pf]),_:1})]),Kf,t("td",Vf,[t("a",Nf,[e("🀄️"),o(s)]),e(),t("a",Df,[e("🔗"),o(s)])])]),t("tr",null,[Ef,Bf,Mf,t("td",Yf,[o(l,{to:"/tag/string.html"},{default:n(()=>[Af]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Jf]),_:1})]),Rf,t("td",Sf,[t("a",Uf,[e("🀄️"),o(s)]),e(),t("a",Wf,[e("🔗"),o(s)])])]),t("tr",null,[Xf,Ff,Gf,t("td",Hf,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Tf]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[Qf]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Zf]),_:1}),e(),$f]),tu,t("td",eu,[t("a",ou,[e("🀄️"),o(s)]),e(),t("a",lu,[e("🔗"),o(s)])])]),t("tr",null,[nu,su,ru,t("td",du,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_u]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[au]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[iu]),_:1}),e(),cu]),hu,t("td",gu,[t("a",mu,[e("🀄️"),o(s)]),e(),t("a",fu,[e("🔗"),o(s)])])]),t("tr",null,[uu,yu,t("td",pu,[o(l,{to:"/problem/0474.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xu,[o(l,{to:"/tag/array.html"},{default:n(()=>[bu]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[ku]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wu]),_:1})]),vu,t("td",Iu,[t("a",qu,[e("🀄️"),o(s)]),e(),t("a",zu,[e("🔗"),o(s)])])]),t("tr",null,[ju,Cu,Ou,t("td",Lu,[o(l,{to:"/tag/recursion.html"},{default:n(()=>[Pu]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ku]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Vu]),_:1}),e(),Nu]),Du,t("td",Eu,[t("a",Bu,[e("🀄️"),o(s)]),e(),t("a",Mu,[e("🔗"),o(s)])])]),t("tr",null,[Yu,Au,Ju,t("td",Ru,[o(l,{to:"/tag/array.html"},{default:n(()=>[Su]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Uu]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[Wu]),_:1})]),Xu,t("td",Fu,[t("a",Gu,[e("🀄️"),o(s)]),e(),t("a",Hu,[e("🔗"),o(s)])])]),t("tr",null,[Tu,Qu,Zu,t("td",$u,[o(l,{to:"/tag/stack.html"},{default:n(()=>[ty]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[ey]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[oy]),_:1}),e(),ly]),ny,t("td",sy,[t("a",ry,[e("🀄️"),o(s)]),e(),t("a",dy,[e("🔗"),o(s)])])]),t("tr",null,[_y,ay,t("td",iy,[o(l,{to:"/problem/0494.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",cy,[o(l,{to:"/tag/array.html"},{default:n(()=>[hy]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[gy]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[my]),_:1})]),fy,t("td",uy,[t("a",yy,[e("🀄️"),o(s)]),e(),t("a",py,[e("🔗"),o(s)])])]),t("tr",null,[xy,by,t("td",ky,[o(l,{to:"/problem/0509.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",wy,[o(l,{to:"/tag/recursion.html"},{default:n(()=>[vy]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Iy]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[qy]),_:1}),e(),zy]),jy,t("td",Cy,[t("a",Oy,[e("🀄️"),o(s)]),e(),t("a",Ly,[e("🔗"),o(s)])])]),t("tr",null,[Py,Ky,t("td",Vy,[o(l,{to:"/problem/0514.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ny,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Dy]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Ey]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[By]),_:1}),e(),My]),Yy,t("td",Ay,[t("a",Jy,[e("🀄️"),o(s)]),e(),t("a",Ry,[e("🔗"),o(s)])])]),t("tr",null,[Sy,Uy,t("td",Wy,[o(l,{to:"/problem/0516.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Xy,[o(l,{to:"/tag/string.html"},{default:n(()=>[Fy]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Gy]),_:1})]),Hy,t("td",Ty,[t("a",Qy,[e("🀄️"),o(s)]),e(),t("a",Zy,[e("🔗"),o(s)])])]),t("tr",null,[$y,tp,t("td",ep,[o(l,{to:"/problem/0518.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",op,[o(l,{to:"/tag/array.html"},{default:n(()=>[lp]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[np]),_:1})]),sp,t("td",rp,[t("a",dp,[e("🀄️"),o(s)]),e(),t("a",_p,[e("🔗"),o(s)])])]),t("tr",null,[ap,ip,cp,t("td",hp,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[gp]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[mp]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fp]),_:1}),e(),up]),yp,t("td",pp,[t("a",xp,[e("🀄️"),o(s)]),e(),t("a",bp,[e("🔗"),o(s)])])]),t("tr",null,[kp,wp,vp,t("td",Ip,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[qp]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[zp]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[jp]),_:1}),e(),Cp]),Op,t("td",Lp,[t("a",Pp,[e("🀄️"),o(s)]),e(),t("a",Kp,[e("🔗"),o(s)])])]),t("tr",null,[Vp,Np,Dp,t("td",Ep,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Bp]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Mp]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Yp]),_:1})]),Ap,t("td",Jp,[t("a",Rp,[e("🀄️"),o(s)]),e(),t("a",Sp,[e("🔗"),o(s)])])]),t("tr",null,[Up,Wp,Xp,t("td",Fp,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Gp]),_:1})]),Hp,t("td",Tp,[t("a",Qp,[e("🀄️"),o(s)]),e(),t("a",Zp,[e("🔗"),o(s)])])]),t("tr",null,[$p,tx,ex,t("td",ox,[o(l,{to:"/tag/array.html"},{default:n(()=>[lx]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[nx]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sx]),_:1})]),rx,t("td",dx,[t("a",_x,[e("🀄️"),o(s)]),e(),t("a",ax,[e("🔗"),o(s)])])]),t("tr",null,[ix,cx,hx,t("td",gx,[o(l,{to:"/tag/array.html"},{default:n(()=>[mx]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fx]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[ux]),_:1})]),yx,t("td",px,[t("a",xx,[e("🀄️"),o(s)]),e(),t("a",bx,[e("🔗"),o(s)])])]),t("tr",null,[kx,wx,vx,t("td",Ix,[o(l,{to:"/tag/array.html"},{default:n(()=>[qx]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[zx]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[jx]),_:1})]),Cx,t("td",Ox,[t("a",Lx,[e("🀄️"),o(s)]),e(),t("a",Px,[e("🔗"),o(s)])])]),t("tr",null,[Kx,Vx,Nx,t("td",Dx,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ex]),_:1})]),Bx,t("td",Mx,[t("a",Yx,[e("🀄️"),o(s)]),e(),t("a",Ax,[e("🔗"),o(s)])])]),t("tr",null,[Jx,Rx,t("td",Sx,[o(l,{to:"/problem/0583.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Ux,[o(l,{to:"/tag/string.html"},{default:n(()=>[Wx]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Xx]),_:1})]),Fx,t("td",Gx,[t("a",Hx,[e("🀄️"),o(s)]),e(),t("a",Tx,[e("🔗"),o(s)])])]),t("tr",null,[Qx,Zx,$x,t("td",t2,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[e2]),_:1})]),o2,t("td",l2,[t("a",n2,[e("🀄️"),o(s)]),e(),t("a",s2,[e("🔗"),o(s)])])]),t("tr",null,[r2,d2,_2,t("td",a2,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[i2]),_:1})]),c2,t("td",h2,[t("a",g2,[e("🀄️"),o(s)]),e(),t("a",m2,[e("🔗"),o(s)])])]),t("tr",null,[f2,u2,y2,t("td",p2,[o(l,{to:"/tag/math.html"},{default:n(()=>[x2]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[b2]),_:1})]),k2,t("td",w2,[t("a",v2,[e("🀄️"),o(s)]),e(),t("a",I2,[e("🔗"),o(s)])])]),t("tr",null,[q2,z2,j2,t("td",C2,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[O2]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[L2]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[P2]),_:1}),e(),K2]),V2,t("td",N2,[t("a",D2,[e("🀄️"),o(s)]),e(),t("a",E2,[e("🔗"),o(s)])])]),t("tr",null,[B2,M2,Y2,t("td",A2,[o(l,{to:"/tag/string.html"},{default:n(()=>[J2]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[R2]),_:1})]),S2,t("td",U2,[t("a",W2,[e("🀄️"),o(s)]),e(),t("a",X2,[e("🔗"),o(s)])])]),t("tr",null,[F2,G2,H2,t("td",T2,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[Q2]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Z2]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$2]),_:1}),e(),t3]),e3,t("td",o3,[t("a",l3,[e("🀄️"),o(s)]),e(),t("a",n3,[e("🔗"),o(s)])])]),t("tr",null,[s3,r3,d3,t("td",_3,[o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[a3]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[i3]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[c3]),_:1})]),h3,t("td",g3,[t("a",m3,[e("🀄️"),o(s)]),e(),t("a",f3,[e("🔗"),o(s)])])]),t("tr",null,[u3,y3,p3,t("td",x3,[o(l,{to:"/tag/math.html"},{default:n(()=>[b3]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[k3]),_:1})]),w3,t("td",v3,[t("a",I3,[e("🀄️"),o(s)]),e(),t("a",q3,[e("🔗"),o(s)])])]),t("tr",null,[z3,j3,C3,t("td",O3,[o(l,{to:"/tag/math.html"},{default:n(()=>[L3]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[P3]),_:1})]),K3,t("td",V3,[t("a",N3,[e("🀄️"),o(s)]),e(),t("a",D3,[e("🔗"),o(s)])])]),t("tr",null,[E3,B3,M3,t("td",Y3,[o(l,{to:"/tag/array.html"},{default:n(()=>[A3]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[J3]),_:1})]),R3,t("td",S3,[t("a",U3,[e("🀄️"),o(s)]),e(),t("a",W3,[e("🔗"),o(s)])])]),t("tr",null,[X3,F3,G3,t("td",H3,[o(l,{to:"/tag/string.html"},{default:n(()=>[T3]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Q3]),_:1})]),Z3,t("td",$3,[t("a",tb,[e("🀄️"),o(s)]),e(),t("a",eb,[e("🔗"),o(s)])])]),t("tr",null,[ob,lb,nb,t("td",sb,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[rb]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[db]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_b]),_:1}),e(),ab]),ib,t("td",cb,[t("a",hb,[e("🀄️"),o(s)]),e(),t("a",gb,[e("🔗"),o(s)])])]),t("tr",null,[mb,fb,t("td",ub,[o(l,{to:"/problem/0678.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",yb,[o(l,{to:"/tag/stack.html"},{default:n(()=>[pb]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[xb]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[bb]),_:1}),e(),kb]),wb,t("td",vb,[t("a",Ib,[e("🀄️"),o(s)]),e(),t("a",qb,[e("🔗"),o(s)])])]),t("tr",null,[zb,jb,Cb,t("td",Ob,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Lb]),_:1})]),Pb,t("td",Kb,[t("a",Vb,[e("🀄️"),o(s)]),e(),t("a",Nb,[e("🔗"),o(s)])])]),t("tr",null,[Db,Eb,Bb,t("td",Mb,[o(l,{to:"/tag/array.html"},{default:n(()=>[Yb]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ab]),_:1})]),Jb,t("td",Rb,[t("a",Sb,[e("🀄️"),o(s)]),e(),t("a",Ub,[e("🔗"),o(s)])])]),t("tr",null,[Wb,Xb,Fb,t("td",Gb,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Hb]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Tb]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Qb]),_:1}),e(),Zb]),$b,t("td",t4,[t("a",e4,[e("🀄️"),o(s)]),e(),t("a",o4,[e("🔗"),o(s)])])]),t("tr",null,[l4,n4,s4,t("td",r4,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[d4]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[_4]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[a4]),_:1}),e(),i4]),c4,t("td",h4,[t("a",g4,[e("🀄️"),o(s)]),e(),t("a",m4,[e("🔗"),o(s)])])]),t("tr",null,[f4,u4,t("td",y4,[o(l,{to:"/problem/0712.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",p4,[o(l,{to:"/tag/string.html"},{default:n(()=>[x4]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[b4]),_:1})]),k4,t("td",w4,[t("a",v4,[e("🀄️"),o(s)]),e(),t("a",I4,[e("🔗"),o(s)])])]),t("tr",null,[q4,z4,t("td",j4,[o(l,{to:"/problem/0714.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",C4,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[O4]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[L4]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[P4]),_:1})]),K4,t("td",V4,[t("a",N4,[e("🀄️"),o(s)]),e(),t("a",D4,[e("🔗"),o(s)])])]),t("tr",null,[E4,B4,M4,t("td",Y4,[o(l,{to:"/tag/array.html"},{default:n(()=>[A4]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[J4]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[R4]),_:1}),e(),S4]),U4,t("td",W4,[t("a",X4,[e("🀄️"),o(s)]),e(),t("a",F4,[e("🔗"),o(s)])])]),t("tr",null,[G4,H4,T4,t("td",Q4,[o(l,{to:"/tag/string.html"},{default:n(()=>[Z4]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$4]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[t5]),_:1})]),e5,t("td",o5,[t("a",l5,[e("🀄️"),o(s)]),e(),t("a",n5,[e("🔗"),o(s)])])]),t("tr",null,[s5,r5,d5,t("td",_5,[o(l,{to:"/tag/string.html"},{default:n(()=>[a5]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[i5]),_:1})]),c5,t("td",h5,[t("a",g5,[e("🀄️"),o(s)]),e(),t("a",m5,[e("🔗"),o(s)])])]),t("tr",null,[f5,u5,y5,t("td",p5,[o(l,{to:"/tag/array.html"},{default:n(()=>[x5]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[b5]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[k5]),_:1})]),w5,t("td",v5,[t("a",I5,[e("🀄️"),o(s)]),e(),t("a",q5,[e("🔗"),o(s)])])]),t("tr",null,[z5,j5,C5,t("td",O5,[o(l,{to:"/tag/array.html"},{default:n(()=>[L5]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[P5]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[K5]),_:1})]),V5,t("td",N5,[t("a",D5,[e("🀄️"),o(s)]),e(),t("a",E5,[e("🔗"),o(s)])])]),t("tr",null,[B5,M5,t("td",Y5,[o(l,{to:"/problem/0746.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",A5,[o(l,{to:"/tag/array.html"},{default:n(()=>[J5]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[R5]),_:1})]),S5,t("td",U5,[t("a",W5,[e("🀄️"),o(s)]),e(),t("a",X5,[e("🔗"),o(s)])])]),t("tr",null,[F5,G5,H5,t("td",T5,[o(l,{to:"/tag/array.html"},{default:n(()=>[Q5]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Z5]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$5]),_:1}),e(),t6]),e6,t("td",o6,[t("a",l6,[e("🀄️"),o(s)]),e(),t("a",n6,[e("🔗"),o(s)])])]),t("tr",null,[s6,r6,d6,t("td",_6,[o(l,{to:"/tag/array.html"},{default:n(()=>[a6]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[i6]),_:1})]),c6,t("td",h6,[t("a",g6,[e("🀄️"),o(s)]),e(),t("a",m6,[e("🔗"),o(s)])])]),t("tr",null,[f6,u6,y6,t("td",p6,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[x6]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[b6]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[k6]),_:1}),e(),w6]),v6,t("td",I6,[t("a",q6,[e("🀄️"),o(s)]),e(),t("a",z6,[e("🔗"),o(s)])])]),t("tr",null,[j6,C6,O6,t("td",L6,[o(l,{to:"/tag/math.html"},{default:n(()=>[P6]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[K6]),_:1})]),V6,t("td",N6,[t("a",D6,[e("🀄️"),o(s)]),e(),t("a",E6,[e("🔗"),o(s)])])]),t("tr",null,[B6,M6,Y6,t("td",A6,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[J6]),_:1})]),R6,t("td",S6,[t("a",U6,[e("🀄️"),o(s)]),e(),t("a",W6,[e("🔗"),o(s)])])]),t("tr",null,[X6,F6,G6,t("td",H6,[o(l,{to:"/tag/trie.html"},{default:n(()=>[T6]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Q6]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Z6]),_:1}),e(),$6]),t7,t("td",e7,[t("a",o7,[e("🀄️"),o(s)]),e(),t("a",l7,[e("🔗"),o(s)])])]),t("tr",null,[n7,s7,r7,t("td",d7,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[_7]),_:1})]),a7,t("td",i7,[t("a",c7,[e("🀄️"),o(s)]),e(),t("a",h7,[e("🔗"),o(s)])])]),t("tr",null,[g7,m7,f7,t("td",u7,[o(l,{to:"/tag/array.html"},{default:n(()=>[y7]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[p7]),_:1})]),x7,t("td",b7,[t("a",k7,[e("🀄️"),o(s)]),e(),t("a",w7,[e("🔗"),o(s)])])]),t("tr",null,[v7,I7,q7,t("td",z7,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[j7]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[C7]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[O7]),_:1}),e(),L7]),P7,t("td",K7,[t("a",V7,[e("🀄️"),o(s)]),e(),t("a",N7,[e("🔗"),o(s)])])]),t("tr",null,[D7,E7,B7,t("td",M7,[o(l,{to:"/tag/math.html"},{default:n(()=>[Y7]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[A7]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[J7]),_:1})]),R7,t("td",S7,[t("a",U7,[e("🀄️"),o(s)]),e(),t("a",W7,[e("🔗"),o(s)])])]),t("tr",null,[X7,F7,G7,t("td",H7,[o(l,{to:"/tag/array.html"},{default:n(()=>[T7]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Q7]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[Z7]),_:1})]),$7,t("td",t0,[t("a",e0,[e("🀄️"),o(s)]),e(),t("a",o0,[e("🔗"),o(s)])])]),t("tr",null,[l0,n0,s0,t("td",r0,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[d0]),_:1})]),_0,t("td",a0,[t("a",i0,[e("🀄️"),o(s)]),e(),t("a",c0,[e("🔗"),o(s)])])]),t("tr",null,[h0,g0,m0,t("td",f0,[o(l,{to:"/tag/array.html"},{default:n(()=>[u0]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[y0]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[p0]),_:1}),e(),x0]),b0,t("td",k0,[t("a",w0,[e("🀄️"),o(s)]),e(),t("a",v0,[e("🔗"),o(s)])])]),t("tr",null,[I0,q0,z0,t("td",j0,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[C0]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[O0]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[L0]),_:1})]),P0,t("td",K0,[t("a",V0,[e("🀄️"),o(s)]),e(),t("a",N0,[e("🔗"),o(s)])])]),t("tr",null,[D0,E0,B0,t("td",M0,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Y0]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[A0]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[J0]),_:1}),e(),R0]),S0,t("td",U0,[t("a",W0,[e("🀄️"),o(s)]),e(),t("a",X0,[e("🔗"),o(s)])])]),t("tr",null,[F0,G0,H0,t("td",T0,[o(l,{to:"/tag/math.html"},{default:n(()=>[Q0]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Z0]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[$0]),_:1}),e(),t9]),e9,t("td",o9,[t("a",l9,[e("🀄️"),o(s)]),e(),t("a",n9,[e("🔗"),o(s)])])]),t("tr",null,[s9,r9,d9,t("td",_9,[o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[a9]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[i9]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[c9]),_:1})]),h9,t("td",g9,[t("a",m9,[e("🀄️"),o(s)]),e(),t("a",f9,[e("🔗"),o(s)])])]),t("tr",null,[u9,y9,t("td",p9,[o(l,{to:"/problem/0845.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",x9,[o(l,{to:"/tag/array.html"},{default:n(()=>[b9]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[k9]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[w9]),_:1}),e(),v9]),I9,t("td",q9,[t("a",z9,[e("🀄️"),o(s)]),e(),t("a",j9,[e("🔗"),o(s)])])]),t("tr",null,[C9,O9,L9,t("td",P9,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[K9]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[V9]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[N9]),_:1}),e(),D9]),E9,t("td",B9,[t("a",M9,[e("🀄️"),o(s)]),e(),t("a",Y9,[e("🔗"),o(s)])])]),t("tr",null,[A9,J9,R9,t("td",S9,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[U9]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[W9]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[X9]),_:1}),e(),F9]),G9,t("td",H9,[t("a",T9,[e("🀄️"),o(s)]),e(),t("a",Q9,[e("🔗"),o(s)])])]),t("tr",null,[Z9,$9,t8,t("td",e8,[o(l,{to:"/tag/array.html"},{default:n(()=>[o8]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[l8]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[n8]),_:1})]),s8,t("td",r8,[t("a",d8,[e("🀄️"),o(s)]),e(),t("a",_8,[e("🔗"),o(s)])])]),t("tr",null,[a8,i8,c8,t("td",h8,[o(l,{to:"/tag/array.html"},{default:n(()=>[g8]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[m8]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[f8]),_:1}),e(),u8]),y8,t("td",p8,[t("a",x8,[e("🀄️"),o(s)]),e(),t("a",b8,[e("🔗"),o(s)])])]),t("tr",null,[k8,w8,v8,t("td",I8,[o(l,{to:"/tag/array.html"},{default:n(()=>[q8]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[z8]),_:1})]),j8,t("td",C8,[t("a",O8,[e("🀄️"),o(s)]),e(),t("a",L8,[e("🔗"),o(s)])])]),t("tr",null,[P8,K8,V8,t("td",N8,[o(l,{to:"/tag/math.html"},{default:n(()=>[D8]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[E8]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[B8]),_:1})]),M8,t("td",Y8,[t("a",A8,[e("🀄️"),o(s)]),e(),t("a",J8,[e("🔗"),o(s)])])]),t("tr",null,[R8,S8,U8,t("td",W8,[o(l,{to:"/tag/tree.html"},{default:n(()=>[X8]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[F8]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[G8]),_:1}),e(),H8]),T8,t("td",Q8,[t("a",Z8,[e("🀄️"),o(s)]),e(),t("a",$8,[e("🔗"),o(s)])])]),t("tr",null,[tk,ek,ok,t("td",lk,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[nk]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[sk]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[rk]),_:1})]),dk,t("td",_k,[t("a",ak,[e("🀄️"),o(s)]),e(),t("a",ik,[e("🔗"),o(s)])])]),t("tr",null,[ck,hk,gk,t("td",mk,[o(l,{to:"/tag/array.html"},{default:n(()=>[fk]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[uk]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[yk]),_:1}),e(),pk]),xk,t("td",bk,[t("a",kk,[e("🀄️"),o(s)]),e(),t("a",wk,[e("🔗"),o(s)])])]),t("tr",null,[vk,Ik,qk,t("td",zk,[o(l,{to:"/tag/string.html"},{default:n(()=>[jk]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ck]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[Ok]),_:1})]),Lk,t("td",Pk,[t("a",Kk,[e("🀄️"),o(s)]),e(),t("a",Vk,[e("🔗"),o(s)])])]),t("tr",null,[Nk,Dk,Ek,t("td",Bk,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Mk]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Yk]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ak]),_:1}),e(),Jk]),Rk,t("td",Sk,[t("a",Uk,[e("🀄️"),o(s)]),e(),t("a",Wk,[e("🔗"),o(s)])])]),t("tr",null,[Xk,Fk,Gk,t("td",Hk,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Tk]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Qk]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[Zk]),_:1}),e(),$k]),tw,t("td",ew,[t("a",ow,[e("🀄️"),o(s)]),e(),t("a",lw,[e("🔗"),o(s)])])]),t("tr",null,[nw,sw,t("td",rw,[o(l,{to:"/problem/0918.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",dw,[o(l,{to:"/tag/queue.html"},{default:n(()=>[_w]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[aw]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[iw]),_:1}),e(),cw]),hw,t("td",gw,[t("a",mw,[e("🀄️"),o(s)]),e(),t("a",fw,[e("🔗"),o(s)])])]),t("tr",null,[uw,yw,pw,t("td",xw,[o(l,{to:"/tag/math.html"},{default:n(()=>[bw]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[kw]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[ww]),_:1})]),vw,t("td",Iw,[t("a",qw,[e("🀄️"),o(s)]),e(),t("a",zw,[e("🔗"),o(s)])])]),t("tr",null,[jw,Cw,Ow,t("td",Lw,[o(l,{to:"/tag/string.html"},{default:n(()=>[Pw]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Kw]),_:1})]),Vw,t("td",Nw,[t("a",Dw,[e("🀄️"),o(s)]),e(),t("a",Ew,[e("🔗"),o(s)])])]),t("tr",null,[Bw,Mw,t("td",Yw,[o(l,{to:"/problem/0931.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Aw,[o(l,{to:"/tag/array.html"},{default:n(()=>[Jw]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Rw]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[Sw]),_:1})]),Uw,t("td",Ww,[t("a",Xw,[e("🀄️"),o(s)]),e(),t("a",Fw,[e("🔗"),o(s)])])]),t("tr",null,[Gw,Hw,Tw,t("td",Qw,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Zw]),_:1})]),$w,t("td",tv,[t("a",ev,[e("🀄️"),o(s)]),e(),t("a",ov,[e("🔗"),o(s)])])]),t("tr",null,[lv,nv,sv,t("td",rv,[o(l,{to:"/tag/string.html"},{default:n(()=>[dv]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[_v]),_:1})]),av,t("td",iv,[t("a",cv,[e("🀄️"),o(s)]),e(),t("a",hv,[e("🔗"),o(s)])])]),t("tr",null,[gv,mv,fv,t("td",uv,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[yv]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[pv]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[xv]),_:1}),e(),bv]),kv,t("td",wv,[t("a",vv,[e("🀄️"),o(s)]),e(),t("a",Iv,[e("🔗"),o(s)])])]),t("tr",null,[qv,zv,jv,t("td",Cv,[o(l,{to:"/tag/array.html"},{default:n(()=>[Ov]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Lv]),_:1})]),Pv,t("td",Kv,[t("a",Vv,[e("🀄️"),o(s)]),e(),t("a",Nv,[e("🔗"),o(s)])])]),t("tr",null,[Dv,Ev,Bv,t("td",Mv,[o(l,{to:"/tag/array.html"},{default:n(()=>[Yv]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Av]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Jv]),_:1})]),Rv,t("td",Sv,[t("a",Uv,[e("🀄️"),o(s)]),e(),t("a",Wv,[e("🔗"),o(s)])])]),t("tr",null,[Xv,Fv,Gv,t("td",Hv,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Tv]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Qv]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Zv]),_:1})]),$v,t("td",tI,[t("a",eI,[e("🀄️"),o(s)]),e(),t("a",oI,[e("🔗"),o(s)])])]),t("tr",null,[lI,nI,sI,t("td",rI,[o(l,{to:"/tag/tree.html"},{default:n(()=>[dI]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[_I]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[aI]),_:1}),e(),iI]),cI,t("td",hI,[t("a",gI,[e("🀄️"),o(s)]),e(),t("a",mI,[e("🔗"),o(s)])])]),t("tr",null,[fI,uI,yI,t("td",pI,[o(l,{to:"/tag/stack.html"},{default:n(()=>[xI]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[bI]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[kI]),_:1}),e(),wI]),vI,t("td",II,[t("a",qI,[e("🀄️"),o(s)]),e(),t("a",zI,[e("🔗"),o(s)])])]),t("tr",null,[jI,CI,OI,t("td",LI,[o(l,{to:"/tag/array.html"},{default:n(()=>[PI]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[KI]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[VI]),_:1})]),NI,t("td",DI,[t("a",EI,[e("🀄️"),o(s)]),e(),t("a",BI,[e("🔗"),o(s)])])]),t("tr",null,[MI,YI,AI,t("td",JI,[o(l,{to:"/tag/array.html"},{default:n(()=>[RI]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[SI]),_:1})]),UI,t("td",WI,[t("a",XI,[e("🀄️"),o(s)]),e(),t("a",FI,[e("🔗"),o(s)])])]),t("tr",null,[GI,HI,TI,t("td",QI,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[ZI]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[$I]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[tq]),_:1}),e(),eq]),oq,t("td",lq,[t("a",nq,[e("🀄️"),o(s)]),e(),t("a",sq,[e("🔗"),o(s)])])]),t("tr",null,[rq,dq,_q,t("td",aq,[o(l,{to:"/tag/array.html"},{default:n(()=>[iq]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[cq]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[hq]),_:1})]),gq,t("td",mq,[t("a",fq,[e("🀄️"),o(s)]),e(),t("a",uq,[e("🔗"),o(s)])])]),t("tr",null,[yq,pq,xq,t("td",bq,[o(l,{to:"/tag/math.html"},{default:n(()=>[kq]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wq]),_:1})]),vq,t("td",Iq,[t("a",qq,[e("🀄️"),o(s)]),e(),t("a",zq,[e("🔗"),o(s)])])]),t("tr",null,[jq,Cq,Oq,t("td",Lq,[o(l,{to:"/tag/array.html"},{default:n(()=>[Pq]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Kq]),_:1})]),Vq,t("td",Nq,[t("a",Dq,[e("🀄️"),o(s)]),e(),t("a",Eq,[e("🔗"),o(s)])])]),t("tr",null,[Bq,Mq,Yq,t("td",Aq,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[Jq]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Rq]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Sq]),_:1})]),Uq,t("td",Wq,[t("a",Xq,[e("🀄️"),o(s)]),e(),t("a",Fq,[e("🔗"),o(s)])])]),t("tr",null,[Gq,Hq,Tq,t("td",Qq,[o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Zq]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[$q]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[tz]),_:1}),e(),ez]),oz,t("td",lz,[t("a",nz,[e("🀄️"),o(s)]),e(),t("a",sz,[e("🔗"),o(s)])])]),t("tr",null,[rz,dz,_z,t("td",az,[o(l,{to:"/tag/array.html"},{default:n(()=>[iz]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[cz]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[hz]),_:1}),e(),gz]),mz,t("td",fz,[t("a",uz,[e("🀄️"),o(s)]),e(),t("a",yz,[e("🔗"),o(s)])])]),t("tr",null,[pz,xz,bz,t("td",kz,[o(l,{to:"/tag/array.html"},{default:n(()=>[wz]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[vz]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[Iz]),_:1})]),qz,t("td",zz,[t("a",jz,[e("🀄️"),o(s)]),e(),t("a",Cz,[e("🔗"),o(s)])])]),t("tr",null,[Oz,Lz,Pz,t("td",Kz,[o(l,{to:"/tag/array.html"},{default:n(()=>[Vz]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Nz]),_:1})]),Dz,t("td",Ez,[t("a",Bz,[e("🀄️"),o(s)]),e(),t("a",Mz,[e("🔗"),o(s)])])]),t("tr",null,[Yz,Az,Jz,t("td",Rz,[o(l,{to:"/tag/array.html"},{default:n(()=>[Sz]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Uz]),_:1})]),Wz,t("td",Xz,[t("a",Fz,[e("🀄️"),o(s)]),e(),t("a",Gz,[e("🔗"),o(s)])])]),t("tr",null,[Hz,Tz,Qz,t("td",Zz,[o(l,{to:"/tag/array.html"},{default:n(()=>[$z]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[tj]),_:1})]),ej,t("td",oj,[t("a",lj,[e("🀄️"),o(s)]),e(),t("a",nj,[e("🔗"),o(s)])])]),t("tr",null,[sj,rj,dj,t("td",_j,[o(l,{to:"/tag/array.html"},{default:n(()=>[aj]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[ij]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[cj]),_:1}),e(),hj]),gj,t("td",mj,[t("a",fj,[e("🀄️"),o(s)]),e(),t("a",uj,[e("🔗"),o(s)])])]),t("tr",null,[yj,pj,t("td",xj,[o(l,{to:"/problem/1049.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",bj,[o(l,{to:"/tag/array.html"},{default:n(()=>[kj]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wj]),_:1})]),vj,t("td",Ij,[t("a",qj,[e("🀄️"),o(s)]),e(),t("a",zj,[e("🔗"),o(s)])])]),t("tr",null,[jj,Cj,Oj,t("td",Lj,[o(l,{to:"/tag/string.html"},{default:n(()=>[Pj]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[Kj]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Vj]),_:1}),e(),Nj]),Dj,t("td",Ej,[t("a",Bj,[e("🀄️"),o(s)]),e(),t("a",Mj,[e("🔗"),o(s)])])]),t("tr",null,[Yj,Aj,Jj,t("td",Rj,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Sj]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Uj]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Wj]),_:1}),e(),Xj]),Fj,t("td",Gj,[t("a",Hj,[e("🀄️"),o(s)]),e(),t("a",Tj,[e("🔗"),o(s)])])]),t("tr",null,[Qj,Zj,$j,t("td",tC,[o(l,{to:"/tag/math.html"},{default:n(()=>[eC]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[oC]),_:1})]),lC,t("td",nC,[t("a",sC,[e("🀄️"),o(s)]),e(),t("a",rC,[e("🔗"),o(s)])])]),t("tr",null,[dC,_C,aC,t("td",iC,[o(l,{to:"/tag/string.html"},{default:n(()=>[cC]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[hC]),_:1})]),gC,t("td",mC,[t("a",fC,[e("🀄️"),o(s)]),e(),t("a",uC,[e("🔗"),o(s)])])]),t("tr",null,[yC,pC,xC,t("td",bC,[o(l,{to:"/tag/array.html"},{default:n(()=>[kC]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wC]),_:1})]),vC,t("td",IC,[t("a",qC,[e("🀄️"),o(s)]),e(),t("a",zC,[e("🔗"),o(s)])])]),t("tr",null,[jC,CC,OC,t("td",LC,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[PC]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[KC]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[VC]),_:1}),e(),NC]),DC,t("td",EC,[t("a",BC,[e("🀄️"),o(s)]),e(),t("a",MC,[e("🔗"),o(s)])])]),t("tr",null,[YC,AC,JC,t("td",RC,[o(l,{to:"/tag/stack.html"},{default:n(()=>[SC]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[UC]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[WC]),_:1}),e(),XC]),FC,t("td",GC,[t("a",HC,[e("🀄️"),o(s)]),e(),t("a",TC,[e("🔗"),o(s)])])]),t("tr",null,[QC,ZC,t("td",$C,[o(l,{to:"/problem/1137.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",tO,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[eO]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[oO]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[lO]),_:1})]),nO,t("td",sO,[t("a",rO,[e("🀄️"),o(s)]),e(),t("a",dO,[e("🔗"),o(s)])])]),t("tr",null,[_O,aO,iO,t("td",cO,[o(l,{to:"/tag/array.html"},{default:n(()=>[hO]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[gO]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[mO]),_:1})]),fO,t("td",uO,[t("a",yO,[e("🀄️"),o(s)]),e(),t("a",pO,[e("🔗"),o(s)])])]),t("tr",null,[xO,bO,kO,t("td",wO,[o(l,{to:"/tag/array.html"},{default:n(()=>[vO]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[IO]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qO]),_:1}),e(),zO]),jO,t("td",CO,[t("a",OO,[e("🀄️"),o(s)]),e(),t("a",LO,[e("🔗"),o(s)])])]),t("tr",null,[PO,KO,t("td",VO,[o(l,{to:"/problem/1143.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",NO,[o(l,{to:"/tag/string.html"},{default:n(()=>[DO]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[EO]),_:1})]),BO,t("td",MO,[t("a",YO,[e("🀄️"),o(s)]),e(),t("a",AO,[e("🔗"),o(s)])])]),t("tr",null,[JO,RO,SO,t("td",UO,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[WO]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[XO]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[FO]),_:1}),e(),GO]),HO,t("td",TO,[t("a",QO,[e("🀄️"),o(s)]),e(),t("a",ZO,[e("🔗"),o(s)])])]),t("tr",null,[$O,tL,eL,t("td",oL,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[lL]),_:1})]),nL,t("td",sL,[t("a",rL,[e("🀄️"),o(s)]),e(),t("a",dL,[e("🔗"),o(s)])])]),t("tr",null,[_L,aL,iL,t("td",cL,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[hL]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[gL]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[mL]),_:1}),e(),fL]),uL,t("td",yL,[t("a",pL,[e("🀄️"),o(s)]),e(),t("a",xL,[e("🔗"),o(s)])])]),t("tr",null,[bL,kL,wL,t("td",vL,[o(l,{to:"/tag/array.html"},{default:n(()=>[IL]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[qL]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[zL]),_:1})]),jL,t("td",CL,[t("a",OL,[e("🀄️"),o(s)]),e(),t("a",LL,[e("🔗"),o(s)])])]),t("tr",null,[PL,KL,VL,t("td",NL,[o(l,{to:"/tag/array.html"},{default:n(()=>[DL]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[EL]),_:1})]),BL,t("td",ML,[t("a",YL,[e("🀄️"),o(s)]),e(),t("a",AL,[e("🔗"),o(s)])])]),t("tr",null,[JL,RL,SL,t("td",UL,[o(l,{to:"/tag/array.html"},{default:n(()=>[WL]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[XL]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[FL]),_:1}),e(),GL]),HL,t("td",TL,[t("a",QL,[e("🀄️"),o(s)]),e(),t("a",ZL,[e("🔗"),o(s)])])]),t("tr",null,[$L,tP,eP,t("td",oP,[o(l,{to:"/tag/array.html"},{default:n(()=>[lP]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[nP]),_:1})]),sP,t("td",rP,[t("a",dP,[e("🀄️"),o(s)]),e(),t("a",_P,[e("🔗"),o(s)])])]),t("tr",null,[aP,iP,cP,t("td",hP,[o(l,{to:"/tag/string.html"},{default:n(()=>[gP]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[mP]),_:1})]),fP,t("td",uP,[t("a",yP,[e("🀄️"),o(s)]),e(),t("a",pP,[e("🔗"),o(s)])])]),t("tr",null,[xP,bP,kP,t("td",wP,[o(l,{to:"/tag/array.html"},{default:n(()=>[vP]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[IP]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qP]),_:1})]),zP,t("td",jP,[t("a",CP,[e("🀄️"),o(s)]),e(),t("a",OP,[e("🔗"),o(s)])])]),t("tr",null,[LP,PP,KP,t("td",VP,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[NP]),_:1})]),DP,t("td",EP,[t("a",BP,[e("🀄️"),o(s)]),e(),t("a",MP,[e("🔗"),o(s)])])]),t("tr",null,[YP,AP,JP,t("td",RP,[o(l,{to:"/tag/array.html"},{default:n(()=>[SP]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[UP]),_:1})]),WP,t("td",XP,[t("a",FP,[e("🀄️"),o(s)]),e(),t("a",GP,[e("🔗"),o(s)])])]),t("tr",null,[HP,TP,QP,t("td",ZP,[o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[$P]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[tK]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[eK]),_:1}),e(),oK]),lK,t("td",nK,[t("a",sK,[e("🀄️"),o(s)]),e(),t("a",rK,[e("🔗"),o(s)])])]),t("tr",null,[dK,_K,aK,t("td",iK,[o(l,{to:"/tag/array.html"},{default:n(()=>[cK]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[hK]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[gK]),_:1}),e(),mK]),fK,t("td",uK,[t("a",yK,[e("🀄️"),o(s)]),e(),t("a",pK,[e("🔗"),o(s)])])]),t("tr",null,[xK,bK,kK,t("td",wK,[o(l,{to:"/tag/array.html"},{default:n(()=>[vK]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[IK]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qK]),_:1}),e(),zK]),jK,t("td",CK,[t("a",OK,[e("🀄️"),o(s)]),e(),t("a",LK,[e("🔗"),o(s)])])]),t("tr",null,[PK,KK,VK,t("td",NK,[o(l,{to:"/tag/array.html"},{default:n(()=>[DK]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[EK]),_:1})]),BK,t("td",MK,[t("a",YK,[e("🀄️"),o(s)]),e(),t("a",AK,[e("🔗"),o(s)])])]),t("tr",null,[JK,RK,SK,t("td",UK,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[WK]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[XK]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[FK]),_:1}),e(),GK]),HK,t("td",TK,[t("a",QK,[e("🀄️"),o(s)]),e(),t("a",ZK,[e("🔗"),o(s)])])]),t("tr",null,[$K,tV,eV,t("td",oV,[o(l,{to:"/tag/math.html"},{default:n(()=>[lV]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[nV]),_:1})]),sV,t("td",rV,[t("a",dV,[e("🀄️"),o(s)]),e(),t("a",_V,[e("🔗"),o(s)])])]),t("tr",null,[aV,iV,cV,t("td",hV,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[gV]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[mV]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fV]),_:1}),e(),uV]),yV,t("td",pV,[t("a",xV,[e("🀄️"),o(s)]),e(),t("a",bV,[e("🔗"),o(s)])])]),t("tr",null,[kV,wV,vV,t("td",IV,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qV]),_:1})]),zV,t("td",jV,[t("a",CV,[e("🀄️"),o(s)]),e(),t("a",OV,[e("🔗"),o(s)])])]),t("tr",null,[LV,PV,t("td",KV,[o(l,{to:"/problem/1277.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",VV,[o(l,{to:"/tag/array.html"},{default:n(()=>[NV]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[DV]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[EV]),_:1})]),BV,t("td",MV,[t("a",YV,[e("🀄️"),o(s)]),e(),t("a",AV,[e("🔗"),o(s)])])]),t("tr",null,[JV,RV,SV,t("td",UV,[o(l,{to:"/tag/string.html"},{default:n(()=>[WV]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[XV]),_:1})]),FV,t("td",GV,[t("a",HV,[e("🀄️"),o(s)]),e(),t("a",TV,[e("🔗"),o(s)])])]),t("tr",null,[QV,ZV,$V,t("td",tN,[o(l,{to:"/tag/array.html"},{default:n(()=>[eN]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[oN]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[lN]),_:1})]),nN,t("td",sN,[t("a",rN,[e("🀄️"),o(s)]),e(),t("a",dN,[e("🔗"),o(s)])])]),t("tr",null,[_N,aN,iN,t("td",cN,[o(l,{to:"/tag/array.html"},{default:n(()=>[hN]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[gN]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[mN]),_:1})]),fN,t("td",uN,[t("a",yN,[e("🀄️"),o(s)]),e(),t("a",pN,[e("🔗"),o(s)])])]),t("tr",null,[xN,bN,t("td",kN,[o(l,{to:"/problem/1312.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",wN,[o(l,{to:"/tag/string.html"},{default:n(()=>[vN]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[IN]),_:1})]),qN,t("td",zN,[t("a",jN,[e("🀄️"),o(s)]),e(),t("a",CN,[e("🔗"),o(s)])])]),t("tr",null,[ON,LN,PN,t("td",KN,[o(l,{to:"/tag/string.html"},{default:n(()=>[VN]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[NN]),_:1})]),DN,t("td",EN,[t("a",BN,[e("🀄️"),o(s)]),e(),t("a",MN,[e("🔗"),o(s)])])]),t("tr",null,[YN,AN,JN,t("td",RN,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[SN]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[UN]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[WN]),_:1})]),XN,t("td",FN,[t("a",GN,[e("🀄️"),o(s)]),e(),t("a",HN,[e("🔗"),o(s)])])]),t("tr",null,[TN,QN,ZN,t("td",$N,[o(l,{to:"/tag/graph.html"},{default:n(()=>[tD]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[eD]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[oD]),_:1})]),lD,t("td",nD,[t("a",sD,[e("🀄️"),o(s)]),e(),t("a",rD,[e("🔗"),o(s)])])]),t("tr",null,[dD,_D,aD,t("td",iD,[o(l,{to:"/tag/array.html"},{default:n(()=>[cD]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[hD]),_:1})]),gD,t("td",mD,[t("a",fD,[e("🀄️"),o(s)]),e(),t("a",uD,[e("🔗"),o(s)])])]),t("tr",null,[yD,pD,xD,t("td",bD,[o(l,{to:"/tag/array.html"},{default:n(()=>[kD]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wD]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[vD]),_:1})]),ID,t("td",qD,[t("a",zD,[e("🀄️"),o(s)]),e(),t("a",jD,[e("🔗"),o(s)])])]),t("tr",null,[CD,OD,LD,t("td",PD,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[KD]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[VD]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ND]),_:1}),e(),DD]),ED,t("td",BD,[t("a",MD,[e("🀄️"),o(s)]),e(),t("a",YD,[e("🔗"),o(s)])])]),t("tr",null,[AD,JD,RD,t("td",SD,[o(l,{to:"/tag/math.html"},{default:n(()=>[UD]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[WD]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[XD]),_:1})]),FD,t("td",GD,[t("a",HD,[e("🀄️"),o(s)]),e(),t("a",TD,[e("🔗"),o(s)])])]),t("tr",null,[QD,ZD,$D,t("td",tE,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[eE]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[oE]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[lE]),_:1})]),nE,t("td",sE,[t("a",rE,[e("🀄️"),o(s)]),e(),t("a",dE,[e("🔗"),o(s)])])]),t("tr",null,[_E,aE,iE,t("td",cE,[o(l,{to:"/tag/tree.html"},{default:n(()=>[hE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[gE]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[mE]),_:1}),e(),fE]),uE,t("td",yE,[t("a",pE,[e("🀄️"),o(s)]),e(),t("a",xE,[e("🔗"),o(s)])])]),t("tr",null,[bE,kE,wE,t("td",vE,[o(l,{to:"/tag/tree.html"},{default:n(()=>[IE]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[qE]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[zE]),_:1}),e(),jE]),CE,t("td",OE,[t("a",LE,[e("🀄️"),o(s)]),e(),t("a",PE,[e("🔗"),o(s)])])]),t("tr",null,[KE,VE,NE,t("td",DE,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[EE]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[BE]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[ME]),_:1})]),YE,t("td",AE,[t("a",JE,[e("🀄️"),o(s)]),e(),t("a",RE,[e("🔗"),o(s)])])]),t("tr",null,[SE,UE,WE,t("td",XE,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[FE]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[GE]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[HE]),_:1}),e(),TE]),QE,t("td",ZE,[t("a",$E,[e("🀄️"),o(s)]),e(),t("a",tB,[e("🔗"),o(s)])])]),t("tr",null,[eB,oB,lB,t("td",nB,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[sB]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[rB]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[dB]),_:1}),e(),_B]),aB,t("td",iB,[t("a",cB,[e("🀄️"),o(s)]),e(),t("a",hB,[e("🔗"),o(s)])])]),t("tr",null,[gB,mB,fB,t("td",uB,[o(l,{to:"/tag/string.html"},{default:n(()=>[yB]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[pB]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[xB]),_:1})]),bB,t("td",kB,[t("a",wB,[e("🀄️"),o(s)]),e(),t("a",vB,[e("🔗"),o(s)])])]),t("tr",null,[IB,qB,zB,t("td",jB,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[CB]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[OB]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[LB]),_:1}),e(),PB]),KB,t("td",VB,[t("a",NB,[e("🀄️"),o(s)]),e(),t("a",DB,[e("🔗"),o(s)])])]),t("tr",null,[EB,BB,MB,t("td",YB,[o(l,{to:"/tag/array.html"},{default:n(()=>[AB]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[JB]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[RB]),_:1}),e(),SB]),UB,t("td",WB,[t("a",XB,[e("🀄️"),o(s)]),e(),t("a",FB,[e("🔗"),o(s)])])]),t("tr",null,[GB,HB,TB,t("td",QB,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ZB]),_:1})]),$B,t("td",tM,[t("a",eM,[e("🀄️"),o(s)]),e(),t("a",oM,[e("🔗"),o(s)])])]),t("tr",null,[lM,nM,sM,t("td",rM,[o(l,{to:"/tag/string.html"},{default:n(()=>[dM]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[_M]),_:1})]),aM,t("td",iM,[t("a",cM,[e("🀄️"),o(s)]),e(),t("a",hM,[e("🔗"),o(s)])])]),t("tr",null,[gM,mM,fM,t("td",uM,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[yM]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[pM]),_:1})]),xM,t("td",bM,[t("a",kM,[e("🀄️"),o(s)]),e(),t("a",wM,[e("🔗"),o(s)])])]),t("tr",null,[vM,IM,qM,t("td",zM,[o(l,{to:"/tag/queue.html"},{default:n(()=>[jM]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[CM]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[OM]),_:1}),e(),LM]),PM,t("td",KM,[t("a",VM,[e("🀄️"),o(s)]),e(),t("a",NM,[e("🔗"),o(s)])])]),t("tr",null,[DM,EM,BM,t("td",MM,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[YM]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[AM]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[JM]),_:1}),e(),RM]),SM,t("td",UM,[t("a",WM,[e("🀄️"),o(s)]),e(),t("a",XM,[e("🔗"),o(s)])])]),t("tr",null,[FM,GM,HM,t("td",TM,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[QM]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ZM]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$M]),_:1}),e(),tY]),eY,t("td",oY,[t("a",lY,[e("🀄️"),o(s)]),e(),t("a",nY,[e("🔗"),o(s)])])]),t("tr",null,[sY,rY,dY,t("td",_Y,[o(l,{to:"/tag/array.html"},{default:n(()=>[aY]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[iY]),_:1})]),cY,t("td",hY,[t("a",gY,[e("🀄️"),o(s)]),e(),t("a",mY,[e("🔗"),o(s)])])]),t("tr",null,[fY,uY,yY,t("td",pY,[o(l,{to:"/tag/array.html"},{default:n(()=>[xY]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[bY]),_:1})]),kY,t("td",wY,[t("a",vY,[e("🀄️"),o(s)]),e(),t("a",IY,[e("🔗"),o(s)])])]),t("tr",null,[qY,zY,jY,t("td",CY,[o(l,{to:"/tag/array.html"},{default:n(()=>[OY]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[LY]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[PY]),_:1})]),KY,t("td",VY,[t("a",NY,[e("🀄️"),o(s)]),e(),t("a",DY,[e("🔗"),o(s)])])]),t("tr",null,[EY,BY,MY,t("td",YY,[o(l,{to:"/tag/array.html"},{default:n(()=>[AY]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[JY]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[RY]),_:1}),e(),SY]),UY,t("td",WY,[t("a",XY,[e("🀄️"),o(s)]),e(),t("a",FY,[e("🔗"),o(s)])])]),t("tr",null,[GY,HY,TY,t("td",QY,[o(l,{to:"/tag/array.html"},{default:n(()=>[ZY]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$Y]),_:1})]),tA,t("td",eA,[t("a",oA,[e("🀄️"),o(s)]),e(),t("a",lA,[e("🔗"),o(s)])])]),t("tr",null,[nA,sA,rA,t("td",dA,[o(l,{to:"/tag/array.html"},{default:n(()=>[_A]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[aA]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[iA]),_:1}),e(),cA]),hA,t("td",gA,[t("a",mA,[e("🀄️"),o(s)]),e(),t("a",fA,[e("🔗"),o(s)])])]),t("tr",null,[uA,yA,pA,t("td",xA,[o(l,{to:"/tag/array.html"},{default:n(()=>[bA]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[kA]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wA]),_:1}),e(),vA]),IA,t("td",qA,[t("a",zA,[e("🀄️"),o(s)]),e(),t("a",jA,[e("🔗"),o(s)])])]),t("tr",null,[CA,OA,LA,t("td",PA,[o(l,{to:"/tag/tree.html"},{default:n(()=>[KA]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[VA]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[NA]),_:1}),e(),DA]),EA,t("td",BA,[t("a",MA,[e("🀄️"),o(s)]),e(),t("a",YA,[e("🔗"),o(s)])])]),t("tr",null,[AA,JA,t("td",RA,[o(l,{to:"/problem/1493.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",SA,[o(l,{to:"/tag/array.html"},{default:n(()=>[UA]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[WA]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[XA]),_:1})]),FA,t("td",GA,[t("a",HA,[e("🀄️"),o(s)]),e(),t("a",TA,[e("🔗"),o(s)])])]),t("tr",null,[QA,ZA,$A,t("td",tJ,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[eJ]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[oJ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[lJ]),_:1}),e(),nJ]),sJ,t("td",rJ,[t("a",dJ,[e("🀄️"),o(s)]),e(),t("a",_J,[e("🔗"),o(s)])])]),t("tr",null,[aJ,iJ,cJ,t("td",hJ,[o(l,{to:"/tag/stack.html"},{default:n(()=>[gJ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[mJ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fJ]),_:1}),e(),uJ]),yJ,t("td",pJ,[t("a",xJ,[e("🀄️"),o(s)]),e(),t("a",bJ,[e("🔗"),o(s)])])]),t("tr",null,[kJ,wJ,vJ,t("td",IJ,[o(l,{to:"/tag/math.html"},{default:n(()=>[qJ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[zJ]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[jJ]),_:1})]),CJ,t("td",OJ,[t("a",LJ,[e("🀄️"),o(s)]),e(),t("a",PJ,[e("🔗"),o(s)])])]),t("tr",null,[KJ,VJ,NJ,t("td",DJ,[o(l,{to:"/tag/array.html"},{default:n(()=>[EJ]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[BJ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[MJ]),_:1}),e(),YJ]),AJ,t("td",JJ,[t("a",RJ,[e("🀄️"),o(s)]),e(),t("a",SJ,[e("🔗"),o(s)])])]),t("tr",null,[UJ,WJ,XJ,t("td",FJ,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[GJ]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[HJ]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[TJ]),_:1}),e(),QJ]),ZJ,t("td",$J,[t("a",tR,[e("🀄️"),o(s)]),e(),t("a",eR,[e("🔗"),o(s)])])]),t("tr",null,[oR,lR,nR,t("td",sR,[o(l,{to:"/tag/stack.html"},{default:n(()=>[rR]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[dR]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_R]),_:1}),e(),aR]),iR,t("td",cR,[t("a",hR,[e("🀄️"),o(s)]),e(),t("a",gR,[e("🔗"),o(s)])])]),t("tr",null,[mR,fR,uR,t("td",yR,[o(l,{to:"/tag/string.html"},{default:n(()=>[pR]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[xR]),_:1})]),bR,t("td",kR,[t("a",wR,[e("🀄️"),o(s)]),e(),t("a",vR,[e("🔗"),o(s)])])]),t("tr",null,[IR,qR,zR,t("td",jR,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[CR]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[OR]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[LR]),_:1}),e(),PR]),KR,t("td",VR,[t("a",NR,[e("🀄️"),o(s)]),e(),t("a",DR,[e("🔗"),o(s)])])]),t("tr",null,[ER,BR,MR,t("td",YR,[o(l,{to:"/tag/array.html"},{default:n(()=>[AR]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[JR]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[RR]),_:1})]),SR,t("td",UR,[t("a",WR,[e("🀄️"),o(s)]),e(),t("a",XR,[e("🔗"),o(s)])])]),t("tr",null,[FR,GR,HR,t("td",TR,[o(l,{to:"/tag/graph.html"},{default:n(()=>[QR]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ZR]),_:1})]),$R,t("td",tS,[t("a",eS,[e("🀄️"),o(s)]),e(),t("a",oS,[e("🔗"),o(s)])])]),t("tr",null,[lS,nS,sS,t("td",rS,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[dS]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[_S]),_:1})]),aS,t("td",iS,[t("a",cS,[e("🀄️"),o(s)]),e(),t("a",hS,[e("🔗"),o(s)])])]),t("tr",null,[gS,mS,fS,t("td",uS,[o(l,{to:"/tag/array.html"},{default:n(()=>[yS]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[pS]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[xS]),_:1}),e(),bS]),kS,t("td",wS,[t("a",vS,[e("🀄️"),o(s)]),e(),t("a",IS,[e("🔗"),o(s)])])]),t("tr",null,[qS,zS,jS,t("td",CS,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[OS]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[LS]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[PS]),_:1})]),KS,t("td",VS,[t("a",NS,[e("🀄️"),o(s)]),e(),t("a",DS,[e("🔗"),o(s)])])]),t("tr",null,[ES,BS,MS,t("td",YS,[o(l,{to:"/tag/tree.html"},{default:n(()=>[AS]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[JS]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[RS]),_:1}),e(),SS]),US,t("td",WS,[t("a",XS,[e("🀄️"),o(s)]),e(),t("a",FS,[e("🔗"),o(s)])])]),t("tr",null,[GS,HS,TS,t("td",QS,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[ZS]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[$S]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[tU]),_:1})]),eU,t("td",oU,[t("a",lU,[e("🀄️"),o(s)]),e(),t("a",nU,[e("🔗"),o(s)])])]),t("tr",null,[sU,rU,dU,t("td",_U,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[aU]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[iU]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[cU]),_:1}),e(),hU]),gU,t("td",mU,[t("a",fU,[e("🀄️"),o(s)]),e(),t("a",uU,[e("🔗"),o(s)])])]),t("tr",null,[yU,pU,xU,t("td",bU,[o(l,{to:"/tag/array.html"},{default:n(()=>[kU]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wU]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[vU]),_:1})]),IU,t("td",qU,[t("a",zU,[e("🀄️"),o(s)]),e(),t("a",jU,[e("🔗"),o(s)])])]),t("tr",null,[CU,OU,LU,t("td",PU,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[KU]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[VU]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[NU]),_:1}),e(),DU]),EU,t("td",BU,[t("a",MU,[e("🀄️"),o(s)]),e(),t("a",YU,[e("🔗"),o(s)])])]),t("tr",null,[AU,JU,RU,t("td",SU,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[UU]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[WU]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[XU]),_:1})]),FU,t("td",GU,[t("a",HU,[e("🀄️"),o(s)]),e(),t("a",TU,[e("🔗"),o(s)])])]),t("tr",null,[QU,ZU,$U,t("td",tW,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[eW]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[oW]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[lW]),_:1}),e(),nW]),sW,t("td",rW,[t("a",dW,[e("🀄️"),o(s)]),e(),t("a",_W,[e("🔗"),o(s)])])]),t("tr",null,[aW,iW,cW,t("td",hW,[o(l,{to:"/tag/math.html"},{default:n(()=>[gW]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[mW]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[fW]),_:1})]),uW,t("td",yW,[t("a",pW,[e("🀄️"),o(s)]),e(),t("a",xW,[e("🔗"),o(s)])])]),t("tr",null,[bW,kW,wW,t("td",vW,[o(l,{to:"/tag/array.html"},{default:n(()=>[IW]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qW]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[zW]),_:1})]),jW,t("td",CW,[t("a",OW,[e("🀄️"),o(s)]),e(),t("a",LW,[e("🔗"),o(s)])])]),t("tr",null,[PW,KW,VW,t("td",NW,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[DW]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[EW]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[BW]),_:1}),e(),MW]),YW,t("td",AW,[t("a",JW,[e("🀄️"),o(s)]),e(),t("a",RW,[e("🔗"),o(s)])])]),t("tr",null,[SW,UW,WW,t("td",XW,[o(l,{to:"/tag/array.html"},{default:n(()=>[FW]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[GW]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[HW]),_:1})]),TW,t("td",QW,[t("a",ZW,[e("🀄️"),o(s)]),e(),t("a",$W,[e("🔗"),o(s)])])]),t("tr",null,[tX,eX,oX,t("td",lX,[o(l,{to:"/tag/math.html"},{default:n(()=>[nX]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sX]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[rX]),_:1})]),dX,t("td",_X,[t("a",aX,[e("🀄️"),o(s)]),e(),t("a",iX,[e("🔗"),o(s)])])]),t("tr",null,[cX,hX,gX,t("td",mX,[o(l,{to:"/tag/array.html"},{default:n(()=>[fX]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[uX]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[yX]),_:1}),e(),pX]),xX,t("td",bX,[t("a",kX,[e("🀄️"),o(s)]),e(),t("a",wX,[e("🔗"),o(s)])])]),t("tr",null,[vX,IX,qX,t("td",zX,[o(l,{to:"/tag/stack.html"},{default:n(()=>[jX]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[CX]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[OX]),_:1})]),LX,t("td",PX,[t("a",KX,[e("🀄️"),o(s)]),e(),t("a",VX,[e("🔗"),o(s)])])]),t("tr",null,[NX,DX,EX,t("td",BX,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[MX]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[YX]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[AX]),_:1})]),JX,t("td",RX,[t("a",SX,[e("🀄️"),o(s)]),e(),t("a",UX,[e("🔗"),o(s)])])]),t("tr",null,[WX,XX,FX,t("td",GX,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[HX]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[TX]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[QX]),_:1}),e(),ZX]),$X,t("td",tF,[t("a",eF,[e("🀄️"),o(s)]),e(),t("a",oF,[e("🔗"),o(s)])])]),t("tr",null,[lF,nF,sF,t("td",rF,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[dF]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[_F]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[aF]),_:1}),e(),iF]),cF,t("td",hF,[t("a",gF,[e("🀄️"),o(s)]),e(),t("a",mF,[e("🔗"),o(s)])])]),t("tr",null,[fF,uF,yF,t("td",pF,[o(l,{to:"/tag/string.html"},{default:n(()=>[xF]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[bF]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[kF]),_:1})]),wF,t("td",vF,[t("a",IF,[e("🀄️"),o(s)]),e(),t("a",qF,[e("🔗"),o(s)])])]),t("tr",null,[zF,jF,t("td",CF,[o(l,{to:"/problem/1671.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",OF,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[LF]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[PF]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[KF]),_:1}),e(),VF]),NF,t("td",DF,[t("a",EF,[e("🀄️"),o(s)]),e(),t("a",BF,[e("🔗"),o(s)])])]),t("tr",null,[MF,YF,AF,t("td",JF,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[RF]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[SF]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[UF]),_:1}),e(),WF]),XF,t("td",FF,[t("a",GF,[e("🀄️"),o(s)]),e(),t("a",HF,[e("🔗"),o(s)])])]),t("tr",null,[TF,QF,ZF,t("td",$F,[o(l,{to:"/tag/string.html"},{default:n(()=>[tG]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[eG]),_:1})]),oG,t("td",lG,[t("a",nG,[e("🀄️"),o(s)]),e(),t("a",sG,[e("🔗"),o(s)])])]),t("tr",null,[rG,dG,_G,t("td",aG,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[iG]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[cG]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[hG]),_:1}),e(),gG]),mG,t("td",fG,[t("a",uG,[e("🀄️"),o(s)]),e(),t("a",yG,[e("🔗"),o(s)])])]),t("tr",null,[pG,xG,bG,t("td",kG,[o(l,{to:"/tag/array.html"},{default:n(()=>[wG]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[vG]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[IG]),_:1}),e(),qG]),zG,t("td",jG,[t("a",CG,[e("🀄️"),o(s)]),e(),t("a",OG,[e("🔗"),o(s)])])]),t("tr",null,[LG,PG,KG,t("td",VG,[o(l,{to:"/tag/array.html"},{default:n(()=>[NG]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[DG]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[EG]),_:1})]),BG,t("td",MG,[t("a",YG,[e("🀄️"),o(s)]),e(),t("a",AG,[e("🔗"),o(s)])])]),t("tr",null,[JG,RG,SG,t("td",UG,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[WG]),_:1})]),XG,t("td",FG,[t("a",GG,[e("🀄️"),o(s)]),e(),t("a",HG,[e("🔗"),o(s)])])]),t("tr",null,[TG,QG,ZG,t("td",$G,[o(l,{to:"/tag/queue.html"},{default:n(()=>[tH]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[eH]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[oH]),_:1}),e(),lH]),nH,t("td",sH,[t("a",rH,[e("🀄️"),o(s)]),e(),t("a",dH,[e("🔗"),o(s)])])]),t("tr",null,[_H,aH,iH,t("td",cH,[o(l,{to:"/tag/array.html"},{default:n(()=>[hH]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[gH]),_:1})]),mH,t("td",fH,[t("a",uH,[e("🀄️"),o(s)]),e(),t("a",yH,[e("🔗"),o(s)])])]),t("tr",null,[pH,xH,bH,t("td",kH,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[wH]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[vH]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[IH]),_:1}),e(),qH]),zH,t("td",jH,[t("a",CH,[e("🀄️"),o(s)]),e(),t("a",OH,[e("🔗"),o(s)])])]),t("tr",null,[LH,PH,KH,t("td",VH,[o(l,{to:"/tag/graph.html"},{default:n(()=>[NH]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[DH]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[EH]),_:1}),e(),BH]),MH,t("td",YH,[t("a",AH,[e("🀄️"),o(s)]),e(),t("a",JH,[e("🔗"),o(s)])])]),t("tr",null,[RH,SH,UH,t("td",WH,[o(l,{to:"/tag/array.html"},{default:n(()=>[XH]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[FH]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[GH]),_:1}),e(),HH]),TH,t("td",QH,[t("a",ZH,[e("🀄️"),o(s)]),e(),t("a",$H,[e("🔗"),o(s)])])]),t("tr",null,[tT,eT,oT,t("td",lT,[o(l,{to:"/tag/string.html"},{default:n(()=>[nT]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sT]),_:1})]),rT,t("td",dT,[t("a",_T,[e("🀄️"),o(s)]),e(),t("a",aT,[e("🔗"),o(s)])])]),t("tr",null,[iT,cT,hT,t("td",gT,[o(l,{to:"/tag/array.html"},{default:n(()=>[mT]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fT]),_:1})]),uT,t("td",yT,[t("a",pT,[e("🀄️"),o(s)]),e(),t("a",xT,[e("🔗"),o(s)])])]),t("tr",null,[bT,kT,wT,t("td",vT,[o(l,{to:"/tag/array.html"},{default:n(()=>[IT]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qT]),_:1})]),zT,t("td",jT,[t("a",CT,[e("🀄️"),o(s)]),e(),t("a",OT,[e("🔗"),o(s)])])]),t("tr",null,[LT,PT,KT,t("td",VT,[o(l,{to:"/tag/array.html"},{default:n(()=>[NT]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[DT]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ET]),_:1}),e(),BT]),MT,t("td",YT,[t("a",AT,[e("🀄️"),o(s)]),e(),t("a",JT,[e("🔗"),o(s)])])]),t("tr",null,[RT,ST,UT,t("td",WT,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[XT]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[FT]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[GT]),_:1}),e(),HT]),TT,t("td",QT,[t("a",ZT,[e("🀄️"),o(s)]),e(),t("a",$T,[e("🔗"),o(s)])])]),t("tr",null,[tQ,eQ,oQ,t("td",lQ,[o(l,{to:"/tag/array.html"},{default:n(()=>[nQ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sQ]),_:1})]),rQ,t("td",dQ,[t("a",_Q,[e("🀄️"),o(s)]),e(),t("a",aQ,[e("🔗"),o(s)])])]),t("tr",null,[iQ,cQ,hQ,t("td",gQ,[o(l,{to:"/tag/string.html"},{default:n(()=>[mQ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fQ]),_:1})]),uQ,t("td",yQ,[t("a",pQ,[e("🀄️"),o(s)]),e(),t("a",xQ,[e("🔗"),o(s)])])]),t("tr",null,[bQ,kQ,wQ,t("td",vQ,[o(l,{to:"/tag/array.html"},{default:n(()=>[IQ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qQ]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[zQ]),_:1})]),jQ,t("td",CQ,[t("a",OQ,[e("🀄️"),o(s)]),e(),t("a",LQ,[e("🔗"),o(s)])])]),t("tr",null,[PQ,KQ,VQ,t("td",NQ,[o(l,{to:"/tag/graph.html"},{default:n(()=>[DQ]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[EQ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[BQ]),_:1}),e(),MQ]),YQ,t("td",AQ,[t("a",JQ,[e("🀄️"),o(s)]),e(),t("a",RQ,[e("🔗"),o(s)])])]),t("tr",null,[SQ,UQ,WQ,t("td",XQ,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[FQ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[GQ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[HQ]),_:1})]),TQ,t("td",QQ,[t("a",ZQ,[e("🀄️"),o(s)]),e(),t("a",$Q,[e("🔗"),o(s)])])]),t("tr",null,[tZ,eZ,oZ,t("td",lZ,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[nZ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[sZ]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[rZ]),_:1}),e(),dZ]),_Z,t("td",aZ,[t("a",iZ,[e("🀄️"),o(s)]),e(),t("a",cZ,[e("🔗"),o(s)])])]),t("tr",null,[hZ,gZ,mZ,t("td",fZ,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[uZ]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[yZ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[pZ]),_:1}),e(),xZ]),bZ,t("td",kZ,[t("a",wZ,[e("🀄️"),o(s)]),e(),t("a",vZ,[e("🔗"),o(s)])])]),t("tr",null,[IZ,qZ,zZ,t("td",jZ,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[CZ]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[OZ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[LZ]),_:1})]),PZ,t("td",KZ,[t("a",VZ,[e("🀄️"),o(s)]),e(),t("a",NZ,[e("🔗"),o(s)])])]),t("tr",null,[DZ,EZ,BZ,t("td",MZ,[o(l,{to:"/tag/graph.html"},{default:n(()=>[YZ]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[AZ]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[JZ]),_:1}),e(),RZ]),SZ,t("td",UZ,[t("a",WZ,[e("🀄️"),o(s)]),e(),t("a",XZ,[e("🔗"),o(s)])])]),t("tr",null,[FZ,GZ,HZ,t("td",TZ,[o(l,{to:"/tag/math.html"},{default:n(()=>[QZ]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ZZ]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[$Z]),_:1})]),t$,t("td",e$,[t("a",o$,[e("🀄️"),o(s)]),e(),t("a",l$,[e("🔗"),o(s)])])]),t("tr",null,[n$,s$,r$,t("td",d$,[o(l,{to:"/tag/string.html"},{default:n(()=>[_$]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[a$]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[i$]),_:1}),e(),c$]),h$,t("td",g$,[t("a",m$,[e("🀄️"),o(s)]),e(),t("a",f$,[e("🔗"),o(s)])])]),t("tr",null,[u$,y$,p$,t("td",x$,[o(l,{to:"/tag/array.html"},{default:n(()=>[b$]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[k$]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[w$]),_:1}),e(),v$]),I$,t("td",q$,[t("a",z$,[e("🀄️"),o(s)]),e(),t("a",j$,[e("🔗"),o(s)])])]),t("tr",null,[C$,O$,L$,t("td",P$,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[K$]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[V$]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[N$]),_:1}),e(),D$]),E$,t("td",B$,[t("a",M$,[e("🀄️"),o(s)]),e(),t("a",Y$,[e("🔗"),o(s)])])]),t("tr",null,[A$,J$,R$,t("td",S$,[o(l,{to:"/tag/array.html"},{default:n(()=>[U$]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[W$]),_:1})]),X$,t("td",F$,[t("a",G$,[e("🀄️"),o(s)]),e(),t("a",H$,[e("🔗"),o(s)])])]),t("tr",null,[T$,Q$,Z$,t("td",$$,[o(l,{to:"/tag/math.html"},{default:n(()=>[ttt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ett]),_:1})]),ott,t("td",ltt,[t("a",ntt,[e("🀄️"),o(s)]),e(),t("a",stt,[e("🔗"),o(s)])])]),t("tr",null,[rtt,dtt,_tt,t("td",att,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[itt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[ctt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[htt]),_:1}),e(),gtt]),mtt,t("td",ftt,[t("a",utt,[e("🀄️"),o(s)]),e(),t("a",ytt,[e("🔗"),o(s)])])]),t("tr",null,[ptt,xtt,btt,t("td",ktt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[wtt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[vtt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Itt]),_:1}),e(),qtt]),ztt,t("td",jtt,[t("a",Ctt,[e("🀄️"),o(s)]),e(),t("a",Ott,[e("🔗"),o(s)])])]),t("tr",null,[Ltt,Ptt,Ktt,t("td",Vtt,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Ntt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Dtt]),_:1})]),Ett,t("td",Btt,[t("a",Mtt,[e("🀄️"),o(s)]),e(),t("a",Ytt,[e("🔗"),o(s)])])]),t("tr",null,[Att,Jtt,Rtt,t("td",Stt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Utt]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Wtt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Xtt]),_:1}),e(),Ftt]),Gtt,t("td",Htt,[t("a",Ttt,[e("🀄️"),o(s)]),e(),t("a",Qtt,[e("🔗"),o(s)])])]),t("tr",null,[Ztt,$tt,tet,t("td",eet,[o(l,{to:"/tag/array.html"},{default:n(()=>[oet]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[net]),_:1})]),set,t("td",ret,[t("a",det,[e("🀄️"),o(s)]),e(),t("a",_et,[e("🔗"),o(s)])])]),t("tr",null,[aet,iet,cet,t("td",het,[o(l,{to:"/tag/tree.html"},{default:n(()=>[get]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[met]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[fet]),_:1}),e(),uet]),yet,t("td",pet,[t("a",xet,[e("🀄️"),o(s)]),e(),t("a",bet,[e("🔗"),o(s)])])]),t("tr",null,[ket,wet,vet,t("td",Iet,[o(l,{to:"/tag/graph.html"},{default:n(()=>[qet]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[zet]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[jet]),_:1})]),Cet,t("td",Oet,[t("a",Let,[e("🀄️"),o(s)]),e(),t("a",Pet,[e("🔗"),o(s)])])]),t("tr",null,[Ket,Vet,Net,t("td",Det,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Eet]),_:1})]),Bet,t("td",Met,[t("a",Yet,[e("🀄️"),o(s)]),e(),t("a",Aet,[e("🔗"),o(s)])])]),t("tr",null,[Jet,Ret,Set,t("td",Uet,[o(l,{to:"/tag/array.html"},{default:n(()=>[Wet]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Xet]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[Fet]),_:1})]),Get,t("td",Het,[t("a",Tet,[e("🀄️"),o(s)]),e(),t("a",Qet,[e("🔗"),o(s)])])]),t("tr",null,[Zet,$et,tot,t("td",eot,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[oot]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[lot]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[not]),_:1}),e(),sot]),rot,t("td",dot,[t("a",_ot,[e("🀄️"),o(s)]),e(),t("a",aot,[e("🔗"),o(s)])])]),t("tr",null,[iot,cot,hot,t("td",got,[o(l,{to:"/tag/array.html"},{default:n(()=>[mot]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fot]),_:1})]),uot,t("td",yot,[t("a",pot,[e("🀄️"),o(s)]),e(),t("a",xot,[e("🔗"),o(s)])])]),t("tr",null,[bot,kot,wot,t("td",vot,[o(l,{to:"/tag/array.html"},{default:n(()=>[Iot]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qot]),_:1})]),zot,t("td",jot,[t("a",Cot,[e("🀄️"),o(s)]),e(),t("a",Oot,[e("🔗"),o(s)])])]),t("tr",null,[Lot,Pot,Kot,t("td",Vot,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Not]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Dot]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Eot]),_:1}),e(),Bot]),Mot,t("td",Yot,[t("a",Aot,[e("🀄️"),o(s)]),e(),t("a",Jot,[e("🔗"),o(s)])])]),t("tr",null,[Rot,Sot,Uot,t("td",Wot,[o(l,{to:"/tag/string.html"},{default:n(()=>[Xot]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Fot]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[Got]),_:1})]),Hot,t("td",Tot,[t("a",Qot,[e("🀄️"),o(s)]),e(),t("a",Zot,[e("🔗"),o(s)])])]),t("tr",null,[$ot,tlt,elt,t("td",olt,[o(l,{to:"/tag/array.html"},{default:n(()=>[llt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[nlt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[slt]),_:1})]),rlt,t("td",dlt,[t("a",_lt,[e("🀄️"),o(s)]),e(),t("a",alt,[e("🔗"),o(s)])])]),t("tr",null,[ilt,clt,hlt,t("td",glt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[mlt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[flt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ult]),_:1}),e(),ylt]),plt,t("td",xlt,[t("a",blt,[e("🀄️"),o(s)]),e(),t("a",klt,[e("🔗"),o(s)])])]),t("tr",null,[wlt,vlt,Ilt,t("td",qlt,[o(l,{to:"/tag/string.html"},{default:n(()=>[zlt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[jlt]),_:1})]),Clt,t("td",Olt,[t("a",Llt,[e("🀄️"),o(s)]),e(),t("a",Plt,[e("🔗"),o(s)])])]),t("tr",null,[Klt,Vlt,Nlt,t("td",Dlt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Elt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Blt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Mlt]),_:1}),e(),Ylt]),Alt,t("td",Jlt,[t("a",Rlt,[e("🀄️"),o(s)]),e(),t("a",Slt,[e("🔗"),o(s)])])]),t("tr",null,[Ult,Wlt,Xlt,t("td",Flt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Glt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Hlt]),_:1})]),Tlt,t("td",Qlt,[t("a",Zlt,[e("🀄️"),o(s)]),e(),t("a",$lt,[e("🔗"),o(s)])])]),t("tr",null,[tnt,ent,ont,t("td",lnt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[nnt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[snt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[rnt]),_:1}),e(),dnt]),_nt,t("td",ant,[t("a",int,[e("🀄️"),o(s)]),e(),t("a",cnt,[e("🔗"),o(s)])])]),t("tr",null,[hnt,gnt,mnt,t("td",fnt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[unt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ynt]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[pnt]),_:1}),e(),xnt]),bnt,t("td",knt,[t("a",wnt,[e("🀄️"),o(s)]),e(),t("a",vnt,[e("🔗"),o(s)])])]),t("tr",null,[Int,qnt,znt,t("td",jnt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Cnt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Ont]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Lnt]),_:1}),e(),Pnt]),Knt,t("td",Vnt,[t("a",Nnt,[e("🀄️"),o(s)]),e(),t("a",Dnt,[e("🔗"),o(s)])])]),t("tr",null,[Ent,Bnt,Mnt,t("td",Ynt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Ant]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Jnt]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[Rnt]),_:1}),e(),Snt]),Unt,t("td",Wnt,[t("a",Xnt,[e("🀄️"),o(s)]),e(),t("a",Fnt,[e("🔗"),o(s)])])]),t("tr",null,[Gnt,Hnt,Tnt,t("td",Qnt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Znt]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[$nt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[tst]),_:1}),e(),est]),ost,t("td",lst,[t("a",nst,[e("🀄️"),o(s)]),e(),t("a",sst,[e("🔗"),o(s)])])]),t("tr",null,[rst,dst,_st,t("td",ast,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[ist]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[cst]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[hst]),_:1}),e(),gst]),mst,t("td",fst,[t("a",ust,[e("🀄️"),o(s)]),e(),t("a",yst,[e("🔗"),o(s)])])]),t("tr",null,[pst,xst,bst,t("td",kst,[o(l,{to:"/tag/array.html"},{default:n(()=>[wst]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[vst]),_:1})]),Ist,t("td",qst,[t("a",zst,[e("🀄️"),o(s)]),e(),t("a",jst,[e("🔗"),o(s)])])]),t("tr",null,[Cst,Ost,Lst,t("td",Pst,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Kst]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[Vst]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Nst]),_:1}),e(),Dst]),Est,t("td",Bst,[t("a",Mst,[e("🀄️"),o(s)]),e(),t("a",Yst,[e("🔗"),o(s)])])]),t("tr",null,[Ast,Jst,Rst,t("td",Sst,[o(l,{to:"/tag/array.html"},{default:n(()=>[Ust]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Wst]),_:1})]),Xst,t("td",Fst,[t("a",Gst,[e("🀄️"),o(s)]),e(),t("a",Hst,[e("🔗"),o(s)])])]),t("tr",null,[Tst,Qst,Zst,t("td",$st,[o(l,{to:"/tag/array.html"},{default:n(()=>[trt]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ert]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ort]),_:1}),e(),lrt]),nrt,t("td",srt,[t("a",rrt,[e("🀄️"),o(s)]),e(),t("a",drt,[e("🔗"),o(s)])])]),t("tr",null,[_rt,art,irt,t("td",crt,[o(l,{to:"/tag/string.html"},{default:n(()=>[hrt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[grt]),_:1})]),mrt,t("td",frt,[t("a",urt,[e("🀄️"),o(s)]),e(),t("a",yrt,[e("🔗"),o(s)])])]),t("tr",null,[prt,xrt,brt,t("td",krt,[o(l,{to:"/tag/math.html"},{default:n(()=>[wrt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[vrt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Irt]),_:1}),e(),qrt]),zrt,t("td",jrt,[t("a",Crt,[e("🀄️"),o(s)]),e(),t("a",Ort,[e("🔗"),o(s)])])]),t("tr",null,[Lrt,Prt,Krt,t("td",Vrt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[Nrt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Drt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ert]),_:1})]),Brt,t("td",Mrt,[t("a",Yrt,[e("🀄️"),o(s)]),e(),t("a",Art,[e("🔗"),o(s)])])]),t("tr",null,[Jrt,Rrt,Srt,t("td",Urt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Wrt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Xrt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[Frt]),_:1})]),Grt,t("td",Hrt,[t("a",Trt,[e("🀄️"),o(s)]),e(),t("a",Qrt,[e("🔗"),o(s)])])]),t("tr",null,[Zrt,$rt,tdt,t("td",edt,[o(l,{to:"/tag/array.html"},{default:n(()=>[odt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ldt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[ndt]),_:1})]),sdt,t("td",rdt,[t("a",ddt,[e("🀄️"),o(s)]),e(),t("a",_dt,[e("🔗"),o(s)])])]),t("tr",null,[adt,idt,cdt,t("td",hdt,[o(l,{to:"/tag/array.html"},{default:n(()=>[gdt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[mdt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fdt]),_:1})]),udt,t("td",ydt,[t("a",pdt,[e("🀄️"),o(s)]),e(),t("a",xdt,[e("🔗"),o(s)])])]),t("tr",null,[bdt,kdt,wdt,t("td",vdt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Idt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qdt]),_:1})]),zdt,t("td",jdt,[t("a",Cdt,[e("🀄️"),o(s)]),e(),t("a",Odt,[e("🔗"),o(s)])])]),t("tr",null,[Ldt,Pdt,Kdt,t("td",Vdt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Ndt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ddt]),_:1})]),Edt,t("td",Bdt,[t("a",Mdt,[e("🀄️"),o(s)]),e(),t("a",Ydt,[e("🔗"),o(s)])])]),t("tr",null,[Adt,Jdt,Rdt,t("td",Sdt,[o(l,{to:"/tag/math.html"},{default:n(()=>[Udt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Wdt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Xdt]),_:1})]),Fdt,t("td",Gdt,[t("a",Hdt,[e("🀄️"),o(s)]),e(),t("a",Tdt,[e("🔗"),o(s)])])]),t("tr",null,[Qdt,Zdt,$dt,t("td",t_t,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[e_t]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[o_t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[l_t]),_:1}),e(),n_t]),s_t,t("td",r_t,[t("a",d_t,[e("🀄️"),o(s)]),e(),t("a",__t,[e("🔗"),o(s)])])]),t("tr",null,[a_t,i_t,c_t,t("td",h_t,[o(l,{to:"/tag/array.html"},{default:n(()=>[g_t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[m_t]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[f_t]),_:1})]),u_t,t("td",y_t,[t("a",p_t,[e("🀄️"),o(s)]),e(),t("a",x_t,[e("🔗"),o(s)])])]),t("tr",null,[b_t,k_t,w_t,t("td",v_t,[o(l,{to:"/tag/string.html"},{default:n(()=>[I_t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[q_t]),_:1})]),z_t,t("td",j_t,[t("a",C_t,[e("🀄️"),o(s)]),e(),t("a",O_t,[e("🔗"),o(s)])])]),t("tr",null,[L_t,P_t,K_t,t("td",V_t,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[N_t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[D_t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[E_t]),_:1}),e(),B_t]),M_t,t("td",Y_t,[t("a",A_t,[e("🀄️"),o(s)]),e(),t("a",J_t,[e("🔗"),o(s)])])]),t("tr",null,[R_t,S_t,U_t,t("td",W_t,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[X_t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[F_t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[G_t]),_:1}),e(),H_t]),T_t,t("td",Q_t,[t("a",Z_t,[e("🀄️"),o(s)]),e(),t("a",$_t,[e("🔗"),o(s)])])]),t("tr",null,[tat,eat,oat,t("td",lat,[o(l,{to:"/tag/array.html"},{default:n(()=>[nat]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sat]),_:1})]),rat,t("td",dat,[t("a",_at,[e("🀄️"),o(s)]),e(),t("a",aat,[e("🔗"),o(s)])])]),t("tr",null,[iat,cat,hat,t("td",gat,[o(l,{to:"/tag/math.html"},{default:n(()=>[mat]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fat]),_:1})]),uat,t("td",yat,[t("a",pat,[e("🀄️"),o(s)]),e(),t("a",xat,[e("🔗"),o(s)])])]),t("tr",null,[bat,kat,wat,t("td",vat,[o(l,{to:"/tag/string.html"},{default:n(()=>[Iat]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qat]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[zat]),_:1})]),jat,t("td",Cat,[t("a",Oat,[e("🀄️"),o(s)]),e(),t("a",Lat,[e("🔗"),o(s)])])]),t("tr",null,[Pat,Kat,Vat,t("td",Nat,[o(l,{to:"/tag/array.html"},{default:n(()=>[Dat]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Eat]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[Bat]),_:1})]),Mat,t("td",Yat,[t("a",Aat,[e("🀄️"),o(s)]),e(),t("a",Jat,[e("🔗"),o(s)])])]),t("tr",null,[Rat,Sat,Uat,t("td",Wat,[o(l,{to:"/tag/string.html"},{default:n(()=>[Xat]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Fat]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[Gat]),_:1})]),Hat,t("td",Tat,[t("a",Qat,[e("🀄️"),o(s)]),e(),t("a",Zat,[e("🔗"),o(s)])])]),t("tr",null,[$at,tit,eit,t("td",oit,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[lit]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[nit]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sit]),_:1}),e(),rit]),dit,t("td",_it,[t("a",ait,[e("🀄️"),o(s)]),e(),t("a",iit,[e("🔗"),o(s)])])]),t("tr",null,[cit,hit,t("td",git,[o(l,{to:"/problem/2262.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",mit,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[fit]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[uit]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[yit]),_:1})]),pit,t("td",xit,[t("a",bit,[e("🀄️"),o(s)]),e(),t("a",kit,[e("🔗"),o(s)])])]),t("tr",null,[wit,vit,Iit,t("td",qit,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[zit]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[jit]),_:1})]),Cit,t("td",Oit,[t("a",Lit,[e("🀄️"),o(s)]),e(),t("a",Pit,[e("🔗"),o(s)])])]),t("tr",null,[Kit,Vit,Nit,t("td",Dit,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Eit]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Bit]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Mit]),_:1}),e(),Yit]),Ait,t("td",Jit,[t("a",Rit,[e("🀄️"),o(s)]),e(),t("a",Sit,[e("🔗"),o(s)])])]),t("tr",null,[Uit,Wit,Xit,t("td",Fit,[o(l,{to:"/tag/array.html"},{default:n(()=>[Git]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Hit]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[Tit]),_:1})]),Qit,t("td",Zit,[t("a",$it,[e("🀄️"),o(s)]),e(),t("a",tct,[e("🔗"),o(s)])])]),t("tr",null,[ect,oct,lct,t("td",nct,[o(l,{to:"/tag/array.html"},{default:n(()=>[sct]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[rct]),_:1})]),dct,t("td",_ct,[t("a",act,[e("🀄️"),o(s)]),e(),t("a",ict,[e("🔗"),o(s)])])]),t("tr",null,[cct,hct,gct,t("td",mct,[o(l,{to:"/tag/array.html"},{default:n(()=>[fct]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[uct]),_:1})]),yct,t("td",pct,[t("a",xct,[e("🀄️"),o(s)]),e(),t("a",bct,[e("🔗"),o(s)])])]),t("tr",null,[kct,wct,vct,t("td",Ict,[o(l,{to:"/tag/stack.html"},{default:n(()=>[qct]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[zct]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[jct]),_:1}),e(),Cct]),Oct,t("td",Lct,[t("a",Pct,[e("🀄️"),o(s)]),e(),t("a",Kct,[e("🔗"),o(s)])])]),t("tr",null,[Vct,Nct,Dct,t("td",Ect,[o(l,{to:"/tag/array.html"},{default:n(()=>[Bct]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Mct]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[Yct]),_:1})]),Act,t("td",Jct,[t("a",Rct,[e("🀄️"),o(s)]),e(),t("a",Sct,[e("🔗"),o(s)])])]),t("tr",null,[Uct,Wct,Xct,t("td",Fct,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Gct]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Hct]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Tct]),_:1}),e(),Qct]),Zct,t("td",$ct,[t("a",tht,[e("🀄️"),o(s)]),e(),t("a",eht,[e("🔗"),o(s)])])]),t("tr",null,[oht,lht,nht,t("td",sht,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[rht]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[dht]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[_ht]),_:1}),e(),aht]),iht,t("td",cht,[t("a",hht,[e("🀄️"),o(s)]),e(),t("a",ght,[e("🔗"),o(s)])])]),t("tr",null,[mht,fht,uht,t("td",yht,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[pht]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[xht]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[bht]),_:1}),e(),kht]),wht,t("td",vht,[t("a",Iht,[e("🀄️"),o(s)]),e(),t("a",qht,[e("🔗"),o(s)])])]),t("tr",null,[zht,jht,Cht,t("td",Oht,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Lht]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Pht]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Kht]),_:1})]),Vht,t("td",Nht,[t("a",Dht,[e("🀄️"),o(s)]),e(),t("a",Eht,[e("🔗"),o(s)])])]),t("tr",null,[Bht,Mht,Yht,t("td",Aht,[o(l,{to:"/tag/tree.html"},{default:n(()=>[Jht]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Rht]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Sht]),_:1}),e(),Uht]),Wht,t("td",Xht,[t("a",Fht,[e("🀄️"),o(s)]),e(),t("a",Ght,[e("🔗"),o(s)])])]),t("tr",null,[Hht,Tht,Qht,t("td",Zht,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[$ht]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[t1t]),_:1})]),e1t,t("td",o1t,[t("a",l1t,[e("🀄️"),o(s)]),e(),t("a",n1t,[e("🔗"),o(s)])])]),t("tr",null,[s1t,r1t,d1t,t("td",_1t,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[a1t]),_:1})]),i1t,t("td",c1t,[t("a",h1t,[e("🀄️"),o(s)]),e(),t("a",g1t,[e("🔗"),o(s)])])]),t("tr",null,[m1t,f1t,u1t,t("td",y1t,[o(l,{to:"/tag/array.html"},{default:n(()=>[p1t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[x1t]),_:1})]),b1t,t("td",k1t,[t("a",w1t,[e("🀄️"),o(s)]),e(),t("a",v1t,[e("🔗"),o(s)])])]),t("tr",null,[I1t,q1t,z1t,t("td",j1t,[o(l,{to:"/tag/queue.html"},{default:n(()=>[C1t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[O1t]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[L1t]),_:1})]),P1t,t("td",K1t,[t("a",V1t,[e("🀄️"),o(s)]),e(),t("a",N1t,[e("🔗"),o(s)])])]),t("tr",null,[D1t,E1t,B1t,t("td",M1t,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Y1t]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[A1t]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[J1t]),_:1}),e(),R1t]),S1t,t("td",U1t,[t("a",W1t,[e("🀄️"),o(s)]),e(),t("a",X1t,[e("🔗"),o(s)])])]),t("tr",null,[F1t,G1t,H1t,t("td",T1t,[o(l,{to:"/tag/math.html"},{default:n(()=>[Q1t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Z1t]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[$1t]),_:1}),e(),tgt]),egt,t("td",ogt,[t("a",lgt,[e("🀄️"),o(s)]),e(),t("a",ngt,[e("🔗"),o(s)])])]),t("tr",null,[sgt,rgt,dgt,t("td",_gt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[agt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[igt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[cgt]),_:1}),e(),hgt]),ggt,t("td",mgt,[t("a",fgt,[e("🀄️"),o(s)]),e(),t("a",ugt,[e("🔗"),o(s)])])]),t("tr",null,[ygt,pgt,xgt,t("td",bgt,[o(l,{to:"/tag/array.html"},{default:n(()=>[kgt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wgt]),_:1})]),vgt,t("td",Igt,[t("a",qgt,[e("🀄️"),o(s)]),e(),t("a",zgt,[e("🔗"),o(s)])])]),t("tr",null,[jgt,Cgt,Ogt,t("td",Lgt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Pgt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Kgt]),_:1})]),Vgt,t("td",Ngt,[t("a",Dgt,[e("🀄️"),o(s)]),e(),t("a",Egt,[e("🔗"),o(s)])])]),t("tr",null,[Bgt,Mgt,Ygt,t("td",Agt,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Jgt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Rgt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Sgt]),_:1})]),Ugt,t("td",Wgt,[t("a",Xgt,[e("🀄️"),o(s)]),e(),t("a",Fgt,[e("🔗"),o(s)])])]),t("tr",null,[Ggt,Hgt,Tgt,t("td",Qgt,[o(l,{to:"/tag/math.html"},{default:n(()=>[Zgt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$gt]),_:1})]),tmt,t("td",emt,[t("a",omt,[e("🀄️"),o(s)]),e(),t("a",lmt,[e("🔗"),o(s)])])]),t("tr",null,[nmt,smt,rmt,t("td",dmt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[_mt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[amt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[imt]),_:1})]),cmt,t("td",hmt,[t("a",gmt,[e("🀄️"),o(s)]),e(),t("a",mmt,[e("🔗"),o(s)])])]),t("tr",null,[fmt,umt,ymt,t("td",pmt,[o(l,{to:"/tag/string.html"},{default:n(()=>[xmt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[bmt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[kmt]),_:1})]),wmt,t("td",vmt,[t("a",Imt,[e("🀄️"),o(s)]),e(),t("a",qmt,[e("🔗"),o(s)])])]),t("tr",null,[zmt,jmt,Cmt,t("td",Omt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Lmt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Pmt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Kmt]),_:1})]),Vmt,t("td",Nmt,[t("a",Dmt,[e("🀄️"),o(s)]),e(),t("a",Emt,[e("🔗"),o(s)])])]),t("tr",null,[Bmt,Mmt,Ymt,t("td",Amt,[o(l,{to:"/tag/math.html"},{default:n(()=>[Jmt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Rmt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[Smt]),_:1})]),Umt,t("td",Wmt,[t("a",Xmt,[e("🀄️"),o(s)]),e(),t("a",Fmt,[e("🔗"),o(s)])])]),t("tr",null,[Gmt,Hmt,Tmt,t("td",Qmt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Zmt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[$mt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[tft]),_:1}),e(),eft]),oft,t("td",lft,[t("a",nft,[e("🀄️"),o(s)]),e(),t("a",sft,[e("🔗"),o(s)])])]),t("tr",null,[rft,dft,_ft,t("td",aft,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[ift]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[cft]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[hft]),_:1}),e(),gft]),mft,t("td",fft,[t("a",uft,[e("🀄️"),o(s)]),e(),t("a",yft,[e("🔗"),o(s)])])]),t("tr",null,[pft,xft,bft,t("td",kft,[o(l,{to:"/tag/array.html"},{default:n(()=>[wft]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[vft]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[Ift]),_:1})]),qft,t("td",zft,[t("a",jft,[e("🀄️"),o(s)]),e(),t("a",Cft,[e("🔗"),o(s)])])]),t("tr",null,[Oft,Lft,Pft,t("td",Kft,[o(l,{to:"/tag/string.html"},{default:n(()=>[Vft]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Nft]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Dft]),_:1}),e(),Eft]),Bft,t("td",Mft,[t("a",Yft,[e("🀄️"),o(s)]),e(),t("a",Aft,[e("🔗"),o(s)])])]),t("tr",null,[Jft,Rft,Sft,t("td",Uft,[o(l,{to:"/tag/array.html"},{default:n(()=>[Wft]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Xft]),_:1})]),Fft,t("td",Gft,[t("a",Hft,[e("🀄️"),o(s)]),e(),t("a",Tft,[e("🔗"),o(s)])])]),t("tr",null,[Qft,Zft,$ft,t("td",tut,[o(l,{to:"/tag/array.html"},{default:n(()=>[eut]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[out]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[lut]),_:1})]),nut,t("td",sut,[t("a",rut,[e("🀄️"),o(s)]),e(),t("a",dut,[e("🔗"),o(s)])])]),t("tr",null,[_ut,aut,iut,t("td",cut,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[hut]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[gut]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[mut]),_:1}),e(),fut]),uut,t("td",yut,[t("a",put,[e("🀄️"),o(s)]),e(),t("a",xut,[e("🔗"),o(s)])])]),t("tr",null,[but,kut,wut,t("td",vut,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[Iut]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[qut]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[zut]),_:1}),e(),jut]),Cut,t("td",Out,[t("a",Lut,[e("🀄️"),o(s)]),e(),t("a",Put,[e("🔗"),o(s)])])]),t("tr",null,[Kut,Vut,t("td",Nut,[o(l,{to:"/problem/2463.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Dut,[o(l,{to:"/tag/array.html"},{default:n(()=>[Eut]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[But]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[Mut]),_:1})]),Yut,t("td",Aut,[t("a",Jut,[e("🀄️"),o(s)]),e(),t("a",Rut,[e("🔗"),o(s)])])]),t("tr",null,[Sut,Uut,Wut,t("td",Xut,[o(l,{to:"/tag/array.html"},{default:n(()=>[Fut]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Gut]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Hut]),_:1}),e(),Tut]),Qut,t("td",Zut,[t("a",$ut,[e("🀄️"),o(s)]),e(),t("a",tyt,[e("🔗"),o(s)])])]),t("tr",null,[eyt,oyt,lyt,t("td",nyt,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[syt]),_:1})]),ryt,t("td",dyt,[t("a",_yt,[e("🀄️"),o(s)]),e(),t("a",ayt,[e("🔗"),o(s)])])]),t("tr",null,[iyt,cyt,hyt,t("td",gyt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[myt]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[fyt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[uyt]),_:1}),e(),yyt]),pyt,t("td",xyt,[t("a",byt,[e("🀄️"),o(s)]),e(),t("a",kyt,[e("🔗"),o(s)])])]),t("tr",null,[wyt,vyt,Iyt,t("td",qyt,[o(l,{to:"/tag/string.html"},{default:n(()=>[zyt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[jyt]),_:1})]),Cyt,t("td",Oyt,[t("a",Lyt,[e("🀄️"),o(s)]),e(),t("a",Pyt,[e("🔗"),o(s)])])]),t("tr",null,[Kyt,Vyt,Nyt,t("td",Dyt,[o(l,{to:"/tag/string.html"},{default:n(()=>[Eyt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Byt]),_:1})]),Myt,t("td",Yyt,[t("a",Ayt,[e("🀄️"),o(s)]),e(),t("a",Jyt,[e("🔗"),o(s)])])]),t("tr",null,[Ryt,Syt,Uyt,t("td",Wyt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Xyt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Fyt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Gyt]),_:1})]),Hyt,t("td",Tyt,[t("a",Qyt,[e("🀄️"),o(s)]),e(),t("a",Zyt,[e("🔗"),o(s)])])]),t("tr",null,[$yt,tpt,t("td",ept,[o(l,{to:"/problem/2501.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",opt,[o(l,{to:"/tag/array.html"},{default:n(()=>[lpt]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[npt]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[spt]),_:1}),e(),rpt]),dpt,t("td",_pt,[t("a",apt,[e("🀄️"),o(s)]),e(),t("a",ipt,[e("🔗"),o(s)])])]),t("tr",null,[cpt,hpt,gpt,t("td",mpt,[o(l,{to:"/tag/array.html"},{default:n(()=>[fpt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[upt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[ypt]),_:1})]),ppt,t("td",xpt,[t("a",bpt,[e("🀄️"),o(s)]),e(),t("a",kpt,[e("🔗"),o(s)])])]),t("tr",null,[wpt,vpt,Ipt,t("td",qpt,[o(l,{to:"/tag/array.html"},{default:n(()=>[zpt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[jpt]),_:1})]),Cpt,t("td",Opt,[t("a",Lpt,[e("🀄️"),o(s)]),e(),t("a",Ppt,[e("🔗"),o(s)])])]),t("tr",null,[Kpt,Vpt,Npt,t("td",Dpt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[Ept]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Bpt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Mpt]),_:1})]),Ypt,t("td",Apt,[t("a",Jpt,[e("🀄️"),o(s)]),e(),t("a",Rpt,[e("🔗"),o(s)])])]),t("tr",null,[Spt,Upt,Wpt,t("td",Xpt,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Fpt]),_:1})]),Gpt,t("td",Hpt,[t("a",Tpt,[e("🀄️"),o(s)]),e(),t("a",Qpt,[e("🔗"),o(s)])])]),t("tr",null,[Zpt,$pt,txt,t("td",ext,[o(l,{to:"/tag/tree.html"},{default:n(()=>[oxt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[lxt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[nxt]),_:1}),e(),sxt]),rxt,t("td",dxt,[t("a",_xt,[e("🀄️"),o(s)]),e(),t("a",axt,[e("🔗"),o(s)])])]),t("tr",null,[ixt,cxt,hxt,t("td",gxt,[o(l,{to:"/tag/array.html"},{default:n(()=>[mxt]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[fxt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[uxt]),_:1}),e(),yxt]),pxt,t("td",xxt,[t("a",bxt,[e("🀄️"),o(s)]),e(),t("a",kxt,[e("🔗"),o(s)])])]),t("tr",null,[wxt,vxt,Ixt,t("td",qxt,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[zxt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[jxt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Cxt]),_:1}),e(),Oxt]),Lxt,t("td",Pxt,[t("a",Kxt,[e("🀄️"),o(s)]),e(),t("a",Vxt,[e("🔗"),o(s)])])]),t("tr",null,[Nxt,Dxt,Ext,t("td",Bxt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Mxt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[Yxt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Axt]),_:1}),e(),Jxt]),Rxt,t("td",Sxt,[t("a",Uxt,[e("🀄️"),o(s)]),e(),t("a",Wxt,[e("🔗"),o(s)])])]),t("tr",null,[Xxt,Fxt,Gxt,t("td",Hxt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[Txt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Qxt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Zxt]),_:1})]),$xt,t("td",t2t,[t("a",e2t,[e("🀄️"),o(s)]),e(),t("a",o2t,[e("🔗"),o(s)])])]),t("tr",null,[l2t,n2t,s2t,t("td",r2t,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[d2t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_2t]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[a2t]),_:1}),e(),i2t]),c2t,t("td",h2t,[t("a",g2t,[e("🀄️"),o(s)]),e(),t("a",m2t,[e("🔗"),o(s)])])]),t("tr",null,[f2t,u2t,y2t,t("td",p2t,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[x2t]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[b2t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[k2t]),_:1}),e(),w2t]),v2t,t("td",I2t,[t("a",q2t,[e("🀄️"),o(s)]),e(),t("a",z2t,[e("🔗"),o(s)])])]),t("tr",null,[j2t,C2t,O2t,t("td",L2t,[o(l,{to:"/tag/tree.html"},{default:n(()=>[P2t]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[K2t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[V2t]),_:1}),e(),N2t]),D2t,t("td",E2t,[t("a",B2t,[e("🀄️"),o(s)]),e(),t("a",M2t,[e("🔗"),o(s)])])]),t("tr",null,[Y2t,A2t,J2t,t("td",R2t,[o(l,{to:"/tag/array.html"},{default:n(()=>[S2t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[U2t]),_:1})]),W2t,t("td",X2t,[t("a",F2t,[e("🀄️"),o(s)]),e(),t("a",G2t,[e("🔗"),o(s)])])]),t("tr",null,[H2t,T2t,Q2t,t("td",Z2t,[o(l,{to:"/tag/array.html"},{default:n(()=>[$2t]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[t3t]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[e3t]),_:1}),e(),o3t]),l3t,t("td",n3t,[t("a",s3t,[e("🀄️"),o(s)]),e(),t("a",r3t,[e("🔗"),o(s)])])]),t("tr",null,[d3t,_3t,a3t,t("td",i3t,[o(l,{to:"/tag/array.html"},{default:n(()=>[c3t]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[h3t]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[g3t]),_:1}),e(),m3t]),f3t,t("td",u3t,[t("a",y3t,[e("🀄️"),o(s)]),e(),t("a",p3t,[e("🔗"),o(s)])])]),t("tr",null,[x3t,b3t,k3t,t("td",w3t,[o(l,{to:"/tag/stack.html"},{default:n(()=>[v3t]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[I3t]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[q3t]),_:1}),e(),z3t]),j3t,t("td",C3t,[t("a",O3t,[e("🀄️"),o(s)]),e(),t("a",L3t,[e("🔗"),o(s)])])]),t("tr",null,[P3t,K3t,V3t,t("td",N3t,[o(l,{to:"/tag/array.html"},{default:n(()=>[D3t]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[E3t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[B3t]),_:1}),e(),M3t]),Y3t,t("td",A3t,[t("a",J3t,[e("🀄️"),o(s)]),e(),t("a",R3t,[e("🔗"),o(s)])])]),t("tr",null,[S3t,U3t,W3t,t("td",X3t,[o(l,{to:"/tag/stack.html"},{default:n(()=>[F3t]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[G3t]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[H3t]),_:1}),e(),T3t]),Q3t,t("td",Z3t,[t("a",$3t,[e("🀄️"),o(s)]),e(),t("a",tbt,[e("🔗"),o(s)])])]),t("tr",null,[ebt,obt,lbt,t("td",nbt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[sbt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[rbt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[dbt]),_:1}),e(),_bt]),abt,t("td",ibt,[t("a",cbt,[e("🀄️"),o(s)]),e(),t("a",hbt,[e("🔗"),o(s)])])]),t("tr",null,[gbt,mbt,fbt,t("td",ubt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[ybt]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[pbt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[xbt]),_:1}),e(),bbt]),kbt,t("td",wbt,[t("a",vbt,[e("🀄️"),o(s)]),e(),t("a",Ibt,[e("🔗"),o(s)])])]),t("tr",null,[qbt,zbt,jbt,t("td",Cbt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Obt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Lbt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Pbt]),_:1}),e(),Kbt]),Vbt,t("td",Nbt,[t("a",Dbt,[e("🀄️"),o(s)]),e(),t("a",Ebt,[e("🔗"),o(s)])])]),t("tr",null,[Bbt,Mbt,t("td",Ybt,[o(l,{to:"/problem/2684.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Abt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Jbt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Rbt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[Sbt]),_:1})]),Ubt,t("td",Wbt,[t("a",Xbt,[e("🀄️"),o(s)]),e(),t("a",Fbt,[e("🔗"),o(s)])])]),t("tr",null,[Gbt,Hbt,Tbt,t("td",Qbt,[o(l,{to:"/tag/trie.html"},{default:n(()=>[Zbt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[$bt]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[t4t]),_:1}),e(),e4t]),o4t,t("td",l4t,[t("a",n4t,[e("🀄️"),o(s)]),e(),t("a",s4t,[e("🔗"),o(s)])])]),t("tr",null,[r4t,d4t,_4t,t("td",a4t,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[i4t]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[c4t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[h4t]),_:1}),e(),g4t]),m4t,t("td",f4t,[t("a",u4t,[e("🀄️"),o(s)]),e(),t("a",y4t,[e("🔗"),o(s)])])]),t("tr",null,[p4t,x4t,b4t,t("td",k4t,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[w4t]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[v4t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[I4t]),_:1})]),q4t,t("td",z4t,[t("a",j4t,[e("🀄️"),o(s)]),e(),t("a",C4t,[e("🔗"),o(s)])])]),t("tr",null,[O4t,L4t,P4t,t("td",K4t,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[V4t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[N4t]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[D4t]),_:1}),e(),E4t]),B4t,t("td",M4t,[t("a",Y4t,[e("🀄️"),o(s)]),e(),t("a",A4t,[e("🔗"),o(s)])])]),t("tr",null,[J4t,R4t,S4t,t("td",U4t,[o(l,{to:"/tag/math.html"},{default:n(()=>[W4t]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[X4t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[F4t]),_:1})]),G4t,t("td",H4t,[t("a",T4t,[e("🀄️"),o(s)]),e(),t("a",Q4t,[e("🔗"),o(s)])])]),t("tr",null,[Z4t,$4t,t5t,t("td",e5t,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[o5t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[l5t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[n5t]),_:1}),e(),s5t]),r5t,t("td",d5t,[t("a",_5t,[e("🀄️"),o(s)]),e(),t("a",a5t,[e("🔗"),o(s)])])]),t("tr",null,[i5t,c5t,h5t,t("td",g5t,[o(l,{to:"/tag/array.html"},{default:n(()=>[m5t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[f5t]),_:1})]),u5t,t("td",y5t,[t("a",p5t,[e("🀄️"),o(s)]),e(),t("a",x5t,[e("🔗"),o(s)])])]),t("tr",null,[b5t,k5t,w5t,t("td",v5t,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[I5t]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[q5t]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[z5t]),_:1}),e(),j5t]),C5t,t("td",O5t,[t("a",L5t,[e("🀄️"),o(s)]),e(),t("a",P5t,[e("🔗"),o(s)])])]),t("tr",null,[K5t,V5t,N5t,t("td",D5t,[o(l,{to:"/tag/array.html"},{default:n(()=>[E5t]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[B5t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[M5t]),_:1})]),Y5t,t("td",A5t,[t("a",J5t,[e("🀄️"),o(s)]),e(),t("a",R5t,[e("🔗"),o(s)])])]),t("tr",null,[S5t,U5t,W5t,t("td",X5t,[o(l,{to:"/tag/array.html"},{default:n(()=>[F5t]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[G5t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[H5t]),_:1})]),T5t,t("td",Q5t,[t("a",Z5t,[e("🀄️"),o(s)]),e(),t("a",$5t,[e("🔗"),o(s)])])]),t("tr",null,[t6t,e6t,o6t,t("td",l6t,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[n6t]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[s6t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[r6t]),_:1}),e(),d6t]),_6t,t("td",a6t,[t("a",i6t,[e("🀄️"),o(s)]),e(),t("a",c6t,[e("🔗"),o(s)])])]),t("tr",null,[h6t,g6t,m6t,t("td",f6t,[o(l,{to:"/tag/array.html"},{default:n(()=>[u6t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[y6t]),_:1})]),p6t,t("td",x6t,[t("a",b6t,[e("🀄️"),o(s)]),e(),t("a",k6t,[e("🔗"),o(s)])])]),t("tr",null,[w6t,v6t,I6t,t("td",q6t,[o(l,{to:"/tag/array.html"},{default:n(()=>[z6t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[j6t]),_:1})]),C6t,t("td",O6t,[t("a",L6t,[e("🀄️"),o(s)]),e(),t("a",P6t,[e("🔗"),o(s)])])]),t("tr",null,[K6t,V6t,N6t,t("td",D6t,[o(l,{to:"/tag/array.html"},{default:n(()=>[E6t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[B6t]),_:1})]),M6t,t("td",Y6t,[t("a",A6t,[e("🀄️"),o(s)]),e(),t("a",J6t,[e("🔗"),o(s)])])]),t("tr",null,[R6t,S6t,U6t,t("td",W6t,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[X6t]),_:1})]),F6t,t("td",G6t,[t("a",H6t,[e("🀄️"),o(s)]),e(),t("a",T6t,[e("🔗"),o(s)])])]),t("tr",null,[Q6t,Z6t,$6t,t("td",t7t,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[e7t]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[o7t]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[l7t]),_:1}),e(),n7t]),s7t,t("td",r7t,[t("a",d7t,[e("🀄️"),o(s)]),e(),t("a",_7t,[e("🔗"),o(s)])])]),t("tr",null,[a7t,i7t,c7t,t("td",h7t,[o(l,{to:"/tag/string.html"},{default:n(()=>[g7t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[m7t]),_:1})]),f7t,t("td",u7t,[t("a",y7t,[e("🀄️"),o(s)]),e(),t("a",p7t,[e("🔗"),o(s)])])]),t("tr",null,[x7t,b7t,k7t,t("td",w7t,[o(l,{to:"/tag/array.html"},{default:n(()=>[v7t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[I7t]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[q7t]),_:1})]),z7t,t("td",j7t,[t("a",C7t,[e("🀄️"),o(s)]),e(),t("a",O7t,[e("🔗"),o(s)])])]),t("tr",null,[L7t,P7t,K7t,t("td",V7t,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[N7t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[D7t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[E7t]),_:1})]),B7t,t("td",M7t,[t("a",Y7t,[e("🀄️"),o(s)]),e(),t("a",A7t,[e("🔗"),o(s)])])]),t("tr",null,[J7t,R7t,S7t,t("td",U7t,[o(l,{to:"/tag/array.html"},{default:n(()=>[W7t]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[X7t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[F7t]),_:1})]),G7t,t("td",H7t,[t("a",T7t,[e("🀄️"),o(s)]),e(),t("a",Q7t,[e("🔗"),o(s)])])]),t("tr",null,[Z7t,$7t,t0t,t("td",e0t,[o(l,{to:"/tag/math.html"},{default:n(()=>[o0t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[l0t]),_:1})]),n0t,t("td",s0t,[t("a",r0t,[e("🀄️"),o(s)]),e(),t("a",d0t,[e("🔗"),o(s)])])]),t("tr",null,[_0t,a0t,i0t,t("td",c0t,[o(l,{to:"/tag/array.html"},{default:n(()=>[h0t]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[g0t]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[m0t]),_:1}),e(),f0t]),u0t,t("td",y0t,[t("a",p0t,[e("🀄️"),o(s)]),e(),t("a",x0t,[e("🔗"),o(s)])])]),t("tr",null,[b0t,k0t,w0t,t("td",v0t,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[I0t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[q0t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[z0t]),_:1})]),j0t,t("td",C0t,[t("a",O0t,[e("🀄️"),o(s)]),e(),t("a",L0t,[e("🔗"),o(s)])])]),t("tr",null,[P0t,K0t,V0t,t("td",N0t,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[D0t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[E0t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[B0t]),_:1}),e(),M0t]),Y0t,t("td",A0t,[t("a",J0t,[e("🀄️"),o(s)]),e(),t("a",R0t,[e("🔗"),o(s)])])]),t("tr",null,[S0t,U0t,W0t,t("td",X0t,[o(l,{to:"/tag/math.html"},{default:n(()=>[F0t]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[G0t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[H0t]),_:1}),e(),T0t]),Q0t,t("td",Z0t,[t("a",$0t,[e("🀄️"),o(s)]),e(),t("a",t9t,[e("🔗"),o(s)])])]),t("tr",null,[e9t,o9t,l9t,t("td",n9t,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[s9t]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[r9t]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[d9t]),_:1}),e(),_9t]),a9t,t("td",i9t,[t("a",c9t,[e("🀄️"),o(s)]),e(),t("a",h9t,[e("🔗"),o(s)])])]),t("tr",null,[g9t,m9t,f9t,t("td",u9t,[o(l,{to:"/tag/tree.html"},{default:n(()=>[y9t]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[p9t]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[x9t]),_:1}),e(),b9t]),k9t,t("td",w9t,[t("a",v9t,[e("🀄️"),o(s)]),e(),t("a",I9t,[e("🔗"),o(s)])])]),t("tr",null,[q9t,z9t,j9t,t("td",C9t,[o(l,{to:"/tag/graph.html"},{default:n(()=>[O9t]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[L9t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[P9t]),_:1})]),K9t,t("td",V9t,[t("a",N9t,[e("🀄️"),o(s)]),e(),t("a",D9t,[e("🔗"),o(s)])])]),t("tr",null,[E9t,B9t,M9t,t("td",Y9t,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[A9t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[J9t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[R9t]),_:1})]),S9t,t("td",U9t,[t("a",W9t,[e("🀄️"),o(s)]),e(),t("a",X9t,[e("🔗"),o(s)])])]),t("tr",null,[F9t,G9t,H9t,t("td",T9t,[o(l,{to:"/tag/string.html"},{default:n(()=>[Q9t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Z9t]),_:1})]),$9t,t("td",t8t,[t("a",e8t,[e("🀄️"),o(s)]),e(),t("a",o8t,[e("🔗"),o(s)])])]),t("tr",null,[l8t,n8t,s8t,t("td",r8t,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[d8t]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[_8t]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[a8t]),_:1}),e(),i8t]),c8t,t("td",h8t,[t("a",g8t,[e("🀄️"),o(s)]),e(),t("a",m8t,[e("🔗"),o(s)])])]),t("tr",null,[f8t,u8t,y8t,t("td",p8t,[o(l,{to:"/tag/array.html"},{default:n(()=>[x8t]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[b8t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[k8t]),_:1})]),w8t,t("td",v8t,[t("a",I8t,[e("🀄️"),o(s)]),e(),t("a",q8t,[e("🔗"),o(s)])])]),t("tr",null,[z8t,j8t,C8t,t("td",O8t,[o(l,{to:"/tag/array.html"},{default:n(()=>[L8t]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[P8t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[K8t]),_:1}),e(),V8t]),N8t,t("td",D8t,[t("a",E8t,[e("🀄️"),o(s)]),e(),t("a",B8t,[e("🔗"),o(s)])])]),t("tr",null,[M8t,Y8t,A8t,t("td",J8t,[o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[R8t]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[S8t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[U8t]),_:1})]),W8t,t("td",X8t,[t("a",F8t,[e("🀄️"),o(s)]),e(),t("a",G8t,[e("🔗"),o(s)])])]),t("tr",null,[H8t,T8t,Q8t,t("td",Z8t,[o(l,{to:"/tag/math.html"},{default:n(()=>[$8t]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[tkt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[ekt]),_:1})]),okt,t("td",lkt,[t("a",nkt,[e("🀄️"),o(s)]),e(),t("a",skt,[e("🔗"),o(s)])])]),t("tr",null,[rkt,dkt,_kt,t("td",akt,[o(l,{to:"/tag/array.html"},{default:n(()=>[ikt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ckt]),_:1})]),hkt,t("td",gkt,[t("a",mkt,[e("🀄️"),o(s)]),e(),t("a",fkt,[e("🔗"),o(s)])])]),t("tr",null,[ukt,ykt,pkt,t("td",xkt,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[bkt]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[kkt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[wkt]),_:1}),e(),vkt]),Ikt,t("td",qkt,[t("a",zkt,[e("🀄️"),o(s)]),e(),t("a",jkt,[e("🔗"),o(s)])])]),t("tr",null,[Ckt,Okt,Lkt,t("td",Pkt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Kkt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Vkt]),_:1})]),Nkt,t("td",Dkt,[t("a",Ekt,[e("🀄️"),o(s)]),e(),t("a",Bkt,[e("🔗"),o(s)])])]),t("tr",null,[Mkt,Ykt,Akt,t("td",Jkt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[Rkt]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[Skt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Ukt]),_:1}),e(),Wkt]),Xkt,t("td",Fkt,[t("a",Gkt,[e("🀄️"),o(s)]),e(),t("a",Hkt,[e("🔗"),o(s)])])]),t("tr",null,[Tkt,Qkt,Zkt,t("td",$kt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[twt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[ewt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[owt]),_:1})]),lwt,t("td",nwt,[t("a",swt,[e("🀄️"),o(s)]),e(),t("a",rwt,[e("🔗"),o(s)])])]),t("tr",null,[dwt,_wt,awt,t("td",iwt,[o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[cwt]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[hwt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[gwt]),_:1}),e(),mwt]),fwt,t("td",uwt,[t("a",ywt,[e("🀄️"),o(s)]),e(),t("a",pwt,[e("🔗"),o(s)])])]),t("tr",null,[xwt,bwt,kwt,t("td",wwt,[o(l,{to:"/tag/math.html"},{default:n(()=>[vwt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Iwt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[qwt]),_:1})]),zwt,t("td",jwt,[t("a",Cwt,[e("🀄️"),o(s)]),e(),t("a",Owt,[e("🔗"),o(s)])])]),t("tr",null,[Lwt,Pwt,Kwt,t("td",Vwt,[o(l,{to:"/tag/queue.html"},{default:n(()=>[Nwt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Dwt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ewt]),_:1}),e(),Bwt]),Mwt,t("td",Ywt,[t("a",Awt,[e("🀄️"),o(s)]),e(),t("a",Jwt,[e("🔗"),o(s)])])]),t("tr",null,[Rwt,Swt,Uwt,t("td",Wwt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[Xwt]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[Fwt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Gwt]),_:1}),e(),Hwt]),Twt,t("td",Qwt,[t("a",Zwt,[e("🀄️"),o(s)]),e(),t("a",$wt,[e("🔗"),o(s)])])]),t("tr",null,[tvt,evt,ovt,t("td",lvt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[nvt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[svt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[rvt]),_:1})]),dvt,t("td",_vt,[t("a",avt,[e("🀄️"),o(s)]),e(),t("a",ivt,[e("🔗"),o(s)])])]),t("tr",null,[cvt,hvt,gvt,t("td",mvt,[o(l,{to:"/tag/queue.html"},{default:n(()=>[fvt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[uvt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[yvt]),_:1}),e(),pvt]),xvt,t("td",bvt,[t("a",kvt,[e("🀄️"),o(s)]),e(),t("a",wvt,[e("🔗"),o(s)])])]),t("tr",null,[vvt,Ivt,qvt,t("td",zvt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[jvt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[Cvt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ovt]),_:1}),e(),Lvt]),Pvt,t("td",Kvt,[t("a",Vvt,[e("🀄️"),o(s)]),e(),t("a",Nvt,[e("🔗"),o(s)])])]),t("tr",null,[Dvt,Evt,Bvt,t("td",Mvt,[o(l,{to:"/tag/graph.html"},{default:n(()=>[Yvt]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[Avt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Jvt]),_:1}),e(),Rvt]),Svt,t("td",Uvt,[t("a",Wvt,[e("🀄️"),o(s)]),e(),t("a",Xvt,[e("🔗"),o(s)])])]),t("tr",null,[Fvt,Gvt,Hvt,t("td",Tvt,[o(l,{to:"/tag/math.html"},{default:n(()=>[Qvt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Zvt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[$vt]),_:1})]),tIt,t("td",eIt,[t("a",oIt,[e("🀄️"),o(s)]),e(),t("a",lIt,[e("🔗"),o(s)])])]),t("tr",null,[nIt,sIt,rIt,t("td",dIt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_It]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[aIt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[iIt]),_:1}),e(),cIt]),hIt,t("td",gIt,[t("a",mIt,[e("🀄️"),o(s)]),e(),t("a",fIt,[e("🔗"),o(s)])])]),t("tr",null,[uIt,yIt,pIt,t("td",xIt,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[bIt]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[kIt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wIt]),_:1})]),vIt,t("td",IIt,[t("a",qIt,[e("🀄️"),o(s)]),e(),t("a",zIt,[e("🔗"),o(s)])])]),t("tr",null,[jIt,CIt,OIt,t("td",LIt,[o(l,{to:"/tag/math.html"},{default:n(()=>[PIt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[KIt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[VIt]),_:1})]),NIt,t("td",DIt,[t("a",EIt,[e("🀄️"),o(s)]),e(),t("a",BIt,[e("🔗"),o(s)])])]),t("tr",null,[MIt,YIt,AIt,t("td",JIt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[RIt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[SIt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[UIt]),_:1}),e(),WIt]),XIt,t("td",FIt,[t("a",GIt,[e("🀄️"),o(s)]),e(),t("a",HIt,[e("🔗"),o(s)])])]),t("tr",null,[TIt,QIt,ZIt,t("td",$It,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tqt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eqt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[oqt]),_:1}),e(),lqt]),nqt,t("td",sqt,[t("a",rqt,[e("🀄️"),o(s)]),e(),t("a",dqt,[e("🔗"),o(s)])])]),t("tr",null,[_qt,aqt,iqt,t("td",cqt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[hqt]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[gqt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[mqt]),_:1})]),fqt,t("td",uqt,[t("a",yqt,[e("🀄️"),o(s)]),e(),t("a",pqt,[e("🔗"),o(s)])])]),t("tr",null,[xqt,bqt,kqt,t("td",wqt,[o(l,{to:"/tag/array.html"},{default:n(()=>[vqt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Iqt]),_:1})]),qqt,t("td",zqt,[t("a",jqt,[e("🀄️"),o(s)]),e(),t("a",Cqt,[e("🔗"),o(s)])])]),t("tr",null,[Oqt,Lqt,Pqt,t("td",Kqt,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[Vqt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[Nqt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Dqt]),_:1})]),Eqt,t("td",Bqt,[t("a",Mqt,[e("🀄️"),o(s)]),e(),t("a",Yqt,[e("🔗"),o(s)])])]),t("tr",null,[Aqt,Jqt,Rqt,t("td",Sqt,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[Uqt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Wqt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Xqt]),_:1})]),Fqt,t("td",Gqt,[t("a",Hqt,[e("🀄️"),o(s)]),e(),t("a",Tqt,[e("🔗"),o(s)])])]),t("tr",null,[Qqt,Zqt,$qt,t("td",tzt,[o(l,{to:"/tag/array.html"},{default:n(()=>[ezt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ozt]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[lzt]),_:1})]),nzt,t("td",szt,[t("a",rzt,[e("🀄️"),o(s)]),e(),t("a",dzt,[e("🔗"),o(s)])])]),t("tr",null,[_zt,azt,izt,t("td",czt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[hzt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[gzt]),_:1}),e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[mzt]),_:1}),e(),fzt]),uzt,t("td",yzt,[t("a",pzt,[e("🀄️"),o(s)]),e(),t("a",xzt,[e("🔗"),o(s)])])]),t("tr",null,[bzt,kzt,wzt,t("td",vzt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Izt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qzt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[zzt]),_:1})]),jzt,t("td",Czt,[t("a",Ozt,[e("🀄️"),o(s)]),e(),t("a",Lzt,[e("🔗"),o(s)])])]),t("tr",null,[Pzt,Kzt,Vzt,t("td",Nzt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Dzt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Ezt]),_:1})]),Bzt,t("td",Mzt,[t("a",Yzt,[e("🀄️"),o(s)]),e(),t("a",Azt,[e("🔗"),o(s)])])]),t("tr",null,[Jzt,Rzt,Szt,t("td",Uzt,[o(l,{to:"/tag/array.html"},{default:n(()=>[Wzt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Xzt]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[Fzt]),_:1})]),Gzt,t("td",Hzt,[t("a",Tzt,[e("🀄️"),o(s)]),e(),t("a",Qzt,[e("🔗"),o(s)])])]),t("tr",null,[Zzt,$zt,tjt,t("td",ejt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[ojt]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[ljt]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[njt]),_:1}),e(),sjt]),rjt,t("td",djt,[t("a",_jt,[e("🀄️"),o(s)]),e(),t("a",ajt,[e("🔗"),o(s)])])]),t("tr",null,[ijt,cjt,hjt,t("td",gjt,[o(l,{to:"/tag/array.html"},{default:n(()=>[mjt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fjt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[ujt]),_:1})]),yjt,t("td",pjt,[t("a",xjt,[e("🀄️"),o(s)]),e(),t("a",bjt,[e("🔗"),o(s)])])]),t("tr",null,[kjt,wjt,vjt,t("td",Ijt,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qjt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[zjt]),_:1})]),jjt,t("td",Cjt,[t("a",Ojt,[e("🀄️"),o(s)]),e(),t("a",Ljt,[e("🔗"),o(s)])])]),t("tr",null,[Pjt,Kjt,Vjt,t("td",Njt,[o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Djt]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[Ejt]),_:1})]),Bjt,t("td",Mjt,[t("a",Yjt,[e("🀄️"),o(s)]),e(),t("a",Ajt,[e("🔗"),o(s)])])]),t("tr",null,[Jjt,Rjt,Sjt,t("td",Ujt,[o(l,{to:"/tag/string.html"},{default:n(()=>[Wjt]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[Xjt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Fjt]),_:1}),e(),Gjt]),Hjt,t("td",Tjt,[t("a",Qjt,[e("🀄️"),o(s)]),e(),t("a",Zjt,[e("🔗"),o(s)])])]),t("tr",null,[$jt,tCt,eCt,t("td",oCt,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[lCt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[nCt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sCt]),_:1}),e(),rCt]),dCt,t("td",_Ct,[t("a",aCt,[e("🀄️"),o(s)]),e(),t("a",iCt,[e("🔗"),o(s)])])]),t("tr",null,[cCt,hCt,gCt,t("td",mCt,[o(l,{to:"/tag/array.html"},{default:n(()=>[fCt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[uCt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[yCt]),_:1})]),pCt,t("td",xCt,[t("a",bCt,[e("🀄️"),o(s)]),e(),t("a",kCt,[e("🔗"),o(s)])])]),t("tr",null,[wCt,vCt,ICt,t("td",qCt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[zCt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[jCt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[CCt]),_:1}),e(),OCt]),LCt,t("td",PCt,[t("a",KCt,[e("🀄️"),o(s)]),e(),t("a",VCt,[e("🔗"),o(s)])])]),t("tr",null,[NCt,DCt,ECt,t("td",BCt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[MCt]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[YCt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[ACt]),_:1}),e(),JCt]),RCt,t("td",SCt,[t("a",UCt,[e("🀄️"),o(s)]),e(),t("a",WCt,[e("🔗"),o(s)])])]),t("tr",null,[XCt,FCt,GCt,t("td",HCt,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[TCt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[QCt]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[ZCt]),_:1}),e(),$Ct]),tOt,t("td",eOt,[t("a",oOt,[e("🀄️"),o(s)]),e(),t("a",lOt,[e("🔗"),o(s)])])]),t("tr",null,[nOt,sOt,rOt,t("td",dOt,[o(l,{to:"/tag/array.html"},{default:n(()=>[_Ot]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[aOt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[iOt]),_:1})]),cOt,t("td",hOt,[t("a",gOt,[e("🀄️"),o(s)]),e(),t("a",mOt,[e("🔗"),o(s)])])]),t("tr",null,[fOt,uOt,yOt,t("td",pOt,[o(l,{to:"/tag/array.html"},{default:n(()=>[xOt]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[bOt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[kOt]),_:1})]),wOt,t("td",vOt,[t("a",IOt,[e("🀄️"),o(s)]),e(),t("a",qOt,[e("🔗"),o(s)])])]),t("tr",null,[zOt,jOt,COt,t("td",OOt,[o(l,{to:"/tag/array.html"},{default:n(()=>[LOt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[POt]),_:1})]),KOt,t("td",VOt,[t("a",NOt,[e("🀄️"),o(s)]),e(),t("a",DOt,[e("🔗"),o(s)])])]),t("tr",null,[EOt,BOt,MOt,t("td",YOt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[AOt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[JOt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ROt]),_:1})]),SOt,t("td",UOt,[t("a",WOt,[e("🀄️"),o(s)]),e(),t("a",XOt,[e("🔗"),o(s)])])]),t("tr",null,[FOt,GOt,HOt,t("td",TOt,[o(l,{to:"/tag/array.html"},{default:n(()=>[QOt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ZOt]),_:1})]),$Ot,t("td",tLt,[t("a",eLt,[e("🀄️"),o(s)]),e(),t("a",oLt,[e("🔗"),o(s)])])]),t("tr",null,[lLt,nLt,sLt,t("td",rLt,[o(l,{to:"/tag/array.html"},{default:n(()=>[dLt]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[_Lt]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[aLt]),_:1}),e(),iLt]),cLt,t("td",hLt,[t("a",gLt,[e("🀄️"),o(s)]),e(),t("a",mLt,[e("🔗"),o(s)])])]),t("tr",null,[fLt,uLt,yLt,t("td",pLt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[xLt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[bLt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[kLt]),_:1})]),wLt,t("td",vLt,[t("a",ILt,[e("🀄️"),o(s)]),e(),t("a",qLt,[e("🔗"),o(s)])])]),t("tr",null,[zLt,jLt,CLt,t("td",OLt,[o(l,{to:"/tag/array.html"},{default:n(()=>[LLt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[PLt]),_:1})]),KLt,t("td",VLt,[t("a",NLt,[e("🀄️"),o(s)]),e(),t("a",DLt,[e("🔗"),o(s)])])]),t("tr",null,[ELt,BLt,MLt,t("td",YLt,[o(l,{to:"/tag/array.html"},{default:n(()=>[ALt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[JLt]),_:1})]),RLt,t("td",SLt,[t("a",ULt,[e("🀄️"),o(s)]),e(),t("a",WLt,[e("🔗"),o(s)])])]),t("tr",null,[XLt,FLt,GLt,t("td",HLt,[o(l,{to:"/tag/array.html"},{default:n(()=>[TLt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[QLt]),_:1})]),ZLt,t("td",$Lt,[t("a",tPt,[e("🀄️"),o(s)]),e(),t("a",ePt,[e("🔗"),o(s)])])]),t("tr",null,[oPt,lPt,nPt,t("td",sPt,[o(l,{to:"/tag/array.html"},{default:n(()=>[rPt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[dPt]),_:1})]),_Pt,t("td",aPt,[t("a",iPt,[e("🀄️"),o(s)]),e(),t("a",cPt,[e("🔗"),o(s)])])]),t("tr",null,[hPt,gPt,mPt,t("td",fPt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[uPt]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[yPt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[pPt]),_:1}),e(),xPt]),bPt,t("td",kPt,[t("a",wPt,[e("🀄️"),o(s)]),e(),t("a",vPt,[e("🔗"),o(s)])])]),t("tr",null,[IPt,qPt,zPt,t("td",jPt,[o(l,{to:"/tag/array.html"},{default:n(()=>[CPt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[OPt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[LPt]),_:1}),e(),PPt]),KPt,t("td",VPt,[t("a",NPt,[e("🀄️"),o(s)]),e(),t("a",DPt,[e("🔗"),o(s)])])]),t("tr",null,[EPt,BPt,MPt,t("td",YPt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[APt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[JPt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[RPt]),_:1}),e(),SPt]),UPt,t("td",WPt,[t("a",XPt,[e("🀄️"),o(s)]),e(),t("a",FPt,[e("🔗"),o(s)])])]),t("tr",null,[GPt,HPt,TPt,t("td",QPt,[o(l,{to:"/tag/array.html"},{default:n(()=>[ZPt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$Pt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[tKt]),_:1}),e(),eKt]),oKt,t("td",lKt,[t("a",nKt,[e("🀄️"),o(s)]),e(),t("a",sKt,[e("🔗"),o(s)])])]),t("tr",null,[rKt,dKt,_Kt,t("td",aKt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[iKt]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[cKt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[hKt]),_:1}),e(),gKt]),mKt,t("td",fKt,[t("a",uKt,[e("🀄️"),o(s)]),e(),t("a",yKt,[e("🔗"),o(s)])])]),t("tr",null,[pKt,xKt,bKt,t("td",kKt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[wKt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[vKt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[IKt]),_:1}),e(),qKt]),zKt,t("td",jKt,[t("a",CKt,[e("🀄️"),o(s)]),e(),t("a",OKt,[e("🔗"),o(s)])])]),t("tr",null,[LKt,PKt,KKt,t("td",VKt,[o(l,{to:"/tag/array.html"},{default:n(()=>[NKt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[DKt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[EKt]),_:1}),e(),BKt]),MKt,t("td",YKt,[t("a",AKt,[e("🀄️"),o(s)]),e(),t("a",JKt,[e("🔗"),o(s)])])]),t("tr",null,[RKt,SKt,UKt,t("td",WKt,[o(l,{to:"/tag/array.html"},{default:n(()=>[XKt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[FKt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[GKt]),_:1}),e(),HKt]),TKt,t("td",QKt,[t("a",ZKt,[e("🀄️"),o(s)]),e(),t("a",$Kt,[e("🔗"),o(s)])])]),t("tr",null,[tVt,eVt,oVt,t("td",lVt,[o(l,{to:"/tag/array.html"},{default:n(()=>[nVt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[sVt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[rVt]),_:1}),e(),dVt]),_Vt,t("td",aVt,[t("a",iVt,[e("🀄️"),o(s)]),e(),t("a",cVt,[e("🔗"),o(s)])])]),t("tr",null,[hVt,gVt,mVt,t("td",fVt,[o(l,{to:"/tag/array.html"},{default:n(()=>[uVt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[yVt]),_:1}),e(),o(l,{to:"/tag/enumeration.html"},{default:n(()=>[pVt]),_:1}),e(),xVt]),bVt,t("td",kVt,[t("a",wVt,[e("🀄️"),o(s)]),e(),t("a",vVt,[e("🔗"),o(s)])])]),t("tr",null,[IVt,qVt,zVt,t("td",jVt,[o(l,{to:"/tag/array.html"},{default:n(()=>[CVt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[OVt]),_:1}),e(),o(l,{to:"/tag/enumeration.html"},{default:n(()=>[LVt]),_:1}),e(),PVt]),KVt,t("td",VVt,[t("a",NVt,[e("🀄️"),o(s)]),e(),t("a",DVt,[e("🔗"),o(s)])])]),t("tr",null,[EVt,BVt,MVt,t("td",YVt,[o(l,{to:"/tag/array.html"},{default:n(()=>[AVt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[JVt]),_:1})]),RVt,t("td",SVt,[t("a",UVt,[e("🀄️"),o(s)]),e(),t("a",WVt,[e("🔗"),o(s)])])]),t("tr",null,[XVt,FVt,GVt,t("td",HVt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[TVt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[QVt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[ZVt]),_:1}),e(),$Vt]),tNt,t("td",eNt,[t("a",oNt,[e("🀄️"),o(s)]),e(),t("a",lNt,[e("🔗"),o(s)])])]),t("tr",null,[nNt,sNt,rNt,t("td",dNt,[o(l,{to:"/tag/array.html"},{default:n(()=>[_Nt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[aNt]),_:1})]),iNt,t("td",cNt,[t("a",hNt,[e("🀄️"),o(s)]),e(),t("a",gNt,[e("🔗"),o(s)])])]),t("tr",null,[mNt,fNt,uNt,t("td",yNt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[pNt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[xNt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[bNt]),_:1}),e(),kNt]),wNt,t("td",vNt,[t("a",INt,[e("🀄️"),o(s)]),e(),t("a",qNt,[e("🔗"),o(s)])])]),t("tr",null,[zNt,jNt,CNt,t("td",ONt,[o(l,{to:"/tag/array.html"},{default:n(()=>[LNt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[PNt]),_:1})]),KNt,t("td",VNt,[t("a",NNt,[e("🀄️"),o(s)]),e(),t("a",DNt,[e("🔗"),o(s)])])]),t("tr",null,[ENt,BNt,MNt,t("td",YNt,[o(l,{to:"/tag/array.html"},{default:n(()=>[ANt]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[JNt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[RNt]),_:1})]),SNt,t("td",UNt,[t("a",WNt,[e("🀄️"),o(s)]),e(),t("a",XNt,[e("🔗"),o(s)])])]),t("tr",null,[FNt,GNt,HNt,t("td",TNt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[QNt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[ZNt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$Nt]),_:1})]),tDt,t("td",eDt,[t("a",oDt,[e("🀄️"),o(s)]),e(),t("a",lDt,[e("🔗"),o(s)])])]),t("tr",null,[nDt,sDt,rDt,t("td",dDt,[o(l,{to:"/tag/array.html"},{default:n(()=>[_Dt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[aDt]),_:1})]),iDt,t("td",cDt,[t("a",hDt,[e("🀄️"),o(s)]),e(),t("a",gDt,[e("🔗"),o(s)])])]),t("tr",null,[mDt,fDt,uDt,t("td",yDt,[o(l,{to:"/tag/trie.html"},{default:n(()=>[pDt]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[xDt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[bDt]),_:1}),e(),kDt]),wDt,t("td",vDt,[t("a",IDt,[e("🀄️"),o(s)]),e(),t("a",qDt,[e("🔗"),o(s)])])]),t("tr",null,[zDt,jDt,CDt,t("td",ODt,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[LDt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[PDt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[KDt]),_:1}),e(),VDt]),NDt,t("td",DDt,[t("a",EDt,[e("🀄️"),o(s)]),e(),t("a",BDt,[e("🔗"),o(s)])])]),t("tr",null,[MDt,YDt,ADt,t("td",JDt,[o(l,{to:"/tag/array.html"},{default:n(()=>[RDt]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[SDt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[UDt]),_:1})]),WDt,t("td",XDt,[t("a",FDt,[e("🀄️"),o(s)]),e(),t("a",GDt,[e("🔗"),o(s)])])]),t("tr",null,[HDt,TDt,QDt,t("td",ZDt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[$Dt]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[tEt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[eEt]),_:1}),e(),oEt]),lEt,t("td",nEt,[t("a",sEt,[e("🀄️"),o(s)]),e(),t("a",rEt,[e("🔗"),o(s)])])]),t("tr",null,[dEt,_Et,aEt,t("td",iEt,[o(l,{to:"/tag/array.html"},{default:n(()=>[cEt]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[hEt]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[gEt]),_:1}),e(),mEt]),fEt,t("td",uEt,[t("a",yEt,[e("🀄️"),o(s)]),e(),t("a",pEt,[e("🔗"),o(s)])])]),t("tr",null,[xEt,bEt,kEt,t("td",wEt,[o(l,{to:"/tag/math.html"},{default:n(()=>[vEt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[IEt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[qEt]),_:1})]),zEt,t("td",jEt,[t("a",CEt,[e("🀄️"),o(s)]),e(),t("a",OEt,[e("🔗"),o(s)])])]),t("tr",null,[LEt,PEt,KEt,t("td",VEt,[o(l,{to:"/tag/string.html"},{default:n(()=>[NEt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[DEt]),_:1})]),EEt,t("td",BEt,[t("a",MEt,[e("🀄️"),o(s)]),e(),t("a",YEt,[e("🔗"),o(s)])])]),t("tr",null,[AEt,JEt,REt,t("td",SEt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[UEt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[WEt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[XEt]),_:1}),e(),FEt]),GEt,t("td",HEt,[t("a",TEt,[e("🀄️"),o(s)])])]),t("tr",null,[QEt,ZEt,$Et,t("td",tBt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[eBt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[oBt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[lBt]),_:1}),e(),nBt]),sBt,t("td",rBt,[t("a",dBt,[e("🀄️"),o(s)])])]),t("tr",null,[_Bt,aBt,iBt,t("td",cBt,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[hBt]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[gBt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[mBt]),_:1}),e(),fBt]),uBt,t("td",yBt,[t("a",pBt,[e("🀄️"),o(s)])])]),t("tr",null,[xBt,bBt,kBt,t("td",wBt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[vBt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[IBt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[qBt]),_:1}),e(),zBt]),jBt,t("td",CBt,[t("a",OBt,[e("🀄️"),o(s)])])]),t("tr",null,[LBt,PBt,KBt,t("td",VBt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[NBt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[DBt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[EBt]),_:1}),e(),BBt]),MBt,t("td",YBt,[t("a",ABt,[e("🀄️"),o(s)])])]),t("tr",null,[JBt,RBt,SBt,t("td",UBt,[o(l,{to:"/tag/array.html"},{default:n(()=>[WBt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[XBt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[FBt]),_:1}),e(),GBt]),HBt,t("td",TBt,[t("a",QBt,[e("🀄️"),o(s)])])]),t("tr",null,[ZBt,$Bt,tMt,t("td",eMt,[o(l,{to:"/tag/string.html"},{default:n(()=>[oMt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[lMt]),_:1})]),nMt,t("td",sMt,[t("a",rMt,[e("🀄️"),o(s)])])]),t("tr",null,[dMt,_Mt,aMt,t("td",iMt,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[cMt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[hMt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[gMt]),_:1})]),mMt,t("td",fMt,[t("a",uMt,[e("🀄️"),o(s)])])]),t("tr",null,[yMt,pMt,xMt,t("td",bMt,[o(l,{to:"/tag/math.html"},{default:n(()=>[kMt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[wMt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[vMt]),_:1})]),IMt,t("td",qMt,[t("a",zMt,[e("🀄️"),o(s)])])]),t("tr",null,[jMt,CMt,OMt,t("td",LMt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[PMt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[KMt]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[VMt]),_:1})]),NMt,t("td",DMt,[t("a",EMt,[e("🀄️"),o(s)])])]),t("tr",null,[BMt,MMt,YMt,t("td",AMt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[JMt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[RMt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[SMt]),_:1}),e(),UMt]),WMt,t("td",XMt,[t("a",FMt,[e("🀄️"),o(s)])])]),t("tr",null,[GMt,HMt,TMt,t("td",QMt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ZMt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[$Mt]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[tYt]),_:1})]),eYt,t("td",oYt,[t("a",lYt,[e("🀄️"),o(s)])])]),t("tr",null,[nYt,sYt,rYt,t("td",dYt,[o(l,{to:"/tag/array.html"},{default:n(()=>[_Yt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[aYt]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[iYt]),_:1})]),cYt,t("td",hYt,[t("a",gYt,[e("🀄️"),o(s)])])]),t("tr",null,[mYt,fYt,uYt,t("td",yYt,[o(l,{to:"/tag/array.html"},{default:n(()=>[pYt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[xYt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[bYt]),_:1})]),kYt,t("td",wYt,[t("a",vYt,[e("🀄️"),o(s)])])]),t("tr",null,[IYt,qYt,zYt,t("td",jYt,[o(l,{to:"/tag/array.html"},{default:n(()=>[CYt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[OYt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[LYt]),_:1})]),PYt,t("td",KYt,[t("a",VYt,[e("🀄️"),o(s)])])]),t("tr",null,[NYt,DYt,EYt,t("td",BYt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[MYt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[YYt]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[AYt]),_:1}),e(),JYt]),RYt,t("td",SYt,[t("a",UYt,[e("🀄️"),o(s)])])]),t("tr",null,[WYt,XYt,FYt,t("td",GYt,[o(l,{to:"/tag/array.html"},{default:n(()=>[HYt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[TYt]),_:1})]),QYt,t("td",ZYt,[t("a",$Yt,[e("🀄️"),o(s)])])]),t("tr",null,[tAt,eAt,oAt,t("td",lAt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[nAt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[sAt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[rAt]),_:1}),e(),dAt]),_At,t("td",aAt,[t("a",iAt,[e("🀄️"),o(s)])])]),t("tr",null,[cAt,hAt,gAt,t("td",mAt,[o(l,{to:"/tag/array.html"},{default:n(()=>[fAt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[uAt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[yAt]),_:1}),e(),pAt]),xAt,t("td",bAt,[t("a",kAt,[e("🀄️"),o(s)])])]),t("tr",null,[wAt,vAt,IAt,t("td",qAt,[o(l,{to:"/tag/array.html"},{default:n(()=>[zAt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[jAt]),_:1})]),CAt,t("td",OAt,[t("a",LAt,[e("🀄️"),o(s)])])]),t("tr",null,[PAt,KAt,VAt,t("td",NAt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[DAt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[EAt]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[BAt]),_:1})]),MAt,t("td",YAt,[t("a",AAt,[e("🀄️"),o(s)])])]),t("tr",null,[JAt,RAt,SAt,t("td",UAt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[WAt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[XAt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[FAt]),_:1}),e(),GAt]),HAt,t("td",TAt,[t("a",QAt,[e("🀄️"),o(s)])])]),t("tr",null,[ZAt,$At,tJt,t("td",eJt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[oJt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[lJt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[nJt]),_:1}),e(),sJt]),rJt,t("td",dJt,[t("a",_Jt,[e("🀄️"),o(s)])])]),t("tr",null,[aJt,iJt,cJt,t("td",hJt,[o(l,{to:"/tag/array.html"},{default:n(()=>[gJt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[mJt]),_:1})]),fJt,t("td",uJt,[t("a",yJt,[e("🀄️"),o(s)])])]),t("tr",null,[pJt,xJt,bJt,t("td",kJt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[wJt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[vJt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[IJt]),_:1}),e(),qJt]),zJt,t("td",jJt,[t("a",CJt,[e("🀄️"),o(s)])])]),t("tr",null,[OJt,LJt,PJt,t("td",KJt,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[VJt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[NJt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[DJt]),_:1})]),EJt,t("td",BJt,[t("a",MJt,[e("🀄️"),o(s)])])]),t("tr",null,[YJt,AJt,t("td",JJt,[o(l,{to:"/offer/jz_offer_10_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",RJt,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[SJt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[UJt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[WJt]),_:1})]),XJt,t("td",FJt,[t("a",GJt,[e("🀄️"),o(s)])])]),t("tr",null,[HJt,TJt,t("td",QJt,[o(l,{to:"/offer/jz_offer_10_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ZJt,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[$Jt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[tRt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[eRt]),_:1})]),oRt,t("td",lRt,[t("a",nRt,[e("🀄️"),o(s)])])]),t("tr",null,[sRt,rRt,t("td",dRt,[o(l,{to:"/offer/jz_offer_13_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_Rt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[aRt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[iRt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[cRt]),_:1})]),hRt,t("td",gRt,[t("a",mRt,[e("🀄️"),o(s)])])]),t("tr",null,[fRt,uRt,t("td",yRt,[o(l,{to:"/offer/jz_offer_14_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",pRt,[o(l,{to:"/tag/math.html"},{default:n(()=>[xRt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[bRt]),_:1})]),kRt,t("td",wRt,[t("a",vRt,[e("🀄️"),o(s)])])]),t("tr",null,[IRt,qRt,t("td",zRt,[o(l,{to:"/offer/jz_offer_14_2.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",jRt,[o(l,{to:"/tag/math.html"},{default:n(()=>[CRt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ORt]),_:1})]),LRt,t("td",PRt,[t("a",KRt,[e("🀄️"),o(s)])])]),t("tr",null,[VRt,NRt,t("td",DRt,[o(l,{to:"/offer/jz_offer_19_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ERt,[o(l,{to:"/tag/recursion.html"},{default:n(()=>[BRt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[MRt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[YRt]),_:1})]),ARt,t("td",JRt,[t("a",RRt,[e("🀄️"),o(s)])])]),t("tr",null,[SRt,URt,t("td",WRt,[o(l,{to:"/offer/jz_offer_42_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",XRt,[o(l,{to:"/tag/array.html"},{default:n(()=>[FRt]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[GRt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[HRt]),_:1})]),TRt,t("td",QRt,[t("a",ZRt,[e("🀄️"),o(s)])])]),t("tr",null,[$Rt,tSt,t("td",eSt,[o(l,{to:"/offer/jz_offer_43_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",oSt,[o(l,{to:"/tag/recursion.html"},{default:n(()=>[lSt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[nSt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sSt]),_:1})]),rSt,t("td",dSt,[t("a",_St,[e("🀄️"),o(s)])])]),t("tr",null,[aSt,iSt,t("td",cSt,[o(l,{to:"/offer/jz_offer_46_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",hSt,[o(l,{to:"/tag/string.html"},{default:n(()=>[gSt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[mSt]),_:1})]),fSt,t("td",uSt,[t("a",ySt,[e("🀄️"),o(s)])])]),t("tr",null,[pSt,xSt,t("td",bSt,[o(l,{to:"/offer/jz_offer_47_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",kSt,[o(l,{to:"/tag/array.html"},{default:n(()=>[wSt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[vSt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[ISt]),_:1})]),qSt,t("td",zSt,[t("a",jSt,[e("🀄️"),o(s)])])]),t("tr",null,[CSt,OSt,t("td",LSt,[o(l,{to:"/offer/jz_offer_49_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",PSt,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[KSt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[VSt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[NSt]),_:1}),e(),DSt]),ESt,t("td",BSt,[t("a",MSt,[e("🀄️"),o(s)])])]),t("tr",null,[YSt,ASt,t("td",JSt,[o(l,{to:"/offer/jz_offer_60_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",RSt,[o(l,{to:"/tag/math.html"},{default:n(()=>[SSt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[USt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[WSt]),_:1})]),XSt,t("td",FSt,[t("a",GSt,[e("🀄️"),o(s)])])]),t("tr",null,[HSt,TSt,t("td",QSt,[o(l,{to:"/offer/jz_offer_63_1.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ZSt,[o(l,{to:"/tag/array.html"},{default:n(()=>[$St]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[tUt]),_:1})]),eUt,t("td",oUt,[t("a",lUt,[e("🀄️"),o(s)])])]),t("tr",null,[nUt,sUt,t("td",rUt,[o(l,{to:"/offer2/jz_offer_II_100.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",dUt,[o(l,{to:"/tag/array.html"},{default:n(()=>[_Ut]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[aUt]),_:1})]),iUt,t("td",cUt,[t("a",hUt,[e("🀄️"),o(s)])])]),t("tr",null,[gUt,mUt,t("td",fUt,[o(l,{to:"/offer2/jz_offer_II_102.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",uUt,[o(l,{to:"/tag/array.html"},{default:n(()=>[yUt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[pUt]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[xUt]),_:1})]),bUt,t("td",kUt,[t("a",wUt,[e("🀄️"),o(s)])])]),t("tr",null,[vUt,IUt,t("td",qUt,[o(l,{to:"/offer2/jz_offer_II_103.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",zUt,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[jUt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[CUt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[OUt]),_:1})]),LUt,t("td",PUt,[t("a",KUt,[e("🀄️"),o(s)])])]),t("tr",null,[VUt,NUt,DUt,t("td",EUt,[o(l,{to:"/tag/array.html"},{default:n(()=>[BUt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[MUt]),_:1})]),YUt,t("td",AUt,[t("a",JUt,[e("🀄️"),o(s)])])]),t("tr",null,[RUt,SUt,UUt,t("td",WUt,[o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[XUt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[FUt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[GUt]),_:1}),e(),HUt]),TUt,t("td",QUt,[t("a",ZUt,[e("🀄️"),o(s)])])]),t("tr",null,[$Ut,tWt,eWt,t("td",oWt,[o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[lWt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[nWt]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[sWt]),_:1}),e(),rWt]),dWt,t("td",_Wt,[t("a",aWt,[e("🀄️"),o(s)])])]),t("tr",null,[iWt,cWt,hWt,t("td",gWt,[o(l,{to:"/tag/string.html"},{default:n(()=>[mWt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[fWt]),_:1})]),uWt,t("td",yWt,[t("a",pWt,[e("🀄️"),o(s)])])]),t("tr",null,[xWt,bWt,kWt,t("td",wWt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[vWt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[IWt]),_:1})]),qWt,t("td",zWt,[t("a",jWt,[e("🀄️"),o(s)])])]),t("tr",null,[CWt,OWt,t("td",LWt,[o(l,{to:"/offer2/jz_offer_II_040.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",PWt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[KWt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[VWt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[NWt]),_:1}),e(),DWt]),EWt,t("td",BWt,[t("a",MWt,[e("🀄️"),o(s)])])]),t("tr",null,[YWt,AWt,t("td",JWt,[o(l,{to:"/offer2/jz_offer_II_051.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",RWt,[o(l,{to:"/tag/tree.html"},{default:n(()=>[SWt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[UWt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[WWt]),_:1}),e(),XWt]),FWt,t("td",GWt,[t("a",HWt,[e("🀄️"),o(s)])])]),t("tr",null,[TWt,QWt,t("td",ZWt,[o(l,{to:"/offer2/jz_offer_II_085.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",$Wt,[o(l,{to:"/tag/string.html"},{default:n(()=>[tXt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[eXt]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[oXt]),_:1})]),lXt,t("td",nXt,[t("a",sXt,[e("🀄️"),o(s)])])]),t("tr",null,[rXt,dXt,_Xt,t("td",aXt,[o(l,{to:"/tag/array.html"},{default:n(()=>[iXt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[cXt]),_:1})]),hXt,t("td",gXt,[t("a",mXt,[e("🀄️"),o(s)])])]),t("tr",null,[fXt,uXt,t("td",yXt,[o(l,{to:"/offer2/jz_offer_II_089.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",pXt,[o(l,{to:"/tag/array.html"},{default:n(()=>[xXt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[bXt]),_:1})]),kXt,t("td",wXt,[t("a",vXt,[e("🀄️"),o(s)])])]),t("tr",null,[IXt,qXt,zXt,t("td",jXt,[o(l,{to:"/tag/array.html"},{default:n(()=>[CXt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[OXt]),_:1})]),LXt,t("td",PXt,[t("a",KXt,[e("🀄️"),o(s)])])]),t("tr",null,[VXt,NXt,DXt,t("td",EXt,[o(l,{to:"/tag/array.html"},{default:n(()=>[BXt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[MXt]),_:1})]),YXt,t("td",AXt,[t("a",JXt,[e("🀄️"),o(s)])])]),t("tr",null,[RXt,SXt,UXt,t("td",WXt,[o(l,{to:"/tag/string.html"},{default:n(()=>[XXt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[FXt]),_:1})]),GXt,t("td",HXt,[t("a",TXt,[e("🀄️"),o(s)])])]),t("tr",null,[QXt,ZXt,$Xt,t("td",tFt,[o(l,{to:"/tag/array.html"},{default:n(()=>[eFt]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[oFt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[lFt]),_:1})]),nFt,t("td",sFt,[t("a",rFt,[e("🀄️"),o(s)])])]),t("tr",null,[dFt,_Ft,aFt,t("td",iFt,[o(l,{to:"/tag/string.html"},{default:n(()=>[cFt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[hFt]),_:1})]),gFt,t("td",mFt,[t("a",fFt,[e("🀄️"),o(s)])])]),t("tr",null,[uFt,yFt,t("td",pFt,[o(l,{to:"/offer2/jz_offer_II_095.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",xFt,[o(l,{to:"/tag/string.html"},{default:n(()=>[bFt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[kFt]),_:1})]),wFt,t("td",vFt,[t("a",IFt,[e("🀄️"),o(s)])])]),t("tr",null,[qFt,zFt,t("td",jFt,[o(l,{to:"/offer2/jz_offer_II_096.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",CFt,[o(l,{to:"/tag/string.html"},{default:n(()=>[OFt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[LFt]),_:1})]),PFt,t("td",KFt,[t("a",VFt,[e("🀄️"),o(s)])])]),t("tr",null,[NFt,DFt,EFt,t("td",BFt,[o(l,{to:"/tag/string.html"},{default:n(()=>[MFt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[YFt]),_:1})]),AFt,t("td",JFt,[t("a",RFt,[e("🀄️"),o(s)])])]),t("tr",null,[SFt,UFt,t("td",WFt,[o(l,{to:"/offer2/jz_offer_II_098.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",XFt,[o(l,{to:"/tag/math.html"},{default:n(()=>[FFt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[GFt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[HFt]),_:1})]),TFt,t("td",QFt,[t("a",ZFt,[e("🀄️"),o(s)])])]),t("tr",null,[$Ft,tGt,t("td",eGt,[o(l,{to:"/offer2/jz_offer_II_099.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",oGt,[o(l,{to:"/tag/array.html"},{default:n(()=>[lGt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[nGt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[sGt]),_:1})]),rGt,t("td",dGt,[t("a",_Gt,[e("🀄️"),o(s)])])]),t("tr",null,[aGt,iGt,cGt,t("td",hGt,[o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[gGt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[mGt]),_:1})]),fGt,t("td",uGt,[t("a",yGt,[e("🀄️"),o(s)])])]),t("tr",null,[pGt,xGt,bGt,t("td",kGt,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[wGt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[vGt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[IGt]),_:1})]),qGt,t("td",zGt,[t("a",jGt,[e("🀄️"),o(s)])])]),t("tr",null,[CGt,OGt,LGt,t("td",PGt,[o(l,{to:"/tag/array.html"},{default:n(()=>[KGt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[VGt]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[NGt]),_:1}),e(),DGt]),EGt,t("td",BGt,[t("a",MGt,[e("🀄️"),o(s)])])]),t("tr",null,[YGt,AGt,JGt,t("td",RGt,[o(l,{to:"/tag/string.html"},{default:n(()=>[SGt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[UGt]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[WGt]),_:1})]),XGt,t("td",FGt,[t("a",GGt,[e("🀄️"),o(s)])])]),t("tr",null,[HGt,TGt,QGt,t("td",ZGt,[o(l,{to:"/tag/array.html"},{default:n(()=>[$Gt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[tHt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[eHt]),_:1})]),oHt,t("td",lHt,[t("a",nHt,[e("🀄️"),o(s)])])]),t("tr",null,[sHt,rHt,dHt,t("td",_Ht,[o(l,{to:"/tag/array.html"},{default:n(()=>[aHt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[iHt]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[cHt]),_:1})]),hHt,t("td",gHt,[t("a",mHt,[e("🀄️"),o(s)])])]),t("tr",null,[fHt,uHt,yHt,t("td",pHt,[o(l,{to:"/tag/memoization.html"},{default:n(()=>[xHt]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[bHt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[kHt]),_:1})]),wHt,t("td",vHt,[t("a",IHt,[e("🀄️"),o(s)])])]),t("tr",null,[qHt,zHt,jHt,t("td",CHt,[o(l,{to:"/tag/array.html"},{default:n(()=>[OHt]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[LHt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[PHt]),_:1})]),KHt,t("td",VHt,[t("a",NHt,[e("🀄️"),o(s)])])]),t("tr",null,[DHt,EHt,BHt,t("td",MHt,[o(l,{to:"/tag/recursion.html"},{default:n(()=>[YHt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[AHt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[JHt]),_:1})]),RHt,t("td",SHt,[t("a",UHt,[e("🀄️"),o(s)])])]),t("tr",null,[WHt,XHt,FHt,t("td",GHt,[o(l,{to:"/tag/array.html"},{default:n(()=>[HHt]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[THt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[QHt]),_:1}),e(),ZHt]),$Ht,t("td",tTt,[t("a",eTt,[e("🀄️"),o(s)])])]),t("tr",null,[oTt,lTt,nTt,t("td",sTt,[o(l,{to:"/tag/hash-table.html"},{default:n(()=>[rTt]),_:1}),e(),o(l,{to:"/tag/math.html"},{default:n(()=>[dTt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[_Tt]),_:1}),e(),aTt]),iTt,t("td",cTt,[t("a",hTt,[e("🀄️"),o(s)])])]),t("tr",null,[gTt,mTt,fTt,t("td",uTt,[o(l,{to:"/tag/trie.html"},{default:n(()=>[yTt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[pTt]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[xTt]),_:1}),e(),bTt]),kTt,t("td",wTt,[t("a",vTt,[e("🀄️"),o(s)])])]),t("tr",null,[ITt,qTt,zTt,t("td",jTt,[o(l,{to:"/tag/array.html"},{default:n(()=>[CTt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[OTt]),_:1})]),LTt,t("td",PTt,[t("a",KTt,[e("🀄️"),o(s)])])]),t("tr",null,[VTt,NTt,DTt,t("td",ETt,[o(l,{to:"/tag/stack.html"},{default:n(()=>[BTt]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[MTt]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[YTt]),_:1}),e(),ATt]),JTt,t("td",RTt,[t("a",STt,[e("🀄️"),o(s)])])]),t("tr",null,[UTt,WTt,XTt,t("td",FTt,[o(l,{to:"/tag/array.html"},{default:n(()=>[GTt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[HTt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[TTt]),_:1})]),QTt,t("td",ZTt,[t("a",$Tt,[e("🀄️"),o(s)])])]),t("tr",null,[tQt,eQt,oQt,t("td",lQt,[o(l,{to:"/tag/array.html"},{default:n(()=>[nQt]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[sQt]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[rQt]),_:1}),e(),dQt]),_Qt,t("td",aQt,[t("a",iQt,[e("🀄️"),o(s)])])])])])])}const fQt=d(c,[["render",cQt],["__file","dynamic-programming.html.vue"]]);export{fQt as default};
