import{_ as a,r as _,o as i,c,a as t,d as e,w as l,b as o,f as r}from"./app-W22a8w8d.js";const h={},u=t("h1",{id:"记忆化搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#记忆化搜索","aria-hidden":"true"},"#"),o(" 记忆化搜索")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),z=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),M=t("code",null,"字符串",-1),v=t("code",null,"字符串匹配",-1),q=t("code",null,"树",-1),E=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),j=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),O=t("code",null,"欧拉回路",-1),K=t("code",null,"双连通分量",-1),R=t("code",null,"并查集",-1),T=t("code",null,"字典树",-1),X=t("code",null,"线段树",-1),D=t("code",null,"树状数组",-1),F=t("code",null,"后缀数组",-1),W=t("p",null,[t("strong",null,"算法")],-1),Y=t("code",null,"枚举",-1),Z=t("code",null,"递归",-1),A=t("code",null,"分治",-1),G=t("code",null,"回溯",-1),J=t("code",null,"贪心",-1),Q=t("code",null,"动态规划",-1),S=t("code",null,"排序",-1),U=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),lt=t("code",null,"二分查找",-1),nt=t("span",{class:"blue"},"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),it=t("code",null,"前缀和",-1),ct=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ut=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),zt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),Mt=t("code",null,"拒绝采样",-1),vt=t("code",null,"数据库",-1),qt=t("code",null,"设计",-1),Et=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),jt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"70",-1),Ot={style:{"text-align":"left"}},Kt={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},Rt={style:{"text-align":"center"}},Tt={style:{"text-align":"left"}},Xt=t("code",null,"记忆化搜索",-1),Dt=t("code",null,"数学",-1),Ft=t("code",null,"动态规划",-1),Wt={style:{"text-align":"left"}},Yt=t("td",{style:{"text-align":"center"}},"139",-1),Zt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/word-break",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"center"}},Jt={style:{"text-align":"left"}},Qt=t("code",null,"字典树",-1),St=t("code",null,"记忆化搜索",-1),Ut=t("code",null,"数组",-1),$t=t("code",null,"3+",-1),te={style:{"text-align":"left"}},ee=t("td",{style:{"text-align":"center"}},"140",-1),oe={style:{"text-align":"left"}},le={href:"https://leetcode.com/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},ne=t("td",{style:{"text-align":"center"}},null,-1),se={style:{"text-align":"left"}},de=t("code",null,"字典树",-1),_e=t("code",null,"记忆化搜索",-1),ae=t("code",null,"数组",-1),ie=t("code",null,"4+",-1),ce={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"241",-1),he={style:{"text-align":"left"}},ue={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},fe=t("td",{style:{"text-align":"center"}},null,-1),ge={style:{"text-align":"left"}},me=t("code",null,"递归",-1),ye=t("code",null,"记忆化搜索",-1),xe=t("code",null,"数学",-1),pe=t("code",null,"2+",-1),be={style:{"text-align":"left"}},ke=t("td",{style:{"text-align":"center"}},"294",-1),ze={style:{"text-align":"left"}},He={href:"https://leetcode.com/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),Ie={style:{"text-align":"left"}},Me=t("code",null,"记忆化搜索",-1),ve=t("code",null,"数学",-1),qe=t("code",null,"动态规划",-1),Ee=t("code",null,"2+",-1),Ce={style:{"text-align":"left"}},Le=t("td",{style:{"text-align":"center"}},"329",-1),Ne={style:{"text-align":"left"}},je={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Pe=t("td",{style:{"text-align":"center"}},null,-1),Ve={style:{"text-align":"left"}},Be=t("code",null,"深度优先搜索",-1),Oe=t("code",null,"广度优先搜索",-1),Ke=t("code",null,"图",-1),Re=t("code",null,"5+",-1),Te={style:{"text-align":"left"}},Xe=t("td",{style:{"text-align":"center"}},"397",-1),De={style:{"text-align":"left"}},Fe={href:"https://leetcode.com/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},We=t("td",{style:{"text-align":"center"}},null,-1),Ye={style:{"text-align":"left"}},Ze=t("code",null,"贪心",-1),Ae=t("code",null,"位运算",-1),Ge=t("code",null,"记忆化搜索",-1),Je=t("code",null,"1+",-1),Qe={style:{"text-align":"left"}},Se=t("td",{style:{"text-align":"center"}},"464",-1),Ue={style:{"text-align":"left"}},$e={href:"https://leetcode.com/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},to=t("td",{style:{"text-align":"center"}},null,-1),eo={style:{"text-align":"left"}},oo=t("code",null,"位运算",-1),lo=t("code",null,"记忆化搜索",-1),no=t("code",null,"数学",-1),so=t("code",null,"3+",-1),_o={style:{"text-align":"left"}},ao=t("td",{style:{"text-align":"center"}},"488",-1),io={style:{"text-align":"left"}},co={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},ro=t("td",{style:{"text-align":"center"}},null,-1),ho={style:{"text-align":"left"}},uo=t("code",null,"栈",-1),fo=t("code",null,"广度优先搜索",-1),go=t("code",null,"记忆化搜索",-1),mo=t("code",null,"2+",-1),yo={style:{"text-align":"left"}},xo=t("td",{style:{"text-align":"center"}},"509",-1),po={style:{"text-align":"left"}},bo={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},ko={style:{"text-align":"center"}},zo={style:{"text-align":"left"}},Ho=t("code",null,"递归",-1),wo=t("code",null,"记忆化搜索",-1),Io=t("code",null,"数学",-1),Mo=t("code",null,"1+",-1),vo={style:{"text-align":"left"}},qo=t("td",{style:{"text-align":"center"}},"546",-1),Eo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},Lo=t("td",{style:{"text-align":"center"}},null,-1),No={style:{"text-align":"left"}},jo=t("code",null,"记忆化搜索",-1),Po=t("code",null,"数组",-1),Vo=t("code",null,"动态规划",-1),Bo={style:{"text-align":"left"}},Oo=t("td",{style:{"text-align":"center"}},"638",-1),Ko={style:{"text-align":"left"}},Ro={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},To=t("td",{style:{"text-align":"center"}},null,-1),Xo={style:{"text-align":"left"}},Do=t("code",null,"位运算",-1),Fo=t("code",null,"记忆化搜索",-1),Wo=t("code",null,"数组",-1),Yo=t("code",null,"3+",-1),Zo={style:{"text-align":"left"}},Ao=t("td",{style:{"text-align":"center"}},"698",-1),Go={style:{"text-align":"left"}},Jo={href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},null,-1),So={style:{"text-align":"left"}},Uo=t("code",null,"位运算",-1),$o=t("code",null,"记忆化搜索",-1),tl=t("code",null,"数组",-1),el=t("code",null,"3+",-1),ol={style:{"text-align":"left"}},ll=t("td",{style:{"text-align":"center"}},"894",-1),nl={style:{"text-align":"left"}},sl={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},dl=t("td",{style:{"text-align":"center"}},null,-1),_l={style:{"text-align":"left"}},al=t("code",null,"树",-1),il=t("code",null,"递归",-1),cl=t("code",null,"记忆化搜索",-1),rl=t("code",null,"2+",-1),hl={style:{"text-align":"left"}},ul=t("td",{style:{"text-align":"center"}},"913",-1),fl={style:{"text-align":"left"}},gl={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},ml=t("td",{style:{"text-align":"center"}},null,-1),yl={style:{"text-align":"left"}},xl=t("code",null,"图",-1),pl=t("code",null,"拓扑排序",-1),bl=t("code",null,"记忆化搜索",-1),kl=t("code",null,"3+",-1),zl={style:{"text-align":"left"}},Hl=t("td",{style:{"text-align":"center"}},"964",-1),wl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},Ml=t("td",{style:{"text-align":"center"}},null,-1),vl={style:{"text-align":"left"}},ql=t("code",null,"记忆化搜索",-1),El=t("code",null,"数学",-1),Cl=t("code",null,"动态规划",-1),Ll={style:{"text-align":"left"}},Nl=t("td",{style:{"text-align":"center"}},"1137",-1),jl={style:{"text-align":"left"}},Pl={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},Vl={style:{"text-align":"center"}},Bl={style:{"text-align":"left"}},Ol=t("code",null,"记忆化搜索",-1),Kl=t("code",null,"数学",-1),Rl=t("code",null,"动态规划",-1),Tl={style:{"text-align":"left"}},Xl=t("td",{style:{"text-align":"center"}},"1387",-1),Dl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},null,-1),Yl={style:{"text-align":"left"}},Zl=t("code",null,"记忆化搜索",-1),Al=t("code",null,"动态规划",-1),Gl=t("code",null,"排序",-1),Jl={style:{"text-align":"left"}},Ql=t("td",{style:{"text-align":"center"}},"1444",-1),Sl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},$l=t("td",{style:{"text-align":"center"}},null,-1),tn={style:{"text-align":"left"}},en=t("code",null,"记忆化搜索",-1),on=t("code",null,"数组",-1),ln=t("code",null,"动态规划",-1),nn=t("code",null,"1+",-1),sn={style:{"text-align":"left"}},dn=t("td",{style:{"text-align":"center"}},"1553",-1),_n={style:{"text-align":"left"}},an={href:"https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},cn=t("td",{style:{"text-align":"center"}},null,-1),rn={style:{"text-align":"left"}},hn=t("code",null,"记忆化搜索",-1),un=t("code",null,"动态规划",-1),fn={style:{"text-align":"left"}},gn=t("td",{style:{"text-align":"center"}},"1569",-1),mn={style:{"text-align":"left"}},yn={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},xn=t("td",{style:{"text-align":"center"}},null,-1),pn={style:{"text-align":"left"}},bn=t("code",null,"树",-1),kn=t("code",null,"并查集",-1),zn=t("code",null,"二叉搜索树",-1),Hn=t("code",null,"7+",-1),wn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"1575",-1),Mn={style:{"text-align":"left"}},vn={href:"https://leetcode.com/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},null,-1),En={style:{"text-align":"left"}},Cn=t("code",null,"记忆化搜索",-1),Ln=t("code",null,"数组",-1),Nn=t("code",null,"动态规划",-1),jn={style:{"text-align":"left"}},Pn=t("td",{style:{"text-align":"center"}},"1611",-1),Vn={style:{"text-align":"left"}},Bn={href:"https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},null,-1),Kn={style:{"text-align":"left"}},Rn=t("code",null,"位运算",-1),Tn=t("code",null,"记忆化搜索",-1),Xn=t("code",null,"动态规划",-1),Dn={style:{"text-align":"left"}},Fn=t("td",{style:{"text-align":"center"}},"1659",-1),Wn={style:{"text-align":"left"}},Yn={href:"https://leetcode.com/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},Zn=t("td",{style:{"text-align":"center"}},null,-1),An={style:{"text-align":"left"}},Gn=t("code",null,"位运算",-1),Jn=t("code",null,"记忆化搜索",-1),Qn=t("code",null,"动态规划",-1),Sn=t("code",null,"1+",-1),Un={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"1728",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},os=t("td",{style:{"text-align":"center"}},null,-1),ls={style:{"text-align":"left"}},ns=t("code",null,"图",-1),ss=t("code",null,"拓扑排序",-1),ds=t("code",null,"记忆化搜索",-1),_s=t("code",null,"5+",-1),as={style:{"text-align":"left"}},is=t("td",{style:{"text-align":"center"}},"1815",-1),cs={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},hs=t("td",{style:{"text-align":"center"}},null,-1),us={style:{"text-align":"left"}},fs=t("code",null,"位运算",-1),gs=t("code",null,"记忆化搜索",-1),ms=t("code",null,"数组",-1),ys=t("code",null,"2+",-1),xs={style:{"text-align":"left"}},ps=t("td",{style:{"text-align":"center"}},"1857",-1),bs={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},zs=t("td",{style:{"text-align":"center"}},null,-1),Hs={style:{"text-align":"left"}},ws=t("code",null,"图",-1),Is=t("code",null,"拓扑排序",-1),Ms=t("code",null,"记忆化搜索",-1),vs=t("code",null,"3+",-1),qs={style:{"text-align":"left"}},Es=t("td",{style:{"text-align":"center"}},"1900",-1),Cs={style:{"text-align":"left"}},Ls={href:"https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),js={style:{"text-align":"left"}},Ps=t("code",null,"记忆化搜索",-1),Vs=t("code",null,"动态规划",-1),Bs={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"2019",-1),Ks={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},Ts=t("td",{style:{"text-align":"center"}},null,-1),Xs={style:{"text-align":"left"}},Ds=t("code",null,"栈",-1),Fs=t("code",null,"记忆化搜索",-1),Ws=t("code",null,"数组",-1),Ys=t("code",null,"3+",-1),Zs={style:{"text-align":"left"}},As=t("td",{style:{"text-align":"center"}},"2311",-1),Gs={style:{"text-align":"left"}},Js={href:"https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},Qs=t("td",{style:{"text-align":"center"}},null,-1),Ss={style:{"text-align":"left"}},Us=t("code",null,"贪心",-1),$s=t("code",null,"记忆化搜索",-1),td=t("code",null,"字符串",-1),ed=t("code",null,"1+",-1),od={style:{"text-align":"left"}},ld=t("td",{style:{"text-align":"center"}},"2312",-1),nd={style:{"text-align":"left"}},sd={href:"https://leetcode.com/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},dd=t("td",{style:{"text-align":"center"}},null,-1),_d={style:{"text-align":"left"}},ad=t("code",null,"记忆化搜索",-1),id=t("code",null,"数组",-1),cd=t("code",null,"动态规划",-1),rd={style:{"text-align":"left"}},hd=t("td",{style:{"text-align":"center"}},"2318",-1),ud={style:{"text-align":"left"}},fd={href:"https://leetcode.com/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},gd=t("td",{style:{"text-align":"center"}},null,-1),md={style:{"text-align":"left"}},yd=t("code",null,"记忆化搜索",-1),xd=t("code",null,"动态规划",-1),pd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"2328",-1),kd={style:{"text-align":"left"}},zd={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Hd=t("td",{style:{"text-align":"center"}},null,-1),wd={style:{"text-align":"left"}},Id=t("code",null,"深度优先搜索",-1),Md=t("code",null,"广度优先搜索",-1),vd=t("code",null,"图",-1),qd=t("code",null,"5+",-1),Ed={style:{"text-align":"left"}},Cd=t("td",{style:{"text-align":"center"}},"2713",-1),Ld={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},jd=t("td",{style:{"text-align":"center"}},null,-1),Pd={style:{"text-align":"left"}},Vd=t("code",null,"记忆化搜索",-1),Bd=t("code",null,"数组",-1),Od=t("code",null,"哈希表",-1),Kd=t("code",null,"5+",-1),Rd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"2876",-1),Xd={style:{"text-align":"left"}},Dd={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Wd={style:{"text-align":"left"}},Yd=t("code",null,"图",-1),Zd=t("code",null,"记忆化搜索",-1),Ad=t("code",null,"动态规划",-1),Gd={style:{"text-align":"left"}},Jd=t("td",{style:{"text-align":"center"}},"2998",-1),Qd={style:{"text-align":"left"}},Sd={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},null,-1),$d={style:{"text-align":"left"}},t_=t("code",null,"广度优先搜索",-1),e_=t("code",null,"记忆化搜索",-1),o_=t("code",null,"动态规划",-1),l_={style:{"text-align":"left"}},n_=t("td",{style:{"text-align":"center"}},"3040",-1),s_={style:{"text-align":"left"}},d_={href:"https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},null,-1),a_={style:{"text-align":"left"}},i_=t("code",null,"记忆化搜索",-1),c_=t("code",null,"数组",-1),r_=t("code",null,"动态规划",-1),h_={style:{"text-align":"left"}},u_=t("td",{style:{"text-align":"center"}},"3154",-1),f_={style:{"text-align":"left"}},g_={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},m_=t("td",{style:{"text-align":"center"}},null,-1),y_={style:{"text-align":"left"}},x_=t("code",null,"位运算",-1),p_=t("code",null,"记忆化搜索",-1),b_=t("code",null,"数学",-1),k_=t("code",null,"2+",-1),z_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"LCP 20",-1),w_={style:{"text-align":"left"}},I_={href:"https://leetcode.cn/problems/meChtZ",target:"_blank",rel:"noopener noreferrer"},M_=t("td",{style:{"text-align":"center"}},null,-1),v_={style:{"text-align":"left"}},q_=t("code",null,"记忆化搜索",-1),E_=t("code",null,"数组",-1),C_=t("code",null,"动态规划",-1),L_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"LCP 45",-1),j_={style:{"text-align":"left"}},P_={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},V_=t("td",{style:{"text-align":"center"}},null,-1),B_={style:{"text-align":"left"}},O_=t("code",null,"深度优先搜索",-1),K_=t("code",null,"广度优先搜索",-1),R_=t("code",null,"记忆化搜索",-1),T_=t("code",null,"3+",-1),X_={style:{"text-align":"left"}},D_=t("td",{style:{"text-align":"center"}},"LCP 63",-1),F_={style:{"text-align":"left"}},W_={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},Y_=t("td",{style:{"text-align":"center"}},null,-1),Z_={style:{"text-align":"left"}},A_=t("code",null,"深度优先搜索",-1),G_=t("code",null,"广度优先搜索",-1),J_=t("code",null,"图",-1),Q_=t("code",null,"5+",-1),S_={style:{"text-align":"left"}},U_=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - I",-1),$_={style:{"text-align":"left"}},ta={href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},ea={style:{"text-align":"center"}},oa={style:{"text-align":"left"}},la=t("code",null,"记忆化搜索",-1),na=t("code",null,"数学",-1),sa=t("code",null,"动态规划",-1),da={style:{"text-align":"left"}},_a=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - II",-1),aa={style:{"text-align":"left"}},ia={href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof",target:"_blank",rel:"noopener noreferrer"},ca={style:{"text-align":"center"}},ra={style:{"text-align":"left"}},ha=t("code",null,"记忆化搜索",-1),ua=t("code",null,"数学",-1),fa=t("code",null,"动态规划",-1),ga={style:{"text-align":"left"}},ma=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),ya={style:{"text-align":"left"}},xa={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},pa=t("td",{style:{"text-align":"center"}},null,-1),ba={style:{"text-align":"left"}},ka=t("code",null,"深度优先搜索",-1),za=t("code",null,"广度优先搜索",-1),Ha=t("code",null,"图",-1),wa=t("code",null,"5+",-1),Ia={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"面试题 08.01",-1),va={style:{"text-align":"left"}},qa={href:"https://leetcode.cn/problems/three-steps-problem-lcci",target:"_blank",rel:"noopener noreferrer"},Ea=t("td",{style:{"text-align":"center"}},null,-1),Ca={style:{"text-align":"left"}},La=t("code",null,"记忆化搜索",-1),Na=t("code",null,"数学",-1),ja=t("code",null,"动态规划",-1),Pa={style:{"text-align":"left"}},Va=t("td",{style:{"text-align":"center"}},"面试题 08.14",-1),Ba={style:{"text-align":"left"}},Oa={href:"https://leetcode.cn/problems/boolean-evaluation-lcci",target:"_blank",rel:"noopener noreferrer"},Ka=t("td",{style:{"text-align":"center"}},null,-1),Ra={style:{"text-align":"left"}},Ta=t("code",null,"记忆化搜索",-1),Xa=t("code",null,"字符串",-1),Da=t("code",null,"动态规划",-1),Fa={style:{"text-align":"left"}};function Wa(Ya,Za){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),c("div",null,[u,t("details",null,[f,g,t("p",null,[e(n,{to:"/tag/array.html"},{default:l(()=>[m]),_:1}),o(),e(n,{to:"/tag/matrix.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/tag/linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/tag/stack.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/tag/monotonic-stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/tag/queue.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/tag/monotonic-queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/tag/heap-priority-queue.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/tag/hash-table.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/tag/string.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/tag/string-matching.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/tag/tree.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/tag/binary-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/tag/binary-search-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/tag/minimum-spanning-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/tag/graph.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/tag/ordered-set.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/tag/topological-sort.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/tag/shortest-path.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/tag/strongly-connected-component.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/tag/eulerian-circuit.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/tag/biconnected-component.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/tag/union-find.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/tag/trie.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/tag/segment-tree.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/tag/binary-indexed-tree.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/tag/suffix-array.html"},{default:l(()=>[F]),_:1})]),W,t("p",null,[e(n,{to:"/tag/enumeration.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/tag/recursion.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/tag/divide-and-conquer.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/tag/backtracking.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/tag/greedy.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/tag/sorting.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/tag/bucket-sort.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/tag/counting-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/tag/radix-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/tag/merge-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/tag/quickselect.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/tag/binary-search.html"},{default:l(()=>[lt]),_:1}),o(),nt,o(),e(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/tag/prefix-sum.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/tag/counting.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/tag/sliding-window.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/tag/bitmask.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/tag/hash-function.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/tag/rolling-hash.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/tag/line-sweep.html"},{default:l(()=>[gt]),_:1})]),mt,t("p",null,[e(n,{to:"/tag/math.html"},{default:l(()=>[yt]),_:1}),o(),e(n,{to:"/tag/number-theory.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/tag/game-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/tag/simulation.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/tag/combinatorics.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/tag/randomized.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/tag/probability-and-statistics.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/tag/reservoir-sampling.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/tag/rejection-sampling.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/tag/database.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/tag/design.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/tag/data-stream.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/tag/brainteaser.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/tag/interactive.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/tag/iterator.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/tag/concurrency.html"},{default:l(()=>[jt]),_:1})])]),Pt,r(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Bt,t("td",Ot,[t("a",Kt,[o("爬楼梯"),e(s)])]),t("td",Rt,[e(n,{to:"/problem/0070.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Tt,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[Xt]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[Dt]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Ft]),_:1})]),t("td",Wt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Yt,t("td",Zt,[t("a",At,[o("单词拆分"),e(s)])]),t("td",Gt,[e(n,{to:"/problem/0139.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Jt,[e(n,{to:"/tag/trie.html"},{default:l(()=>[Qt]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[St]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Ut]),_:1}),o(),$t]),t("td",te,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ee,t("td",oe,[t("a",le,[o("单词拆分 II"),e(s)])]),ne,t("td",se,[e(n,{to:"/tag/trie.html"},{default:l(()=>[de]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[_e]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[ae]),_:1}),o(),ie]),t("td",ce,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[re,t("td",he,[t("a",ue,[o("为运算表达式设计优先级"),e(s)])]),fe,t("td",ge,[e(n,{to:"/tag/recursion.html"},{default:l(()=>[me]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[ye]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[xe]),_:1}),o(),pe]),t("td",be,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ke,t("td",ze,[t("a",He,[o("翻转游戏 II"),e(s)])]),we,t("td",Ie,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[Me]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[ve]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[qe]),_:1}),o(),Ee]),t("td",Ce,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Le,t("td",Ne,[t("a",je,[o("矩阵中的最长递增路径"),e(s)])]),Pe,t("td",Ve,[e(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[Be]),_:1}),o(),e(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[Oe]),_:1}),o(),e(n,{to:"/tag/graph.html"},{default:l(()=>[Ke]),_:1}),o(),Re]),t("td",Te,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Xe,t("td",De,[t("a",Fe,[o("整数替换"),e(s)])]),We,t("td",Ye,[e(n,{to:"/tag/greedy.html"},{default:l(()=>[Ze]),_:1}),o(),e(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[Ae]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[Ge]),_:1}),o(),Je]),t("td",Qe,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Se,t("td",Ue,[t("a",$e,[o("我能赢吗"),e(s)])]),to,t("td",eo,[e(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[oo]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[lo]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[no]),_:1}),o(),so]),t("td",_o,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ao,t("td",io,[t("a",co,[o("祖玛游戏"),e(s)])]),ro,t("td",ho,[e(n,{to:"/tag/stack.html"},{default:l(()=>[uo]),_:1}),o(),e(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[fo]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[go]),_:1}),o(),mo]),t("td",yo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xo,t("td",po,[t("a",bo,[o("斐波那契数"),e(s)])]),t("td",ko,[e(n,{to:"/problem/0509.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",zo,[e(n,{to:"/tag/recursion.html"},{default:l(()=>[Ho]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[wo]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[Io]),_:1}),o(),Mo]),t("td",vo,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[qo,t("td",Eo,[t("a",Co,[o("移除盒子"),e(s)])]),Lo,t("td",No,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[jo]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Vo]),_:1})]),t("td",Bo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Oo,t("td",Ko,[t("a",Ro,[o("大礼包"),e(s)])]),To,t("td",Xo,[e(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[Do]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[Fo]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Wo]),_:1}),o(),Yo]),t("td",Zo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ao,t("td",Go,[t("a",Jo,[o("划分为k个相等的子集"),e(s)])]),Qo,t("td",So,[e(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[Uo]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[$o]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[tl]),_:1}),o(),el]),t("td",ol,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ll,t("td",nl,[t("a",sl,[o("所有可能的真二叉树"),e(s)])]),dl,t("td",_l,[e(n,{to:"/tag/tree.html"},{default:l(()=>[al]),_:1}),o(),e(n,{to:"/tag/recursion.html"},{default:l(()=>[il]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[cl]),_:1}),o(),rl]),t("td",hl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ul,t("td",fl,[t("a",gl,[o("猫和老鼠"),e(s)])]),ml,t("td",yl,[e(n,{to:"/tag/graph.html"},{default:l(()=>[xl]),_:1}),o(),e(n,{to:"/tag/topological-sort.html"},{default:l(()=>[pl]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[bl]),_:1}),o(),kl]),t("td",zl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Hl,t("td",wl,[t("a",Il,[o("表示数字的最少运算符"),e(s)])]),Ml,t("td",vl,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[ql]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[El]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Cl]),_:1})]),t("td",Ll,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Nl,t("td",jl,[t("a",Pl,[o("第 N 个泰波那契数"),e(s)])]),t("td",Vl,[e(n,{to:"/problem/1137.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Bl,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[Ol]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[Kl]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Rl]),_:1})]),t("td",Tl,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Xl,t("td",Dl,[t("a",Fl,[o("将整数按权重排序"),e(s)])]),Wl,t("td",Yl,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[Zl]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Al]),_:1}),o(),e(n,{to:"/tag/sorting.html"},{default:l(()=>[Gl]),_:1})]),t("td",Jl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ql,t("td",Sl,[t("a",Ul,[o("切披萨的方案数"),e(s)])]),$l,t("td",tn,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[en]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[on]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[ln]),_:1}),o(),nn]),t("td",sn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[dn,t("td",_n,[t("a",an,[o("吃掉 N 个橘子的最少天数"),e(s)])]),cn,t("td",rn,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[hn]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[un]),_:1})]),t("td",fn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gn,t("td",mn,[t("a",yn,[o("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),xn,t("td",pn,[e(n,{to:"/tag/tree.html"},{default:l(()=>[bn]),_:1}),o(),e(n,{to:"/tag/union-find.html"},{default:l(()=>[kn]),_:1}),o(),e(n,{to:"/tag/binary-search-tree.html"},{default:l(()=>[zn]),_:1}),o(),Hn]),t("td",wn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[In,t("td",Mn,[t("a",vn,[o("统计所有可行路径"),e(s)])]),qn,t("td",En,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[Cn]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Ln]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Nn]),_:1})]),t("td",jn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Pn,t("td",Vn,[t("a",Bn,[o("使整数变为 0 的最少操作次数"),e(s)])]),On,t("td",Kn,[e(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[Rn]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[Tn]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Xn]),_:1})]),t("td",Dn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Fn,t("td",Wn,[t("a",Yn,[o("最大化网格幸福感"),e(s)])]),Zn,t("td",An,[e(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[Gn]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[Jn]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Qn]),_:1}),o(),Sn]),t("td",Un,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$n,t("td",ts,[t("a",es,[o("猫和老鼠 II"),e(s)])]),os,t("td",ls,[e(n,{to:"/tag/graph.html"},{default:l(()=>[ns]),_:1}),o(),e(n,{to:"/tag/topological-sort.html"},{default:l(()=>[ss]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[ds]),_:1}),o(),_s]),t("td",as,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[is,t("td",cs,[t("a",rs,[o("得到新鲜甜甜圈的最多组数"),e(s)])]),hs,t("td",us,[e(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[fs]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[gs]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[ms]),_:1}),o(),ys]),t("td",xs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ps,t("td",bs,[t("a",ks,[o("有向图中最大颜色值"),e(s)])]),zs,t("td",Hs,[e(n,{to:"/tag/graph.html"},{default:l(()=>[ws]),_:1}),o(),e(n,{to:"/tag/topological-sort.html"},{default:l(()=>[Is]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[Ms]),_:1}),o(),vs]),t("td",qs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Es,t("td",Cs,[t("a",Ls,[o("最佳运动员的比拼回合"),e(s)])]),Ns,t("td",js,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[Ps]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Vs]),_:1})]),t("td",Bs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Os,t("td",Ks,[t("a",Rs,[o("解出数学表达式的学生分数"),e(s)])]),Ts,t("td",Xs,[e(n,{to:"/tag/stack.html"},{default:l(()=>[Ds]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[Fs]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Ws]),_:1}),o(),Ys]),t("td",Zs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[As,t("td",Gs,[t("a",Js,[o("小于等于 K 的最长二进制子序列"),e(s)])]),Qs,t("td",Ss,[e(n,{to:"/tag/greedy.html"},{default:l(()=>[Us]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[$s]),_:1}),o(),e(n,{to:"/tag/string.html"},{default:l(()=>[td]),_:1}),o(),ed]),t("td",od,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ld,t("td",nd,[t("a",sd,[o("卖木头块"),e(s)])]),dd,t("td",_d,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[ad]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[id]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[cd]),_:1})]),t("td",rd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[hd,t("td",ud,[t("a",fd,[o("不同骰子序列的数目"),e(s)])]),gd,t("td",md,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[yd]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[xd]),_:1})]),t("td",pd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bd,t("td",kd,[t("a",zd,[o("网格图中递增路径的数目"),e(s)])]),Hd,t("td",wd,[e(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[Id]),_:1}),o(),e(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[Md]),_:1}),o(),e(n,{to:"/tag/graph.html"},{default:l(()=>[vd]),_:1}),o(),qd]),t("td",Ed,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Cd,t("td",Ld,[t("a",Nd,[o("矩阵中严格递增的单元格数"),e(s)])]),jd,t("td",Pd,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[Vd]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[Bd]),_:1}),o(),e(n,{to:"/tag/hash-table.html"},{default:l(()=>[Od]),_:1}),o(),Kd]),t("td",Rd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Td,t("td",Xd,[t("a",Dd,[o("有向图访问计数"),e(s)])]),Fd,t("td",Wd,[e(n,{to:"/tag/graph.html"},{default:l(()=>[Yd]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[Zd]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Ad]),_:1})]),t("td",Gd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Jd,t("td",Qd,[t("a",Sd,[o("使 X 和 Y 相等的最少操作次数"),e(s)])]),Ud,t("td",$d,[e(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[t_]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[e_]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[o_]),_:1})]),t("td",l_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[n_,t("td",s_,[t("a",d_,[o("相同分数的最大操作数目 II"),e(s)])]),__,t("td",a_,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[i_]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[c_]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[r_]),_:1})]),t("td",h_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[u_,t("td",f_,[t("a",g_,[o("到达第 K 级台阶的方案数"),e(s)])]),m_,t("td",y_,[e(n,{to:"/tag/bit-manipulation.html"},{default:l(()=>[x_]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[p_]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[b_]),_:1}),o(),k_]),t("td",z_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[H_,t("td",w_,[t("a",I_,[o("快速公交"),e(s)])]),M_,t("td",v_,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[q_]),_:1}),o(),e(n,{to:"/tag/array.html"},{default:l(()=>[E_]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[C_]),_:1})]),t("td",L_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[N_,t("td",j_,[t("a",P_,[o("自行车炫技赛场"),e(s)])]),V_,t("td",B_,[e(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[O_]),_:1}),o(),e(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[K_]),_:1}),o(),e(n,{to:"/tag/memoization.html"},{default:l(()=>[R_]),_:1}),o(),T_]),t("td",X_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[D_,t("td",F_,[t("a",W_,[o("弹珠游戏"),e(s)])]),Y_,t("td",Z_,[e(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[A_]),_:1}),o(),e(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[G_]),_:1}),o(),e(n,{to:"/tag/graph.html"},{default:l(()=>[J_]),_:1}),o(),Q_]),t("td",S_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[U_,t("td",$_,[t("a",ta,[o("斐波那契数列"),e(s)])]),t("td",ea,[e(n,{to:"/offer/jz_offer_10_1.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",oa,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[la]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[na]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[sa]),_:1})]),t("td",da,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[_a,t("td",aa,[t("a",ia,[o("青蛙跳台阶问题"),e(s)])]),t("td",ca,[e(n,{to:"/offer/jz_offer_10_2.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",ra,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[ha]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[ua]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[fa]),_:1})]),t("td",ga,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ma,t("td",ya,[t("a",xa,[o("最长递增路径"),e(s)])]),pa,t("td",ba,[e(n,{to:"/tag/depth-first-search.html"},{default:l(()=>[ka]),_:1}),o(),e(n,{to:"/tag/breadth-first-search.html"},{default:l(()=>[za]),_:1}),o(),e(n,{to:"/tag/graph.html"},{default:l(()=>[Ha]),_:1}),o(),wa]),t("td",Ia,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ma,t("td",va,[t("a",qa,[o("三步问题"),e(s)])]),Ea,t("td",Ca,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[La]),_:1}),o(),e(n,{to:"/tag/math.html"},{default:l(()=>[Na]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[ja]),_:1})]),t("td",Pa,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Va,t("td",Ba,[t("a",Oa,[o("布尔运算"),e(s)])]),Ka,t("td",Ra,[e(n,{to:"/tag/memoization.html"},{default:l(()=>[Ta]),_:1}),o(),e(n,{to:"/tag/string.html"},{default:l(()=>[Xa]),_:1}),o(),e(n,{to:"/tag/dynamic-programming.html"},{default:l(()=>[Da]),_:1})]),t("td",Fa,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const Ga=a(h,[["render",Wa],["__file","memoization.html.vue"]]);export{Ga as default};
