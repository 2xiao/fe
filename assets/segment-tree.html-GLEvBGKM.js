import{_ as i,r as _,o as a,c,a as t,b as e,w as o,d as l,f as r}from"./app-ynO5B_DP.js";const u={},h=t("h1",{id:"线段树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#线段树","aria-hidden":"true"},"#"),l(" 线段树")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),H=t("code",null,"单调栈",-1),q=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),M=t("code",null,"字符串",-1),L=t("code",null,"字符串匹配",-1),C=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),K=t("code",null,"二叉搜索树",-1),B=t("code",null,"最小生成树",-1),j=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),E=t("code",null,"强连通分量",-1),O=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),Q=t("code",null,"并查集",-1),T=t("code",null,"字典树",-1),A=t("span",{class:"blue"},"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),D=t("p",null,[t("strong",null,"算法")],-1),F=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ut=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Ht=t("code",null,"模拟",-1),qt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),Mt=t("code",null,"拒绝采样",-1),Lt=t("code",null,"数据库",-1),Ct=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Kt=t("code",null,"脑筋急转弯",-1),Bt=t("code",null,"交互",-1),jt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Et=t("td",{style:{"text-align":"center"}},"218",-1),Ot={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},null,-1),Tt={style:{"text-align":"left"}},At=t("code",null,"树状数组",-1),Gt=t("code",null,"线段树",-1),Jt=t("code",null,"数组",-1),Dt=t("code",null,"4+",-1),Ft={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"307",-1),Ut={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},Xt={style:{"text-align":"center"}},Yt={href:"/problem/0307",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"left"}},$t=t("code",null,"设计",-1),te=t("code",null,"树状数组",-1),ee=t("code",null,"线段树",-1),le=t("code",null,"1+",-1),oe={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"308",-1),se={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},_e=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},ae=t("code",null,"设计",-1),ce=t("code",null,"树状数组",-1),re=t("code",null,"线段树",-1),ue=t("code",null,"2+",-1),he={style:{"text-align":"left"}},fe=t("td",{style:{"text-align":"center"}},"315",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},null,-1),xe={style:{"text-align":"left"}},be=t("code",null,"树状数组",-1),pe=t("code",null,"线段树",-1),ke=t("code",null,"数组",-1),He=t("code",null,"4+",-1),qe={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"center"}},"327",-1),ve={style:{"text-align":"left"}},we={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},null,-1),Le={style:{"text-align":"left"}},Ce=t("code",null,"树状数组",-1),ze=t("code",null,"线段树",-1),Ke=t("code",null,"数组",-1),Be=t("code",null,"4+",-1),je={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"406",-1),Pe={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},Ee=t("td",{style:{"text-align":"center"}},null,-1),Oe={style:{"text-align":"left"}},Re=t("code",null,"树状数组",-1),Qe=t("code",null,"线段树",-1),Te=t("code",null,"数组",-1),Ae=t("code",null,"1+",-1),Ge={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"493",-1),De={style:{"text-align":"left"}},Fe={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},Se=t("td",{style:{"text-align":"center"}},null,-1),Ue={style:{"text-align":"left"}},We=t("code",null,"树状数组",-1),Xe=t("code",null,"线段树",-1),Ye=t("code",null,"数组",-1),Ze=t("code",null,"4+",-1),$e={style:{"text-align":"left"}},tl=t("td",{style:{"text-align":"center"}},"673",-1),el={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},ol=t("td",{style:{"text-align":"center"}},null,-1),nl={style:{"text-align":"left"}},sl=t("code",null,"树状数组",-1),dl=t("code",null,"线段树",-1),_l=t("code",null,"数组",-1),il=t("code",null,"1+",-1),al={style:{"text-align":"left"}},cl=t("td",{style:{"text-align":"center"}},"683",-1),rl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},hl=t("td",{style:{"text-align":"center"}},null,-1),fl={style:{"text-align":"left"}},gl=t("code",null,"树状数组",-1),ml=t("code",null,"线段树",-1),yl=t("code",null,"队列",-1),xl=t("code",null,"5+",-1),bl={style:{"text-align":"left"}},pl=t("td",{style:{"text-align":"center"}},"699",-1),kl={style:{"text-align":"left"}},Hl={href:"https://leetcode.com/problems/falling-squares",target:"_blank",rel:"noopener noreferrer"},ql=t("td",{style:{"text-align":"center"}},null,-1),Il={style:{"text-align":"left"}},vl=t("code",null,"线段树",-1),wl=t("code",null,"数组",-1),Ml=t("code",null,"有序集合",-1),Ll={style:{"text-align":"left"}},Cl=t("td",{style:{"text-align":"center"}},"715",-1),zl={style:{"text-align":"left"}},Kl={href:"https://leetcode.com/problems/range-module",target:"_blank",rel:"noopener noreferrer"},Bl=t("td",{style:{"text-align":"center"}},null,-1),jl={style:{"text-align":"left"}},Nl=t("code",null,"设计",-1),Pl=t("code",null,"线段树",-1),Vl=t("code",null,"有序集合",-1),El={style:{"text-align":"left"}},Ol=t("td",{style:{"text-align":"center"}},"729",-1),Rl={style:{"text-align":"left"}},Ql={href:"https://leetcode.com/problems/my-calendar-i",target:"_blank",rel:"noopener noreferrer"},Tl={style:{"text-align":"center"}},Al={href:"/problem/0729",target:"_blank",rel:"noopener noreferrer"},Gl={style:{"text-align":"left"}},Jl=t("code",null,"设计",-1),Dl=t("code",null,"线段树",-1),Fl=t("code",null,"数组",-1),Sl=t("code",null,"2+",-1),Ul={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"731",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/my-calendar-ii",target:"_blank",rel:"noopener noreferrer"},Zl={style:{"text-align":"center"}},$l={href:"/problem/0731",target:"_blank",rel:"noopener noreferrer"},to={style:{"text-align":"left"}},eo=t("code",null,"设计",-1),lo=t("code",null,"线段树",-1),oo=t("code",null,"数组",-1),no=t("code",null,"3+",-1),so={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"732",-1),io={style:{"text-align":"left"}},ao={href:"https://leetcode.com/problems/my-calendar-iii",target:"_blank",rel:"noopener noreferrer"},co=t("td",{style:{"text-align":"center"}},null,-1),ro={style:{"text-align":"left"}},uo=t("code",null,"设计",-1),ho=t("code",null,"线段树",-1),fo=t("code",null,"二分查找",-1),go=t("code",null,"2+",-1),mo={style:{"text-align":"left"}},yo=t("td",{style:{"text-align":"center"}},"850",-1),xo={style:{"text-align":"left"}},bo={href:"https://leetcode.com/problems/rectangle-area-ii",target:"_blank",rel:"noopener noreferrer"},po=t("td",{style:{"text-align":"center"}},null,-1),ko={style:{"text-align":"left"}},Ho=t("code",null,"线段树",-1),qo=t("code",null,"数组",-1),Io=t("code",null,"有序集合",-1),vo=t("code",null,"1+",-1),wo={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"1157",-1),Lo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},zo=t("td",{style:{"text-align":"center"}},null,-1),Ko={style:{"text-align":"left"}},Bo=t("code",null,"设计",-1),jo=t("code",null,"树状数组",-1),No=t("code",null,"线段树",-1),Po=t("code",null,"2+",-1),Vo={style:{"text-align":"left"}},Eo=t("td",{style:{"text-align":"center"}},"1395",-1),Oo={style:{"text-align":"left"}},Ro={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},null,-1),To={style:{"text-align":"left"}},Ao=t("code",null,"树状数组",-1),Go=t("code",null,"线段树",-1),Jo=t("code",null,"数组",-1),Do=t("code",null,"1+",-1),Fo={style:{"text-align":"left"}},So=t("td",{style:{"text-align":"center"}},"1505",-1),Uo={style:{"text-align":"left"}},Wo={href:"https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},Xo=t("td",{style:{"text-align":"center"}},null,-1),Yo={style:{"text-align":"left"}},Zo=t("code",null,"贪心",-1),$o=t("code",null,"树状数组",-1),tn=t("code",null,"线段树",-1),en=t("code",null,"1+",-1),ln={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"1521",-1),nn={style:{"text-align":"left"}},sn={href:"https://leetcode.com/problems/find-a-value-of-a-mysterious-function-closest-to-target",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},null,-1),_n={style:{"text-align":"left"}},an=t("code",null,"位运算",-1),cn=t("code",null,"线段树",-1),rn=t("code",null,"数组",-1),un=t("code",null,"1+",-1),hn={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"1622",-1),gn={style:{"text-align":"left"}},mn={href:"https://leetcode.com/problems/fancy-sequence",target:"_blank",rel:"noopener noreferrer"},yn=t("td",{style:{"text-align":"center"}},null,-1),xn={style:{"text-align":"left"}},bn=t("code",null,"设计",-1),pn=t("code",null,"线段树",-1),kn=t("code",null,"数学",-1),Hn={style:{"text-align":"left"}},qn=t("td",{style:{"text-align":"center"}},"1649",-1),In={style:{"text-align":"left"}},vn={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},wn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},Ln=t("code",null,"树状数组",-1),Cn=t("code",null,"线段树",-1),zn=t("code",null,"数组",-1),Kn=t("code",null,"4+",-1),Bn={style:{"text-align":"left"}},jn=t("td",{style:{"text-align":"center"}},"1687",-1),Nn={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},Vn=t("td",{style:{"text-align":"center"}},null,-1),En={style:{"text-align":"left"}},On=t("code",null,"线段树",-1),Rn=t("code",null,"队列",-1),Qn=t("code",null,"数组",-1),Tn=t("code",null,"4+",-1),An={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"2031",-1),Jn={style:{"text-align":"left"}},Dn={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},Fn=t("td",{style:{"text-align":"center"}},null,-1),Sn={style:{"text-align":"left"}},Un=t("code",null,"树状数组",-1),Wn=t("code",null,"线段树",-1),Xn=t("code",null,"数组",-1),Yn=t("code",null,"4+",-1),Zn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"2080",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/range-frequency-queries",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},null,-1),os={style:{"text-align":"left"}},ns=t("code",null,"设计",-1),ss=t("code",null,"线段树",-1),ds=t("code",null,"数组",-1),_s=t("code",null,"2+",-1),is={style:{"text-align":"left"}},as=t("td",{style:{"text-align":"center"}},"2158",-1),cs={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/amount-of-new-area-painted-each-day",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},null,-1),hs={style:{"text-align":"left"}},fs=t("code",null,"线段树",-1),gs=t("code",null,"数组",-1),ms=t("code",null,"有序集合",-1),ys={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"2179",-1),bs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},ks=t("td",{style:{"text-align":"center"}},null,-1),Hs={style:{"text-align":"left"}},qs=t("code",null,"树状数组",-1),Is=t("code",null,"线段树",-1),vs=t("code",null,"数组",-1),ws=t("code",null,"4+",-1),Ms={style:{"text-align":"left"}},Ls=t("td",{style:{"text-align":"center"}},"2213",-1),Cs={style:{"text-align":"left"}},zs={href:"https://leetcode.com/problems/longest-substring-of-one-repeating-character",target:"_blank",rel:"noopener noreferrer"},Ks=t("td",{style:{"text-align":"center"}},null,-1),Bs={style:{"text-align":"left"}},js=t("code",null,"线段树",-1),Ns=t("code",null,"数组",-1),Ps=t("code",null,"字符串",-1),Vs=t("code",null,"1+",-1),Es={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"2276",-1),Rs={style:{"text-align":"left"}},Qs={href:"https://leetcode.com/problems/count-integers-in-intervals",target:"_blank",rel:"noopener noreferrer"},Ts=t("td",{style:{"text-align":"center"}},null,-1),As={style:{"text-align":"left"}},Gs=t("code",null,"设计",-1),Js=t("code",null,"线段树",-1),Ds=t("code",null,"有序集合",-1),Fs={style:{"text-align":"left"}},Ss=t("td",{style:{"text-align":"center"}},"2286",-1),Us={style:{"text-align":"left"}},Ws={href:"https://leetcode.com/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},Xs=t("td",{style:{"text-align":"center"}},null,-1),Ys={style:{"text-align":"left"}},Zs=t("code",null,"设计",-1),$s=t("code",null,"树状数组",-1),td=t("code",null,"线段树",-1),ed=t("code",null,"1+",-1),ld={style:{"text-align":"left"}},od=t("td",{style:{"text-align":"center"}},"2407",-1),nd={style:{"text-align":"left"}},sd={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},dd=t("td",{style:{"text-align":"center"}},null,-1),_d={style:{"text-align":"left"}},id=t("code",null,"树状数组",-1),ad=t("code",null,"线段树",-1),cd=t("code",null,"队列",-1),rd=t("code",null,"4+",-1),ud={style:{"text-align":"left"}},hd=t("td",{style:{"text-align":"center"}},"2424",-1),fd={style:{"text-align":"left"}},gd={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},md=t("td",{style:{"text-align":"center"}},null,-1),yd={style:{"text-align":"left"}},xd=t("code",null,"并查集",-1),bd=t("code",null,"设计",-1),pd=t("code",null,"树状数组",-1),kd=t("code",null,"4+",-1),Hd={style:{"text-align":"left"}},qd=t("td",{style:{"text-align":"center"}},"2426",-1),Id={style:{"text-align":"left"}},vd={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},wd=t("td",{style:{"text-align":"center"}},null,-1),Md={style:{"text-align":"left"}},Ld=t("code",null,"树状数组",-1),Cd=t("code",null,"线段树",-1),zd=t("code",null,"数组",-1),Kd=t("code",null,"4+",-1),Bd={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"2519",-1),Nd={style:{"text-align":"left"}},Pd={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},Vd=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},Od=t("code",null,"树状数组",-1),Rd=t("code",null,"线段树",-1),Qd=t("code",null,"数组",-1),Td=t("code",null,"4+",-1),Ad={style:{"text-align":"left"}},Gd=t("td",{style:{"text-align":"center"}},"2569",-1),Jd={style:{"text-align":"left"}},Dd={href:"https://leetcode.com/problems/handling-sum-queries-after-update",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Sd={style:{"text-align":"left"}},Ud=t("code",null,"线段树",-1),Wd=t("code",null,"数组",-1),Xd={style:{"text-align":"left"}},Yd=t("td",{style:{"text-align":"center"}},"2659",-1),Zd={style:{"text-align":"left"}},$d={href:"https://leetcode.com/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},t_=t("td",{style:{"text-align":"center"}},null,-1),e_={style:{"text-align":"left"}},l_=t("code",null,"贪心",-1),o_=t("code",null,"树状数组",-1),n_=t("code",null,"线段树",-1),s_=t("code",null,"4+",-1),d_={style:{"text-align":"left"}},__=t("td",{style:{"text-align":"center"}},"2736",-1),i_={style:{"text-align":"left"}},a_={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},c_=t("td",{style:{"text-align":"center"}},null,-1),r_={style:{"text-align":"left"}},u_=t("code",null,"栈",-1),h_=t("code",null,"树状数组",-1),f_=t("code",null,"线段树",-1),g_=t("code",null,"4+",-1),m_={style:{"text-align":"left"}},y_=t("td",{style:{"text-align":"center"}},"2907",-1),x_={style:{"text-align":"left"}},b_={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),k_={style:{"text-align":"left"}},H_=t("code",null,"树状数组",-1),q_=t("code",null,"线段树",-1),I_=t("code",null,"数组",-1),v_={style:{"text-align":"left"}},w_=t("td",{style:{"text-align":"center"}},"2916",-1),M_={style:{"text-align":"left"}},L_={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},C_=t("td",{style:{"text-align":"center"}},null,-1),z_={style:{"text-align":"left"}},K_=t("code",null,"树状数组",-1),B_=t("code",null,"线段树",-1),j_=t("code",null,"数组",-1),N_=t("code",null,"1+",-1),P_={style:{"text-align":"left"}},V_=t("td",{style:{"text-align":"center"}},"2921",-1),E_={style:{"text-align":"left"}},O_={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},R_=t("td",{style:{"text-align":"center"}},null,-1),Q_={style:{"text-align":"left"}},T_=t("code",null,"树状数组",-1),A_=t("code",null,"线段树",-1),G_=t("code",null,"数组",-1),J_={style:{"text-align":"left"}},D_=t("td",{style:{"text-align":"center"}},"2926",-1),F_={style:{"text-align":"left"}},S_={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},U_=t("td",{style:{"text-align":"center"}},null,-1),W_={style:{"text-align":"left"}},X_=t("code",null,"树状数组",-1),Y_=t("code",null,"线段树",-1),Z_=t("code",null,"数组",-1),$_=t("code",null,"2+",-1),ti={style:{"text-align":"left"}},ei=t("td",{style:{"text-align":"center"}},"2940",-1),li={style:{"text-align":"left"}},oi={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},ni=t("td",{style:{"text-align":"center"}},null,-1),si={style:{"text-align":"left"}},di=t("code",null,"栈",-1),_i=t("code",null,"树状数组",-1),ii=t("code",null,"线段树",-1),ai=t("code",null,"4+",-1),ci={style:{"text-align":"left"}},ri=t("td",{style:{"text-align":"center"}},"3072",-1),ui={style:{"text-align":"left"}},hi={href:"https://leetcode.com/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},fi=t("td",{style:{"text-align":"center"}},null,-1),gi={style:{"text-align":"left"}},mi=t("code",null,"树状数组",-1),yi=t("code",null,"线段树",-1),xi=t("code",null,"数组",-1),bi=t("code",null,"1+",-1),pi={style:{"text-align":"left"}},ki=t("td",{style:{"text-align":"center"}},"3109",-1),Hi={style:{"text-align":"left"}},qi={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},Ii=t("td",{style:{"text-align":"center"}},null,-1),vi={style:{"text-align":"left"}},wi=t("code",null,"树状数组",-1),Mi=t("code",null,"线段树",-1),Li=t("code",null,"数组",-1),Ci=t("code",null,"4+",-1),zi={style:{"text-align":"left"}},Ki=t("td",{style:{"text-align":"center"}},"3117",-1),Bi={style:{"text-align":"left"}},ji={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},Ni=t("td",{style:{"text-align":"center"}},null,-1),Pi={style:{"text-align":"left"}},Vi=t("code",null,"位运算",-1),Ei=t("code",null,"线段树",-1),Oi=t("code",null,"队列",-1),Ri=t("code",null,"3+",-1),Qi={style:{"text-align":"left"}},Ti=t("td",{style:{"text-align":"center"}},"3161",-1),Ai={style:{"text-align":"left"}},Gi={href:"https://leetcode.com/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},Ji=t("td",{style:{"text-align":"center"}},null,-1),Di={style:{"text-align":"left"}},Fi=t("code",null,"树状数组",-1),Si=t("code",null,"线段树",-1),Ui=t("code",null,"数组",-1),Wi=t("code",null,"1+",-1),Xi={style:{"text-align":"left"}},Yi=t("td",{style:{"text-align":"center"}},"3165",-1),Zi={style:{"text-align":"left"}},$i={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},ta=t("td",{style:{"text-align":"center"}},null,-1),ea={style:{"text-align":"left"}},la=t("code",null,"线段树",-1),oa=t("code",null,"数组",-1),na=t("code",null,"分治",-1),sa=t("code",null,"1+",-1),da={style:{"text-align":"left"}},_a=t("td",{style:{"text-align":"center"}},"3171",-1),ia={style:{"text-align":"left"}},aa={href:"https://leetcode.com/problems/find-subarray-with-bitwise-or-closest-to-k",target:"_blank",rel:"noopener noreferrer"},ca=t("td",{style:{"text-align":"center"}},null,-1),ra={style:{"text-align":"left"}},ua=t("code",null,"位运算",-1),ha=t("code",null,"线段树",-1),fa=t("code",null,"数组",-1),ga=t("code",null,"1+",-1),ma={style:{"text-align":"left"}},ya=t("td",{style:{"text-align":"center"}},"3187",-1),xa={style:{"text-align":"left"}},ba={href:"https://leetcode.com/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},pa=t("td",{style:{"text-align":"center"}},null,-1),ka={style:{"text-align":"left"}},Ha=t("code",null,"树状数组",-1),qa=t("code",null,"线段树",-1),Ia=t("code",null,"数组",-1),va={style:{"text-align":"left"}},wa=t("td",{style:{"text-align":"center"}},"3209",-1),Ma={style:{"text-align":"left"}},La={href:"https://leetcode.com/problems/number-of-subarrays-with-and-value-of-k",target:"_blank",rel:"noopener noreferrer"},Ca=t("td",{style:{"text-align":"center"}},null,-1),za={style:{"text-align":"left"}},Ka=t("code",null,"位运算",-1),Ba=t("code",null,"线段树",-1),ja=t("code",null,"数组",-1),Na=t("code",null,"1+",-1),Pa={style:{"text-align":"left"}},Va=t("td",{style:{"text-align":"center"}},"3291",-1),Ea={style:{"text-align":"left"}},Oa={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Ra=t("td",{style:{"text-align":"center"}},null,-1),Qa={style:{"text-align":"left"}},Ta=t("code",null,"字典树",-1),Aa=t("code",null,"线段树",-1),Ga=t("code",null,"数组",-1),Ja=t("code",null,"6+",-1),Da={style:{"text-align":"left"}},Fa=t("td",{style:{"text-align":"center"}},"3292",-1),Sa={style:{"text-align":"left"}},Ua={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},null,-1),Xa={style:{"text-align":"left"}},Ya=t("code",null,"线段树",-1),Za=t("code",null,"数组",-1),$a=t("code",null,"字符串",-1),tc=t("code",null,"5+",-1),ec={style:{"text-align":"left"}},lc=t("td",{style:{"text-align":"center"}},"LCP 05",-1),oc={style:{"text-align":"left"}},nc={href:"https://leetcode.cn/problems/coin-bonus",target:"_blank",rel:"noopener noreferrer"},sc=t("td",{style:{"text-align":"center"}},null,-1),dc={style:{"text-align":"left"}},_c=t("code",null,"树状数组",-1),ic=t("code",null,"线段树",-1),ac=t("code",null,"数组",-1),cc={style:{"text-align":"left"}},rc=t("td",{style:{"text-align":"center"}},"LCP 09",-1),uc={style:{"text-align":"left"}},hc={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},fc=t("td",{style:{"text-align":"center"}},null,-1),gc={style:{"text-align":"left"}},mc=t("code",null,"广度优先搜索",-1),yc=t("code",null,"线段树",-1),xc=t("code",null,"数组",-1),bc=t("code",null,"1+",-1),pc={style:{"text-align":"left"}},kc=t("td",{style:{"text-align":"center"}},"LCP 27",-1),Hc={style:{"text-align":"left"}},qc={href:"https://leetcode.cn/problems/IQvJ9i",target:"_blank",rel:"noopener noreferrer"},Ic=t("td",{style:{"text-align":"center"}},null,-1),vc={style:{"text-align":"left"}},wc=t("code",null,"设计",-1),Mc=t("code",null,"线段树",-1),Lc=t("code",null,"数学",-1),Cc=t("code",null,"1+",-1),zc={style:{"text-align":"left"}},Kc=t("td",{style:{"text-align":"center"}},"LCP 52",-1),Bc={style:{"text-align":"left"}},jc={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},Nc=t("td",{style:{"text-align":"center"}},null,-1),Pc={style:{"text-align":"left"}},Vc=t("code",null,"树",-1),Ec=t("code",null,"线段树",-1),Oc=t("code",null,"二叉搜索树",-1),Rc=t("code",null,"4+",-1),Qc={style:{"text-align":"left"}},Tc=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),Ac={style:{"text-align":"left"}},Gc={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},Jc=t("td",{style:{"text-align":"center"}},null,-1),Dc={style:{"text-align":"left"}},Fc=t("code",null,"树状数组",-1),Sc=t("code",null,"线段树",-1),Uc=t("code",null,"数组",-1),Wc=t("code",null,"4+",-1),Xc={style:{"text-align":"left"}},Yc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 58",-1),Zc={style:{"text-align":"left"}},$c={href:"https://leetcode.cn/problems/fi9suh",target:"_blank",rel:"noopener noreferrer"},tr=t("td",{style:{"text-align":"center"}},null,-1),er={style:{"text-align":"left"}},lr=t("code",null,"设计",-1),or=t("code",null,"线段树",-1),nr=t("code",null,"二分查找",-1),sr=t("code",null,"1+",-1),dr={style:{"text-align":"left"}};function _r(ir,ar){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[h,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[T]),_:1}),l(),A,l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[J]),_:1})]),D,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[Nt]),_:1})])]),Pt,r(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Et,t("td",Ot,[t("a",Rt,[l("天际线问题"),e(s)])]),Qt,t("td",Tt,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[At]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Jt]),_:1}),l(),Dt]),t("td",Ft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[St,t("td",Ut,[t("a",Wt,[l("区域和检索 - 数组可修改"),e(s)])]),t("td",Xt,[t("a",Yt,[l("[✓]"),e(s)])]),t("td",Zt,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ee]),_:1}),l(),le]),t("td",oe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ne,t("td",se,[t("a",de,[l("二维区域和检索 - 矩阵可修改"),e(s)])]),_e,t("td",ie,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[re]),_:1}),l(),ue]),t("td",he,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fe,t("td",ge,[t("a",me,[l("计算右侧小于当前元素的个数"),e(s)])]),ye,t("td",xe,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[pe]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ke]),_:1}),l(),He]),t("td",qe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ie,t("td",ve,[t("a",we,[l("区间和的个数"),e(s)])]),Me,t("td",Le,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ze]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ke]),_:1}),l(),Be]),t("td",je,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ne,t("td",Pe,[t("a",Ve,[l("根据身高重建队列"),e(s)])]),Ee,t("td",Oe,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Re]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Qe]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Te]),_:1}),l(),Ae]),t("td",Ge,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Je,t("td",De,[t("a",Fe,[l("翻转对"),e(s)])]),Se,t("td",Ue,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[We]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Xe]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ye]),_:1}),l(),Ze]),t("td",$e,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tl,t("td",el,[t("a",ll,[l("最长递增子序列的个数"),e(s)])]),ol,t("td",nl,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[sl]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[dl]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_l]),_:1}),l(),il]),t("td",al,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cl,t("td",rl,[t("a",ul,[l("K 个关闭的灯泡"),e(s)])]),hl,t("td",fl,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[gl]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ml]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[yl]),_:1}),l(),xl]),t("td",bl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pl,t("td",kl,[t("a",Hl,[l("掉落的方块"),e(s)])]),ql,t("td",Il,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[wl]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Ml]),_:1})]),t("td",Ll,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cl,t("td",zl,[t("a",Kl,[l("Range 模块"),e(s)])]),Bl,t("td",jl,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Nl]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Pl]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Vl]),_:1})]),t("td",El,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ol,t("td",Rl,[t("a",Ql,[l("我的日程安排表 I"),e(s)])]),t("td",Tl,[t("a",Al,[l("[✓]"),e(s)])]),t("td",Gl,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Dl]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Fl]),_:1}),l(),Sl]),t("td",Ul,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wl,t("td",Xl,[t("a",Yl,[l("我的日程安排表 II"),e(s)])]),t("td",Zl,[t("a",$l,[l("[✓]"),e(s)])]),t("td",to,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[lo]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oo]),_:1}),l(),no]),t("td",so,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_o,t("td",io,[t("a",ao,[l("我的日程安排表 III"),e(s)])]),co,t("td",ro,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[uo]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ho]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[fo]),_:1}),l(),go]),t("td",mo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yo,t("td",xo,[t("a",bo,[l("矩形面积 II"),e(s)])]),po,t("td",ko,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Ho]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[qo]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Io]),_:1}),l(),vo]),t("td",wo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mo,t("td",Lo,[t("a",Co,[l("子数组中占绝大多数的元素"),e(s)])]),zo,t("td",Ko,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Bo]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[jo]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[No]),_:1}),l(),Po]),t("td",Vo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Eo,t("td",Oo,[t("a",Ro,[l("统计作战单位数"),e(s)])]),Qo,t("td",To,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ao]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Go]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Jo]),_:1}),l(),Do]),t("td",Fo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[So,t("td",Uo,[t("a",Wo,[l("最多 K 次交换相邻数位后得到的最小整数"),e(s)])]),Xo,t("td",Yo,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Zo]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[$o]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[tn]),_:1}),l(),en]),t("td",ln,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[on,t("td",nn,[t("a",sn,[l("找到最接近目标值的函数值"),e(s)])]),dn,t("td",_n,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[an]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[cn]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[rn]),_:1}),l(),un]),t("td",hn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fn,t("td",gn,[t("a",mn,[l("奇妙序列"),e(s)])]),yn,t("td",xn,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[bn]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[pn]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[kn]),_:1})]),t("td",Hn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qn,t("td",In,[t("a",vn,[l("通过指令创建有序数组"),e(s)])]),wn,t("td",Mn,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ln]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Cn]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zn]),_:1}),l(),Kn]),t("td",Bn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jn,t("td",Nn,[t("a",Pn,[l("从仓库到码头运输箱子"),e(s)])]),Vn,t("td",En,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[On]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Rn]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qn]),_:1}),l(),Tn]),t("td",An,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gn,t("td",Jn,[t("a",Dn,[l("1 比 0 多的子数组个数"),e(s)])]),Fn,t("td",Sn,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Un]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Wn]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xn]),_:1}),l(),Yn]),t("td",Zn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$n,t("td",ts,[t("a",es,[l("区间内查询数字的频率"),e(s)])]),ls,t("td",os,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[ns]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ss]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ds]),_:1}),l(),_s]),t("td",is,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[as,t("td",cs,[t("a",rs,[l("每天绘制新区域的数量"),e(s)])]),us,t("td",hs,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[fs]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[gs]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[ms]),_:1})]),t("td",ys,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xs,t("td",bs,[t("a",ps,[l("统计数组中好三元组数目"),e(s)])]),ks,t("td",Hs,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[qs]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Is]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[vs]),_:1}),l(),ws]),t("td",Ms,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ls,t("td",Cs,[t("a",zs,[l("由单个字符重复的最长子字符串"),e(s)])]),Ks,t("td",Bs,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[js]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ns]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[Ps]),_:1}),l(),Vs]),t("td",Es,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Os,t("td",Rs,[t("a",Qs,[l("统计区间中的整数数目"),e(s)])]),Ts,t("td",As,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Js]),_:1}),l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[Ds]),_:1})]),t("td",Fs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ss,t("td",Us,[t("a",Ws,[l("以组为单位订音乐会的门票"),e(s)])]),Xs,t("td",Ys,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[$s]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[td]),_:1}),l(),ed]),t("td",ld,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[od,t("td",nd,[t("a",sd,[l("最长递增子序列 II"),e(s)])]),dd,t("td",_d,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[id]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ad]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[cd]),_:1}),l(),rd]),t("td",ud,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hd,t("td",fd,[t("a",gd,[l("最长上传前缀"),e(s)])]),md,t("td",yd,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[xd]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[bd]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[pd]),_:1}),l(),kd]),t("td",Hd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qd,t("td",Id,[t("a",vd,[l("满足不等式的数对数目"),e(s)])]),wd,t("td",Md,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ld]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[zd]),_:1}),l(),Kd]),t("td",Bd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jd,t("td",Nd,[t("a",Pd,[l("统计 K-Big 索引的数量"),e(s)])]),Vd,t("td",Ed,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Od]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Rd]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Qd]),_:1}),l(),Td]),t("td",Ad,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gd,t("td",Jd,[t("a",Dd,[l("更新数组后处理求和查询"),e(s)])]),Fd,t("td",Sd,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Ud]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Wd]),_:1})]),t("td",Xd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yd,t("td",Zd,[t("a",$d,[l("将数组清空"),e(s)])]),t_,t("td",e_,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[o_]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[n_]),_:1}),l(),s_]),t("td",d_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[__,t("td",i_,[t("a",a_,[l("最大和查询"),e(s)])]),c_,t("td",r_,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[u_]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[f_]),_:1}),l(),g_]),t("td",m_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y_,t("td",x_,[t("a",b_,[l("价格递增的最大利润三元组 I"),e(s)])]),p_,t("td",k_,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[H_]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[I_]),_:1})]),t("td",v_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w_,t("td",M_,[t("a",L_,[l("子数组不同元素数目的平方和 II"),e(s)])]),C_,t("td",z_,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[K_]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[B_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[j_]),_:1}),l(),N_]),t("td",P_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V_,t("td",E_,[t("a",O_,[l("价格递增的最大利润三元组 II"),e(s)])]),R_,t("td",Q_,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[T_]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[A_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[G_]),_:1})]),t("td",J_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D_,t("td",F_,[t("a",S_,[l("平衡子序列的最大和"),e(s)])]),U_,t("td",W_,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Y_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Z_]),_:1}),l(),$_]),t("td",ti,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ei,t("td",li,[t("a",oi,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(s)])]),ni,t("td",si,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[di]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[_i]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ii]),_:1}),l(),ai]),t("td",ci,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ri,t("td",ui,[t("a",hi,[l("将元素分配到两个数组中 II"),e(s)])]),fi,t("td",gi,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[mi]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[yi]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xi]),_:1}),l(),bi]),t("td",pi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ki,t("td",Hi,[t("a",qi,[l("查找排列的下标"),e(s)])]),Ii,t("td",vi,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[wi]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Mi]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Li]),_:1}),l(),Ci]),t("td",zi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ki,t("td",Bi,[t("a",ji,[l("划分数组得到最小的值之和"),e(s)])]),Ni,t("td",Pi,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Vi]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Ei]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[Oi]),_:1}),l(),Ri]),t("td",Qi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ti,t("td",Ai,[t("a",Gi,[l("物块放置查询"),e(s)])]),Ji,t("td",Di,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Fi]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Si]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ui]),_:1}),l(),Wi]),t("td",Xi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yi,t("td",Zi,[t("a",$i,[l("不包含相邻元素的子序列的最大和"),e(s)])]),ta,t("td",ea,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[la]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oa]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[na]),_:1}),l(),sa]),t("td",da,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_a,t("td",ia,[t("a",aa,[l("找到按位或最接近 K 的子数组"),e(s)])]),ca,t("td",ra,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[ua]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ha]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[fa]),_:1}),l(),ga]),t("td",ma,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ya,t("td",xa,[t("a",ba,[l("数组中的峰值"),e(s)])]),pa,t("td",ka,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ha]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[qa]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ia]),_:1})]),t("td",va,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wa,t("td",Ma,[t("a",La,[l("子数组按位与值为 K 的数目"),e(s)])]),Ca,t("td",za,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Ka]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Ba]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ja]),_:1}),l(),Na]),t("td",Pa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Va,t("td",Ea,[t("a",Oa,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),Ra,t("td",Qa,[e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[Ta]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Aa]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ga]),_:1}),l(),Ja]),t("td",Da,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fa,t("td",Sa,[t("a",Ua,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),Wa,t("td",Xa,[e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Ya]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Za]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[$a]),_:1}),l(),tc]),t("td",ec,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lc,t("td",oc,[t("a",nc,[l("发 LeetCoin"),e(s)])]),sc,t("td",dc,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[_c]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[ic]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ac]),_:1})]),t("td",cc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rc,t("td",uc,[t("a",hc,[l("最小跳跃次数"),e(s)])]),fc,t("td",gc,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[mc]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[yc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[xc]),_:1}),l(),bc]),t("td",pc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kc,t("td",Hc,[t("a",qc,[l("黑盒光线反射"),e(s)])]),Ic,t("td",vc,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[wc]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Mc]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[Lc]),_:1}),l(),Cc]),t("td",zc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kc,t("td",Bc,[t("a",jc,[l("二叉搜索树染色"),e(s)])]),Nc,t("td",Pc,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Vc]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[Oc]),_:1}),l(),Rc]),t("td",Qc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tc,t("td",Ac,[t("a",Gc,[l("数组中的逆序对"),e(s)])]),Jc,t("td",Dc,[e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Fc]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[Sc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Uc]),_:1}),l(),Wc]),t("td",Xc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yc,t("td",Zc,[t("a",$c,[l("日程表"),e(s)])]),tr,t("td",er,[e(n,{to:"/outline/tag/design.html"},{default:o(()=>[lr]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[or]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nr]),_:1}),l(),sr]),t("td",dr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const rr=i(u,[["render",_r],["__file","segment-tree.html.vue"]]);export{rr as default};
