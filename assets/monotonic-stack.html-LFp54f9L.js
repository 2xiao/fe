import{_ as a,r as _,o as c,c as i,a as t,d as e,w as o,b as l,f as r}from"./app-Byvqzvgg.js";const h={},u=t("h1",{id:"单调栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#单调栈","aria-hidden":"true"},"#"),l(" 单调栈")],-1),f=t("summary",null,"全部标签",-1),g=t("p",null,[t("strong",null,"数据结构")],-1),m=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("span",{class:"blue"},"单调栈",-1),M=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),H=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),V=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),j=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),N=t("code",null,"拓扑排序",-1),O=t("code",null,"最短路",-1),C=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),Q=t("code",null,"双连通分量",-1),R=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),P=t("code",null,"线段树",-1),S=t("code",null,"树状数组",-1),T=t("code",null,"后缀数组",-1),X=t("p",null,[t("strong",null,"算法")],-1),Y=t("code",null,"枚举",-1),D=t("code",null,"递归",-1),F=t("code",null,"分治",-1),G=t("code",null,"回溯",-1),J=t("code",null,"贪心",-1),U=t("code",null,"动态规划",-1),W=t("code",null,"排序",-1),Z=t("code",null,"桶排序",-1),$=t("code",null,"计数排序",-1),tt=t("code",null,"基数排序",-1),et=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),dt=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ut=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),gt=t("code",null,"扫描线",-1),mt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),Ht=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Vt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),jt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Nt=t("hr",null,null,-1),Ot=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ct=t("td",{style:{"text-align":"center"}},"42",-1),Kt={style:{"text-align":"left"}},Qt={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},Rt={style:{"text-align":"center"}},At={style:{"text-align":"left"}},Pt=t("code",null,"栈",-1),St=t("code",null,"数组",-1),Tt=t("code",null,"双指针",-1),Xt=t("code",null,"2+",-1),Yt={style:{"text-align":"left"}},Dt=t("td",{style:{"text-align":"center"}},"84",-1),Ft={style:{"text-align":"left"}},Gt={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"center"}},Ut={style:{"text-align":"left"}},Wt=t("code",null,"栈",-1),Zt=t("code",null,"数组",-1),$t=t("code",null,"单调栈",-1),te={style:{"text-align":"left"}},ee=t("td",{style:{"text-align":"center"}},"85",-1),le={style:{"text-align":"left"}},oe={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},se={style:{"text-align":"center"}},ne={style:{"text-align":"left"}},de=t("code",null,"栈",-1),_e=t("code",null,"数组",-1),ae=t("code",null,"动态规划",-1),ce=t("code",null,"2+",-1),ie={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"255",-1),he={style:{"text-align":"left"}},ue={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},fe=t("td",{style:{"text-align":"center"}},null,-1),ge={style:{"text-align":"left"}},me=t("code",null,"栈",-1),ye=t("code",null,"树",-1),xe=t("code",null,"二叉搜索树",-1),be=t("code",null,"4+",-1),pe={style:{"text-align":"left"}},ke=t("td",{style:{"text-align":"center"}},"316",-1),Me={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},ve={style:{"text-align":"center"}},He={style:{"text-align":"left"}},we=t("code",null,"栈",-1),qe=t("code",null,"贪心",-1),Ve=t("code",null,"字符串",-1),ze=t("code",null,"1+",-1),Ee={style:{"text-align":"left"}},Le=t("td",{style:{"text-align":"center"}},"321",-1),je={style:{"text-align":"left"}},Be={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},Ne=t("td",{style:{"text-align":"center"}},null,-1),Oe={style:{"text-align":"left"}},Ce=t("code",null,"栈",-1),Ke=t("code",null,"贪心",-1),Qe=t("code",null,"数组",-1),Re=t("code",null,"2+",-1),Ae={style:{"text-align":"left"}},Pe=t("td",{style:{"text-align":"center"}},"402",-1),Se={style:{"text-align":"left"}},Te={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},Xe=t("td",{style:{"text-align":"center"}},null,-1),Ye={style:{"text-align":"left"}},De=t("code",null,"栈",-1),Fe=t("code",null,"贪心",-1),Ge=t("code",null,"字符串",-1),Je=t("code",null,"1+",-1),Ue={style:{"text-align":"left"}},We=t("td",{style:{"text-align":"center"}},"456",-1),Ze={style:{"text-align":"left"}},$e={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},tl=t("td",{style:{"text-align":"center"}},null,-1),el={style:{"text-align":"left"}},ll=t("code",null,"栈",-1),ol=t("code",null,"数组",-1),sl=t("code",null,"二分查找",-1),nl=t("code",null,"2+",-1),dl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"496",-1),al={style:{"text-align":"left"}},cl={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},il={style:{"text-align":"center"}},rl={style:{"text-align":"left"}},hl=t("code",null,"栈",-1),ul=t("code",null,"数组",-1),fl=t("code",null,"哈希表",-1),gl=t("code",null,"1+",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"503",-1),xl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},pl={style:{"text-align":"center"}},kl={style:{"text-align":"left"}},Ml=t("code",null,"栈",-1),Il=t("code",null,"数组",-1),vl=t("code",null,"单调栈",-1),Hl={style:{"text-align":"left"}},wl=t("td",{style:{"text-align":"center"}},"581",-1),ql={style:{"text-align":"left"}},Vl={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},zl=t("td",{style:{"text-align":"center"}},null,-1),El={style:{"text-align":"left"}},Ll=t("code",null,"栈",-1),jl=t("code",null,"贪心",-1),Bl=t("code",null,"数组",-1),Nl=t("code",null,"3+",-1),Ol={style:{"text-align":"left"}},Cl=t("td",{style:{"text-align":"center"}},"654",-1),Kl={style:{"text-align":"left"}},Ql={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rl={style:{"text-align":"center"}},Al={style:{"text-align":"left"}},Pl=t("code",null,"栈",-1),Sl=t("code",null,"树",-1),Tl=t("code",null,"数组",-1),Xl=t("code",null,"3+",-1),Yl={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"739",-1),Fl={style:{"text-align":"left"}},Gl={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},Jl={style:{"text-align":"center"}},Ul={style:{"text-align":"left"}},Wl=t("code",null,"栈",-1),Zl=t("code",null,"数组",-1),$l=t("code",null,"单调栈",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"768",-1),lo={style:{"text-align":"left"}},oo={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),no={style:{"text-align":"left"}},_o=t("code",null,"栈",-1),ao=t("code",null,"贪心",-1),co=t("code",null,"数组",-1),io=t("code",null,"2+",-1),ro={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"769",-1),uo={style:{"text-align":"left"}},fo={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},go=t("td",{style:{"text-align":"center"}},null,-1),mo={style:{"text-align":"left"}},yo=t("code",null,"栈",-1),xo=t("code",null,"贪心",-1),bo=t("code",null,"数组",-1),po=t("code",null,"2+",-1),ko={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"853",-1),Io={style:{"text-align":"left"}},vo={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},Ho=t("td",{style:{"text-align":"center"}},null,-1),wo={style:{"text-align":"left"}},qo=t("code",null,"栈",-1),Vo=t("code",null,"数组",-1),zo=t("code",null,"排序",-1),Eo=t("code",null,"1+",-1),Lo={style:{"text-align":"left"}},jo=t("td",{style:{"text-align":"center"}},"901",-1),Bo={style:{"text-align":"left"}},No={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},Oo=t("td",{style:{"text-align":"center"}},null,-1),Co={style:{"text-align":"left"}},Ko=t("code",null,"栈",-1),Qo=t("code",null,"设计",-1),Ro=t("code",null,"数据流",-1),Ao=t("code",null,"1+",-1),Po={style:{"text-align":"left"}},So=t("td",{style:{"text-align":"center"}},"907",-1),To={style:{"text-align":"left"}},Xo={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},Yo=t("td",{style:{"text-align":"center"}},null,-1),Do={style:{"text-align":"left"}},Fo=t("code",null,"栈",-1),Go=t("code",null,"数组",-1),Jo=t("code",null,"动态规划",-1),Uo=t("code",null,"1+",-1),Wo={style:{"text-align":"left"}},Zo=t("td",{style:{"text-align":"center"}},"962",-1),$o={style:{"text-align":"left"}},ts={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},es={style:{"text-align":"center"}},ls={style:{"text-align":"left"}},os=t("code",null,"栈",-1),ss=t("code",null,"数组",-1),ns=t("code",null,"单调栈",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"975",-1),as={style:{"text-align":"left"}},cs={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},is=t("td",{style:{"text-align":"center"}},null,-1),rs={style:{"text-align":"left"}},hs=t("code",null,"栈",-1),us=t("code",null,"数组",-1),fs=t("code",null,"动态规划",-1),gs=t("code",null,"2+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"1008",-1),xs={style:{"text-align":"left"}},bs={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},ps={style:{"text-align":"center"}},ks={style:{"text-align":"left"}},Ms=t("code",null,"栈",-1),Is=t("code",null,"树",-1),vs=t("code",null,"二叉搜索树",-1),Hs=t("code",null,"3+",-1),ws={style:{"text-align":"left"}},qs=t("td",{style:{"text-align":"center"}},"1019",-1),Vs={style:{"text-align":"left"}},zs={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},Es=t("td",{style:{"text-align":"center"}},null,-1),Ls={style:{"text-align":"left"}},js=t("code",null,"栈",-1),Bs=t("code",null,"数组",-1),Ns=t("code",null,"链表",-1),Os=t("code",null,"1+",-1),Cs={style:{"text-align":"left"}},Ks=t("td",{style:{"text-align":"center"}},"1063",-1),Qs={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},As=t("td",{style:{"text-align":"center"}},null,-1),Ps={style:{"text-align":"left"}},Ss=t("code",null,"栈",-1),Ts=t("code",null,"数组",-1),Xs=t("code",null,"单调栈",-1),Ys={style:{"text-align":"left"}},Ds=t("td",{style:{"text-align":"center"}},"1081",-1),Fs={style:{"text-align":"left"}},Gs={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},Js={style:{"text-align":"center"}},Us={style:{"text-align":"left"}},Ws=t("code",null,"栈",-1),Zs=t("code",null,"贪心",-1),$s=t("code",null,"字符串",-1),tn=t("code",null,"1+",-1),en={style:{"text-align":"left"}},ln=t("td",{style:{"text-align":"center"}},"1124",-1),on={style:{"text-align":"left"}},sn={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},nn=t("td",{style:{"text-align":"center"}},null,-1),dn={style:{"text-align":"left"}},_n=t("code",null,"栈",-1),an=t("code",null,"数组",-1),cn=t("code",null,"哈希表",-1),rn=t("code",null,"2+",-1),hn={style:{"text-align":"left"}},un=t("td",{style:{"text-align":"center"}},"1130",-1),fn={style:{"text-align":"left"}},gn={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},mn=t("td",{style:{"text-align":"center"}},null,-1),yn={style:{"text-align":"left"}},xn=t("code",null,"栈",-1),bn=t("code",null,"贪心",-1),pn=t("code",null,"数组",-1),kn=t("code",null,"2+",-1),Mn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"1475",-1),vn={style:{"text-align":"left"}},Hn={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},wn={style:{"text-align":"center"}},qn={style:{"text-align":"left"}},Vn=t("code",null,"栈",-1),zn=t("code",null,"数组",-1),En=t("code",null,"单调栈",-1),Ln={style:{"text-align":"left"}},jn=t("td",{style:{"text-align":"center"}},"1504",-1),Bn={style:{"text-align":"left"}},Nn={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},null,-1),Cn={style:{"text-align":"left"}},Kn=t("code",null,"栈",-1),Qn=t("code",null,"数组",-1),Rn=t("code",null,"动态规划",-1),An=t("code",null,"2+",-1),Pn={style:{"text-align":"left"}},Sn=t("td",{style:{"text-align":"center"}},"1526",-1),Tn={style:{"text-align":"left"}},Xn={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},Yn=t("td",{style:{"text-align":"center"}},null,-1),Dn={style:{"text-align":"left"}},Fn=t("code",null,"栈",-1),Gn=t("code",null,"贪心",-1),Jn=t("code",null,"数组",-1),Un=t("code",null,"2+",-1),Wn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"1574",-1),$n={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},null,-1),ld={style:{"text-align":"left"}},od=t("code",null,"栈",-1),sd=t("code",null,"数组",-1),nd=t("code",null,"双指针",-1),dd=t("code",null,"2+",-1),_d={style:{"text-align":"left"}},ad=t("td",{style:{"text-align":"center"}},"1673",-1),cd={style:{"text-align":"left"}},id={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},rd=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},ud=t("code",null,"栈",-1),fd=t("code",null,"贪心",-1),gd=t("code",null,"数组",-1),md=t("code",null,"1+",-1),yd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"1762",-1),bd={style:{"text-align":"left"}},pd={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},null,-1),Md={style:{"text-align":"left"}},Id=t("code",null,"栈",-1),vd=t("code",null,"数组",-1),Hd=t("code",null,"单调栈",-1),wd={style:{"text-align":"left"}},qd=t("td",{style:{"text-align":"center"}},"1776",-1),Vd={style:{"text-align":"left"}},zd={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Ed=t("td",{style:{"text-align":"center"}},null,-1),Ld={style:{"text-align":"left"}},jd=t("code",null,"栈",-1),Bd=t("code",null,"数组",-1),Nd=t("code",null,"数学",-1),Od=t("code",null,"2+",-1),Cd={style:{"text-align":"left"}},Kd=t("td",{style:{"text-align":"center"}},"1793",-1),Qd={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},Ad=t("td",{style:{"text-align":"center"}},null,-1),Pd={style:{"text-align":"left"}},Sd=t("code",null,"栈",-1),Td=t("code",null,"数组",-1),Xd=t("code",null,"双指针",-1),Yd=t("code",null,"2+",-1),Dd={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"1856",-1),Gd={style:{"text-align":"left"}},Jd={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},null,-1),Wd={style:{"text-align":"left"}},Zd=t("code",null,"栈",-1),$d=t("code",null,"数组",-1),t_=t("code",null,"前缀和",-1),e_=t("code",null,"1+",-1),l_={style:{"text-align":"left"}},o_=t("td",{style:{"text-align":"center"}},"1944",-1),s_={style:{"text-align":"left"}},n_={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},d_=t("td",{style:{"text-align":"center"}},null,-1),__={style:{"text-align":"left"}},a_=t("code",null,"栈",-1),c_=t("code",null,"数组",-1),i_=t("code",null,"单调栈",-1),r_={style:{"text-align":"left"}},h_=t("td",{style:{"text-align":"center"}},"1950",-1),u_={style:{"text-align":"left"}},f_={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},g_=t("td",{style:{"text-align":"center"}},null,-1),m_={style:{"text-align":"left"}},y_=t("code",null,"栈",-1),x_=t("code",null,"数组",-1),b_=t("code",null,"单调栈",-1),p_={style:{"text-align":"left"}},k_=t("td",{style:{"text-align":"center"}},"1996",-1),M_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},v_=t("td",{style:{"text-align":"center"}},null,-1),H_={style:{"text-align":"left"}},w_=t("code",null,"栈",-1),q_=t("code",null,"贪心",-1),V_=t("code",null,"数组",-1),z_=t("code",null,"2+",-1),E_={style:{"text-align":"left"}},L_=t("td",{style:{"text-align":"center"}},"2030",-1),j_={style:{"text-align":"left"}},B_={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},N_=t("td",{style:{"text-align":"center"}},null,-1),O_={style:{"text-align":"left"}},C_=t("code",null,"栈",-1),K_=t("code",null,"贪心",-1),Q_=t("code",null,"字符串",-1),R_=t("code",null,"1+",-1),A_={style:{"text-align":"left"}},P_=t("td",{style:{"text-align":"center"}},"2104",-1),S_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},X_=t("td",{style:{"text-align":"center"}},null,-1),Y_={style:{"text-align":"left"}},D_=t("code",null,"栈",-1),F_=t("code",null,"数组",-1),G_=t("code",null,"单调栈",-1),J_={style:{"text-align":"left"}},U_=t("td",{style:{"text-align":"center"}},"2281",-1),W_={style:{"text-align":"left"}},Z_={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},$_=t("td",{style:{"text-align":"center"}},null,-1),ta={style:{"text-align":"left"}},ea=t("code",null,"栈",-1),la=t("code",null,"数组",-1),oa=t("code",null,"前缀和",-1),sa=t("code",null,"1+",-1),na={style:{"text-align":"left"}},da=t("td",{style:{"text-align":"center"}},"2282",-1),_a={style:{"text-align":"left"}},aa={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},ca=t("td",{style:{"text-align":"center"}},null,-1),ia={style:{"text-align":"left"}},ra=t("code",null,"栈",-1),ha=t("code",null,"数组",-1),ua=t("code",null,"矩阵",-1),fa=t("code",null,"1+",-1),ga={style:{"text-align":"left"}},ma=t("td",{style:{"text-align":"center"}},"2289",-1),ya={style:{"text-align":"left"}},xa={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},ba=t("td",{style:{"text-align":"center"}},null,-1),pa={style:{"text-align":"left"}},ka=t("code",null,"栈",-1),Ma=t("code",null,"数组",-1),Ia=t("code",null,"链表",-1),va=t("code",null,"1+",-1),Ha={style:{"text-align":"left"}},wa=t("td",{style:{"text-align":"center"}},"2297",-1),qa={style:{"text-align":"left"}},Va={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},za=t("td",{style:{"text-align":"center"}},null,-1),Ea={style:{"text-align":"left"}},La=t("code",null,"栈",-1),ja=t("code",null,"图",-1),Ba=t("code",null,"数组",-1),Na=t("code",null,"3+",-1),Oa={style:{"text-align":"left"}},Ca=t("td",{style:{"text-align":"center"}},"2334",-1),Ka={style:{"text-align":"left"}},Qa={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},Ra=t("td",{style:{"text-align":"center"}},null,-1),Aa={style:{"text-align":"left"}},Pa=t("code",null,"栈",-1),Sa=t("code",null,"并查集",-1),Ta=t("code",null,"数组",-1),Xa=t("code",null,"1+",-1),Ya={style:{"text-align":"left"}},Da=t("td",{style:{"text-align":"center"}},"2345",-1),Fa={style:{"text-align":"left"}},Ga={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},Ja=t("td",{style:{"text-align":"center"}},null,-1),Ua={style:{"text-align":"left"}},Wa=t("code",null,"栈",-1),Za=t("code",null,"数组",-1),$a=t("code",null,"排序",-1),tc=t("code",null,"1+",-1),ec={style:{"text-align":"left"}},lc=t("td",{style:{"text-align":"center"}},"2355",-1),oc={style:{"text-align":"left"}},sc={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},nc=t("td",{style:{"text-align":"center"}},null,-1),dc={style:{"text-align":"left"}},_c=t("code",null,"栈",-1),ac=t("code",null,"数组",-1),cc=t("code",null,"动态规划",-1),ic=t("code",null,"1+",-1),rc={style:{"text-align":"left"}},hc=t("td",{style:{"text-align":"center"}},"2454",-1),uc={style:{"text-align":"left"}},fc={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},gc=t("td",{style:{"text-align":"center"}},null,-1),mc={style:{"text-align":"left"}},yc=t("code",null,"栈",-1),xc=t("code",null,"数组",-1),bc=t("code",null,"二分查找",-1),pc=t("code",null,"3+",-1),kc={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"2487",-1),Ic={style:{"text-align":"left"}},vc={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},Hc=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},qc=t("code",null,"栈",-1),Vc=t("code",null,"递归",-1),zc=t("code",null,"链表",-1),Ec=t("code",null,"1+",-1),Lc={style:{"text-align":"left"}},jc=t("td",{style:{"text-align":"center"}},"2617",-1),Bc={style:{"text-align":"left"}},Nc={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Oc=t("td",{style:{"text-align":"center"}},null,-1),Cc={style:{"text-align":"left"}},Kc=t("code",null,"栈",-1),Qc=t("code",null,"广度优先搜索",-1),Rc=t("code",null,"并查集",-1),Ac=t("code",null,"5+",-1),Pc={style:{"text-align":"left"}},Sc=t("td",{style:{"text-align":"center"}},"2736",-1),Tc={style:{"text-align":"left"}},Xc={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Yc=t("td",{style:{"text-align":"center"}},null,-1),Dc={style:{"text-align":"left"}},Fc=t("code",null,"栈",-1),Gc=t("code",null,"树状数组",-1),Jc=t("code",null,"线段树",-1),Uc=t("code",null,"4+",-1),Wc={style:{"text-align":"left"}},Zc=t("td",{style:{"text-align":"center"}},"2818",-1),$c={style:{"text-align":"left"}},ti={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},ei=t("td",{style:{"text-align":"center"}},null,-1),li={style:{"text-align":"left"}},oi=t("code",null,"栈",-1),si=t("code",null,"贪心",-1),ni=t("code",null,"数组",-1),di=t("code",null,"3+",-1),_i={style:{"text-align":"left"}},ai=t("td",{style:{"text-align":"center"}},"2832",-1),ci={style:{"text-align":"left"}},ii={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},ri=t("td",{style:{"text-align":"center"}},null,-1),hi={style:{"text-align":"left"}},ui=t("code",null,"栈",-1),fi=t("code",null,"数组",-1),gi=t("code",null,"单调栈",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"2863",-1),xi={style:{"text-align":"left"}},bi={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},pi=t("td",{style:{"text-align":"center"}},null,-1),ki={style:{"text-align":"left"}},Mi=t("code",null,"栈",-1),Ii=t("code",null,"数组",-1),vi=t("code",null,"排序",-1),Hi=t("code",null,"1+",-1),wi={style:{"text-align":"left"}},qi=t("td",{style:{"text-align":"center"}},"2865",-1),Vi={style:{"text-align":"left"}},zi={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},Ei=t("td",{style:{"text-align":"center"}},null,-1),Li={style:{"text-align":"left"}},ji=t("code",null,"栈",-1),Bi=t("code",null,"数组",-1),Ni=t("code",null,"单调栈",-1),Oi={style:{"text-align":"left"}},Ci=t("td",{style:{"text-align":"center"}},"2866",-1),Ki={style:{"text-align":"left"}},Qi={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},Ri=t("td",{style:{"text-align":"center"}},null,-1),Ai={style:{"text-align":"left"}},Pi=t("code",null,"栈",-1),Si=t("code",null,"数组",-1),Ti=t("code",null,"单调栈",-1),Xi={style:{"text-align":"left"}},Yi=t("td",{style:{"text-align":"center"}},"2940",-1),Di={style:{"text-align":"left"}},Fi={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Gi=t("td",{style:{"text-align":"center"}},null,-1),Ji={style:{"text-align":"left"}},Ui=t("code",null,"栈",-1),Wi=t("code",null,"树状数组",-1),Zi=t("code",null,"线段树",-1),$i=t("code",null,"4+",-1),tr={style:{"text-align":"left"}},er=t("td",{style:{"text-align":"center"}},"2945",-1),lr={style:{"text-align":"left"}},or={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},sr=t("td",{style:{"text-align":"center"}},null,-1),nr={style:{"text-align":"left"}},dr=t("code",null,"栈",-1),_r=t("code",null,"队列",-1),ar=t("code",null,"数组",-1),cr=t("code",null,"4+",-1),ir={style:{"text-align":"left"}},rr=t("td",{style:{"text-align":"center"}},"3113",-1),hr={style:{"text-align":"left"}},ur={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},fr=t("td",{style:{"text-align":"center"}},null,-1),gr={style:{"text-align":"left"}},mr=t("code",null,"栈",-1),yr=t("code",null,"数组",-1),xr=t("code",null,"二分查找",-1),br=t("code",null,"1+",-1),pr={style:{"text-align":"left"}},kr=t("td",{style:{"text-align":"center"}},"3205",-1),Mr={style:{"text-align":"left"}},Ir={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},vr=t("td",{style:{"text-align":"center"}},null,-1),Hr={style:{"text-align":"left"}},wr=t("code",null,"栈",-1),qr=t("code",null,"贪心",-1),Vr=t("code",null,"数组",-1),zr=t("code",null,"2+",-1),Er={style:{"text-align":"left"}},Lr=t("td",{style:{"text-align":"center"}},"3221",-1),jr={style:{"text-align":"left"}},Br={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},Nr=t("td",{style:{"text-align":"center"}},null,-1),Or={style:{"text-align":"left"}},Cr=t("code",null,"栈",-1),Kr=t("code",null,"贪心",-1),Qr=t("code",null,"数组",-1),Rr=t("code",null,"1+",-1),Ar={style:{"text-align":"left"}},Pr=t("td",{style:{"text-align":"center"}},"3229",-1),Sr={style:{"text-align":"left"}},Tr={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},Xr=t("td",{style:{"text-align":"center"}},null,-1),Yr={style:{"text-align":"left"}},Dr=t("code",null,"栈",-1),Fr=t("code",null,"贪心",-1),Gr=t("code",null,"数组",-1),Jr=t("code",null,"2+",-1),Ur={style:{"text-align":"left"}},Wr=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),Zr={style:{"text-align":"left"}},$r={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},th={style:{"text-align":"center"}},eh={style:{"text-align":"left"}},lh=t("code",null,"栈",-1),oh=t("code",null,"树",-1),sh=t("code",null,"二叉搜索树",-1),nh=t("code",null,"4+",-1),dh={style:{"text-align":"left"}},_h=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),ah={style:{"text-align":"left"}},ch={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},ih=t("td",{style:{"text-align":"center"}},null,-1),rh={style:{"text-align":"left"}},hh=t("code",null,"栈",-1),uh=t("code",null,"数组",-1),fh=t("code",null,"单调栈",-1),gh={style:{"text-align":"left"}},mh=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),yh={style:{"text-align":"left"}},xh={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},bh=t("td",{style:{"text-align":"center"}},null,-1),ph={style:{"text-align":"left"}},kh=t("code",null,"栈",-1),Mh=t("code",null,"数组",-1),Ih=t("code",null,"单调栈",-1),vh={style:{"text-align":"left"}},Hh=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),wh={style:{"text-align":"left"}},qh={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},Vh=t("td",{style:{"text-align":"center"}},null,-1),zh={style:{"text-align":"left"}},Eh=t("code",null,"栈",-1),Lh=t("code",null,"数组",-1),jh=t("code",null,"动态规划",-1),Bh=t("code",null,"2+",-1),Nh={style:{"text-align":"left"}},Oh=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),Ch={style:{"text-align":"left"}},Kh={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Qh=t("td",{style:{"text-align":"center"}},null,-1),Rh={style:{"text-align":"left"}},Ah=t("code",null,"栈",-1),Ph=t("code",null,"设计",-1),Sh=t("code",null,"单调栈",-1),Th={style:{"text-align":"left"}},Xh=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),Yh={style:{"text-align":"left"}},Dh={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},Fh=t("td",{style:{"text-align":"center"}},null,-1),Gh={style:{"text-align":"left"}},Jh=t("code",null,"栈",-1),Uh=t("code",null,"贪心",-1),Wh=t("code",null,"数组",-1),Zh=t("code",null,"3+",-1),$h={style:{"text-align":"left"}},t1=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),e1={style:{"text-align":"left"}},l1={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},o1=t("td",{style:{"text-align":"center"}},null,-1),s1={style:{"text-align":"left"}},n1=t("code",null,"栈",-1),d1=t("code",null,"数组",-1),_1=t("code",null,"双指针",-1),a1=t("code",null,"2+",-1),c1={style:{"text-align":"left"}};function i1(r1,h1){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return c(),i("div",null,[u,t("details",null,[f,g,t("p",null,[e(s,{to:"/tag/array.html"},{default:o(()=>[m]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(s,{to:"/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),k,l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/tag/heap-priority-queue.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[H]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[E]),_:1}),l(),e(s,{to:"/tag/minimum-spanning-tree.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/tag/ordered-set.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/tag/topological-sort.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/tag/shortest-path.html"},{default:o(()=>[O]),_:1}),l(),e(s,{to:"/tag/strongly-connected-component.html"},{default:o(()=>[C]),_:1}),l(),e(s,{to:"/tag/eulerian-circuit.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/tag/biconnected-component.html"},{default:o(()=>[Q]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/tag/trie.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/tag/suffix-array.html"},{default:o(()=>[T]),_:1})]),X,t("p",null,[e(s,{to:"/tag/enumeration.html"},{default:o(()=>[Y]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/tag/divide-and-conquer.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/tag/backtracking.html"},{default:o(()=>[G]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[U]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[W]),_:1}),l(),e(s,{to:"/tag/bucket-sort.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/tag/counting-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/tag/radix-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/tag/merge-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/tag/depth-first-search.html"},{default:o(()=>[nt]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/tag/counting.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/tag/sliding-window.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/tag/hash-function.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/tag/rolling-hash.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/tag/line-sweep.html"},{default:o(()=>[gt]),_:1})]),mt,t("p",null,[e(s,{to:"/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(s,{to:"/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/tag/probability-and-statistics.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/tag/reservoir-sampling.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Vt]),_:1}),l(),e(s,{to:"/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/tag/brainteaser.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/tag/interactive.html"},{default:o(()=>[Lt]),_:1}),l(),e(s,{to:"/tag/iterator.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/tag/concurrency.html"},{default:o(()=>[Bt]),_:1})])]),Nt,r(" prettier-ignore "),t("table",null,[Ot,t("tbody",null,[t("tr",null,[Ct,t("td",Kt,[t("a",Qt,[l("接雨水"),e(n)])]),t("td",Rt,[e(s,{to:"/problem/0042.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",At,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Pt]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[St]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[Tt]),_:1}),l(),Xt]),t("td",Yt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dt,t("td",Ft,[t("a",Gt,[l("柱状图中最大的矩形"),e(n)])]),t("td",Jt,[e(s,{to:"/problem/0084.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ut,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Wt]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Zt]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[$t]),_:1})]),t("td",te,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ee,t("td",le,[t("a",oe,[l("最大矩形"),e(n)])]),t("td",se,[e(s,{to:"/problem/0085.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ne,[e(s,{to:"/tag/stack.html"},{default:o(()=>[de]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[_e]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[ae]),_:1}),l(),ce]),t("td",ie,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[re,t("td",he,[t("a",ue,[l("验证二叉搜索树的前序遍历序列"),e(n)])]),fe,t("td",ge,[e(s,{to:"/tag/stack.html"},{default:o(()=>[me]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[ye]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[xe]),_:1}),l(),be]),t("td",pe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ke,t("td",Me,[t("a",Ie,[l("去除重复字母"),e(n)])]),t("td",ve,[e(s,{to:"/problem/0316.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",He,[e(s,{to:"/tag/stack.html"},{default:o(()=>[we]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[qe]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Ve]),_:1}),l(),ze]),t("td",Ee,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Le,t("td",je,[t("a",Be,[l("拼接最大数"),e(n)])]),Ne,t("td",Oe,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ce]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Ke]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Qe]),_:1}),l(),Re]),t("td",Ae,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pe,t("td",Se,[t("a",Te,[l("移掉 K 位数字"),e(n)])]),Xe,t("td",Ye,[e(s,{to:"/tag/stack.html"},{default:o(()=>[De]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Fe]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Ge]),_:1}),l(),Je]),t("td",Ue,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[We,t("td",Ze,[t("a",$e,[l("132 模式"),e(n)])]),tl,t("td",el,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ll]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ol]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[sl]),_:1}),l(),nl]),t("td",dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_l,t("td",al,[t("a",cl,[l("下一个更大元素 I"),e(n)])]),t("td",il,[e(s,{to:"/problem/0496.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",rl,[e(s,{to:"/tag/stack.html"},{default:o(()=>[hl]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ul]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[fl]),_:1}),l(),gl]),t("td",ml,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yl,t("td",xl,[t("a",bl,[l("下一个更大元素 II"),e(n)])]),t("td",pl,[e(s,{to:"/problem/0503.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",kl,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ml]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Il]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[vl]),_:1})]),t("td",Hl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wl,t("td",ql,[t("a",Vl,[l("最短无序连续子数组"),e(n)])]),zl,t("td",El,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ll]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[jl]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Bl]),_:1}),l(),Nl]),t("td",Ol,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cl,t("td",Kl,[t("a",Ql,[l("最大二叉树"),e(n)])]),t("td",Rl,[e(s,{to:"/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Al,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Pl]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Sl]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Tl]),_:1}),l(),Xl]),t("td",Yl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dl,t("td",Fl,[t("a",Gl,[l("每日温度"),e(n)])]),t("td",Jl,[e(s,{to:"/problem/0739.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ul,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Wl]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Zl]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[$l]),_:1})]),t("td",to,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eo,t("td",lo,[t("a",oo,[l("最多能完成排序的块 II"),e(n)])]),so,t("td",no,[e(s,{to:"/tag/stack.html"},{default:o(()=>[_o]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[ao]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[co]),_:1}),l(),io]),t("td",ro,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ho,t("td",uo,[t("a",fo,[l("最多能完成排序的块"),e(n)])]),go,t("td",mo,[e(s,{to:"/tag/stack.html"},{default:o(()=>[yo]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[xo]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[bo]),_:1}),l(),po]),t("td",ko,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mo,t("td",Io,[t("a",vo,[l("车队"),e(n)])]),Ho,t("td",wo,[e(s,{to:"/tag/stack.html"},{default:o(()=>[qo]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Vo]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[zo]),_:1}),l(),Eo]),t("td",Lo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jo,t("td",Bo,[t("a",No,[l("股票价格跨度"),e(n)])]),Oo,t("td",Co,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ko]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Qo]),_:1}),l(),e(s,{to:"/tag/data-stream.html"},{default:o(()=>[Ro]),_:1}),l(),Ao]),t("td",Po,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[So,t("td",To,[t("a",Xo,[l("子数组的最小值之和"),e(n)])]),Yo,t("td",Do,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Fo]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Go]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Jo]),_:1}),l(),Uo]),t("td",Wo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zo,t("td",$o,[t("a",ts,[l("最大宽度坡"),e(n)])]),t("td",es,[e(s,{to:"/problem/0962.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ls,[e(s,{to:"/tag/stack.html"},{default:o(()=>[os]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ss]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[ns]),_:1})]),t("td",ds,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_s,t("td",as,[t("a",cs,[l("奇偶跳"),e(n)])]),is,t("td",rs,[e(s,{to:"/tag/stack.html"},{default:o(()=>[hs]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[us]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[fs]),_:1}),l(),gs]),t("td",ms,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",bs,[l("前序遍历构造二叉搜索树"),e(n)])]),t("td",ps,[e(s,{to:"/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ks,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ms]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[Is]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[vs]),_:1}),l(),Hs]),t("td",ws,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qs,t("td",Vs,[t("a",zs,[l("链表中的下一个更大节点"),e(n)])]),Es,t("td",Ls,[e(s,{to:"/tag/stack.html"},{default:o(()=>[js]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Bs]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[Ns]),_:1}),l(),Os]),t("td",Cs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ks,t("td",Qs,[t("a",Rs,[l("有效子数组的数目"),e(n)])]),As,t("td",Ps,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ss]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ts]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Xs]),_:1})]),t("td",Ys,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ds,t("td",Fs,[t("a",Gs,[l("不同字符的最小子序列"),e(n)])]),t("td",Js,[e(s,{to:"/problem/1081.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Us,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ws]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Zs]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[$s]),_:1}),l(),tn]),t("td",en,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ln,t("td",on,[t("a",sn,[l("表现良好的最长时间段"),e(n)])]),nn,t("td",dn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[_n]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[an]),_:1}),l(),e(s,{to:"/tag/hash-table.html"},{default:o(()=>[cn]),_:1}),l(),rn]),t("td",hn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[un,t("td",fn,[t("a",gn,[l("叶值的最小代价生成树"),e(n)])]),mn,t("td",yn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[xn]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[bn]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[pn]),_:1}),l(),kn]),t("td",Mn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[In,t("td",vn,[t("a",Hn,[l("商品折扣后的最终价格"),e(n)])]),t("td",wn,[e(s,{to:"/problem/1475.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Vn]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[zn]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[En]),_:1})]),t("td",Ln,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jn,t("td",Bn,[t("a",Nn,[l("统计全 1 子矩形"),e(n)])]),On,t("td",Cn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Kn]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Qn]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[Rn]),_:1}),l(),An]),t("td",Pn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sn,t("td",Tn,[t("a",Xn,[l("形成目标数组的子数组最少增加次数"),e(n)])]),Yn,t("td",Dn,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Fn]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Gn]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Jn]),_:1}),l(),Un]),t("td",Wn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zn,t("td",$n,[t("a",td,[l("删除最短的子数组使剩余数组有序"),e(n)])]),ed,t("td",ld,[e(s,{to:"/tag/stack.html"},{default:o(()=>[od]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[sd]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[nd]),_:1}),l(),dd]),t("td",_d,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ad,t("td",cd,[t("a",id,[l("找出最具竞争力的子序列"),e(n)])]),rd,t("td",hd,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ud]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[fd]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[gd]),_:1}),l(),md]),t("td",yd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xd,t("td",bd,[t("a",pd,[l("能看到海景的建筑物"),e(n)])]),kd,t("td",Md,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Id]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[vd]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Hd]),_:1})]),t("td",wd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qd,t("td",Vd,[t("a",zd,[l("车队 II"),e(n)])]),Ed,t("td",Ld,[e(s,{to:"/tag/stack.html"},{default:o(()=>[jd]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Bd]),_:1}),l(),e(s,{to:"/tag/math.html"},{default:o(()=>[Nd]),_:1}),l(),Od]),t("td",Cd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kd,t("td",Qd,[t("a",Rd,[l("好子数组的最大分数"),e(n)])]),Ad,t("td",Pd,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Sd]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Td]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[Xd]),_:1}),l(),Yd]),t("td",Dd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fd,t("td",Gd,[t("a",Jd,[l("子数组最小乘积的最大值"),e(n)])]),Ud,t("td",Wd,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Zd]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[$d]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[t_]),_:1}),l(),e_]),t("td",l_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o_,t("td",s_,[t("a",n_,[l("队列中可以看到的人数"),e(n)])]),d_,t("td",__,[e(s,{to:"/tag/stack.html"},{default:o(()=>[a_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[c_]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[i_]),_:1})]),t("td",r_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[h_,t("td",u_,[t("a",f_,[l("所有子数组最小值中的最大值"),e(n)])]),g_,t("td",m_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[y_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[x_]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[b_]),_:1})]),t("td",p_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k_,t("td",M_,[t("a",I_,[l("游戏中弱角色的数量"),e(n)])]),v_,t("td",H_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[w_]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[q_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[V_]),_:1}),l(),z_]),t("td",E_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L_,t("td",j_,[t("a",B_,[l("含特定字母的最小子序列"),e(n)])]),N_,t("td",O_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[C_]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[K_]),_:1}),l(),e(s,{to:"/tag/string.html"},{default:o(()=>[Q_]),_:1}),l(),R_]),t("td",A_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[P_,t("td",S_,[t("a",T_,[l("子数组范围和"),e(n)])]),X_,t("td",Y_,[e(s,{to:"/tag/stack.html"},{default:o(()=>[D_]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[F_]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[G_]),_:1})]),t("td",J_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U_,t("td",W_,[t("a",Z_,[l("巫师的总力量和"),e(n)])]),$_,t("td",ta,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ea]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[la]),_:1}),l(),e(s,{to:"/tag/prefix-sum.html"},{default:o(()=>[oa]),_:1}),l(),sa]),t("td",na,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[da,t("td",_a,[t("a",aa,[l("在一个网格中可以看到的人数"),e(n)])]),ca,t("td",ia,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ra]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ha]),_:1}),l(),e(s,{to:"/tag/matrix.html"},{default:o(()=>[ua]),_:1}),l(),fa]),t("td",ga,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ma,t("td",ya,[t("a",xa,[l("使数组按非递减顺序排列"),e(n)])]),ba,t("td",pa,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ka]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ma]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[Ia]),_:1}),l(),va]),t("td",Ha,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wa,t("td",qa,[t("a",Va,[l("跳跃游戏 VIII"),e(n)])]),za,t("td",Ea,[e(s,{to:"/tag/stack.html"},{default:o(()=>[La]),_:1}),l(),e(s,{to:"/tag/graph.html"},{default:o(()=>[ja]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ba]),_:1}),l(),Na]),t("td",Oa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ca,t("td",Ka,[t("a",Qa,[l("元素值大于变化阈值的子数组"),e(n)])]),Ra,t("td",Aa,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Pa]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Sa]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ta]),_:1}),l(),Xa]),t("td",Ya,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Da,t("td",Fa,[t("a",Ga,[l("寻找可见山的数量"),e(n)])]),Ja,t("td",Ua,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Wa]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Za]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[$a]),_:1}),l(),tc]),t("td",ec,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lc,t("td",oc,[t("a",sc,[l("你能拿走的最大图书数量"),e(n)])]),nc,t("td",dc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[_c]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ac]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[cc]),_:1}),l(),ic]),t("td",rc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hc,t("td",uc,[t("a",fc,[l("下一个更大元素 IV"),e(n)])]),gc,t("td",mc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[yc]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[xc]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[bc]),_:1}),l(),pc]),t("td",kc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mc,t("td",Ic,[t("a",vc,[l("从链表中移除节点"),e(n)])]),Hc,t("td",wc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[qc]),_:1}),l(),e(s,{to:"/tag/recursion.html"},{default:o(()=>[Vc]),_:1}),l(),e(s,{to:"/tag/linked-list.html"},{default:o(()=>[zc]),_:1}),l(),Ec]),t("td",Lc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jc,t("td",Bc,[t("a",Nc,[l("网格图中最少访问的格子数"),e(n)])]),Oc,t("td",Cc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Kc]),_:1}),l(),e(s,{to:"/tag/breadth-first-search.html"},{default:o(()=>[Qc]),_:1}),l(),e(s,{to:"/tag/union-find.html"},{default:o(()=>[Rc]),_:1}),l(),Ac]),t("td",Pc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sc,t("td",Tc,[t("a",Xc,[l("最大和查询"),e(n)])]),Yc,t("td",Dc,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Fc]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Gc]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[Jc]),_:1}),l(),Uc]),t("td",Wc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zc,t("td",$c,[t("a",ti,[l("操作使得分最大"),e(n)])]),ei,t("td",li,[e(s,{to:"/tag/stack.html"},{default:o(()=>[oi]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[si]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ni]),_:1}),l(),di]),t("td",_i,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ai,t("td",ci,[t("a",ii,[l("每个元素为最大值的最大范围"),e(n)])]),ri,t("td",hi,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ui]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[fi]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[gi]),_:1})]),t("td",mi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yi,t("td",xi,[t("a",bi,[l("最长半递减子数组的长度"),e(n)])]),pi,t("td",ki,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Mi]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Ii]),_:1}),l(),e(s,{to:"/tag/sorting.html"},{default:o(()=>[vi]),_:1}),l(),Hi]),t("td",wi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qi,t("td",Vi,[t("a",zi,[l("美丽塔 I"),e(n)])]),Ei,t("td",Li,[e(s,{to:"/tag/stack.html"},{default:o(()=>[ji]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Bi]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Ni]),_:1})]),t("td",Oi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ci,t("td",Ki,[t("a",Qi,[l("美丽塔 II"),e(n)])]),Ri,t("td",Ai,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Pi]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Si]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Ti]),_:1})]),t("td",Xi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yi,t("td",Di,[t("a",Fi,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(n)])]),Gi,t("td",Ji,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ui]),_:1}),l(),e(s,{to:"/tag/binary-indexed-tree.html"},{default:o(()=>[Wi]),_:1}),l(),e(s,{to:"/tag/segment-tree.html"},{default:o(()=>[Zi]),_:1}),l(),$i]),t("td",tr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[er,t("td",lr,[t("a",or,[l("找到最大非递减数组的长度"),e(n)])]),sr,t("td",nr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[dr]),_:1}),l(),e(s,{to:"/tag/queue.html"},{default:o(()=>[_r]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[ar]),_:1}),l(),cr]),t("td",ir,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rr,t("td",hr,[t("a",ur,[l("边界元素是最大值的子数组数目"),e(n)])]),fr,t("td",gr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[mr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[yr]),_:1}),l(),e(s,{to:"/tag/binary-search.html"},{default:o(()=>[xr]),_:1}),l(),br]),t("td",pr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kr,t("td",Mr,[t("a",Ir,[l("最大数组跳跃得分 I"),e(n)])]),vr,t("td",Hr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[wr]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[qr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Vr]),_:1}),l(),zr]),t("td",Er,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lr,t("td",jr,[t("a",Br,[l("最大数组跳跃得分 II"),e(n)])]),Nr,t("td",Or,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Cr]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Kr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Qr]),_:1}),l(),Rr]),t("td",Ar,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pr,t("td",Sr,[t("a",Tr,[l("使数组等于目标数组所需的最少操作次数"),e(n)])]),Xr,t("td",Yr,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Dr]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Fr]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Gr]),_:1}),l(),Jr]),t("td",Ur,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wr,t("td",Zr,[t("a",$r,[l("二叉搜索树的后序遍历序列"),e(n)])]),t("td",th,[e(s,{to:"/offer/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",eh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[lh]),_:1}),l(),e(s,{to:"/tag/tree.html"},{default:o(()=>[oh]),_:1}),l(),e(s,{to:"/tag/binary-search-tree.html"},{default:o(()=>[sh]),_:1}),l(),nh]),t("td",dh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_h,t("td",ah,[t("a",ch,[l("每日温度"),e(n)])]),ih,t("td",rh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[hh]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[uh]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[fh]),_:1})]),t("td",gh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mh,t("td",yh,[t("a",xh,[l("直方图最大矩形面积"),e(n)])]),bh,t("td",ph,[e(s,{to:"/tag/stack.html"},{default:o(()=>[kh]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Mh]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Ih]),_:1})]),t("td",vh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hh,t("td",wh,[t("a",qh,[l("矩阵中最大的矩形"),e(n)])]),Vh,t("td",zh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Eh]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Lh]),_:1}),l(),e(s,{to:"/tag/dynamic-programming.html"},{default:o(()=>[jh]),_:1}),l(),Bh]),t("td",Nh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oh,t("td",Ch,[t("a",Kh,[l("栈排序"),e(n)])]),Qh,t("td",Rh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Ah]),_:1}),l(),e(s,{to:"/tag/design.html"},{default:o(()=>[Ph]),_:1}),l(),e(s,{to:"/tag/monotonic-stack.html"},{default:o(()=>[Sh]),_:1})]),t("td",Th,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xh,t("td",Yh,[t("a",Dh,[l("部分排序"),e(n)])]),Fh,t("td",Gh,[e(s,{to:"/tag/stack.html"},{default:o(()=>[Jh]),_:1}),l(),e(s,{to:"/tag/greedy.html"},{default:o(()=>[Uh]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[Wh]),_:1}),l(),Zh]),t("td",$h,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t1,t("td",e1,[t("a",l1,[l("直方图的水量"),e(n)])]),o1,t("td",s1,[e(s,{to:"/tag/stack.html"},{default:o(()=>[n1]),_:1}),l(),e(s,{to:"/tag/array.html"},{default:o(()=>[d1]),_:1}),l(),e(s,{to:"/tag/two-pointers.html"},{default:o(()=>[_1]),_:1}),l(),a1]),t("td",c1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const f1=a(h,[["render",i1],["__file","monotonic-stack.html.vue"]]);export{f1 as default};
