import{_ as i,r as _,o as a,c,a as t,b as e,w as l,d as o,f as h}from"./app-ynO5B_DP.js";const r={},u=t("h1",{id:"最短路",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#最短路","aria-hidden":"true"},"#"),o(" 最短路")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),p=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),w=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),M=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),H=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),L=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),E=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),B=t("code",null,"拓扑排序",-1),j=t("span",{class:"blue"},"最短路",-1),F=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),J=t("code",null,"字典树",-1),O=t("code",null,"线段树",-1),Q=t("code",null,"树状数组",-1),T=t("code",null,"后缀数组",-1),U=t("p",null,[t("strong",null,"算法")],-1),X=t("code",null,"枚举",-1),A=t("code",null,"递归",-1),G=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),pt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),wt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),Mt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),Ht=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Lt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),Et=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Bt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ft=t("td",{style:{"text-align":"center"}},"399",-1),Kt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"center"}},Jt={href:"/problem/0399",target:"_blank",rel:"noopener noreferrer"},Ot={style:{"text-align":"left"}},Qt=t("code",null,"深度优先搜索",-1),Tt=t("code",null,"广度优先搜索",-1),Ut=t("code",null,"并查集",-1),Xt=t("code",null,"4+",-1),At={style:{"text-align":"left"}},Gt=t("td",{style:{"text-align":"center"}},"499",-1),St={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},Yt=t("td",{style:{"text-align":"center"}},null,-1),Zt={style:{"text-align":"left"}},$t=t("code",null,"深度优先搜索",-1),te=t("code",null,"广度优先搜索",-1),ee=t("code",null,"图",-1),oe=t("code",null,"5+",-1),le={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"505",-1),se={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},_e=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},ae=t("code",null,"深度优先搜索",-1),ce=t("code",null,"广度优先搜索",-1),he=t("code",null,"图",-1),re=t("code",null,"4+",-1),ue={style:{"text-align":"left"}},fe=t("td",{style:{"text-align":"center"}},"743",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},pe=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},xe=t("code",null,"深度优先搜索",-1),be=t("code",null,"广度优先搜索",-1),ke=t("code",null,"图",-1),we=t("code",null,"2+",-1),ve={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"787",-1),Ie={style:{"text-align":"left"}},He={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},qe=t("td",{style:{"text-align":"center"}},null,-1),Le={style:{"text-align":"left"}},ze=t("code",null,"深度优先搜索",-1),Ce=t("code",null,"广度优先搜索",-1),Ve=t("code",null,"图",-1),Ee=t("code",null,"3+",-1),Ne={style:{"text-align":"left"}},Pe=t("td",{style:{"text-align":"center"}},"882",-1),Be={style:{"text-align":"left"}},je={href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph",target:"_blank",rel:"noopener noreferrer"},Fe=t("td",{style:{"text-align":"center"}},null,-1),Ke={style:{"text-align":"left"}},Re=t("code",null,"图",-1),De=t("code",null,"最短路",-1),Je=t("code",null,"堆（优先队列）",-1),Oe={style:{"text-align":"left"}},Qe=t("td",{style:{"text-align":"center"}},"1334",-1),Te={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},Xe=t("td",{style:{"text-align":"center"}},null,-1),Ae={style:{"text-align":"left"}},Ge=t("code",null,"图",-1),Se=t("code",null,"动态规划",-1),We=t("code",null,"最短路",-1),Ye={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"1368",-1),$e={style:{"text-align":"left"}},to={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},eo=t("td",{style:{"text-align":"center"}},null,-1),oo={style:{"text-align":"left"}},lo=t("code",null,"广度优先搜索",-1),no=t("code",null,"图",-1),so=t("code",null,"数组",-1),_o=t("code",null,"3+",-1),io={style:{"text-align":"left"}},ao=t("td",{style:{"text-align":"center"}},"1514",-1),co={style:{"text-align":"left"}},ho={href:"https://leetcode.com/problems/path-with-maximum-probability",target:"_blank",rel:"noopener noreferrer"},ro=t("td",{style:{"text-align":"center"}},null,-1),uo={style:{"text-align":"left"}},fo=t("code",null,"图",-1),go=t("code",null,"数组",-1),mo=t("code",null,"最短路",-1),po=t("code",null,"1+",-1),yo={style:{"text-align":"left"}},xo=t("td",{style:{"text-align":"center"}},"1786",-1),bo={style:{"text-align":"left"}},ko={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},null,-1),vo={style:{"text-align":"left"}},Mo=t("code",null,"图",-1),Io=t("code",null,"拓扑排序",-1),Ho=t("code",null,"动态规划",-1),qo=t("code",null,"2+",-1),Lo={style:{"text-align":"left"}},zo=t("td",{style:{"text-align":"center"}},"1976",-1),Co={style:{"text-align":"left"}},Vo={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",{style:{"text-align":"center"}},null,-1),No={style:{"text-align":"left"}},Po=t("code",null,"图",-1),Bo=t("code",null,"拓扑排序",-1),jo=t("code",null,"动态规划",-1),Fo=t("code",null,"1+",-1),Ko={style:{"text-align":"left"}},Ro=t("td",{style:{"text-align":"center"}},"2045",-1),Do={style:{"text-align":"left"}},Jo={href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},Oo=t("td",{style:{"text-align":"center"}},null,-1),Qo={style:{"text-align":"left"}},To=t("code",null,"广度优先搜索",-1),Uo=t("code",null,"图",-1),Xo=t("code",null,"最短路",-1),Ao={style:{"text-align":"left"}},Go=t("td",{style:{"text-align":"center"}},"2093",-1),So={style:{"text-align":"left"}},Wo={href:"https://leetcode.com/problems/minimum-cost-to-reach-city-with-discounts",target:"_blank",rel:"noopener noreferrer"},Yo=t("td",{style:{"text-align":"center"}},null,-1),Zo={style:{"text-align":"left"}},$o=t("code",null,"图",-1),tl=t("code",null,"最短路",-1),el=t("code",null,"堆（优先队列）",-1),ol={style:{"text-align":"left"}},ll=t("td",{style:{"text-align":"center"}},"2203",-1),nl={style:{"text-align":"left"}},sl={href:"https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths",target:"_blank",rel:"noopener noreferrer"},dl=t("td",{style:{"text-align":"center"}},null,-1),_l={style:{"text-align":"left"}},il=t("code",null,"图",-1),al=t("code",null,"最短路",-1),cl={style:{"text-align":"left"}},hl=t("td",{style:{"text-align":"center"}},"2290",-1),rl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},fl=t("td",{style:{"text-align":"center"}},null,-1),gl={style:{"text-align":"left"}},ml=t("code",null,"广度优先搜索",-1),pl=t("code",null,"图",-1),yl=t("code",null,"数组",-1),xl=t("code",null,"3+",-1),bl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"center"}},"2297",-1),wl={style:{"text-align":"left"}},vl={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Ml=t("td",{style:{"text-align":"center"}},null,-1),Il={style:{"text-align":"left"}},Hl=t("code",null,"栈",-1),ql=t("code",null,"图",-1),Ll=t("code",null,"数组",-1),zl=t("code",null,"3+",-1),Cl={style:{"text-align":"left"}},Vl=t("td",{style:{"text-align":"center"}},"2473",-1),El={style:{"text-align":"left"}},Nl={href:"https://leetcode.com/problems/minimum-cost-to-buy-apples",target:"_blank",rel:"noopener noreferrer"},Pl=t("td",{style:{"text-align":"center"}},null,-1),Bl={style:{"text-align":"left"}},jl=t("code",null,"图",-1),Fl=t("code",null,"数组",-1),Kl=t("code",null,"最短路",-1),Rl=t("code",null,"1+",-1),Dl={style:{"text-align":"left"}},Jl=t("td",{style:{"text-align":"center"}},"2577",-1),Ol={style:{"text-align":"left"}},Ql={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Tl=t("td",{style:{"text-align":"center"}},null,-1),Ul={style:{"text-align":"left"}},Xl=t("code",null,"广度优先搜索",-1),Al=t("code",null,"图",-1),Gl=t("code",null,"数组",-1),Sl=t("code",null,"3+",-1),Wl={style:{"text-align":"left"}},Yl=t("td",{style:{"text-align":"center"}},"2642",-1),Zl={style:{"text-align":"left"}},$l={href:"https://leetcode.com/problems/design-graph-with-shortest-path-calculator",target:"_blank",rel:"noopener noreferrer"},tn=t("td",{style:{"text-align":"center"}},null,-1),en={style:{"text-align":"left"}},on=t("code",null,"图",-1),ln=t("code",null,"设计",-1),nn=t("code",null,"最短路",-1),sn=t("code",null,"1+",-1),dn={style:{"text-align":"left"}},_n=t("td",{style:{"text-align":"center"}},"2662",-1),an={style:{"text-align":"left"}},cn={href:"https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads",target:"_blank",rel:"noopener noreferrer"},hn=t("td",{style:{"text-align":"center"}},null,-1),rn={style:{"text-align":"left"}},un=t("code",null,"图",-1),fn=t("code",null,"数组",-1),gn=t("code",null,"最短路",-1),mn=t("code",null,"1+",-1),pn={style:{"text-align":"left"}},yn=t("td",{style:{"text-align":"center"}},"2699",-1),xn={style:{"text-align":"left"}},bn={href:"https://leetcode.com/problems/modify-graph-edge-weights",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},null,-1),wn={style:{"text-align":"left"}},vn=t("code",null,"图",-1),Mn=t("code",null,"最短路",-1),In=t("code",null,"堆（优先队列）",-1),Hn={style:{"text-align":"left"}},qn=t("td",{style:{"text-align":"center"}},"2714",-1),Ln={style:{"text-align":"left"}},zn={href:"https://leetcode.com/problems/find-shortest-path-with-k-hops",target:"_blank",rel:"noopener noreferrer"},Cn=t("td",{style:{"text-align":"center"}},null,-1),Vn={style:{"text-align":"left"}},En=t("code",null,"图",-1),Nn=t("code",null,"最短路",-1),Pn=t("code",null,"堆（优先队列）",-1),Bn={style:{"text-align":"left"}},jn=t("td",{style:{"text-align":"center"}},"2737",-1),Fn={style:{"text-align":"left"}},Kn={href:"https://leetcode.com/problems/find-the-closest-marked-node",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},null,-1),Dn={style:{"text-align":"left"}},Jn=t("code",null,"图",-1),On=t("code",null,"数组",-1),Qn=t("code",null,"最短路",-1),Tn=t("code",null,"1+",-1),Un={style:{"text-align":"left"}},Xn=t("td",{style:{"text-align":"center"}},"2959",-1),An={style:{"text-align":"left"}},Gn={href:"https://leetcode.com/problems/number-of-possible-sets-of-closing-branches",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},null,-1),Wn={style:{"text-align":"left"}},Yn=t("code",null,"位运算",-1),Zn=t("code",null,"图",-1),$n=t("code",null,"枚举",-1),ts=t("code",null,"2+",-1),es={style:{"text-align":"left"}},os=t("td",{style:{"text-align":"center"}},"2976",-1),ls={style:{"text-align":"left"}},ns={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-i",target:"_blank",rel:"noopener noreferrer"},ss=t("td",{style:{"text-align":"center"}},null,-1),ds={style:{"text-align":"left"}},_s=t("code",null,"图",-1),is=t("code",null,"数组",-1),as=t("code",null,"字符串",-1),cs=t("code",null,"1+",-1),hs={style:{"text-align":"left"}},rs=t("td",{style:{"text-align":"center"}},"2977",-1),us={style:{"text-align":"left"}},fs={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},gs=t("td",{style:{"text-align":"center"}},null,-1),ms={style:{"text-align":"left"}},ps=t("code",null,"图",-1),ys=t("code",null,"字典树",-1),xs=t("code",null,"数组",-1),bs=t("code",null,"3+",-1),ks={style:{"text-align":"left"}},ws=t("td",{style:{"text-align":"center"}},"3112",-1),vs={style:{"text-align":"left"}},Ms={href:"https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes",target:"_blank",rel:"noopener noreferrer"},Is=t("td",{style:{"text-align":"center"}},null,-1),Hs={style:{"text-align":"left"}},qs=t("code",null,"图",-1),Ls=t("code",null,"数组",-1),zs=t("code",null,"最短路",-1),Cs=t("code",null,"1+",-1),Vs={style:{"text-align":"left"}},Es=t("td",{style:{"text-align":"center"}},"3123",-1),Ns={style:{"text-align":"left"}},Ps={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},Bs=t("td",{style:{"text-align":"center"}},null,-1),js={style:{"text-align":"left"}},Fs=t("code",null,"深度优先搜索",-1),Ks=t("code",null,"广度优先搜索",-1),Rs=t("code",null,"图",-1),Ds=t("code",null,"2+",-1),Js={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"3286",-1),Qs={style:{"text-align":"left"}},Ts={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},Us=t("td",{style:{"text-align":"center"}},null,-1),Xs={style:{"text-align":"left"}},As=t("code",null,"广度优先搜索",-1),Gs=t("code",null,"图",-1),Ss=t("code",null,"数组",-1),Ws=t("code",null,"3+",-1),Ys={style:{"text-align":"left"}},Zs=t("td",{style:{"text-align":"center"}},"LCP 35",-1),$s={style:{"text-align":"left"}},td={href:"https://leetcode.cn/problems/DFPeFJ",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},null,-1),od={style:{"text-align":"left"}},ld=t("code",null,"图",-1),nd=t("code",null,"最短路",-1),sd=t("code",null,"堆（优先队列）",-1),dd={style:{"text-align":"left"}},_d=t("td",{style:{"text-align":"center"}},"LCP 56",-1),id={style:{"text-align":"left"}},ad={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},cd=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},rd=t("code",null,"广度优先搜索",-1),ud=t("code",null,"图",-1),fd=t("code",null,"数组",-1),gd=t("code",null,"3+",-1),md={style:{"text-align":"left"}},pd=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),yd={style:{"text-align":"left"}},xd={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},bd=t("td",{style:{"text-align":"center"}},null,-1),kd={style:{"text-align":"left"}},wd=t("code",null,"深度优先搜索",-1),vd=t("code",null,"广度优先搜索",-1),Md=t("code",null,"并查集",-1),Id=t("code",null,"3+",-1),Hd={style:{"text-align":"left"}};function qd(Ld,zd){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/outline/tag/matrix.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/outline/tag/linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/outline/tag/queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/outline/tag/binary-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/outline/tag/ordered-set.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[B]),_:1}),o(),j,o(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/outline/tag/suffix-array.html"},{default:l(()=>[T]),_:1})]),U,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/outline/tag/backtracking.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/outline/tag/counting.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),pt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[yt]),_:1}),o(),e(n,{to:"/outline/tag/number-theory.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/outline/tag/simulation.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/outline/tag/randomized.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/outline/tag/database.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/outline/tag/data-stream.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/outline/tag/brainteaser.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/outline/tag/interactive.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/outline/tag/iterator.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/outline/tag/concurrency.html"},{default:l(()=>[Pt]),_:1})])]),Bt,h(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Ft,t("td",Kt,[t("a",Rt,[o("除法求值"),e(s)])]),t("td",Dt,[t("a",Jt,[o("[✓]"),e(s)])]),t("td",Ot,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Qt]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Tt]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[Ut]),_:1}),o(),Xt]),t("td",At,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Gt,t("td",St,[t("a",Wt,[o("迷宫 III"),e(s)])]),Yt,t("td",Zt,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[ee]),_:1}),o(),oe]),t("td",le,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ne,t("td",se,[t("a",de,[o("迷宫 II"),e(s)])]),_e,t("td",ie,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[ce]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[he]),_:1}),o(),re]),t("td",ue,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fe,t("td",ge,[t("a",me,[o("网络延迟时间"),e(s)])]),pe,t("td",ye,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[be]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[ke]),_:1}),o(),we]),t("td",ve,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Me,t("td",Ie,[t("a",He,[o("K 站中转内最便宜的航班"),e(s)])]),qe,t("td",Le,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[ze]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Ce]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Ve]),_:1}),o(),Ee]),t("td",Ne,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pe,t("td",Be,[t("a",je,[o("细分图中的可到达节点"),e(s)])]),Fe,t("td",Ke,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Re]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[De]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[Je]),_:1})]),t("td",Oe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Qe,t("td",Te,[t("a",Ue,[o("阈值距离内邻居最少的城市"),e(s)])]),Xe,t("td",Ae,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Ge]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Se]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[We]),_:1})]),t("td",Ye,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ze,t("td",$e,[t("a",to,[o("使网格图至少有一条有效路径的最小代价"),e(s)])]),eo,t("td",oo,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[lo]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[no]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[so]),_:1}),o(),_o]),t("td",io,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ao,t("td",co,[t("a",ho,[o("概率最大的路径"),e(s)])]),ro,t("td",uo,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[fo]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[go]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[mo]),_:1}),o(),po]),t("td",yo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xo,t("td",bo,[t("a",ko,[o("从第一个节点出发到最后一个节点的受限路径数"),e(s)])]),wo,t("td",vo,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Mo]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Io]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ho]),_:1}),o(),qo]),t("td",Lo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zo,t("td",Co,[t("a",Vo,[o("到达目的地的方案数"),e(s)])]),Eo,t("td",No,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Bo]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[jo]),_:1}),o(),Fo]),t("td",Ko,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ro,t("td",Do,[t("a",Jo,[o("到达目的地的第二短时间"),e(s)])]),Oo,t("td",Qo,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[To]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Uo]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[Xo]),_:1})]),t("td",Ao,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Go,t("td",So,[t("a",Wo,[o("前往目标城市的最小费用"),e(s)])]),Yo,t("td",Zo,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[$o]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[tl]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[el]),_:1})]),t("td",ol,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ll,t("td",nl,[t("a",sl,[o("得到要求路径的最小带权子图"),e(s)])]),dl,t("td",_l,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[il]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[al]),_:1})]),t("td",cl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[hl,t("td",rl,[t("a",ul,[o("到达角落需要移除障碍物的最小数目"),e(s)])]),fl,t("td",gl,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[ml]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[pl]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[yl]),_:1}),o(),xl]),t("td",bl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[kl,t("td",wl,[t("a",vl,[o("跳跃游戏 VIII"),e(s)])]),Ml,t("td",Il,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[Hl]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[ql]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Ll]),_:1}),o(),zl]),t("td",Cl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vl,t("td",El,[t("a",Nl,[o("购买苹果的最低成本"),e(s)])]),Pl,t("td",Bl,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[jl]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Fl]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[Kl]),_:1}),o(),Rl]),t("td",Dl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jl,t("td",Ol,[t("a",Ql,[o("在网格图中访问一个格子的最少时间"),e(s)])]),Tl,t("td",Ul,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Xl]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Al]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Gl]),_:1}),o(),Sl]),t("td",Wl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Yl,t("td",Zl,[t("a",$l,[o("设计可以求最短路径的图类"),e(s)])]),tn,t("td",en,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[on]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[ln]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[nn]),_:1}),o(),sn]),t("td",dn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_n,t("td",an,[t("a",cn,[o("前往目标的最小代价"),e(s)])]),hn,t("td",rn,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[un]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[fn]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[gn]),_:1}),o(),mn]),t("td",pn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yn,t("td",xn,[t("a",bn,[o("修改图中的边权"),e(s)])]),kn,t("td",wn,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[vn]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[Mn]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[In]),_:1})]),t("td",Hn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[qn,t("td",Ln,[t("a",zn,[o("找到 K 次跨越的最短路径"),e(s)])]),Cn,t("td",Vn,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[En]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[Nn]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[Pn]),_:1})]),t("td",Bn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jn,t("td",Fn,[t("a",Kn,[o("找到最近的标记节点"),e(s)])]),Rn,t("td",Dn,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Jn]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[On]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[Qn]),_:1}),o(),Tn]),t("td",Un,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xn,t("td",An,[t("a",Gn,[o("关闭分部的可行集合数目"),e(s)])]),Sn,t("td",Wn,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[Yn]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Zn]),_:1}),o(),e(n,{to:"/outline/tag/enumeration.html"},{default:l(()=>[$n]),_:1}),o(),ts]),t("td",es,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[os,t("td",ls,[t("a",ns,[o("转换字符串的最小成本 I"),e(s)])]),ss,t("td",ds,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[_s]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[is]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[as]),_:1}),o(),cs]),t("td",hs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rs,t("td",us,[t("a",fs,[o("转换字符串的最小成本 II"),e(s)])]),gs,t("td",ms,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[ps]),_:1}),o(),e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[ys]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[xs]),_:1}),o(),bs]),t("td",ks,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ws,t("td",vs,[t("a",Ms,[o("访问消失节点的最少时间"),e(s)])]),Is,t("td",Hs,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[qs]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Ls]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[zs]),_:1}),o(),Cs]),t("td",Vs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Es,t("td",Ns,[t("a",Ps,[o("最短路径中的边"),e(s)])]),Bs,t("td",js,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Fs]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Ks]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Rs]),_:1}),o(),Ds]),t("td",Js,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Os,t("td",Qs,[t("a",Ts,[o("穿越网格图的安全路径"),e(s)])]),Us,t("td",Xs,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[As]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Gs]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Ss]),_:1}),o(),Ws]),t("td",Ys,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Zs,t("td",$s,[t("a",td,[o("电动车游城市"),e(s)])]),ed,t("td",od,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[ld]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[nd]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[sd]),_:1})]),t("td",dd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_d,t("td",id,[t("a",ad,[o("信物传送"),e(s)])]),cd,t("td",hd,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[rd]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[ud]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[fd]),_:1}),o(),gd]),t("td",md,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pd,t("td",yd,[t("a",xd,[o("计算除法"),e(s)])]),bd,t("td",kd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[wd]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[vd]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[Md]),_:1}),o(),Id]),t("td",Hd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const Vd=i(r,[["render",qd],["__file","shortest-path.html.vue"]]);export{Vd as default};
