import{_ as i,r as _,o as a,c,a as t,b as e,w as l,d as o,f as r}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"记忆化搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#记忆化搜索","aria-hidden":"true"},"#"),o(" 记忆化搜索")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),p=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),z=t("code",null,"单调栈",-1),H=t("code",null,"队列",-1),w=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),M=t("code",null,"哈希表",-1),v=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),E=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),j=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),B=t("code",null,"最短路",-1),O=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),X=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),W=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),Z=t("code",null,"枚举",-1),A=t("code",null,"递归",-1),G=t("code",null,"分治",-1),J=t("code",null,"回溯",-1),Q=t("code",null,"贪心",-1),S=t("code",null,"动态规划",-1),U=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("span",{class:"blue"},"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),pt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),zt=t("code",null,"模拟",-1),Ht=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),Mt=t("code",null,"水塘抽样",-1),vt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Et=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),jt=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ot=t("td",{style:{"text-align":"center"}},"70",-1),Kt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"center"}},Xt={href:"/problem/0070",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"left"}},Ft=t("code",null,"记忆化搜索",-1),Wt=t("code",null,"数学",-1),Yt=t("code",null,"动态规划",-1),Zt={style:{"text-align":"left"}},At=t("td",{style:{"text-align":"center"}},"139",-1),Gt={style:{"text-align":"left"}},Jt={href:"https://leetcode.com/problems/word-break",target:"_blank",rel:"noopener noreferrer"},Qt={style:{"text-align":"center"}},St={href:"/problem/0139",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"left"}},$t=t("code",null,"字典树",-1),te=t("code",null,"记忆化搜索",-1),ee=t("code",null,"数组",-1),oe=t("code",null,"3+",-1),le={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"140",-1),se={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},_e=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},ae=t("code",null,"字典树",-1),ce=t("code",null,"记忆化搜索",-1),re=t("code",null,"数组",-1),he=t("code",null,"4+",-1),ue={style:{"text-align":"left"}},fe=t("td",{style:{"text-align":"center"}},"241",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},null,-1),pe={style:{"text-align":"left"}},xe=t("code",null,"递归",-1),be=t("code",null,"记忆化搜索",-1),ke=t("code",null,"数学",-1),ze=t("code",null,"2+",-1),He={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"294",-1),Ie={style:{"text-align":"left"}},Me={href:"https://leetcode.com/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},ve=t("td",{style:{"text-align":"center"}},null,-1),qe={style:{"text-align":"left"}},Ee=t("code",null,"记忆化搜索",-1),Ce=t("code",null,"数学",-1),Le=t("code",null,"动态规划",-1),Ne=t("code",null,"2+",-1),je={style:{"text-align":"left"}},Pe=t("td",{style:{"text-align":"center"}},"329",-1),Ve={style:{"text-align":"left"}},Be={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Oe=t("td",{style:{"text-align":"center"}},null,-1),Ke={style:{"text-align":"left"}},Re=t("code",null,"深度优先搜索",-1),Te=t("code",null,"广度优先搜索",-1),Xe=t("code",null,"图",-1),De=t("code",null,"5+",-1),Fe={style:{"text-align":"left"}},We=t("td",{style:{"text-align":"center"}},"397",-1),Ye={style:{"text-align":"left"}},Ze={href:"https://leetcode.com/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},Ae=t("td",{style:{"text-align":"center"}},null,-1),Ge={style:{"text-align":"left"}},Je=t("code",null,"贪心",-1),Qe=t("code",null,"位运算",-1),Se=t("code",null,"记忆化搜索",-1),Ue=t("code",null,"1+",-1),$e={style:{"text-align":"left"}},to=t("td",{style:{"text-align":"center"}},"464",-1),eo={style:{"text-align":"left"}},oo={href:"https://leetcode.com/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},lo=t("td",{style:{"text-align":"center"}},null,-1),no={style:{"text-align":"left"}},so=t("code",null,"位运算",-1),_o=t("code",null,"记忆化搜索",-1),io=t("code",null,"数学",-1),ao=t("code",null,"3+",-1),co={style:{"text-align":"left"}},ro=t("td",{style:{"text-align":"center"}},"488",-1),ho={style:{"text-align":"left"}},uo={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},fo=t("td",{style:{"text-align":"center"}},null,-1),go={style:{"text-align":"left"}},mo=t("code",null,"栈",-1),yo=t("code",null,"广度优先搜索",-1),po=t("code",null,"记忆化搜索",-1),xo=t("code",null,"2+",-1),bo={style:{"text-align":"left"}},ko=t("td",{style:{"text-align":"center"}},"509",-1),zo={style:{"text-align":"left"}},Ho={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},wo={style:{"text-align":"center"}},Io={href:"/problem/0509",target:"_blank",rel:"noopener noreferrer"},Mo={style:{"text-align":"left"}},vo=t("code",null,"递归",-1),qo=t("code",null,"记忆化搜索",-1),Eo=t("code",null,"数学",-1),Co=t("code",null,"1+",-1),Lo={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"center"}},"546",-1),jo={style:{"text-align":"left"}},Po={href:"https://leetcode.com/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},Vo=t("td",{style:{"text-align":"center"}},null,-1),Bo={style:{"text-align":"left"}},Oo=t("code",null,"记忆化搜索",-1),Ko=t("code",null,"数组",-1),Ro=t("code",null,"动态规划",-1),To={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"638",-1),Do={style:{"text-align":"left"}},Fo={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},Wo=t("td",{style:{"text-align":"center"}},null,-1),Yo={style:{"text-align":"left"}},Zo=t("code",null,"位运算",-1),Ao=t("code",null,"记忆化搜索",-1),Go=t("code",null,"数组",-1),Jo=t("code",null,"3+",-1),Qo={style:{"text-align":"left"}},So=t("td",{style:{"text-align":"center"}},"698",-1),Uo={style:{"text-align":"left"}},$o={href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},tl=t("td",{style:{"text-align":"center"}},null,-1),el={style:{"text-align":"left"}},ol=t("code",null,"位运算",-1),ll=t("code",null,"记忆化搜索",-1),nl=t("code",null,"数组",-1),sl=t("code",null,"3+",-1),dl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"894",-1),il={style:{"text-align":"left"}},al={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},cl=t("td",{style:{"text-align":"center"}},null,-1),rl={style:{"text-align":"left"}},hl=t("code",null,"树",-1),ul=t("code",null,"递归",-1),fl=t("code",null,"记忆化搜索",-1),gl=t("code",null,"2+",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"913",-1),pl={style:{"text-align":"left"}},xl={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},bl=t("td",{style:{"text-align":"center"}},null,-1),kl={style:{"text-align":"left"}},zl=t("code",null,"图",-1),Hl=t("code",null,"拓扑排序",-1),wl=t("code",null,"记忆化搜索",-1),Il=t("code",null,"3+",-1),Ml={style:{"text-align":"left"}},vl=t("td",{style:{"text-align":"center"}},"964",-1),ql={style:{"text-align":"left"}},El={href:"https://leetcode.com/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},Cl=t("td",{style:{"text-align":"center"}},null,-1),Ll={style:{"text-align":"left"}},Nl=t("code",null,"记忆化搜索",-1),jl=t("code",null,"数学",-1),Pl=t("code",null,"动态规划",-1),Vl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"1137",-1),Ol={style:{"text-align":"left"}},Kl={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},Rl={style:{"text-align":"center"}},Tl={href:"/problem/1137",target:"_blank",rel:"noopener noreferrer"},Xl={style:{"text-align":"left"}},Dl=t("code",null,"记忆化搜索",-1),Fl=t("code",null,"数学",-1),Wl=t("code",null,"动态规划",-1),Yl={style:{"text-align":"left"}},Zl=t("td",{style:{"text-align":"center"}},"1387",-1),Al={style:{"text-align":"left"}},Gl={href:"https://leetcode.com/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},Jl=t("td",{style:{"text-align":"center"}},null,-1),Ql={style:{"text-align":"left"}},Sl=t("code",null,"记忆化搜索",-1),Ul=t("code",null,"动态规划",-1),$l=t("code",null,"排序",-1),tn={style:{"text-align":"left"}},en=t("td",{style:{"text-align":"center"}},"1444",-1),on={style:{"text-align":"left"}},ln={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},nn=t("td",{style:{"text-align":"center"}},null,-1),sn={style:{"text-align":"left"}},dn=t("code",null,"记忆化搜索",-1),_n=t("code",null,"数组",-1),an=t("code",null,"动态规划",-1),cn=t("code",null,"1+",-1),rn={style:{"text-align":"left"}},hn=t("td",{style:{"text-align":"center"}},"1553",-1),un={style:{"text-align":"left"}},fn={href:"https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},gn=t("td",{style:{"text-align":"center"}},null,-1),mn={style:{"text-align":"left"}},yn=t("code",null,"记忆化搜索",-1),pn=t("code",null,"动态规划",-1),xn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"1569",-1),kn={style:{"text-align":"left"}},zn={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},Hn=t("td",{style:{"text-align":"center"}},null,-1),wn={style:{"text-align":"left"}},In=t("code",null,"树",-1),Mn=t("code",null,"并查集",-1),vn=t("code",null,"二叉搜索树",-1),qn=t("code",null,"7+",-1),En={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"1575",-1),Ln={style:{"text-align":"left"}},Nn={href:"https://leetcode.com/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},jn=t("td",{style:{"text-align":"center"}},null,-1),Pn={style:{"text-align":"left"}},Vn=t("code",null,"记忆化搜索",-1),Bn=t("code",null,"数组",-1),On=t("code",null,"动态规划",-1),Kn={style:{"text-align":"left"}},Rn=t("td",{style:{"text-align":"center"}},"1611",-1),Tn={style:{"text-align":"left"}},Xn={href:"https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},Dn=t("td",{style:{"text-align":"center"}},null,-1),Fn={style:{"text-align":"left"}},Wn=t("code",null,"位运算",-1),Yn=t("code",null,"记忆化搜索",-1),Zn=t("code",null,"动态规划",-1),An={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"1659",-1),Jn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},null,-1),Un={style:{"text-align":"left"}},$n=t("code",null,"位运算",-1),ts=t("code",null,"记忆化搜索",-1),es=t("code",null,"动态规划",-1),os=t("code",null,"1+",-1),ls={style:{"text-align":"left"}},ns=t("td",{style:{"text-align":"center"}},"1728",-1),ss={style:{"text-align":"left"}},ds={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},_s=t("td",{style:{"text-align":"center"}},null,-1),is={style:{"text-align":"left"}},as=t("code",null,"图",-1),cs=t("code",null,"拓扑排序",-1),rs=t("code",null,"记忆化搜索",-1),hs=t("code",null,"5+",-1),us={style:{"text-align":"left"}},fs=t("td",{style:{"text-align":"center"}},"1815",-1),gs={style:{"text-align":"left"}},ms={href:"https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},ys=t("td",{style:{"text-align":"center"}},null,-1),ps={style:{"text-align":"left"}},xs=t("code",null,"位运算",-1),bs=t("code",null,"记忆化搜索",-1),ks=t("code",null,"数组",-1),zs=t("code",null,"2+",-1),Hs={style:{"text-align":"left"}},ws=t("td",{style:{"text-align":"center"}},"1857",-1),Is={style:{"text-align":"left"}},Ms={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},vs=t("td",{style:{"text-align":"center"}},null,-1),qs={style:{"text-align":"left"}},Es=t("code",null,"图",-1),Cs=t("code",null,"拓扑排序",-1),Ls=t("code",null,"记忆化搜索",-1),Ns=t("code",null,"3+",-1),js={style:{"text-align":"left"}},Ps=t("td",{style:{"text-align":"center"}},"1900",-1),Vs={style:{"text-align":"left"}},Bs={href:"https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},Os=t("td",{style:{"text-align":"center"}},null,-1),Ks={style:{"text-align":"left"}},Rs=t("code",null,"记忆化搜索",-1),Ts=t("code",null,"动态规划",-1),Xs={style:{"text-align":"left"}},Ds=t("td",{style:{"text-align":"center"}},"2019",-1),Fs={style:{"text-align":"left"}},Ws={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},Ys=t("td",{style:{"text-align":"center"}},null,-1),Zs={style:{"text-align":"left"}},As=t("code",null,"栈",-1),Gs=t("code",null,"记忆化搜索",-1),Js=t("code",null,"数组",-1),Qs=t("code",null,"3+",-1),Ss={style:{"text-align":"left"}},Us=t("td",{style:{"text-align":"center"}},"2311",-1),$s={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},null,-1),od={style:{"text-align":"left"}},ld=t("code",null,"贪心",-1),nd=t("code",null,"记忆化搜索",-1),sd=t("code",null,"字符串",-1),dd=t("code",null,"1+",-1),_d={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"2312",-1),ad={style:{"text-align":"left"}},cd={href:"https://leetcode.com/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},rd=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},ud=t("code",null,"记忆化搜索",-1),fd=t("code",null,"数组",-1),gd=t("code",null,"动态规划",-1),md={style:{"text-align":"left"}},yd=t("td",{style:{"text-align":"center"}},"2318",-1),pd={style:{"text-align":"left"}},xd={href:"https://leetcode.com/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},bd=t("td",{style:{"text-align":"center"}},null,-1),kd={style:{"text-align":"left"}},zd=t("code",null,"记忆化搜索",-1),Hd=t("code",null,"动态规划",-1),wd={style:{"text-align":"left"}},Id=t("td",{style:{"text-align":"center"}},"2328",-1),Md={style:{"text-align":"left"}},vd={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},qd=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},Cd=t("code",null,"深度优先搜索",-1),Ld=t("code",null,"广度优先搜索",-1),Nd=t("code",null,"图",-1),jd=t("code",null,"5+",-1),Pd={style:{"text-align":"left"}},Vd=t("td",{style:{"text-align":"center"}},"2713",-1),Bd={style:{"text-align":"left"}},Od={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Kd=t("td",{style:{"text-align":"center"}},null,-1),Rd={style:{"text-align":"left"}},Td=t("code",null,"记忆化搜索",-1),Xd=t("code",null,"数组",-1),Dd=t("code",null,"哈希表",-1),Fd=t("code",null,"5+",-1),Wd={style:{"text-align":"left"}},Yd=t("td",{style:{"text-align":"center"}},"2876",-1),Zd={style:{"text-align":"left"}},Ad={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},Gd=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},Qd=t("code",null,"图",-1),Sd=t("code",null,"记忆化搜索",-1),Ud=t("code",null,"动态规划",-1),$d={style:{"text-align":"left"}},t_=t("td",{style:{"text-align":"center"}},"2998",-1),e_={style:{"text-align":"left"}},o_={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},l_=t("td",{style:{"text-align":"center"}},null,-1),n_={style:{"text-align":"left"}},s_=t("code",null,"广度优先搜索",-1),d_=t("code",null,"记忆化搜索",-1),__=t("code",null,"动态规划",-1),i_={style:{"text-align":"left"}},a_=t("td",{style:{"text-align":"center"}},"3040",-1),c_={style:{"text-align":"left"}},r_={href:"https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},h_=t("td",{style:{"text-align":"center"}},null,-1),u_={style:{"text-align":"left"}},f_=t("code",null,"记忆化搜索",-1),g_=t("code",null,"数组",-1),m_=t("code",null,"动态规划",-1),y_={style:{"text-align":"left"}},p_=t("td",{style:{"text-align":"center"}},"3154",-1),x_={style:{"text-align":"left"}},b_={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},k_=t("td",{style:{"text-align":"center"}},null,-1),z_={style:{"text-align":"left"}},H_=t("code",null,"位运算",-1),w_=t("code",null,"记忆化搜索",-1),I_=t("code",null,"数学",-1),M_=t("code",null,"2+",-1),v_={style:{"text-align":"left"}},q_=t("td",{style:{"text-align":"center"}},"LCP 20",-1),E_={style:{"text-align":"left"}},C_={href:"https://leetcode.cn/problems/meChtZ",target:"_blank",rel:"noopener noreferrer"},L_=t("td",{style:{"text-align":"center"}},null,-1),N_={style:{"text-align":"left"}},j_=t("code",null,"记忆化搜索",-1),P_=t("code",null,"数组",-1),V_=t("code",null,"动态规划",-1),B_={style:{"text-align":"left"}},O_=t("td",{style:{"text-align":"center"}},"LCP 45",-1),K_={style:{"text-align":"left"}},R_={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},T_=t("td",{style:{"text-align":"center"}},null,-1),X_={style:{"text-align":"left"}},D_=t("code",null,"深度优先搜索",-1),F_=t("code",null,"广度优先搜索",-1),W_=t("code",null,"记忆化搜索",-1),Y_=t("code",null,"3+",-1),Z_={style:{"text-align":"left"}},A_=t("td",{style:{"text-align":"center"}},"LCP 63",-1),G_={style:{"text-align":"left"}},J_={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},null,-1),S_={style:{"text-align":"left"}},U_=t("code",null,"深度优先搜索",-1),$_=t("code",null,"广度优先搜索",-1),ti=t("code",null,"图",-1),ei=t("code",null,"5+",-1),oi={style:{"text-align":"left"}},li=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - I",-1),ni={style:{"text-align":"left"}},si={href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},di={style:{"text-align":"center"}},_i={href:"/problem/jz_offer_10_1",target:"_blank",rel:"noopener noreferrer"},ii={style:{"text-align":"left"}},ai=t("code",null,"记忆化搜索",-1),ci=t("code",null,"数学",-1),ri=t("code",null,"动态规划",-1),hi={style:{"text-align":"left"}},ui=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - II",-1),fi={style:{"text-align":"left"}},gi={href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof",target:"_blank",rel:"noopener noreferrer"},mi={style:{"text-align":"center"}},yi={href:"/problem/jz_offer_10_2",target:"_blank",rel:"noopener noreferrer"},pi={style:{"text-align":"left"}},xi=t("code",null,"记忆化搜索",-1),bi=t("code",null,"数学",-1),ki=t("code",null,"动态规划",-1),zi={style:{"text-align":"left"}},Hi=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),wi={style:{"text-align":"left"}},Ii={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},Mi=t("td",{style:{"text-align":"center"}},null,-1),vi={style:{"text-align":"left"}},qi=t("code",null,"深度优先搜索",-1),Ei=t("code",null,"广度优先搜索",-1),Ci=t("code",null,"图",-1),Li=t("code",null,"5+",-1),Ni={style:{"text-align":"left"}},ji=t("td",{style:{"text-align":"center"}},"面试题 08.01",-1),Pi={style:{"text-align":"left"}},Vi={href:"https://leetcode.cn/problems/three-steps-problem-lcci",target:"_blank",rel:"noopener noreferrer"},Bi=t("td",{style:{"text-align":"center"}},null,-1),Oi={style:{"text-align":"left"}},Ki=t("code",null,"记忆化搜索",-1),Ri=t("code",null,"数学",-1),Ti=t("code",null,"动态规划",-1),Xi={style:{"text-align":"left"}},Di=t("td",{style:{"text-align":"center"}},"面试题 08.14",-1),Fi={style:{"text-align":"left"}},Wi={href:"https://leetcode.cn/problems/boolean-evaluation-lcci",target:"_blank",rel:"noopener noreferrer"},Yi=t("td",{style:{"text-align":"center"}},null,-1),Zi={style:{"text-align":"left"}},Ai=t("code",null,"记忆化搜索",-1),Gi=t("code",null,"字符串",-1),Ji=t("code",null,"动态规划",-1),Qi={style:{"text-align":"left"}};function Si(Ui,$i){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/outline/tag/matrix.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/outline/tag/linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/outline/tag/queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/outline/tag/string-matching.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/outline/tag/binary-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/outline/tag/ordered-set.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/outline/tag/shortest-path.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/outline/tag/segment-tree.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/outline/tag/suffix-array.html"},{default:l(()=>[W]),_:1})]),Y,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/outline/tag/backtracking.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),st,o(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/outline/tag/two-pointers.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/outline/tag/counting.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/outline/tag/number-theory.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/outline/tag/simulation.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/outline/tag/combinatorics.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/outline/tag/randomized.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/outline/tag/database.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/outline/tag/design.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/outline/tag/data-stream.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/outline/tag/brainteaser.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/outline/tag/interactive.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/outline/tag/iterator.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/outline/tag/concurrency.html"},{default:l(()=>[Pt]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Ot,t("td",Kt,[t("a",Rt,[o("爬楼梯"),e(s)])]),t("td",Tt,[t("a",Xt,[o("[✓]"),e(s)])]),t("td",Dt,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Ft]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Wt]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Yt]),_:1})]),t("td",Zt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[At,t("td",Gt,[t("a",Jt,[o("单词拆分"),e(s)])]),t("td",Qt,[t("a",St,[o("[✓]"),e(s)])]),t("td",Ut,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ee]),_:1}),o(),oe]),t("td",le,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ne,t("td",se,[t("a",de,[o("单词拆分 II"),e(s)])]),_e,t("td",ie,[e(n,{to:"/outline/tag/trie.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[ce]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[re]),_:1}),o(),he]),t("td",ue,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[fe,t("td",ge,[t("a",me,[o("为运算表达式设计优先级"),e(s)])]),ye,t("td",pe,[e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[be]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[ke]),_:1}),o(),ze]),t("td",He,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[we,t("td",Ie,[t("a",Me,[o("翻转游戏 II"),e(s)])]),ve,t("td",qe,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Ee]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Ce]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Le]),_:1}),o(),Ne]),t("td",je,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pe,t("td",Ve,[t("a",Be,[o("矩阵中的最长递增路径"),e(s)])]),Oe,t("td",Ke,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Re]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Te]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Xe]),_:1}),o(),De]),t("td",Fe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[We,t("td",Ye,[t("a",Ze,[o("整数替换"),e(s)])]),Ae,t("td",Ge,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[Je]),_:1}),o(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[Qe]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Se]),_:1}),o(),Ue]),t("td",$e,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[to,t("td",eo,[t("a",oo,[o("我能赢吗"),e(s)])]),lo,t("td",no,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[so]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[_o]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[io]),_:1}),o(),ao]),t("td",co,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ro,t("td",ho,[t("a",uo,[o("祖玛游戏"),e(s)])]),fo,t("td",go,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[mo]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[yo]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[po]),_:1}),o(),xo]),t("td",bo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ko,t("td",zo,[t("a",Ho,[o("斐波那契数"),e(s)])]),t("td",wo,[t("a",Io,[o("[✓]"),e(s)])]),t("td",Mo,[e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[qo]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Eo]),_:1}),o(),Co]),t("td",Lo,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[No,t("td",jo,[t("a",Po,[o("移除盒子"),e(s)])]),Vo,t("td",Bo,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Oo]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Ko]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ro]),_:1})]),t("td",To,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Xo,t("td",Do,[t("a",Fo,[o("大礼包"),e(s)])]),Wo,t("td",Yo,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[Zo]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Ao]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Go]),_:1}),o(),Jo]),t("td",Qo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[So,t("td",Uo,[t("a",$o,[o("划分为k个相等的子集"),e(s)])]),tl,t("td",el,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[ol]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[ll]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[nl]),_:1}),o(),sl]),t("td",dl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_l,t("td",il,[t("a",al,[o("所有可能的真二叉树"),e(s)])]),cl,t("td",rl,[e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[hl]),_:1}),o(),e(n,{to:"/outline/tag/recursion.html"},{default:l(()=>[ul]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[fl]),_:1}),o(),gl]),t("td",ml,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yl,t("td",pl,[t("a",xl,[o("猫和老鼠"),e(s)])]),bl,t("td",kl,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[zl]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Hl]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[wl]),_:1}),o(),Il]),t("td",Ml,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vl,t("td",ql,[t("a",El,[o("表示数字的最少运算符"),e(s)])]),Cl,t("td",Ll,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Nl]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[jl]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Pl]),_:1})]),t("td",Vl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Bl,t("td",Ol,[t("a",Kl,[o("第 N 个泰波那契数"),e(s)])]),t("td",Rl,[t("a",Tl,[o("[✓]"),e(s)])]),t("td",Xl,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Dl]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Fl]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Wl]),_:1})]),t("td",Yl,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Zl,t("td",Al,[t("a",Gl,[o("将整数按权重排序"),e(s)])]),Jl,t("td",Ql,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Sl]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ul]),_:1}),o(),e(n,{to:"/outline/tag/sorting.html"},{default:l(()=>[$l]),_:1})]),t("td",tn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[en,t("td",on,[t("a",ln,[o("切披萨的方案数"),e(s)])]),nn,t("td",sn,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[dn]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[_n]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[an]),_:1}),o(),cn]),t("td",rn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[hn,t("td",un,[t("a",fn,[o("吃掉 N 个橘子的最少天数"),e(s)])]),gn,t("td",mn,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[yn]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[pn]),_:1})]),t("td",xn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bn,t("td",kn,[t("a",zn,[o("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),Hn,t("td",wn,[e(n,{to:"/outline/tag/tree.html"},{default:l(()=>[In]),_:1}),o(),e(n,{to:"/outline/tag/union-find.html"},{default:l(()=>[Mn]),_:1}),o(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:l(()=>[vn]),_:1}),o(),qn]),t("td",En,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Cn,t("td",Ln,[t("a",Nn,[o("统计所有可行路径"),e(s)])]),jn,t("td",Pn,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Vn]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Bn]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[On]),_:1})]),t("td",Kn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Rn,t("td",Tn,[t("a",Xn,[o("使整数变为 0 的最少操作次数"),e(s)])]),Dn,t("td",Fn,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[Wn]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Yn]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Zn]),_:1})]),t("td",An,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Gn,t("td",Jn,[t("a",Qn,[o("最大化网格幸福感"),e(s)])]),Sn,t("td",Un,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[$n]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[ts]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[es]),_:1}),o(),os]),t("td",ls,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ns,t("td",ss,[t("a",ds,[o("猫和老鼠 II"),e(s)])]),_s,t("td",is,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[as]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[cs]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[rs]),_:1}),o(),hs]),t("td",us,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[fs,t("td",gs,[t("a",ms,[o("得到新鲜甜甜圈的最多组数"),e(s)])]),ys,t("td",ps,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[xs]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[bs]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[ks]),_:1}),o(),zs]),t("td",Hs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ws,t("td",Is,[t("a",Ms,[o("有向图中最大颜色值"),e(s)])]),vs,t("td",qs,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Es]),_:1}),o(),e(n,{to:"/outline/tag/topological-sort.html"},{default:l(()=>[Cs]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Ls]),_:1}),o(),Ns]),t("td",js,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ps,t("td",Vs,[t("a",Bs,[o("最佳运动员的比拼回合"),e(s)])]),Os,t("td",Ks,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Rs]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ts]),_:1})]),t("td",Xs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ds,t("td",Fs,[t("a",Ws,[o("解出数学表达式的学生分数"),e(s)])]),Ys,t("td",Zs,[e(n,{to:"/outline/tag/stack.html"},{default:l(()=>[As]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Gs]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Js]),_:1}),o(),Qs]),t("td",Ss,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Us,t("td",$s,[t("a",td,[o("小于等于 K 的最长二进制子序列"),e(s)])]),ed,t("td",od,[e(n,{to:"/outline/tag/greedy.html"},{default:l(()=>[ld]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[nd]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[sd]),_:1}),o(),dd]),t("td",_d,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",cd,[o("卖木头块"),e(s)])]),rd,t("td",hd,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[ud]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[fd]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[gd]),_:1})]),t("td",md,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[yd,t("td",pd,[t("a",xd,[o("不同骰子序列的数目"),e(s)])]),bd,t("td",kd,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[zd]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Hd]),_:1})]),t("td",wd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Id,t("td",Md,[t("a",vd,[o("网格图中递增路径的数目"),e(s)])]),qd,t("td",Ed,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[Cd]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Ld]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Nd]),_:1}),o(),jd]),t("td",Pd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vd,t("td",Bd,[t("a",Od,[o("矩阵中严格递增的单元格数"),e(s)])]),Kd,t("td",Rd,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Td]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[Xd]),_:1}),o(),e(n,{to:"/outline/tag/hash-table.html"},{default:l(()=>[Dd]),_:1}),o(),Fd]),t("td",Wd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Yd,t("td",Zd,[t("a",Ad,[o("有向图访问计数"),e(s)])]),Gd,t("td",Jd,[e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Qd]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Sd]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ud]),_:1})]),t("td",$d,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[t_,t("td",e_,[t("a",o_,[o("使 X 和 Y 相等的最少操作次数"),e(s)])]),l_,t("td",n_,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[s_]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[d_]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[__]),_:1})]),t("td",i_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[a_,t("td",c_,[t("a",r_,[o("相同分数的最大操作数目 II"),e(s)])]),h_,t("td",u_,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[f_]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[g_]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[m_]),_:1})]),t("td",y_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[p_,t("td",x_,[t("a",b_,[o("到达第 K 级台阶的方案数"),e(s)])]),k_,t("td",z_,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:l(()=>[H_]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[w_]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[I_]),_:1}),o(),M_]),t("td",v_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[q_,t("td",E_,[t("a",C_,[o("快速公交"),e(s)])]),L_,t("td",N_,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[j_]),_:1}),o(),e(n,{to:"/outline/tag/array.html"},{default:l(()=>[P_]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[V_]),_:1})]),t("td",B_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[O_,t("td",K_,[t("a",R_,[o("自行车炫技赛场"),e(s)])]),T_,t("td",X_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[D_]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[F_]),_:1}),o(),e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[W_]),_:1}),o(),Y_]),t("td",Z_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[A_,t("td",G_,[t("a",J_,[o("弹珠游戏"),e(s)])]),Q_,t("td",S_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[U_]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[$_]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[ti]),_:1}),o(),ei]),t("td",oi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[li,t("td",ni,[t("a",si,[o("斐波那契数列"),e(s)])]),t("td",di,[t("a",_i,[o("[✓]"),e(s)])]),t("td",ii,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[ai]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[ci]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[ri]),_:1})]),t("td",hi,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ui,t("td",fi,[t("a",gi,[o("青蛙跳台阶问题"),e(s)])]),t("td",mi,[t("a",yi,[o("[✓]"),e(s)])]),t("td",pi,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[xi]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[bi]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[ki]),_:1})]),t("td",zi,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Hi,t("td",wi,[t("a",Ii,[o("最长递增路径"),e(s)])]),Mi,t("td",vi,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:l(()=>[qi]),_:1}),o(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:l(()=>[Ei]),_:1}),o(),e(n,{to:"/outline/tag/graph.html"},{default:l(()=>[Ci]),_:1}),o(),Li]),t("td",Ni,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ji,t("td",Pi,[t("a",Vi,[o("三步问题"),e(s)])]),Bi,t("td",Oi,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Ki]),_:1}),o(),e(n,{to:"/outline/tag/math.html"},{default:l(()=>[Ri]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ti]),_:1})]),t("td",Xi,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Di,t("td",Fi,[t("a",Wi,[o("布尔运算"),e(s)])]),Yi,t("td",Zi,[e(n,{to:"/outline/tag/memoization.html"},{default:l(()=>[Ai]),_:1}),o(),e(n,{to:"/outline/tag/string.html"},{default:l(()=>[Gi]),_:1}),o(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:l(()=>[Ji]),_:1})]),t("td",Qi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const ea=i(h,[["render",Si],["__file","memoization.html.vue"]]);export{ea as default};
