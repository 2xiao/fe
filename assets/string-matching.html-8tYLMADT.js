import{_,r as d,o as r,c as i,a as t,d as o,w as n,b as e,f as a}from"./app-Ok0_iT6k.js";const c={},h=t("h1",{id:"字符串匹配",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字符串匹配","aria-hidden":"true"},"#"),e(" 字符串匹配")],-1),g=t("summary",null,"全部标签",-1),u=t("p",null,[t("strong",null,"数据结构")],-1),f=t("code",null,"数组",-1),m=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),y=t("code",null,"双向链表",-1),x=t("code",null,"栈",-1),b=t("code",null,"单调栈",-1),k=t("code",null,"队列",-1),w=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),L=t("span",{class:"blue"},"字符串匹配",-1),N=t("code",null,"树",-1),V=t("code",null,"二叉树",-1),B=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),z=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),M=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),H=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),K=t("p",null,[t("strong",null,"算法")],-1),O=t("code",null,"枚举",-1),P=t("code",null,"递归",-1),Q=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),Y=t("code",null,"桶排序",-1),Z=t("code",null,"计数排序",-1),$=t("code",null,"基数排序",-1),tt=t("code",null,"归并排序",-1),et=t("code",null,"快速选择",-1),ot=t("code",null,"二分查找",-1),lt=t("code",null,"记忆化搜索",-1),nt=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),dt=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),it=t("code",null,"计数",-1),at=t("code",null,"滑动窗口",-1),ct=t("code",null,"状态压缩",-1),ht=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),ut=t("code",null,"扫描线",-1),ft=t("p",null,[t("strong",null,"其他")],-1),mt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),yt=t("code",null,"几何",-1),xt=t("code",null,"博弈",-1),bt=t("code",null,"模拟",-1),kt=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Lt=t("code",null,"数据库",-1),Nt=t("code",null,"设计",-1),Vt=t("code",null,"数据流",-1),Bt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),zt=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度"),t("th",{style:{"text-align":"center"}},"力扣")])],-1),Mt=t("td",{style:{"text-align":"center"}},"28",-1),Tt=t("td",{style:{"text-align":"left"}},"找出字符串中第一个匹配项的下标",-1),At={style:{"text-align":"center"}},Dt={style:{"text-align":"left"}},Ft=t("code",null,"双指针",-1),Gt=t("code",null,"字符串",-1),Ht=t("code",null,"字符串匹配",-1),Jt=t("td",{style:{"text-align":"left"}},"🟢",-1),Kt={style:{"text-align":"center"}},Ot={href:"https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},"214",-1),St=t("td",{style:{"text-align":"left"}},"最短回文串",-1),Ut=t("td",{style:{"text-align":"center"}},null,-1),Wt={style:{"text-align":"left"}},Xt=t("code",null,"字符串",-1),Yt=t("code",null,"字符串匹配",-1),Zt=t("code",null,"哈希函数",-1),$t=t("code",null,"1+",-1),te=t("td",{style:{"text-align":"left"}},"🔴",-1),ee={style:{"text-align":"center"}},oe={href:"https://leetcode.cn/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},le={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},ne=t("td",{style:{"text-align":"center"}},"459",-1),se=t("td",{style:{"text-align":"left"}},"重复的子字符串",-1),de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},re=t("code",null,"字符串",-1),ie=t("code",null,"字符串匹配",-1),ae=t("td",{style:{"text-align":"left"}},"🟢",-1),ce={style:{"text-align":"center"}},he={href:"https://leetcode.cn/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://leetcode.com/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},ue=t("td",{style:{"text-align":"center"}},"572",-1),fe=t("td",{style:{"text-align":"left"}},"另一棵树的子树",-1),me={style:{"text-align":"center"}},pe={style:{"text-align":"left"}},ye=t("code",null,"树",-1),xe=t("code",null,"深度优先搜索",-1),be=t("code",null,"二叉树",-1),ke=t("code",null,"2+",-1),we=t("td",{style:{"text-align":"left"}},"🟢",-1),ve={style:{"text-align":"center"}},Ie={href:"https://leetcode.cn/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},Le=t("td",{style:{"text-align":"center"}},"616",-1),Ne=t("td",{style:{"text-align":"left"}},"给字符串添加加粗标签 🔒",-1),Ve=t("td",{style:{"text-align":"center"}},null,-1),Be={style:{"text-align":"left"}},Ce=t("code",null,"字典树",-1),Ee=t("code",null,"数组",-1),ze=t("code",null,"哈希表",-1),Re=t("code",null,"2+",-1),je=t("td",{style:{"text-align":"left"}},"🟠",-1),Me={style:{"text-align":"center"}},Te={href:"https://leetcode.cn/problems/add-bold-tag-in-string",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://leetcode.com/problems/add-bold-tag-in-string",target:"_blank",rel:"noopener noreferrer"},De=t("td",{style:{"text-align":"center"}},"686",-1),Fe=t("td",{style:{"text-align":"left"}},"重复叠加字符串匹配",-1),Ge=t("td",{style:{"text-align":"center"}},null,-1),He={style:{"text-align":"left"}},Je=t("code",null,"字符串",-1),Ke=t("code",null,"字符串匹配",-1),Oe=t("td",{style:{"text-align":"left"}},"🟠",-1),Pe={style:{"text-align":"center"}},Qe={href:"https://leetcode.cn/problems/repeated-string-match",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://leetcode.com/problems/repeated-string-match",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},"758",-1),We=t("td",{style:{"text-align":"left"}},"字符串中的加粗单词 🔒",-1),Xe=t("td",{style:{"text-align":"center"}},null,-1),Ye={style:{"text-align":"left"}},Ze=t("code",null,"字典树",-1),$e=t("code",null,"数组",-1),to=t("code",null,"哈希表",-1),eo=t("code",null,"2+",-1),oo=t("td",{style:{"text-align":"left"}},"🟠",-1),lo={style:{"text-align":"center"}},no={href:"https://leetcode.cn/problems/bold-words-in-string",target:"_blank",rel:"noopener noreferrer"},so={href:"https://leetcode.com/problems/bold-words-in-string",target:"_blank",rel:"noopener noreferrer"},_o=t("td",{style:{"text-align":"center"}},"796",-1),ro=t("td",{style:{"text-align":"left"}},"旋转字符串",-1),io={style:{"text-align":"center"}},ao={style:{"text-align":"left"}},co=t("code",null,"字符串",-1),ho=t("code",null,"字符串匹配",-1),go=t("td",{style:{"text-align":"left"}},"🟢",-1),uo={style:{"text-align":"center"}},fo={href:"https://leetcode.cn/problems/rotate-string",target:"_blank",rel:"noopener noreferrer"},mo={href:"https://leetcode.com/problems/rotate-string",target:"_blank",rel:"noopener noreferrer"},po=t("td",{style:{"text-align":"center"}},"1023",-1),yo=t("td",{style:{"text-align":"left"}},"驼峰式匹配",-1),xo=t("td",{style:{"text-align":"center"}},null,-1),bo={style:{"text-align":"left"}},ko=t("code",null,"字典树",-1),wo=t("code",null,"数组",-1),vo=t("code",null,"双指针",-1),Io=t("code",null,"2+",-1),qo=t("td",{style:{"text-align":"left"}},"🟠",-1),Lo={style:{"text-align":"center"}},No={href:"https://leetcode.cn/problems/camelcase-matching",target:"_blank",rel:"noopener noreferrer"},Vo={href:"https://leetcode.com/problems/camelcase-matching",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},"1392",-1),Co=t("td",{style:{"text-align":"left"}},"最长快乐前缀",-1),Eo=t("td",{style:{"text-align":"center"}},null,-1),zo={style:{"text-align":"left"}},Ro=t("code",null,"字符串",-1),jo=t("code",null,"字符串匹配",-1),Mo=t("code",null,"哈希函数",-1),To=t("code",null,"1+",-1),Ao=t("td",{style:{"text-align":"left"}},"🔴",-1),Do={style:{"text-align":"center"}},Fo={href:"https://leetcode.cn/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},Go={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},Ho=t("td",{style:{"text-align":"center"}},"1397",-1),Jo=t("td",{style:{"text-align":"left"}},"找到所有好字符串",-1),Ko=t("td",{style:{"text-align":"center"}},null,-1),Oo={style:{"text-align":"left"}},Po=t("code",null,"字符串",-1),Qo=t("code",null,"动态规划",-1),So=t("code",null,"字符串匹配",-1),Uo=t("td",{style:{"text-align":"left"}},"🔴",-1),Wo={style:{"text-align":"center"}},Xo={href:"https://leetcode.cn/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},Yo={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},Zo=t("td",{style:{"text-align":"center"}},"1408",-1),$o=t("td",{style:{"text-align":"left"}},"数组中的字符串匹配",-1),tl=t("td",{style:{"text-align":"center"}},null,-1),el={style:{"text-align":"left"}},ol=t("code",null,"数组",-1),ll=t("code",null,"字符串",-1),nl=t("code",null,"字符串匹配",-1),sl=t("td",{style:{"text-align":"left"}},"🟢",-1),dl={style:{"text-align":"center"}},_l={href:"https://leetcode.cn/problems/string-matching-in-an-array",target:"_blank",rel:"noopener noreferrer"},rl={href:"https://leetcode.com/problems/string-matching-in-an-array",target:"_blank",rel:"noopener noreferrer"},il=t("td",{style:{"text-align":"center"}},"1455",-1),al=t("td",{style:{"text-align":"left"}},"检查单词是否为句中其他单词的前缀",-1),cl=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},gl=t("code",null,"双指针",-1),ul=t("code",null,"字符串",-1),fl=t("code",null,"字符串匹配",-1),ml=t("td",{style:{"text-align":"left"}},"🟢",-1),pl={style:{"text-align":"center"}},yl={href:"https://leetcode.cn/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",target:"_blank",rel:"noopener noreferrer"},xl={href:"https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",target:"_blank",rel:"noopener noreferrer"},bl=t("td",{style:{"text-align":"center"}},"1668",-1),kl=t("td",{style:{"text-align":"left"}},"最大重复子字符串",-1),wl=t("td",{style:{"text-align":"center"}},null,-1),vl={style:{"text-align":"left"}},Il=t("code",null,"字符串",-1),ql=t("code",null,"动态规划",-1),Ll=t("code",null,"字符串匹配",-1),Nl=t("td",{style:{"text-align":"left"}},"🟢",-1),Vl={style:{"text-align":"center"}},Bl={href:"https://leetcode.cn/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Cl={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},El=t("td",{style:{"text-align":"center"}},"1764",-1),zl=t("td",{style:{"text-align":"left"}},"通过连接另一个数组的子数组得到一个数组",-1),Rl=t("td",{style:{"text-align":"center"}},null,-1),jl={style:{"text-align":"left"}},Ml=t("code",null,"贪心",-1),Tl=t("code",null,"数组",-1),Al=t("code",null,"双指针",-1),Dl=t("code",null,"1+",-1),Fl=t("td",{style:{"text-align":"left"}},"🟠",-1),Gl={style:{"text-align":"center"}},Hl={href:"https://leetcode.cn/problems/form-array-by-concatenating-subarrays-of-another-array",target:"_blank",rel:"noopener noreferrer"},Jl={href:"https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array",target:"_blank",rel:"noopener noreferrer"},Kl=t("td",{style:{"text-align":"center"}},"2185",-1),Ol=t("td",{style:{"text-align":"left"}},"统计包含给定前缀的字符串",-1),Pl=t("td",{style:{"text-align":"center"}},null,-1),Ql={style:{"text-align":"left"}},Sl=t("code",null,"数组",-1),Ul=t("code",null,"字符串",-1),Wl=t("code",null,"字符串匹配",-1),Xl=t("td",{style:{"text-align":"left"}},"🟢",-1),Yl={style:{"text-align":"center"}},Zl={href:"https://leetcode.cn/problems/counting-words-with-a-given-prefix",target:"_blank",rel:"noopener noreferrer"},$l={href:"https://leetcode.com/problems/counting-words-with-a-given-prefix",target:"_blank",rel:"noopener noreferrer"},tn=t("td",{style:{"text-align":"center"}},"2223",-1),en=t("td",{style:{"text-align":"left"}},"构造字符串的总得分和",-1),on=t("td",{style:{"text-align":"center"}},null,-1),ln={style:{"text-align":"left"}},nn=t("code",null,"字符串",-1),sn=t("code",null,"二分查找",-1),dn=t("code",null,"字符串匹配",-1),_n=t("code",null,"3+",-1),rn=t("td",{style:{"text-align":"left"}},"🔴",-1),an={style:{"text-align":"center"}},cn={href:"https://leetcode.cn/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},gn=t("td",{style:{"text-align":"center"}},"2301",-1),un=t("td",{style:{"text-align":"left"}},"替换字符后匹配",-1),fn=t("td",{style:{"text-align":"center"}},null,-1),mn={style:{"text-align":"left"}},pn=t("code",null,"数组",-1),yn=t("code",null,"哈希表",-1),xn=t("code",null,"字符串",-1),bn=t("code",null,"1+",-1),kn=t("td",{style:{"text-align":"left"}},"🔴",-1),wn={style:{"text-align":"center"}},vn={href:"https://leetcode.cn/problems/match-substring-after-replacement",target:"_blank",rel:"noopener noreferrer"},In={href:"https://leetcode.com/problems/match-substring-after-replacement",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},"2430",-1),Ln=t("td",{style:{"text-align":"left"}},"对字母串可执行的最大删除数",-1),Nn=t("td",{style:{"text-align":"center"}},null,-1),Vn={style:{"text-align":"left"}},Bn=t("code",null,"字符串",-1),Cn=t("code",null,"动态规划",-1),En=t("code",null,"字符串匹配",-1),zn=t("code",null,"2+",-1),Rn=t("td",{style:{"text-align":"left"}},"🔴",-1),jn={style:{"text-align":"center"}},Mn={href:"https://leetcode.cn/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},An=t("td",{style:{"text-align":"center"}},"2851",-1),Dn=t("td",{style:{"text-align":"left"}},"字符串转换",-1),Fn=t("td",{style:{"text-align":"center"}},null,-1),Gn={style:{"text-align":"left"}},Hn=t("code",null,"数学",-1),Jn=t("code",null,"字符串",-1),Kn=t("code",null,"动态规划",-1),On=t("code",null,"1+",-1),Pn=t("td",{style:{"text-align":"left"}},"🔴",-1),Qn={style:{"text-align":"center"}},Sn={href:"https://leetcode.cn/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},Wn=t("td",{style:{"text-align":"center"}},"3006",-1),Xn=t("td",{style:{"text-align":"left"}},"找出数组中的美丽下标 I",-1),Yn=t("td",{style:{"text-align":"center"}},null,-1),Zn={style:{"text-align":"left"}},$n=t("code",null,"双指针",-1),ts=t("code",null,"字符串",-1),es=t("code",null,"二分查找",-1),os=t("code",null,"3+",-1),ls=t("td",{style:{"text-align":"left"}},"🟠",-1),ns={style:{"text-align":"center"}},ss={href:"https://leetcode.cn/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},ds={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},_s=t("td",{style:{"text-align":"center"}},"3008",-1),rs=t("td",{style:{"text-align":"left"}},"找出数组中的美丽下标 II",-1),is=t("td",{style:{"text-align":"center"}},null,-1),as={style:{"text-align":"left"}},cs=t("code",null,"双指针",-1),hs=t("code",null,"字符串",-1),gs=t("code",null,"二分查找",-1),us=t("code",null,"3+",-1),fs=t("td",{style:{"text-align":"left"}},"🔴",-1),ms={style:{"text-align":"center"}},ps={href:"https://leetcode.cn/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},ys={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},xs=t("td",{style:{"text-align":"center"}},"3023",-1),bs=t("td",{style:{"text-align":"left"}},"在无限流中寻找模式 I 🔒",-1),ks=t("td",{style:{"text-align":"center"}},null,-1),ws={style:{"text-align":"left"}},vs=t("code",null,"数组",-1),Is=t("code",null,"字符串匹配",-1),qs=t("code",null,"滑动窗口",-1),Ls=t("code",null,"2+",-1),Ns=t("td",{style:{"text-align":"left"}},"🟠",-1),Vs={style:{"text-align":"center"}},Bs={href:"https://leetcode.cn/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Cs={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Es=t("td",{style:{"text-align":"center"}},"3029",-1),zs=t("td",{style:{"text-align":"left"}},"将单词恢复初始状态所需的最短时间 I",-1),Rs=t("td",{style:{"text-align":"center"}},null,-1),js={style:{"text-align":"left"}},Ms=t("code",null,"字符串",-1),Ts=t("code",null,"字符串匹配",-1),As=t("code",null,"哈希函数",-1),Ds=t("code",null,"1+",-1),Fs=t("td",{style:{"text-align":"left"}},"🟠",-1),Gs={style:{"text-align":"center"}},Hs={href:"https://leetcode.cn/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Js={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Ks=t("td",{style:{"text-align":"center"}},"3031",-1),Os=t("td",{style:{"text-align":"left"}},"将单词恢复初始状态所需的最短时间 II",-1),Ps=t("td",{style:{"text-align":"center"}},null,-1),Qs={style:{"text-align":"left"}},Ss=t("code",null,"字符串",-1),Us=t("code",null,"字符串匹配",-1),Ws=t("code",null,"哈希函数",-1),Xs=t("code",null,"1+",-1),Ys=t("td",{style:{"text-align":"left"}},"🔴",-1),Zs={style:{"text-align":"center"}},$s={href:"https://leetcode.cn/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},td={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},"3034",-1),od=t("td",{style:{"text-align":"left"}},"匹配模式数组的子数组数目 I",-1),ld=t("td",{style:{"text-align":"center"}},null,-1),nd={style:{"text-align":"left"}},sd=t("code",null,"数组",-1),dd=t("code",null,"字符串匹配",-1),_d=t("code",null,"哈希函数",-1),rd=t("code",null,"1+",-1),id=t("td",{style:{"text-align":"left"}},"🟠",-1),ad={style:{"text-align":"center"}},cd={href:"https://leetcode.cn/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},hd={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},gd=t("td",{style:{"text-align":"center"}},"3036",-1),ud=t("td",{style:{"text-align":"left"}},"匹配模式数组的子数组数目 II",-1),fd=t("td",{style:{"text-align":"center"}},null,-1),md={style:{"text-align":"left"}},pd=t("code",null,"数组",-1),yd=t("code",null,"字符串匹配",-1),xd=t("code",null,"哈希函数",-1),bd=t("code",null,"1+",-1),kd=t("td",{style:{"text-align":"left"}},"🔴",-1),wd={style:{"text-align":"center"}},vd={href:"https://leetcode.cn/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},Id={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},qd=t("td",{style:{"text-align":"center"}},"3037",-1),Ld=t("td",{style:{"text-align":"left"}},"在无限流中寻找模式 II 🔒",-1),Nd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Bd=t("code",null,"数组",-1),Cd=t("code",null,"字符串匹配",-1),Ed=t("code",null,"滑动窗口",-1),zd=t("code",null,"2+",-1),Rd=t("td",{style:{"text-align":"left"}},"🔴",-1),jd={style:{"text-align":"center"}},Md={href:"https://leetcode.cn/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Td={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Ad=t("td",{style:{"text-align":"center"}},"3042",-1),Dd=t("td",{style:{"text-align":"left"}},"统计前后缀下标对 I",-1),Fd=t("td",{style:{"text-align":"center"}},null,-1),Gd={style:{"text-align":"left"}},Hd=t("code",null,"字典树",-1),Jd=t("code",null,"数组",-1),Kd=t("code",null,"字符串",-1),Od=t("code",null,"3+",-1),Pd=t("td",{style:{"text-align":"left"}},"🟢",-1),Qd={style:{"text-align":"center"}},Sd={href:"https://leetcode.cn/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Ud={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Wd=t("td",{style:{"text-align":"center"}},"3045",-1),Xd=t("td",{style:{"text-align":"left"}},"统计前后缀下标对 II",-1),Yd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},$d=t("code",null,"字典树",-1),t_=t("code",null,"数组",-1),e_=t("code",null,"字符串",-1),o_=t("code",null,"3+",-1),l_=t("td",{style:{"text-align":"left"}},"🔴",-1),n_={style:{"text-align":"center"}},s_={href:"https://leetcode.cn/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},d_={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},"3291",-1),r_=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 I",-1),i_=t("td",{style:{"text-align":"center"}},null,-1),a_={style:{"text-align":"left"}},c_=t("code",null,"字典树",-1),h_=t("code",null,"线段树",-1),g_=t("code",null,"数组",-1),u_=t("code",null,"6+",-1),f_=t("td",{style:{"text-align":"left"}},"🟠",-1),m_={style:{"text-align":"center"}},p_={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},y_={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},x_=t("td",{style:{"text-align":"center"}},"3292",-1),b_=t("td",{style:{"text-align":"left"}},"形成目标字符串需要的最少字符串数 II",-1),k_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},v_=t("code",null,"线段树",-1),I_=t("code",null,"数组",-1),q_=t("code",null,"字符串",-1),L_=t("code",null,"5+",-1),N_=t("td",{style:{"text-align":"left"}},"🔴",-1),V_={style:{"text-align":"center"}},B_={href:"https://leetcode.cn/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},C_={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},E_=t("td",{style:{"text-align":"center"}},"3303",-1),z_=t("td",{style:{"text-align":"left"}},"第一个几乎相等子字符串的下标",-1),R_=t("td",{style:{"text-align":"center"}},null,-1),j_={style:{"text-align":"left"}},M_=t("code",null,"字符串",-1),T_=t("code",null,"字符串匹配",-1),A_=t("td",{style:{"text-align":"left"}},"🔴",-1),D_={style:{"text-align":"center"}},F_={href:"https://leetcode.cn/problems/find-the-occurrence-of-first-almost-equal-substring",target:"_blank",rel:"noopener noreferrer"},G_={href:"https://leetcode.com/problems/find-the-occurrence-of-first-almost-equal-substring",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},"面试题 01.09",-1),J_=t("td",{style:{"text-align":"left"}},"字符串轮转",-1),K_=t("td",{style:{"text-align":"center"}},null,-1),O_={style:{"text-align":"left"}},P_=t("code",null,"字符串",-1),Q_=t("code",null,"字符串匹配",-1),S_=t("td",{style:{"text-align":"left"}},"🟢",-1),U_={style:{"text-align":"center"}},W_={href:"https://leetcode.cn/problems/string-rotation-lcci",target:"_blank",rel:"noopener noreferrer"},X_=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Y_=t("td",{style:{"text-align":"left"}},"检查子树",-1),Z_=t("td",{style:{"text-align":"center"}},null,-1),$_={style:{"text-align":"left"}},tr=t("code",null,"树",-1),er=t("code",null,"深度优先搜索",-1),or=t("code",null,"二叉树",-1),lr=t("code",null,"2+",-1),nr=t("td",{style:{"text-align":"left"}},"🟠",-1),sr={style:{"text-align":"center"}},dr={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},_r=t("td",{style:{"text-align":"center"}},"面试题 17.17",-1),rr=t("td",{style:{"text-align":"left"}},"多次搜索",-1),ir=t("td",{style:{"text-align":"center"}},null,-1),ar={style:{"text-align":"left"}},cr=t("code",null,"字典树",-1),hr=t("code",null,"数组",-1),gr=t("code",null,"哈希表",-1),ur=t("code",null,"3+",-1),fr=t("td",{style:{"text-align":"left"}},"🟠",-1),mr={style:{"text-align":"center"}},pr={href:"https://leetcode.cn/problems/multi-search-lcci",target:"_blank",rel:"noopener noreferrer"};function yr(xr,br){const l=d("RouterLink"),s=d("ExternalLinkIcon");return r(),i("div",null,[h,t("details",null,[g,u,t("p",null,[o(l,{to:"/tag/array.html"},{default:n(()=>[f]),_:1}),e(),o(l,{to:"/tag/matrix.html"},{default:n(()=>[m]),_:1}),e(),o(l,{to:"/tag/linked-list.html"},{default:n(()=>[p]),_:1}),e(),o(l,{to:"/tag/doubly-linked-list.html"},{default:n(()=>[y]),_:1}),e(),o(l,{to:"/tag/stack.html"},{default:n(()=>[x]),_:1}),e(),o(l,{to:"/tag/monotonic-stack.html"},{default:n(()=>[b]),_:1}),e(),o(l,{to:"/tag/queue.html"},{default:n(()=>[k]),_:1}),e(),o(l,{to:"/tag/monotonic-queue.html"},{default:n(()=>[w]),_:1}),e(),o(l,{to:"/tag/heap-priority-queue.html"},{default:n(()=>[v]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[I]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[q]),_:1}),e(),L,e(),o(l,{to:"/tag/tree.html"},{default:n(()=>[N]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[V]),_:1}),e(),o(l,{to:"/tag/binary-search-tree.html"},{default:n(()=>[B]),_:1}),e(),o(l,{to:"/tag/minimum-spanning-tree.html"},{default:n(()=>[C]),_:1}),e(),o(l,{to:"/tag/graph.html"},{default:n(()=>[E]),_:1}),e(),o(l,{to:"/tag/ordered-set.html"},{default:n(()=>[z]),_:1}),e(),o(l,{to:"/tag/topological-sort.html"},{default:n(()=>[R]),_:1}),e(),o(l,{to:"/tag/shortest-path.html"},{default:n(()=>[j]),_:1}),e(),o(l,{to:"/tag/strongly-connected-component.html"},{default:n(()=>[M]),_:1}),e(),o(l,{to:"/tag/eulerian-circuit.html"},{default:n(()=>[T]),_:1}),e(),o(l,{to:"/tag/biconnected-component.html"},{default:n(()=>[A]),_:1}),e(),o(l,{to:"/tag/union-find.html"},{default:n(()=>[D]),_:1}),e(),o(l,{to:"/tag/trie.html"},{default:n(()=>[F]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[G]),_:1}),e(),o(l,{to:"/tag/binary-indexed-tree.html"},{default:n(()=>[H]),_:1}),e(),o(l,{to:"/tag/suffix-array.html"},{default:n(()=>[J]),_:1})]),K,t("p",null,[o(l,{to:"/tag/enumeration.html"},{default:n(()=>[O]),_:1}),e(),o(l,{to:"/tag/recursion.html"},{default:n(()=>[P]),_:1}),e(),o(l,{to:"/tag/divide-and-conquer.html"},{default:n(()=>[Q]),_:1}),e(),o(l,{to:"/tag/backtracking.html"},{default:n(()=>[S]),_:1}),e(),o(l,{to:"/tag/greedy.html"},{default:n(()=>[U]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[W]),_:1}),e(),o(l,{to:"/tag/sorting.html"},{default:n(()=>[X]),_:1}),e(),o(l,{to:"/tag/bucket-sort.html"},{default:n(()=>[Y]),_:1}),e(),o(l,{to:"/tag/counting-sort.html"},{default:n(()=>[Z]),_:1}),e(),o(l,{to:"/tag/radix-sort.html"},{default:n(()=>[$]),_:1}),e(),o(l,{to:"/tag/merge-sort.html"},{default:n(()=>[tt]),_:1}),e(),o(l,{to:"/tag/quickselect.html"},{default:n(()=>[et]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[ot]),_:1}),e(),o(l,{to:"/tag/memoization.html"},{default:n(()=>[lt]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[nt]),_:1}),e(),o(l,{to:"/tag/breadth-first-search.html"},{default:n(()=>[st]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[dt]),_:1}),e(),o(l,{to:"/tag/bit-manipulation.html"},{default:n(()=>[_t]),_:1}),e(),o(l,{to:"/tag/prefix-sum.html"},{default:n(()=>[rt]),_:1}),e(),o(l,{to:"/tag/counting.html"},{default:n(()=>[it]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[at]),_:1}),e(),o(l,{to:"/tag/bitmask.html"},{default:n(()=>[ct]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[ht]),_:1}),e(),o(l,{to:"/tag/rolling-hash.html"},{default:n(()=>[gt]),_:1}),e(),o(l,{to:"/tag/line-sweep.html"},{default:n(()=>[ut]),_:1})]),ft,t("p",null,[o(l,{to:"/tag/math.html"},{default:n(()=>[mt]),_:1}),e(),o(l,{to:"/tag/number-theory.html"},{default:n(()=>[pt]),_:1}),e(),o(l,{to:"/tag/geometry.html"},{default:n(()=>[yt]),_:1}),e(),o(l,{to:"/tag/game-theory.html"},{default:n(()=>[xt]),_:1}),e(),o(l,{to:"/tag/simulation.html"},{default:n(()=>[bt]),_:1}),e(),o(l,{to:"/tag/combinatorics.html"},{default:n(()=>[kt]),_:1}),e(),o(l,{to:"/tag/randomized.html"},{default:n(()=>[wt]),_:1}),e(),o(l,{to:"/tag/probability-and-statistics.html"},{default:n(()=>[vt]),_:1}),e(),o(l,{to:"/tag/reservoir-sampling.html"},{default:n(()=>[It]),_:1}),e(),o(l,{to:"/tag/rejection-sampling.html"},{default:n(()=>[qt]),_:1}),e(),o(l,{to:"/tag/database.html"},{default:n(()=>[Lt]),_:1}),e(),o(l,{to:"/tag/design.html"},{default:n(()=>[Nt]),_:1}),e(),o(l,{to:"/tag/data-stream.html"},{default:n(()=>[Vt]),_:1}),e(),o(l,{to:"/tag/brainteaser.html"},{default:n(()=>[Bt]),_:1}),e(),o(l,{to:"/tag/interactive.html"},{default:n(()=>[Ct]),_:1}),e(),o(l,{to:"/tag/iterator.html"},{default:n(()=>[Et]),_:1}),e(),o(l,{to:"/tag/concurrency.html"},{default:n(()=>[zt]),_:1})])]),Rt,a(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Mt,Tt,t("td",At,[o(l,{to:"/problem/0028.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",Dt,[o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[Ft]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Gt]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Ht]),_:1})]),Jt,t("td",Kt,[t("a",Ot,[e("🀄️"),o(s)]),e(),t("a",Pt,[e("🔗"),o(s)])])]),t("tr",null,[Qt,St,Ut,t("td",Wt,[o(l,{to:"/tag/string.html"},{default:n(()=>[Xt]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Yt]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[Zt]),_:1}),e(),$t]),te,t("td",ee,[t("a",oe,[e("🀄️"),o(s)]),e(),t("a",le,[e("🔗"),o(s)])])]),t("tr",null,[ne,se,t("td",de,[o(l,{to:"/problem/0459.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",_e,[o(l,{to:"/tag/string.html"},{default:n(()=>[re]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[ie]),_:1})]),ae,t("td",ce,[t("a",he,[e("🀄️"),o(s)]),e(),t("a",ge,[e("🔗"),o(s)])])]),t("tr",null,[ue,fe,t("td",me,[o(l,{to:"/problem/0572.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",pe,[o(l,{to:"/tag/tree.html"},{default:n(()=>[ye]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[xe]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[be]),_:1}),e(),ke]),we,t("td",ve,[t("a",Ie,[e("🀄️"),o(s)]),e(),t("a",qe,[e("🔗"),o(s)])])]),t("tr",null,[Le,Ne,Ve,t("td",Be,[o(l,{to:"/tag/trie.html"},{default:n(()=>[Ce]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Ee]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[ze]),_:1}),e(),Re]),je,t("td",Me,[t("a",Te,[e("🀄️"),o(s)]),e(),t("a",Ae,[e("🔗"),o(s)])])]),t("tr",null,[De,Fe,Ge,t("td",He,[o(l,{to:"/tag/string.html"},{default:n(()=>[Je]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Ke]),_:1})]),Oe,t("td",Pe,[t("a",Qe,[e("🀄️"),o(s)]),e(),t("a",Se,[e("🔗"),o(s)])])]),t("tr",null,[Ue,We,Xe,t("td",Ye,[o(l,{to:"/tag/trie.html"},{default:n(()=>[Ze]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[$e]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[to]),_:1}),e(),eo]),oo,t("td",lo,[t("a",no,[e("🀄️"),o(s)]),e(),t("a",so,[e("🔗"),o(s)])])]),t("tr",null,[_o,ro,t("td",io,[o(l,{to:"/problem/0796.html"},{default:n(()=>[e("[✓]")]),_:1})]),t("td",ao,[o(l,{to:"/tag/string.html"},{default:n(()=>[co]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[ho]),_:1})]),go,t("td",uo,[t("a",fo,[e("🀄️"),o(s)]),e(),t("a",mo,[e("🔗"),o(s)])])]),t("tr",null,[po,yo,xo,t("td",bo,[o(l,{to:"/tag/trie.html"},{default:n(()=>[ko]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[wo]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[vo]),_:1}),e(),Io]),qo,t("td",Lo,[t("a",No,[e("🀄️"),o(s)]),e(),t("a",Vo,[e("🔗"),o(s)])])]),t("tr",null,[Bo,Co,Eo,t("td",zo,[o(l,{to:"/tag/string.html"},{default:n(()=>[Ro]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[jo]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[Mo]),_:1}),e(),To]),Ao,t("td",Do,[t("a",Fo,[e("🀄️"),o(s)]),e(),t("a",Go,[e("🔗"),o(s)])])]),t("tr",null,[Ho,Jo,Ko,t("td",Oo,[o(l,{to:"/tag/string.html"},{default:n(()=>[Po]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Qo]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[So]),_:1})]),Uo,t("td",Wo,[t("a",Xo,[e("🀄️"),o(s)]),e(),t("a",Yo,[e("🔗"),o(s)])])]),t("tr",null,[Zo,$o,tl,t("td",el,[o(l,{to:"/tag/array.html"},{default:n(()=>[ol]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[ll]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[nl]),_:1})]),sl,t("td",dl,[t("a",_l,[e("🀄️"),o(s)]),e(),t("a",rl,[e("🔗"),o(s)])])]),t("tr",null,[il,al,cl,t("td",hl,[o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[gl]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[ul]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[fl]),_:1})]),ml,t("td",pl,[t("a",yl,[e("🀄️"),o(s)]),e(),t("a",xl,[e("🔗"),o(s)])])]),t("tr",null,[bl,kl,wl,t("td",vl,[o(l,{to:"/tag/string.html"},{default:n(()=>[Il]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[ql]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Ll]),_:1})]),Nl,t("td",Vl,[t("a",Bl,[e("🀄️"),o(s)]),e(),t("a",Cl,[e("🔗"),o(s)])])]),t("tr",null,[El,zl,Rl,t("td",jl,[o(l,{to:"/tag/greedy.html"},{default:n(()=>[Ml]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Tl]),_:1}),e(),o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[Al]),_:1}),e(),Dl]),Fl,t("td",Gl,[t("a",Hl,[e("🀄️"),o(s)]),e(),t("a",Jl,[e("🔗"),o(s)])])]),t("tr",null,[Kl,Ol,Pl,t("td",Ql,[o(l,{to:"/tag/array.html"},{default:n(()=>[Sl]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Ul]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Wl]),_:1})]),Xl,t("td",Yl,[t("a",Zl,[e("🀄️"),o(s)]),e(),t("a",$l,[e("🔗"),o(s)])])]),t("tr",null,[tn,en,on,t("td",ln,[o(l,{to:"/tag/string.html"},{default:n(()=>[nn]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[sn]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[dn]),_:1}),e(),_n]),rn,t("td",an,[t("a",cn,[e("🀄️"),o(s)]),e(),t("a",hn,[e("🔗"),o(s)])])]),t("tr",null,[gn,un,fn,t("td",mn,[o(l,{to:"/tag/array.html"},{default:n(()=>[pn]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[yn]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[xn]),_:1}),e(),bn]),kn,t("td",wn,[t("a",vn,[e("🀄️"),o(s)]),e(),t("a",In,[e("🔗"),o(s)])])]),t("tr",null,[qn,Ln,Nn,t("td",Vn,[o(l,{to:"/tag/string.html"},{default:n(()=>[Bn]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Cn]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[En]),_:1}),e(),zn]),Rn,t("td",jn,[t("a",Mn,[e("🀄️"),o(s)]),e(),t("a",Tn,[e("🔗"),o(s)])])]),t("tr",null,[An,Dn,Fn,t("td",Gn,[o(l,{to:"/tag/math.html"},{default:n(()=>[Hn]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Jn]),_:1}),e(),o(l,{to:"/tag/dynamic-programming.html"},{default:n(()=>[Kn]),_:1}),e(),On]),Pn,t("td",Qn,[t("a",Sn,[e("🀄️"),o(s)]),e(),t("a",Un,[e("🔗"),o(s)])])]),t("tr",null,[Wn,Xn,Yn,t("td",Zn,[o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[$n]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[ts]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[es]),_:1}),e(),os]),ls,t("td",ns,[t("a",ss,[e("🀄️"),o(s)]),e(),t("a",ds,[e("🔗"),o(s)])])]),t("tr",null,[_s,rs,is,t("td",as,[o(l,{to:"/tag/two-pointers.html"},{default:n(()=>[cs]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[hs]),_:1}),e(),o(l,{to:"/tag/binary-search.html"},{default:n(()=>[gs]),_:1}),e(),us]),fs,t("td",ms,[t("a",ps,[e("🀄️"),o(s)]),e(),t("a",ys,[e("🔗"),o(s)])])]),t("tr",null,[xs,bs,ks,t("td",ws,[o(l,{to:"/tag/array.html"},{default:n(()=>[vs]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Is]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[qs]),_:1}),e(),Ls]),Ns,t("td",Vs,[t("a",Bs,[e("🀄️"),o(s)]),e(),t("a",Cs,[e("🔗"),o(s)])])]),t("tr",null,[Es,zs,Rs,t("td",js,[o(l,{to:"/tag/string.html"},{default:n(()=>[Ms]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Ts]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[As]),_:1}),e(),Ds]),Fs,t("td",Gs,[t("a",Hs,[e("🀄️"),o(s)]),e(),t("a",Js,[e("🔗"),o(s)])])]),t("tr",null,[Ks,Os,Ps,t("td",Qs,[o(l,{to:"/tag/string.html"},{default:n(()=>[Ss]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Us]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[Ws]),_:1}),e(),Xs]),Ys,t("td",Zs,[t("a",$s,[e("🀄️"),o(s)]),e(),t("a",td,[e("🔗"),o(s)])])]),t("tr",null,[ed,od,ld,t("td",nd,[o(l,{to:"/tag/array.html"},{default:n(()=>[sd]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[dd]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[_d]),_:1}),e(),rd]),id,t("td",ad,[t("a",cd,[e("🀄️"),o(s)]),e(),t("a",hd,[e("🔗"),o(s)])])]),t("tr",null,[gd,ud,fd,t("td",md,[o(l,{to:"/tag/array.html"},{default:n(()=>[pd]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[yd]),_:1}),e(),o(l,{to:"/tag/hash-function.html"},{default:n(()=>[xd]),_:1}),e(),bd]),kd,t("td",wd,[t("a",vd,[e("🀄️"),o(s)]),e(),t("a",Id,[e("🔗"),o(s)])])]),t("tr",null,[qd,Ld,Nd,t("td",Vd,[o(l,{to:"/tag/array.html"},{default:n(()=>[Bd]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Cd]),_:1}),e(),o(l,{to:"/tag/sliding-window.html"},{default:n(()=>[Ed]),_:1}),e(),zd]),Rd,t("td",jd,[t("a",Md,[e("🀄️"),o(s)]),e(),t("a",Td,[e("🔗"),o(s)])])]),t("tr",null,[Ad,Dd,Fd,t("td",Gd,[o(l,{to:"/tag/trie.html"},{default:n(()=>[Hd]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[Jd]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[Kd]),_:1}),e(),Od]),Pd,t("td",Qd,[t("a",Sd,[e("🀄️"),o(s)]),e(),t("a",Ud,[e("🔗"),o(s)])])]),t("tr",null,[Wd,Xd,Yd,t("td",Zd,[o(l,{to:"/tag/trie.html"},{default:n(()=>[$d]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[t_]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[e_]),_:1}),e(),o_]),l_,t("td",n_,[t("a",s_,[e("🀄️"),o(s)]),e(),t("a",d_,[e("🔗"),o(s)])])]),t("tr",null,[__,r_,i_,t("td",a_,[o(l,{to:"/tag/trie.html"},{default:n(()=>[c_]),_:1}),e(),o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[h_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[g_]),_:1}),e(),u_]),f_,t("td",m_,[t("a",p_,[e("🀄️"),o(s)]),e(),t("a",y_,[e("🔗"),o(s)])])]),t("tr",null,[x_,b_,k_,t("td",w_,[o(l,{to:"/tag/segment-tree.html"},{default:n(()=>[v_]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[I_]),_:1}),e(),o(l,{to:"/tag/string.html"},{default:n(()=>[q_]),_:1}),e(),L_]),N_,t("td",V_,[t("a",B_,[e("🀄️"),o(s)]),e(),t("a",C_,[e("🔗"),o(s)])])]),t("tr",null,[E_,z_,R_,t("td",j_,[o(l,{to:"/tag/string.html"},{default:n(()=>[M_]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[T_]),_:1})]),A_,t("td",D_,[t("a",F_,[e("🀄️"),o(s)]),e(),t("a",G_,[e("🔗"),o(s)])])]),t("tr",null,[H_,J_,K_,t("td",O_,[o(l,{to:"/tag/string.html"},{default:n(()=>[P_]),_:1}),e(),o(l,{to:"/tag/string-matching.html"},{default:n(()=>[Q_]),_:1})]),S_,t("td",U_,[t("a",W_,[e("🀄️"),o(s)])])]),t("tr",null,[X_,Y_,Z_,t("td",$_,[o(l,{to:"/tag/tree.html"},{default:n(()=>[tr]),_:1}),e(),o(l,{to:"/tag/depth-first-search.html"},{default:n(()=>[er]),_:1}),e(),o(l,{to:"/tag/binary-tree.html"},{default:n(()=>[or]),_:1}),e(),lr]),nr,t("td",sr,[t("a",dr,[e("🀄️"),o(s)])])]),t("tr",null,[_r,rr,ir,t("td",ar,[o(l,{to:"/tag/trie.html"},{default:n(()=>[cr]),_:1}),e(),o(l,{to:"/tag/array.html"},{default:n(()=>[hr]),_:1}),e(),o(l,{to:"/tag/hash-table.html"},{default:n(()=>[gr]),_:1}),e(),ur]),fr,t("td",mr,[t("a",pr,[e("🀄️"),o(s)])])])])])])}const wr=_(c,[["render",yr],["__file","string-matching.html.vue"]]);export{wr as default};
