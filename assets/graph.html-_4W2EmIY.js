import{_ as i,r as _,o as a,c,a as t,b as e,w as o,d as l,f as r}from"./app-ynO5B_DP.js";const h={},u=t("h1",{id:"图",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#图","aria-hidden":"true"},"#"),l(" 图")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),p=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),H=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),L=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),P=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),E=t("code",null,"最小生成树",-1),O=t("span",{class:"blue"},"图",-1),j=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),D=t("code",null,"最短路",-1),J=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),B=t("code",null,"并查集",-1),N=t("code",null,"字典树",-1),T=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),W=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),R=t("code",null,"枚举",-1),U=t("code",null,"递归",-1),X=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),G=t("code",null,"贪心",-1),S=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),at=t("code",null,"位运算",-1),ct=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),pt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Ht=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Lt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Pt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Et=t("code",null,"交互",-1),Ot=t("code",null,"迭代器",-1),jt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Dt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Jt=t("td",{style:{"text-align":"center"}},"133",-1),Kt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},Bt={style:{"text-align":"center"}},Nt={href:"/problem/0133",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"left"}},Ft=t("code",null,"深度优先搜索",-1),Wt=t("code",null,"广度优先搜索",-1),Qt=t("code",null,"图",-1),Rt=t("code",null,"1+",-1),Ut={style:{"text-align":"left"}},Xt=t("td",{style:{"text-align":"center"}},"207",-1),Zt={style:{"text-align":"left"}},Gt={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},St={style:{"text-align":"center"}},Yt={href:"/problem/0207",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"深度优先搜索",-1),ee=t("code",null,"广度优先搜索",-1),le=t("code",null,"图",-1),oe=t("code",null,"1+",-1),ne={style:{"text-align":"left"}},se=t("td",{style:{"text-align":"center"}},"210",-1),de={style:{"text-align":"left"}},_e={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},ie={style:{"text-align":"center"}},ae={href:"/problem/0210",target:"_blank",rel:"noopener noreferrer"},ce={style:{"text-align":"left"}},re=t("code",null,"深度优先搜索",-1),he=t("code",null,"广度优先搜索",-1),ue=t("code",null,"图",-1),fe=t("code",null,"1+",-1),ge={style:{"text-align":"left"}},me=t("td",{style:{"text-align":"center"}},"261",-1),ye={style:{"text-align":"left"}},pe={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},xe=t("td",{style:{"text-align":"center"}},null,-1),be={style:{"text-align":"left"}},ke=t("code",null,"深度优先搜索",-1),He=t("code",null,"广度优先搜索",-1),Me=t("code",null,"并查集",-1),Ie=t("code",null,"1+",-1),we={style:{"text-align":"left"}},ve=t("td",{style:{"text-align":"center"}},"269",-1),qe={style:{"text-align":"left"}},Le={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},ze=t("td",{style:{"text-align":"center"}},null,-1),Pe={style:{"text-align":"left"}},Ce=t("code",null,"深度优先搜索",-1),Ee=t("code",null,"广度优先搜索",-1),Oe=t("code",null,"图",-1),je=t("code",null,"3+",-1),Ve={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"277",-1),Je={style:{"text-align":"left"}},Ke={href:"https://leetcode.com/problems/find-the-celebrity",target:"_blank",rel:"noopener noreferrer"},Ae=t("td",{style:{"text-align":"center"}},null,-1),Be={style:{"text-align":"left"}},Ne=t("code",null,"图",-1),Te=t("code",null,"双指针",-1),Fe=t("code",null,"交互",-1),We={style:{"text-align":"left"}},Qe=t("td",{style:{"text-align":"center"}},"310",-1),Re={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},Xe=t("td",{style:{"text-align":"center"}},null,-1),Ze={style:{"text-align":"left"}},Ge=t("code",null,"深度优先搜索",-1),Se=t("code",null,"广度优先搜索",-1),Ye=t("code",null,"图",-1),$e=t("code",null,"1+",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"323",-1),ll={style:{"text-align":"left"}},ol={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},null,-1),sl={style:{"text-align":"left"}},dl=t("code",null,"深度优先搜索",-1),_l=t("code",null,"广度优先搜索",-1),il=t("code",null,"并查集",-1),al=t("code",null,"1+",-1),cl={style:{"text-align":"left"}},rl=t("td",{style:{"text-align":"center"}},"329",-1),hl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},fl=t("td",{style:{"text-align":"center"}},null,-1),gl={style:{"text-align":"left"}},ml=t("code",null,"深度优先搜索",-1),yl=t("code",null,"广度优先搜索",-1),pl=t("code",null,"图",-1),xl=t("code",null,"5+",-1),bl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"center"}},"332",-1),Hl={style:{"text-align":"left"}},Ml={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},Il=t("td",{style:{"text-align":"center"}},null,-1),wl={style:{"text-align":"left"}},vl=t("code",null,"深度优先搜索",-1),ql=t("code",null,"图",-1),Ll=t("code",null,"欧拉回路",-1),zl={style:{"text-align":"left"}},Pl=t("td",{style:{"text-align":"center"}},"399",-1),Cl={style:{"text-align":"left"}},El={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Ol={style:{"text-align":"center"}},jl={href:"/problem/0399",target:"_blank",rel:"noopener noreferrer"},Vl={style:{"text-align":"left"}},Dl=t("code",null,"深度优先搜索",-1),Jl=t("code",null,"广度优先搜索",-1),Kl=t("code",null,"并查集",-1),Al=t("code",null,"4+",-1),Bl={style:{"text-align":"left"}},Nl=t("td",{style:{"text-align":"center"}},"444",-1),Tl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/sequence-reconstruction",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},null,-1),Ql={style:{"text-align":"left"}},Rl=t("code",null,"图",-1),Ul=t("code",null,"拓扑排序",-1),Xl=t("code",null,"数组",-1),Zl={style:{"text-align":"left"}},Gl=t("td",{style:{"text-align":"center"}},"499",-1),Sl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},$l=t("td",{style:{"text-align":"center"}},null,-1),to={style:{"text-align":"left"}},eo=t("code",null,"深度优先搜索",-1),lo=t("code",null,"广度优先搜索",-1),oo=t("code",null,"图",-1),no=t("code",null,"5+",-1),so={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"505",-1),io={style:{"text-align":"left"}},ao={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},co=t("td",{style:{"text-align":"center"}},null,-1),ro={style:{"text-align":"left"}},ho=t("code",null,"深度优先搜索",-1),uo=t("code",null,"广度优先搜索",-1),fo=t("code",null,"图",-1),go=t("code",null,"4+",-1),mo={style:{"text-align":"left"}},yo=t("td",{style:{"text-align":"center"}},"547",-1),po={style:{"text-align":"left"}},xo={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},bo=t("td",{style:{"text-align":"center"}},null,-1),ko={style:{"text-align":"left"}},Ho=t("code",null,"深度优先搜索",-1),Mo=t("code",null,"广度优先搜索",-1),Io=t("code",null,"并查集",-1),wo=t("code",null,"1+",-1),vo={style:{"text-align":"left"}},qo=t("td",{style:{"text-align":"center"}},"631",-1),Lo={style:{"text-align":"left"}},zo={href:"https://leetcode.com/problems/design-excel-sum-formula",target:"_blank",rel:"noopener noreferrer"},Po=t("td",{style:{"text-align":"center"}},null,-1),Co={style:{"text-align":"left"}},Eo=t("code",null,"图",-1),Oo=t("code",null,"设计",-1),jo=t("code",null,"拓扑排序",-1),Vo=t("code",null,"2+",-1),Do={style:{"text-align":"left"}},Jo=t("td",{style:{"text-align":"center"}},"684",-1),Ko={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},null,-1),No={style:{"text-align":"left"}},To=t("code",null,"深度优先搜索",-1),Fo=t("code",null,"广度优先搜索",-1),Wo=t("code",null,"并查集",-1),Qo=t("code",null,"1+",-1),Ro={style:{"text-align":"left"}},Uo=t("td",{style:{"text-align":"center"}},"685",-1),Xo={style:{"text-align":"left"}},Zo={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Go=t("td",{style:{"text-align":"center"}},null,-1),So={style:{"text-align":"left"}},Yo=t("code",null,"深度优先搜索",-1),$o=t("code",null,"广度优先搜索",-1),tn=t("code",null,"并查集",-1),en=t("code",null,"1+",-1),ln={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"743",-1),nn={style:{"text-align":"left"}},sn={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},null,-1),_n={style:{"text-align":"left"}},an=t("code",null,"深度优先搜索",-1),cn=t("code",null,"广度优先搜索",-1),rn=t("code",null,"图",-1),hn=t("code",null,"2+",-1),un={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"753",-1),gn={style:{"text-align":"left"}},mn={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},yn=t("td",{style:{"text-align":"center"}},null,-1),pn={style:{"text-align":"left"}},xn=t("code",null,"深度优先搜索",-1),bn=t("code",null,"图",-1),kn=t("code",null,"欧拉回路",-1),Hn={style:{"text-align":"left"}},Mn=t("td",{style:{"text-align":"center"}},"765",-1),In={style:{"text-align":"left"}},wn={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},vn=t("td",{style:{"text-align":"center"}},null,-1),qn={style:{"text-align":"left"}},Ln=t("code",null,"贪心",-1),zn=t("code",null,"深度优先搜索",-1),Pn=t("code",null,"广度优先搜索",-1),Cn=t("code",null,"2+",-1),En={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"center"}},"785",-1),jn={style:{"text-align":"left"}},Vn={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},Dn=t("td",{style:{"text-align":"center"}},null,-1),Jn={style:{"text-align":"left"}},Kn=t("code",null,"深度优先搜索",-1),An=t("code",null,"广度优先搜索",-1),Bn=t("code",null,"并查集",-1),Nn=t("code",null,"1+",-1),Tn={style:{"text-align":"left"}},Fn=t("td",{style:{"text-align":"center"}},"787",-1),Wn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},null,-1),Un={style:{"text-align":"left"}},Xn=t("code",null,"深度优先搜索",-1),Zn=t("code",null,"广度优先搜索",-1),Gn=t("code",null,"图",-1),Sn=t("code",null,"3+",-1),Yn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"797",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},null,-1),os={style:{"text-align":"left"}},ns=t("code",null,"深度优先搜索",-1),ss=t("code",null,"广度优先搜索",-1),ds=t("code",null,"图",-1),_s=t("code",null,"1+",-1),is={style:{"text-align":"left"}},as=t("td",{style:{"text-align":"center"}},"802",-1),cs={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},hs=t("td",{style:{"text-align":"center"}},null,-1),us={style:{"text-align":"left"}},fs=t("code",null,"深度优先搜索",-1),gs=t("code",null,"广度优先搜索",-1),ms=t("code",null,"图",-1),ys=t("code",null,"1+",-1),ps={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"834",-1),bs={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},Hs=t("td",{style:{"text-align":"center"}},null,-1),Ms={style:{"text-align":"left"}},Is=t("code",null,"树",-1),ws=t("code",null,"深度优先搜索",-1),vs=t("code",null,"图",-1),qs=t("code",null,"1+",-1),Ls={style:{"text-align":"left"}},zs=t("td",{style:{"text-align":"center"}},"841",-1),Ps={style:{"text-align":"left"}},Cs={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},Es=t("td",{style:{"text-align":"center"}},null,-1),Os={style:{"text-align":"left"}},js=t("code",null,"深度优先搜索",-1),Vs=t("code",null,"广度优先搜索",-1),Ds=t("code",null,"图",-1),Js={style:{"text-align":"left"}},Ks=t("td",{style:{"text-align":"center"}},"847",-1),As={style:{"text-align":"left"}},Bs={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),Ts={style:{"text-align":"left"}},Fs=t("code",null,"位运算",-1),Ws=t("code",null,"广度优先搜索",-1),Qs=t("code",null,"图",-1),Rs=t("code",null,"2+",-1),Us={style:{"text-align":"left"}},Xs=t("td",{style:{"text-align":"center"}},"851",-1),Zs={style:{"text-align":"left"}},Gs={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},Ss=t("td",{style:{"text-align":"center"}},null,-1),Ys={style:{"text-align":"left"}},$s=t("code",null,"深度优先搜索",-1),td=t("code",null,"图",-1),ed=t("code",null,"拓扑排序",-1),ld=t("code",null,"1+",-1),od={style:{"text-align":"left"}},nd=t("td",{style:{"text-align":"center"}},"882",-1),sd={style:{"text-align":"left"}},dd={href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph",target:"_blank",rel:"noopener noreferrer"},_d=t("td",{style:{"text-align":"center"}},null,-1),id={style:{"text-align":"left"}},ad=t("code",null,"图",-1),cd=t("code",null,"最短路",-1),rd=t("code",null,"堆（优先队列）",-1),hd={style:{"text-align":"left"}},ud=t("td",{style:{"text-align":"center"}},"886",-1),fd={style:{"text-align":"left"}},gd={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},md=t("td",{style:{"text-align":"center"}},null,-1),yd={style:{"text-align":"left"}},pd=t("code",null,"深度优先搜索",-1),xd=t("code",null,"广度优先搜索",-1),bd=t("code",null,"并查集",-1),kd=t("code",null,"1+",-1),Hd={style:{"text-align":"left"}},Md=t("td",{style:{"text-align":"center"}},"913",-1),Id={style:{"text-align":"left"}},wd={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},vd=t("td",{style:{"text-align":"center"}},null,-1),qd={style:{"text-align":"left"}},Ld=t("code",null,"图",-1),zd=t("code",null,"拓扑排序",-1),Pd=t("code",null,"记忆化搜索",-1),Cd=t("code",null,"3+",-1),Ed={style:{"text-align":"left"}},Od=t("td",{style:{"text-align":"center"}},"924",-1),jd={style:{"text-align":"left"}},Vd={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},Dd=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},Kd=t("code",null,"深度优先搜索",-1),Ad=t("code",null,"广度优先搜索",-1),Bd=t("code",null,"并查集",-1),Nd=t("code",null,"3+",-1),Td={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"928",-1),Wd={style:{"text-align":"left"}},Qd={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},Rd=t("td",{style:{"text-align":"center"}},null,-1),Ud={style:{"text-align":"left"}},Xd=t("code",null,"深度优先搜索",-1),Zd=t("code",null,"广度优先搜索",-1),Gd=t("code",null,"并查集",-1),Sd=t("code",null,"3+",-1),Yd={style:{"text-align":"left"}},$d=t("td",{style:{"text-align":"center"}},"947",-1),t_={style:{"text-align":"left"}},e_={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},l_=t("td",{style:{"text-align":"center"}},null,-1),o_={style:{"text-align":"left"}},n_=t("code",null,"深度优先搜索",-1),s_=t("code",null,"并查集",-1),d_=t("code",null,"图",-1),__=t("code",null,"1+",-1),i_={style:{"text-align":"left"}},a_=t("td",{style:{"text-align":"center"}},"990",-1),c_={style:{"text-align":"left"}},r_={href:"https://leetcode.com/problems/satisfiability-of-equality-equations",target:"_blank",rel:"noopener noreferrer"},h_=t("td",{style:{"text-align":"center"}},null,-1),u_={style:{"text-align":"left"}},f_=t("code",null,"并查集",-1),g_=t("code",null,"图",-1),m_=t("code",null,"数组",-1),y_=t("code",null,"1+",-1),p_={style:{"text-align":"left"}},x_=t("td",{style:{"text-align":"center"}},"997",-1),b_={style:{"text-align":"left"}},k_={href:"https://leetcode.com/problems/find-the-town-judge",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},null,-1),M_={style:{"text-align":"left"}},I_=t("code",null,"图",-1),w_=t("code",null,"数组",-1),v_=t("code",null,"哈希表",-1),q_={style:{"text-align":"left"}},L_=t("td",{style:{"text-align":"center"}},"1042",-1),z_={style:{"text-align":"left"}},P_={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},C_=t("td",{style:{"text-align":"center"}},null,-1),E_={style:{"text-align":"left"}},O_=t("code",null,"深度优先搜索",-1),j_=t("code",null,"广度优先搜索",-1),V_=t("code",null,"图",-1),D_={style:{"text-align":"left"}},J_=t("td",{style:{"text-align":"center"}},"1059",-1),K_={style:{"text-align":"left"}},A_={href:"https://leetcode.com/problems/all-paths-from-source-lead-to-destination",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},null,-1),N_={style:{"text-align":"left"}},T_=t("code",null,"图",-1),F_=t("code",null,"拓扑排序",-1),W_={style:{"text-align":"left"}},Q_=t("td",{style:{"text-align":"center"}},"1129",-1),R_={style:{"text-align":"left"}},U_={href:"https://leetcode.com/problems/shortest-path-with-alternating-colors",target:"_blank",rel:"noopener noreferrer"},X_=t("td",{style:{"text-align":"center"}},null,-1),Z_={style:{"text-align":"left"}},G_=t("code",null,"广度优先搜索",-1),S_=t("code",null,"图",-1),Y_={style:{"text-align":"left"}},$_=t("td",{style:{"text-align":"center"}},"1135",-1),ti={style:{"text-align":"left"}},ei={href:"https://leetcode.com/problems/connecting-cities-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},li=t("td",{style:{"text-align":"center"}},null,-1),oi={style:{"text-align":"left"}},ni=t("code",null,"并查集",-1),si=t("code",null,"图",-1),di=t("code",null,"最小生成树",-1),_i=t("code",null,"1+",-1),ii={style:{"text-align":"left"}},ai=t("td",{style:{"text-align":"center"}},"1136",-1),ci={style:{"text-align":"left"}},ri={href:"https://leetcode.com/problems/parallel-courses",target:"_blank",rel:"noopener noreferrer"},hi=t("td",{style:{"text-align":"center"}},null,-1),ui={style:{"text-align":"left"}},fi=t("code",null,"图",-1),gi=t("code",null,"拓扑排序",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"1168",-1),pi={style:{"text-align":"left"}},xi={href:"https://leetcode.com/problems/optimize-water-distribution-in-a-village",target:"_blank",rel:"noopener noreferrer"},bi=t("td",{style:{"text-align":"center"}},null,-1),ki={style:{"text-align":"left"}},Hi=t("code",null,"并查集",-1),Mi=t("code",null,"图",-1),Ii=t("code",null,"最小生成树",-1),wi=t("code",null,"1+",-1),vi={style:{"text-align":"left"}},qi=t("td",{style:{"text-align":"center"}},"1192",-1),Li={style:{"text-align":"left"}},zi={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},Pi=t("td",{style:{"text-align":"center"}},null,-1),Ci={style:{"text-align":"left"}},Ei=t("code",null,"深度优先搜索",-1),Oi=t("code",null,"图",-1),ji=t("code",null,"双连通分量",-1),Vi={style:{"text-align":"left"}},Di=t("td",{style:{"text-align":"center"}},"1203",-1),Ji={style:{"text-align":"left"}},Ki={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},Ai=t("td",{style:{"text-align":"center"}},null,-1),Bi={style:{"text-align":"left"}},Ni=t("code",null,"深度优先搜索",-1),Ti=t("code",null,"广度优先搜索",-1),Fi=t("code",null,"图",-1),Wi=t("code",null,"1+",-1),Qi={style:{"text-align":"left"}},Ri=t("td",{style:{"text-align":"center"}},"1245",-1),Ui={style:{"text-align":"left"}},Xi={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Zi=t("td",{style:{"text-align":"center"}},null,-1),Gi={style:{"text-align":"left"}},Si=t("code",null,"树",-1),Yi=t("code",null,"深度优先搜索",-1),$i=t("code",null,"广度优先搜索",-1),ta=t("code",null,"2+",-1),ea={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"1298",-1),oa={style:{"text-align":"left"}},na={href:"https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes",target:"_blank",rel:"noopener noreferrer"},sa=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"广度优先搜索",-1),ia=t("code",null,"图",-1),aa=t("code",null,"数组",-1),ca={style:{"text-align":"left"}},ra=t("td",{style:{"text-align":"center"}},"1311",-1),ha={style:{"text-align":"left"}},ua={href:"https://leetcode.com/problems/get-watched-videos-by-your-friends",target:"_blank",rel:"noopener noreferrer"},fa=t("td",{style:{"text-align":"center"}},null,-1),ga={style:{"text-align":"left"}},ma=t("code",null,"广度优先搜索",-1),ya=t("code",null,"图",-1),pa=t("code",null,"数组",-1),xa=t("code",null,"2+",-1),ba={style:{"text-align":"left"}},ka=t("td",{style:{"text-align":"center"}},"1319",-1),Ha={style:{"text-align":"left"}},Ma={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},Ia=t("td",{style:{"text-align":"center"}},null,-1),wa={style:{"text-align":"left"}},va=t("code",null,"深度优先搜索",-1),qa=t("code",null,"广度优先搜索",-1),La=t("code",null,"并查集",-1),za=t("code",null,"1+",-1),Pa={style:{"text-align":"left"}},Ca=t("td",{style:{"text-align":"center"}},"1334",-1),Ea={style:{"text-align":"left"}},Oa={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},ja=t("td",{style:{"text-align":"center"}},null,-1),Va={style:{"text-align":"left"}},Da=t("code",null,"图",-1),Ja=t("code",null,"动态规划",-1),Ka=t("code",null,"最短路",-1),Aa={style:{"text-align":"left"}},Ba=t("td",{style:{"text-align":"center"}},"1361",-1),Na={style:{"text-align":"left"}},Ta={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},Fa=t("td",{style:{"text-align":"center"}},null,-1),Wa={style:{"text-align":"left"}},Qa=t("code",null,"树",-1),Ra=t("code",null,"深度优先搜索",-1),Ua=t("code",null,"广度优先搜索",-1),Xa=t("code",null,"3+",-1),Za={style:{"text-align":"left"}},Ga=t("td",{style:{"text-align":"center"}},"1368",-1),Sa={style:{"text-align":"left"}},Ya={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},$a=t("td",{style:{"text-align":"center"}},null,-1),tc={style:{"text-align":"left"}},ec=t("code",null,"广度优先搜索",-1),lc=t("code",null,"图",-1),oc=t("code",null,"数组",-1),nc=t("code",null,"3+",-1),sc={style:{"text-align":"left"}},dc=t("td",{style:{"text-align":"center"}},"1377",-1),_c={style:{"text-align":"left"}},ic={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},ac=t("td",{style:{"text-align":"center"}},null,-1),cc={style:{"text-align":"left"}},rc=t("code",null,"树",-1),hc=t("code",null,"深度优先搜索",-1),uc=t("code",null,"广度优先搜索",-1),fc=t("code",null,"1+",-1),gc={style:{"text-align":"left"}},mc=t("td",{style:{"text-align":"center"}},"1462",-1),yc={style:{"text-align":"left"}},pc={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},xc=t("td",{style:{"text-align":"center"}},null,-1),bc={style:{"text-align":"left"}},kc=t("code",null,"深度优先搜索",-1),Hc=t("code",null,"广度优先搜索",-1),Mc=t("code",null,"图",-1),Ic=t("code",null,"1+",-1),wc={style:{"text-align":"left"}},vc=t("td",{style:{"text-align":"center"}},"1466",-1),qc={style:{"text-align":"left"}},Lc={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},zc=t("td",{style:{"text-align":"center"}},null,-1),Pc={style:{"text-align":"left"}},Cc=t("code",null,"深度优先搜索",-1),Ec=t("code",null,"广度优先搜索",-1),Oc=t("code",null,"图",-1),jc={style:{"text-align":"left"}},Vc=t("td",{style:{"text-align":"center"}},"1489",-1),Dc={style:{"text-align":"left"}},Jc={href:"https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",target:"_blank",rel:"noopener noreferrer"},Kc=t("td",{style:{"text-align":"center"}},null,-1),Ac={style:{"text-align":"left"}},Bc=t("code",null,"并查集",-1),Nc=t("code",null,"图",-1),Tc=t("code",null,"最小生成树",-1),Fc=t("code",null,"2+",-1),Wc={style:{"text-align":"left"}},Qc=t("td",{style:{"text-align":"center"}},"1494",-1),Rc={style:{"text-align":"left"}},Uc={href:"https://leetcode.com/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},Xc=t("td",{style:{"text-align":"center"}},null,-1),Zc={style:{"text-align":"left"}},Gc=t("code",null,"位运算",-1),Sc=t("code",null,"图",-1),Yc=t("code",null,"动态规划",-1),$c=t("code",null,"1+",-1),tr={style:{"text-align":"left"}},er=t("td",{style:{"text-align":"center"}},"1514",-1),lr={style:{"text-align":"left"}},or={href:"https://leetcode.com/problems/path-with-maximum-probability",target:"_blank",rel:"noopener noreferrer"},nr=t("td",{style:{"text-align":"center"}},null,-1),sr={style:{"text-align":"left"}},dr=t("code",null,"图",-1),_r=t("code",null,"数组",-1),ir=t("code",null,"最短路",-1),ar=t("code",null,"1+",-1),cr={style:{"text-align":"left"}},rr=t("td",{style:{"text-align":"center"}},"1548",-1),hr={style:{"text-align":"left"}},ur={href:"https://leetcode.com/problems/the-most-similar-path-in-a-graph",target:"_blank",rel:"noopener noreferrer"},fr=t("td",{style:{"text-align":"center"}},null,-1),gr={style:{"text-align":"left"}},mr=t("code",null,"图",-1),yr=t("code",null,"动态规划",-1),pr={style:{"text-align":"left"}},xr=t("td",{style:{"text-align":"center"}},"1557",-1),br={style:{"text-align":"left"}},kr={href:"https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes",target:"_blank",rel:"noopener noreferrer"},Hr=t("td",{style:{"text-align":"center"}},null,-1),Mr={style:{"text-align":"left"}},Ir=t("code",null,"图",-1),wr={style:{"text-align":"left"}},vr=t("td",{style:{"text-align":"center"}},"1579",-1),qr={style:{"text-align":"left"}},Lr={href:"https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable",target:"_blank",rel:"noopener noreferrer"},zr=t("td",{style:{"text-align":"center"}},null,-1),Pr={style:{"text-align":"left"}},Cr=t("code",null,"并查集",-1),Er=t("code",null,"图",-1),Or={style:{"text-align":"left"}},jr=t("td",{style:{"text-align":"center"}},"1584",-1),Vr={style:{"text-align":"left"}},Dr={href:"https://leetcode.com/problems/min-cost-to-connect-all-points",target:"_blank",rel:"noopener noreferrer"},Jr=t("td",{style:{"text-align":"center"}},null,-1),Kr={style:{"text-align":"left"}},Ar=t("code",null,"并查集",-1),Br=t("code",null,"图",-1),Nr=t("code",null,"数组",-1),Tr=t("code",null,"1+",-1),Fr={style:{"text-align":"left"}},Wr=t("td",{style:{"text-align":"center"}},"1591",-1),Qr={style:{"text-align":"left"}},Rr={href:"https://leetcode.com/problems/strange-printer-ii",target:"_blank",rel:"noopener noreferrer"},Ur=t("td",{style:{"text-align":"center"}},null,-1),Xr={style:{"text-align":"left"}},Zr=t("code",null,"图",-1),Gr=t("code",null,"拓扑排序",-1),Sr=t("code",null,"数组",-1),Yr=t("code",null,"1+",-1),$r={style:{"text-align":"left"}},th=t("td",{style:{"text-align":"center"}},"1615",-1),eh={style:{"text-align":"left"}},lh={href:"https://leetcode.com/problems/maximal-network-rank",target:"_blank",rel:"noopener noreferrer"},oh=t("td",{style:{"text-align":"center"}},null,-1),nh={style:{"text-align":"left"}},sh=t("code",null,"图",-1),dh={style:{"text-align":"left"}},_h=t("td",{style:{"text-align":"center"}},"1632",-1),ih={style:{"text-align":"left"}},ah={href:"https://leetcode.com/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},ch=t("td",{style:{"text-align":"center"}},null,-1),rh={style:{"text-align":"left"}},hh=t("code",null,"并查集",-1),uh=t("code",null,"图",-1),fh=t("code",null,"拓扑排序",-1),gh=t("code",null,"3+",-1),mh={style:{"text-align":"left"}},yh=t("td",{style:{"text-align":"center"}},"1697",-1),ph={style:{"text-align":"left"}},xh={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths",target:"_blank",rel:"noopener noreferrer"},bh=t("td",{style:{"text-align":"center"}},null,-1),kh={style:{"text-align":"left"}},Hh=t("code",null,"并查集",-1),Mh=t("code",null,"图",-1),Ih=t("code",null,"数组",-1),wh=t("code",null,"2+",-1),vh={style:{"text-align":"left"}},qh=t("td",{style:{"text-align":"center"}},"1719",-1),Lh={style:{"text-align":"left"}},zh={href:"https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree",target:"_blank",rel:"noopener noreferrer"},Ph=t("td",{style:{"text-align":"center"}},null,-1),Ch={style:{"text-align":"left"}},Eh=t("code",null,"树",-1),Oh=t("code",null,"图",-1),jh={style:{"text-align":"left"}},Vh=t("td",{style:{"text-align":"center"}},"1724",-1),Dh={style:{"text-align":"left"}},Jh={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths-ii",target:"_blank",rel:"noopener noreferrer"},Kh=t("td",{style:{"text-align":"center"}},null,-1),Ah={style:{"text-align":"left"}},Bh=t("code",null,"并查集",-1),Nh=t("code",null,"图",-1),Th=t("code",null,"最小生成树",-1),Fh={style:{"text-align":"left"}},Wh=t("td",{style:{"text-align":"center"}},"1728",-1),Qh={style:{"text-align":"left"}},Rh={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},Uh=t("td",{style:{"text-align":"center"}},null,-1),Xh={style:{"text-align":"left"}},Zh=t("code",null,"图",-1),Gh=t("code",null,"拓扑排序",-1),Sh=t("code",null,"记忆化搜索",-1),Yh=t("code",null,"5+",-1),$h={style:{"text-align":"left"}},t1=t("td",{style:{"text-align":"center"}},"1761",-1),e1={style:{"text-align":"left"}},l1={href:"https://leetcode.com/problems/minimum-degree-of-a-connected-trio-in-a-graph",target:"_blank",rel:"noopener noreferrer"},o1=t("td",{style:{"text-align":"center"}},null,-1),n1={style:{"text-align":"left"}},s1=t("code",null,"图",-1),d1={style:{"text-align":"left"}},_1=t("td",{style:{"text-align":"center"}},"1778",-1),i1={style:{"text-align":"left"}},a1={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},c1=t("td",{style:{"text-align":"center"}},null,-1),r1={style:{"text-align":"left"}},h1=t("code",null,"深度优先搜索",-1),u1=t("code",null,"广度优先搜索",-1),f1=t("code",null,"图",-1),g1=t("code",null,"1+",-1),m1={style:{"text-align":"left"}},y1=t("td",{style:{"text-align":"center"}},"1782",-1),p1={style:{"text-align":"left"}},x1={href:"https://leetcode.com/problems/count-pairs-of-nodes",target:"_blank",rel:"noopener noreferrer"},b1=t("td",{style:{"text-align":"center"}},null,-1),k1={style:{"text-align":"left"}},H1=t("code",null,"图",-1),M1=t("code",null,"数组",-1),I1=t("code",null,"双指针",-1),w1=t("code",null,"2+",-1),v1={style:{"text-align":"left"}},q1=t("td",{style:{"text-align":"center"}},"1786",-1),L1={style:{"text-align":"left"}},z1={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},P1=t("td",{style:{"text-align":"center"}},null,-1),C1={style:{"text-align":"left"}},E1=t("code",null,"图",-1),O1=t("code",null,"拓扑排序",-1),j1=t("code",null,"动态规划",-1),V1=t("code",null,"2+",-1),D1={style:{"text-align":"left"}},J1=t("td",{style:{"text-align":"center"}},"1791",-1),K1={style:{"text-align":"left"}},A1={href:"https://leetcode.com/problems/find-center-of-star-graph",target:"_blank",rel:"noopener noreferrer"},B1=t("td",{style:{"text-align":"center"}},null,-1),N1={style:{"text-align":"left"}},T1=t("code",null,"图",-1),F1={style:{"text-align":"left"}},W1=t("td",{style:{"text-align":"center"}},"1810",-1),Q1={style:{"text-align":"left"}},R1={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},U1=t("td",{style:{"text-align":"center"}},null,-1),X1={style:{"text-align":"left"}},Z1=t("code",null,"深度优先搜索",-1),G1=t("code",null,"广度优先搜索",-1),S1=t("code",null,"图",-1),Y1=t("code",null,"2+",-1),$1={style:{"text-align":"left"}},tu=t("td",{style:{"text-align":"center"}},"1820",-1),eu={style:{"text-align":"left"}},lu={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},ou=t("td",{style:{"text-align":"center"}},null,-1),nu={style:{"text-align":"left"}},su=t("code",null,"深度优先搜索",-1),du=t("code",null,"图",-1),_u=t("code",null,"数组",-1),iu=t("code",null,"1+",-1),au={style:{"text-align":"left"}},cu=t("td",{style:{"text-align":"center"}},"1857",-1),ru={style:{"text-align":"left"}},hu={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},uu=t("td",{style:{"text-align":"center"}},null,-1),fu={style:{"text-align":"left"}},gu=t("code",null,"图",-1),mu=t("code",null,"拓扑排序",-1),yu=t("code",null,"记忆化搜索",-1),pu=t("code",null,"3+",-1),xu={style:{"text-align":"left"}},bu=t("td",{style:{"text-align":"center"}},"1916",-1),ku={style:{"text-align":"left"}},Hu={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},Mu=t("td",{style:{"text-align":"center"}},null,-1),Iu={style:{"text-align":"left"}},wu=t("code",null,"树",-1),vu=t("code",null,"图",-1),qu=t("code",null,"拓扑排序",-1),Lu=t("code",null,"3+",-1),zu={style:{"text-align":"left"}},Pu=t("td",{style:{"text-align":"center"}},"1928",-1),Cu={style:{"text-align":"left"}},Eu={href:"https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time",target:"_blank",rel:"noopener noreferrer"},Ou=t("td",{style:{"text-align":"center"}},null,-1),ju={style:{"text-align":"left"}},Vu=t("code",null,"图",-1),Du=t("code",null,"数组",-1),Ju=t("code",null,"动态规划",-1),Ku={style:{"text-align":"left"}},Au=t("td",{style:{"text-align":"center"}},"1971",-1),Bu={style:{"text-align":"left"}},Nu={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},Tu=t("td",{style:{"text-align":"center"}},null,-1),Fu={style:{"text-align":"left"}},Wu=t("code",null,"深度优先搜索",-1),Qu=t("code",null,"广度优先搜索",-1),Ru=t("code",null,"并查集",-1),Uu=t("code",null,"1+",-1),Xu={style:{"text-align":"left"}},Zu=t("td",{style:{"text-align":"center"}},"1976",-1),Gu={style:{"text-align":"left"}},Su={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},Yu=t("td",{style:{"text-align":"center"}},null,-1),$u={style:{"text-align":"left"}},tf=t("code",null,"图",-1),ef=t("code",null,"拓扑排序",-1),lf=t("code",null,"动态规划",-1),of=t("code",null,"1+",-1),nf={style:{"text-align":"left"}},sf=t("td",{style:{"text-align":"center"}},"2039",-1),df={style:{"text-align":"left"}},_f={href:"https://leetcode.com/problems/the-time-when-the-network-becomes-idle",target:"_blank",rel:"noopener noreferrer"},af=t("td",{style:{"text-align":"center"}},null,-1),cf={style:{"text-align":"left"}},rf=t("code",null,"广度优先搜索",-1),hf=t("code",null,"图",-1),uf=t("code",null,"数组",-1),ff={style:{"text-align":"left"}},gf=t("td",{style:{"text-align":"center"}},"2045",-1),mf={style:{"text-align":"left"}},yf={href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},pf=t("td",{style:{"text-align":"center"}},null,-1),xf={style:{"text-align":"left"}},bf=t("code",null,"广度优先搜索",-1),kf=t("code",null,"图",-1),Hf=t("code",null,"最短路",-1),Mf={style:{"text-align":"left"}},If=t("td",{style:{"text-align":"center"}},"2050",-1),wf={style:{"text-align":"left"}},vf={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},qf=t("td",{style:{"text-align":"center"}},null,-1),Lf={style:{"text-align":"left"}},zf=t("code",null,"图",-1),Pf=t("code",null,"拓扑排序",-1),Cf=t("code",null,"数组",-1),Ef=t("code",null,"1+",-1),Of={style:{"text-align":"left"}},jf=t("td",{style:{"text-align":"center"}},"2065",-1),Vf={style:{"text-align":"left"}},Df={href:"https://leetcode.com/problems/maximum-path-quality-of-a-graph",target:"_blank",rel:"noopener noreferrer"},Jf=t("td",{style:{"text-align":"center"}},null,-1),Kf={style:{"text-align":"left"}},Af=t("code",null,"图",-1),Bf=t("code",null,"数组",-1),Nf=t("code",null,"回溯",-1),Tf={style:{"text-align":"left"}},Ff=t("td",{style:{"text-align":"center"}},"2076",-1),Wf={style:{"text-align":"left"}},Qf={href:"https://leetcode.com/problems/process-restricted-friend-requests",target:"_blank",rel:"noopener noreferrer"},Rf=t("td",{style:{"text-align":"center"}},null,-1),Uf={style:{"text-align":"left"}},Xf=t("code",null,"并查集",-1),Zf=t("code",null,"图",-1),Gf={style:{"text-align":"left"}},Sf=t("td",{style:{"text-align":"center"}},"2077",-1),Yf={style:{"text-align":"left"}},$f={href:"https://leetcode.com/problems/paths-in-maze-that-lead-to-same-room",target:"_blank",rel:"noopener noreferrer"},tg=t("td",{style:{"text-align":"center"}},null,-1),eg={style:{"text-align":"left"}},lg=t("code",null,"图",-1),og={style:{"text-align":"left"}},ng=t("td",{style:{"text-align":"center"}},"2092",-1),sg={style:{"text-align":"left"}},dg={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},_g=t("td",{style:{"text-align":"center"}},null,-1),ig={style:{"text-align":"left"}},ag=t("code",null,"深度优先搜索",-1),cg=t("code",null,"广度优先搜索",-1),rg=t("code",null,"并查集",-1),hg=t("code",null,"2+",-1),ug={style:{"text-align":"left"}},fg=t("td",{style:{"text-align":"center"}},"2093",-1),gg={style:{"text-align":"left"}},mg={href:"https://leetcode.com/problems/minimum-cost-to-reach-city-with-discounts",target:"_blank",rel:"noopener noreferrer"},yg=t("td",{style:{"text-align":"center"}},null,-1),pg={style:{"text-align":"left"}},xg=t("code",null,"图",-1),bg=t("code",null,"最短路",-1),kg=t("code",null,"堆（优先队列）",-1),Hg={style:{"text-align":"left"}},Mg=t("td",{style:{"text-align":"center"}},"2097",-1),Ig={style:{"text-align":"left"}},wg={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},vg=t("td",{style:{"text-align":"center"}},null,-1),qg={style:{"text-align":"left"}},Lg=t("code",null,"深度优先搜索",-1),zg=t("code",null,"图",-1),Pg=t("code",null,"欧拉回路",-1),Cg={style:{"text-align":"left"}},Eg=t("td",{style:{"text-align":"center"}},"2101",-1),Og={style:{"text-align":"left"}},jg={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},Vg=t("td",{style:{"text-align":"center"}},null,-1),Dg={style:{"text-align":"left"}},Jg=t("code",null,"深度优先搜索",-1),Kg=t("code",null,"广度优先搜索",-1),Ag=t("code",null,"图",-1),Bg=t("code",null,"3+",-1),Ng={style:{"text-align":"left"}},Tg=t("td",{style:{"text-align":"center"}},"2115",-1),Fg={style:{"text-align":"left"}},Wg={href:"https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies",target:"_blank",rel:"noopener noreferrer"},Qg=t("td",{style:{"text-align":"center"}},null,-1),Rg={style:{"text-align":"left"}},Ug=t("code",null,"图",-1),Xg=t("code",null,"拓扑排序",-1),Zg=t("code",null,"数组",-1),Gg=t("code",null,"2+",-1),Sg={style:{"text-align":"left"}},Yg=t("td",{style:{"text-align":"center"}},"2123",-1),$g={style:{"text-align":"left"}},tm={href:"https://leetcode.com/problems/minimum-operations-to-remove-adjacent-ones-in-matrix",target:"_blank",rel:"noopener noreferrer"},em=t("td",{style:{"text-align":"center"}},null,-1),lm={style:{"text-align":"left"}},om=t("code",null,"图",-1),nm=t("code",null,"数组",-1),sm=t("code",null,"矩阵",-1),dm={style:{"text-align":"left"}},_m=t("td",{style:{"text-align":"center"}},"2127",-1),im={style:{"text-align":"left"}},am={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},cm=t("td",{style:{"text-align":"center"}},null,-1),rm={style:{"text-align":"left"}},hm=t("code",null,"深度优先搜索",-1),um=t("code",null,"图",-1),fm=t("code",null,"拓扑排序",-1),gm={style:{"text-align":"left"}},mm=t("td",{style:{"text-align":"center"}},"2192",-1),ym={style:{"text-align":"left"}},pm={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},xm=t("td",{style:{"text-align":"center"}},null,-1),bm={style:{"text-align":"left"}},km=t("code",null,"深度优先搜索",-1),Hm=t("code",null,"广度优先搜索",-1),Mm=t("code",null,"图",-1),Im=t("code",null,"1+",-1),wm={style:{"text-align":"left"}},vm=t("td",{style:{"text-align":"center"}},"2203",-1),qm={style:{"text-align":"left"}},Lm={href:"https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths",target:"_blank",rel:"noopener noreferrer"},zm=t("td",{style:{"text-align":"center"}},null,-1),Pm={style:{"text-align":"left"}},Cm=t("code",null,"图",-1),Em=t("code",null,"最短路",-1),Om={style:{"text-align":"left"}},jm=t("td",{style:{"text-align":"center"}},"2204",-1),Vm={style:{"text-align":"left"}},Dm={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Jm=t("td",{style:{"text-align":"center"}},null,-1),Km={style:{"text-align":"left"}},Am=t("code",null,"深度优先搜索",-1),Bm=t("code",null,"广度优先搜索",-1),Nm=t("code",null,"并查集",-1),Tm=t("code",null,"1+",-1),Fm={style:{"text-align":"left"}},Wm=t("td",{style:{"text-align":"center"}},"2242",-1),Qm={style:{"text-align":"left"}},Rm={href:"https://leetcode.com/problems/maximum-score-of-a-node-sequence",target:"_blank",rel:"noopener noreferrer"},Um=t("td",{style:{"text-align":"center"}},null,-1),Xm={style:{"text-align":"left"}},Zm=t("code",null,"图",-1),Gm=t("code",null,"数组",-1),Sm=t("code",null,"枚举",-1),Ym=t("code",null,"1+",-1),$m={style:{"text-align":"left"}},ty=t("td",{style:{"text-align":"center"}},"2246",-1),ey={style:{"text-align":"left"}},ly={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},oy=t("td",{style:{"text-align":"center"}},null,-1),ny={style:{"text-align":"left"}},sy=t("code",null,"树",-1),dy=t("code",null,"深度优先搜索",-1),_y=t("code",null,"图",-1),iy=t("code",null,"3+",-1),ay={style:{"text-align":"left"}},cy=t("td",{style:{"text-align":"center"}},"2247",-1),ry={style:{"text-align":"left"}},hy={href:"https://leetcode.com/problems/maximum-cost-of-trip-with-k-highways",target:"_blank",rel:"noopener noreferrer"},uy=t("td",{style:{"text-align":"center"}},null,-1),fy={style:{"text-align":"left"}},gy=t("code",null,"位运算",-1),my=t("code",null,"图",-1),yy=t("code",null,"动态规划",-1),py=t("code",null,"1+",-1),xy={style:{"text-align":"left"}},by=t("td",{style:{"text-align":"center"}},"2285",-1),ky={style:{"text-align":"left"}},Hy={href:"https://leetcode.com/problems/maximum-total-importance-of-roads",target:"_blank",rel:"noopener noreferrer"},My=t("td",{style:{"text-align":"center"}},null,-1),Iy={style:{"text-align":"left"}},wy=t("code",null,"贪心",-1),vy=t("code",null,"图",-1),qy=t("code",null,"排序",-1),Ly=t("code",null,"1+",-1),zy={style:{"text-align":"left"}},Py=t("td",{style:{"text-align":"center"}},"2290",-1),Cy={style:{"text-align":"left"}},Ey={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},Oy=t("td",{style:{"text-align":"center"}},null,-1),jy={style:{"text-align":"left"}},Vy=t("code",null,"广度优先搜索",-1),Dy=t("code",null,"图",-1),Jy=t("code",null,"数组",-1),Ky=t("code",null,"3+",-1),Ay={style:{"text-align":"left"}},By=t("td",{style:{"text-align":"center"}},"2297",-1),Ny={style:{"text-align":"left"}},Ty={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Fy=t("td",{style:{"text-align":"center"}},null,-1),Wy={style:{"text-align":"left"}},Qy=t("code",null,"栈",-1),Ry=t("code",null,"图",-1),Uy=t("code",null,"数组",-1),Xy=t("code",null,"3+",-1),Zy={style:{"text-align":"left"}},Gy=t("td",{style:{"text-align":"center"}},"2307",-1),Sy={style:{"text-align":"left"}},Yy={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},$y=t("td",{style:{"text-align":"center"}},null,-1),tp={style:{"text-align":"left"}},ep=t("code",null,"深度优先搜索",-1),lp=t("code",null,"并查集",-1),op=t("code",null,"图",-1),np=t("code",null,"1+",-1),sp={style:{"text-align":"left"}},dp=t("td",{style:{"text-align":"center"}},"2316",-1),_p={style:{"text-align":"left"}},ip={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},ap=t("td",{style:{"text-align":"center"}},null,-1),cp={style:{"text-align":"left"}},rp=t("code",null,"深度优先搜索",-1),hp=t("code",null,"广度优先搜索",-1),up=t("code",null,"并查集",-1),fp=t("code",null,"1+",-1),gp={style:{"text-align":"left"}},mp=t("td",{style:{"text-align":"center"}},"2328",-1),yp={style:{"text-align":"left"}},pp={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},xp=t("td",{style:{"text-align":"center"}},null,-1),bp={style:{"text-align":"left"}},kp=t("code",null,"深度优先搜索",-1),Hp=t("code",null,"广度优先搜索",-1),Mp=t("code",null,"图",-1),Ip=t("code",null,"5+",-1),wp={style:{"text-align":"left"}},vp=t("td",{style:{"text-align":"center"}},"2359",-1),qp={style:{"text-align":"left"}},Lp={href:"https://leetcode.com/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},zp=t("td",{style:{"text-align":"center"}},null,-1),Pp={style:{"text-align":"left"}},Cp=t("code",null,"深度优先搜索",-1),Ep=t("code",null,"图",-1),Op={style:{"text-align":"left"}},jp=t("td",{style:{"text-align":"center"}},"2360",-1),Vp={style:{"text-align":"left"}},Dp={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},Jp=t("td",{style:{"text-align":"center"}},null,-1),Kp={style:{"text-align":"left"}},Ap=t("code",null,"深度优先搜索",-1),Bp=t("code",null,"图",-1),Np=t("code",null,"拓扑排序",-1),Tp={style:{"text-align":"left"}},Fp=t("td",{style:{"text-align":"center"}},"2368",-1),Wp={style:{"text-align":"left"}},Qp={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},Rp=t("td",{style:{"text-align":"center"}},null,-1),Up={style:{"text-align":"left"}},Xp=t("code",null,"树",-1),Zp=t("code",null,"深度优先搜索",-1),Gp=t("code",null,"广度优先搜索",-1),Sp=t("code",null,"4+",-1),Yp={style:{"text-align":"left"}},$p=t("td",{style:{"text-align":"center"}},"2371",-1),tx={style:{"text-align":"left"}},ex={href:"https://leetcode.com/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},lx=t("td",{style:{"text-align":"center"}},null,-1),ox={style:{"text-align":"left"}},nx=t("code",null,"并查集",-1),sx=t("code",null,"图",-1),dx=t("code",null,"拓扑排序",-1),_x=t("code",null,"3+",-1),ix={style:{"text-align":"left"}},ax=t("td",{style:{"text-align":"center"}},"2374",-1),cx={style:{"text-align":"left"}},rx={href:"https://leetcode.com/problems/node-with-highest-edge-score",target:"_blank",rel:"noopener noreferrer"},hx=t("td",{style:{"text-align":"center"}},null,-1),ux={style:{"text-align":"left"}},fx=t("code",null,"图",-1),gx=t("code",null,"哈希表",-1),mx={style:{"text-align":"left"}},yx=t("td",{style:{"text-align":"center"}},"2392",-1),px={style:{"text-align":"left"}},xx={href:"https://leetcode.com/problems/build-a-matrix-with-conditions",target:"_blank",rel:"noopener noreferrer"},bx=t("td",{style:{"text-align":"center"}},null,-1),kx={style:{"text-align":"left"}},Hx=t("code",null,"图",-1),Mx=t("code",null,"拓扑排序",-1),Ix=t("code",null,"数组",-1),wx=t("code",null,"1+",-1),vx={style:{"text-align":"left"}},qx=t("td",{style:{"text-align":"center"}},"2421",-1),Lx={style:{"text-align":"left"}},zx={href:"https://leetcode.com/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},Px=t("td",{style:{"text-align":"center"}},null,-1),Cx={style:{"text-align":"left"}},Ex=t("code",null,"树",-1),Ox=t("code",null,"并查集",-1),jx=t("code",null,"图",-1),Vx=t("code",null,"3+",-1),Dx={style:{"text-align":"left"}},Jx=t("td",{style:{"text-align":"center"}},"2467",-1),Kx={style:{"text-align":"left"}},Ax={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Bx=t("td",{style:{"text-align":"center"}},null,-1),Nx={style:{"text-align":"left"}},Tx=t("code",null,"树",-1),Fx=t("code",null,"深度优先搜索",-1),Wx=t("code",null,"广度优先搜索",-1),Qx=t("code",null,"2+",-1),Rx={style:{"text-align":"left"}},Ux=t("td",{style:{"text-align":"center"}},"2473",-1),Xx={style:{"text-align":"left"}},Zx={href:"https://leetcode.com/problems/minimum-cost-to-buy-apples",target:"_blank",rel:"noopener noreferrer"},Gx=t("td",{style:{"text-align":"center"}},null,-1),Sx={style:{"text-align":"left"}},Yx=t("code",null,"图",-1),$x=t("code",null,"数组",-1),t3=t("code",null,"最短路",-1),e3=t("code",null,"1+",-1),l3={style:{"text-align":"left"}},o3=t("td",{style:{"text-align":"center"}},"2477",-1),n3={style:{"text-align":"left"}},s3={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},d3=t("td",{style:{"text-align":"center"}},null,-1),_3={style:{"text-align":"left"}},i3=t("code",null,"树",-1),a3=t("code",null,"深度优先搜索",-1),c3=t("code",null,"广度优先搜索",-1),r3=t("code",null,"1+",-1),h3={style:{"text-align":"left"}},u3=t("td",{style:{"text-align":"center"}},"2479",-1),f3={style:{"text-align":"left"}},g3={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},m3=t("td",{style:{"text-align":"center"}},null,-1),y3={style:{"text-align":"left"}},p3=t("code",null,"树",-1),x3=t("code",null,"深度优先搜索",-1),b3=t("code",null,"图",-1),k3=t("code",null,"1+",-1),H3={style:{"text-align":"left"}},M3=t("td",{style:{"text-align":"center"}},"2492",-1),I3={style:{"text-align":"left"}},w3={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},v3=t("td",{style:{"text-align":"center"}},null,-1),q3={style:{"text-align":"left"}},L3=t("code",null,"深度优先搜索",-1),z3=t("code",null,"广度优先搜索",-1),P3=t("code",null,"并查集",-1),C3=t("code",null,"1+",-1),E3={style:{"text-align":"left"}},O3=t("td",{style:{"text-align":"center"}},"2493",-1),j3={style:{"text-align":"left"}},V3={href:"https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups",target:"_blank",rel:"noopener noreferrer"},D3=t("td",{style:{"text-align":"center"}},null,-1),J3={style:{"text-align":"left"}},K3=t("code",null,"广度优先搜索",-1),A3=t("code",null,"并查集",-1),B3=t("code",null,"图",-1),N3={style:{"text-align":"left"}},T3=t("td",{style:{"text-align":"center"}},"2497",-1),F3={style:{"text-align":"left"}},W3={href:"https://leetcode.com/problems/maximum-star-sum-of-a-graph",target:"_blank",rel:"noopener noreferrer"},Q3=t("td",{style:{"text-align":"center"}},null,-1),R3={style:{"text-align":"left"}},U3=t("code",null,"贪心",-1),X3=t("code",null,"图",-1),Z3=t("code",null,"数组",-1),G3=t("code",null,"2+",-1),S3={style:{"text-align":"left"}},Y3=t("td",{style:{"text-align":"center"}},"2508",-1),$3={style:{"text-align":"left"}},tb={href:"https://leetcode.com/problems/add-edges-to-make-degrees-of-all-nodes-even",target:"_blank",rel:"noopener noreferrer"},eb=t("td",{style:{"text-align":"center"}},null,-1),lb={style:{"text-align":"left"}},ob=t("code",null,"图",-1),nb=t("code",null,"哈希表",-1),sb={style:{"text-align":"left"}},db=t("td",{style:{"text-align":"center"}},"2577",-1),_b={style:{"text-align":"left"}},ib={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},ab=t("td",{style:{"text-align":"center"}},null,-1),cb={style:{"text-align":"left"}},rb=t("code",null,"广度优先搜索",-1),hb=t("code",null,"图",-1),ub=t("code",null,"数组",-1),fb=t("code",null,"3+",-1),gb={style:{"text-align":"left"}},mb=t("td",{style:{"text-align":"center"}},"2603",-1),yb={style:{"text-align":"left"}},pb={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},xb=t("td",{style:{"text-align":"center"}},null,-1),bb={style:{"text-align":"left"}},kb=t("code",null,"树",-1),Hb=t("code",null,"图",-1),Mb=t("code",null,"拓扑排序",-1),Ib=t("code",null,"1+",-1),wb={style:{"text-align":"left"}},vb=t("td",{style:{"text-align":"center"}},"2608",-1),qb={style:{"text-align":"left"}},Lb={href:"https://leetcode.com/problems/shortest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},zb=t("td",{style:{"text-align":"center"}},null,-1),Pb={style:{"text-align":"left"}},Cb=t("code",null,"广度优先搜索",-1),Eb=t("code",null,"图",-1),Ob={style:{"text-align":"left"}},jb=t("td",{style:{"text-align":"center"}},"2642",-1),Vb={style:{"text-align":"left"}},Db={href:"https://leetcode.com/problems/design-graph-with-shortest-path-calculator",target:"_blank",rel:"noopener noreferrer"},Jb=t("td",{style:{"text-align":"center"}},null,-1),Kb={style:{"text-align":"left"}},Ab=t("code",null,"图",-1),Bb=t("code",null,"设计",-1),Nb=t("code",null,"最短路",-1),Tb=t("code",null,"1+",-1),Fb={style:{"text-align":"left"}},Wb=t("td",{style:{"text-align":"center"}},"2646",-1),Qb={style:{"text-align":"left"}},Rb={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},Ub=t("td",{style:{"text-align":"center"}},null,-1),Xb={style:{"text-align":"left"}},Zb=t("code",null,"树",-1),Gb=t("code",null,"深度优先搜索",-1),Sb=t("code",null,"图",-1),Yb=t("code",null,"2+",-1),$b={style:{"text-align":"left"}},t4=t("td",{style:{"text-align":"center"}},"2662",-1),e4={style:{"text-align":"left"}},l4={href:"https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads",target:"_blank",rel:"noopener noreferrer"},o4=t("td",{style:{"text-align":"center"}},null,-1),n4={style:{"text-align":"left"}},s4=t("code",null,"图",-1),d4=t("code",null,"数组",-1),_4=t("code",null,"最短路",-1),i4=t("code",null,"1+",-1),a4={style:{"text-align":"left"}},c4=t("td",{style:{"text-align":"center"}},"2685",-1),r4={style:{"text-align":"left"}},h4={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},u4=t("td",{style:{"text-align":"center"}},null,-1),f4={style:{"text-align":"left"}},g4=t("code",null,"深度优先搜索",-1),m4=t("code",null,"广度优先搜索",-1),y4=t("code",null,"图",-1),p4={style:{"text-align":"left"}},x4=t("td",{style:{"text-align":"center"}},"2699",-1),b4={style:{"text-align":"left"}},k4={href:"https://leetcode.com/problems/modify-graph-edge-weights",target:"_blank",rel:"noopener noreferrer"},H4=t("td",{style:{"text-align":"center"}},null,-1),M4={style:{"text-align":"left"}},I4=t("code",null,"图",-1),w4=t("code",null,"最短路",-1),v4=t("code",null,"堆（优先队列）",-1),q4={style:{"text-align":"left"}},L4=t("td",{style:{"text-align":"center"}},"2714",-1),z4={style:{"text-align":"left"}},P4={href:"https://leetcode.com/problems/find-shortest-path-with-k-hops",target:"_blank",rel:"noopener noreferrer"},C4=t("td",{style:{"text-align":"center"}},null,-1),E4={style:{"text-align":"left"}},O4=t("code",null,"图",-1),j4=t("code",null,"最短路",-1),V4=t("code",null,"堆（优先队列）",-1),D4={style:{"text-align":"left"}},J4=t("td",{style:{"text-align":"center"}},"2737",-1),K4={style:{"text-align":"left"}},A4={href:"https://leetcode.com/problems/find-the-closest-marked-node",target:"_blank",rel:"noopener noreferrer"},B4=t("td",{style:{"text-align":"center"}},null,-1),N4={style:{"text-align":"left"}},T4=t("code",null,"图",-1),F4=t("code",null,"数组",-1),W4=t("code",null,"最短路",-1),Q4=t("code",null,"1+",-1),R4={style:{"text-align":"left"}},U4=t("td",{style:{"text-align":"center"}},"2846",-1),X4={style:{"text-align":"left"}},Z4={href:"https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},G4=t("td",{style:{"text-align":"center"}},null,-1),S4={style:{"text-align":"left"}},Y4=t("code",null,"树",-1),$4=t("code",null,"图",-1),t2=t("code",null,"数组",-1),e2=t("code",null,"1+",-1),l2={style:{"text-align":"left"}},o2=t("td",{style:{"text-align":"center"}},"2858",-1),n2={style:{"text-align":"left"}},s2={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},d2=t("td",{style:{"text-align":"center"}},null,-1),_2={style:{"text-align":"left"}},i2=t("code",null,"深度优先搜索",-1),a2=t("code",null,"广度优先搜索",-1),c2=t("code",null,"图",-1),r2=t("code",null,"1+",-1),h2={style:{"text-align":"left"}},u2=t("td",{style:{"text-align":"center"}},"2876",-1),f2={style:{"text-align":"left"}},g2={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},m2=t("td",{style:{"text-align":"center"}},null,-1),y2={style:{"text-align":"left"}},p2=t("code",null,"图",-1),x2=t("code",null,"记忆化搜索",-1),b2=t("code",null,"动态规划",-1),k2={style:{"text-align":"left"}},H2=t("td",{style:{"text-align":"center"}},"2924",-1),M2={style:{"text-align":"left"}},I2={href:"https://leetcode.com/problems/find-champion-ii",target:"_blank",rel:"noopener noreferrer"},w2=t("td",{style:{"text-align":"center"}},null,-1),v2={style:{"text-align":"left"}},q2=t("code",null,"图",-1),L2={style:{"text-align":"left"}},z2=t("td",{style:{"text-align":"center"}},"2959",-1),P2={style:{"text-align":"left"}},C2={href:"https://leetcode.com/problems/number-of-possible-sets-of-closing-branches",target:"_blank",rel:"noopener noreferrer"},E2=t("td",{style:{"text-align":"center"}},null,-1),O2={style:{"text-align":"left"}},j2=t("code",null,"位运算",-1),V2=t("code",null,"图",-1),D2=t("code",null,"枚举",-1),J2=t("code",null,"2+",-1),K2={style:{"text-align":"left"}},A2=t("td",{style:{"text-align":"center"}},"2976",-1),B2={style:{"text-align":"left"}},N2={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-i",target:"_blank",rel:"noopener noreferrer"},T2=t("td",{style:{"text-align":"center"}},null,-1),F2={style:{"text-align":"left"}},W2=t("code",null,"图",-1),Q2=t("code",null,"数组",-1),R2=t("code",null,"字符串",-1),U2=t("code",null,"1+",-1),X2={style:{"text-align":"left"}},Z2=t("td",{style:{"text-align":"center"}},"2977",-1),G2={style:{"text-align":"left"}},S2={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},Y2=t("td",{style:{"text-align":"center"}},null,-1),$2={style:{"text-align":"left"}},t0=t("code",null,"图",-1),e0=t("code",null,"字典树",-1),l0=t("code",null,"数组",-1),o0=t("code",null,"3+",-1),n0={style:{"text-align":"left"}},s0=t("td",{style:{"text-align":"center"}},"3015",-1),d0={style:{"text-align":"left"}},_0={href:"https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-i",target:"_blank",rel:"noopener noreferrer"},i0=t("td",{style:{"text-align":"center"}},null,-1),a0={style:{"text-align":"left"}},c0=t("code",null,"广度优先搜索",-1),r0=t("code",null,"图",-1),h0=t("code",null,"前缀和",-1),u0={style:{"text-align":"left"}},f0=t("td",{style:{"text-align":"center"}},"3017",-1),g0={style:{"text-align":"left"}},m0={href:"https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-ii",target:"_blank",rel:"noopener noreferrer"},y0=t("td",{style:{"text-align":"center"}},null,-1),p0={style:{"text-align":"left"}},x0=t("code",null,"图",-1),b0=t("code",null,"前缀和",-1),k0={style:{"text-align":"left"}},H0=t("td",{style:{"text-align":"center"}},"3108",-1),M0={style:{"text-align":"left"}},I0={href:"https://leetcode.com/problems/minimum-cost-walk-in-weighted-graph",target:"_blank",rel:"noopener noreferrer"},w0=t("td",{style:{"text-align":"center"}},null,-1),v0={style:{"text-align":"left"}},q0=t("code",null,"位运算",-1),L0=t("code",null,"并查集",-1),z0=t("code",null,"图",-1),P0=t("code",null,"1+",-1),C0={style:{"text-align":"left"}},E0=t("td",{style:{"text-align":"center"}},"3112",-1),O0={style:{"text-align":"left"}},j0={href:"https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes",target:"_blank",rel:"noopener noreferrer"},V0=t("td",{style:{"text-align":"center"}},null,-1),D0={style:{"text-align":"left"}},J0=t("code",null,"图",-1),K0=t("code",null,"数组",-1),A0=t("code",null,"最短路",-1),B0=t("code",null,"1+",-1),N0={style:{"text-align":"left"}},T0=t("td",{style:{"text-align":"center"}},"3123",-1),F0={style:{"text-align":"left"}},W0={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},Q0=t("td",{style:{"text-align":"center"}},null,-1),R0={style:{"text-align":"left"}},U0=t("code",null,"深度优先搜索",-1),X0=t("code",null,"广度优先搜索",-1),Z0=t("code",null,"图",-1),G0=t("code",null,"2+",-1),S0={style:{"text-align":"left"}},Y0=t("td",{style:{"text-align":"center"}},"3203",-1),$0={style:{"text-align":"left"}},t6={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},e6=t("td",{style:{"text-align":"center"}},null,-1),l6={style:{"text-align":"left"}},o6=t("code",null,"树",-1),n6=t("code",null,"深度优先搜索",-1),s6=t("code",null,"广度优先搜索",-1),d6=t("code",null,"1+",-1),_6={style:{"text-align":"left"}},i6=t("td",{style:{"text-align":"center"}},"3241",-1),a6={style:{"text-align":"left"}},c6={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},r6=t("td",{style:{"text-align":"center"}},null,-1),h6={style:{"text-align":"left"}},u6=t("code",null,"树",-1),f6=t("code",null,"深度优先搜索",-1),g6=t("code",null,"图",-1),m6=t("code",null,"1+",-1),y6={style:{"text-align":"left"}},p6=t("td",{style:{"text-align":"center"}},"3243",-1),x6={style:{"text-align":"left"}},b6={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-i",target:"_blank",rel:"noopener noreferrer"},k6=t("td",{style:{"text-align":"center"}},null,-1),H6={style:{"text-align":"left"}},M6=t("code",null,"广度优先搜索",-1),I6=t("code",null,"图",-1),w6=t("code",null,"数组",-1),v6={style:{"text-align":"left"}},q6=t("td",{style:{"text-align":"center"}},"3244",-1),L6={style:{"text-align":"left"}},z6={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-ii",target:"_blank",rel:"noopener noreferrer"},P6=t("td",{style:{"text-align":"center"}},null,-1),C6={style:{"text-align":"left"}},E6=t("code",null,"贪心",-1),O6=t("code",null,"图",-1),j6=t("code",null,"数组",-1),V6=t("code",null,"1+",-1),D6={style:{"text-align":"left"}},J6=t("td",{style:{"text-align":"center"}},"3286",-1),K6={style:{"text-align":"left"}},A6={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},B6=t("td",{style:{"text-align":"center"}},null,-1),N6={style:{"text-align":"left"}},T6=t("code",null,"广度优先搜索",-1),F6=t("code",null,"图",-1),W6=t("code",null,"数组",-1),Q6=t("code",null,"3+",-1),R6={style:{"text-align":"left"}},U6=t("td",{style:{"text-align":"center"}},"3310",-1),X6={style:{"text-align":"left"}},Z6={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},G6=t("td",{style:{"text-align":"center"}},null,-1),S6={style:{"text-align":"left"}},Y6=t("code",null,"深度优先搜索",-1),$6=t("code",null,"广度优先搜索",-1),t5=t("code",null,"图",-1),e5={style:{"text-align":"left"}},l5=t("td",{style:{"text-align":"center"}},"3311",-1),o5={style:{"text-align":"left"}},n5={href:"https://leetcode.com/problems/construct-2d-grid-matching-graph-layout",target:"_blank",rel:"noopener noreferrer"},s5=t("td",{style:{"text-align":"center"}},null,-1),d5={style:{"text-align":"left"}},_5=t("code",null,"图",-1),i5=t("code",null,"数组",-1),a5=t("code",null,"哈希表",-1),c5=t("code",null,"1+",-1),r5={style:{"text-align":"left"}},h5=t("td",{style:{"text-align":"center"}},"LCP 04",-1),u5={style:{"text-align":"left"}},f5={href:"https://leetcode.cn/problems/broken-board-dominoes",target:"_blank",rel:"noopener noreferrer"},g5=t("td",{style:{"text-align":"center"}},null,-1),m5={style:{"text-align":"left"}},y5=t("code",null,"位运算",-1),p5=t("code",null,"图",-1),x5=t("code",null,"数组",-1),b5=t("code",null,"2+",-1),k5={style:{"text-align":"left"}},H5=t("td",{style:{"text-align":"center"}},"LCP 07",-1),M5={style:{"text-align":"left"}},I5={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},w5=t("td",{style:{"text-align":"center"}},null,-1),v5={style:{"text-align":"left"}},q5=t("code",null,"深度优先搜索",-1),L5=t("code",null,"广度优先搜索",-1),z5=t("code",null,"图",-1),P5=t("code",null,"1+",-1),C5={style:{"text-align":"left"}},E5=t("td",{style:{"text-align":"center"}},"LCP 16",-1),O5={style:{"text-align":"left"}},j5={href:"https://leetcode.cn/problems/you-le-yuan-de-you-lan-ji-hua",target:"_blank",rel:"noopener noreferrer"},V5=t("td",{style:{"text-align":"center"}},null,-1),D5={style:{"text-align":"left"}},J5=t("code",null,"图",-1),K5=t("code",null,"几何",-1),A5=t("code",null,"数学",-1),B5={style:{"text-align":"left"}},N5=t("td",{style:{"text-align":"center"}},"LCP 21",-1),T5={style:{"text-align":"left"}},F5={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},W5=t("td",{style:{"text-align":"center"}},null,-1),Q5={style:{"text-align":"left"}},R5=t("code",null,"深度优先搜索",-1),U5=t("code",null,"广度优先搜索",-1),X5=t("code",null,"图",-1),Z5=t("code",null,"1+",-1),G5={style:{"text-align":"left"}},S5=t("td",{style:{"text-align":"center"}},"LCP 35",-1),Y5={style:{"text-align":"left"}},$5={href:"https://leetcode.cn/problems/DFPeFJ",target:"_blank",rel:"noopener noreferrer"},t8=t("td",{style:{"text-align":"center"}},null,-1),e8={style:{"text-align":"left"}},l8=t("code",null,"图",-1),o8=t("code",null,"最短路",-1),n8=t("code",null,"堆（优先队列）",-1),s8={style:{"text-align":"left"}},d8=t("td",{style:{"text-align":"center"}},"LCP 46",-1),_8={style:{"text-align":"left"}},i8={href:"https://leetcode.cn/problems/05ZEDJ",target:"_blank",rel:"noopener noreferrer"},a8=t("td",{style:{"text-align":"center"}},null,-1),c8={style:{"text-align":"left"}},r8=t("code",null,"图",-1),h8=t("code",null,"数组",-1),u8=t("code",null,"数学",-1),f8={style:{"text-align":"left"}},g8=t("td",{style:{"text-align":"center"}},"LCP 54",-1),m8={style:{"text-align":"left"}},y8={href:"https://leetcode.cn/problems/s5kipK",target:"_blank",rel:"noopener noreferrer"},p8=t("td",{style:{"text-align":"center"}},null,-1),x8={style:{"text-align":"left"}},b8=t("code",null,"图",-1),k8=t("code",null,"数组",-1),H8=t("code",null,"双连通分量",-1),M8={style:{"text-align":"left"}},I8=t("td",{style:{"text-align":"center"}},"LCP 56",-1),w8={style:{"text-align":"left"}},v8={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},q8=t("td",{style:{"text-align":"center"}},null,-1),L8={style:{"text-align":"left"}},z8=t("code",null,"广度优先搜索",-1),P8=t("code",null,"图",-1),C8=t("code",null,"数组",-1),E8=t("code",null,"3+",-1),O8={style:{"text-align":"left"}},j8=t("td",{style:{"text-align":"center"}},"LCP 62",-1),V8={style:{"text-align":"left"}},D8={href:"https://leetcode.cn/problems/D9PW8w",target:"_blank",rel:"noopener noreferrer"},J8=t("td",{style:{"text-align":"center"}},null,-1),K8={style:{"text-align":"left"}},A8=t("code",null,"图",-1),B8={style:{"text-align":"left"}},N8=t("td",{style:{"text-align":"center"}},"LCP 63",-1),T8={style:{"text-align":"left"}},F8={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},W8=t("td",{style:{"text-align":"center"}},null,-1),Q8={style:{"text-align":"left"}},R8=t("code",null,"深度优先搜索",-1),U8=t("code",null,"广度优先搜索",-1),X8=t("code",null,"图",-1),Z8=t("code",null,"5+",-1),G8={style:{"text-align":"left"}},S8=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),Y8={style:{"text-align":"left"}},$8={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},t7=t("td",{style:{"text-align":"center"}},null,-1),e7={style:{"text-align":"left"}},l7=t("code",null,"深度优先搜索",-1),o7=t("code",null,"广度优先搜索",-1),n7=t("code",null,"并查集",-1),s7=t("code",null,"1+",-1),d7={style:{"text-align":"left"}},_7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),i7={style:{"text-align":"left"}},a7={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},c7=t("td",{style:{"text-align":"center"}},null,-1),r7={style:{"text-align":"left"}},h7=t("code",null,"深度优先搜索",-1),u7=t("code",null,"广度优先搜索",-1),f7=t("code",null,"图",-1),g7=t("code",null,"1+",-1),m7={style:{"text-align":"left"}},y7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),p7={style:{"text-align":"left"}},x7={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},b7=t("td",{style:{"text-align":"center"}},null,-1),k7={style:{"text-align":"left"}},H7=t("code",null,"深度优先搜索",-1),M7=t("code",null,"广度优先搜索",-1),I7=t("code",null,"并查集",-1),w7=t("code",null,"3+",-1),v7={style:{"text-align":"left"}},q7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),L7={style:{"text-align":"left"}},z7={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},P7=t("td",{style:{"text-align":"center"}},null,-1),C7={style:{"text-align":"left"}},E7=t("code",null,"深度优先搜索",-1),O7=t("code",null,"广度优先搜索",-1),j7=t("code",null,"图",-1),V7=t("code",null,"5+",-1),D7={style:{"text-align":"left"}},J7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),K7={style:{"text-align":"left"}},A7={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},B7=t("td",{style:{"text-align":"center"}},null,-1),N7={style:{"text-align":"left"}},T7=t("code",null,"深度优先搜索",-1),F7=t("code",null,"广度优先搜索",-1),W7=t("code",null,"图",-1),Q7=t("code",null,"1+",-1),R7={style:{"text-align":"left"}},U7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),X7={style:{"text-align":"left"}},Z7={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},G7=t("td",{style:{"text-align":"center"}},null,-1),S7={style:{"text-align":"left"}},Y7=t("code",null,"深度优先搜索",-1),$7=t("code",null,"广度优先搜索",-1),t9=t("code",null,"图",-1),e9=t("code",null,"3+",-1),l9={style:{"text-align":"left"}},o9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 115",-1),n9={style:{"text-align":"left"}},s9={href:"https://leetcode.cn/problems/ur2n8P",target:"_blank",rel:"noopener noreferrer"},d9=t("td",{style:{"text-align":"center"}},null,-1),_9={style:{"text-align":"left"}},i9=t("code",null,"图",-1),a9=t("code",null,"拓扑排序",-1),c9=t("code",null,"数组",-1),r9={style:{"text-align":"left"}},h9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),u9={style:{"text-align":"left"}},f9={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},g9=t("td",{style:{"text-align":"center"}},null,-1),m9={style:{"text-align":"left"}},y9=t("code",null,"深度优先搜索",-1),p9=t("code",null,"广度优先搜索",-1),x9=t("code",null,"并查集",-1),b9=t("code",null,"1+",-1),k9={style:{"text-align":"left"}},H9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),M9={style:{"text-align":"left"}},I9={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},w9=t("td",{style:{"text-align":"center"}},null,-1),v9={style:{"text-align":"left"}},q9=t("code",null,"深度优先搜索",-1),L9=t("code",null,"广度优先搜索",-1),z9=t("code",null,"并查集",-1),P9=t("code",null,"1+",-1),C9={style:{"text-align":"left"}},E9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),O9={style:{"text-align":"left"}},j9={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},V9=t("td",{style:{"text-align":"center"}},null,-1),D9={style:{"text-align":"left"}},J9=t("code",null,"深度优先搜索",-1),K9=t("code",null,"广度优先搜索",-1),A9=t("code",null,"图",-1),B9=t("code",null,"1+",-1),N9={style:{"text-align":"left"}},T9=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),F9={style:{"text-align":"left"}},W9={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},Q9=t("td",{style:{"text-align":"center"}},null,-1),R9={style:{"text-align":"left"}},U9=t("code",null,"深度优先搜索",-1),X9=t("code",null,"广度优先搜索",-1),Z9=t("code",null,"图",-1),G9={style:{"text-align":"left"}};function S9(Y9,$9){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return a(),c("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/outline/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-stack.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/outline/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/outline/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/outline/tag/string-matching.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/outline/tag/binary-tree.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/outline/tag/binary-search-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[E]),_:1}),l(),O,l(),e(n,{to:"/outline/tag/ordered-set.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/outline/tag/strongly-connected-component.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/outline/tag/segment-tree.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/outline/tag/binary-indexed-tree.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/outline/tag/suffix-array.html"},{default:o(()=>[W]),_:1})]),Q,t("p",null,[e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/outline/tag/recursion.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/outline/tag/divide-and-conquer.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/outline/tag/math.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/outline/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/outline/tag/simulation.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/outline/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/outline/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/outline/tag/probability-and-statistics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/outline/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/outline/tag/rejection-sampling.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/outline/tag/database.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/outline/tag/data-stream.html"},{default:o(()=>[Pt]),_:1}),l(),e(n,{to:"/outline/tag/brainteaser.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/outline/tag/iterator.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/outline/tag/concurrency.html"},{default:o(()=>[jt]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[Dt,t("tbody",null,[t("tr",null,[Jt,t("td",Kt,[t("a",At,[l("克隆图"),e(s)])]),t("td",Bt,[t("a",Nt,[l("[✓]"),e(s)])]),t("td",Tt,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ft]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Wt]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Qt]),_:1}),l(),Rt]),t("td",Ut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xt,t("td",Zt,[t("a",Gt,[l("课程表"),e(s)])]),t("td",St,[t("a",Yt,[l("[✓]"),e(s)])]),t("td",$t,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ee]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[le]),_:1}),l(),oe]),t("td",ne,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[se,t("td",de,[t("a",_e,[l("课程表 II"),e(s)])]),t("td",ie,[t("a",ae,[l("[✓]"),e(s)])]),t("td",ce,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[re]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[he]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ue]),_:1}),l(),fe]),t("td",ge,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[me,t("td",ye,[t("a",pe,[l("以图判树"),e(s)])]),xe,t("td",be,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ke]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[He]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Me]),_:1}),l(),Ie]),t("td",we,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ve,t("td",qe,[t("a",Le,[l("火星词典"),e(s)])]),ze,t("td",Pe,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ee]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Oe]),_:1}),l(),je]),t("td",Ve,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[De,t("td",Je,[t("a",Ke,[l("搜寻名人"),e(s)])]),Ae,t("td",Be,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[Te]),_:1}),l(),e(n,{to:"/outline/tag/interactive.html"},{default:o(()=>[Fe]),_:1})]),t("td",We,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qe,t("td",Re,[t("a",Ue,[l("最小高度树"),e(s)])]),Xe,t("td",Ze,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ge]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ye]),_:1}),l(),$e]),t("td",tl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[el,t("td",ll,[t("a",ol,[l("无向图中连通分量的数目"),e(s)])]),nl,t("td",sl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_l]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[il]),_:1}),l(),al]),t("td",cl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rl,t("td",hl,[t("a",ul,[l("矩阵中的最长递增路径"),e(s)])]),fl,t("td",gl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ml]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[pl]),_:1}),l(),xl]),t("td",bl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kl,t("td",Hl,[t("a",Ml,[l("重新安排行程"),e(s)])]),Il,t("td",wl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[Ll]),_:1})]),t("td",zl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pl,t("td",Cl,[t("a",El,[l("除法求值"),e(s)])]),t("td",Ol,[t("a",jl,[l("[✓]"),e(s)])]),t("td",Vl,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Dl]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Kl]),_:1}),l(),Al]),t("td",Bl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nl,t("td",Tl,[t("a",Fl,[l("序列重建"),e(s)])]),Wl,t("td",Ql,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Rl]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Ul]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Xl]),_:1})]),t("td",Zl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gl,t("td",Sl,[t("a",Yl,[l("迷宫 III"),e(s)])]),$l,t("td",to,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[lo]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[oo]),_:1}),l(),no]),t("td",so,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_o,t("td",io,[t("a",ao,[l("迷宫 II"),e(s)])]),co,t("td",ro,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ho]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[uo]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[fo]),_:1}),l(),go]),t("td",mo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yo,t("td",po,[t("a",xo,[l("省份数量"),e(s)])]),bo,t("td",ko,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ho]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Mo]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Io]),_:1}),l(),wo]),t("td",vo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qo,t("td",Lo,[t("a",zo,[l("设计 Excel 求和公式"),e(s)])]),Po,t("td",Co,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Eo]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Oo]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[jo]),_:1}),l(),Vo]),t("td",Do,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jo,t("td",Ko,[t("a",Ao,[l("冗余连接"),e(s)])]),Bo,t("td",No,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[To]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Wo]),_:1}),l(),Qo]),t("td",Ro,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uo,t("td",Xo,[t("a",Zo,[l("冗余连接 II"),e(s)])]),Go,t("td",So,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Yo]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$o]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[tn]),_:1}),l(),en]),t("td",ln,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[on,t("td",nn,[t("a",sn,[l("网络延迟时间"),e(s)])]),dn,t("td",_n,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[an]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cn]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[rn]),_:1}),l(),hn]),t("td",un,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fn,t("td",gn,[t("a",mn,[l("破解保险箱"),e(s)])]),yn,t("td",pn,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[xn]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[bn]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[kn]),_:1})]),t("td",Hn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mn,t("td",In,[t("a",wn,[l("情侣牵手"),e(s)])]),vn,t("td",qn,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[Ln]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[zn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Pn]),_:1}),l(),Cn]),t("td",En,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[On,t("td",jn,[t("a",Vn,[l("判断二分图"),e(s)])]),Dn,t("td",Jn,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Kn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[An]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Bn]),_:1}),l(),Nn]),t("td",Tn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fn,t("td",Wn,[t("a",Qn,[l("K 站中转内最便宜的航班"),e(s)])]),Rn,t("td",Un,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xn]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Zn]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Gn]),_:1}),l(),Sn]),t("td",Yn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$n,t("td",ts,[t("a",es,[l("所有可能的路径"),e(s)])]),ls,t("td",os,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ns]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ss]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ds]),_:1}),l(),_s]),t("td",is,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[as,t("td",cs,[t("a",rs,[l("找到最终的安全状态"),e(s)])]),hs,t("td",us,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[fs]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[gs]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ms]),_:1}),l(),ys]),t("td",ps,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xs,t("td",bs,[t("a",ks,[l("树中距离之和"),e(s)])]),Hs,t("td",Ms,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Is]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ws]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[vs]),_:1}),l(),qs]),t("td",Ls,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zs,t("td",Ps,[t("a",Cs,[l("钥匙和房间"),e(s)])]),Es,t("td",Os,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[js]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Vs]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ds]),_:1})]),t("td",Js,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ks,t("td",As,[t("a",Bs,[l("访问所有节点的最短路径"),e(s)])]),Ns,t("td",Ts,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Fs]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ws]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Qs]),_:1}),l(),Rs]),t("td",Us,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xs,t("td",Zs,[t("a",Gs,[l("喧闹和富有"),e(s)])]),Ss,t("td",Ys,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[$s]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[td]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[ed]),_:1}),l(),ld]),t("td",od,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nd,t("td",sd,[t("a",dd,[l("细分图中的可到达节点"),e(s)])]),_d,t("td",id,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ad]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[cd]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[rd]),_:1})]),t("td",hd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ud,t("td",fd,[t("a",gd,[l("可能的二分法"),e(s)])]),md,t("td",yd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[pd]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[xd]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[bd]),_:1}),l(),kd]),t("td",Hd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Md,t("td",Id,[t("a",wd,[l("猫和老鼠"),e(s)])]),vd,t("td",qd,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ld]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[zd]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Pd]),_:1}),l(),Cd]),t("td",Ed,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Od,t("td",jd,[t("a",Vd,[l("尽量减少恶意软件的传播"),e(s)])]),Dd,t("td",Jd,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Kd]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ad]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Bd]),_:1}),l(),Nd]),t("td",Td,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fd,t("td",Wd,[t("a",Qd,[l("尽量减少恶意软件的传播 II"),e(s)])]),Rd,t("td",Ud,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Xd]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Zd]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Gd]),_:1}),l(),Sd]),t("td",Yd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$d,t("td",t_,[t("a",e_,[l("移除最多的同行或同列石头"),e(s)])]),l_,t("td",o_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[n_]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[s_]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[d_]),_:1}),l(),__]),t("td",i_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a_,t("td",c_,[t("a",r_,[l("等式方程的可满足性"),e(s)])]),h_,t("td",u_,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[f_]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[g_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[m_]),_:1}),l(),y_]),t("td",p_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x_,t("td",b_,[t("a",k_,[l("找到小镇的法官"),e(s)])]),H_,t("td",M_,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[I_]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[w_]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[v_]),_:1})]),t("td",q_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[L_,t("td",z_,[t("a",P_,[l("不邻接植花"),e(s)])]),C_,t("td",E_,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[O_]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[j_]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[V_]),_:1})]),t("td",D_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J_,t("td",K_,[t("a",A_,[l("从始点到终点的所有路径"),e(s)])]),B_,t("td",N_,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[T_]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[F_]),_:1})]),t("td",W_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q_,t("td",R_,[t("a",U_,[l("颜色交替的最短路径"),e(s)])]),X_,t("td",Z_,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[G_]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[S_]),_:1})]),t("td",Y_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$_,t("td",ti,[t("a",ei,[l("最低成本连通所有城市"),e(s)])]),li,t("td",oi,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[ni]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[si]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[di]),_:1}),l(),_i]),t("td",ii,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ai,t("td",ci,[t("a",ri,[l("并行课程"),e(s)])]),hi,t("td",ui,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[fi]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[gi]),_:1})]),t("td",mi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yi,t("td",pi,[t("a",xi,[l("水资源分配优化"),e(s)])]),bi,t("td",ki,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Hi]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Mi]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Ii]),_:1}),l(),wi]),t("td",vi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qi,t("td",Li,[t("a",zi,[l("查找集群内的关键连接"),e(s)])]),Pi,t("td",Ci,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ei]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[ji]),_:1})]),t("td",Vi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Di,t("td",Ji,[t("a",Ki,[l("项目管理"),e(s)])]),Ai,t("td",Bi,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ni]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ti]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Fi]),_:1}),l(),Wi]),t("td",Qi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ri,t("td",Ui,[t("a",Xi,[l("树的直径"),e(s)])]),Zi,t("td",Gi,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Si]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Yi]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$i]),_:1}),l(),ta]),t("td",ea,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[la,t("td",oa,[t("a",na,[l("你能从盒子里获得的最大糖果数"),e(s)])]),sa,t("td",da,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[_a]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ia]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[aa]),_:1})]),t("td",ca,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ra,t("td",ha,[t("a",ua,[l("获取你好友已观看的视频"),e(s)])]),fa,t("td",ga,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ma]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ya]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[pa]),_:1}),l(),xa]),t("td",ba,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ka,t("td",Ha,[t("a",Ma,[l("连通网络的操作次数"),e(s)])]),Ia,t("td",wa,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[va]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[qa]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[La]),_:1}),l(),za]),t("td",Pa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ca,t("td",Ea,[t("a",Oa,[l("阈值距离内邻居最少的城市"),e(s)])]),ja,t("td",Va,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Da]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ja]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[Ka]),_:1})]),t("td",Aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ba,t("td",Na,[t("a",Ta,[l("验证二叉树"),e(s)])]),Fa,t("td",Wa,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Qa]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ra]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ua]),_:1}),l(),Xa]),t("td",Za,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ga,t("td",Sa,[t("a",Ya,[l("使网格图至少有一条有效路径的最小代价"),e(s)])]),$a,t("td",tc,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[ec]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[lc]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[oc]),_:1}),l(),nc]),t("td",sc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dc,t("td",_c,[t("a",ic,[l("T 秒后青蛙的位置"),e(s)])]),ac,t("td",cc,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[rc]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[hc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[uc]),_:1}),l(),fc]),t("td",gc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mc,t("td",yc,[t("a",pc,[l("课程表 IV"),e(s)])]),xc,t("td",bc,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Hc]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Mc]),_:1}),l(),Ic]),t("td",wc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vc,t("td",qc,[t("a",Lc,[l("重新规划路线"),e(s)])]),zc,t("td",Pc,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Cc]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Oc]),_:1})]),t("td",jc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vc,t("td",Dc,[t("a",Jc,[l("找到最小生成树里的关键边和伪关键边"),e(s)])]),Kc,t("td",Ac,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Bc]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Nc]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Tc]),_:1}),l(),Fc]),t("td",Wc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qc,t("td",Rc,[t("a",Uc,[l("并行课程 II"),e(s)])]),Xc,t("td",Zc,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[Gc]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Sc]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Yc]),_:1}),l(),$c]),t("td",tr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[er,t("td",lr,[t("a",or,[l("概率最大的路径"),e(s)])]),nr,t("td",sr,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[dr]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_r]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[ir]),_:1}),l(),ar]),t("td",cr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rr,t("td",hr,[t("a",ur,[l("图中最相似的路径"),e(s)])]),fr,t("td",gr,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[mr]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[yr]),_:1})]),t("td",pr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xr,t("td",br,[t("a",kr,[l("可以到达所有点的最少点数目"),e(s)])]),Hr,t("td",Mr,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ir]),_:1})]),t("td",wr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vr,t("td",qr,[t("a",Lr,[l("保证图可完全遍历"),e(s)])]),zr,t("td",Pr,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Cr]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Er]),_:1})]),t("td",Or,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jr,t("td",Vr,[t("a",Dr,[l("连接所有点的最小费用"),e(s)])]),Jr,t("td",Kr,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ar]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Br]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Nr]),_:1}),l(),Tr]),t("td",Fr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wr,t("td",Qr,[t("a",Rr,[l("奇怪的打印机 II"),e(s)])]),Ur,t("td",Xr,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Zr]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Gr]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Sr]),_:1}),l(),Yr]),t("td",$r,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[th,t("td",eh,[t("a",lh,[l("最大网络秩"),e(s)])]),oh,t("td",nh,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[sh]),_:1})]),t("td",dh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_h,t("td",ih,[t("a",ah,[l("矩阵转换后的秩"),e(s)])]),ch,t("td",rh,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[hh]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[uh]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[fh]),_:1}),l(),gh]),t("td",mh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yh,t("td",ph,[t("a",xh,[l("检查边长度限制的路径是否存在"),e(s)])]),bh,t("td",kh,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Hh]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Mh]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ih]),_:1}),l(),wh]),t("td",vh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qh,t("td",Lh,[t("a",zh,[l("重构一棵树的方案数"),e(s)])]),Ph,t("td",Ch,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Eh]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Oh]),_:1})]),t("td",jh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vh,t("td",Dh,[t("a",Jh,[l("检查边长度限制的路径是否存在 II"),e(s)])]),Kh,t("td",Ah,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Bh]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Nh]),_:1}),l(),e(n,{to:"/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Th]),_:1})]),t("td",Fh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wh,t("td",Qh,[t("a",Rh,[l("猫和老鼠 II"),e(s)])]),Uh,t("td",Xh,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Zh]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Gh]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[Sh]),_:1}),l(),Yh]),t("td",$h,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t1,t("td",e1,[t("a",l1,[l("一个图中连通三元组的最小度数"),e(s)])]),o1,t("td",n1,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[s1]),_:1})]),t("td",d1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_1,t("td",i1,[t("a",a1,[l("未知网格中的最短路径"),e(s)])]),c1,t("td",r1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[h1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[u1]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[f1]),_:1}),l(),g1]),t("td",m1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y1,t("td",p1,[t("a",x1,[l("统计点对的数目"),e(s)])]),b1,t("td",k1,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[H1]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[M1]),_:1}),l(),e(n,{to:"/outline/tag/two-pointers.html"},{default:o(()=>[I1]),_:1}),l(),w1]),t("td",v1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[q1,t("td",L1,[t("a",z1,[l("从第一个节点出发到最后一个节点的受限路径数"),e(s)])]),P1,t("td",C1,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[E1]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[O1]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[j1]),_:1}),l(),V1]),t("td",D1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J1,t("td",K1,[t("a",A1,[l("找出星型图的中心节点"),e(s)])]),B1,t("td",N1,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[T1]),_:1})]),t("td",F1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[W1,t("td",Q1,[t("a",R1,[l("隐藏网格下的最小消耗路径"),e(s)])]),U1,t("td",X1,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Z1]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[G1]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[S1]),_:1}),l(),Y1]),t("td",$1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tu,t("td",eu,[t("a",lu,[l("最多邀请的个数"),e(s)])]),ou,t("td",nu,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[su]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[du]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[_u]),_:1}),l(),iu]),t("td",au,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cu,t("td",ru,[t("a",hu,[l("有向图中最大颜色值"),e(s)])]),uu,t("td",fu,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[gu]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[mu]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[yu]),_:1}),l(),pu]),t("td",xu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bu,t("td",ku,[t("a",Hu,[l("统计为蚁群构筑房间的不同顺序"),e(s)])]),Mu,t("td",Iu,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[wu]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[vu]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[qu]),_:1}),l(),Lu]),t("td",zu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pu,t("td",Cu,[t("a",Eu,[l("规定时间内到达终点的最小花费"),e(s)])]),Ou,t("td",ju,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Vu]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Du]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[Ju]),_:1})]),t("td",Ku,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Au,t("td",Bu,[t("a",Nu,[l("寻找图中是否存在路径"),e(s)])]),Tu,t("td",Fu,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Wu]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Qu]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ru]),_:1}),l(),Uu]),t("td",Xu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zu,t("td",Gu,[t("a",Su,[l("到达目的地的方案数"),e(s)])]),Yu,t("td",$u,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[tf]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[ef]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[lf]),_:1}),l(),of]),t("td",nf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sf,t("td",df,[t("a",_f,[l("网络空闲的时刻"),e(s)])]),af,t("td",cf,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[rf]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[hf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[uf]),_:1})]),t("td",ff,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gf,t("td",mf,[t("a",yf,[l("到达目的地的第二短时间"),e(s)])]),pf,t("td",xf,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[bf]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[kf]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[Hf]),_:1})]),t("td",Mf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[If,t("td",wf,[t("a",vf,[l("并行课程 III"),e(s)])]),qf,t("td",Lf,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[zf]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Pf]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Cf]),_:1}),l(),Ef]),t("td",Of,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jf,t("td",Vf,[t("a",Df,[l("最大化一张图中的路径价值"),e(s)])]),Jf,t("td",Kf,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Af]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Bf]),_:1}),l(),e(n,{to:"/outline/tag/backtracking.html"},{default:o(()=>[Nf]),_:1})]),t("td",Tf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ff,t("td",Wf,[t("a",Qf,[l("处理含限制条件的好友请求"),e(s)])]),Rf,t("td",Uf,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Xf]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Zf]),_:1})]),t("td",Gf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sf,t("td",Yf,[t("a",$f,[l("殊途同归"),e(s)])]),tg,t("td",eg,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[lg]),_:1})]),t("td",og,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ng,t("td",sg,[t("a",dg,[l("找出知晓秘密的所有专家"),e(s)])]),_g,t("td",ig,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ag]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[cg]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[rg]),_:1}),l(),hg]),t("td",ug,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fg,t("td",gg,[t("a",mg,[l("前往目标城市的最小费用"),e(s)])]),yg,t("td",pg,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[xg]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[bg]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[kg]),_:1})]),t("td",Hg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mg,t("td",Ig,[t("a",wg,[l("合法重新排列数对"),e(s)])]),vg,t("td",qg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Lg]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[zg]),_:1}),l(),e(n,{to:"/outline/tag/eulerian-circuit.html"},{default:o(()=>[Pg]),_:1})]),t("td",Cg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Eg,t("td",Og,[t("a",jg,[l("引爆最多的炸弹"),e(s)])]),Vg,t("td",Dg,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Jg]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Kg]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ag]),_:1}),l(),Bg]),t("td",Ng,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tg,t("td",Fg,[t("a",Wg,[l("从给定原材料中找到所有可以做出的菜"),e(s)])]),Qg,t("td",Rg,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ug]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Xg]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Zg]),_:1}),l(),Gg]),t("td",Sg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yg,t("td",$g,[t("a",tm,[l("使矩阵中的 1 互不相邻的最小操作数"),e(s)])]),em,t("td",lm,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[om]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[nm]),_:1}),l(),e(n,{to:"/outline/tag/matrix.html"},{default:o(()=>[sm]),_:1})]),t("td",dm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_m,t("td",im,[t("a",am,[l("参加会议的最多员工数"),e(s)])]),cm,t("td",rm,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[hm]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[um]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[fm]),_:1})]),t("td",gm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mm,t("td",ym,[t("a",pm,[l("有向无环图中一个节点的所有祖先"),e(s)])]),xm,t("td",bm,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[km]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Hm]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Mm]),_:1}),l(),Im]),t("td",wm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vm,t("td",qm,[t("a",Lm,[l("得到要求路径的最小带权子图"),e(s)])]),zm,t("td",Pm,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Cm]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[Em]),_:1})]),t("td",Om,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jm,t("td",Vm,[t("a",Dm,[l("无向图中到环的距离"),e(s)])]),Jm,t("td",Km,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Am]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Bm]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Nm]),_:1}),l(),Tm]),t("td",Fm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wm,t("td",Qm,[t("a",Rm,[l("节点序列的最大得分"),e(s)])]),Um,t("td",Xm,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Zm]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Gm]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[Sm]),_:1}),l(),Ym]),t("td",$m,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ty,t("td",ey,[t("a",ly,[l("相邻字符不同的最长路径"),e(s)])]),oy,t("td",ny,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[sy]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[dy]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[_y]),_:1}),l(),iy]),t("td",ay,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cy,t("td",ry,[t("a",hy,[l("K 条高速公路的最大旅行费用"),e(s)])]),uy,t("td",fy,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[gy]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[my]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[yy]),_:1}),l(),py]),t("td",xy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[by,t("td",ky,[t("a",Hy,[l("道路的最大总重要性"),e(s)])]),My,t("td",Iy,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[wy]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[vy]),_:1}),l(),e(n,{to:"/outline/tag/sorting.html"},{default:o(()=>[qy]),_:1}),l(),Ly]),t("td",zy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Py,t("td",Cy,[t("a",Ey,[l("到达角落需要移除障碍物的最小数目"),e(s)])]),Oy,t("td",jy,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Vy]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Dy]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Jy]),_:1}),l(),Ky]),t("td",Ay,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[By,t("td",Ny,[t("a",Ty,[l("跳跃游戏 VIII"),e(s)])]),Fy,t("td",Wy,[e(n,{to:"/outline/tag/stack.html"},{default:o(()=>[Qy]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ry]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Uy]),_:1}),l(),Xy]),t("td",Zy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gy,t("td",Sy,[t("a",Yy,[l("检查方程中的矛盾之处"),e(s)])]),$y,t("td",tp,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[ep]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[lp]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[op]),_:1}),l(),np]),t("td",sp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dp,t("td",_p,[t("a",ip,[l("统计无向图中无法互相到达点对数"),e(s)])]),ap,t("td",cp,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[rp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[hp]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[up]),_:1}),l(),fp]),t("td",gp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mp,t("td",yp,[t("a",pp,[l("网格图中递增路径的数目"),e(s)])]),xp,t("td",bp,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[kp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Hp]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Mp]),_:1}),l(),Ip]),t("td",wp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vp,t("td",qp,[t("a",Lp,[l("找到离给定两个节点最近的节点"),e(s)])]),zp,t("td",Pp,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Cp]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ep]),_:1})]),t("td",Op,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jp,t("td",Vp,[t("a",Dp,[l("图中的最长环"),e(s)])]),Jp,t("td",Kp,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Ap]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Bp]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Np]),_:1})]),t("td",Tp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fp,t("td",Wp,[t("a",Qp,[l("受限条件下可到达节点的数目"),e(s)])]),Rp,t("td",Up,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Xp]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Zp]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Gp]),_:1}),l(),Sp]),t("td",Yp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$p,t("td",tx,[t("a",ex,[l("最小化网格中的最大值"),e(s)])]),lx,t("td",ox,[e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[nx]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[sx]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[dx]),_:1}),l(),_x]),t("td",ix,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ax,t("td",cx,[t("a",rx,[l("边积分最高的节点"),e(s)])]),hx,t("td",ux,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[fx]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[gx]),_:1})]),t("td",mx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yx,t("td",px,[t("a",xx,[l("给定条件下构造矩阵"),e(s)])]),bx,t("td",kx,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Hx]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Mx]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Ix]),_:1}),l(),wx]),t("td",vx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qx,t("td",Lx,[t("a",zx,[l("好路径的数目"),e(s)])]),Px,t("td",Cx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Ex]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[Ox]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[jx]),_:1}),l(),Vx]),t("td",Dx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jx,t("td",Kx,[t("a",Ax,[l("树上最大得分和路径"),e(s)])]),Bx,t("td",Nx,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Tx]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Fx]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Wx]),_:1}),l(),Qx]),t("td",Rx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ux,t("td",Xx,[t("a",Zx,[l("购买苹果的最低成本"),e(s)])]),Gx,t("td",Sx,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Yx]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[$x]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[t3]),_:1}),l(),e3]),t("td",l3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o3,t("td",n3,[t("a",s3,[l("到达首都的最少油耗"),e(s)])]),d3,t("td",_3,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[i3]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[a3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[c3]),_:1}),l(),r3]),t("td",h3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u3,t("td",f3,[t("a",g3,[l("两个不重叠子树的最大异或值"),e(s)])]),m3,t("td",y3,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[p3]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[x3]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[b3]),_:1}),l(),k3]),t("td",H3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[M3,t("td",I3,[t("a",w3,[l("两个城市间路径的最小分数"),e(s)])]),v3,t("td",q3,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[L3]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[z3]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[P3]),_:1}),l(),C3]),t("td",E3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O3,t("td",j3,[t("a",V3,[l("将节点分成尽可能多的组"),e(s)])]),D3,t("td",J3,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[K3]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[A3]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[B3]),_:1})]),t("td",N3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T3,t("td",F3,[t("a",W3,[l("图中最大星和"),e(s)])]),Q3,t("td",R3,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[U3]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[X3]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Z3]),_:1}),l(),G3]),t("td",S3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y3,t("td",$3,[t("a",tb,[l("添加边使所有节点度数都为偶数"),e(s)])]),eb,t("td",lb,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[ob]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[nb]),_:1})]),t("td",sb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[db,t("td",_b,[t("a",ib,[l("在网格图中访问一个格子的最少时间"),e(s)])]),ab,t("td",cb,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[rb]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[hb]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[ub]),_:1}),l(),fb]),t("td",gb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mb,t("td",yb,[t("a",pb,[l("收集树中金币"),e(s)])]),xb,t("td",bb,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[kb]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Hb]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[Mb]),_:1}),l(),Ib]),t("td",wb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vb,t("td",qb,[t("a",Lb,[l("图中的最短环"),e(s)])]),zb,t("td",Pb,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[Cb]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Eb]),_:1})]),t("td",Ob,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jb,t("td",Vb,[t("a",Db,[l("设计可以求最短路径的图类"),e(s)])]),Jb,t("td",Kb,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Ab]),_:1}),l(),e(n,{to:"/outline/tag/design.html"},{default:o(()=>[Bb]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[Nb]),_:1}),l(),Tb]),t("td",Fb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wb,t("td",Qb,[t("a",Rb,[l("最小化旅行的价格总和"),e(s)])]),Ub,t("td",Xb,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Zb]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Gb]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Sb]),_:1}),l(),Yb]),t("td",$b,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t4,t("td",e4,[t("a",l4,[l("前往目标的最小代价"),e(s)])]),o4,t("td",n4,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[s4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[d4]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[_4]),_:1}),l(),i4]),t("td",a4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c4,t("td",r4,[t("a",h4,[l("统计完全连通分量的数量"),e(s)])]),u4,t("td",f4,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[g4]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[m4]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[y4]),_:1})]),t("td",p4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x4,t("td",b4,[t("a",k4,[l("修改图中的边权"),e(s)])]),H4,t("td",M4,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[I4]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[w4]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[v4]),_:1})]),t("td",q4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L4,t("td",z4,[t("a",P4,[l("找到 K 次跨越的最短路径"),e(s)])]),C4,t("td",E4,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[O4]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[j4]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[V4]),_:1})]),t("td",D4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J4,t("td",K4,[t("a",A4,[l("找到最近的标记节点"),e(s)])]),B4,t("td",N4,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[T4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[F4]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[W4]),_:1}),l(),Q4]),t("td",R4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U4,t("td",X4,[t("a",Z4,[l("边权重均等查询"),e(s)])]),G4,t("td",S4,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[Y4]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[$4]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[t2]),_:1}),l(),e2]),t("td",l2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o2,t("td",n2,[t("a",s2,[l("可以到达每一个节点的最少边反转次数"),e(s)])]),d2,t("td",_2,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[i2]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[a2]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[c2]),_:1}),l(),r2]),t("td",h2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[u2,t("td",f2,[t("a",g2,[l("有向图访问计数"),e(s)])]),m2,t("td",y2,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[p2]),_:1}),l(),e(n,{to:"/outline/tag/memoization.html"},{default:o(()=>[x2]),_:1}),l(),e(n,{to:"/outline/tag/dynamic-programming.html"},{default:o(()=>[b2]),_:1})]),t("td",k2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H2,t("td",M2,[t("a",I2,[l("找到冠军 II"),e(s)])]),w2,t("td",v2,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[q2]),_:1})]),t("td",L2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z2,t("td",P2,[t("a",C2,[l("关闭分部的可行集合数目"),e(s)])]),E2,t("td",O2,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[j2]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[V2]),_:1}),l(),e(n,{to:"/outline/tag/enumeration.html"},{default:o(()=>[D2]),_:1}),l(),J2]),t("td",K2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A2,t("td",B2,[t("a",N2,[l("转换字符串的最小成本 I"),e(s)])]),T2,t("td",F2,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[W2]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[Q2]),_:1}),l(),e(n,{to:"/outline/tag/string.html"},{default:o(()=>[R2]),_:1}),l(),U2]),t("td",X2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z2,t("td",G2,[t("a",S2,[l("转换字符串的最小成本 II"),e(s)])]),Y2,t("td",$2,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[t0]),_:1}),l(),e(n,{to:"/outline/tag/trie.html"},{default:o(()=>[e0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[l0]),_:1}),l(),o0]),t("td",n0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[s0,t("td",d0,[t("a",_0,[l("按距离统计房屋对数目 I"),e(s)])]),i0,t("td",a0,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[c0]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[r0]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[h0]),_:1})]),t("td",u0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f0,t("td",g0,[t("a",m0,[l("按距离统计房屋对数目 II"),e(s)])]),y0,t("td",p0,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[x0]),_:1}),l(),e(n,{to:"/outline/tag/prefix-sum.html"},{default:o(()=>[b0]),_:1})]),t("td",k0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H0,t("td",M0,[t("a",I0,[l("带权图里旅途的最小代价"),e(s)])]),w0,t("td",v0,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[q0]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[L0]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[z0]),_:1}),l(),P0]),t("td",C0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E0,t("td",O0,[t("a",j0,[l("访问消失节点的最少时间"),e(s)])]),V0,t("td",D0,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[J0]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[K0]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[A0]),_:1}),l(),B0]),t("td",N0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T0,t("td",F0,[t("a",W0,[l("最短路径中的边"),e(s)])]),Q0,t("td",R0,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[U0]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X0]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Z0]),_:1}),l(),G0]),t("td",S0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y0,t("td",$0,[t("a",t6,[l("合并两棵树后的最小直径"),e(s)])]),e6,t("td",l6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[o6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[n6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[s6]),_:1}),l(),d6]),t("td",_6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i6,t("td",a6,[t("a",c6,[l("标记所有节点需要的时间"),e(s)])]),r6,t("td",h6,[e(n,{to:"/outline/tag/tree.html"},{default:o(()=>[u6]),_:1}),l(),e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[f6]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[g6]),_:1}),l(),m6]),t("td",y6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p6,t("td",x6,[t("a",b6,[l("新增道路查询后的最短距离 I"),e(s)])]),k6,t("td",H6,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[M6]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[I6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[w6]),_:1})]),t("td",v6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q6,t("td",L6,[t("a",z6,[l("新增道路查询后的最短距离 II"),e(s)])]),P6,t("td",C6,[e(n,{to:"/outline/tag/greedy.html"},{default:o(()=>[E6]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[O6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[j6]),_:1}),l(),V6]),t("td",D6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J6,t("td",K6,[t("a",A6,[l("穿越网格图的安全路径"),e(s)])]),B6,t("td",N6,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[T6]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[F6]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[W6]),_:1}),l(),Q6]),t("td",R6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U6,t("td",X6,[t("a",Z6,[l("移除可疑的方法"),e(s)])]),G6,t("td",S6,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Y6]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$6]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[t5]),_:1})]),t("td",e5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l5,t("td",o5,[t("a",n5,[l("构造符合图结构的二维矩阵"),e(s)])]),s5,t("td",d5,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[_5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[i5]),_:1}),l(),e(n,{to:"/outline/tag/hash-table.html"},{default:o(()=>[a5]),_:1}),l(),c5]),t("td",r5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[h5,t("td",u5,[t("a",f5,[l("覆盖"),e(s)])]),g5,t("td",m5,[e(n,{to:"/outline/tag/bit-manipulation.html"},{default:o(()=>[y5]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[p5]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[x5]),_:1}),l(),b5]),t("td",k5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H5,t("td",M5,[t("a",I5,[l("传递信息"),e(s)])]),w5,t("td",v5,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[q5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[L5]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[z5]),_:1}),l(),P5]),t("td",C5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[E5,t("td",O5,[t("a",j5,[l("游乐园的游览计划"),e(s)])]),V5,t("td",D5,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[J5]),_:1}),l(),e(n,{to:"/outline/tag/geometry.html"},{default:o(()=>[K5]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[A5]),_:1})]),t("td",B5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[N5,t("td",T5,[t("a",F5,[l("追逐游戏"),e(s)])]),W5,t("td",Q5,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[R5]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[U5]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[X5]),_:1}),l(),Z5]),t("td",G5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[S5,t("td",Y5,[t("a",$5,[l("电动车游城市"),e(s)])]),t8,t("td",e8,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[l8]),_:1}),l(),e(n,{to:"/outline/tag/shortest-path.html"},{default:o(()=>[o8]),_:1}),l(),e(n,{to:"/outline/tag/heap-priority-queue.html"},{default:o(()=>[n8]),_:1})]),t("td",s8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d8,t("td",_8,[t("a",i8,[l("志愿者调配"),e(s)])]),a8,t("td",c8,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[r8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[h8]),_:1}),l(),e(n,{to:"/outline/tag/math.html"},{default:o(()=>[u8]),_:1})]),t("td",f8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g8,t("td",m8,[t("a",y8,[l("夺回据点"),e(s)])]),p8,t("td",x8,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[b8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[k8]),_:1}),l(),e(n,{to:"/outline/tag/biconnected-component.html"},{default:o(()=>[H8]),_:1})]),t("td",M8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[I8,t("td",w8,[t("a",v8,[l("信物传送"),e(s)])]),q8,t("td",L8,[e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[z8]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[P8]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[C8]),_:1}),l(),E8]),t("td",O8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j8,t("td",V8,[t("a",D8,[l("交通枢纽"),e(s)])]),J8,t("td",K8,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[A8]),_:1})]),t("td",B8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N8,t("td",T8,[t("a",F8,[l("弹珠游戏"),e(s)])]),W8,t("td",Q8,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[R8]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[U8]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[X8]),_:1}),l(),Z8]),t("td",G8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S8,t("td",Y8,[t("a",$8,[l("二分图"),e(s)])]),t7,t("td",e7,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[l7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[o7]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[n7]),_:1}),l(),s7]),t("td",d7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_7,t("td",i7,[t("a",a7,[l("所有路径"),e(s)])]),c7,t("td",r7,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[h7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[u7]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[f7]),_:1}),l(),g7]),t("td",m7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y7,t("td",p7,[t("a",x7,[l("计算除法"),e(s)])]),b7,t("td",k7,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[H7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[M7]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[I7]),_:1}),l(),w7]),t("td",v7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q7,t("td",L7,[t("a",z7,[l("最长递增路径"),e(s)])]),P7,t("td",C7,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[E7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[O7]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[j7]),_:1}),l(),V7]),t("td",D7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J7,t("td",K7,[t("a",A7,[l("课程顺序"),e(s)])]),B7,t("td",N7,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[T7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[F7]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[W7]),_:1}),l(),Q7]),t("td",R7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U7,t("td",X7,[t("a",Z7,[l("外星文字典"),e(s)])]),G7,t("td",S7,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[Y7]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[$7]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[t9]),_:1}),l(),e9]),t("td",l9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o9,t("td",n9,[t("a",s9,[l("重建序列"),e(s)])]),d9,t("td",_9,[e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[i9]),_:1}),l(),e(n,{to:"/outline/tag/topological-sort.html"},{default:o(()=>[a9]),_:1}),l(),e(n,{to:"/outline/tag/array.html"},{default:o(()=>[c9]),_:1})]),t("td",r9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h9,t("td",u9,[t("a",f9,[l("省份数量"),e(s)])]),g9,t("td",m9,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[y9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[p9]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[x9]),_:1}),l(),b9]),t("td",k9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H9,t("td",M9,[t("a",I9,[l("多余的边"),e(s)])]),w9,t("td",v9,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[q9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[L9]),_:1}),l(),e(n,{to:"/outline/tag/union-find.html"},{default:o(()=>[z9]),_:1}),l(),P9]),t("td",C9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E9,t("td",O9,[t("a",j9,[l("分割回文子字符串"),e(s)])]),V9,t("td",D9,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[J9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[K9]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[A9]),_:1}),l(),B9]),t("td",N9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T9,t("td",F9,[t("a",W9,[l("节点间通路"),e(s)])]),Q9,t("td",R9,[e(n,{to:"/outline/tag/depth-first-search.html"},{default:o(()=>[U9]),_:1}),l(),e(n,{to:"/outline/tag/breadth-first-search.html"},{default:o(()=>[X9]),_:1}),l(),e(n,{to:"/outline/tag/graph.html"},{default:o(()=>[Z9]),_:1})]),t("td",G9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const ek=i(h,[["render",S9],["__file","graph.html.vue"]]);export{ek as default};
